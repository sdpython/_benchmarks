<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2486" onload="init(evt)" viewBox="0 0 1200 2486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2486" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2469.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2469.00"> </text><g id="frames"><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(209,67,31)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(226,197,19)"/><text x="13.00" y="926.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.33%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(224,90,6)"/><text x="13.00" y="942.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(216,68,21)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(216,83,1)"/><text x="13.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="13" y="900" width="4" height="15" fill="rgb(209,97,10)"/><text x="16.00" y="910.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="17" y="932" width="4" height="15" fill="rgb(205,221,17)"/><text x="20.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="17" y="948" width="4" height="15" fill="rgb(239,211,54)"/><text x="20.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="17" y="964" width="4" height="15" fill="rgb(228,12,2)"/><text x="20.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.31%)</title><rect x="10" y="292" width="15" height="15" fill="rgb(205,6,30)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="308" width="15" height="15" fill="rgb(228,193,2)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="324" width="15" height="15" fill="rgb(251,76,25)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="340" width="15" height="15" fill="rgb(242,161,52)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.31%)</title><rect x="10" y="356" width="15" height="15" fill="rgb(247,50,7)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="372" width="15" height="15" fill="rgb(244,118,42)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.31%)</title><rect x="10" y="388" width="15" height="15" fill="rgb(250,145,2)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="404" width="15" height="15" fill="rgb(252,19,27)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="420" width="15" height="15" fill="rgb(215,97,15)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="436" width="15" height="15" fill="rgb(219,172,41)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.31%)</title><rect x="10" y="452" width="15" height="15" fill="rgb(211,197,33)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="468" width="15" height="15" fill="rgb(252,151,38)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.31%)</title><rect x="10" y="484" width="15" height="15" fill="rgb(239,145,47)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="500" width="15" height="15" fill="rgb(228,81,29)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="516" width="15" height="15" fill="rgb(217,61,49)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="532" width="15" height="15" fill="rgb(231,134,43)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.31%)</title><rect x="10" y="548" width="15" height="15" fill="rgb(211,213,15)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="564" width="15" height="15" fill="rgb(230,161,29)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.31%)</title><rect x="10" y="580" width="15" height="15" fill="rgb(216,9,22)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="596" width="15" height="15" fill="rgb(214,57,39)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="612" width="15" height="15" fill="rgb(254,112,54)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="628" width="15" height="15" fill="rgb(243,204,39)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="644" width="15" height="15" fill="rgb(225,43,10)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="660" width="15" height="15" fill="rgb(214,20,49)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="676" width="15" height="15" fill="rgb(229,53,29)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.31%)</title><rect x="10" y="692" width="15" height="15" fill="rgb(238,217,40)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="708" width="15" height="15" fill="rgb(225,3,11)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.31%)</title><rect x="10" y="724" width="15" height="15" fill="rgb(246,19,51)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="740" width="15" height="15" fill="rgb(209,165,4)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="756" width="15" height="15" fill="rgb(246,215,24)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="772" width="15" height="15" fill="rgb(235,8,38)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.31%)</title><rect x="10" y="788" width="15" height="15" fill="rgb(230,220,44)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="804" width="15" height="15" fill="rgb(217,198,11)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.31%)</title><rect x="10" y="820" width="15" height="15" fill="rgb(234,103,12)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.31%)</title><rect x="10" y="836" width="15" height="15" fill="rgb(224,122,29)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.31%)</title><rect x="10" y="852" width="15" height="15" fill="rgb(245,151,1)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="17" y="868" width="8" height="15" fill="rgb(226,150,30)"/><text x="20.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="17" y="884" width="8" height="15" fill="rgb(232,180,3)"/><text x="20.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="17" y="900" width="8" height="15" fill="rgb(245,82,41)"/><text x="20.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="17" y="916" width="8" height="15" fill="rgb(245,72,29)"/><text x="20.00" y="926.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.33%)</title><rect x="21" y="932" width="4" height="15" fill="rgb(245,123,45)"/><text x="24.00" y="942.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.33%)</title><rect x="21" y="948" width="4" height="15" fill="rgb(244,56,24)"/><text x="24.00" y="958.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.33%)</title><rect x="21" y="964" width="4" height="15" fill="rgb(221,104,37)"/><text x="24.00" y="974.50"></text></g><g><title>0x7f754ea65279 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="21" y="980" width="4" height="15" fill="rgb(219,163,41)"/><text x="24.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.65%)</title><rect x="25" y="1028" width="8" height="15" fill="rgb(213,97,15)"/><text x="28.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.65%)</title><rect x="25" y="1044" width="8" height="15" fill="rgb(234,155,20)"/><text x="28.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="29" y="1060" width="4" height="15" fill="rgb(243,96,51)"/><text x="32.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.33%)</title><rect x="29" y="1076" width="4" height="15" fill="rgb(211,30,5)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="196" width="26" height="15" fill="rgb(241,175,27)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="212" width="26" height="15" fill="rgb(237,207,37)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="228" width="26" height="15" fill="rgb(224,222,27)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="244" width="26" height="15" fill="rgb(246,214,13)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.29%)</title><rect x="10" y="260" width="26" height="15" fill="rgb(214,195,15)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="276" width="26" height="15" fill="rgb(247,159,42)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.98%)</title><rect x="25" y="292" width="11" height="15" fill="rgb(235,115,34)"/><text x="28.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="308" width="11" height="15" fill="rgb(254,180,38)"/><text x="28.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="324" width="11" height="15" fill="rgb(234,124,49)"/><text x="28.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="340" width="11" height="15" fill="rgb(219,103,18)"/><text x="28.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="25" y="356" width="11" height="15" fill="rgb(221,133,44)"/><text x="28.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="372" width="11" height="15" fill="rgb(250,90,9)"/><text x="28.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.98%)</title><rect x="25" y="388" width="11" height="15" fill="rgb(238,84,20)"/><text x="28.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="404" width="11" height="15" fill="rgb(245,119,44)"/><text x="28.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="420" width="11" height="15" fill="rgb(228,19,9)"/><text x="28.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="436" width="11" height="15" fill="rgb(222,139,28)"/><text x="28.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="25" y="452" width="11" height="15" fill="rgb(221,70,52)"/><text x="28.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="468" width="11" height="15" fill="rgb(225,196,37)"/><text x="28.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.98%)</title><rect x="25" y="484" width="11" height="15" fill="rgb(211,183,38)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="500" width="11" height="15" fill="rgb(229,11,20)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="516" width="11" height="15" fill="rgb(207,43,1)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="532" width="11" height="15" fill="rgb(222,130,14)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="25" y="548" width="11" height="15" fill="rgb(220,35,7)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="564" width="11" height="15" fill="rgb(209,210,28)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 0.98%)</title><rect x="25" y="580" width="11" height="15" fill="rgb(246,66,23)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="596" width="11" height="15" fill="rgb(243,102,26)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="612" width="11" height="15" fill="rgb(224,57,5)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="628" width="11" height="15" fill="rgb(212,147,3)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="25" y="644" width="11" height="15" fill="rgb(225,127,6)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="660" width="11" height="15" fill="rgb(226,168,15)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 0.98%)</title><rect x="25" y="676" width="11" height="15" fill="rgb(250,188,11)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="692" width="11" height="15" fill="rgb(223,172,8)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="708" width="11" height="15" fill="rgb(252,83,43)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="724" width="11" height="15" fill="rgb(237,157,43)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="25" y="740" width="11" height="15" fill="rgb(218,48,46)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="756" width="11" height="15" fill="rgb(215,31,1)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 0.98%)</title><rect x="25" y="772" width="11" height="15" fill="rgb(226,129,8)"/><text x="28.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="788" width="11" height="15" fill="rgb(233,218,44)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="804" width="11" height="15" fill="rgb(242,20,44)"/><text x="28.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="820" width="11" height="15" fill="rgb(242,186,50)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="836" width="11" height="15" fill="rgb(211,98,40)"/><text x="28.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="852" width="11" height="15" fill="rgb(244,135,43)"/><text x="28.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="25" y="868" width="11" height="15" fill="rgb(231,164,20)"/><text x="28.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="884" width="11" height="15" fill="rgb(210,77,36)"/><text x="28.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 0.98%)</title><rect x="25" y="900" width="11" height="15" fill="rgb(238,184,45)"/><text x="28.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="916" width="11" height="15" fill="rgb(238,162,5)"/><text x="28.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="932" width="11" height="15" fill="rgb(209,205,34)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="948" width="11" height="15" fill="rgb(233,39,16)"/><text x="28.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="964" width="11" height="15" fill="rgb(211,98,41)"/><text x="28.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="980" width="11" height="15" fill="rgb(207,139,8)"/><text x="28.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="25" y="996" width="11" height="15" fill="rgb(227,19,32)"/><text x="28.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1012" width="11" height="15" fill="rgb(215,52,37)"/><text x="28.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py) (1 samples, 0.33%)</title><rect x="33" y="1028" width="3" height="15" fill="rgb(210,24,31)"/><text x="36.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="33" y="1044" width="3" height="15" fill="rgb(217,142,45)"/><text x="36.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="33" y="1060" width="3" height="15" fill="rgb(236,84,25)"/><text x="36.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1124" width="4" height="15" fill="rgb(243,77,12)"/><text x="39.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1140" width="4" height="15" fill="rgb(248,165,49)"/><text x="39.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1156" width="4" height="15" fill="rgb(228,197,44)"/><text x="39.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="1172" width="4" height="15" fill="rgb(245,120,44)"/><text x="39.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1188" width="4" height="15" fill="rgb(221,64,7)"/><text x="39.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.33%)</title><rect x="36" y="1204" width="4" height="15" fill="rgb(248,159,21)"/><text x="39.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1220" width="4" height="15" fill="rgb(213,207,47)"/><text x="39.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1236" width="4" height="15" fill="rgb(241,192,5)"/><text x="39.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1252" width="4" height="15" fill="rgb(235,129,41)"/><text x="39.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="1268" width="4" height="15" fill="rgb(212,14,32)"/><text x="39.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1284" width="4" height="15" fill="rgb(243,157,41)"/><text x="39.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.33%)</title><rect x="36" y="1300" width="4" height="15" fill="rgb(215,100,38)"/><text x="39.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.33%)</title><rect x="36" y="1316" width="4" height="15" fill="rgb(251,38,21)"/><text x="39.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.33%)</title><rect x="36" y="1332" width="4" height="15" fill="rgb(209,183,45)"/><text x="39.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.33%)</title><rect x="36" y="1348" width="4" height="15" fill="rgb(237,203,8)"/><text x="39.00" y="1358.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="40" y="1588" width="4" height="15" fill="rgb(216,1,47)"/><text x="43.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="40" y="1604" width="4" height="15" fill="rgb(242,198,18)"/><text x="43.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="40" y="1620" width="4" height="15" fill="rgb(247,35,30)"/><text x="43.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="40" y="1636" width="4" height="15" fill="rgb(240,115,23)"/><text x="43.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="40" y="1652" width="4" height="15" fill="rgb(248,64,20)"/><text x="43.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="40" y="1668" width="4" height="15" fill="rgb(252,214,19)"/><text x="43.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="40" y="1684" width="4" height="15" fill="rgb(248,161,3)"/><text x="43.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="40" y="1700" width="4" height="15" fill="rgb(226,203,42)"/><text x="43.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="40" y="1716" width="4" height="15" fill="rgb(237,2,48)"/><text x="43.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="40" y="1732" width="4" height="15" fill="rgb(216,219,37)"/><text x="43.00" y="1742.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="40" y="1748" width="4" height="15" fill="rgb(235,131,54)"/><text x="43.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="40" y="1764" width="4" height="15" fill="rgb(223,18,45)"/><text x="43.00" y="1774.50"></text></g><g><title>visit_If (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="40" y="1780" width="4" height="15" fill="rgb(236,89,34)"/><text x="43.00" y="1790.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="40" y="1796" width="4" height="15" fill="rgb(253,152,10)"/><text x="43.00" y="1806.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="40" y="1812" width="4" height="15" fill="rgb(240,103,0)"/><text x="43.00" y="1822.50"></text></g><g><title>visit_Output (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="40" y="1828" width="4" height="15" fill="rgb(211,57,51)"/><text x="43.00" y="1838.50"></text></g><g><title>writeline (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="40" y="1844" width="4" height="15" fill="rgb(210,85,5)"/><text x="43.00" y="1854.50"></text></g><g><title>write (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="40" y="1860" width="4" height="15" fill="rgb(224,10,19)"/><text x="43.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="40" y="1476" width="8" height="15" fill="rgb(252,134,7)"/><text x="43.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="40" y="1492" width="8" height="15" fill="rgb(225,36,40)"/><text x="43.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="40" y="1508" width="8" height="15" fill="rgb(248,213,54)"/><text x="43.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="40" y="1524" width="8" height="15" fill="rgb(221,191,24)"/><text x="43.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="40" y="1540" width="8" height="15" fill="rgb(237,216,51)"/><text x="43.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (2 samples, 0.65%)</title><rect x="40" y="1556" width="8" height="15" fill="rgb(209,221,25)"/><text x="43.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (2 samples, 0.65%)</title><rect x="40" y="1572" width="8" height="15" fill="rgb(209,34,7)"/><text x="43.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1588" width="4" height="15" fill="rgb(233,191,17)"/><text x="47.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1604" width="4" height="15" fill="rgb(233,56,38)"/><text x="47.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1620" width="4" height="15" fill="rgb(206,44,27)"/><text x="47.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="44" y="1636" width="4" height="15" fill="rgb(235,112,53)"/><text x="47.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1652" width="4" height="15" fill="rgb(220,23,10)"/><text x="47.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.33%)</title><rect x="44" y="1668" width="4" height="15" fill="rgb(234,22,13)"/><text x="47.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py) (1 samples, 0.33%)</title><rect x="44" y="1684" width="4" height="15" fill="rgb(209,182,14)"/><text x="47.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1700" width="4" height="15" fill="rgb(248,162,17)"/><text x="47.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1716" width="4" height="15" fill="rgb(254,137,32)"/><text x="47.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1732" width="4" height="15" fill="rgb(231,4,37)"/><text x="47.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="44" y="1748" width="4" height="15" fill="rgb(230,156,3)"/><text x="47.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1764" width="4" height="15" fill="rgb(233,205,47)"/><text x="47.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py) (1 samples, 0.33%)</title><rect x="44" y="1780" width="4" height="15" fill="rgb(210,153,52)"/><text x="47.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1796" width="4" height="15" fill="rgb(248,95,15)"/><text x="47.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1812" width="4" height="15" fill="rgb(232,146,34)"/><text x="47.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1828" width="4" height="15" fill="rgb(251,226,8)"/><text x="47.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="44" y="1844" width="4" height="15" fill="rgb(228,159,7)"/><text x="47.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1860" width="4" height="15" fill="rgb(221,64,38)"/><text x="47.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py) (1 samples, 0.33%)</title><rect x="44" y="1876" width="4" height="15" fill="rgb(230,203,11)"/><text x="47.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1892" width="4" height="15" fill="rgb(246,210,11)"/><text x="47.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1908" width="4" height="15" fill="rgb(229,24,3)"/><text x="47.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1924" width="4" height="15" fill="rgb(221,208,34)"/><text x="47.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="44" y="1940" width="4" height="15" fill="rgb(244,57,13)"/><text x="47.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1956" width="4" height="15" fill="rgb(251,7,51)"/><text x="47.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py) (1 samples, 0.33%)</title><rect x="44" y="1972" width="4" height="15" fill="rgb(234,185,27)"/><text x="47.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="1988" width="4" height="15" fill="rgb(235,2,21)"/><text x="47.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="2004" width="4" height="15" fill="rgb(215,42,17)"/><text x="47.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="2020" width="4" height="15" fill="rgb(228,206,47)"/><text x="47.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="2036" width="4" height="15" fill="rgb(228,73,41)"/><text x="47.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="2052" width="4" height="15" fill="rgb(254,30,16)"/><text x="47.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="44" y="2068" width="4" height="15" fill="rgb(251,208,22)"/><text x="47.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="2084" width="4" height="15" fill="rgb(252,220,40)"/><text x="47.00" y="2094.50"></text></g><g><title>&lt;module&gt; (asyncio/events.py) (1 samples, 0.33%)</title><rect x="44" y="2100" width="4" height="15" fill="rgb(221,95,4)"/><text x="47.00" y="2110.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="2116" width="4" height="15" fill="rgb(219,106,52)"/><text x="47.00" y="2126.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="2132" width="4" height="15" fill="rgb(238,161,47)"/><text x="47.00" y="2142.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="2148" width="4" height="15" fill="rgb(219,106,6)"/><text x="47.00" y="2158.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="44" y="2164" width="4" height="15" fill="rgb(231,111,18)"/><text x="47.00" y="2174.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="2180" width="4" height="15" fill="rgb(222,175,27)"/><text x="47.00" y="2190.50"></text></g><g><title>&lt;module&gt; (contextvars.py) (1 samples, 0.33%)</title><rect x="44" y="2196" width="4" height="15" fill="rgb(240,46,54)"/><text x="47.00" y="2206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="2212" width="4" height="15" fill="rgb(229,6,26)"/><text x="47.00" y="2222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="2228" width="4" height="15" fill="rgb(242,80,2)"/><text x="47.00" y="2238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="2244" width="4" height="15" fill="rgb(206,47,31)"/><text x="47.00" y="2254.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="2260" width="4" height="15" fill="rgb(248,150,50)"/><text x="47.00" y="2270.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="44" y="2276" width="4" height="15" fill="rgb(237,203,30)"/><text x="47.00" y="2286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="44" y="2292" width="4" height="15" fill="rgb(208,65,11)"/><text x="47.00" y="2302.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="44" y="2308" width="4" height="15" fill="rgb(224,99,22)"/><text x="47.00" y="2318.50"></text></g><g><title>0x7f754ecd0995 (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="44" y="2324" width="4" height="15" fill="rgb(238,92,49)"/><text x="47.00" y="2334.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.33%)</title><rect x="44" y="2340" width="4" height="15" fill="rgb(244,59,42)"/><text x="47.00" y="2350.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="44" y="2356" width="4" height="15" fill="rgb(225,35,48)"/><text x="47.00" y="2366.50"></text></g><g><title>0x7f754ecd0258 (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="44" y="2372" width="4" height="15" fill="rgb(229,196,19)"/><text x="47.00" y="2382.50"></text></g><g><title>0x7f754ed1dd7a (ld-2.29.so) (1 samples, 0.33%)</title><rect x="44" y="2388" width="4" height="15" fill="rgb(219,38,46)"/><text x="47.00" y="2398.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="44" y="2404" width="4" height="15" fill="rgb(246,98,2)"/><text x="47.00" y="2414.50"></text></g><g><title>0x7f754ed1e18b (ld-2.29.so) (1 samples, 0.33%)</title><rect x="44" y="2420" width="4" height="15" fill="rgb(210,205,50)"/><text x="47.00" y="2430.50"></text></g><g><title>0x7f754ed13ac1 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="44" y="2436" width="4" height="15" fill="rgb(224,75,51)"/><text x="47.00" y="2446.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.98%)</title><rect x="40" y="1236" width="12" height="15" fill="rgb(240,14,14)"/><text x="43.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="1252" width="12" height="15" fill="rgb(254,73,5)"/><text x="43.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="1268" width="12" height="15" fill="rgb(253,39,39)"/><text x="43.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="1284" width="12" height="15" fill="rgb(245,207,16)"/><text x="43.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="1300" width="12" height="15" fill="rgb(208,96,34)"/><text x="43.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="1316" width="12" height="15" fill="rgb(214,172,45)"/><text x="43.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="40" y="1332" width="12" height="15" fill="rgb(244,151,52)"/><text x="43.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="1348" width="12" height="15" fill="rgb(249,29,5)"/><text x="43.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.98%)</title><rect x="40" y="1364" width="12" height="15" fill="rgb(219,151,47)"/><text x="43.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="1380" width="12" height="15" fill="rgb(228,32,25)"/><text x="43.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="1396" width="12" height="15" fill="rgb(249,158,25)"/><text x="43.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="1412" width="12" height="15" fill="rgb(231,7,51)"/><text x="43.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="40" y="1428" width="12" height="15" fill="rgb(232,88,43)"/><text x="43.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="40" y="1444" width="12" height="15" fill="rgb(252,58,30)"/><text x="43.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.98%)</title><rect x="40" y="1460" width="12" height="15" fill="rgb(234,201,28)"/><text x="43.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.33%)</title><rect x="48" y="1476" width="4" height="15" fill="rgb(220,181,42)"/><text x="51.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.33%)</title><rect x="48" y="1492" width="4" height="15" fill="rgb(207,213,41)"/><text x="51.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.33%)</title><rect x="48" y="1508" width="4" height="15" fill="rgb(207,10,29)"/><text x="51.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.33%)</title><rect x="48" y="1524" width="4" height="15" fill="rgb(232,63,47)"/><text x="51.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="48" y="1540" width="4" height="15" fill="rgb(234,35,23)"/><text x="51.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.33%)</title><rect x="48" y="1556" width="4" height="15" fill="rgb(228,46,27)"/><text x="51.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.33%)</title><rect x="48" y="1572" width="4" height="15" fill="rgb(227,205,4)"/><text x="51.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="484" width="20" height="15" fill="rgb(223,213,14)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="500" width="20" height="15" fill="rgb(226,165,43)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="516" width="20" height="15" fill="rgb(251,100,44)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="532" width="20" height="15" fill="rgb(208,27,29)"/><text x="39.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.63%)</title><rect x="36" y="548" width="20" height="15" fill="rgb(243,10,23)"/><text x="39.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="564" width="20" height="15" fill="rgb(222,208,50)"/><text x="39.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (5 samples, 1.63%)</title><rect x="36" y="580" width="20" height="15" fill="rgb(252,220,6)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="596" width="20" height="15" fill="rgb(242,79,11)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="612" width="20" height="15" fill="rgb(236,38,18)"/><text x="39.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="628" width="20" height="15" fill="rgb(240,100,10)"/><text x="39.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.63%)</title><rect x="36" y="644" width="20" height="15" fill="rgb(212,27,14)"/><text x="39.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="660" width="20" height="15" fill="rgb(228,38,6)"/><text x="39.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (5 samples, 1.63%)</title><rect x="36" y="676" width="20" height="15" fill="rgb(251,161,23)"/><text x="39.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="692" width="20" height="15" fill="rgb(246,99,39)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="708" width="20" height="15" fill="rgb(252,50,43)"/><text x="39.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="724" width="20" height="15" fill="rgb(220,192,49)"/><text x="39.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.63%)</title><rect x="36" y="740" width="20" height="15" fill="rgb(211,38,6)"/><text x="39.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="756" width="20" height="15" fill="rgb(230,42,31)"/><text x="39.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 1.63%)</title><rect x="36" y="772" width="20" height="15" fill="rgb(218,197,9)"/><text x="39.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="788" width="20" height="15" fill="rgb(213,203,45)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="804" width="20" height="15" fill="rgb(233,114,32)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="820" width="20" height="15" fill="rgb(219,82,44)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.63%)</title><rect x="36" y="836" width="20" height="15" fill="rgb(209,90,17)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="852" width="20" height="15" fill="rgb(229,40,49)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 1.63%)</title><rect x="36" y="868" width="20" height="15" fill="rgb(221,64,46)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="884" width="20" height="15" fill="rgb(228,199,17)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="900" width="20" height="15" fill="rgb(205,13,23)"/><text x="39.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="916" width="20" height="15" fill="rgb(214,118,18)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="932" width="20" height="15" fill="rgb(218,228,4)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="948" width="20" height="15" fill="rgb(207,78,50)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="964" width="20" height="15" fill="rgb(254,144,0)"/><text x="39.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.63%)</title><rect x="36" y="980" width="20" height="15" fill="rgb(210,133,31)"/><text x="39.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="996" width="20" height="15" fill="rgb(234,225,36)"/><text x="39.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 1.63%)</title><rect x="36" y="1012" width="20" height="15" fill="rgb(207,127,39)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="1028" width="20" height="15" fill="rgb(247,208,43)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="1044" width="20" height="15" fill="rgb(238,33,19)"/><text x="39.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="1060" width="20" height="15" fill="rgb(248,68,23)"/><text x="39.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.63%)</title><rect x="36" y="1076" width="20" height="15" fill="rgb(212,202,23)"/><text x="39.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="36" y="1092" width="20" height="15" fill="rgb(254,75,36)"/><text x="39.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 1.63%)</title><rect x="36" y="1108" width="20" height="15" fill="rgb(220,94,35)"/><text x="39.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="40" y="1124" width="16" height="15" fill="rgb(249,131,5)"/><text x="43.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="40" y="1140" width="16" height="15" fill="rgb(247,33,24)"/><text x="43.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="40" y="1156" width="16" height="15" fill="rgb(247,196,45)"/><text x="43.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="40" y="1172" width="16" height="15" fill="rgb(233,33,52)"/><text x="43.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="40" y="1188" width="16" height="15" fill="rgb(237,72,27)"/><text x="43.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.31%)</title><rect x="40" y="1204" width="16" height="15" fill="rgb(245,165,42)"/><text x="43.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="40" y="1220" width="16" height="15" fill="rgb(248,184,46)"/><text x="43.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py) (1 samples, 0.33%)</title><rect x="52" y="1236" width="4" height="15" fill="rgb(249,118,18)"/><text x="55.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="52" y="1252" width="4" height="15" fill="rgb(206,62,36)"/><text x="55.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="52" y="1268" width="4" height="15" fill="rgb(254,206,52)"/><text x="55.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="52" y="1284" width="4" height="15" fill="rgb(214,86,37)"/><text x="55.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="52" y="1300" width="4" height="15" fill="rgb(213,188,50)"/><text x="55.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="52" y="1316" width="4" height="15" fill="rgb(239,63,21)"/><text x="55.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="52" y="1332" width="4" height="15" fill="rgb(243,189,29)"/><text x="55.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="52" y="1348" width="4" height="15" fill="rgb(222,224,28)"/><text x="55.00" y="1358.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="52" y="1364" width="4" height="15" fill="rgb(233,89,24)"/><text x="55.00" y="1374.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="52" y="1380" width="4" height="15" fill="rgb(254,226,0)"/><text x="55.00" y="1390.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.33%)</title><rect x="52" y="1396" width="4" height="15" fill="rgb(236,182,35)"/><text x="55.00" y="1406.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.33%)</title><rect x="52" y="1412" width="4" height="15" fill="rgb(251,87,31)"/><text x="55.00" y="1422.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.33%)</title><rect x="56" y="1108" width="4" height="15" fill="rgb(233,28,39)"/><text x="59.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1124" width="4" height="15" fill="rgb(242,154,32)"/><text x="59.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1140" width="4" height="15" fill="rgb(230,117,27)"/><text x="59.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1156" width="4" height="15" fill="rgb(210,196,35)"/><text x="59.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="56" y="1172" width="4" height="15" fill="rgb(245,175,49)"/><text x="59.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1188" width="4" height="15" fill="rgb(252,201,27)"/><text x="59.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.33%)</title><rect x="56" y="1204" width="4" height="15" fill="rgb(210,111,34)"/><text x="59.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1220" width="4" height="15" fill="rgb(214,48,15)"/><text x="59.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1236" width="4" height="15" fill="rgb(215,179,1)"/><text x="59.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1252" width="4" height="15" fill="rgb(239,190,31)"/><text x="59.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="56" y="1268" width="4" height="15" fill="rgb(247,149,47)"/><text x="59.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1284" width="4" height="15" fill="rgb(245,154,30)"/><text x="59.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.33%)</title><rect x="56" y="1300" width="4" height="15" fill="rgb(241,25,11)"/><text x="59.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1316" width="4" height="15" fill="rgb(221,27,28)"/><text x="59.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1332" width="4" height="15" fill="rgb(221,29,15)"/><text x="59.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1348" width="4" height="15" fill="rgb(220,43,21)"/><text x="59.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="56" y="1364" width="4" height="15" fill="rgb(254,33,35)"/><text x="59.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1380" width="4" height="15" fill="rgb(231,132,40)"/><text x="59.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (1 samples, 0.33%)</title><rect x="56" y="1396" width="4" height="15" fill="rgb(244,227,11)"/><text x="59.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1412" width="4" height="15" fill="rgb(219,28,30)"/><text x="59.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1428" width="4" height="15" fill="rgb(227,212,28)"/><text x="59.00" y="1438.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="1444" width="4" height="15" fill="rgb(234,60,0)"/><text x="59.00" y="1454.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="56" y="1460" width="4" height="15" fill="rgb(217,192,51)"/><text x="59.00" y="1470.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="56" y="1476" width="4" height="15" fill="rgb(253,69,16)"/><text x="59.00" y="1486.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="56" y="1492" width="4" height="15" fill="rgb(210,2,15)"/><text x="59.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="56" y="1092" width="7" height="15" fill="rgb(240,91,45)"/><text x="59.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.33%)</title><rect x="60" y="1108" width="3" height="15" fill="rgb(210,185,45)"/><text x="63.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1124" width="3" height="15" fill="rgb(220,8,38)"/><text x="63.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1140" width="3" height="15" fill="rgb(235,185,13)"/><text x="63.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1156" width="3" height="15" fill="rgb(223,129,13)"/><text x="63.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="60" y="1172" width="3" height="15" fill="rgb(215,151,51)"/><text x="63.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1188" width="3" height="15" fill="rgb(236,211,16)"/><text x="63.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.33%)</title><rect x="60" y="1204" width="3" height="15" fill="rgb(211,91,2)"/><text x="63.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1220" width="3" height="15" fill="rgb(210,110,17)"/><text x="63.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1236" width="3" height="15" fill="rgb(219,74,52)"/><text x="63.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1252" width="3" height="15" fill="rgb(218,163,45)"/><text x="63.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="60" y="1268" width="3" height="15" fill="rgb(213,141,40)"/><text x="63.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1284" width="3" height="15" fill="rgb(214,74,6)"/><text x="63.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.33%)</title><rect x="60" y="1300" width="3" height="15" fill="rgb(208,179,51)"/><text x="63.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1316" width="3" height="15" fill="rgb(222,182,16)"/><text x="63.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1332" width="3" height="15" fill="rgb(229,180,8)"/><text x="63.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1348" width="3" height="15" fill="rgb(250,103,7)"/><text x="63.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="60" y="1364" width="3" height="15" fill="rgb(216,166,26)"/><text x="63.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1380" width="3" height="15" fill="rgb(215,43,21)"/><text x="63.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.33%)</title><rect x="60" y="1396" width="3" height="15" fill="rgb(227,201,1)"/><text x="63.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1412" width="3" height="15" fill="rgb(229,54,48)"/><text x="63.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1428" width="3" height="15" fill="rgb(214,224,4)"/><text x="63.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1444" width="3" height="15" fill="rgb(245,107,7)"/><text x="63.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="60" y="1460" width="3" height="15" fill="rgb(253,91,28)"/><text x="63.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1476" width="3" height="15" fill="rgb(209,164,0)"/><text x="63.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.33%)</title><rect x="60" y="1492" width="3" height="15" fill="rgb(221,124,23)"/><text x="63.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1508" width="3" height="15" fill="rgb(243,13,9)"/><text x="63.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1524" width="3" height="15" fill="rgb(209,200,52)"/><text x="63.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1540" width="3" height="15" fill="rgb(210,136,16)"/><text x="63.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="60" y="1556" width="3" height="15" fill="rgb(227,186,50)"/><text x="63.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1572" width="3" height="15" fill="rgb(207,170,48)"/><text x="63.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.33%)</title><rect x="60" y="1588" width="3" height="15" fill="rgb(238,137,50)"/><text x="63.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1604" width="3" height="15" fill="rgb(221,178,3)"/><text x="63.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1620" width="3" height="15" fill="rgb(245,131,40)"/><text x="63.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1636" width="3" height="15" fill="rgb(216,102,31)"/><text x="63.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="60" y="1652" width="3" height="15" fill="rgb(250,72,18)"/><text x="63.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1668" width="3" height="15" fill="rgb(219,13,37)"/><text x="63.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.33%)</title><rect x="60" y="1684" width="3" height="15" fill="rgb(252,12,47)"/><text x="63.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1700" width="3" height="15" fill="rgb(214,178,40)"/><text x="63.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1716" width="3" height="15" fill="rgb(208,103,13)"/><text x="63.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1732" width="3" height="15" fill="rgb(254,48,40)"/><text x="63.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="60" y="1748" width="3" height="15" fill="rgb(251,210,3)"/><text x="63.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1764" width="3" height="15" fill="rgb(242,56,51)"/><text x="63.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.33%)</title><rect x="60" y="1780" width="3" height="15" fill="rgb(234,168,32)"/><text x="63.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1796" width="3" height="15" fill="rgb(209,177,29)"/><text x="63.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1812" width="3" height="15" fill="rgb(236,92,50)"/><text x="63.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1828" width="3" height="15" fill="rgb(244,176,23)"/><text x="63.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="60" y="1844" width="3" height="15" fill="rgb(239,165,37)"/><text x="63.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1860" width="3" height="15" fill="rgb(221,197,3)"/><text x="63.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.33%)</title><rect x="60" y="1876" width="3" height="15" fill="rgb(242,187,45)"/><text x="63.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1892" width="3" height="15" fill="rgb(243,219,12)"/><text x="63.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1908" width="3" height="15" fill="rgb(224,23,43)"/><text x="63.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1924" width="3" height="15" fill="rgb(230,23,21)"/><text x="63.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1940" width="3" height="15" fill="rgb(216,137,39)"/><text x="63.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1956" width="3" height="15" fill="rgb(248,178,25)"/><text x="63.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="60" y="1972" width="3" height="15" fill="rgb(231,103,14)"/><text x="63.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1988" width="3" height="15" fill="rgb(224,178,4)"/><text x="63.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py) (1 samples, 0.33%)</title><rect x="60" y="2004" width="3" height="15" fill="rgb(250,31,20)"/><text x="63.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.33%)</title><rect x="60" y="2020" width="3" height="15" fill="rgb(213,157,25)"/><text x="63.00" y="2030.50"></text></g><g><title>__init__ (matplotlib/artist.py) (1 samples, 0.33%)</title><rect x="60" y="2036" width="3" height="15" fill="rgb(207,80,3)"/><text x="63.00" y="2046.50"></text></g><g><title>get_aliases (matplotlib/artist.py) (1 samples, 0.33%)</title><rect x="60" y="2052" width="3" height="15" fill="rgb(249,191,17)"/><text x="63.00" y="2062.50"></text></g><g><title>is_alias (matplotlib/artist.py) (1 samples, 0.33%)</title><rect x="60" y="2068" width="3" height="15" fill="rgb(215,101,3)"/><text x="63.00" y="2078.50"></text></g><g><title>getdoc (inspect.py) (1 samples, 0.33%)</title><rect x="60" y="2084" width="3" height="15" fill="rgb(213,71,14)"/><text x="63.00" y="2094.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.33%)</title><rect x="60" y="2100" width="3" height="15" fill="rgb(231,52,53)"/><text x="63.00" y="2110.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 2.61%)</title><rect x="36" y="340" width="31" height="15" fill="rgb(232,54,52)"/><text x="39.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.61%)</title><rect x="36" y="356" width="31" height="15" fill="rgb(213,62,21)"/><text x="39.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.61%)</title><rect x="36" y="372" width="31" height="15" fill="rgb(252,151,6)"/><text x="39.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.61%)</title><rect x="36" y="388" width="31" height="15" fill="rgb(231,13,3)"/><text x="39.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.61%)</title><rect x="36" y="404" width="31" height="15" fill="rgb(254,168,11)"/><text x="39.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.61%)</title><rect x="36" y="420" width="31" height="15" fill="rgb(226,18,24)"/><text x="39.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 2.61%)</title><rect x="36" y="436" width="31" height="15" fill="rgb(226,84,52)"/><text x="39.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.61%)</title><rect x="36" y="452" width="31" height="15" fill="rgb(238,56,32)"/><text x="39.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.61%)</title><rect x="36" y="468" width="31" height="15" fill="rgb(219,207,27)"/><text x="39.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="484" width="11" height="15" fill="rgb(215,121,0)"/><text x="59.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="56" y="500" width="11" height="15" fill="rgb(210,15,9)"/><text x="59.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="516" width="11" height="15" fill="rgb(253,225,52)"/><text x="59.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.98%)</title><rect x="56" y="532" width="11" height="15" fill="rgb(236,224,46)"/><text x="59.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="548" width="11" height="15" fill="rgb(250,128,38)"/><text x="59.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="564" width="11" height="15" fill="rgb(238,122,8)"/><text x="59.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="580" width="11" height="15" fill="rgb(223,209,25)"/><text x="59.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="56" y="596" width="11" height="15" fill="rgb(235,185,19)"/><text x="59.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="612" width="11" height="15" fill="rgb(244,148,53)"/><text x="59.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.98%)</title><rect x="56" y="628" width="11" height="15" fill="rgb(251,207,18)"/><text x="59.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="644" width="11" height="15" fill="rgb(233,48,36)"/><text x="59.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="660" width="11" height="15" fill="rgb(234,129,3)"/><text x="59.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="676" width="11" height="15" fill="rgb(230,204,45)"/><text x="59.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="56" y="692" width="11" height="15" fill="rgb(213,190,35)"/><text x="59.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="708" width="11" height="15" fill="rgb(237,67,48)"/><text x="59.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.98%)</title><rect x="56" y="724" width="11" height="15" fill="rgb(232,1,19)"/><text x="59.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="740" width="11" height="15" fill="rgb(252,65,20)"/><text x="59.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="756" width="11" height="15" fill="rgb(231,141,16)"/><text x="59.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="772" width="11" height="15" fill="rgb(215,174,37)"/><text x="59.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="56" y="788" width="11" height="15" fill="rgb(230,157,9)"/><text x="59.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="804" width="11" height="15" fill="rgb(253,2,25)"/><text x="59.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.98%)</title><rect x="56" y="820" width="11" height="15" fill="rgb(213,84,39)"/><text x="59.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="836" width="11" height="15" fill="rgb(242,30,4)"/><text x="59.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="852" width="11" height="15" fill="rgb(223,20,38)"/><text x="59.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="868" width="11" height="15" fill="rgb(234,12,11)"/><text x="59.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="56" y="884" width="11" height="15" fill="rgb(216,45,52)"/><text x="59.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="900" width="11" height="15" fill="rgb(211,183,40)"/><text x="59.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.98%)</title><rect x="56" y="916" width="11" height="15" fill="rgb(246,149,37)"/><text x="59.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="932" width="11" height="15" fill="rgb(254,73,19)"/><text x="59.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="948" width="11" height="15" fill="rgb(226,35,49)"/><text x="59.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="964" width="11" height="15" fill="rgb(223,60,37)"/><text x="59.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="56" y="980" width="11" height="15" fill="rgb(229,93,46)"/><text x="59.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="996" width="11" height="15" fill="rgb(230,148,8)"/><text x="59.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.98%)</title><rect x="56" y="1012" width="11" height="15" fill="rgb(222,185,15)"/><text x="59.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="1028" width="11" height="15" fill="rgb(231,189,35)"/><text x="59.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="1044" width="11" height="15" fill="rgb(244,69,42)"/><text x="59.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="56" y="1060" width="11" height="15" fill="rgb(240,36,4)"/><text x="59.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="56" y="1076" width="11" height="15" fill="rgb(252,38,18)"/><text x="59.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="63" y="1092" width="4" height="15" fill="rgb(250,78,40)"/><text x="66.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="63" y="1108" width="4" height="15" fill="rgb(224,191,5)"/><text x="66.00" y="1118.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.33%)</title><rect x="67" y="580" width="4" height="15" fill="rgb(222,58,53)"/><text x="70.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="596" width="4" height="15" fill="rgb(252,100,22)"/><text x="70.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="612" width="4" height="15" fill="rgb(219,16,6)"/><text x="70.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="628" width="4" height="15" fill="rgb(241,226,33)"/><text x="70.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="644" width="4" height="15" fill="rgb(237,22,49)"/><text x="70.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="660" width="4" height="15" fill="rgb(232,121,28)"/><text x="70.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="676" width="4" height="15" fill="rgb(239,102,15)"/><text x="70.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="67" y="692" width="4" height="15" fill="rgb(210,109,51)"/><text x="70.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="708" width="4" height="15" fill="rgb(245,71,30)"/><text x="70.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.33%)</title><rect x="67" y="724" width="4" height="15" fill="rgb(206,160,25)"/><text x="70.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="740" width="4" height="15" fill="rgb(249,12,5)"/><text x="70.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="756" width="4" height="15" fill="rgb(222,227,37)"/><text x="70.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="772" width="4" height="15" fill="rgb(205,74,18)"/><text x="70.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="67" y="788" width="4" height="15" fill="rgb(205,21,43)"/><text x="70.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="804" width="4" height="15" fill="rgb(217,121,33)"/><text x="70.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.33%)</title><rect x="67" y="820" width="4" height="15" fill="rgb(245,178,2)"/><text x="70.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="836" width="4" height="15" fill="rgb(238,176,24)"/><text x="70.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="852" width="4" height="15" fill="rgb(221,158,43)"/><text x="70.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="868" width="4" height="15" fill="rgb(232,130,9)"/><text x="70.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="67" y="884" width="4" height="15" fill="rgb(218,183,16)"/><text x="70.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="900" width="4" height="15" fill="rgb(253,34,29)"/><text x="70.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.33%)</title><rect x="67" y="916" width="4" height="15" fill="rgb(205,13,10)"/><text x="70.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="932" width="4" height="15" fill="rgb(234,210,25)"/><text x="70.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="948" width="4" height="15" fill="rgb(213,119,8)"/><text x="70.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="964" width="4" height="15" fill="rgb(251,111,21)"/><text x="70.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="980" width="4" height="15" fill="rgb(229,80,21)"/><text x="70.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="996" width="4" height="15" fill="rgb(221,173,5)"/><text x="70.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1012" width="4" height="15" fill="rgb(231,9,41)"/><text x="70.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="67" y="1028" width="4" height="15" fill="rgb(208,160,18)"/><text x="70.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1044" width="4" height="15" fill="rgb(225,162,12)"/><text x="70.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.33%)</title><rect x="67" y="1060" width="4" height="15" fill="rgb(240,133,23)"/><text x="70.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1076" width="4" height="15" fill="rgb(235,17,9)"/><text x="70.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1092" width="4" height="15" fill="rgb(221,82,47)"/><text x="70.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1108" width="4" height="15" fill="rgb(216,60,15)"/><text x="70.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="67" y="1124" width="4" height="15" fill="rgb(237,57,45)"/><text x="70.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1140" width="4" height="15" fill="rgb(241,115,44)"/><text x="70.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py) (1 samples, 0.33%)</title><rect x="67" y="1156" width="4" height="15" fill="rgb(226,0,9)"/><text x="70.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1172" width="4" height="15" fill="rgb(208,7,32)"/><text x="70.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1188" width="4" height="15" fill="rgb(211,112,32)"/><text x="70.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1204" width="4" height="15" fill="rgb(249,10,26)"/><text x="70.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1220" width="4" height="15" fill="rgb(232,218,11)"/><text x="70.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1236" width="4" height="15" fill="rgb(209,79,18)"/><text x="70.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="67" y="1252" width="4" height="15" fill="rgb(252,114,9)"/><text x="70.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1268" width="4" height="15" fill="rgb(227,144,11)"/><text x="70.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pysvn_helper.py) (1 samples, 0.33%)</title><rect x="67" y="1284" width="4" height="15" fill="rgb(244,133,51)"/><text x="70.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1300" width="4" height="15" fill="rgb(219,37,53)"/><text x="70.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1316" width="4" height="15" fill="rgb(235,108,8)"/><text x="70.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1332" width="4" height="15" fill="rgb(222,206,14)"/><text x="70.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="67" y="1348" width="4" height="15" fill="rgb(206,152,9)"/><text x="70.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1364" width="4" height="15" fill="rgb(229,201,47)"/><text x="70.00" y="1374.50"></text></g><g><title>&lt;module&gt; (xml/etree/ElementTree.py) (1 samples, 0.33%)</title><rect x="67" y="1380" width="4" height="15" fill="rgb(230,61,47)"/><text x="70.00" y="1390.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1396" width="4" height="15" fill="rgb(241,34,25)"/><text x="70.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1412" width="4" height="15" fill="rgb(230,50,39)"/><text x="70.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1428" width="4" height="15" fill="rgb(246,170,37)"/><text x="70.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1444" width="4" height="15" fill="rgb(220,196,41)"/><text x="70.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1460" width="4" height="15" fill="rgb(234,202,54)"/><text x="70.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="67" y="1476" width="4" height="15" fill="rgb(221,23,42)"/><text x="70.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="1492" width="4" height="15" fill="rgb(234,38,33)"/><text x="70.00" y="1502.50"></text></g><g><title>&lt;module&gt; (xml/etree/ElementPath.py) (1 samples, 0.33%)</title><rect x="67" y="1508" width="4" height="15" fill="rgb(254,180,2)"/><text x="70.00" y="1518.50"></text></g><g><title>compile (re.py) (1 samples, 0.33%)</title><rect x="67" y="1524" width="4" height="15" fill="rgb(237,131,46)"/><text x="70.00" y="1534.50"></text></g><g><title>_compile (re.py) (1 samples, 0.33%)</title><rect x="67" y="1540" width="4" height="15" fill="rgb(228,156,45)"/><text x="70.00" y="1550.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="67" y="1556" width="4" height="15" fill="rgb(228,96,22)"/><text x="70.00" y="1566.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.33%)</title><rect x="67" y="1572" width="4" height="15" fill="rgb(247,151,2)"/><text x="70.00" y="1582.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.33%)</title><rect x="67" y="1588" width="4" height="15" fill="rgb(248,146,53)"/><text x="70.00" y="1598.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.33%)</title><rect x="67" y="1604" width="4" height="15" fill="rgb(211,213,32)"/><text x="70.00" y="1614.50"></text></g><g><title>match (sre_parse.py) (1 samples, 0.33%)</title><rect x="67" y="1620" width="4" height="15" fill="rgb(253,145,51)"/><text x="70.00" y="1630.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.33%)</title><rect x="67" y="1636" width="4" height="15" fill="rgb(245,220,3)"/><text x="70.00" y="1646.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py) (1 samples, 0.33%)</title><rect x="71" y="868" width="4" height="15" fill="rgb(253,33,27)"/><text x="74.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="884" width="4" height="15" fill="rgb(233,82,4)"/><text x="74.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="900" width="4" height="15" fill="rgb(212,87,38)"/><text x="74.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="916" width="4" height="15" fill="rgb(254,38,45)"/><text x="74.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="71" y="932" width="4" height="15" fill="rgb(233,116,31)"/><text x="74.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="948" width="4" height="15" fill="rgb(211,112,51)"/><text x="74.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py) (1 samples, 0.33%)</title><rect x="71" y="964" width="4" height="15" fill="rgb(242,226,39)"/><text x="74.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="980" width="4" height="15" fill="rgb(243,94,2)"/><text x="74.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="996" width="4" height="15" fill="rgb(209,141,7)"/><text x="74.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="1012" width="4" height="15" fill="rgb(226,109,22)"/><text x="74.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="71" y="1028" width="4" height="15" fill="rgb(251,205,31)"/><text x="74.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="1044" width="4" height="15" fill="rgb(250,28,25)"/><text x="74.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/escprober.py) (1 samples, 0.33%)</title><rect x="71" y="1060" width="4" height="15" fill="rgb(245,57,34)"/><text x="74.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="1076" width="4" height="15" fill="rgb(228,35,20)"/><text x="74.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="1092" width="4" height="15" fill="rgb(209,19,46)"/><text x="74.00" y="1102.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="1108" width="4" height="15" fill="rgb(209,64,33)"/><text x="74.00" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="71" y="1124" width="4" height="15" fill="rgb(240,134,21)"/><text x="74.00" y="1134.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="71" y="1140" width="4" height="15" fill="rgb(220,114,20)"/><text x="74.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="71" y="1156" width="4" height="15" fill="rgb(241,205,35)"/><text x="74.00" y="1166.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="71" y="1172" width="4" height="15" fill="rgb(224,156,21)"/><text x="74.00" y="1182.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.33%)</title><rect x="71" y="1188" width="4" height="15" fill="rgb(231,16,35)"/><text x="74.00" y="1198.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.33%)</title><rect x="71" y="1204" width="4" height="15" fill="rgb(207,112,4)"/><text x="74.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (11 samples, 3.59%)</title><rect x="36" y="244" width="43" height="15" fill="rgb(227,16,2)"/><text x="39.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.59%)</title><rect x="36" y="260" width="43" height="15" fill="rgb(246,101,24)"/><text x="39.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.59%)</title><rect x="36" y="276" width="43" height="15" fill="rgb(227,163,40)"/><text x="39.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.59%)</title><rect x="36" y="292" width="43" height="15" fill="rgb(225,48,26)"/><text x="39.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 3.59%)</title><rect x="36" y="308" width="43" height="15" fill="rgb(242,148,35)"/><text x="39.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.59%)</title><rect x="36" y="324" width="43" height="15" fill="rgb(246,119,24)"/><text x="39.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.98%)</title><rect x="67" y="340" width="12" height="15" fill="rgb(241,181,21)"/><text x="70.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="67" y="356" width="12" height="15" fill="rgb(219,37,32)"/><text x="70.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="67" y="372" width="12" height="15" fill="rgb(248,125,31)"/><text x="70.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="67" y="388" width="12" height="15" fill="rgb(209,17,35)"/><text x="70.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="67" y="404" width="12" height="15" fill="rgb(240,20,15)"/><text x="70.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="67" y="420" width="12" height="15" fill="rgb(211,58,0)"/><text x="70.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="67" y="436" width="12" height="15" fill="rgb(226,84,3)"/><text x="70.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="67" y="452" width="12" height="15" fill="rgb(218,127,21)"/><text x="70.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="67" y="468" width="12" height="15" fill="rgb(212,54,19)"/><text x="70.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.98%)</title><rect x="67" y="484" width="12" height="15" fill="rgb(213,123,15)"/><text x="70.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="67" y="500" width="12" height="15" fill="rgb(206,5,48)"/><text x="70.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="67" y="516" width="12" height="15" fill="rgb(245,144,42)"/><text x="70.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="67" y="532" width="12" height="15" fill="rgb(230,79,16)"/><text x="70.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="67" y="548" width="12" height="15" fill="rgb(239,82,44)"/><text x="70.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="67" y="564" width="12" height="15" fill="rgb(233,70,19)"/><text x="70.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.65%)</title><rect x="71" y="580" width="8" height="15" fill="rgb(228,213,43)"/><text x="74.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="596" width="8" height="15" fill="rgb(206,19,48)"/><text x="74.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="612" width="8" height="15" fill="rgb(233,28,35)"/><text x="74.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="628" width="8" height="15" fill="rgb(230,146,47)"/><text x="74.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="71" y="644" width="8" height="15" fill="rgb(235,136,16)"/><text x="74.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="660" width="8" height="15" fill="rgb(238,227,33)"/><text x="74.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.65%)</title><rect x="71" y="676" width="8" height="15" fill="rgb(211,191,4)"/><text x="74.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="692" width="8" height="15" fill="rgb(233,125,13)"/><text x="74.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="708" width="8" height="15" fill="rgb(210,164,16)"/><text x="74.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="724" width="8" height="15" fill="rgb(207,141,8)"/><text x="74.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="71" y="740" width="8" height="15" fill="rgb(240,15,51)"/><text x="74.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="756" width="8" height="15" fill="rgb(222,143,31)"/><text x="74.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.65%)</title><rect x="71" y="772" width="8" height="15" fill="rgb(231,158,50)"/><text x="74.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="788" width="8" height="15" fill="rgb(227,100,52)"/><text x="74.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="804" width="8" height="15" fill="rgb(222,138,13)"/><text x="74.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="820" width="8" height="15" fill="rgb(242,11,34)"/><text x="74.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="71" y="836" width="8" height="15" fill="rgb(245,195,35)"/><text x="74.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="852" width="8" height="15" fill="rgb(249,69,44)"/><text x="74.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.33%)</title><rect x="75" y="868" width="4" height="15" fill="rgb(228,139,7)"/><text x="78.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="884" width="4" height="15" fill="rgb(244,1,43)"/><text x="78.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="900" width="4" height="15" fill="rgb(214,58,23)"/><text x="78.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="916" width="4" height="15" fill="rgb(206,228,47)"/><text x="78.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="75" y="932" width="4" height="15" fill="rgb(205,35,42)"/><text x="78.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="948" width="4" height="15" fill="rgb(233,185,12)"/><text x="78.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.33%)</title><rect x="75" y="964" width="4" height="15" fill="rgb(233,103,13)"/><text x="78.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="980" width="4" height="15" fill="rgb(221,154,1)"/><text x="78.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="996" width="4" height="15" fill="rgb(244,85,7)"/><text x="78.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1012" width="4" height="15" fill="rgb(236,108,3)"/><text x="78.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="75" y="1028" width="4" height="15" fill="rgb(219,221,19)"/><text x="78.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1044" width="4" height="15" fill="rgb(223,229,7)"/><text x="78.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.33%)</title><rect x="75" y="1060" width="4" height="15" fill="rgb(236,0,12)"/><text x="78.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1076" width="4" height="15" fill="rgb(254,139,22)"/><text x="78.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1092" width="4" height="15" fill="rgb(246,74,11)"/><text x="78.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1108" width="4" height="15" fill="rgb(213,220,54)"/><text x="78.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1124" width="4" height="15" fill="rgb(206,225,3)"/><text x="78.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1140" width="4" height="15" fill="rgb(246,127,17)"/><text x="78.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1156" width="4" height="15" fill="rgb(240,11,5)"/><text x="78.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="75" y="1172" width="4" height="15" fill="rgb(217,199,39)"/><text x="78.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1188" width="4" height="15" fill="rgb(205,94,27)"/><text x="78.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.33%)</title><rect x="75" y="1204" width="4" height="15" fill="rgb(223,116,48)"/><text x="78.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1220" width="4" height="15" fill="rgb(233,120,36)"/><text x="78.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1236" width="4" height="15" fill="rgb(219,65,8)"/><text x="78.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1252" width="4" height="15" fill="rgb(253,176,5)"/><text x="78.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="75" y="1268" width="4" height="15" fill="rgb(250,12,41)"/><text x="78.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1284" width="4" height="15" fill="rgb(233,59,37)"/><text x="78.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.33%)</title><rect x="75" y="1300" width="4" height="15" fill="rgb(229,74,33)"/><text x="78.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1316" width="4" height="15" fill="rgb(224,107,39)"/><text x="78.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1332" width="4" height="15" fill="rgb(225,187,24)"/><text x="78.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1348" width="4" height="15" fill="rgb(213,76,53)"/><text x="78.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="75" y="1364" width="4" height="15" fill="rgb(240,50,8)"/><text x="78.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1380" width="4" height="15" fill="rgb(251,172,11)"/><text x="78.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.33%)</title><rect x="75" y="1396" width="4" height="15" fill="rgb(218,52,43)"/><text x="78.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.33%)</title><rect x="75" y="1412" width="4" height="15" fill="rgb(221,22,27)"/><text x="78.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.33%)</title><rect x="75" y="1428" width="4" height="15" fill="rgb(242,227,37)"/><text x="78.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="75" y="1444" width="4" height="15" fill="rgb(225,217,43)"/><text x="78.00" y="1454.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.33%)</title><rect x="75" y="1460" width="4" height="15" fill="rgb(245,55,37)"/><text x="78.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="75" y="1476" width="4" height="15" fill="rgb(218,33,17)"/><text x="78.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="75" y="1492" width="4" height="15" fill="rgb(228,152,8)"/><text x="78.00" y="1502.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="75" y="1508" width="4" height="15" fill="rgb(239,166,41)"/><text x="78.00" y="1518.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="75" y="1524" width="4" height="15" fill="rgb(239,48,24)"/><text x="78.00" y="1534.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="75" y="1540" width="4" height="15" fill="rgb(250,220,50)"/><text x="78.00" y="1550.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="75" y="1556" width="4" height="15" fill="rgb(228,177,46)"/><text x="78.00" y="1566.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="75" y="1572" width="4" height="15" fill="rgb(226,195,43)"/><text x="78.00" y="1582.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.33%)</title><rect x="75" y="1588" width="4" height="15" fill="rgb(221,121,3)"/><text x="78.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="484" width="4" height="15" fill="rgb(205,12,1)"/><text x="82.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.33%)</title><rect x="79" y="500" width="4" height="15" fill="rgb(212,62,19)"/><text x="82.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="516" width="4" height="15" fill="rgb(208,51,30)"/><text x="82.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="532" width="4" height="15" fill="rgb(211,192,44)"/><text x="82.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="548" width="4" height="15" fill="rgb(231,186,31)"/><text x="82.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="564" width="4" height="15" fill="rgb(233,62,47)"/><text x="82.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="580" width="4" height="15" fill="rgb(250,62,26)"/><text x="82.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="79" y="596" width="4" height="15" fill="rgb(232,55,9)"/><text x="82.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="612" width="4" height="15" fill="rgb(212,80,28)"/><text x="82.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.33%)</title><rect x="79" y="628" width="4" height="15" fill="rgb(216,137,8)"/><text x="82.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="644" width="4" height="15" fill="rgb(233,43,16)"/><text x="82.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="660" width="4" height="15" fill="rgb(220,54,44)"/><text x="82.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="676" width="4" height="15" fill="rgb(207,202,24)"/><text x="82.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="692" width="4" height="15" fill="rgb(249,93,51)"/><text x="82.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="708" width="4" height="15" fill="rgb(253,30,36)"/><text x="82.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="724" width="4" height="15" fill="rgb(244,69,44)"/><text x="82.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="79" y="740" width="4" height="15" fill="rgb(221,220,43)"/><text x="82.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="756" width="4" height="15" fill="rgb(229,64,30)"/><text x="82.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.33%)</title><rect x="79" y="772" width="4" height="15" fill="rgb(217,115,51)"/><text x="82.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="788" width="4" height="15" fill="rgb(247,49,38)"/><text x="82.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="804" width="4" height="15" fill="rgb(226,38,53)"/><text x="82.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="820" width="4" height="15" fill="rgb(250,89,33)"/><text x="82.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="836" width="4" height="15" fill="rgb(225,2,30)"/><text x="82.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="852" width="4" height="15" fill="rgb(241,64,7)"/><text x="82.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="79" y="868" width="4" height="15" fill="rgb(254,67,5)"/><text x="82.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="884" width="4" height="15" fill="rgb(249,28,6)"/><text x="82.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.33%)</title><rect x="79" y="900" width="4" height="15" fill="rgb(232,40,17)"/><text x="82.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="916" width="4" height="15" fill="rgb(232,120,10)"/><text x="82.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="932" width="4" height="15" fill="rgb(222,32,10)"/><text x="82.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="948" width="4" height="15" fill="rgb(249,12,2)"/><text x="82.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="79" y="964" width="4" height="15" fill="rgb(246,220,51)"/><text x="82.00" y="974.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="79" y="980" width="4" height="15" fill="rgb(214,66,51)"/><text x="82.00" y="990.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="79" y="996" width="4" height="15" fill="rgb(238,143,40)"/><text x="82.00" y="1006.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.65%)</title><rect x="79" y="372" width="8" height="15" fill="rgb(244,133,44)"/><text x="82.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="79" y="388" width="8" height="15" fill="rgb(242,171,20)"/><text x="82.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="79" y="404" width="8" height="15" fill="rgb(213,155,33)"/><text x="82.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="79" y="420" width="8" height="15" fill="rgb(241,147,9)"/><text x="82.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="79" y="436" width="8" height="15" fill="rgb(241,87,45)"/><text x="82.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="79" y="452" width="8" height="15" fill="rgb(250,196,30)"/><text x="82.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="79" y="468" width="8" height="15" fill="rgb(226,41,15)"/><text x="82.00" y="478.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="83" y="484" width="4" height="15" fill="rgb(254,107,35)"/><text x="86.00" y="494.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="83" y="500" width="4" height="15" fill="rgb(254,132,3)"/><text x="86.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 6.86%)</title><rect x="10" y="68" width="80" height="15" fill="rgb(234,203,18)"/><text x="13.00" y="78.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 6.86%)</title><rect x="10" y="84" width="80" height="15" fill="rgb(233,24,53)"/><text x="13.00" y="94.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 6.86%)</title><rect x="10" y="100" width="80" height="15" fill="rgb(207,133,48)"/><text x="13.00" y="110.50">_load_unl..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 6.86%)</title><rect x="10" y="116" width="80" height="15" fill="rgb(253,128,34)"/><text x="13.00" y="126.50">exec_modu..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 6.86%)</title><rect x="10" y="132" width="80" height="15" fill="rgb(218,172,35)"/><text x="13.00" y="142.50">_call_wit..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid.py) (21 samples, 6.86%)</title><rect x="10" y="148" width="80" height="15" fill="rgb(207,140,31)"/><text x="13.00" y="158.50">&lt;module&gt; ..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 6.86%)</title><rect x="10" y="164" width="80" height="15" fill="rgb(234,206,22)"/><text x="13.00" y="174.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 6.86%)</title><rect x="10" y="180" width="80" height="15" fill="rgb(211,178,35)"/><text x="13.00" y="190.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.58%)</title><rect x="36" y="196" width="54" height="15" fill="rgb(222,54,13)"/><text x="39.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 4.58%)</title><rect x="36" y="212" width="54" height="15" fill="rgb(207,193,1)"/><text x="39.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.58%)</title><rect x="36" y="228" width="54" height="15" fill="rgb(223,205,35)"/><text x="39.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.98%)</title><rect x="79" y="244" width="11" height="15" fill="rgb(223,110,41)"/><text x="82.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="79" y="260" width="11" height="15" fill="rgb(223,64,2)"/><text x="82.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="79" y="276" width="11" height="15" fill="rgb(234,214,1)"/><text x="82.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="79" y="292" width="11" height="15" fill="rgb(212,124,54)"/><text x="82.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="79" y="308" width="11" height="15" fill="rgb(250,133,53)"/><text x="82.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="79" y="324" width="11" height="15" fill="rgb(249,6,5)"/><text x="82.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="79" y="340" width="11" height="15" fill="rgb(221,193,30)"/><text x="82.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="79" y="356" width="11" height="15" fill="rgb(205,188,47)"/><text x="82.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.33%)</title><rect x="87" y="372" width="3" height="15" fill="rgb(241,118,11)"/><text x="90.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="87" y="388" width="3" height="15" fill="rgb(237,37,33)"/><text x="90.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="87" y="404" width="3" height="15" fill="rgb(210,146,35)"/><text x="90.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="87" y="420" width="3" height="15" fill="rgb(227,123,9)"/><text x="90.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="87" y="436" width="3" height="15" fill="rgb(247,41,28)"/><text x="90.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="87" y="452" width="3" height="15" fill="rgb(243,18,7)"/><text x="90.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/shape_base.py) (1 samples, 0.33%)</title><rect x="87" y="468" width="3" height="15" fill="rgb(211,68,51)"/><text x="90.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.33%)</title><rect x="87" y="484" width="3" height="15" fill="rgb(224,213,9)"/><text x="90.00" y="494.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="133" y="180" width="4" height="15" fill="rgb(205,74,49)"/><text x="136.00" y="190.50"></text></g><g><title>0x7f750ea78ff9 (?) (1 samples, 0.33%)</title><rect x="144" y="212" width="4" height="15" fill="rgb(210,167,3)"/><text x="147.00" y="222.50"></text></g><g><title>0x7f750ea73ef6 (?) (1 samples, 0.33%)</title><rect x="144" y="228" width="4" height="15" fill="rgb(231,89,20)"/><text x="147.00" y="238.50"></text></g><g><title>0x7f750ea68962 (?) (1 samples, 0.33%)</title><rect x="144" y="244" width="4" height="15" fill="rgb(212,60,12)"/><text x="147.00" y="254.50"></text></g><g><title>0x7f750ea9c7a7 (?) (1 samples, 0.33%)</title><rect x="144" y="260" width="4" height="15" fill="rgb(240,202,37)"/><text x="147.00" y="270.50"></text></g><g><title>0x7f750ea9c379 (?) (1 samples, 0.33%)</title><rect x="144" y="276" width="4" height="15" fill="rgb(252,87,24)"/><text x="147.00" y="286.50"></text></g><g><title>0x7f750eefa8b8 (?) (1 samples, 0.33%)</title><rect x="144" y="292" width="4" height="15" fill="rgb(215,79,19)"/><text x="147.00" y="302.50"></text></g><g><title>0x7f750eef8c7f (?) (1 samples, 0.33%)</title><rect x="144" y="308" width="4" height="15" fill="rgb(219,184,39)"/><text x="147.00" y="318.50"></text></g><g><title>0x7f750ef0b99c (?) (1 samples, 0.33%)</title><rect x="144" y="324" width="4" height="15" fill="rgb(232,210,11)"/><text x="147.00" y="334.50"></text></g><g><title>0x7f750ecf8edc (?) (1 samples, 0.33%)</title><rect x="144" y="340" width="4" height="15" fill="rgb(252,178,36)"/><text x="147.00" y="350.50"></text></g><g><title>0x7f750ea400f0 (?) (1 samples, 0.33%)</title><rect x="144" y="356" width="4" height="15" fill="rgb(239,194,7)"/><text x="147.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="156" y="244" width="4" height="15" fill="rgb(236,54,52)"/><text x="159.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="156" y="260" width="4" height="15" fill="rgb(231,95,53)"/><text x="159.00" y="270.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="160" y="260" width="4" height="15" fill="rgb(205,227,30)"/><text x="163.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (5 samples, 1.63%)</title><rect x="148" y="212" width="20" height="15" fill="rgb(216,78,9)"/><text x="151.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.31%)</title><rect x="152" y="228" width="16" height="15" fill="rgb(247,207,30)"/><text x="155.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="160" y="244" width="8" height="15" fill="rgb(213,93,38)"/><text x="163.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="164" y="260" width="4" height="15" fill="rgb(240,21,18)"/><text x="167.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="164" y="276" width="4" height="15" fill="rgb(246,96,41)"/><text x="167.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="164" y="292" width="4" height="15" fill="rgb(206,118,10)"/><text x="167.00" y="302.50"></text></g><g><title>0x7f754ea69120 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="171" y="260" width="4" height="15" fill="rgb(245,121,46)"/><text x="174.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="175" y="260" width="4" height="15" fill="rgb(227,140,45)"/><text x="178.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="179" y="260" width="4" height="15" fill="rgb(222,3,1)"/><text x="182.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="179" y="276" width="4" height="15" fill="rgb(254,91,25)"/><text x="182.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="179" y="292" width="4" height="15" fill="rgb(246,58,29)"/><text x="182.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="187" y="292" width="4" height="15" fill="rgb(236,75,7)"/><text x="190.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="187" y="308" width="4" height="15" fill="rgb(254,37,35)"/><text x="190.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="187" y="324" width="4" height="15" fill="rgb(225,114,9)"/><text x="190.00" y="334.50"></text></g><g><title>0x7f754ea49c38 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="187" y="340" width="4" height="15" fill="rgb(247,182,29)"/><text x="190.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="191" y="292" width="4" height="15" fill="rgb(222,17,42)"/><text x="194.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="195" y="340" width="3" height="15" fill="rgb(251,65,5)"/><text x="198.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="195" y="356" width="3" height="15" fill="rgb(237,46,10)"/><text x="198.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="195" y="372" width="3" height="15" fill="rgb(209,199,35)"/><text x="198.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="195" y="388" width="3" height="15" fill="rgb(206,169,26)"/><text x="198.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="195" y="404" width="3" height="15" fill="rgb(231,114,52)"/><text x="198.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="195" y="420" width="3" height="15" fill="rgb(222,207,39)"/><text x="198.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="195" y="436" width="3" height="15" fill="rgb(222,81,21)"/><text x="198.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="195" y="452" width="3" height="15" fill="rgb(220,90,16)"/><text x="198.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="195" y="468" width="3" height="15" fill="rgb(212,229,35)"/><text x="198.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="195" y="484" width="3" height="15" fill="rgb(242,15,39)"/><text x="198.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="195" y="500" width="3" height="15" fill="rgb(218,128,10)"/><text x="198.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="195" y="516" width="3" height="15" fill="rgb(240,32,0)"/><text x="198.00" y="526.50"></text></g><g><title>0x7f750ea40920 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="210" y="356" width="4" height="15" fill="rgb(223,202,51)"/><text x="213.00" y="366.50"></text></g><g><title>0x7f754ebc7e46 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="214" y="356" width="4" height="15" fill="rgb(230,211,19)"/><text x="217.00" y="366.50"></text></g><g><title>0x7f754ebc7e71 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="218" y="356" width="4" height="15" fill="rgb(250,61,26)"/><text x="221.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="222" y="356" width="3" height="15" fill="rgb(237,176,22)"/><text x="225.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="222" y="372" width="3" height="15" fill="rgb(246,159,53)"/><text x="225.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="222" y="388" width="3" height="15" fill="rgb(224,204,18)"/><text x="225.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="222" y="404" width="3" height="15" fill="rgb(207,197,36)"/><text x="225.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="222" y="420" width="3" height="15" fill="rgb(227,41,43)"/><text x="225.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="222" y="436" width="3" height="15" fill="rgb(207,36,0)"/><text x="225.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="222" y="452" width="3" height="15" fill="rgb(216,195,20)"/><text x="225.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="222" y="468" width="3" height="15" fill="rgb(254,132,15)"/><text x="225.00" y="478.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="225" y="356" width="4" height="15" fill="rgb(207,189,4)"/><text x="228.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="225" y="372" width="4" height="15" fill="rgb(237,5,42)"/><text x="228.00" y="382.50"></text></g><g><title>0x7f754ea48a53 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="225" y="388" width="4" height="15" fill="rgb(231,69,41)"/><text x="228.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="229" y="372" width="4" height="15" fill="rgb(216,65,23)"/><text x="232.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="229" y="356" width="8" height="15" fill="rgb(209,73,4)"/><text x="232.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="233" y="372" width="4" height="15" fill="rgb(221,156,20)"/><text x="236.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="233" y="388" width="4" height="15" fill="rgb(227,71,9)"/><text x="236.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 5.88%)</title><rect x="183" y="260" width="69" height="15" fill="rgb(251,216,28)"/><text x="186.00" y="270.50">onnxrun..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 5.88%)</title><rect x="183" y="276" width="69" height="15" fill="rgb(222,58,44)"/><text x="186.00" y="286.50">onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 4.90%)</title><rect x="195" y="292" width="57" height="15" fill="rgb(236,170,24)"/><text x="198.00" y="302.50">onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 4.90%)</title><rect x="195" y="308" width="57" height="15" fill="rgb(207,227,19)"/><text x="198.00" y="318.50">onnxru..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 4.90%)</title><rect x="195" y="324" width="57" height="15" fill="rgb(242,34,44)"/><text x="198.00" y="334.50">onnxru..</text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.58%)</title><rect x="198" y="340" width="54" height="15" fill="rgb(232,198,51)"/><text x="201.00" y="350.50">onnxr..</text></g><g><title>tanhf32x (libm-2.29.so) (4 samples, 1.31%)</title><rect x="237" y="356" width="15" height="15" fill="rgb(253,152,24)"/><text x="240.00" y="366.50"></text></g><g><title>expm1f64 (libm-2.29.so) (2 samples, 0.65%)</title><rect x="245" y="372" width="7" height="15" fill="rgb(220,200,0)"/><text x="248.00" y="382.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="256" y="276" width="4" height="15" fill="rgb(208,152,29)"/><text x="259.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.98%)</title><rect x="252" y="260" width="12" height="15" fill="rgb(207,72,35)"/><text x="255.00" y="270.50"></text></g><g><title>std::__shared_ptr&lt;onnxruntime::IAllocator, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr [clone .localalias.84] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="260" y="276" width="4" height="15" fill="rgb(230,86,4)"/><text x="263.00" y="286.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.33%)</title><rect x="264" y="276" width="4" height="15" fill="rgb(218,102,35)"/><text x="267.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="264" y="292" width="4" height="15" fill="rgb(248,225,4)"/><text x="267.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="264" y="308" width="4" height="15" fill="rgb(237,112,15)"/><text x="267.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="264" y="260" width="8" height="15" fill="rgb(222,175,36)"/><text x="267.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="268" y="276" width="4" height="15" fill="rgb(218,54,27)"/><text x="271.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 9.48%)</title><rect x="168" y="244" width="111" height="15" fill="rgb(254,124,47)"/><text x="171.00" y="254.50">onnxruntime::..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (2 samples, 0.65%)</title><rect x="272" y="260" width="7" height="15" fill="rgb(232,95,26)"/><text x="275.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="279" y="244" width="8" height="15" fill="rgb(220,38,15)"/><text x="282.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="283" y="260" width="4" height="15" fill="rgb(219,13,50)"/><text x="286.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="283" y="276" width="4" height="15" fill="rgb(228,2,21)"/><text x="286.00" y="286.50"></text></g><g><title>0x7f754ea68d50 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="283" y="292" width="4" height="15" fill="rgb(236,83,51)"/><text x="286.00" y="302.50"></text></g><g><title>profile_ort (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (52 samples, 16.99%)</title><rect x="90" y="68" width="201" height="15" fill="rgb(219,208,7)"/><text x="93.00" y="78.50">profile_ort (bench_SVC_sig..</text></g><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (52 samples, 16.99%)</title><rect x="90" y="84" width="201" height="15" fill="rgb(254,130,43)"/><text x="93.00" y="94.50">setup_profile (bench_SVC_s..</text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (52 samples, 16.99%)</title><rect x="90" y="100" width="201" height="15" fill="rgb(237,210,45)"/><text x="93.00" y="110.50">profile (bench_SVC_sigmoid..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (49 samples, 16.01%)</title><rect x="102" y="116" width="189" height="15" fill="rgb(224,1,7)"/><text x="105.00" y="126.50">time_predict (mlprodict/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (48 samples, 15.69%)</title><rect x="106" y="132" width="185" height="15" fill="rgb(212,123,13)"/><text x="109.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (46 samples, 15.03%)</title><rect x="114" y="148" width="177" height="15" fill="rgb(206,60,34)"/><text x="117.00" y="158.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (45 samples, 14.71%)</title><rect x="117" y="164" width="174" height="15" fill="rgb(222,78,16)"/><text x="120.00" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (40 samples, 13.07%)</title><rect x="137" y="180" width="154" height="15" fill="rgb(225,186,47)"/><text x="140.00" y="190.50">run (mlprodict/onnx..</text></g><g><title>run (onnxruntime/capi/session.py) (38 samples, 12.42%)</title><rect x="144" y="196" width="147" height="15" fill="rgb(240,99,20)"/><text x="147.00" y="206.50">run (onnxruntime/c..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 10.46%)</title><rect x="168" y="212" width="123" height="15" fill="rgb(211,124,42)"/><text x="171.00" y="222.50">pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 10.46%)</title><rect x="168" y="228" width="123" height="15" fill="rgb(246,74,52)"/><text x="171.00" y="238.50">void pybind11::..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="287" y="244" width="4" height="15" fill="rgb(254,138,10)"/><text x="290.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="291" y="116" width="4" height="15" fill="rgb(224,41,18)"/><text x="294.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="291" y="132" width="4" height="15" fill="rgb(219,97,14)"/><text x="294.00" y="142.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.33%)</title><rect x="291" y="148" width="4" height="15" fill="rgb(241,138,30)"/><text x="294.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.65%)</title><rect x="337" y="180" width="8" height="15" fill="rgb(246,221,31)"/><text x="340.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.33%)</title><rect x="426" y="196" width="4" height="15" fill="rgb(242,61,22)"/><text x="429.00" y="206.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.65%)</title><rect x="457" y="260" width="8" height="15" fill="rgb(208,181,6)"/><text x="460.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.65%)</title><rect x="457" y="276" width="8" height="15" fill="rgb(218,170,21)"/><text x="460.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="461" y="292" width="4" height="15" fill="rgb(248,183,17)"/><text x="464.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (5 samples, 1.63%)</title><rect x="453" y="212" width="19" height="15" fill="rgb(239,90,19)"/><text x="456.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (5 samples, 1.63%)</title><rect x="453" y="228" width="19" height="15" fill="rgb(234,105,12)"/><text x="456.00" y="238.50"></text></g><g><title>array_astype (methods.c) (4 samples, 1.31%)</title><rect x="457" y="244" width="15" height="15" fill="rgb(224,20,25)"/><text x="460.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.65%)</title><rect x="465" y="260" width="7" height="15" fill="rgb(213,3,33)"/><text x="468.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.33%)</title><rect x="472" y="212" width="4" height="15" fill="rgb(233,170,36)"/><text x="475.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.33%)</title><rect x="472" y="228" width="4" height="15" fill="rgb(236,149,33)"/><text x="475.00" y="238.50"></text></g><g><title>0x7f750fbb8b1f (?) (1 samples, 0.33%)</title><rect x="484" y="244" width="4" height="15" fill="rgb(247,42,34)"/><text x="487.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.33%)</title><rect x="488" y="244" width="4" height="15" fill="rgb(223,54,48)"/><text x="491.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.33%)</title><rect x="488" y="260" width="4" height="15" fill="rgb(243,176,13)"/><text x="491.00" y="270.50"></text></g><g><title>pybind11::detail::function_call::function_call (attr.h) (2 samples, 0.65%)</title><rect x="492" y="260" width="7" height="15" fill="rgb(236,86,38)"/><text x="495.00" y="270.50"></text></g><g><title>std::vector&lt;pybind11::handle, std::allocator&lt;pybind11::handle&gt; &gt;::reserve (vector.tcc) (2 samples, 0.65%)</title><rect x="492" y="276" width="7" height="15" fill="rgb(247,175,3)"/><text x="495.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.65%)</title><rect x="492" y="292" width="7" height="15" fill="rgb(209,141,21)"/><text x="495.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="495" y="308" width="4" height="15" fill="rgb(211,38,50)"/><text x="498.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="499" y="436" width="4" height="15" fill="rgb(239,61,27)"/><text x="502.00" y="446.50"></text></g><g><title>tanhf32x (libm-2.29.so) (11 samples, 3.59%)</title><rect x="511" y="484" width="42" height="15" fill="rgb(253,14,54)"/><text x="514.00" y="494.50">tan..</text></g><g><title>expm1f64 (libm-2.29.so) (8 samples, 2.61%)</title><rect x="522" y="500" width="31" height="15" fill="rgb(245,80,35)"/><text x="525.00" y="510.50">ex..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (16 samples, 5.23%)</title><rect x="499" y="292" width="62" height="15" fill="rgb(224,200,38)"/><text x="502.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (16 samples, 5.23%)</title><rect x="499" y="308" width="62" height="15" fill="rgb(217,59,38)"/><text x="502.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (16 samples, 5.23%)</title><rect x="499" y="324" width="62" height="15" fill="rgb(246,79,26)"/><text x="502.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (16 samples, 5.23%)</title><rect x="499" y="340" width="62" height="15" fill="rgb(237,50,44)"/><text x="502.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h) (16 samples, 5.23%)</title><rect x="499" y="356" width="62" height="15" fill="rgb(238,216,35)"/><text x="502.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (16 samples, 5.23%)</title><rect x="499" y="372" width="62" height="15" fill="rgb(229,7,50)"/><text x="502.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h) (16 samples, 5.23%)</title><rect x="499" y="388" width="62" height="15" fill="rgb(232,151,16)"/><text x="502.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (16 samples, 5.23%)</title><rect x="499" y="404" width="62" height="15" fill="rgb(225,104,44)"/><text x="502.00" y="414.50">pybind..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (16 samples, 5.23%)</title><rect x="499" y="420" width="62" height="15" fill="rgb(238,51,9)"/><text x="502.00" y="430.50">Runtim..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (15 samples, 4.90%)</title><rect x="503" y="436" width="58" height="15" fill="rgb(216,64,8)"/><text x="506.00" y="446.50">pybind..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (15 samples, 4.90%)</title><rect x="503" y="452" width="58" height="15" fill="rgb(213,28,15)"/><text x="506.00" y="462.50">Runtim..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (14 samples, 4.58%)</title><rect x="507" y="468" width="54" height="15" fill="rgb(217,105,53)"/><text x="510.00" y="478.50">Runti..</text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (2 samples, 0.65%)</title><rect x="553" y="484" width="8" height="15" fill="rgb(234,207,31)"/><text x="556.00" y="494.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.65%)</title><rect x="561" y="436" width="8" height="15" fill="rgb(222,75,16)"/><text x="564.00" y="446.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.33%)</title><rect x="565" y="452" width="4" height="15" fill="rgb(215,140,39)"/><text x="568.00" y="462.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (70 samples, 22.88%)</title><rect x="303" y="164" width="270" height="15" fill="rgb(218,5,30)"/><text x="306.00" y="174.50">_run_sequence_runtime (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (59 samples, 19.28%)</title><rect x="345" y="180" width="228" height="15" fill="rgb(249,39,43)"/><text x="348.00" y="190.50">run (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (37 samples, 12.09%)</title><rect x="430" y="196" width="143" height="15" fill="rgb(241,190,0)"/><text x="433.00" y="206.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (25 samples, 8.17%)</title><rect x="476" y="212" width="97" height="15" fill="rgb(205,186,46)"/><text x="479.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (24 samples, 7.84%)</title><rect x="480" y="228" width="93" height="15" fill="rgb(227,75,22)"/><text x="483.00" y="238.50">_run (mlpro..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (21 samples, 6.86%)</title><rect x="492" y="244" width="81" height="15" fill="rgb(245,189,41)"/><text x="495.00" y="254.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (19 samples, 6.21%)</title><rect x="499" y="260" width="74" height="15" fill="rgb(244,77,11)"/><text x="502.00" y="270.50">void pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (19 samples, 6.21%)</title><rect x="499" y="276" width="74" height="15" fill="rgb(222,8,13)"/><text x="502.00" y="286.50">void pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (3 samples, 0.98%)</title><rect x="561" y="292" width="12" height="15" fill="rgb(245,98,0)"/><text x="564.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (3 samples, 0.98%)</title><rect x="561" y="308" width="12" height="15" fill="rgb(252,27,28)"/><text x="564.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h) (3 samples, 0.98%)</title><rect x="561" y="324" width="12" height="15" fill="rgb(248,185,34)"/><text x="564.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h) (3 samples, 0.98%)</title><rect x="561" y="340" width="12" height="15" fill="rgb(227,169,29)"/><text x="564.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h) (3 samples, 0.98%)</title><rect x="561" y="356" width="12" height="15" fill="rgb(235,36,24)"/><text x="564.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h) (3 samples, 0.98%)</title><rect x="561" y="372" width="12" height="15" fill="rgb(226,185,10)"/><text x="564.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h) (3 samples, 0.98%)</title><rect x="561" y="388" width="12" height="15" fill="rgb(205,0,51)"/><text x="564.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (3 samples, 0.98%)</title><rect x="561" y="404" width="12" height="15" fill="rgb(246,187,25)"/><text x="564.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.98%)</title><rect x="561" y="420" width="12" height="15" fill="rgb(222,121,8)"/><text x="564.00" y="430.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.33%)</title><rect x="569" y="436" width="4" height="15" fill="rgb(212,74,18)"/><text x="572.00" y="446.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.33%)</title><rect x="569" y="452" width="4" height="15" fill="rgb(230,4,33)"/><text x="572.00" y="462.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.33%)</title><rect x="569" y="468" width="4" height="15" fill="rgb(215,77,20)"/><text x="572.00" y="478.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="569" y="484" width="4" height="15" fill="rgb(238,223,46)"/><text x="572.00" y="494.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (73 samples, 23.86%)</title><rect x="295" y="132" width="281" height="15" fill="rgb(234,186,30)"/><text x="298.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/com..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (72 samples, 23.53%)</title><rect x="299" y="148" width="277" height="15" fill="rgb(252,87,1)"/><text x="302.00" y="158.50">run (mlprodict/onnxrt/onnx_inference...</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="573" y="164" width="3" height="15" fill="rgb(226,120,0)"/><text x="576.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="573" y="180" width="3" height="15" fill="rgb(208,35,33)"/><text x="576.00" y="190.50"></text></g><g><title>profile_pyrt (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (76 samples, 24.84%)</title><rect x="291" y="68" width="293" height="15" fill="rgb(254,38,33)"/><text x="294.00" y="78.50">profile_pyrt (bench_SVC_sigmoid_b_cl_pr..</text></g><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (76 samples, 24.84%)</title><rect x="291" y="84" width="293" height="15" fill="rgb(227,106,26)"/><text x="294.00" y="94.50">setup_profile (bench_SVC_sigmoid_b_cl_p..</text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (76 samples, 24.84%)</title><rect x="291" y="100" width="293" height="15" fill="rgb(219,197,44)"/><text x="294.00" y="110.50">profile (bench_SVC_sigmoid_b_cl_probabi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (75 samples, 24.51%)</title><rect x="295" y="116" width="289" height="15" fill="rgb(208,185,20)"/><text x="298.00" y="126.50">time_predict (mlprodict/asv_benchmark/..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.65%)</title><rect x="576" y="132" width="8" height="15" fill="rgb(212,47,13)"/><text x="579.00" y="142.50"></text></g><g><title>0x7f7529520e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.98%)</title><rect x="650" y="212" width="11" height="15" fill="rgb(205,44,20)"/><text x="653.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.65%)</title><rect x="653" y="228" width="8" height="15" fill="rgb(229,131,36)"/><text x="656.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.65%)</title><rect x="653" y="244" width="8" height="15" fill="rgb(231,54,35)"/><text x="656.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.33%)</title><rect x="657" y="260" width="4" height="15" fill="rgb(245,5,46)"/><text x="660.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.33%)</title><rect x="657" y="276" width="4" height="15" fill="rgb(205,123,14)"/><text x="660.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.33%)</title><rect x="657" y="292" width="4" height="15" fill="rgb(226,214,27)"/><text x="660.00" y="302.50"></text></g><g><title>0x7f7529536d0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.31%)</title><rect x="650" y="196" width="15" height="15" fill="rgb(233,94,24)"/><text x="653.00" y="206.50"></text></g><g><title>0x7f7529520f2c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="661" y="212" width="4" height="15" fill="rgb(213,141,4)"/><text x="664.00" y="222.50"></text></g><g><title>0x7f75295205ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.98%)</title><rect x="665" y="212" width="12" height="15" fill="rgb(250,39,41)"/><text x="668.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.98%)</title><rect x="665" y="228" width="12" height="15" fill="rgb(205,23,33)"/><text x="668.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.98%)</title><rect x="665" y="244" width="12" height="15" fill="rgb(252,113,42)"/><text x="668.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.33%)</title><rect x="673" y="260" width="4" height="15" fill="rgb(220,162,52)"/><text x="676.00" y="270.50"></text></g><g><title>0x7f754ea48902 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="673" y="276" width="4" height="15" fill="rgb(254,3,25)"/><text x="676.00" y="286.50"></text></g><g><title>0x7f7529536d58 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.31%)</title><rect x="665" y="196" width="15" height="15" fill="rgb(230,58,53)"/><text x="668.00" y="206.50"></text></g><g><title>0x7f752952067f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="677" y="212" width="3" height="15" fill="rgb(222,197,17)"/><text x="680.00" y="222.50"></text></g><g><title>0x7f752951ffc4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="677" y="228" width="3" height="15" fill="rgb(211,71,42)"/><text x="680.00" y="238.50"></text></g><g><title>0x7f7529536f0a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="680" y="196" width="4" height="15" fill="rgb(225,62,52)"/><text x="683.00" y="206.50"></text></g><g><title>0x7f7529520e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="680" y="212" width="4" height="15" fill="rgb(247,118,21)"/><text x="683.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.33%)</title><rect x="680" y="228" width="4" height="15" fill="rgb(244,29,50)"/><text x="683.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="680" y="244" width="4" height="15" fill="rgb(209,194,48)"/><text x="683.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.33%)</title><rect x="680" y="260" width="4" height="15" fill="rgb(246,10,2)"/><text x="683.00" y="270.50"></text></g><g><title>0x7f7529536f5c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="684" y="196" width="4" height="15" fill="rgb(233,39,21)"/><text x="687.00" y="206.50"></text></g><g><title>0x7f7529520e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="684" y="212" width="4" height="15" fill="rgb(243,216,52)"/><text x="687.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.33%)</title><rect x="684" y="228" width="4" height="15" fill="rgb(244,85,44)"/><text x="687.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="684" y="244" width="4" height="15" fill="rgb(242,148,12)"/><text x="687.00" y="254.50"></text></g><g><title>0x7f7529536f9b (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="688" y="196" width="4" height="15" fill="rgb(232,161,30)"/><text x="691.00" y="206.50"></text></g><g><title>0x7f7529520f13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="688" y="212" width="4" height="15" fill="rgb(218,4,52)"/><text x="691.00" y="222.50"></text></g><g><title>0x7f752952005a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="688" y="228" width="4" height="15" fill="rgb(234,194,50)"/><text x="691.00" y="238.50"></text></g><g><title>0x7f752951f986 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="688" y="244" width="4" height="15" fill="rgb(250,93,27)"/><text x="691.00" y="254.50"></text></g><g><title>0x7f7529536ff0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="692" y="196" width="4" height="15" fill="rgb(208,173,3)"/><text x="695.00" y="206.50"></text></g><g><title>0x7f7529537006 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="696" y="196" width="4" height="15" fill="rgb(237,11,46)"/><text x="699.00" y="206.50"></text></g><g><title>0x7f754ea5e757 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="704" y="228" width="3" height="15" fill="rgb(245,152,26)"/><text x="707.00" y="238.50"></text></g><g><title>0x7f752953712f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.31%)</title><rect x="700" y="196" width="15" height="15" fill="rgb(238,221,6)"/><text x="703.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c) (4 samples, 1.31%)</title><rect x="700" y="212" width="15" height="15" fill="rgb(229,132,9)"/><text x="703.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (2 samples, 0.65%)</title><rect x="707" y="228" width="8" height="15" fill="rgb(217,159,39)"/><text x="710.00" y="238.50"></text></g><g><title>_calc_length (ctors.c) (2 samples, 0.65%)</title><rect x="707" y="244" width="8" height="15" fill="rgb(209,49,39)"/><text x="710.00" y="254.50"></text></g><g><title>0x7f7529537237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="715" y="196" width="4" height="15" fill="rgb(254,151,51)"/><text x="718.00" y="206.50"></text></g><g><title>0x7f75295217c1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="715" y="212" width="4" height="15" fill="rgb(233,12,27)"/><text x="718.00" y="222.50"></text></g><g><title>0x7f75295372b8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="719" y="196" width="4" height="15" fill="rgb(249,14,12)"/><text x="722.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="719" y="212" width="4" height="15" fill="rgb(253,70,34)"/><text x="722.00" y="222.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="719" y="228" width="4" height="15" fill="rgb(244,147,10)"/><text x="722.00" y="238.50"></text></g><g><title>0x7f75295373f0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="723" y="196" width="4" height="15" fill="rgb(253,201,9)"/><text x="726.00" y="206.50"></text></g><g><title>0x7f754eb26130 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="723" y="212" width="4" height="15" fill="rgb(247,103,45)"/><text x="726.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.65%)</title><rect x="727" y="228" width="7" height="15" fill="rgb(228,163,36)"/><text x="730.00" y="238.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.33%)</title><rect x="731" y="244" width="3" height="15" fill="rgb(212,204,27)"/><text x="734.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.33%)</title><rect x="731" y="260" width="3" height="15" fill="rgb(248,93,12)"/><text x="734.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.33%)</title><rect x="731" y="276" width="3" height="15" fill="rgb(210,45,22)"/><text x="734.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.33%)</title><rect x="734" y="276" width="4" height="15" fill="rgb(249,24,36)"/><text x="737.00" y="286.50"></text></g><g><title>0x7f752953746c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.31%)</title><rect x="727" y="196" width="15" height="15" fill="rgb(230,22,38)"/><text x="730.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c) (4 samples, 1.31%)</title><rect x="727" y="212" width="15" height="15" fill="rgb(232,118,8)"/><text x="730.00" y="222.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.65%)</title><rect x="734" y="228" width="8" height="15" fill="rgb(225,179,26)"/><text x="737.00" y="238.50"></text></g><g><title>PyArray_Empty (ctors.c) (2 samples, 0.65%)</title><rect x="734" y="244" width="8" height="15" fill="rgb(216,116,22)"/><text x="737.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.65%)</title><rect x="734" y="260" width="8" height="15" fill="rgb(212,201,31)"/><text x="737.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="738" y="276" width="4" height="15" fill="rgb(212,161,7)"/><text x="741.00" y="286.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="742" y="244" width="4" height="15" fill="rgb(221,169,44)"/><text x="745.00" y="254.50"></text></g><g><title>0x7f754ea48e64 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="746" y="260" width="4" height="15" fill="rgb(207,93,22)"/><text x="749.00" y="270.50"></text></g><g><title>0x7f7529520e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.98%)</title><rect x="742" y="212" width="12" height="15" fill="rgb(228,202,48)"/><text x="745.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.98%)</title><rect x="742" y="228" width="12" height="15" fill="rgb(219,93,33)"/><text x="745.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.65%)</title><rect x="746" y="244" width="8" height="15" fill="rgb(207,149,31)"/><text x="749.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="750" y="260" width="4" height="15" fill="rgb(205,108,45)"/><text x="753.00" y="270.50"></text></g><g><title>0x7f7529537528 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.31%)</title><rect x="742" y="196" width="16" height="15" fill="rgb(207,91,37)"/><text x="745.00" y="206.50"></text></g><g><title>0x7f7529520f13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="754" y="212" width="4" height="15" fill="rgb(253,181,45)"/><text x="757.00" y="222.50"></text></g><g><title>0x7f752952033c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="754" y="228" width="4" height="15" fill="rgb(220,170,40)"/><text x="757.00" y="238.50"></text></g><g><title>0x7f752951fe39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="754" y="244" width="4" height="15" fill="rgb(208,78,27)"/><text x="757.00" y="254.50"></text></g><g><title>0x7f754ea48998 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="761" y="228" width="4" height="15" fill="rgb(218,1,11)"/><text x="764.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.98%)</title><rect x="765" y="244" width="12" height="15" fill="rgb(216,61,40)"/><text x="768.00" y="254.50"></text></g><g><title>0x7f754ea49d50 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="773" y="260" width="4" height="15" fill="rgb(254,202,24)"/><text x="776.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="785" y="260" width="3" height="15" fill="rgb(240,169,54)"/><text x="788.00" y="270.50"></text></g><g><title>0x7f7529537553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (14 samples, 4.58%)</title><rect x="758" y="196" width="54" height="15" fill="rgb(217,95,34)"/><text x="761.00" y="206.50">0x7f7..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (14 samples, 4.58%)</title><rect x="758" y="212" width="54" height="15" fill="rgb(241,140,6)"/><text x="761.00" y="222.50">copy_..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (12 samples, 3.92%)</title><rect x="765" y="228" width="47" height="15" fill="rgb(233,73,38)"/><text x="768.00" y="238.50">svm_..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.94%)</title><rect x="777" y="244" width="35" height="15" fill="rgb(213,172,43)"/><text x="780.00" y="254.50">sv..</text></g><g><title>tanhf32x (libm-2.29.so) (6 samples, 1.96%)</title><rect x="788" y="260" width="24" height="15" fill="rgb(229,162,28)"/><text x="791.00" y="270.50">t..</text></g><g><title>expm1f64 (libm-2.29.so) (5 samples, 1.63%)</title><rect x="792" y="276" width="20" height="15" fill="rgb(254,179,6)"/><text x="795.00" y="286.50"></text></g><g><title>0x7f75295375a2 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="812" y="196" width="3" height="15" fill="rgb(251,195,47)"/><text x="815.00" y="206.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (55 samples, 17.97%)</title><rect x="607" y="164" width="212" height="15" fill="rgb(240,88,44)"/><text x="610.00" y="174.50">_dense_predict_proba (sklea..</text></g><g><title>0x7f75295393fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (44 samples, 14.38%)</title><rect x="650" y="180" width="169" height="15" fill="rgb(234,212,21)"/><text x="653.00" y="190.50">0x7f75295393fd (sklea..</text></g><g><title>0x7f7529538cd7 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="815" y="196" width="4" height="15" fill="rgb(228,26,32)"/><text x="818.00" y="206.50"></text></g><g><title>0x7f752951ab5e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="815" y="212" width="4" height="15" fill="rgb(243,215,37)"/><text x="818.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.65%)</title><rect x="850" y="196" width="8" height="15" fill="rgb(249,41,18)"/><text x="853.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.33%)</title><rect x="858" y="196" width="4" height="15" fill="rgb(240,14,19)"/><text x="861.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.33%)</title><rect x="862" y="196" width="4" height="15" fill="rgb(209,10,36)"/><text x="865.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="873" y="212" width="8" height="15" fill="rgb(221,162,53)"/><text x="876.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (4 samples, 1.31%)</title><rect x="881" y="212" width="15" height="15" fill="rgb(229,94,19)"/><text x="884.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (12 samples, 3.92%)</title><rect x="866" y="196" width="46" height="15" fill="rgb(246,114,16)"/><text x="869.00" y="206.50">_ass..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="896" y="212" width="16" height="15" fill="rgb(227,2,46)"/><text x="899.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (7 samples, 2.29%)</title><rect x="912" y="196" width="27" height="15" fill="rgb(230,20,41)"/><text x="915.00" y="206.50">_..</text></g><g><title>array_descr_get (getset.c) (1 samples, 0.33%)</title><rect x="935" y="212" width="4" height="15" fill="rgb(216,22,6)"/><text x="938.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.33%)</title><rect x="966" y="212" width="4" height="15" fill="rgb(252,84,0)"/><text x="969.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (12 samples, 3.92%)</title><rect x="939" y="196" width="46" height="15" fill="rgb(220,145,18)"/><text x="942.00" y="206.50">_num..</text></g><g><title>__instancecheck__ (abc.py) (4 samples, 1.31%)</title><rect x="970" y="212" width="15" height="15" fill="rgb(230,2,34)"/><text x="973.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (3 samples, 0.98%)</title><rect x="974" y="228" width="11" height="15" fill="rgb(250,226,49)"/><text x="977.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.33%)</title><rect x="985" y="196" width="4" height="15" fill="rgb(227,159,28)"/><text x="988.00" y="206.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.33%)</title><rect x="997" y="292" width="4" height="15" fill="rgb(217,57,51)"/><text x="1000.00" y="302.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="1001" y="308" width="3" height="15" fill="rgb(211,68,37)"/><text x="1004.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.98%)</title><rect x="997" y="276" width="11" height="15" fill="rgb(251,97,35)"/><text x="1000.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.65%)</title><rect x="1001" y="292" width="7" height="15" fill="rgb(205,153,3)"/><text x="1004.00" y="302.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="1004" y="308" width="4" height="15" fill="rgb(242,10,30)"/><text x="1007.00" y="318.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.33%)</title><rect x="1004" y="324" width="4" height="15" fill="rgb(230,94,40)"/><text x="1007.00" y="334.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (6 samples, 1.96%)</title><rect x="989" y="196" width="23" height="15" fill="rgb(211,145,9)"/><text x="992.00" y="206.50">a..</text></g><g><title>_array_fromobject (multiarraymodule.c) (5 samples, 1.63%)</title><rect x="993" y="212" width="19" height="15" fill="rgb(226,197,8)"/><text x="996.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (4 samples, 1.31%)</title><rect x="997" y="228" width="15" height="15" fill="rgb(219,72,48)"/><text x="1000.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 1.31%)</title><rect x="997" y="244" width="15" height="15" fill="rgb(232,206,40)"/><text x="1000.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (4 samples, 1.31%)</title><rect x="997" y="260" width="15" height="15" fill="rgb(251,61,16)"/><text x="1000.00" y="270.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.33%)</title><rect x="1008" y="276" width="4" height="15" fill="rgb(248,141,5)"/><text x="1011.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="1008" y="292" width="4" height="15" fill="rgb(208,71,10)"/><text x="1011.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.33%)</title><rect x="1008" y="308" width="4" height="15" fill="rgb(240,56,18)"/><text x="1011.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="1008" y="324" width="4" height="15" fill="rgb(217,178,44)"/><text x="1011.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.33%)</title><rect x="1008" y="340" width="4" height="15" fill="rgb(206,166,44)"/><text x="1011.00" y="350.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (54 samples, 17.65%)</title><rect x="827" y="180" width="208" height="15" fill="rgb(245,121,14)"/><text x="830.00" y="190.50">check_array (sklearn/utils/..</text></g><g><title>simplefilter (warnings.py) (6 samples, 1.96%)</title><rect x="1012" y="196" width="23" height="15" fill="rgb(248,47,1)"/><text x="1015.00" y="206.50">s..</text></g><g><title>_add_filter (warnings.py) (5 samples, 1.63%)</title><rect x="1016" y="212" width="19" height="15" fill="rgb(215,58,13)"/><text x="1019.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (11 samples, 3.59%)</title><rect x="1097" y="212" width="42" height="15" fill="rgb(218,154,30)"/><text x="1100.00" y="222.50">uni..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (30 samples, 9.80%)</title><rect x="1043" y="196" width="116" height="15" fill="rgb(243,112,34)"/><text x="1046.00" y="206.50">&lt;listcomp&gt; (sk..</text></g><g><title>unicode_startswith (python3.7) (5 samples, 1.63%)</title><rect x="1139" y="212" width="20" height="15" fill="rgb(248,115,28)"/><text x="1142.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (34 samples, 11.11%)</title><rect x="1035" y="180" width="131" height="15" fill="rgb(253,7,23)"/><text x="1038.00" y="190.50">check_is_fitted ..</text></g><g><title>isclass (inspect.py) (2 samples, 0.65%)</title><rect x="1159" y="196" width="7" height="15" fill="rgb(250,23,1)"/><text x="1162.00" y="206.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py) (148 samples, 48.37%)</title><rect x="600" y="148" width="570" height="15" fill="rgb(238,45,52)"/><text x="603.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (91 samples, 29.74%)</title><rect x="819" y="164" width="351" height="15" fill="rgb(228,44,47)"/><text x="822.00" y="174.50">_validate_for_predict (sklearn/svm/_base.py)</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.33%)</title><rect x="1166" y="180" width="4" height="15" fill="rgb(228,10,41)"/><text x="1169.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="1170" y="148" width="4" height="15" fill="rgb(247,145,49)"/><text x="1173.00" y="158.50"></text></g><g><title>profile_skl (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (154 samples, 50.33%)</title><rect x="584" y="68" width="594" height="15" fill="rgb(233,183,40)"/><text x="587.00" y="78.50">profile_skl (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.p..</text></g><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (154 samples, 50.33%)</title><rect x="584" y="84" width="594" height="15" fill="rgb(215,196,22)"/><text x="587.00" y="94.50">setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_..</text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (154 samples, 50.33%)</title><rect x="584" y="100" width="594" height="15" fill="rgb(244,105,6)"/><text x="587.00" y="110.50">profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (153 samples, 50.00%)</title><rect x="588" y="116" width="590" height="15" fill="rgb(228,115,23)"/><text x="591.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (152 samples, 49.67%)</title><rect x="592" y="132" width="586" height="15" fill="rgb(210,13,34)"/><text x="595.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/svm/_base.py) (1 samples, 0.33%)</title><rect x="1174" y="148" width="4" height="15" fill="rgb(231,88,2)"/><text x="1177.00" y="158.50"></text></g><g><title>_dense_fit (sklearn/svm/_base.py) (1 samples, 0.33%)</title><rect x="1178" y="132" width="4" height="15" fill="rgb(212,150,9)"/><text x="1181.00" y="142.50"></text></g><g><title>0x7f7529530e5a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1178" y="148" width="4" height="15" fill="rgb(223,139,48)"/><text x="1181.00" y="158.50"></text></g><g><title>0x7f7529528667 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1178" y="164" width="4" height="15" fill="rgb(245,199,37)"/><text x="1181.00" y="174.50"></text></g><g><title>svm_train (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1178" y="180" width="4" height="15" fill="rgb(240,33,16)"/><text x="1181.00" y="190.50"></text></g><g><title>svm_train (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1178" y="196" width="4" height="15" fill="rgb(241,81,10)"/><text x="1181.00" y="206.50"></text></g><g><title>0x7f752954362f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1178" y="212" width="4" height="15" fill="rgb(238,82,50)"/><text x="1181.00" y="222.50"></text></g><g><title>svm::Solver::Solve (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1178" y="228" width="4" height="15" fill="rgb(251,47,24)"/><text x="1181.00" y="238.50"></text></g><g><title>svm::Solver::select_working_set (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1178" y="244" width="4" height="15" fill="rgb(207,51,31)"/><text x="1181.00" y="254.50"></text></g><g><title>svm::SVC_Q::get_Q (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1178" y="260" width="4" height="15" fill="rgb(227,13,10)"/><text x="1181.00" y="270.50"></text></g><g><title>tanhf32x (libm-2.29.so) (1 samples, 0.33%)</title><rect x="1178" y="276" width="4" height="15" fill="rgb(214,56,49)"/><text x="1181.00" y="286.50"></text></g><g><title>expm1f64 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="1178" y="292" width="4" height="15" fill="rgb(208,197,26)"/><text x="1181.00" y="302.50"></text></g><g><title>0x7f7541323a66 (?) (1 samples, 0.33%)</title><rect x="1182" y="148" width="4" height="15" fill="rgb(228,41,23)"/><text x="1185.00" y="158.50"></text></g><g><title>0x7f7541315579 (?) (1 samples, 0.33%)</title><rect x="1182" y="164" width="4" height="15" fill="rgb(238,39,6)"/><text x="1185.00" y="174.50"></text></g><g><title>0x7f7540c56713 (?) (1 samples, 0.33%)</title><rect x="1182" y="180" width="4" height="15" fill="rgb(215,222,53)"/><text x="1185.00" y="190.50"></text></g><g><title>0x7f7540c4f884 (?) (1 samples, 0.33%)</title><rect x="1182" y="196" width="4" height="15" fill="rgb(217,33,7)"/><text x="1185.00" y="206.50"></text></g><g><title>inner (contextlib.py) (1 samples, 0.33%)</title><rect x="1182" y="212" width="4" height="15" fill="rgb(248,22,37)"/><text x="1185.00" y="222.50"></text></g><g><title>0x7f7540a32cbf (?) (1 samples, 0.33%)</title><rect x="1182" y="228" width="4" height="15" fill="rgb(209,7,17)"/><text x="1185.00" y="238.50"></text></g><g><title>0x7f7540a1e582 (?) (1 samples, 0.33%)</title><rect x="1182" y="244" width="4" height="15" fill="rgb(227,77,47)"/><text x="1185.00" y="254.50"></text></g><g><title>all (306 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(221,17,20)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (306 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(236,210,54)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py)</text></g><g><title>start (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (3 samples, 0.98%)</title><rect x="1178" y="68" width="12" height="15" fill="rgb(230,41,52)"/><text x="1181.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/svm/SVC/bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid.py) (3 samples, 0.98%)</title><rect x="1178" y="84" width="12" height="15" fill="rgb(224,66,37)"/><text x="1181.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.98%)</title><rect x="1178" y="100" width="12" height="15" fill="rgb(218,42,2)"/><text x="1181.00" y="110.50"></text></g><g><title>fit (sklearn/svm/_base.py) (3 samples, 0.98%)</title><rect x="1178" y="116" width="12" height="15" fill="rgb(235,208,9)"/><text x="1181.00" y="126.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (2 samples, 0.65%)</title><rect x="1182" y="132" width="8" height="15" fill="rgb(243,33,18)"/><text x="1185.00" y="142.50"></text></g><g><title>__init__ (mtrand.c) (1 samples, 0.33%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(251,4,45)"/><text x="1189.00" y="158.50"></text></g><g><title>RandomState___init__ (mtrand.c) (1 samples, 0.33%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(247,199,50)"/><text x="1189.00" y="174.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (1 samples, 0.33%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(241,176,50)"/><text x="1189.00" y="190.50"></text></g><g><title>__init__ (mt19937.c) (1 samples, 0.33%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(240,182,31)"/><text x="1189.00" y="206.50"></text></g><g><title>MT19937___init__ (mt19937.c) (1 samples, 0.33%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(219,149,10)"/><text x="1189.00" y="222.50"></text></g><g><title>inner (contextlib.py) (1 samples, 0.33%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(247,159,6)"/><text x="1189.00" y="238.50"></text></g><g><title>generate_state (bit_generator.c) (1 samples, 0.33%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(214,25,34)"/><text x="1189.00" y="254.50"></text></g><g><title>generate_state (bit_generator.c) (1 samples, 0.33%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(229,2,12)"/><text x="1189.00" y="270.50"></text></g></g></svg>