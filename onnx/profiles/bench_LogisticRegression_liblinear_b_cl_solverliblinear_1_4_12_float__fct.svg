<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1670" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1653.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1653.00"> </text><g id="frames"><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(222,141,20)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(237,2,35)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(208,17,21)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.34%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(254,50,10)"/><text x="13.00" y="1038.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.67%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(247,111,52)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.67%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(219,56,34)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.67%)</title><rect x="10" y="900" width="7" height="15" fill="rgb(206,176,48)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.67%)</title><rect x="10" y="916" width="7" height="15" fill="rgb(236,72,37)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="10" y="932" width="7" height="15" fill="rgb(238,120,26)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="10" y="948" width="7" height="15" fill="rgb(222,210,21)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="10" y="964" width="7" height="15" fill="rgb(207,69,11)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="13" y="980" width="4" height="15" fill="rgb(242,223,5)"/><text x="16.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="13" y="996" width="4" height="15" fill="rgb(234,114,54)"/><text x="16.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="13" y="1012" width="4" height="15" fill="rgb(254,31,0)"/><text x="16.00" y="1022.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 1.01%)</title><rect x="10" y="836" width="11" height="15" fill="rgb(205,25,6)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 1.01%)</title><rect x="10" y="852" width="11" height="15" fill="rgb(208,116,46)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="868" width="4" height="15" fill="rgb(207,138,8)"/><text x="20.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="884" width="4" height="15" fill="rgb(217,57,47)"/><text x="20.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="900" width="4" height="15" fill="rgb(219,174,4)"/><text x="20.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="916" width="4" height="15" fill="rgb(236,97,15)"/><text x="20.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="932" width="4" height="15" fill="rgb(226,210,22)"/><text x="20.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="948" width="4" height="15" fill="rgb(229,76,9)"/><text x="20.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="964" width="4" height="15" fill="rgb(219,116,29)"/><text x="20.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="980" width="4" height="15" fill="rgb(236,146,4)"/><text x="20.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.34%)</title><rect x="17" y="996" width="4" height="15" fill="rgb(241,97,35)"/><text x="20.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/parser.py) (1 samples, 0.34%)</title><rect x="21" y="916" width="4" height="15" fill="rgb(212,182,49)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="932" width="4" height="15" fill="rgb(211,167,10)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="948" width="4" height="15" fill="rgb(211,169,0)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="964" width="4" height="15" fill="rgb(231,8,0)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="21" y="980" width="4" height="15" fill="rgb(249,41,9)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="996" width="4" height="15" fill="rgb(250,213,31)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py) (1 samples, 0.34%)</title><rect x="21" y="1012" width="4" height="15" fill="rgb(223,153,46)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1028" width="4" height="15" fill="rgb(207,173,9)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1044" width="4" height="15" fill="rgb(215,152,16)"/><text x="24.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1060" width="4" height="15" fill="rgb(248,129,0)"/><text x="24.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="21" y="1076" width="4" height="15" fill="rgb(209,96,3)"/><text x="24.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1092" width="4" height="15" fill="rgb(239,37,3)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py) (1 samples, 0.34%)</title><rect x="21" y="1108" width="4" height="15" fill="rgb(210,172,2)"/><text x="24.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1124" width="4" height="15" fill="rgb(207,214,10)"/><text x="24.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1140" width="4" height="15" fill="rgb(233,71,44)"/><text x="24.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1156" width="4" height="15" fill="rgb(253,42,45)"/><text x="24.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1172" width="4" height="15" fill="rgb(253,61,48)"/><text x="24.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1188" width="4" height="15" fill="rgb(205,167,34)"/><text x="24.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="21" y="1204" width="4" height="15" fill="rgb(205,196,47)"/><text x="24.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="21" y="1220" width="4" height="15" fill="rgb(224,73,27)"/><text x="24.00" y="1230.50"></text></g><g><title>&lt;module&gt; (email/header.py) (1 samples, 0.34%)</title><rect x="21" y="1236" width="4" height="15" fill="rgb(242,176,3)"/><text x="24.00" y="1246.50"></text></g><g><title>compile (re.py) (1 samples, 0.34%)</title><rect x="21" y="1252" width="4" height="15" fill="rgb(239,39,46)"/><text x="24.00" y="1262.50"></text></g><g><title>_compile (re.py) (1 samples, 0.34%)</title><rect x="21" y="1268" width="4" height="15" fill="rgb(244,31,39)"/><text x="24.00" y="1278.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.34%)</title><rect x="21" y="1284" width="4" height="15" fill="rgb(248,90,3)"/><text x="24.00" y="1294.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="21" y="1300" width="4" height="15" fill="rgb(232,40,46)"/><text x="24.00" y="1310.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.34%)</title><rect x="21" y="1316" width="4" height="15" fill="rgb(213,211,38)"/><text x="24.00" y="1326.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="21" y="1332" width="4" height="15" fill="rgb(213,63,10)"/><text x="24.00" y="1342.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.34%)</title><rect x="21" y="1348" width="4" height="15" fill="rgb(222,127,39)"/><text x="24.00" y="1358.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.34%)</title><rect x="21" y="1364" width="4" height="15" fill="rgb(228,59,2)"/><text x="24.00" y="1374.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.34%)</title><rect x="25" y="916" width="4" height="15" fill="rgb(249,8,16)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="932" width="4" height="15" fill="rgb(227,85,45)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="948" width="4" height="15" fill="rgb(212,229,48)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="964" width="4" height="15" fill="rgb(208,96,54)"/><text x="28.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="980" width="4" height="15" fill="rgb(247,194,51)"/><text x="28.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.34%)</title><rect x="25" y="996" width="4" height="15" fill="rgb(241,43,13)"/><text x="28.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="1012" width="4" height="15" fill="rgb(231,225,43)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="1028" width="4" height="15" fill="rgb(223,214,19)"/><text x="28.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="1044" width="4" height="15" fill="rgb(254,0,29)"/><text x="28.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="25" y="1060" width="4" height="15" fill="rgb(237,20,37)"/><text x="28.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="1076" width="4" height="15" fill="rgb(214,149,50)"/><text x="28.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.34%)</title><rect x="25" y="1092" width="4" height="15" fill="rgb(240,217,39)"/><text x="28.00" y="1102.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.34%)</title><rect x="25" y="1108" width="4" height="15" fill="rgb(225,24,17)"/><text x="28.00" y="1118.50"></text></g><g><title>compile (re.py) (1 samples, 0.34%)</title><rect x="25" y="1124" width="4" height="15" fill="rgb(220,148,21)"/><text x="28.00" y="1134.50"></text></g><g><title>_compile (re.py) (1 samples, 0.34%)</title><rect x="25" y="1140" width="4" height="15" fill="rgb(206,161,1)"/><text x="28.00" y="1150.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.34%)</title><rect x="25" y="1156" width="4" height="15" fill="rgb(224,226,52)"/><text x="28.00" y="1166.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="25" y="1172" width="4" height="15" fill="rgb(208,225,48)"/><text x="28.00" y="1182.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.34%)</title><rect x="25" y="1188" width="4" height="15" fill="rgb(228,181,49)"/><text x="28.00" y="1198.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="25" y="1204" width="4" height="15" fill="rgb(226,31,36)"/><text x="28.00" y="1214.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.34%)</title><rect x="25" y="1220" width="4" height="15" fill="rgb(205,198,19)"/><text x="28.00" y="1230.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 2.02%)</title><rect x="10" y="292" width="23" height="15" fill="rgb(245,97,39)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="308" width="23" height="15" fill="rgb(229,102,54)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="324" width="23" height="15" fill="rgb(250,19,31)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="340" width="23" height="15" fill="rgb(229,124,51)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.02%)</title><rect x="10" y="356" width="23" height="15" fill="rgb(254,192,22)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="372" width="23" height="15" fill="rgb(224,14,41)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 2.02%)</title><rect x="10" y="388" width="23" height="15" fill="rgb(207,39,12)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="404" width="23" height="15" fill="rgb(211,43,8)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="420" width="23" height="15" fill="rgb(210,154,39)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="436" width="23" height="15" fill="rgb(236,181,49)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.02%)</title><rect x="10" y="452" width="23" height="15" fill="rgb(213,86,46)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="468" width="23" height="15" fill="rgb(245,12,18)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 2.02%)</title><rect x="10" y="484" width="23" height="15" fill="rgb(232,55,42)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="500" width="23" height="15" fill="rgb(207,210,14)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="516" width="23" height="15" fill="rgb(253,103,37)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="532" width="23" height="15" fill="rgb(210,12,7)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.02%)</title><rect x="10" y="548" width="23" height="15" fill="rgb(217,197,49)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="564" width="23" height="15" fill="rgb(234,18,27)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 2.02%)</title><rect x="10" y="580" width="23" height="15" fill="rgb(219,60,43)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="596" width="23" height="15" fill="rgb(230,167,53)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="612" width="23" height="15" fill="rgb(244,204,46)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="628" width="23" height="15" fill="rgb(205,208,19)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="644" width="23" height="15" fill="rgb(251,3,31)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="660" width="23" height="15" fill="rgb(238,5,37)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="676" width="23" height="15" fill="rgb(220,60,51)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.02%)</title><rect x="10" y="692" width="23" height="15" fill="rgb(247,132,30)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="708" width="23" height="15" fill="rgb(250,217,32)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 2.02%)</title><rect x="10" y="724" width="23" height="15" fill="rgb(234,207,33)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="740" width="23" height="15" fill="rgb(218,1,2)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="756" width="23" height="15" fill="rgb(220,212,40)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="772" width="23" height="15" fill="rgb(229,92,26)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.02%)</title><rect x="10" y="788" width="23" height="15" fill="rgb(228,80,48)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="10" y="804" width="23" height="15" fill="rgb(252,55,42)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 2.02%)</title><rect x="10" y="820" width="23" height="15" fill="rgb(231,82,1)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="21" y="836" width="12" height="15" fill="rgb(222,25,38)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="21" y="852" width="12" height="15" fill="rgb(241,158,18)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="21" y="868" width="12" height="15" fill="rgb(253,84,29)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="21" y="884" width="12" height="15" fill="rgb(251,88,37)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="21" y="900" width="12" height="15" fill="rgb(250,81,52)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.34%)</title><rect x="29" y="916" width="4" height="15" fill="rgb(227,216,0)"/><text x="32.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.34%)</title><rect x="29" y="932" width="4" height="15" fill="rgb(215,39,50)"/><text x="32.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.34%)</title><rect x="29" y="948" width="4" height="15" fill="rgb(228,99,30)"/><text x="32.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.34%)</title><rect x="29" y="964" width="4" height="15" fill="rgb(231,148,5)"/><text x="32.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.34%)</title><rect x="29" y="980" width="4" height="15" fill="rgb(230,91,8)"/><text x="32.00" y="990.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.34%)</title><rect x="29" y="996" width="4" height="15" fill="rgb(243,45,25)"/><text x="32.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.34%)</title><rect x="29" y="1012" width="4" height="15" fill="rgb(205,93,1)"/><text x="32.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.34%)</title><rect x="29" y="1028" width="4" height="15" fill="rgb(218,123,18)"/><text x="32.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.34%)</title><rect x="29" y="1044" width="4" height="15" fill="rgb(221,195,17)"/><text x="32.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.34%)</title><rect x="29" y="1060" width="4" height="15" fill="rgb(238,6,18)"/><text x="32.00" y="1070.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.34%)</title><rect x="29" y="1076" width="4" height="15" fill="rgb(243,97,15)"/><text x="32.00" y="1086.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.34%)</title><rect x="29" y="1092" width="4" height="15" fill="rgb(214,53,32)"/><text x="32.00" y="1102.50"></text></g><g><title>0x7f9542e2254b (?) (1 samples, 0.34%)</title><rect x="33" y="1316" width="4" height="15" fill="rgb(230,80,38)"/><text x="36.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="1332" width="4" height="15" fill="rgb(250,154,42)"/><text x="36.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="1348" width="4" height="15" fill="rgb(249,98,35)"/><text x="36.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="1364" width="4" height="15" fill="rgb(210,167,16)"/><text x="36.00" y="1374.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="1380" width="4" height="15" fill="rgb(221,42,33)"/><text x="36.00" y="1390.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="33" y="1396" width="4" height="15" fill="rgb(239,164,9)"/><text x="36.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="1412" width="4" height="15" fill="rgb(206,228,13)"/><text x="36.00" y="1422.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="33" y="1428" width="4" height="15" fill="rgb(206,28,26)"/><text x="36.00" y="1438.50"></text></g><g><title>0x7f9562680995 (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="33" y="1444" width="4" height="15" fill="rgb(213,168,8)"/><text x="36.00" y="1454.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.34%)</title><rect x="33" y="1460" width="4" height="15" fill="rgb(207,50,5)"/><text x="36.00" y="1470.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="33" y="1476" width="4" height="15" fill="rgb(231,29,21)"/><text x="36.00" y="1486.50"></text></g><g><title>0x7f9562680258 (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="33" y="1492" width="4" height="15" fill="rgb(244,134,45)"/><text x="36.00" y="1502.50"></text></g><g><title>0x7f95626cdd7a (ld-2.29.so) (1 samples, 0.34%)</title><rect x="33" y="1508" width="4" height="15" fill="rgb(226,45,47)"/><text x="36.00" y="1518.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="33" y="1524" width="4" height="15" fill="rgb(248,184,36)"/><text x="36.00" y="1534.50"></text></g><g><title>0x7f95626ce345 (ld-2.29.so) (1 samples, 0.34%)</title><rect x="33" y="1540" width="4" height="15" fill="rgb(207,137,47)"/><text x="36.00" y="1550.50"></text></g><g><title>0x7f95626c73d4 (ld-2.29.so) (1 samples, 0.34%)</title><rect x="33" y="1556" width="4" height="15" fill="rgb(242,133,4)"/><text x="36.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="788" width="8" height="15" fill="rgb(228,154,7)"/><text x="36.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="804" width="8" height="15" fill="rgb(219,74,50)"/><text x="36.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="820" width="8" height="15" fill="rgb(251,23,30)"/><text x="36.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="33" y="836" width="8" height="15" fill="rgb(223,229,26)"/><text x="36.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="852" width="8" height="15" fill="rgb(228,31,11)"/><text x="36.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (2 samples, 0.67%)</title><rect x="33" y="868" width="8" height="15" fill="rgb(214,161,29)"/><text x="36.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="884" width="8" height="15" fill="rgb(231,132,4)"/><text x="36.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="900" width="8" height="15" fill="rgb(254,75,4)"/><text x="36.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="916" width="8" height="15" fill="rgb(213,86,18)"/><text x="36.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="33" y="932" width="8" height="15" fill="rgb(239,98,23)"/><text x="36.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="948" width="8" height="15" fill="rgb(223,113,42)"/><text x="36.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py) (2 samples, 0.67%)</title><rect x="33" y="964" width="8" height="15" fill="rgb(235,111,30)"/><text x="36.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="980" width="8" height="15" fill="rgb(225,131,23)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="996" width="8" height="15" fill="rgb(230,159,4)"/><text x="36.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1012" width="8" height="15" fill="rgb(215,36,30)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1028" width="8" height="15" fill="rgb(221,170,24)"/><text x="36.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1044" width="8" height="15" fill="rgb(235,117,10)"/><text x="36.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="33" y="1060" width="8" height="15" fill="rgb(236,22,46)"/><text x="36.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1076" width="8" height="15" fill="rgb(211,74,14)"/><text x="36.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py) (2 samples, 0.67%)</title><rect x="33" y="1092" width="8" height="15" fill="rgb(239,167,32)"/><text x="36.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1108" width="8" height="15" fill="rgb(239,174,15)"/><text x="36.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1124" width="8" height="15" fill="rgb(246,209,27)"/><text x="36.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1140" width="8" height="15" fill="rgb(224,129,13)"/><text x="36.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1156" width="8" height="15" fill="rgb(211,212,29)"/><text x="36.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1172" width="8" height="15" fill="rgb(211,52,40)"/><text x="36.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="33" y="1188" width="8" height="15" fill="rgb(248,32,43)"/><text x="36.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1204" width="8" height="15" fill="rgb(206,30,13)"/><text x="36.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py) (2 samples, 0.67%)</title><rect x="33" y="1220" width="8" height="15" fill="rgb(229,0,19)"/><text x="36.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1236" width="8" height="15" fill="rgb(230,188,26)"/><text x="36.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1252" width="8" height="15" fill="rgb(249,171,4)"/><text x="36.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1268" width="8" height="15" fill="rgb(213,44,34)"/><text x="36.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="33" y="1284" width="8" height="15" fill="rgb(232,222,10)"/><text x="36.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="33" y="1300" width="8" height="15" fill="rgb(238,144,8)"/><text x="36.00" y="1310.50"></text></g><g><title>0x7f9542e2254b (scipy/linalg/_decomp_update.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="37" y="1316" width="4" height="15" fill="rgb(208,165,27)"/><text x="40.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1332" width="4" height="15" fill="rgb(240,93,1)"/><text x="40.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1348" width="4" height="15" fill="rgb(206,27,36)"/><text x="40.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1364" width="4" height="15" fill="rgb(238,43,3)"/><text x="40.00" y="1374.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1380" width="4" height="15" fill="rgb(215,9,16)"/><text x="40.00" y="1390.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="1396" width="4" height="15" fill="rgb(243,130,36)"/><text x="40.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1412" width="4" height="15" fill="rgb(244,206,18)"/><text x="40.00" y="1422.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="37" y="1428" width="4" height="15" fill="rgb(217,53,40)"/><text x="40.00" y="1438.50"></text></g><g><title>0x7f9562680995 (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="37" y="1444" width="4" height="15" fill="rgb(239,174,51)"/><text x="40.00" y="1454.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.34%)</title><rect x="37" y="1460" width="4" height="15" fill="rgb(249,119,40)"/><text x="40.00" y="1470.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="37" y="1476" width="4" height="15" fill="rgb(240,166,27)"/><text x="40.00" y="1486.50"></text></g><g><title>0x7f9562680258 (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="37" y="1492" width="4" height="15" fill="rgb(233,125,40)"/><text x="40.00" y="1502.50"></text></g><g><title>0x7f95626cdd7a (ld-2.29.so) (1 samples, 0.34%)</title><rect x="37" y="1508" width="4" height="15" fill="rgb(245,214,25)"/><text x="40.00" y="1518.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="37" y="1524" width="4" height="15" fill="rgb(250,110,41)"/><text x="40.00" y="1534.50"></text></g><g><title>0x7f95626ce345 (ld-2.29.so) (1 samples, 0.34%)</title><rect x="37" y="1540" width="4" height="15" fill="rgb(215,27,45)"/><text x="40.00" y="1550.50"></text></g><g><title>0x7f95626c6fec (ld-2.29.so) (1 samples, 0.34%)</title><rect x="37" y="1556" width="4" height="15" fill="rgb(208,205,51)"/><text x="40.00" y="1566.50"></text></g><g><title>0x7f95626c556b (ld-2.29.so) (1 samples, 0.34%)</title><rect x="37" y="1572" width="4" height="15" fill="rgb(242,229,1)"/><text x="40.00" y="1582.50"></text></g><g><title>0x7f95626c4c6d (ld-2.29.so) (1 samples, 0.34%)</title><rect x="37" y="1588" width="4" height="15" fill="rgb(238,111,43)"/><text x="40.00" y="1598.50"></text></g><g><title>0x7f95626c4765 (ld-2.29.so) (1 samples, 0.34%)</title><rect x="37" y="1604" width="4" height="15" fill="rgb(228,165,49)"/><text x="40.00" y="1614.50"></text></g><g><title>0x7f95626d69f7 (ld-2.29.so) (1 samples, 0.34%)</title><rect x="37" y="1620" width="4" height="15" fill="rgb(246,5,4)"/><text x="40.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="916" width="4" height="15" fill="rgb(209,68,43)"/><text x="44.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="932" width="4" height="15" fill="rgb(237,72,43)"/><text x="44.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="948" width="4" height="15" fill="rgb(224,22,48)"/><text x="44.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="964" width="4" height="15" fill="rgb(248,5,40)"/><text x="44.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="980" width="4" height="15" fill="rgb(220,107,23)"/><text x="44.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.34%)</title><rect x="41" y="996" width="4" height="15" fill="rgb(211,117,21)"/><text x="44.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1012" width="4" height="15" fill="rgb(223,131,43)"/><text x="44.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1028" width="4" height="15" fill="rgb(216,118,1)"/><text x="44.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1044" width="4" height="15" fill="rgb(246,71,5)"/><text x="44.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1060" width="4" height="15" fill="rgb(205,112,13)"/><text x="44.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1076" width="4" height="15" fill="rgb(246,122,28)"/><text x="44.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="1092" width="4" height="15" fill="rgb(244,199,37)"/><text x="44.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1108" width="4" height="15" fill="rgb(236,216,53)"/><text x="44.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.34%)</title><rect x="41" y="1124" width="4" height="15" fill="rgb(233,187,49)"/><text x="44.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1140" width="4" height="15" fill="rgb(208,156,18)"/><text x="44.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1156" width="4" height="15" fill="rgb(236,90,34)"/><text x="44.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1172" width="4" height="15" fill="rgb(241,112,47)"/><text x="44.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="1188" width="4" height="15" fill="rgb(243,130,11)"/><text x="44.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1204" width="4" height="15" fill="rgb(250,161,29)"/><text x="44.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py) (1 samples, 0.34%)</title><rect x="41" y="1220" width="4" height="15" fill="rgb(238,75,37)"/><text x="44.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1236" width="4" height="15" fill="rgb(233,28,47)"/><text x="44.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1252" width="4" height="15" fill="rgb(244,209,36)"/><text x="44.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1268" width="4" height="15" fill="rgb(234,78,25)"/><text x="44.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1284" width="4" height="15" fill="rgb(231,98,40)"/><text x="44.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1300" width="4" height="15" fill="rgb(212,88,46)"/><text x="44.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="1316" width="4" height="15" fill="rgb(249,208,48)"/><text x="44.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="1332" width="4" height="15" fill="rgb(226,56,2)"/><text x="44.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/nonlin.py) (1 samples, 0.34%)</title><rect x="41" y="1348" width="4" height="15" fill="rgb(206,110,3)"/><text x="44.00" y="1358.50"></text></g><g><title>_nonlin_wrapper (scipy/optimize/nonlin.py) (1 samples, 0.34%)</title><rect x="41" y="1364" width="4" height="15" fill="rgb(206,0,17)"/><text x="44.00" y="1374.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.34%)</title><rect x="41" y="1380" width="4" height="15" fill="rgb(249,25,29)"/><text x="44.00" y="1390.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.34%)</title><rect x="41" y="1396" width="4" height="15" fill="rgb(241,127,1)"/><text x="44.00" y="1406.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.34%)</title><rect x="41" y="1412" width="4" height="15" fill="rgb(231,225,26)"/><text x="44.00" y="1422.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.34%)</title><rect x="41" y="1428" width="4" height="15" fill="rgb(233,45,49)"/><text x="44.00" y="1438.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.34%)</title><rect x="41" y="1444" width="4" height="15" fill="rgb(233,213,43)"/><text x="44.00" y="1454.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.34%)</title><rect x="41" y="1460" width="4" height="15" fill="rgb(242,52,13)"/><text x="44.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="33" y="500" width="20" height="15" fill="rgb(235,108,11)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="33" y="516" width="20" height="15" fill="rgb(241,157,8)"/><text x="36.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="33" y="532" width="20" height="15" fill="rgb(214,139,30)"/><text x="36.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.68%)</title><rect x="33" y="548" width="20" height="15" fill="rgb(243,40,42)"/><text x="36.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="33" y="564" width="20" height="15" fill="rgb(239,186,22)"/><text x="36.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (5 samples, 1.68%)</title><rect x="33" y="580" width="20" height="15" fill="rgb(217,78,36)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="33" y="596" width="20" height="15" fill="rgb(237,229,21)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="33" y="612" width="20" height="15" fill="rgb(241,33,44)"/><text x="36.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="33" y="628" width="20" height="15" fill="rgb(247,84,19)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.68%)</title><rect x="33" y="644" width="20" height="15" fill="rgb(236,108,18)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="33" y="660" width="20" height="15" fill="rgb(205,163,12)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (5 samples, 1.68%)</title><rect x="33" y="676" width="20" height="15" fill="rgb(250,112,29)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="33" y="692" width="20" height="15" fill="rgb(219,48,24)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="33" y="708" width="20" height="15" fill="rgb(227,46,50)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="33" y="724" width="20" height="15" fill="rgb(227,99,36)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.68%)</title><rect x="33" y="740" width="20" height="15" fill="rgb(253,123,2)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="33" y="756" width="20" height="15" fill="rgb(244,127,10)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (5 samples, 1.68%)</title><rect x="33" y="772" width="20" height="15" fill="rgb(214,48,10)"/><text x="36.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="788" width="12" height="15" fill="rgb(229,161,18)"/><text x="44.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="804" width="12" height="15" fill="rgb(207,115,36)"/><text x="44.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="820" width="12" height="15" fill="rgb(226,48,11)"/><text x="44.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="836" width="12" height="15" fill="rgb(231,217,34)"/><text x="44.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="852" width="12" height="15" fill="rgb(220,142,34)"/><text x="44.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="41" y="868" width="12" height="15" fill="rgb(252,71,33)"/><text x="44.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="41" y="884" width="12" height="15" fill="rgb(237,40,38)"/><text x="44.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 1.01%)</title><rect x="41" y="900" width="12" height="15" fill="rgb(223,200,34)"/><text x="44.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="45" y="916" width="8" height="15" fill="rgb(241,72,22)"/><text x="48.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="45" y="932" width="8" height="15" fill="rgb(246,12,48)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="45" y="948" width="8" height="15" fill="rgb(238,36,8)"/><text x="48.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="45" y="964" width="8" height="15" fill="rgb(213,6,48)"/><text x="48.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="45" y="980" width="8" height="15" fill="rgb(214,224,28)"/><text x="48.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="45" y="996" width="8" height="15" fill="rgb(234,148,21)"/><text x="48.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="45" y="1012" width="8" height="15" fill="rgb(219,55,10)"/><text x="48.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.67%)</title><rect x="45" y="1028" width="8" height="15" fill="rgb(239,22,54)"/><text x="48.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.67%)</title><rect x="45" y="1044" width="8" height="15" fill="rgb(214,44,6)"/><text x="48.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (2 samples, 0.67%)</title><rect x="45" y="1060" width="8" height="15" fill="rgb(238,92,2)"/><text x="48.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.04%)</title><rect x="10" y="196" width="47" height="15" fill="rgb(237,138,7)"/><text x="13.00" y="206.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.04%)</title><rect x="10" y="212" width="47" height="15" fill="rgb(218,91,4)"/><text x="13.00" y="222.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.04%)</title><rect x="10" y="228" width="47" height="15" fill="rgb(213,77,47)"/><text x="13.00" y="238.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.04%)</title><rect x="10" y="244" width="47" height="15" fill="rgb(234,94,42)"/><text x="13.00" y="254.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 4.04%)</title><rect x="10" y="260" width="47" height="15" fill="rgb(214,40,3)"/><text x="13.00" y="270.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.04%)</title><rect x="10" y="276" width="47" height="15" fill="rgb(235,155,8)"/><text x="13.00" y="286.50">_cal..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (6 samples, 2.02%)</title><rect x="33" y="292" width="24" height="15" fill="rgb(228,39,43)"/><text x="36.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="33" y="308" width="24" height="15" fill="rgb(238,200,37)"/><text x="36.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="33" y="324" width="24" height="15" fill="rgb(241,26,46)"/><text x="36.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="33" y="340" width="24" height="15" fill="rgb(223,112,50)"/><text x="36.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.02%)</title><rect x="33" y="356" width="24" height="15" fill="rgb(250,4,50)"/><text x="36.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="33" y="372" width="24" height="15" fill="rgb(213,9,21)"/><text x="36.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (sklearn/base.py) (6 samples, 2.02%)</title><rect x="33" y="388" width="24" height="15" fill="rgb(233,141,29)"/><text x="36.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="33" y="404" width="24" height="15" fill="rgb(209,76,49)"/><text x="36.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="33" y="420" width="24" height="15" fill="rgb(242,48,4)"/><text x="36.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="33" y="436" width="24" height="15" fill="rgb(238,109,3)"/><text x="36.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.02%)</title><rect x="33" y="452" width="24" height="15" fill="rgb(245,4,5)"/><text x="36.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.02%)</title><rect x="33" y="468" width="24" height="15" fill="rgb(229,137,13)"/><text x="36.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (6 samples, 2.02%)</title><rect x="33" y="484" width="24" height="15" fill="rgb(236,219,15)"/><text x="36.00" y="494.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="500" width="4" height="15" fill="rgb(208,83,20)"/><text x="56.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="516" width="4" height="15" fill="rgb(220,48,54)"/><text x="56.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="532" width="4" height="15" fill="rgb(227,188,34)"/><text x="56.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="548" width="4" height="15" fill="rgb(208,152,46)"/><text x="56.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="564" width="4" height="15" fill="rgb(227,196,53)"/><text x="56.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="580" width="4" height="15" fill="rgb(219,163,10)"/><text x="56.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="596" width="4" height="15" fill="rgb(251,17,24)"/><text x="56.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.34%)</title><rect x="53" y="612" width="4" height="15" fill="rgb(227,36,6)"/><text x="56.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="628" width="4" height="15" fill="rgb(232,107,14)"/><text x="56.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="644" width="4" height="15" fill="rgb(206,227,16)"/><text x="56.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="660" width="4" height="15" fill="rgb(217,71,1)"/><text x="56.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="676" width="4" height="15" fill="rgb(210,75,49)"/><text x="56.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="692" width="4" height="15" fill="rgb(231,221,36)"/><text x="56.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.34%)</title><rect x="53" y="708" width="4" height="15" fill="rgb(244,144,20)"/><text x="56.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="724" width="4" height="15" fill="rgb(246,121,39)"/><text x="56.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="740" width="4" height="15" fill="rgb(221,222,32)"/><text x="56.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="756" width="4" height="15" fill="rgb(249,129,47)"/><text x="56.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="772" width="4" height="15" fill="rgb(240,38,36)"/><text x="56.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="788" width="4" height="15" fill="rgb(223,15,32)"/><text x="56.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.34%)</title><rect x="53" y="804" width="4" height="15" fill="rgb(215,207,35)"/><text x="56.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="820" width="4" height="15" fill="rgb(223,109,45)"/><text x="56.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="836" width="4" height="15" fill="rgb(245,4,12)"/><text x="56.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="852" width="4" height="15" fill="rgb(228,99,39)"/><text x="56.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="868" width="4" height="15" fill="rgb(213,35,30)"/><text x="56.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="884" width="4" height="15" fill="rgb(230,100,12)"/><text x="56.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.34%)</title><rect x="53" y="900" width="4" height="15" fill="rgb(248,219,15)"/><text x="56.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="916" width="4" height="15" fill="rgb(246,140,6)"/><text x="56.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="932" width="4" height="15" fill="rgb(241,59,24)"/><text x="56.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="948" width="4" height="15" fill="rgb(232,64,18)"/><text x="56.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="964" width="4" height="15" fill="rgb(207,88,32)"/><text x="56.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="980" width="4" height="15" fill="rgb(227,218,6)"/><text x="56.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="996" width="4" height="15" fill="rgb(246,97,25)"/><text x="56.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1012" width="4" height="15" fill="rgb(250,31,36)"/><text x="56.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py) (1 samples, 0.34%)</title><rect x="53" y="1028" width="4" height="15" fill="rgb(221,145,16)"/><text x="56.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1044" width="4" height="15" fill="rgb(226,64,3)"/><text x="56.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1060" width="4" height="15" fill="rgb(239,181,16)"/><text x="56.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1076" width="4" height="15" fill="rgb(216,69,43)"/><text x="56.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="53" y="1092" width="4" height="15" fill="rgb(251,155,38)"/><text x="56.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1108" width="4" height="15" fill="rgb(250,197,28)"/><text x="56.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py) (1 samples, 0.34%)</title><rect x="53" y="1124" width="4" height="15" fill="rgb(247,98,12)"/><text x="56.00" y="1134.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.34%)</title><rect x="57" y="1236" width="4" height="15" fill="rgb(219,139,32)"/><text x="60.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1252" width="4" height="15" fill="rgb(215,142,42)"/><text x="60.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1268" width="4" height="15" fill="rgb(212,220,54)"/><text x="60.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1284" width="4" height="15" fill="rgb(245,117,35)"/><text x="60.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1300" width="4" height="15" fill="rgb(206,53,22)"/><text x="60.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1316" width="4" height="15" fill="rgb(229,210,8)"/><text x="60.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="57" y="1332" width="4" height="15" fill="rgb(246,0,33)"/><text x="60.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1348" width="4" height="15" fill="rgb(224,16,19)"/><text x="60.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.34%)</title><rect x="57" y="1364" width="4" height="15" fill="rgb(205,189,28)"/><text x="60.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1380" width="4" height="15" fill="rgb(217,91,9)"/><text x="60.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1396" width="4" height="15" fill="rgb(239,146,2)"/><text x="60.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1412" width="4" height="15" fill="rgb(241,9,13)"/><text x="60.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="57" y="1428" width="4" height="15" fill="rgb(249,112,19)"/><text x="60.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1444" width="4" height="15" fill="rgb(245,78,48)"/><text x="60.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.34%)</title><rect x="57" y="1460" width="4" height="15" fill="rgb(230,133,31)"/><text x="60.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.34%)</title><rect x="57" y="1476" width="4" height="15" fill="rgb(225,214,3)"/><text x="60.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.34%)</title><rect x="57" y="1492" width="4" height="15" fill="rgb(254,63,21)"/><text x="60.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.34%)</title><rect x="57" y="1508" width="4" height="15" fill="rgb(237,176,15)"/><text x="60.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.34%)</title><rect x="57" y="1524" width="4" height="15" fill="rgb(211,183,5)"/><text x="60.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.34%)</title><rect x="57" y="1540" width="4" height="15" fill="rgb(221,99,8)"/><text x="60.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.34%)</title><rect x="57" y="1556" width="4" height="15" fill="rgb(220,92,23)"/><text x="60.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.34%)</title><rect x="57" y="1572" width="4" height="15" fill="rgb(250,219,25)"/><text x="60.00" y="1582.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="1332" width="4" height="15" fill="rgb(244,130,36)"/><text x="64.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="484" width="12" height="15" fill="rgb(227,209,20)"/><text x="60.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="500" width="12" height="15" fill="rgb(243,104,3)"/><text x="60.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="516" width="12" height="15" fill="rgb(253,115,39)"/><text x="60.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="532" width="12" height="15" fill="rgb(221,98,39)"/><text x="60.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="57" y="548" width="12" height="15" fill="rgb(216,89,41)"/><text x="60.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="564" width="12" height="15" fill="rgb(248,98,46)"/><text x="60.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 1.01%)</title><rect x="57" y="580" width="12" height="15" fill="rgb(210,51,30)"/><text x="60.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="596" width="12" height="15" fill="rgb(225,36,13)"/><text x="60.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="612" width="12" height="15" fill="rgb(209,12,13)"/><text x="60.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="628" width="12" height="15" fill="rgb(224,121,49)"/><text x="60.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="57" y="644" width="12" height="15" fill="rgb(217,126,31)"/><text x="60.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="660" width="12" height="15" fill="rgb(207,141,45)"/><text x="60.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 1.01%)</title><rect x="57" y="676" width="12" height="15" fill="rgb(215,90,45)"/><text x="60.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="692" width="12" height="15" fill="rgb(219,41,37)"/><text x="60.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="708" width="12" height="15" fill="rgb(228,152,28)"/><text x="60.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="724" width="12" height="15" fill="rgb(237,152,18)"/><text x="60.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="57" y="740" width="12" height="15" fill="rgb(232,103,47)"/><text x="60.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="756" width="12" height="15" fill="rgb(245,145,39)"/><text x="60.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 1.01%)</title><rect x="57" y="772" width="12" height="15" fill="rgb(248,171,49)"/><text x="60.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="788" width="12" height="15" fill="rgb(252,163,51)"/><text x="60.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="804" width="12" height="15" fill="rgb(245,79,13)"/><text x="60.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="820" width="12" height="15" fill="rgb(248,166,1)"/><text x="60.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="57" y="836" width="12" height="15" fill="rgb(210,56,12)"/><text x="60.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="852" width="12" height="15" fill="rgb(221,52,1)"/><text x="60.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 1.01%)</title><rect x="57" y="868" width="12" height="15" fill="rgb(207,88,31)"/><text x="60.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="884" width="12" height="15" fill="rgb(220,196,34)"/><text x="60.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="900" width="12" height="15" fill="rgb(230,70,48)"/><text x="60.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="916" width="12" height="15" fill="rgb(210,183,53)"/><text x="60.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="932" width="12" height="15" fill="rgb(235,152,21)"/><text x="60.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="948" width="12" height="15" fill="rgb(225,167,9)"/><text x="60.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="964" width="12" height="15" fill="rgb(233,160,45)"/><text x="60.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="57" y="980" width="12" height="15" fill="rgb(228,124,50)"/><text x="60.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="996" width="12" height="15" fill="rgb(219,221,31)"/><text x="60.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 1.01%)</title><rect x="57" y="1012" width="12" height="15" fill="rgb(252,15,46)"/><text x="60.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="1028" width="12" height="15" fill="rgb(235,58,26)"/><text x="60.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="1044" width="12" height="15" fill="rgb(232,169,25)"/><text x="60.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="1060" width="12" height="15" fill="rgb(209,17,33)"/><text x="60.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="57" y="1076" width="12" height="15" fill="rgb(221,131,7)"/><text x="60.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="1092" width="12" height="15" fill="rgb(229,133,1)"/><text x="60.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 1.01%)</title><rect x="57" y="1108" width="12" height="15" fill="rgb(222,91,1)"/><text x="60.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="1124" width="12" height="15" fill="rgb(250,211,18)"/><text x="60.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="1140" width="12" height="15" fill="rgb(221,187,45)"/><text x="60.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="1156" width="12" height="15" fill="rgb(210,6,47)"/><text x="60.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="1172" width="12" height="15" fill="rgb(230,170,13)"/><text x="60.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="1188" width="12" height="15" fill="rgb(247,221,13)"/><text x="60.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="57" y="1204" width="12" height="15" fill="rgb(234,170,40)"/><text x="60.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="57" y="1220" width="12" height="15" fill="rgb(226,147,42)"/><text x="60.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py) (2 samples, 0.67%)</title><rect x="61" y="1236" width="8" height="15" fill="rgb(224,156,30)"/><text x="64.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="61" y="1252" width="8" height="15" fill="rgb(247,110,39)"/><text x="64.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="61" y="1268" width="8" height="15" fill="rgb(243,109,33)"/><text x="64.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="61" y="1284" width="8" height="15" fill="rgb(242,86,25)"/><text x="64.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="61" y="1300" width="8" height="15" fill="rgb(253,221,34)"/><text x="64.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="61" y="1316" width="8" height="15" fill="rgb(247,210,0)"/><text x="64.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="65" y="1332" width="4" height="15" fill="rgb(254,140,37)"/><text x="68.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="65" y="1348" width="4" height="15" fill="rgb(254,209,13)"/><text x="68.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/grid_search_cv.py) (1 samples, 0.34%)</title><rect x="65" y="1364" width="4" height="15" fill="rgb(205,146,44)"/><text x="68.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.39%)</title><rect x="10" y="68" width="63" height="15" fill="rgb(242,72,36)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.39%)</title><rect x="10" y="84" width="63" height="15" fill="rgb(254,165,51)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.39%)</title><rect x="10" y="100" width="63" height="15" fill="rgb(254,98,43)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 5.39%)</title><rect x="10" y="116" width="63" height="15" fill="rgb(232,146,18)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.39%)</title><rect x="10" y="132" width="63" height="15" fill="rgb(211,82,19)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py) (16 samples, 5.39%)</title><rect x="10" y="148" width="63" height="15" fill="rgb(247,101,22)"/><text x="13.00" y="158.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.39%)</title><rect x="10" y="164" width="63" height="15" fill="rgb(247,82,20)"/><text x="13.00" y="174.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 5.39%)</title><rect x="10" y="180" width="63" height="15" fill="rgb(229,186,54)"/><text x="13.00" y="190.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="57" y="196" width="16" height="15" fill="rgb(228,29,23)"/><text x="60.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="57" y="212" width="16" height="15" fill="rgb(225,174,49)"/><text x="60.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="57" y="228" width="16" height="15" fill="rgb(252,130,39)"/><text x="60.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (4 samples, 1.35%)</title><rect x="57" y="244" width="16" height="15" fill="rgb(228,51,35)"/><text x="60.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="57" y="260" width="16" height="15" fill="rgb(212,5,27)"/><text x="60.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="57" y="276" width="16" height="15" fill="rgb(207,75,40)"/><text x="60.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="57" y="292" width="16" height="15" fill="rgb(217,145,26)"/><text x="60.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="57" y="308" width="16" height="15" fill="rgb(212,124,33)"/><text x="60.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="57" y="324" width="16" height="15" fill="rgb(212,163,18)"/><text x="60.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.35%)</title><rect x="57" y="340" width="16" height="15" fill="rgb(213,19,32)"/><text x="60.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="57" y="356" width="16" height="15" fill="rgb(238,69,42)"/><text x="60.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="57" y="372" width="16" height="15" fill="rgb(212,161,53)"/><text x="60.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="57" y="388" width="16" height="15" fill="rgb(237,135,39)"/><text x="60.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.35%)</title><rect x="57" y="404" width="16" height="15" fill="rgb(208,218,1)"/><text x="60.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="57" y="420" width="16" height="15" fill="rgb(225,61,31)"/><text x="60.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 1.35%)</title><rect x="57" y="436" width="16" height="15" fill="rgb(227,30,49)"/><text x="60.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="57" y="452" width="16" height="15" fill="rgb(242,27,3)"/><text x="60.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.35%)</title><rect x="57" y="468" width="16" height="15" fill="rgb(237,224,13)"/><text x="60.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="484" width="4" height="15" fill="rgb(252,140,20)"/><text x="72.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="69" y="500" width="4" height="15" fill="rgb(243,30,34)"/><text x="72.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="516" width="4" height="15" fill="rgb(244,200,28)"/><text x="72.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="69" y="532" width="4" height="15" fill="rgb(253,169,53)"/><text x="72.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="548" width="4" height="15" fill="rgb(223,184,5)"/><text x="72.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="564" width="4" height="15" fill="rgb(233,220,45)"/><text x="72.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="580" width="4" height="15" fill="rgb(242,195,43)"/><text x="72.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="69" y="596" width="4" height="15" fill="rgb(253,28,51)"/><text x="72.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="612" width="4" height="15" fill="rgb(250,215,49)"/><text x="72.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.34%)</title><rect x="69" y="628" width="4" height="15" fill="rgb(232,207,24)"/><text x="72.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="644" width="4" height="15" fill="rgb(237,213,4)"/><text x="72.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="660" width="4" height="15" fill="rgb(210,192,34)"/><text x="72.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="676" width="4" height="15" fill="rgb(249,110,39)"/><text x="72.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="69" y="692" width="4" height="15" fill="rgb(241,34,41)"/><text x="72.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="708" width="4" height="15" fill="rgb(239,20,35)"/><text x="72.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.34%)</title><rect x="69" y="724" width="4" height="15" fill="rgb(215,72,39)"/><text x="72.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="740" width="4" height="15" fill="rgb(215,137,27)"/><text x="72.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="756" width="4" height="15" fill="rgb(208,159,0)"/><text x="72.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="772" width="4" height="15" fill="rgb(226,93,45)"/><text x="72.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="69" y="788" width="4" height="15" fill="rgb(232,54,11)"/><text x="72.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="804" width="4" height="15" fill="rgb(208,80,15)"/><text x="72.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.34%)</title><rect x="69" y="820" width="4" height="15" fill="rgb(225,139,47)"/><text x="72.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="836" width="4" height="15" fill="rgb(241,92,7)"/><text x="72.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="852" width="4" height="15" fill="rgb(217,192,8)"/><text x="72.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="868" width="4" height="15" fill="rgb(206,21,32)"/><text x="72.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="69" y="884" width="4" height="15" fill="rgb(218,32,38)"/><text x="72.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="900" width="4" height="15" fill="rgb(220,106,42)"/><text x="72.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.34%)</title><rect x="69" y="916" width="4" height="15" fill="rgb(237,58,36)"/><text x="72.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="932" width="4" height="15" fill="rgb(215,74,3)"/><text x="72.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="948" width="4" height="15" fill="rgb(229,30,9)"/><text x="72.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="964" width="4" height="15" fill="rgb(224,220,41)"/><text x="72.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="69" y="980" width="4" height="15" fill="rgb(245,113,32)"/><text x="72.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="996" width="4" height="15" fill="rgb(238,59,5)"/><text x="72.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.34%)</title><rect x="69" y="1012" width="4" height="15" fill="rgb(221,221,38)"/><text x="72.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="1028" width="4" height="15" fill="rgb(231,225,15)"/><text x="72.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="1044" width="4" height="15" fill="rgb(249,48,37)"/><text x="72.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="69" y="1060" width="4" height="15" fill="rgb(212,100,52)"/><text x="72.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="69" y="1076" width="4" height="15" fill="rgb(239,48,48)"/><text x="72.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="69" y="1092" width="4" height="15" fill="rgb(221,107,30)"/><text x="72.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="69" y="1108" width="4" height="15" fill="rgb(207,91,27)"/><text x="72.00" y="1118.50"></text></g><g><title>0x7f9522428ff9 (?) (1 samples, 0.34%)</title><rect x="145" y="212" width="4" height="15" fill="rgb(230,116,32)"/><text x="148.00" y="222.50"></text></g><g><title>0x7f9522423ef6 (?) (1 samples, 0.34%)</title><rect x="145" y="228" width="4" height="15" fill="rgb(216,195,13)"/><text x="148.00" y="238.50"></text></g><g><title>0x7f9522418962 (?) (1 samples, 0.34%)</title><rect x="145" y="244" width="4" height="15" fill="rgb(254,166,29)"/><text x="148.00" y="254.50"></text></g><g><title>0x7f952244c7a7 (?) (1 samples, 0.34%)</title><rect x="145" y="260" width="4" height="15" fill="rgb(235,47,49)"/><text x="148.00" y="270.50"></text></g><g><title>0x7f952244c379 (?) (1 samples, 0.34%)</title><rect x="145" y="276" width="4" height="15" fill="rgb(231,83,8)"/><text x="148.00" y="286.50"></text></g><g><title>0x7f95228aa8b8 (?) (1 samples, 0.34%)</title><rect x="145" y="292" width="4" height="15" fill="rgb(250,167,21)"/><text x="148.00" y="302.50"></text></g><g><title>0x7f95228a8c7f (?) (1 samples, 0.34%)</title><rect x="145" y="308" width="4" height="15" fill="rgb(237,39,14)"/><text x="148.00" y="318.50"></text></g><g><title>0x7f95228bb2e5 (?) (1 samples, 0.34%)</title><rect x="145" y="324" width="4" height="15" fill="rgb(230,195,45)"/><text x="148.00" y="334.50"></text></g><g><title>0x7f95228631af (?) (1 samples, 0.34%)</title><rect x="145" y="340" width="4" height="15" fill="rgb(224,8,2)"/><text x="148.00" y="350.50"></text></g><g><title>0x7f952285efb1 (?) (1 samples, 0.34%)</title><rect x="145" y="356" width="4" height="15" fill="rgb(234,104,12)"/><text x="148.00" y="366.50"></text></g><g><title>0x7f952285ed91 (?) (1 samples, 0.34%)</title><rect x="145" y="372" width="4" height="15" fill="rgb(240,203,30)"/><text x="148.00" y="382.50"></text></g><g><title>0x7f95227a8ca7 (?) (1 samples, 0.34%)</title><rect x="145" y="388" width="4" height="15" fill="rgb(238,158,7)"/><text x="148.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="145" y="404" width="4" height="15" fill="rgb(240,163,43)"/><text x="148.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="145" y="420" width="4" height="15" fill="rgb(254,49,5)"/><text x="148.00" y="430.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="149" y="244" width="4" height="15" fill="rgb(211,109,26)"/><text x="152.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.67%)</title><rect x="149" y="212" width="8" height="15" fill="rgb(216,138,15)"/><text x="152.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="149" y="228" width="8" height="15" fill="rgb(223,147,6)"/><text x="152.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="153" y="244" width="4" height="15" fill="rgb(253,222,29)"/><text x="156.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="153" y="260" width="4" height="15" fill="rgb(211,61,20)"/><text x="156.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="153" y="276" width="4" height="15" fill="rgb(214,131,25)"/><text x="156.00" y="286.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="340" width="4" height="15" fill="rgb(244,39,34)"/><text x="167.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="356" width="4" height="15" fill="rgb(237,104,19)"/><text x="167.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="372" width="4" height="15" fill="rgb(244,41,14)"/><text x="167.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="388" width="4" height="15" fill="rgb(243,206,36)"/><text x="167.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="404" width="4" height="15" fill="rgb(238,24,4)"/><text x="167.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="420" width="4" height="15" fill="rgb(239,116,43)"/><text x="167.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="436" width="4" height="15" fill="rgb(225,101,54)"/><text x="167.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="168" y="340" width="4" height="15" fill="rgb(206,181,5)"/><text x="171.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="168" y="356" width="4" height="15" fill="rgb(233,195,53)"/><text x="171.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="168" y="372" width="4" height="15" fill="rgb(206,130,25)"/><text x="171.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="168" y="388" width="4" height="15" fill="rgb(254,24,7)"/><text x="171.00" y="398.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="168" y="404" width="4" height="15" fill="rgb(234,129,16)"/><text x="171.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="172" y="340" width="8" height="15" fill="rgb(216,126,35)"/><text x="175.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="172" y="356" width="8" height="15" fill="rgb(235,146,38)"/><text x="175.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="172" y="372" width="8" height="15" fill="rgb(241,26,25)"/><text x="175.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="176" y="388" width="4" height="15" fill="rgb(217,209,32)"/><text x="179.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="176" y="404" width="4" height="15" fill="rgb(246,34,46)"/><text x="179.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="184" y="452" width="4" height="15" fill="rgb(222,49,35)"/><text x="187.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="184" y="468" width="4" height="15" fill="rgb(212,85,34)"/><text x="187.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="184" y="484" width="4" height="15" fill="rgb(252,197,6)"/><text x="187.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="184" y="500" width="4" height="15" fill="rgb(247,134,49)"/><text x="187.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="184" y="516" width="4" height="15" fill="rgb(229,199,54)"/><text x="187.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="184" y="532" width="4" height="15" fill="rgb(227,167,22)"/><text x="187.00" y="542.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="180" y="340" width="12" height="15" fill="rgb(246,119,51)"/><text x="183.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="180" y="356" width="12" height="15" fill="rgb(230,180,20)"/><text x="183.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="180" y="372" width="12" height="15" fill="rgb(222,42,51)"/><text x="183.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="180" y="388" width="12" height="15" fill="rgb(233,63,42)"/><text x="183.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="180" y="404" width="12" height="15" fill="rgb(213,28,35)"/><text x="183.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="184" y="420" width="8" height="15" fill="rgb(239,199,30)"/><text x="187.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="184" y="436" width="8" height="15" fill="rgb(229,52,28)"/><text x="187.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="188" y="452" width="4" height="15" fill="rgb(229,156,34)"/><text x="191.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="188" y="468" width="4" height="15" fill="rgb(218,76,13)"/><text x="191.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="188" y="484" width="4" height="15" fill="rgb(226,167,45)"/><text x="191.00" y="494.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.03%)</title><rect x="160" y="260" width="36" height="15" fill="rgb(217,143,8)"/><text x="163.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.03%)</title><rect x="160" y="276" width="36" height="15" fill="rgb(207,55,31)"/><text x="163.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.03%)</title><rect x="160" y="292" width="36" height="15" fill="rgb(227,52,25)"/><text x="163.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.03%)</title><rect x="160" y="308" width="36" height="15" fill="rgb(218,222,40)"/><text x="163.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.03%)</title><rect x="160" y="324" width="36" height="15" fill="rgb(214,24,15)"/><text x="163.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="192" y="340" width="4" height="15" fill="rgb(207,206,3)"/><text x="195.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="192" y="356" width="4" height="15" fill="rgb(251,169,24)"/><text x="195.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="192" y="372" width="4" height="15" fill="rgb(220,181,53)"/><text x="195.00" y="382.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="192" y="388" width="4" height="15" fill="rgb(215,78,53)"/><text x="195.00" y="398.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="196" y="260" width="4" height="15" fill="rgb(244,188,27)"/><text x="199.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.34%)</title><rect x="196" y="276" width="4" height="15" fill="rgb(218,226,16)"/><text x="199.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="196" y="292" width="4" height="15" fill="rgb(227,61,5)"/><text x="199.00" y="302.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="200" y="260" width="4" height="15" fill="rgb(230,108,45)"/><text x="203.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 4.38%)</title><rect x="157" y="244" width="51" height="15" fill="rgb(242,33,28)"/><text x="160.00" y="254.50">onnxr..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="204" y="260" width="4" height="15" fill="rgb(253,146,28)"/><text x="207.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="208" y="244" width="4" height="15" fill="rgb(233,19,31)"/><text x="211.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="208" y="260" width="4" height="15" fill="rgb(217,164,53)"/><text x="211.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="208" y="276" width="4" height="15" fill="rgb(239,148,26)"/><text x="211.00" y="286.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="208" y="292" width="4" height="15" fill="rgb(219,58,27)"/><text x="211.00" y="302.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="212" y="244" width="4" height="15" fill="rgb(247,16,20)"/><text x="215.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="212" y="260" width="4" height="15" fill="rgb(251,54,8)"/><text x="215.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="216" y="244" width="4" height="15" fill="rgb(211,140,25)"/><text x="219.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="216" y="260" width="4" height="15" fill="rgb(245,135,15)"/><text x="219.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="216" y="276" width="4" height="15" fill="rgb(215,225,20)"/><text x="219.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (33 samples, 11.11%)</title><rect x="93" y="132" width="131" height="15" fill="rgb(254,181,40)"/><text x="96.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (33 samples, 11.11%)</title><rect x="93" y="148" width="131" height="15" fill="rgb(242,100,28)"/><text x="96.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (31 samples, 10.44%)</title><rect x="101" y="164" width="123" height="15" fill="rgb(230,220,27)"/><text x="104.00" y="174.50">_run_whole_runt..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (26 samples, 8.75%)</title><rect x="121" y="180" width="103" height="15" fill="rgb(244,26,30)"/><text x="124.00" y="190.50">run (mlprodi..</text></g><g><title>run (onnxruntime/capi/session.py) (25 samples, 8.42%)</title><rect x="125" y="196" width="99" height="15" fill="rgb(248,160,51)"/><text x="128.00" y="206.50">run (onnxru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 5.72%)</title><rect x="157" y="212" width="67" height="15" fill="rgb(225,120,31)"/><text x="160.00" y="222.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 5.72%)</title><rect x="157" y="228" width="67" height="15" fill="rgb(206,135,45)"/><text x="160.00" y="238.50">void py..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="220" y="244" width="4" height="15" fill="rgb(230,146,9)"/><text x="223.00" y="254.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.34%)</title><rect x="224" y="132" width="4" height="15" fill="rgb(218,161,32)"/><text x="227.00" y="142.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py) (40 samples, 13.47%)</title><rect x="73" y="68" width="159" height="15" fill="rgb(244,118,0)"/><text x="76.00" y="78.50">profile_ort (bench_L..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py) (40 samples, 13.47%)</title><rect x="73" y="84" width="159" height="15" fill="rgb(233,77,51)"/><text x="76.00" y="94.50">setup_profile (bench..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py) (40 samples, 13.47%)</title><rect x="73" y="100" width="159" height="15" fill="rgb(244,212,17)"/><text x="76.00" y="110.50">profile (bench_Logis..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (38 samples, 12.79%)</title><rect x="81" y="116" width="151" height="15" fill="rgb(215,216,7)"/><text x="84.00" y="126.50">time_predict (mlpro..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.34%)</title><rect x="228" y="132" width="4" height="15" fill="rgb(233,11,48)"/><text x="231.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="284" y="180" width="4" height="15" fill="rgb(211,181,40)"/><text x="287.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.34%)</title><rect x="284" y="196" width="4" height="15" fill="rgb(226,86,25)"/><text x="287.00" y="206.50"></text></g><g><title>0x7f95624d6e61 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="284" y="212" width="4" height="15" fill="rgb(217,118,37)"/><text x="287.00" y="222.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (3 samples, 1.01%)</title><rect x="375" y="196" width="12" height="15" fill="rgb(246,224,25)"/><text x="378.00" y="206.50"></text></g><g><title>0x7f95624191ef (libc-2.29.so) (1 samples, 0.34%)</title><rect x="407" y="228" width="4" height="15" fill="rgb(207,228,29)"/><text x="410.00" y="238.50"></text></g><g><title>0x7f956240e757 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="411" y="260" width="4" height="15" fill="rgb(242,228,40)"/><text x="414.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.34%)</title><rect x="415" y="260" width="4" height="15" fill="rgb(224,115,20)"/><text x="418.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.34%)</title><rect x="415" y="276" width="4" height="15" fill="rgb(221,222,14)"/><text x="418.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="415" y="292" width="4" height="15" fill="rgb(254,88,25)"/><text x="418.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (4 samples, 1.35%)</title><rect x="407" y="212" width="16" height="15" fill="rgb(213,190,29)"/><text x="410.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 1.01%)</title><rect x="411" y="228" width="12" height="15" fill="rgb(232,119,54)"/><text x="414.00" y="238.50"></text></g><g><title>array_astype (methods.c) (3 samples, 1.01%)</title><rect x="411" y="244" width="12" height="15" fill="rgb(205,96,45)"/><text x="414.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.34%)</title><rect x="419" y="260" width="4" height="15" fill="rgb(208,35,11)"/><text x="422.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.34%)</title><rect x="419" y="276" width="4" height="15" fill="rgb(232,80,35)"/><text x="422.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.34%)</title><rect x="419" y="292" width="4" height="15" fill="rgb(230,119,36)"/><text x="422.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="419" y="308" width="4" height="15" fill="rgb(233,175,39)"/><text x="422.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.34%)</title><rect x="423" y="212" width="4" height="15" fill="rgb(219,5,27)"/><text x="426.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.34%)</title><rect x="423" y="228" width="4" height="15" fill="rgb(241,153,18)"/><text x="426.00" y="238.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.34%)</title><rect x="427" y="212" width="4" height="15" fill="rgb(222,229,30)"/><text x="430.00" y="222.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (5 samples, 1.68%)</title><rect x="439" y="244" width="19" height="15" fill="rgb(242,56,23)"/><text x="442.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.01%)</title><rect x="447" y="260" width="11" height="15" fill="rgb(223,87,49)"/><text x="450.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (3 samples, 1.01%)</title><rect x="447" y="276" width="11" height="15" fill="rgb(226,161,21)"/><text x="450.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.67%)</title><rect x="451" y="292" width="7" height="15" fill="rgb(220,12,28)"/><text x="454.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.67%)</title><rect x="451" y="308" width="7" height="15" fill="rgb(236,148,17)"/><text x="454.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.34%)</title><rect x="454" y="324" width="4" height="15" fill="rgb(208,136,18)"/><text x="457.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.34%)</title><rect x="454" y="340" width="4" height="15" fill="rgb(247,40,28)"/><text x="457.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.34%)</title><rect x="474" y="324" width="4" height="15" fill="rgb(205,129,38)"/><text x="477.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.34%)</title><rect x="474" y="340" width="4" height="15" fill="rgb(247,222,32)"/><text x="477.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (6 samples, 2.02%)</title><rect x="458" y="244" width="24" height="15" fill="rgb(206,70,14)"/><text x="461.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (5 samples, 1.68%)</title><rect x="462" y="260" width="20" height="15" fill="rgb(215,133,29)"/><text x="465.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.01%)</title><rect x="470" y="276" width="12" height="15" fill="rgb(246,134,26)"/><text x="473.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (3 samples, 1.01%)</title><rect x="470" y="292" width="12" height="15" fill="rgb(231,3,9)"/><text x="473.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (2 samples, 0.67%)</title><rect x="474" y="308" width="8" height="15" fill="rgb(209,33,39)"/><text x="477.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (1 samples, 0.34%)</title><rect x="478" y="324" width="4" height="15" fill="rgb(238,68,43)"/><text x="481.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.34%)</title><rect x="478" y="340" width="4" height="15" fill="rgb(208,55,27)"/><text x="481.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.34%)</title><rect x="478" y="356" width="4" height="15" fill="rgb(241,117,20)"/><text x="481.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="478" y="372" width="4" height="15" fill="rgb(230,218,50)"/><text x="481.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.34%)</title><rect x="478" y="388" width="4" height="15" fill="rgb(237,52,20)"/><text x="481.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.34%)</title><rect x="478" y="404" width="4" height="15" fill="rgb(205,219,8)"/><text x="481.00" y="414.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.67%)</title><rect x="482" y="260" width="8" height="15" fill="rgb(225,169,49)"/><text x="485.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.67%)</title><rect x="482" y="276" width="8" height="15" fill="rgb(229,7,2)"/><text x="485.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.34%)</title><rect x="486" y="292" width="4" height="15" fill="rgb(210,7,17)"/><text x="489.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.67%)</title><rect x="490" y="276" width="8" height="15" fill="rgb(222,136,26)"/><text x="493.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.34%)</title><rect x="494" y="292" width="4" height="15" fill="rgb(240,23,13)"/><text x="497.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.34%)</title><rect x="498" y="292" width="4" height="15" fill="rgb(233,13,15)"/><text x="501.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.34%)</title><rect x="498" y="308" width="4" height="15" fill="rgb(249,93,15)"/><text x="501.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.34%)</title><rect x="498" y="324" width="4" height="15" fill="rgb(207,162,15)"/><text x="501.00" y="334.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h) (1 samples, 0.34%)</title><rect x="498" y="340" width="4" height="15" fill="rgb(218,60,16)"/><text x="501.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 1.01%)</title><rect x="498" y="276" width="12" height="15" fill="rgb(229,169,48)"/><text x="501.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.67%)</title><rect x="502" y="292" width="8" height="15" fill="rgb(232,184,52)"/><text x="505.00" y="302.50"></text></g><g><title>0x7f954d6e033d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.67%)</title><rect x="502" y="308" width="8" height="15" fill="rgb(231,33,40)"/><text x="505.00" y="318.50"></text></g><g><title>0x7f954d702214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.67%)</title><rect x="502" y="324" width="8" height="15" fill="rgb(210,202,11)"/><text x="505.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (2 samples, 0.67%)</title><rect x="502" y="340" width="8" height="15" fill="rgb(205,167,42)"/><text x="505.00" y="350.50"></text></g><g><title>0x7f9562577e71 (libm-2.29.so) (1 samples, 0.34%)</title><rect x="506" y="356" width="4" height="15" fill="rgb(243,227,15)"/><text x="509.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.34%)</title><rect x="510" y="276" width="4" height="15" fill="rgb(248,62,25)"/><text x="513.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.36%)</title><rect x="490" y="260" width="28" height="15" fill="rgb(253,223,10)"/><text x="493.00" y="270.50">P..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.34%)</title><rect x="514" y="276" width="4" height="15" fill="rgb(249,22,9)"/><text x="517.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (22 samples, 7.41%)</title><rect x="435" y="228" width="87" height="15" fill="rgb(236,187,27)"/><text x="438.00" y="238.50">_run (mlpr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 3.37%)</title><rect x="482" y="244" width="40" height="15" fill="rgb(251,165,51)"/><text x="485.00" y="254.50">ufu..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.34%)</title><rect x="518" y="260" width="4" height="15" fill="rgb(234,74,3)"/><text x="521.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.34%)</title><rect x="518" y="276" width="4" height="15" fill="rgb(247,202,5)"/><text x="521.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="538" y="276" width="4" height="15" fill="rgb(243,7,12)"/><text x="541.00" y="286.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.34%)</title><rect x="538" y="292" width="4" height="15" fill="rgb(226,126,52)"/><text x="541.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.34%)</title><rect x="538" y="308" width="4" height="15" fill="rgb(214,17,33)"/><text x="541.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.67%)</title><rect x="538" y="260" width="8" height="15" fill="rgb(214,12,39)"/><text x="541.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.34%)</title><rect x="542" y="276" width="4" height="15" fill="rgb(207,155,45)"/><text x="545.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.34%)</title><rect x="542" y="292" width="4" height="15" fill="rgb(227,208,54)"/><text x="545.00" y="302.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.34%)</title><rect x="546" y="276" width="4" height="15" fill="rgb(220,50,50)"/><text x="549.00" y="286.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 1.01%)</title><rect x="546" y="260" width="12" height="15" fill="rgb(240,151,46)"/><text x="549.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.67%)</title><rect x="550" y="276" width="8" height="15" fill="rgb(252,189,27)"/><text x="553.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.34%)</title><rect x="554" y="292" width="4" height="15" fill="rgb(251,227,8)"/><text x="557.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.34%)</title><rect x="554" y="308" width="4" height="15" fill="rgb(252,131,6)"/><text x="557.00" y="318.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.34%)</title><rect x="554" y="324" width="4" height="15" fill="rgb(206,97,54)"/><text x="557.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.67%)</title><rect x="570" y="324" width="8" height="15" fill="rgb(237,49,21)"/><text x="573.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.67%)</title><rect x="570" y="340" width="8" height="15" fill="rgb(229,35,24)"/><text x="573.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.67%)</title><rect x="570" y="356" width="8" height="15" fill="rgb(225,199,49)"/><text x="573.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.67%)</title><rect x="570" y="372" width="8" height="15" fill="rgb(230,122,39)"/><text x="573.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.67%)</title><rect x="570" y="388" width="8" height="15" fill="rgb(247,204,43)"/><text x="573.00" y="398.50"></text></g><g><title>0x7f95624d6151 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="574" y="404" width="4" height="15" fill="rgb(231,152,24)"/><text x="577.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.34%)</title><rect x="578" y="340" width="4" height="15" fill="rgb(243,170,42)"/><text x="581.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.34%)</title><rect x="582" y="340" width="4" height="15" fill="rgb(247,216,17)"/><text x="585.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.34%)</title><rect x="594" y="404" width="4" height="15" fill="rgb(217,215,18)"/><text x="597.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="594" y="420" width="4" height="15" fill="rgb(251,30,53)"/><text x="597.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.34%)</title><rect x="594" y="436" width="4" height="15" fill="rgb(214,8,47)"/><text x="597.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.34%)</title><rect x="594" y="452" width="4" height="15" fill="rgb(213,85,18)"/><text x="597.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="594" y="468" width="4" height="15" fill="rgb(224,184,54)"/><text x="597.00" y="478.50"></text></g><g><title>0x7f9562418d50 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="601" y="420" width="4" height="15" fill="rgb(240,219,36)"/><text x="604.00" y="430.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (5 samples, 1.68%)</title><rect x="590" y="372" width="19" height="15" fill="rgb(247,156,52)"/><text x="593.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (5 samples, 1.68%)</title><rect x="590" y="388" width="19" height="15" fill="rgb(238,128,6)"/><text x="593.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (3 samples, 1.01%)</title><rect x="598" y="404" width="11" height="15" fill="rgb(235,160,53)"/><text x="601.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.34%)</title><rect x="605" y="420" width="4" height="15" fill="rgb(238,80,7)"/><text x="608.00" y="430.50"></text></g><g><title>0x7f9562419120 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="613" y="420" width="4" height="15" fill="rgb(240,114,31)"/><text x="616.00" y="430.50"></text></g><g><title>array_sum (methods.c) (16 samples, 5.39%)</title><rect x="558" y="260" width="63" height="15" fill="rgb(225,30,36)"/><text x="561.00" y="270.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (16 samples, 5.39%)</title><rect x="558" y="276" width="63" height="15" fill="rgb(247,86,17)"/><text x="561.00" y="286.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 4.71%)</title><rect x="566" y="292" width="55" height="15" fill="rgb(252,2,53)"/><text x="569.00" y="302.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 4.38%)</title><rect x="570" y="308" width="51" height="15" fill="rgb(216,155,15)"/><text x="573.00" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 3.70%)</title><rect x="578" y="324" width="43" height="15" fill="rgb(215,195,27)"/><text x="581.00" y="334.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (9 samples, 3.03%)</title><rect x="586" y="340" width="35" height="15" fill="rgb(207,218,37)"/><text x="589.00" y="350.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 3.03%)</title><rect x="586" y="356" width="35" height="15" fill="rgb(213,68,31)"/><text x="589.00" y="366.50">Py..</text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 1.01%)</title><rect x="609" y="372" width="12" height="15" fill="rgb(245,124,17)"/><text x="612.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.67%)</title><rect x="613" y="388" width="8" height="15" fill="rgb(228,61,1)"/><text x="616.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.67%)</title><rect x="613" y="404" width="8" height="15" fill="rgb(220,7,37)"/><text x="616.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.34%)</title><rect x="617" y="420" width="4" height="15" fill="rgb(239,64,28)"/><text x="620.00" y="430.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.34%)</title><rect x="617" y="436" width="4" height="15" fill="rgb(227,206,44)"/><text x="620.00" y="446.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.67%)</title><rect x="625" y="276" width="8" height="15" fill="rgb(221,67,46)"/><text x="628.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.67%)</title><rect x="625" y="292" width="8" height="15" fill="rgb(230,31,3)"/><text x="628.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.34%)</title><rect x="629" y="308" width="4" height="15" fill="rgb(247,96,1)"/><text x="632.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.34%)</title><rect x="629" y="324" width="4" height="15" fill="rgb(227,95,49)"/><text x="632.00" y="334.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="633" y="292" width="4" height="15" fill="rgb(212,64,48)"/><text x="636.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.34%)</title><rect x="637" y="292" width="4" height="15" fill="rgb(207,16,41)"/><text x="640.00" y="302.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="641" y="292" width="4" height="15" fill="rgb(218,140,3)"/><text x="644.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.35%)</title><rect x="633" y="276" width="16" height="15" fill="rgb(219,51,28)"/><text x="636.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="645" y="292" width="4" height="15" fill="rgb(231,150,49)"/><text x="648.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="645" y="308" width="4" height="15" fill="rgb(242,0,30)"/><text x="648.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (104 samples, 35.02%)</title><rect x="240" y="132" width="413" height="15" fill="rgb(253,229,48)"/><text x="243.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (103 samples, 34.68%)</title><rect x="244" y="148" width="409" height="15" fill="rgb(241,210,20)"/><text x="247.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (99 samples, 33.33%)</title><rect x="260" y="164" width="393" height="15" fill="rgb(215,32,3)"/><text x="263.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (92 samples, 30.98%)</title><rect x="288" y="180" width="365" height="15" fill="rgb(213,21,36)"/><text x="291.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (67 samples, 22.56%)</title><rect x="387" y="196" width="266" height="15" fill="rgb(247,84,38)"/><text x="390.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (56 samples, 18.86%)</title><rect x="431" y="212" width="222" height="15" fill="rgb(223,13,46)"/><text x="434.00" y="222.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (33 samples, 11.11%)</title><rect x="522" y="228" width="131" height="15" fill="rgb(216,40,10)"/><text x="525.00" y="238.50">_run (mlprodict/..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (32 samples, 10.77%)</title><rect x="526" y="244" width="127" height="15" fill="rgb(234,212,19)"/><text x="529.00" y="254.50">norm_l1 (mlprod..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 2.69%)</title><rect x="621" y="260" width="32" height="15" fill="rgb(243,122,46)"/><text x="624.00" y="270.50">uf..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.34%)</title><rect x="649" y="276" width="4" height="15" fill="rgb(217,181,10)"/><text x="652.00" y="286.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py) (108 samples, 36.36%)</title><rect x="232" y="68" width="429" height="15" fill="rgb(209,61,33)"/><text x="235.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solv..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py) (108 samples, 36.36%)</title><rect x="232" y="84" width="429" height="15" fill="rgb(237,182,47)"/><text x="235.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_sol..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py) (108 samples, 36.36%)</title><rect x="232" y="100" width="429" height="15" fill="rgb(206,187,28)"/><text x="235.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverlib..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (107 samples, 36.03%)</title><rect x="236" y="116" width="425" height="15" fill="rgb(237,172,29)"/><text x="239.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.67%)</title><rect x="653" y="132" width="8" height="15" fill="rgb(253,48,46)"/><text x="656.00" y="142.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.67%)</title><rect x="705" y="180" width="8" height="15" fill="rgb(247,58,44)"/><text x="708.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.34%)</title><rect x="709" y="196" width="4" height="15" fill="rgb(209,194,32)"/><text x="712.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.34%)</title><rect x="709" y="212" width="4" height="15" fill="rgb(226,24,4)"/><text x="712.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 1.01%)</title><rect x="717" y="244" width="12" height="15" fill="rgb(215,3,30)"/><text x="720.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 1.01%)</title><rect x="717" y="260" width="12" height="15" fill="rgb(209,50,28)"/><text x="720.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 1.01%)</title><rect x="717" y="276" width="12" height="15" fill="rgb(219,68,3)"/><text x="720.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 1.01%)</title><rect x="717" y="292" width="12" height="15" fill="rgb(241,10,32)"/><text x="720.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 1.01%)</title><rect x="717" y="308" width="12" height="15" fill="rgb(245,91,41)"/><text x="720.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.34%)</title><rect x="733" y="292" width="4" height="15" fill="rgb(213,168,52)"/><text x="736.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.34%)</title><rect x="733" y="308" width="4" height="15" fill="rgb(235,192,28)"/><text x="736.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.67%)</title><rect x="737" y="292" width="8" height="15" fill="rgb(208,149,53)"/><text x="740.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.34%)</title><rect x="741" y="308" width="4" height="15" fill="rgb(244,105,32)"/><text x="744.00" y="318.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.34%)</title><rect x="745" y="292" width="3" height="15" fill="rgb(231,185,5)"/><text x="748.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 2.36%)</title><rect x="733" y="276" width="27" height="15" fill="rgb(221,158,41)"/><text x="736.00" y="286.50">P..</text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 1.01%)</title><rect x="748" y="292" width="12" height="15" fill="rgb(232,21,51)"/><text x="751.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.67%)</title><rect x="752" y="308" width="8" height="15" fill="rgb(234,100,52)"/><text x="755.00" y="318.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.34%)</title><rect x="756" y="324" width="4" height="15" fill="rgb(208,180,9)"/><text x="759.00" y="334.50"></text></g><g><title>array_sum (methods.c) (13 samples, 4.38%)</title><rect x="713" y="180" width="51" height="15" fill="rgb(241,216,4)"/><text x="716.00" y="190.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (13 samples, 4.38%)</title><rect x="713" y="196" width="51" height="15" fill="rgb(220,95,34)"/><text x="716.00" y="206.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py) (12 samples, 4.04%)</title><rect x="717" y="212" width="47" height="15" fill="rgb(226,213,7)"/><text x="720.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 4.04%)</title><rect x="717" y="228" width="47" height="15" fill="rgb(229,19,3)"/><text x="720.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 3.03%)</title><rect x="729" y="244" width="35" height="15" fill="rgb(251,170,19)"/><text x="732.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 2.69%)</title><rect x="733" y="260" width="31" height="15" fill="rgb(234,163,10)"/><text x="736.00" y="270.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.34%)</title><rect x="760" y="276" width="4" height="15" fill="rgb(211,53,19)"/><text x="763.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="760" y="292" width="4" height="15" fill="rgb(243,86,24)"/><text x="763.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="760" y="308" width="4" height="15" fill="rgb(206,74,10)"/><text x="763.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.34%)</title><rect x="780" y="196" width="4" height="15" fill="rgb(233,151,19)"/><text x="783.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.34%)</title><rect x="780" y="212" width="4" height="15" fill="rgb(207,32,21)"/><text x="783.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="780" y="228" width="4" height="15" fill="rgb(237,85,22)"/><text x="783.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="780" y="244" width="4" height="15" fill="rgb(251,229,24)"/><text x="783.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="784" y="260" width="4" height="15" fill="rgb(212,219,26)"/><text x="787.00" y="270.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.34%)</title><rect x="792" y="308" width="4" height="15" fill="rgb(209,129,25)"/><text x="795.00" y="318.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.34%)</title><rect x="792" y="324" width="4" height="15" fill="rgb(214,40,0)"/><text x="795.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.01%)</title><rect x="788" y="276" width="12" height="15" fill="rgb(236,0,15)"/><text x="791.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (3 samples, 1.01%)</title><rect x="788" y="292" width="12" height="15" fill="rgb(239,63,23)"/><text x="791.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.34%)</title><rect x="796" y="308" width="4" height="15" fill="rgb(205,120,30)"/><text x="799.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.34%)</title><rect x="796" y="324" width="4" height="15" fill="rgb(230,124,34)"/><text x="799.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="796" y="340" width="4" height="15" fill="rgb(213,24,10)"/><text x="799.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="796" y="356" width="4" height="15" fill="rgb(241,196,42)"/><text x="799.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.68%)</title><rect x="784" y="228" width="20" height="15" fill="rgb(206,205,14)"/><text x="787.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.68%)</title><rect x="784" y="244" width="20" height="15" fill="rgb(216,103,12)"/><text x="787.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.35%)</title><rect x="788" y="260" width="16" height="15" fill="rgb(240,172,38)"/><text x="791.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.34%)</title><rect x="800" y="276" width="4" height="15" fill="rgb(206,170,11)"/><text x="803.00" y="286.50"></text></g><g><title>array_add (number.c) (6 samples, 2.02%)</title><rect x="784" y="196" width="24" height="15" fill="rgb(225,160,16)"/><text x="787.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 2.02%)</title><rect x="784" y="212" width="24" height="15" fill="rgb(254,119,45)"/><text x="787.00" y="222.50">u..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.34%)</title><rect x="804" y="228" width="4" height="15" fill="rgb(254,13,11)"/><text x="807.00" y="238.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.34%)</title><rect x="804" y="244" width="4" height="15" fill="rgb(235,9,46)"/><text x="807.00" y="254.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 1.35%)</title><rect x="864" y="212" width="16" height="15" fill="rgb(211,79,11)"/><text x="867.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 1.01%)</title><rect x="880" y="212" width="12" height="15" fill="rgb(245,109,6)"/><text x="883.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.34%)</title><rect x="892" y="212" width="3" height="15" fill="rgb(251,11,9)"/><text x="895.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="903" y="228" width="12" height="15" fill="rgb(219,124,36)"/><text x="906.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 2.02%)</title><rect x="895" y="212" width="24" height="15" fill="rgb(229,85,17)"/><text x="898.00" y="222.50">_..</text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.34%)</title><rect x="915" y="228" width="4" height="15" fill="rgb(222,44,0)"/><text x="918.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.67%)</title><rect x="919" y="212" width="8" height="15" fill="rgb(250,50,14)"/><text x="922.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (10 samples, 3.37%)</title><rect x="927" y="212" width="40" height="15" fill="rgb(236,176,52)"/><text x="930.00" y="222.50">_nu..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 1.01%)</title><rect x="955" y="228" width="12" height="15" fill="rgb(232,76,44)"/><text x="958.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.34%)</title><rect x="967" y="212" width="4" height="15" fill="rgb(225,190,53)"/><text x="970.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.67%)</title><rect x="979" y="228" width="8" height="15" fill="rgb(219,38,5)"/><text x="982.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (6 samples, 2.02%)</title><rect x="971" y="212" width="24" height="15" fill="rgb(248,81,17)"/><text x="974.00" y="222.50">i..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.67%)</title><rect x="987" y="228" width="8" height="15" fill="rgb(217,219,47)"/><text x="990.00" y="238.50"></text></g><g><title>0x7f956240ee7a (libc-2.29.so) (1 samples, 0.34%)</title><rect x="991" y="244" width="4" height="15" fill="rgb(224,8,43)"/><text x="994.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (50 samples, 16.84%)</title><rect x="808" y="196" width="199" height="15" fill="rgb(235,124,50)"/><text x="811.00" y="206.50">check_array (sklearn/utils..</text></g><g><title>simplefilter (warnings.py) (3 samples, 1.01%)</title><rect x="995" y="212" width="12" height="15" fill="rgb(207,165,53)"/><text x="998.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.67%)</title><rect x="999" y="228" width="8" height="15" fill="rgb(236,141,33)"/><text x="1002.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 2.02%)</title><rect x="1007" y="196" width="24" height="15" fill="rgb(243,26,48)"/><text x="1010.00" y="206.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 1.68%)</title><rect x="1011" y="212" width="20" height="15" fill="rgb(231,43,2)"/><text x="1014.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.67%)</title><rect x="1023" y="228" width="8" height="15" fill="rgb(216,149,20)"/><text x="1026.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.34%)</title><rect x="1035" y="212" width="4" height="15" fill="rgb(244,211,14)"/><text x="1038.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.34%)</title><rect x="1039" y="260" width="3" height="15" fill="rgb(221,34,42)"/><text x="1042.00" y="270.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.34%)</title><rect x="1050" y="292" width="4" height="15" fill="rgb(237,170,44)"/><text x="1053.00" y="302.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.34%)</title><rect x="1050" y="308" width="4" height="15" fill="rgb(223,7,41)"/><text x="1053.00" y="318.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.34%)</title><rect x="1054" y="308" width="4" height="15" fill="rgb(250,0,6)"/><text x="1057.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1054" y="324" width="4" height="15" fill="rgb(236,142,13)"/><text x="1057.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 1.68%)</title><rect x="1042" y="276" width="20" height="15" fill="rgb(208,203,12)"/><text x="1045.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.67%)</title><rect x="1054" y="292" width="8" height="15" fill="rgb(252,214,37)"/><text x="1057.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.34%)</title><rect x="1058" y="308" width="4" height="15" fill="rgb(229,51,4)"/><text x="1061.00" y="318.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.34%)</title><rect x="1058" y="324" width="4" height="15" fill="rgb(250,101,21)"/><text x="1061.00" y="334.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.34%)</title><rect x="1058" y="340" width="4" height="15" fill="rgb(211,70,49)"/><text x="1061.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1062" y="276" width="4" height="15" fill="rgb(215,201,26)"/><text x="1065.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 2.36%)</title><rect x="1042" y="260" width="28" height="15" fill="rgb(211,51,50)"/><text x="1045.00" y="270.50">N..</text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1066" y="276" width="4" height="15" fill="rgb(230,139,17)"/><text x="1069.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1070" y="260" width="4" height="15" fill="rgb(230,87,6)"/><text x="1073.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="1070" y="276" width="4" height="15" fill="rgb(249,13,8)"/><text x="1073.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="1070" y="292" width="4" height="15" fill="rgb(247,29,36)"/><text x="1073.00" y="302.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.34%)</title><rect x="1074" y="260" width="4" height="15" fill="rgb(207,54,33)"/><text x="1077.00" y="270.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="1078" y="260" width="4" height="15" fill="rgb(239,13,12)"/><text x="1081.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1082" y="276" width="4" height="15" fill="rgb(212,222,43)"/><text x="1085.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1082" y="292" width="4" height="15" fill="rgb(212,1,37)"/><text x="1085.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.34%)</title><rect x="1082" y="308" width="4" height="15" fill="rgb(248,142,16)"/><text x="1085.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.67%)</title><rect x="1082" y="260" width="8" height="15" fill="rgb(225,127,41)"/><text x="1085.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="1086" y="276" width="4" height="15" fill="rgb(251,39,19)"/><text x="1089.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1086" y="292" width="4" height="15" fill="rgb(233,71,50)"/><text x="1089.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1086" y="308" width="4" height="15" fill="rgb(221,194,3)"/><text x="1089.00" y="318.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1086" y="324" width="4" height="15" fill="rgb(213,154,33)"/><text x="1089.00" y="334.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (83 samples, 27.95%)</title><rect x="764" y="180" width="330" height="15" fill="rgb(252,188,13)"/><text x="767.00" y="190.50">decision_function (sklearn/linear_model/_bas..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (16 samples, 5.39%)</title><rect x="1031" y="196" width="63" height="15" fill="rgb(234,85,33)"/><text x="1034.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 4.71%)</title><rect x="1039" y="212" width="55" height="15" fill="rgb(232,199,45)"/><text x="1042.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 4.71%)</title><rect x="1039" y="228" width="55" height="15" fill="rgb(217,34,38)"/><text x="1042.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (14 samples, 4.71%)</title><rect x="1039" y="244" width="55" height="15" fill="rgb(231,68,18)"/><text x="1042.00" y="254.50">PyUFu..</text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1090" y="260" width="4" height="15" fill="rgb(227,223,4)"/><text x="1093.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1090" y="276" width="4" height="15" fill="rgb(218,7,3)"/><text x="1093.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.67%)</title><rect x="1102" y="196" width="8" height="15" fill="rgb(237,75,23)"/><text x="1105.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.34%)</title><rect x="1106" y="212" width="4" height="15" fill="rgb(241,129,0)"/><text x="1109.00" y="222.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1110" y="212" width="4" height="15" fill="rgb(208,99,51)"/><text x="1113.00" y="222.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (2 samples, 0.67%)</title><rect x="1114" y="260" width="8" height="15" fill="rgb(229,15,48)"/><text x="1117.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1118" y="276" width="4" height="15" fill="rgb(228,220,22)"/><text x="1121.00" y="286.50"></text></g><g><title>0x7f95623b07c2 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1118" y="292" width="4" height="15" fill="rgb(212,52,49)"/><text x="1121.00" y="302.50"></text></g><g><title>0x7f95623b0a19 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1118" y="308" width="4" height="15" fill="rgb(238,15,27)"/><text x="1121.00" y="318.50"></text></g><g><title>diophantine_sort_A (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1118" y="324" width="4" height="15" fill="rgb(224,185,52)"/><text x="1121.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 1.01%)</title><rect x="1114" y="212" width="12" height="15" fill="rgb(251,97,34)"/><text x="1117.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 1.01%)</title><rect x="1114" y="228" width="12" height="15" fill="rgb(253,96,29)"/><text x="1117.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 1.01%)</title><rect x="1114" y="244" width="12" height="15" fill="rgb(251,201,42)"/><text x="1117.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1122" y="260" width="4" height="15" fill="rgb(235,92,11)"/><text x="1125.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1122" y="276" width="4" height="15" fill="rgb(223,213,18)"/><text x="1125.00" y="286.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.34%)</title><rect x="1122" y="292" width="4" height="15" fill="rgb(248,151,6)"/><text x="1125.00" y="302.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.34%)</title><rect x="1122" y="308" width="4" height="15" fill="rgb(245,142,41)"/><text x="1125.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.68%)</title><rect x="1110" y="196" width="20" height="15" fill="rgb(230,154,21)"/><text x="1113.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="1126" y="212" width="4" height="15" fill="rgb(232,58,1)"/><text x="1129.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="1126" y="228" width="4" height="15" fill="rgb(220,47,21)"/><text x="1129.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1126" y="244" width="4" height="15" fill="rgb(233,215,53)"/><text x="1129.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (111 samples, 37.37%)</title><rect x="693" y="164" width="441" height="15" fill="rgb(216,193,11)"/><text x="696.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 3.37%)</title><rect x="1094" y="180" width="40" height="15" fill="rgb(229,41,20)"/><text x="1097.00" y="190.50">ufu..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1130" y="196" width="4" height="15" fill="rgb(251,151,32)"/><text x="1133.00" y="206.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1130" y="212" width="4" height="15" fill="rgb(237,212,8)"/><text x="1133.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.34%)</title><rect x="1170" y="196" width="4" height="15" fill="rgb(210,70,0)"/><text x="1173.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 2.69%)</title><rect x="1146" y="180" width="32" height="15" fill="rgb(254,21,10)"/><text x="1149.00" y="190.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.34%)</title><rect x="1174" y="196" width="4" height="15" fill="rgb(219,71,39)"/><text x="1177.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (127 samples, 42.76%)</title><rect x="677" y="132" width="505" height="15" fill="rgb(222,9,7)"/><text x="680.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (126 samples, 42.42%)</title><rect x="681" y="148" width="501" height="15" fill="rgb(210,146,1)"/><text x="684.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (12 samples, 4.04%)</title><rect x="1134" y="164" width="48" height="15" fill="rgb(207,199,44)"/><text x="1137.00" y="174.50">chec..</text></g><g><title>isclass (inspect.py) (1 samples, 0.34%)</title><rect x="1178" y="180" width="4" height="15" fill="rgb(249,43,38)"/><text x="1181.00" y="190.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py) (132 samples, 44.44%)</title><rect x="661" y="100" width="525" height="15" fill="rgb(214,165,23)"/><text x="664.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (131 samples, 44.11%)</title><rect x="665" y="116" width="521" height="15" fill="rgb(238,184,36)"/><text x="668.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.34%)</title><rect x="1182" y="132" width="4" height="15" fill="rgb(205,3,17)"/><text x="1185.00" y="142.50"></text></g><g><title>all (297 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(244,0,2)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py) (297 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(213,172,49)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py) (133 samples, 44.78%)</title><rect x="661" y="68" width="529" height="15" fill="rgb(219,97,5)"/><text x="664.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py) (133 samples, 44.78%)</title><rect x="661" y="84" width="529" height="15" fill="rgb(245,184,1)"/><text x="664.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="1186" y="100" width="4" height="15" fill="rgb(217,87,11)"/><text x="1189.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.34%)</title><rect x="1186" y="116" width="4" height="15" fill="rgb(231,211,38)"/><text x="1189.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py) (1 samples, 0.34%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(205,152,30)"/><text x="1189.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(207,15,2)"/><text x="1189.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(210,147,41)"/><text x="1189.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(226,130,24)"/><text x="1189.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(247,131,11)"/><text x="1189.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(236,142,34)"/><text x="1189.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py) (1 samples, 0.34%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(232,89,28)"/><text x="1189.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(210,208,2)"/><text x="1189.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(241,183,36)"/><text x="1189.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(226,57,8)"/><text x="1189.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(238,184,27)"/><text x="1189.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(250,178,54)"/><text x="1189.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py) (1 samples, 0.34%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(229,217,33)"/><text x="1189.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(218,98,16)"/><text x="1189.00" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="356" width="4" height="15" fill="rgb(253,80,14)"/><text x="1189.00" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="372" width="4" height="15" fill="rgb(210,126,50)"/><text x="1189.00" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="1186" y="388" width="4" height="15" fill="rgb(244,100,24)"/><text x="1189.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="404" width="4" height="15" fill="rgb(213,90,7)"/><text x="1189.00" y="414.50"></text></g><g><title>&lt;module&gt; (lightgbm/compat.py) (1 samples, 0.34%)</title><rect x="1186" y="420" width="4" height="15" fill="rgb(216,219,8)"/><text x="1189.00" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="436" width="4" height="15" fill="rgb(254,3,25)"/><text x="1189.00" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="452" width="4" height="15" fill="rgb(206,34,10)"/><text x="1189.00" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="468" width="4" height="15" fill="rgb(245,102,40)"/><text x="1189.00" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="1186" y="484" width="4" height="15" fill="rgb(226,188,11)"/><text x="1189.00" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="500" width="4" height="15" fill="rgb(237,62,11)"/><text x="1189.00" y="510.50"></text></g><g><title>&lt;module&gt; (graphviz/__init__.py) (1 samples, 0.34%)</title><rect x="1186" y="516" width="4" height="15" fill="rgb(222,192,41)"/><text x="1189.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="532" width="4" height="15" fill="rgb(212,112,49)"/><text x="1189.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="548" width="4" height="15" fill="rgb(239,123,28)"/><text x="1189.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="564" width="4" height="15" fill="rgb(223,98,51)"/><text x="1189.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="1186" y="580" width="4" height="15" fill="rgb(209,78,10)"/><text x="1189.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="596" width="4" height="15" fill="rgb(246,194,54)"/><text x="1189.00" y="606.50"></text></g><g><title>&lt;module&gt; (graphviz/dot.py) (1 samples, 0.34%)</title><rect x="1186" y="612" width="4" height="15" fill="rgb(252,33,9)"/><text x="1189.00" y="622.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="628" width="4" height="15" fill="rgb(215,18,3)"/><text x="1189.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="644" width="4" height="15" fill="rgb(227,1,14)"/><text x="1189.00" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="660" width="4" height="15" fill="rgb(224,228,4)"/><text x="1189.00" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="676" width="4" height="15" fill="rgb(225,197,21)"/><text x="1189.00" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="692" width="4" height="15" fill="rgb(246,88,37)"/><text x="1189.00" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="1186" y="708" width="4" height="15" fill="rgb(211,170,51)"/><text x="1189.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="724" width="4" height="15" fill="rgb(253,62,37)"/><text x="1189.00" y="734.50"></text></g><g><title>&lt;module&gt; (graphviz/lang.py) (1 samples, 0.34%)</title><rect x="1186" y="740" width="4" height="15" fill="rgb(240,17,10)"/><text x="1189.00" y="750.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="756" width="4" height="15" fill="rgb(216,3,26)"/><text x="1189.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="772" width="4" height="15" fill="rgb(230,212,15)"/><text x="1189.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="788" width="4" height="15" fill="rgb(238,32,19)"/><text x="1189.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="1186" y="804" width="4" height="15" fill="rgb(252,161,17)"/><text x="1189.00" y="814.50"></text></g></g></svg>