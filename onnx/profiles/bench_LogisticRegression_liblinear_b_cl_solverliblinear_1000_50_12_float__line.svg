<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1670" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1653.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1653.00"> </text><g id="frames"><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (1 samples, 0.12%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(215,32,48)"/><text x="13.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.12%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(217,111,1)"/><text x="13.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.12%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(219,26,51)"/><text x="13.00" y="190.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.12%)</title><rect x="11" y="164" width="1" height="15" fill="rgb(253,89,2)"/><text x="14.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (1 samples, 0.12%)</title><rect x="11" y="180" width="1" height="15" fill="rgb(238,80,23)"/><text x="14.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.12%)</title><rect x="11" y="196" width="1" height="15" fill="rgb(220,189,51)"/><text x="14.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.12%)</title><rect x="11" y="212" width="1" height="15" fill="rgb(216,44,21)"/><text x="14.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.12%)</title><rect x="11" y="228" width="1" height="15" fill="rgb(248,179,38)"/><text x="14.00" y="238.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:18) (3 samples, 0.37%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(248,6,2)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.37%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(207,81,18)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (3 samples, 0.37%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(232,106,11)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (2 samples, 0.25%)</title><rect x="11" y="148" width="3" height="15" fill="rgb(252,96,51)"/><text x="14.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (1 samples, 0.12%)</title><rect x="12" y="164" width="2" height="15" fill="rgb(232,219,45)"/><text x="15.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.12%)</title><rect x="12" y="180" width="2" height="15" fill="rgb(228,120,53)"/><text x="15.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="12" y="196" width="2" height="15" fill="rgb(254,60,38)"/><text x="15.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.12%)</title><rect x="12" y="212" width="2" height="15" fill="rgb(224,210,49)"/><text x="15.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.12%)</title><rect x="12" y="228" width="2" height="15" fill="rgb(242,79,51)"/><text x="15.00" y="238.50"></text></g><g><title>0x7f871f6729dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="12" y="244" width="2" height="15" fill="rgb(224,16,6)"/><text x="15.00" y="254.50"></text></g><g><title>0x7f871f693265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="12" y="260" width="2" height="15" fill="rgb(223,87,53)"/><text x="15.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.12%)</title><rect x="12" y="276" width="2" height="15" fill="rgb(242,24,9)"/><text x="15.00" y="286.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.12%)</title><rect x="15" y="164" width="2" height="15" fill="rgb(247,167,25)"/><text x="18.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.12%)</title><rect x="15" y="180" width="2" height="15" fill="rgb(249,181,50)"/><text x="18.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.12%)</title><rect x="17" y="164" width="1" height="15" fill="rgb(211,124,13)"/><text x="20.00" y="174.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (3 samples, 0.37%)</title><rect x="15" y="148" width="5" height="15" fill="rgb(207,13,15)"/><text x="18.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.12%)</title><rect x="18" y="164" width="2" height="15" fill="rgb(227,48,21)"/><text x="21.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.12%)</title><rect x="18" y="180" width="2" height="15" fill="rgb(243,117,41)"/><text x="21.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.12%)</title><rect x="18" y="196" width="2" height="15" fill="rgb(221,105,46)"/><text x="21.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.25%)</title><rect x="20" y="196" width="3" height="15" fill="rgb(220,159,18)"/><text x="23.00" y="206.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.25%)</title><rect x="20" y="212" width="3" height="15" fill="rgb(236,21,53)"/><text x="23.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.12%)</title><rect x="26" y="228" width="1" height="15" fill="rgb(217,4,45)"/><text x="29.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (6 samples, 0.75%)</title><rect x="20" y="180" width="9" height="15" fill="rgb(207,40,7)"/><text x="23.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.50%)</title><rect x="23" y="196" width="6" height="15" fill="rgb(205,128,50)"/><text x="26.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.50%)</title><rect x="23" y="212" width="6" height="15" fill="rgb(229,55,24)"/><text x="26.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.12%)</title><rect x="27" y="228" width="2" height="15" fill="rgb(237,146,39)"/><text x="30.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.12%)</title><rect x="29" y="196" width="1" height="15" fill="rgb(215,84,40)"/><text x="32.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.25%)</title><rect x="32" y="212" width="2" height="15" fill="rgb(232,205,54)"/><text x="35.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 0.50%)</title><rect x="30" y="196" width="6" height="15" fill="rgb(242,192,31)"/><text x="33.00" y="206.50"></text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.12%)</title><rect x="34" y="212" width="2" height="15" fill="rgb(230,16,38)"/><text x="37.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.12%)</title><rect x="36" y="196" width="1" height="15" fill="rgb(229,163,22)"/><text x="39.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.12%)</title><rect x="36" y="212" width="1" height="15" fill="rgb(216,41,16)"/><text x="39.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.12%)</title><rect x="37" y="212" width="2" height="15" fill="rgb(219,209,41)"/><text x="40.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.25%)</title><rect x="37" y="196" width="3" height="15" fill="rgb(243,161,4)"/><text x="40.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.12%)</title><rect x="39" y="212" width="1" height="15" fill="rgb(205,30,19)"/><text x="42.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:526) (1 samples, 0.12%)</title><rect x="40" y="196" width="2" height="15" fill="rgb(240,181,11)"/><text x="43.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.12%)</title><rect x="43" y="212" width="2" height="15" fill="rgb(251,46,31)"/><text x="46.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.12%)</title><rect x="43" y="228" width="2" height="15" fill="rgb(213,35,39)"/><text x="46.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.12%)</title><rect x="45" y="212" width="1" height="15" fill="rgb(244,178,48)"/><text x="48.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.12%)</title><rect x="45" y="228" width="1" height="15" fill="rgb(218,86,36)"/><text x="48.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (4 samples, 0.50%)</title><rect x="42" y="196" width="6" height="15" fill="rgb(238,164,49)"/><text x="45.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:425) (1 samples, 0.12%)</title><rect x="46" y="212" width="2" height="15" fill="rgb(213,179,47)"/><text x="49.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.12%)</title><rect x="48" y="196" width="1" height="15" fill="rgb(207,99,5)"/><text x="51.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:561) (1 samples, 0.12%)</title><rect x="49" y="196" width="2" height="15" fill="rgb(225,201,34)"/><text x="52.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.12%)</title><rect x="51" y="196" width="1" height="15" fill="rgb(252,208,24)"/><text x="54.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.12%)</title><rect x="51" y="212" width="1" height="15" fill="rgb(240,143,0)"/><text x="54.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.12%)</title><rect x="52" y="212" width="2" height="15" fill="rgb(241,197,46)"/><text x="55.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.12%)</title><rect x="54" y="212" width="1" height="15" fill="rgb(234,85,25)"/><text x="57.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.12%)</title><rect x="54" y="228" width="1" height="15" fill="rgb(215,186,26)"/><text x="57.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (22 samples, 2.74%)</title><rect x="29" y="180" width="32" height="15" fill="rgb(239,146,1)"/><text x="32.00" y="190.50">de..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 0.75%)</title><rect x="52" y="196" width="9" height="15" fill="rgb(242,184,48)"/><text x="55.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.50%)</title><rect x="55" y="212" width="6" height="15" fill="rgb(251,128,22)"/><text x="58.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.25%)</title><rect x="58" y="228" width="3" height="15" fill="rgb(254,78,7)"/><text x="61.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.25%)</title><rect x="58" y="244" width="3" height="15" fill="rgb(221,100,2)"/><text x="61.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:271) (1 samples, 0.12%)</title><rect x="61" y="180" width="1" height="15" fill="rgb(245,64,19)"/><text x="64.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.12%)</title><rect x="61" y="196" width="1" height="15" fill="rgb(219,162,12)"/><text x="64.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.12%)</title><rect x="64" y="228" width="1" height="15" fill="rgb(239,67,44)"/><text x="67.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.12%)</title><rect x="64" y="244" width="1" height="15" fill="rgb(240,6,50)"/><text x="67.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.12%)</title><rect x="64" y="260" width="1" height="15" fill="rgb(252,123,14)"/><text x="67.00" y="270.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.12%)</title><rect x="64" y="276" width="1" height="15" fill="rgb(224,203,20)"/><text x="67.00" y="286.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.12%)</title><rect x="64" y="292" width="1" height="15" fill="rgb(221,165,46)"/><text x="67.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.12%)</title><rect x="65" y="276" width="2" height="15" fill="rgb(236,215,37)"/><text x="68.00" y="286.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.12%)</title><rect x="65" y="292" width="2" height="15" fill="rgb(238,182,54)"/><text x="68.00" y="302.50"></text></g><g><title>array_add (number.c:330) (4 samples, 0.50%)</title><rect x="62" y="196" width="6" height="15" fill="rgb(210,66,53)"/><text x="65.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.37%)</title><rect x="64" y="212" width="4" height="15" fill="rgb(247,84,1)"/><text x="67.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.25%)</title><rect x="65" y="228" width="3" height="15" fill="rgb(221,214,49)"/><text x="68.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.25%)</title><rect x="65" y="244" width="3" height="15" fill="rgb(208,190,25)"/><text x="68.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.25%)</title><rect x="65" y="260" width="3" height="15" fill="rgb(215,228,17)"/><text x="68.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.12%)</title><rect x="67" y="276" width="1" height="15" fill="rgb(215,135,11)"/><text x="70.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.12%)</title><rect x="67" y="292" width="1" height="15" fill="rgb(222,201,4)"/><text x="70.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.12%)</title><rect x="67" y="308" width="1" height="15" fill="rgb(221,169,22)"/><text x="70.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="68" y="196" width="2" height="15" fill="rgb(241,190,53)"/><text x="71.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.12%)</title><rect x="68" y="212" width="2" height="15" fill="rgb(209,11,7)"/><text x="71.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.12%)</title><rect x="68" y="228" width="2" height="15" fill="rgb(207,1,23)"/><text x="71.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.12%)</title><rect x="73" y="212" width="1" height="15" fill="rgb(217,168,0)"/><text x="76.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 2.62%)</title><rect x="74" y="212" width="31" height="15" fill="rgb(219,225,13)"/><text x="77.00" y="222.50">dg..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.12%)</title><rect x="105" y="260" width="1" height="15" fill="rgb(232,219,14)"/><text x="108.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.12%)</title><rect x="105" y="276" width="1" height="15" fill="rgb(221,17,53)"/><text x="108.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.12%)</title><rect x="105" y="292" width="1" height="15" fill="rgb(252,120,17)"/><text x="108.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.12%)</title><rect x="106" y="276" width="2" height="15" fill="rgb(232,223,5)"/><text x="109.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.12%)</title><rect x="106" y="292" width="2" height="15" fill="rgb(239,199,29)"/><text x="109.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.12%)</title><rect x="106" y="308" width="2" height="15" fill="rgb(249,68,8)"/><text x="109.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.12%)</title><rect x="106" y="324" width="2" height="15" fill="rgb(253,205,14)"/><text x="109.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.12%)</title><rect x="106" y="340" width="2" height="15" fill="rgb(230,211,45)"/><text x="109.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.12%)</title><rect x="106" y="356" width="2" height="15" fill="rgb(222,37,6)"/><text x="109.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.12%)</title><rect x="106" y="372" width="2" height="15" fill="rgb(230,23,2)"/><text x="109.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="106" y="388" width="2" height="15" fill="rgb(225,37,49)"/><text x="109.00" y="398.50"></text></g><g><title>0x7f873438ab12 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="106" y="404" width="2" height="15" fill="rgb(217,199,32)"/><text x="109.00" y="414.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (18 samples, 2.24%)</title><rect x="108" y="308" width="26" height="15" fill="rgb(233,95,24)"/><text x="111.00" y="318.50">r..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (18 samples, 2.24%)</title><rect x="108" y="324" width="26" height="15" fill="rgb(226,73,13)"/><text x="111.00" y="334.50">_..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (21 samples, 2.62%)</title><rect x="105" y="244" width="31" height="15" fill="rgb(219,56,46)"/><text x="108.00" y="254.50">Py..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (20 samples, 2.49%)</title><rect x="106" y="260" width="30" height="15" fill="rgb(227,61,0)"/><text x="109.00" y="270.50">Np..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (19 samples, 2.37%)</title><rect x="108" y="276" width="28" height="15" fill="rgb(219,20,3)"/><text x="111.00" y="286.50">n..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (19 samples, 2.37%)</title><rect x="108" y="292" width="28" height="15" fill="rgb(232,202,51)"/><text x="111.00" y="302.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.12%)</title><rect x="134" y="308" width="2" height="15" fill="rgb(252,132,10)"/><text x="137.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.12%)</title><rect x="134" y="324" width="2" height="15" fill="rgb(224,85,47)"/><text x="137.00" y="334.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.12%)</title><rect x="134" y="340" width="2" height="15" fill="rgb(250,45,38)"/><text x="137.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.12%)</title><rect x="136" y="244" width="1" height="15" fill="rgb(215,216,6)"/><text x="139.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:73) (1 samples, 0.12%)</title><rect x="136" y="260" width="1" height="15" fill="rgb(206,208,39)"/><text x="139.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.12%)</title><rect x="137" y="244" width="2" height="15" fill="rgb(221,159,33)"/><text x="140.00" y="254.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:184) (1 samples, 0.12%)</title><rect x="137" y="260" width="2" height="15" fill="rgb(233,144,51)"/><text x="140.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.12%)</title><rect x="137" y="276" width="2" height="15" fill="rgb(212,50,53)"/><text x="140.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3002) (1 samples, 0.12%)</title><rect x="139" y="244" width="1" height="15" fill="rgb(208,48,29)"/><text x="142.00" y="254.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c:828) (1 samples, 0.12%)</title><rect x="139" y="260" width="1" height="15" fill="rgb(218,103,4)"/><text x="142.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (14 samples, 1.74%)</title><rect x="140" y="244" width="21" height="15" fill="rgb(232,155,23)"/><text x="143.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (14 samples, 1.74%)</title><rect x="140" y="260" width="21" height="15" fill="rgb(217,168,16)"/><text x="143.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 1.74%)</title><rect x="140" y="276" width="21" height="15" fill="rgb(227,35,16)"/><text x="143.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 1.74%)</title><rect x="140" y="292" width="21" height="15" fill="rgb(229,197,18)"/><text x="143.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 1.62%)</title><rect x="142" y="308" width="19" height="15" fill="rgb(232,223,8)"/><text x="145.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3011) (1 samples, 0.12%)</title><rect x="161" y="244" width="1" height="15" fill="rgb(227,103,26)"/><text x="164.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="161" y="260" width="1" height="15" fill="rgb(205,194,30)"/><text x="164.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (64 samples, 7.97%)</title><rect x="70" y="196" width="94" height="15" fill="rgb(208,124,1)"/><text x="73.00" y="206.50">safe_sparse..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (40 samples, 4.98%)</title><rect x="105" y="212" width="59" height="15" fill="rgb(240,118,50)"/><text x="108.00" y="222.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (40 samples, 4.98%)</title><rect x="105" y="228" width="59" height="15" fill="rgb(208,48,9)"/><text x="108.00" y="238.50">PyUFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.12%)</title><rect x="162" y="244" width="2" height="15" fill="rgb(242,100,29)"/><text x="165.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.12%)</title><rect x="162" y="260" width="2" height="15" fill="rgb(235,78,6)"/><text x="165.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.12%)</title><rect x="162" y="276" width="2" height="15" fill="rgb(231,44,48)"/><text x="165.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.12%)</title><rect x="162" y="292" width="2" height="15" fill="rgb(243,152,23)"/><text x="165.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.12%)</title><rect x="162" y="308" width="2" height="15" fill="rgb(248,207,32)"/><text x="165.00" y="318.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.12%)</title><rect x="162" y="324" width="2" height="15" fill="rgb(209,191,28)"/><text x="165.00" y="334.50"></text></g><g><title>0x7f87335ab380 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="162" y="340" width="2" height="15" fill="rgb(223,171,14)"/><text x="165.00" y="350.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (70 samples, 8.72%)</title><rect x="62" y="180" width="103" height="15" fill="rgb(217,221,11)"/><text x="65.00" y="190.50">decision_fun..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.12%)</title><rect x="164" y="196" width="1" height="15" fill="rgb(212,209,35)"/><text x="167.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.12%)</title><rect x="164" y="212" width="1" height="15" fill="rgb(218,198,50)"/><text x="167.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (100 samples, 12.45%)</title><rect x="20" y="164" width="147" height="15" fill="rgb(254,43,43)"/><text x="23.00" y="174.50">_predict_proba_lr ..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.12%)</title><rect x="165" y="180" width="2" height="15" fill="rgb(214,152,1)"/><text x="168.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.12%)</title><rect x="167" y="196" width="1" height="15" fill="rgb(215,40,51)"/><text x="170.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.12%)</title><rect x="167" y="212" width="1" height="15" fill="rgb(227,226,17)"/><text x="170.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.12%)</title><rect x="168" y="212" width="2" height="15" fill="rgb(230,47,9)"/><text x="171.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.12%)</title><rect x="168" y="228" width="2" height="15" fill="rgb(238,197,31)"/><text x="171.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.12%)</title><rect x="168" y="244" width="2" height="15" fill="rgb(233,113,26)"/><text x="171.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.12%)</title><rect x="168" y="260" width="2" height="15" fill="rgb(246,63,16)"/><text x="171.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.12%)</title><rect x="168" y="276" width="2" height="15" fill="rgb(225,137,15)"/><text x="171.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="168" y="292" width="2" height="15" fill="rgb(220,156,40)"/><text x="171.00" y="302.50"></text></g><g><title>0x7f871f6729da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="170" y="244" width="1" height="15" fill="rgb(247,176,15)"/><text x="173.00" y="254.50"></text></g><g><title>0x7f871f693254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="171" y="260" width="2" height="15" fill="rgb(215,181,33)"/><text x="174.00" y="270.50"></text></g><g><title>0x7f871f650fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="173" y="276" width="3" height="15" fill="rgb(207,38,7)"/><text x="176.00" y="286.50"></text></g><g><title>0x7f873455bbb4 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="183" y="292" width="1" height="15" fill="rgb(253,141,42)"/><text x="186.00" y="302.50"></text></g><g><title>0x7f873455bbe7 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="184" y="292" width="2" height="15" fill="rgb(230,54,24)"/><text x="187.00" y="302.50"></text></g><g><title>0x7f873455bbf9 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="186" y="292" width="1" height="15" fill="rgb(220,22,46)"/><text x="189.00" y="302.50"></text></g><g><title>0x7f871f693265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.37%)</title><rect x="173" y="260" width="16" height="15" fill="rgb(211,153,13)"/><text x="176.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (9 samples, 1.12%)</title><rect x="176" y="276" width="13" height="15" fill="rgb(236,168,7)"/><text x="179.00" y="286.50"></text></g><g><title>0x7f873455bc2e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="187" y="292" width="2" height="15" fill="rgb(229,112,50)"/><text x="190.00" y="302.50"></text></g><g><title>0x7f871f693275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="189" y="260" width="1" height="15" fill="rgb(220,168,18)"/><text x="192.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (18 samples, 2.24%)</title><rect x="168" y="196" width="27" height="15" fill="rgb(238,84,48)"/><text x="171.00" y="206.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (17 samples, 2.12%)</title><rect x="170" y="212" width="25" height="15" fill="rgb(226,197,23)"/><text x="173.00" y="222.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (17 samples, 2.12%)</title><rect x="170" y="228" width="25" height="15" fill="rgb(209,11,53)"/><text x="173.00" y="238.50">t..</text></g><g><title>0x7f871f6729dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (16 samples, 1.99%)</title><rect x="171" y="244" width="24" height="15" fill="rgb(220,229,47)"/><text x="174.00" y="254.50">0..</text></g><g><title>0x7f871f693279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.37%)</title><rect x="190" y="260" width="5" height="15" fill="rgb(240,52,34)"/><text x="193.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (20 samples, 2.49%)</title><rect x="167" y="164" width="29" height="15" fill="rgb(233,195,25)"/><text x="170.00" y="174.50">_p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (20 samples, 2.49%)</title><rect x="167" y="180" width="29" height="15" fill="rgb(246,148,10)"/><text x="170.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.12%)</title><rect x="195" y="196" width="1" height="15" fill="rgb(205,12,14)"/><text x="198.00" y="206.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:309) (1 samples, 0.12%)</title><rect x="196" y="164" width="2" height="15" fill="rgb(211,222,16)"/><text x="199.00" y="174.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.12%)</title><rect x="201" y="180" width="1" height="15" fill="rgb(239,165,30)"/><text x="204.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.12%)</title><rect x="201" y="196" width="1" height="15" fill="rgb(237,208,10)"/><text x="204.00" y="206.50"></text></g><g><title>0x7f873439f73b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="201" y="212" width="1" height="15" fill="rgb(228,206,48)"/><text x="204.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.12%)</title><rect x="202" y="180" width="1" height="15" fill="rgb(220,190,6)"/><text x="205.00" y="190.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.12%)</title><rect x="203" y="228" width="2" height="15" fill="rgb(253,80,14)"/><text x="206.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.12%)</title><rect x="203" y="244" width="2" height="15" fill="rgb(205,70,42)"/><text x="206.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.12%)</title><rect x="203" y="260" width="2" height="15" fill="rgb(246,226,34)"/><text x="206.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.12%)</title><rect x="203" y="276" width="2" height="15" fill="rgb(222,42,37)"/><text x="206.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.12%)</title><rect x="203" y="292" width="2" height="15" fill="rgb(207,109,13)"/><text x="206.00" y="302.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:18) (1 samples, 0.12%)</title><rect x="203" y="308" width="2" height="15" fill="rgb(251,113,34)"/><text x="206.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.12%)</title><rect x="205" y="244" width="1" height="15" fill="rgb(249,146,10)"/><text x="208.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3635) (1 samples, 0.12%)</title><rect x="206" y="260" width="2" height="15" fill="rgb(226,48,54)"/><text x="209.00" y="270.50"></text></g><g><title>_get_identity (ufunc_object.c:2464) (1 samples, 0.12%)</title><rect x="206" y="276" width="2" height="15" fill="rgb(209,154,39)"/><text x="209.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.12%)</title><rect x="208" y="260" width="1" height="15" fill="rgb(219,110,22)"/><text x="211.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.12%)</title><rect x="208" y="276" width="1" height="15" fill="rgb(206,204,16)"/><text x="211.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.12%)</title><rect x="208" y="292" width="1" height="15" fill="rgb(221,25,30)"/><text x="211.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.12%)</title><rect x="208" y="308" width="1" height="15" fill="rgb(205,221,27)"/><text x="211.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.12%)</title><rect x="209" y="276" width="2" height="15" fill="rgb(217,209,48)"/><text x="212.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.12%)</title><rect x="209" y="292" width="2" height="15" fill="rgb(241,224,11)"/><text x="212.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:41) (1 samples, 0.12%)</title><rect x="209" y="308" width="2" height="15" fill="rgb(243,193,8)"/><text x="212.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.12%)</title><rect x="211" y="276" width="1" height="15" fill="rgb(253,207,53)"/><text x="214.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.12%)</title><rect x="211" y="292" width="1" height="15" fill="rgb(243,3,45)"/><text x="214.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1704) (1 samples, 0.12%)</title><rect x="211" y="308" width="1" height="15" fill="rgb(232,167,45)"/><text x="214.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.12%)</title><rect x="212" y="292" width="2" height="15" fill="rgb(250,128,50)"/><text x="215.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.12%)</title><rect x="214" y="292" width="1" height="15" fill="rgb(207,108,52)"/><text x="217.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (3 samples, 0.37%)</title><rect x="217" y="308" width="4" height="15" fill="rgb(220,184,8)"/><text x="220.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.12%)</title><rect x="221" y="308" width="2" height="15" fill="rgb(233,66,12)"/><text x="224.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.25%)</title><rect x="227" y="324" width="3" height="15" fill="rgb(252,21,34)"/><text x="230.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (6 samples, 0.75%)</title><rect x="223" y="308" width="8" height="15" fill="rgb(234,138,5)"/><text x="226.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.12%)</title><rect x="230" y="324" width="1" height="15" fill="rgb(224,214,36)"/><text x="233.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.12%)</title><rect x="231" y="308" width="2" height="15" fill="rgb(211,69,18)"/><text x="234.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (3 samples, 0.37%)</title><rect x="233" y="308" width="4" height="15" fill="rgb(239,42,22)"/><text x="236.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.12%)</title><rect x="237" y="308" width="2" height="15" fill="rgb(239,15,1)"/><text x="240.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (26 samples, 3.24%)</title><rect x="203" y="180" width="39" height="15" fill="rgb(218,104,29)"/><text x="206.00" y="190.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (26 samples, 3.24%)</title><rect x="203" y="196" width="39" height="15" fill="rgb(246,47,42)"/><text x="206.00" y="206.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (26 samples, 3.24%)</title><rect x="203" y="212" width="39" height="15" fill="rgb(206,123,15)"/><text x="206.00" y="222.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (25 samples, 3.11%)</title><rect x="205" y="228" width="37" height="15" fill="rgb(223,66,36)"/><text x="208.00" y="238.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (24 samples, 2.99%)</title><rect x="206" y="244" width="36" height="15" fill="rgb(252,173,48)"/><text x="209.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (22 samples, 2.74%)</title><rect x="209" y="260" width="33" height="15" fill="rgb(247,17,12)"/><text x="212.00" y="270.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (20 samples, 2.49%)</title><rect x="212" y="276" width="30" height="15" fill="rgb(213,64,3)"/><text x="215.00" y="286.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (18 samples, 2.24%)</title><rect x="215" y="292" width="27" height="15" fill="rgb(243,39,52)"/><text x="218.00" y="302.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (2 samples, 0.25%)</title><rect x="239" y="308" width="3" height="15" fill="rgb(233,56,36)"/><text x="242.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.12%)</title><rect x="242" y="228" width="1" height="15" fill="rgb(234,55,36)"/><text x="245.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.12%)</title><rect x="242" y="244" width="1" height="15" fill="rgb(252,35,43)"/><text x="245.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.12%)</title><rect x="242" y="260" width="1" height="15" fill="rgb(206,116,17)"/><text x="245.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.12%)</title><rect x="242" y="276" width="1" height="15" fill="rgb(254,186,40)"/><text x="245.00" y="286.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.12%)</title><rect x="242" y="292" width="1" height="15" fill="rgb(216,117,28)"/><text x="245.00" y="302.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.12%)</title><rect x="242" y="308" width="1" height="15" fill="rgb(243,8,39)"/><text x="245.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.12%)</title><rect x="243" y="292" width="2" height="15" fill="rgb(249,143,8)"/><text x="246.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.25%)</title><rect x="243" y="228" width="3" height="15" fill="rgb(231,140,17)"/><text x="246.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.25%)</title><rect x="243" y="244" width="3" height="15" fill="rgb(216,112,35)"/><text x="246.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.25%)</title><rect x="243" y="260" width="3" height="15" fill="rgb(244,80,32)"/><text x="246.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.25%)</title><rect x="243" y="276" width="3" height="15" fill="rgb(224,212,50)"/><text x="246.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.12%)</title><rect x="245" y="292" width="1" height="15" fill="rgb(234,36,29)"/><text x="248.00" y="302.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (1 samples, 0.12%)</title><rect x="246" y="276" width="2" height="15" fill="rgb(222,199,45)"/><text x="249.00" y="286.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.12%)</title><rect x="246" y="292" width="2" height="15" fill="rgb(225,60,22)"/><text x="249.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (7 samples, 0.87%)</title><rect x="246" y="244" width="10" height="15" fill="rgb(242,201,41)"/><text x="249.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (7 samples, 0.87%)</title><rect x="246" y="260" width="10" height="15" fill="rgb(227,164,4)"/><text x="249.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (6 samples, 0.75%)</title><rect x="248" y="276" width="8" height="15" fill="rgb(242,133,10)"/><text x="251.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (6 samples, 0.75%)</title><rect x="248" y="292" width="8" height="15" fill="rgb(249,138,33)"/><text x="251.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (165 samples, 20.55%)</title><rect x="15" y="132" width="243" height="15" fill="rgb(220,219,26)"/><text x="18.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (162 samples, 20.17%)</title><rect x="20" y="148" width="238" height="15" fill="rgb(231,157,33)"/><text x="23.00" y="158.50">predict_proba (sklearn/linear_m..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (41 samples, 5.11%)</title><rect x="198" y="164" width="60" height="15" fill="rgb(243,228,52)"/><text x="201.00" y="174.50">_predi..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.37%)</title><rect x="242" y="180" width="16" height="15" fill="rgb(230,184,23)"/><text x="245.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.37%)</title><rect x="242" y="196" width="16" height="15" fill="rgb(232,221,52)"/><text x="245.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 1.37%)</title><rect x="242" y="212" width="16" height="15" fill="rgb(228,137,10)"/><text x="245.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (8 samples, 1.00%)</title><rect x="246" y="228" width="12" height="15" fill="rgb(216,151,10)"/><text x="249.00" y="238.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.12%)</title><rect x="256" y="244" width="2" height="15" fill="rgb(237,112,39)"/><text x="259.00" y="254.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1969) (1 samples, 0.12%)</title><rect x="256" y="260" width="2" height="15" fill="rgb(243,81,20)"/><text x="259.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:38) (170 samples, 21.17%)</title><rect x="10" y="52" width="249" height="15" fill="rgb(213,51,3)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegressio..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:37) (170 samples, 21.17%)</title><rect x="10" y="68" width="249" height="15" fill="rgb(220,200,42)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegres..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:29) (170 samples, 21.17%)</title><rect x="10" y="84" width="249" height="15" fill="rgb(208,229,33)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegr..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:23) (167 samples, 20.80%)</title><rect x="14" y="100" width="245" height="15" fill="rgb(250,171,25)"/><text x="17.00" y="110.50">profile (bench_LogisticRegressio..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (166 samples, 20.67%)</title><rect x="15" y="116" width="244" height="15" fill="rgb(250,147,30)"/><text x="18.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.12%)</title><rect x="258" y="132" width="1" height="15" fill="rgb(225,186,11)"/><text x="261.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:1) (1 samples, 0.12%)</title><rect x="259" y="148" width="2" height="15" fill="rgb(217,94,21)"/><text x="262.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="259" y="164" width="2" height="15" fill="rgb(221,92,14)"/><text x="262.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="259" y="180" width="2" height="15" fill="rgb(240,222,24)"/><text x="262.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="259" y="196" width="2" height="15" fill="rgb(211,67,7)"/><text x="262.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="259" y="212" width="2" height="15" fill="rgb(230,190,15)"/><text x="262.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="259" y="228" width="2" height="15" fill="rgb(216,49,18)"/><text x="262.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.12%)</title><rect x="259" y="244" width="2" height="15" fill="rgb(219,207,3)"/><text x="262.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="259" y="260" width="2" height="15" fill="rgb(213,160,12)"/><text x="262.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="259" y="276" width="2" height="15" fill="rgb(210,167,2)"/><text x="262.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="259" y="292" width="2" height="15" fill="rgb(209,37,24)"/><text x="262.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="259" y="308" width="2" height="15" fill="rgb(248,97,0)"/><text x="262.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="259" y="324" width="2" height="15" fill="rgb(230,175,6)"/><text x="262.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="259" y="340" width="2" height="15" fill="rgb(251,36,33)"/><text x="262.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="259" y="356" width="2" height="15" fill="rgb(232,228,19)"/><text x="262.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:99) (1 samples, 0.12%)</title><rect x="259" y="372" width="2" height="15" fill="rgb(253,15,21)"/><text x="262.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="259" y="388" width="2" height="15" fill="rgb(248,13,14)"/><text x="262.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="259" y="404" width="2" height="15" fill="rgb(214,183,16)"/><text x="262.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="259" y="420" width="2" height="15" fill="rgb(206,154,49)"/><text x="262.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="259" y="436" width="2" height="15" fill="rgb(228,26,53)"/><text x="262.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="259" y="452" width="2" height="15" fill="rgb(238,11,33)"/><text x="262.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="259" y="468" width="2" height="15" fill="rgb(223,181,10)"/><text x="262.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="259" y="484" width="2" height="15" fill="rgb(213,62,39)"/><text x="262.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_dtype_ctypes.py:26) (1 samples, 0.12%)</title><rect x="259" y="500" width="2" height="15" fill="rgb(213,62,4)"/><text x="262.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="259" y="516" width="2" height="15" fill="rgb(249,79,4)"/><text x="262.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="259" y="532" width="2" height="15" fill="rgb(226,117,44)"/><text x="262.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="259" y="548" width="2" height="15" fill="rgb(236,33,29)"/><text x="262.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="259" y="564" width="2" height="15" fill="rgb(240,53,53)"/><text x="262.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="259" y="580" width="2" height="15" fill="rgb(217,126,34)"/><text x="262.00" y="590.50"></text></g><g><title>&lt;module&gt; (ctypes/__init__.py:488) (1 samples, 0.12%)</title><rect x="259" y="596" width="2" height="15" fill="rgb(243,65,30)"/><text x="262.00" y="606.50"></text></g><g><title>PYFUNCTYPE (ctypes/__init__.py:482) (1 samples, 0.12%)</title><rect x="259" y="612" width="2" height="15" fill="rgb(219,94,23)"/><text x="262.00" y="622.50"></text></g><g><title>0x7f8728e60c37 (?) (1 samples, 0.12%)</title><rect x="259" y="628" width="2" height="15" fill="rgb(213,227,20)"/><text x="262.00" y="638.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (2 samples, 0.25%)</title><rect x="261" y="932" width="3" height="15" fill="rgb(250,73,51)"/><text x="264.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (2 samples, 0.25%)</title><rect x="261" y="948" width="3" height="15" fill="rgb(231,150,32)"/><text x="264.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (2 samples, 0.25%)</title><rect x="261" y="964" width="3" height="15" fill="rgb(243,215,38)"/><text x="264.00" y="974.50"></text></g><g><title>0x7f87343c9237 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="262" y="980" width="2" height="15" fill="rgb(211,223,3)"/><text x="265.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 0.37%)</title><rect x="261" y="852" width="4" height="15" fill="rgb(235,140,43)"/><text x="264.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 0.37%)</title><rect x="261" y="868" width="4" height="15" fill="rgb(210,156,41)"/><text x="264.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 0.37%)</title><rect x="261" y="884" width="4" height="15" fill="rgb(210,60,39)"/><text x="264.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.37%)</title><rect x="261" y="900" width="4" height="15" fill="rgb(247,128,12)"/><text x="264.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (3 samples, 0.37%)</title><rect x="261" y="916" width="4" height="15" fill="rgb(249,33,14)"/><text x="264.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.12%)</title><rect x="264" y="932" width="1" height="15" fill="rgb(236,66,39)"/><text x="267.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.12%)</title><rect x="264" y="948" width="1" height="15" fill="rgb(216,190,43)"/><text x="267.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.12%)</title><rect x="264" y="964" width="1" height="15" fill="rgb(212,175,39)"/><text x="267.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.12%)</title><rect x="264" y="980" width="1" height="15" fill="rgb(207,183,37)"/><text x="267.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:226) (1 samples, 0.12%)</title><rect x="264" y="996" width="1" height="15" fill="rgb(233,11,25)"/><text x="267.00" y="1006.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 0.50%)</title><rect x="261" y="388" width="6" height="15" fill="rgb(216,211,31)"/><text x="264.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.50%)</title><rect x="261" y="404" width="6" height="15" fill="rgb(218,227,37)"/><text x="264.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.50%)</title><rect x="261" y="420" width="6" height="15" fill="rgb(240,24,14)"/><text x="264.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.50%)</title><rect x="261" y="436" width="6" height="15" fill="rgb(235,1,26)"/><text x="264.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.50%)</title><rect x="261" y="452" width="6" height="15" fill="rgb(206,119,14)"/><text x="264.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.50%)</title><rect x="261" y="468" width="6" height="15" fill="rgb(225,115,9)"/><text x="264.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 0.50%)</title><rect x="261" y="484" width="6" height="15" fill="rgb(205,223,11)"/><text x="264.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.50%)</title><rect x="261" y="500" width="6" height="15" fill="rgb(221,183,46)"/><text x="264.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.50%)</title><rect x="261" y="516" width="6" height="15" fill="rgb(234,132,42)"/><text x="264.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.50%)</title><rect x="261" y="532" width="6" height="15" fill="rgb(247,15,22)"/><text x="264.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.50%)</title><rect x="261" y="548" width="6" height="15" fill="rgb(243,173,1)"/><text x="264.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.50%)</title><rect x="261" y="564" width="6" height="15" fill="rgb(241,206,54)"/><text x="264.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 0.50%)</title><rect x="261" y="580" width="6" height="15" fill="rgb(232,95,31)"/><text x="264.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.50%)</title><rect x="261" y="596" width="6" height="15" fill="rgb(213,12,10)"/><text x="264.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.50%)</title><rect x="261" y="612" width="6" height="15" fill="rgb(222,120,34)"/><text x="264.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.50%)</title><rect x="261" y="628" width="6" height="15" fill="rgb(254,169,53)"/><text x="264.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.50%)</title><rect x="261" y="644" width="6" height="15" fill="rgb(231,172,18)"/><text x="264.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.50%)</title><rect x="261" y="660" width="6" height="15" fill="rgb(227,97,7)"/><text x="264.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.50%)</title><rect x="261" y="676" width="6" height="15" fill="rgb(251,68,45)"/><text x="264.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.50%)</title><rect x="261" y="692" width="6" height="15" fill="rgb(207,124,32)"/><text x="264.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.50%)</title><rect x="261" y="708" width="6" height="15" fill="rgb(210,152,10)"/><text x="264.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 0.50%)</title><rect x="261" y="724" width="6" height="15" fill="rgb(254,212,27)"/><text x="264.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.50%)</title><rect x="261" y="740" width="6" height="15" fill="rgb(253,189,53)"/><text x="264.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.50%)</title><rect x="261" y="756" width="6" height="15" fill="rgb(219,29,38)"/><text x="264.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.50%)</title><rect x="261" y="772" width="6" height="15" fill="rgb(225,80,27)"/><text x="264.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.50%)</title><rect x="261" y="788" width="6" height="15" fill="rgb(249,88,27)"/><text x="264.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.50%)</title><rect x="261" y="804" width="6" height="15" fill="rgb(243,110,37)"/><text x="264.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.50%)</title><rect x="261" y="820" width="6" height="15" fill="rgb(239,141,4)"/><text x="264.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.50%)</title><rect x="261" y="836" width="6" height="15" fill="rgb(221,102,32)"/><text x="264.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.12%)</title><rect x="265" y="852" width="2" height="15" fill="rgb(214,146,24)"/><text x="268.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.12%)</title><rect x="265" y="868" width="2" height="15" fill="rgb(229,51,38)"/><text x="268.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.12%)</title><rect x="265" y="884" width="2" height="15" fill="rgb(223,224,19)"/><text x="268.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.12%)</title><rect x="265" y="900" width="2" height="15" fill="rgb(254,134,14)"/><text x="268.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.12%)</title><rect x="265" y="916" width="2" height="15" fill="rgb(244,82,22)"/><text x="268.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.12%)</title><rect x="265" y="932" width="2" height="15" fill="rgb(221,28,23)"/><text x="268.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.12%)</title><rect x="265" y="948" width="2" height="15" fill="rgb(241,17,36)"/><text x="268.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.12%)</title><rect x="265" y="964" width="2" height="15" fill="rgb(209,149,42)"/><text x="268.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:244) (1 samples, 0.12%)</title><rect x="265" y="980" width="2" height="15" fill="rgb(254,169,13)"/><text x="268.00" y="990.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.12%)</title><rect x="265" y="996" width="2" height="15" fill="rgb(250,206,44)"/><text x="268.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:2) (5 samples, 0.62%)</title><rect x="261" y="148" width="7" height="15" fill="rgb(246,29,12)"/><text x="264.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.62%)</title><rect x="261" y="164" width="7" height="15" fill="rgb(206,93,20)"/><text x="264.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.62%)</title><rect x="261" y="180" width="7" height="15" fill="rgb(237,111,25)"/><text x="264.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.62%)</title><rect x="261" y="196" width="7" height="15" fill="rgb(251,207,45)"/><text x="264.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.62%)</title><rect x="261" y="212" width="7" height="15" fill="rgb(222,69,24)"/><text x="264.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.62%)</title><rect x="261" y="228" width="7" height="15" fill="rgb(220,16,29)"/><text x="264.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.62%)</title><rect x="261" y="244" width="7" height="15" fill="rgb(229,99,9)"/><text x="264.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.62%)</title><rect x="261" y="260" width="7" height="15" fill="rgb(205,116,34)"/><text x="264.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.62%)</title><rect x="261" y="276" width="7" height="15" fill="rgb(247,37,24)"/><text x="264.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.62%)</title><rect x="261" y="292" width="7" height="15" fill="rgb(216,218,51)"/><text x="264.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.62%)</title><rect x="261" y="308" width="7" height="15" fill="rgb(229,136,47)"/><text x="264.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.62%)</title><rect x="261" y="324" width="7" height="15" fill="rgb(249,174,54)"/><text x="264.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.62%)</title><rect x="261" y="340" width="7" height="15" fill="rgb(227,43,47)"/><text x="264.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.62%)</title><rect x="261" y="356" width="7" height="15" fill="rgb(217,218,31)"/><text x="264.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.62%)</title><rect x="261" y="372" width="7" height="15" fill="rgb(206,205,38)"/><text x="264.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:9) (1 samples, 0.12%)</title><rect x="267" y="388" width="1" height="15" fill="rgb(212,51,14)"/><text x="270.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="267" y="404" width="1" height="15" fill="rgb(236,132,12)"/><text x="270.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="267" y="420" width="1" height="15" fill="rgb(253,88,2)"/><text x="270.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="267" y="436" width="1" height="15" fill="rgb(231,218,33)"/><text x="270.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="267" y="452" width="1" height="15" fill="rgb(221,131,1)"/><text x="270.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="267" y="468" width="1" height="15" fill="rgb(220,107,35)"/><text x="270.00" y="478.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="267" y="484" width="1" height="15" fill="rgb(222,159,52)"/><text x="270.00" y="494.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.12%)</title><rect x="268" y="484" width="2" height="15" fill="rgb(211,154,10)"/><text x="271.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="268" y="500" width="2" height="15" fill="rgb(237,8,50)"/><text x="271.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="268" y="516" width="2" height="15" fill="rgb(242,109,25)"/><text x="271.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="268" y="532" width="2" height="15" fill="rgb(214,49,54)"/><text x="271.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="268" y="548" width="2" height="15" fill="rgb(235,16,37)"/><text x="271.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="268" y="564" width="2" height="15" fill="rgb(229,68,28)"/><text x="271.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="268" y="580" width="2" height="15" fill="rgb(232,157,9)"/><text x="271.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="268" y="596" width="2" height="15" fill="rgb(249,56,15)"/><text x="271.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.12%)</title><rect x="268" y="612" width="2" height="15" fill="rgb(208,69,21)"/><text x="271.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="268" y="628" width="2" height="15" fill="rgb(240,148,34)"/><text x="271.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="268" y="644" width="2" height="15" fill="rgb(236,163,29)"/><text x="271.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="268" y="660" width="2" height="15" fill="rgb(251,140,32)"/><text x="271.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="268" y="676" width="2" height="15" fill="rgb(222,165,45)"/><text x="271.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="268" y="692" width="2" height="15" fill="rgb(218,217,42)"/><text x="271.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.12%)</title><rect x="268" y="708" width="2" height="15" fill="rgb(221,14,18)"/><text x="271.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="268" y="724" width="2" height="15" fill="rgb(244,200,44)"/><text x="271.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="268" y="740" width="2" height="15" fill="rgb(245,226,42)"/><text x="271.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="268" y="756" width="2" height="15" fill="rgb(217,156,45)"/><text x="271.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="268" y="772" width="2" height="15" fill="rgb(213,214,25)"/><text x="271.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="268" y="788" width="2" height="15" fill="rgb(237,6,39)"/><text x="271.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.12%)</title><rect x="268" y="804" width="2" height="15" fill="rgb(211,165,47)"/><text x="271.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="268" y="820" width="2" height="15" fill="rgb(250,155,13)"/><text x="271.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="268" y="836" width="2" height="15" fill="rgb(249,110,42)"/><text x="271.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="268" y="852" width="2" height="15" fill="rgb(245,97,30)"/><text x="271.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="268" y="868" width="2" height="15" fill="rgb(221,147,11)"/><text x="271.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="268" y="884" width="2" height="15" fill="rgb(217,210,5)"/><text x="271.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.12%)</title><rect x="268" y="900" width="2" height="15" fill="rgb(215,187,41)"/><text x="271.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="268" y="916" width="2" height="15" fill="rgb(221,27,42)"/><text x="271.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="268" y="932" width="2" height="15" fill="rgb(242,101,22)"/><text x="271.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="268" y="948" width="2" height="15" fill="rgb(217,135,24)"/><text x="271.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="268" y="964" width="2" height="15" fill="rgb(207,42,54)"/><text x="271.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="268" y="980" width="2" height="15" fill="rgb(249,11,15)"/><text x="271.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.12%)</title><rect x="268" y="996" width="2" height="15" fill="rgb(250,30,18)"/><text x="271.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="268" y="1012" width="2" height="15" fill="rgb(243,119,0)"/><text x="271.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="268" y="1028" width="2" height="15" fill="rgb(226,37,28)"/><text x="271.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="268" y="1044" width="2" height="15" fill="rgb(232,26,21)"/><text x="271.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="268" y="1060" width="2" height="15" fill="rgb(247,77,31)"/><text x="271.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="268" y="1076" width="2" height="15" fill="rgb(216,23,34)"/><text x="271.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="268" y="1092" width="2" height="15" fill="rgb(222,172,28)"/><text x="271.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="268" y="1108" width="2" height="15" fill="rgb(213,138,40)"/><text x="271.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="268" y="1124" width="2" height="15" fill="rgb(219,10,11)"/><text x="271.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.12%)</title><rect x="268" y="1140" width="2" height="15" fill="rgb(209,206,43)"/><text x="271.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="268" y="1156" width="2" height="15" fill="rgb(219,87,12)"/><text x="271.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="268" y="1172" width="2" height="15" fill="rgb(237,99,31)"/><text x="271.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="268" y="1188" width="2" height="15" fill="rgb(229,94,1)"/><text x="271.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="268" y="1204" width="2" height="15" fill="rgb(250,63,38)"/><text x="271.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="268" y="1220" width="2" height="15" fill="rgb(241,4,49)"/><text x="271.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.12%)</title><rect x="268" y="1236" width="2" height="15" fill="rgb(248,131,16)"/><text x="271.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="268" y="1252" width="2" height="15" fill="rgb(234,167,45)"/><text x="271.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="268" y="1268" width="2" height="15" fill="rgb(236,193,35)"/><text x="271.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="268" y="1284" width="2" height="15" fill="rgb(239,167,9)"/><text x="271.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="268" y="1300" width="2" height="15" fill="rgb(235,136,1)"/><text x="271.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="268" y="1316" width="2" height="15" fill="rgb(244,130,15)"/><text x="271.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.12%)</title><rect x="268" y="1332" width="2" height="15" fill="rgb(213,60,39)"/><text x="271.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="268" y="1348" width="2" height="15" fill="rgb(231,95,11)"/><text x="271.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="268" y="1364" width="2" height="15" fill="rgb(232,196,21)"/><text x="271.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="268" y="1380" width="2" height="15" fill="rgb(205,47,5)"/><text x="271.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="268" y="1396" width="2" height="15" fill="rgb(254,97,1)"/><text x="271.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="268" y="1412" width="2" height="15" fill="rgb(218,118,36)"/><text x="271.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:2) (1 samples, 0.12%)</title><rect x="268" y="1428" width="2" height="15" fill="rgb(236,29,45)"/><text x="271.00" y="1438.50"></text></g><g><title>0x7f873439fe7a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="268" y="1444" width="2" height="15" fill="rgb(233,143,21)"/><text x="271.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:149) (1 samples, 0.12%)</title><rect x="270" y="1028" width="1" height="15" fill="rgb(244,213,29)"/><text x="273.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.12%)</title><rect x="270" y="1044" width="1" height="15" fill="rgb(232,152,10)"/><text x="273.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:657) (1 samples, 0.12%)</title><rect x="270" y="1060" width="1" height="15" fill="rgb(228,157,8)"/><text x="273.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.12%)</title><rect x="270" y="1076" width="1" height="15" fill="rgb(218,223,11)"/><text x="273.00" y="1086.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.12%)</title><rect x="270" y="1092" width="1" height="15" fill="rgb(230,40,13)"/><text x="273.00" y="1102.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.12%)</title><rect x="270" y="1108" width="1" height="15" fill="rgb(218,58,39)"/><text x="273.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py:2217) (1 samples, 0.12%)</title><rect x="270" y="1124" width="1" height="15" fill="rgb(234,156,40)"/><text x="273.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py:2250) (1 samples, 0.12%)</title><rect x="270" y="1140" width="1" height="15" fill="rgb(221,64,30)"/><text x="273.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.37%)</title><rect x="268" y="180" width="5" height="15" fill="rgb(216,215,12)"/><text x="271.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.37%)</title><rect x="268" y="196" width="5" height="15" fill="rgb(243,4,8)"/><text x="271.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.37%)</title><rect x="268" y="212" width="5" height="15" fill="rgb(234,219,14)"/><text x="271.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.37%)</title><rect x="268" y="228" width="5" height="15" fill="rgb(215,165,35)"/><text x="271.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.37%)</title><rect x="268" y="244" width="5" height="15" fill="rgb(228,9,18)"/><text x="271.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.37%)</title><rect x="268" y="260" width="5" height="15" fill="rgb(249,188,19)"/><text x="271.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.37%)</title><rect x="268" y="276" width="5" height="15" fill="rgb(247,104,44)"/><text x="271.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.37%)</title><rect x="268" y="292" width="5" height="15" fill="rgb(247,74,50)"/><text x="271.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.37%)</title><rect x="268" y="308" width="5" height="15" fill="rgb(244,45,10)"/><text x="271.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.37%)</title><rect x="268" y="324" width="5" height="15" fill="rgb(207,218,41)"/><text x="271.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.37%)</title><rect x="268" y="340" width="5" height="15" fill="rgb(221,29,13)"/><text x="271.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.37%)</title><rect x="268" y="356" width="5" height="15" fill="rgb(241,224,42)"/><text x="271.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.37%)</title><rect x="268" y="372" width="5" height="15" fill="rgb(234,50,5)"/><text x="271.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.37%)</title><rect x="268" y="388" width="5" height="15" fill="rgb(232,183,14)"/><text x="271.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.37%)</title><rect x="268" y="404" width="5" height="15" fill="rgb(208,20,32)"/><text x="271.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.37%)</title><rect x="268" y="420" width="5" height="15" fill="rgb(215,136,25)"/><text x="271.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.37%)</title><rect x="268" y="436" width="5" height="15" fill="rgb(244,208,46)"/><text x="271.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.37%)</title><rect x="268" y="452" width="5" height="15" fill="rgb(220,200,25)"/><text x="271.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.37%)</title><rect x="268" y="468" width="5" height="15" fill="rgb(239,178,45)"/><text x="271.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.25%)</title><rect x="270" y="484" width="3" height="15" fill="rgb(221,43,0)"/><text x="273.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.25%)</title><rect x="270" y="500" width="3" height="15" fill="rgb(224,63,47)"/><text x="273.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.25%)</title><rect x="270" y="516" width="3" height="15" fill="rgb(230,18,24)"/><text x="273.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.25%)</title><rect x="270" y="532" width="3" height="15" fill="rgb(226,146,7)"/><text x="273.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.25%)</title><rect x="270" y="548" width="3" height="15" fill="rgb(237,103,11)"/><text x="273.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="270" y="564" width="3" height="15" fill="rgb(214,204,54)"/><text x="273.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.25%)</title><rect x="270" y="580" width="3" height="15" fill="rgb(222,42,52)"/><text x="273.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.25%)</title><rect x="270" y="596" width="3" height="15" fill="rgb(244,135,52)"/><text x="273.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.25%)</title><rect x="270" y="612" width="3" height="15" fill="rgb(236,158,26)"/><text x="273.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.25%)</title><rect x="270" y="628" width="3" height="15" fill="rgb(225,62,45)"/><text x="273.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.25%)</title><rect x="270" y="644" width="3" height="15" fill="rgb(216,78,28)"/><text x="273.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="270" y="660" width="3" height="15" fill="rgb(239,60,45)"/><text x="273.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.25%)</title><rect x="270" y="676" width="3" height="15" fill="rgb(228,21,26)"/><text x="273.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.25%)</title><rect x="270" y="692" width="3" height="15" fill="rgb(239,44,21)"/><text x="273.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.25%)</title><rect x="270" y="708" width="3" height="15" fill="rgb(241,216,54)"/><text x="273.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.25%)</title><rect x="270" y="724" width="3" height="15" fill="rgb(230,139,48)"/><text x="273.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.25%)</title><rect x="270" y="740" width="3" height="15" fill="rgb(252,51,29)"/><text x="273.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="270" y="756" width="3" height="15" fill="rgb(248,101,45)"/><text x="273.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.25%)</title><rect x="270" y="772" width="3" height="15" fill="rgb(236,61,25)"/><text x="273.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.25%)</title><rect x="270" y="788" width="3" height="15" fill="rgb(220,109,5)"/><text x="273.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="270" y="804" width="3" height="15" fill="rgb(244,189,32)"/><text x="273.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.25%)</title><rect x="270" y="820" width="3" height="15" fill="rgb(211,113,10)"/><text x="273.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.25%)</title><rect x="270" y="836" width="3" height="15" fill="rgb(218,94,28)"/><text x="273.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.25%)</title><rect x="270" y="852" width="3" height="15" fill="rgb(212,220,17)"/><text x="273.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.25%)</title><rect x="270" y="868" width="3" height="15" fill="rgb(232,73,29)"/><text x="273.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="270" y="884" width="3" height="15" fill="rgb(207,169,10)"/><text x="273.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.25%)</title><rect x="270" y="900" width="3" height="15" fill="rgb(252,209,47)"/><text x="273.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.25%)</title><rect x="270" y="916" width="3" height="15" fill="rgb(234,28,48)"/><text x="273.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="270" y="932" width="3" height="15" fill="rgb(246,18,14)"/><text x="273.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.25%)</title><rect x="270" y="948" width="3" height="15" fill="rgb(246,4,30)"/><text x="273.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.25%)</title><rect x="270" y="964" width="3" height="15" fill="rgb(209,99,36)"/><text x="273.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.25%)</title><rect x="270" y="980" width="3" height="15" fill="rgb(251,20,18)"/><text x="273.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.25%)</title><rect x="270" y="996" width="3" height="15" fill="rgb(249,76,6)"/><text x="273.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="270" y="1012" width="3" height="15" fill="rgb(242,216,20)"/><text x="273.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:922) (1 samples, 0.12%)</title><rect x="271" y="1028" width="2" height="15" fill="rgb(233,119,6)"/><text x="274.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.12%)</title><rect x="271" y="1044" width="2" height="15" fill="rgb(236,92,37)"/><text x="274.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.12%)</title><rect x="271" y="1060" width="2" height="15" fill="rgb(216,60,54)"/><text x="274.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:63) (1 samples, 0.12%)</title><rect x="271" y="1076" width="2" height="15" fill="rgb(221,229,49)"/><text x="274.00" y="1086.50"></text></g><g><title>0x7f870e2ac6c1 (?) (1 samples, 0.12%)</title><rect x="273" y="468" width="1" height="15" fill="rgb(248,117,40)"/><text x="276.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="273" y="484" width="1" height="15" fill="rgb(207,18,37)"/><text x="276.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="273" y="500" width="1" height="15" fill="rgb(217,82,43)"/><text x="276.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="273" y="516" width="1" height="15" fill="rgb(252,73,10)"/><text x="276.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.12%)</title><rect x="273" y="532" width="1" height="15" fill="rgb(241,36,8)"/><text x="276.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="273" y="548" width="1" height="15" fill="rgb(215,211,25)"/><text x="276.00" y="558.50"></text></g><g><title>0x7f870e04d1cc (?) (1 samples, 0.12%)</title><rect x="273" y="564" width="1" height="15" fill="rgb(250,144,14)"/><text x="276.00" y="574.50"></text></g><g><title>0x7f870e04f04f (?) (1 samples, 0.12%)</title><rect x="273" y="580" width="1" height="15" fill="rgb(210,3,15)"/><text x="276.00" y="590.50"></text></g><g><title>__call__ (enum.py:311) (1 samples, 0.12%)</title><rect x="273" y="596" width="1" height="15" fill="rgb(234,39,48)"/><text x="276.00" y="606.50"></text></g><g><title>_create_ (enum.py:423) (1 samples, 0.12%)</title><rect x="273" y="612" width="1" height="15" fill="rgb(225,160,44)"/><text x="276.00" y="622.50"></text></g><g><title>__new__ (enum.py:169) (1 samples, 0.12%)</title><rect x="273" y="628" width="1" height="15" fill="rgb(250,73,20)"/><text x="276.00" y="638.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:4) (5 samples, 0.62%)</title><rect x="268" y="148" width="7" height="15" fill="rgb(212,216,32)"/><text x="271.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.62%)</title><rect x="268" y="164" width="7" height="15" fill="rgb(217,128,45)"/><text x="271.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.25%)</title><rect x="273" y="180" width="2" height="15" fill="rgb(216,160,26)"/><text x="276.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.25%)</title><rect x="273" y="196" width="2" height="15" fill="rgb(210,161,11)"/><text x="276.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.25%)</title><rect x="273" y="212" width="2" height="15" fill="rgb(239,57,2)"/><text x="276.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="273" y="228" width="2" height="15" fill="rgb(254,22,50)"/><text x="276.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:12) (2 samples, 0.25%)</title><rect x="273" y="244" width="2" height="15" fill="rgb(230,33,29)"/><text x="276.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.25%)</title><rect x="273" y="260" width="2" height="15" fill="rgb(249,131,53)"/><text x="276.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.25%)</title><rect x="273" y="276" width="2" height="15" fill="rgb(212,24,39)"/><text x="276.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.25%)</title><rect x="273" y="292" width="2" height="15" fill="rgb(228,5,20)"/><text x="276.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.25%)</title><rect x="273" y="308" width="2" height="15" fill="rgb(238,92,8)"/><text x="276.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="273" y="324" width="2" height="15" fill="rgb(230,199,37)"/><text x="276.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py:22) (2 samples, 0.25%)</title><rect x="273" y="340" width="2" height="15" fill="rgb(240,206,40)"/><text x="276.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.25%)</title><rect x="273" y="356" width="2" height="15" fill="rgb(250,179,54)"/><text x="276.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="273" y="372" width="2" height="15" fill="rgb(232,30,40)"/><text x="276.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.25%)</title><rect x="273" y="388" width="2" height="15" fill="rgb(251,183,22)"/><text x="276.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.25%)</title><rect x="273" y="404" width="2" height="15" fill="rgb(227,138,4)"/><text x="276.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.25%)</title><rect x="273" y="420" width="2" height="15" fill="rgb(236,49,48)"/><text x="276.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.25%)</title><rect x="273" y="436" width="2" height="15" fill="rgb(238,200,13)"/><text x="276.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="273" y="452" width="2" height="15" fill="rgb(219,88,4)"/><text x="276.00" y="462.50"></text></g><g><title>0x7f870e2ac6c1 (sklearn/utils/arrayfuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="274" y="468" width="1" height="15" fill="rgb(248,184,53)"/><text x="277.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="274" y="484" width="1" height="15" fill="rgb(248,117,13)"/><text x="277.00" y="494.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:152) (1 samples, 0.12%)</title><rect x="274" y="500" width="1" height="15" fill="rgb(232,149,51)"/><text x="277.00" y="510.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;:106) (1 samples, 0.12%)</title><rect x="274" y="516" width="1" height="15" fill="rgb(246,105,46)"/><text x="277.00" y="526.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.12%)</title><rect x="275" y="484" width="2" height="15" fill="rgb(211,18,22)"/><text x="278.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="275" y="500" width="2" height="15" fill="rgb(231,101,10)"/><text x="278.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="275" y="516" width="2" height="15" fill="rgb(231,127,14)"/><text x="278.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="275" y="532" width="2" height="15" fill="rgb(231,144,54)"/><text x="278.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="275" y="548" width="2" height="15" fill="rgb(208,118,50)"/><text x="278.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="275" y="564" width="2" height="15" fill="rgb(211,116,48)"/><text x="278.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.12%)</title><rect x="275" y="580" width="2" height="15" fill="rgb(248,92,35)"/><text x="278.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="275" y="596" width="2" height="15" fill="rgb(238,10,5)"/><text x="278.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="275" y="612" width="2" height="15" fill="rgb(208,218,1)"/><text x="278.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="275" y="628" width="2" height="15" fill="rgb(217,197,15)"/><text x="278.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="275" y="644" width="2" height="15" fill="rgb(206,36,0)"/><text x="278.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="275" y="660" width="2" height="15" fill="rgb(226,120,51)"/><text x="278.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.12%)</title><rect x="275" y="676" width="2" height="15" fill="rgb(205,125,35)"/><text x="278.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="275" y="692" width="2" height="15" fill="rgb(233,34,12)"/><text x="278.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="275" y="708" width="2" height="15" fill="rgb(252,173,39)"/><text x="278.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="275" y="724" width="2" height="15" fill="rgb(206,216,16)"/><text x="278.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="275" y="740" width="2" height="15" fill="rgb(213,170,26)"/><text x="278.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="275" y="756" width="2" height="15" fill="rgb(219,22,33)"/><text x="278.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.12%)</title><rect x="275" y="772" width="2" height="15" fill="rgb(245,6,36)"/><text x="278.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="275" y="788" width="2" height="15" fill="rgb(241,92,36)"/><text x="278.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="275" y="804" width="2" height="15" fill="rgb(216,89,26)"/><text x="278.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="275" y="820" width="2" height="15" fill="rgb(207,56,42)"/><text x="278.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="275" y="836" width="2" height="15" fill="rgb(218,17,4)"/><text x="278.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="275" y="852" width="2" height="15" fill="rgb(219,135,13)"/><text x="278.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="275" y="868" width="2" height="15" fill="rgb(230,124,6)"/><text x="278.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="275" y="884" width="2" height="15" fill="rgb(254,213,16)"/><text x="278.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.12%)</title><rect x="275" y="900" width="2" height="15" fill="rgb(224,169,9)"/><text x="278.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="275" y="916" width="2" height="15" fill="rgb(249,119,50)"/><text x="278.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="275" y="932" width="2" height="15" fill="rgb(220,205,25)"/><text x="278.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="275" y="948" width="2" height="15" fill="rgb(209,225,54)"/><text x="278.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="275" y="964" width="2" height="15" fill="rgb(221,80,8)"/><text x="278.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="275" y="980" width="2" height="15" fill="rgb(228,85,28)"/><text x="278.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.12%)</title><rect x="275" y="996" width="2" height="15" fill="rgb(254,215,15)"/><text x="278.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="275" y="1012" width="2" height="15" fill="rgb(248,19,7)"/><text x="278.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="275" y="1028" width="2" height="15" fill="rgb(227,227,5)"/><text x="278.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="275" y="1044" width="2" height="15" fill="rgb(228,74,40)"/><text x="278.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="275" y="1060" width="2" height="15" fill="rgb(230,183,39)"/><text x="278.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="275" y="1076" width="2" height="15" fill="rgb(226,201,0)"/><text x="278.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:32) (1 samples, 0.12%)</title><rect x="275" y="1092" width="2" height="15" fill="rgb(252,51,43)"/><text x="278.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="275" y="1108" width="2" height="15" fill="rgb(235,94,30)"/><text x="278.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="275" y="1124" width="2" height="15" fill="rgb(241,171,6)"/><text x="278.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="275" y="1140" width="2" height="15" fill="rgb(223,122,1)"/><text x="278.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="275" y="1156" width="2" height="15" fill="rgb(251,174,21)"/><text x="278.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="275" y="1172" width="2" height="15" fill="rgb(227,113,24)"/><text x="278.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/dh.py:107) (1 samples, 0.12%)</title><rect x="275" y="1188" width="2" height="15" fill="rgb(233,190,53)"/><text x="278.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.12%)</title><rect x="275" y="1204" width="2" height="15" fill="rgb(237,87,18)"/><text x="278.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py:106) (1 samples, 0.12%)</title><rect x="275" y="1220" width="2" height="15" fill="rgb(243,141,20)"/><text x="278.00" y="1230.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.12%)</title><rect x="275" y="1236" width="2" height="15" fill="rgb(206,99,45)"/><text x="278.00" y="1246.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.12%)</title><rect x="275" y="1252" width="2" height="15" fill="rgb(254,26,41)"/><text x="278.00" y="1262.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.12%)</title><rect x="275" y="1268" width="2" height="15" fill="rgb(226,57,25)"/><text x="278.00" y="1278.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.12%)</title><rect x="275" y="1284" width="2" height="15" fill="rgb(207,89,43)"/><text x="278.00" y="1294.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.25%)</title><rect x="275" y="244" width="3" height="15" fill="rgb(228,20,21)"/><text x="278.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.25%)</title><rect x="275" y="260" width="3" height="15" fill="rgb(235,148,25)"/><text x="278.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.25%)</title><rect x="275" y="276" width="3" height="15" fill="rgb(229,109,14)"/><text x="278.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.25%)</title><rect x="275" y="292" width="3" height="15" fill="rgb(251,146,18)"/><text x="278.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.25%)</title><rect x="275" y="308" width="3" height="15" fill="rgb(242,123,12)"/><text x="278.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="275" y="324" width="3" height="15" fill="rgb(243,33,11)"/><text x="278.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.25%)</title><rect x="275" y="340" width="3" height="15" fill="rgb(230,47,42)"/><text x="278.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.25%)</title><rect x="275" y="356" width="3" height="15" fill="rgb(229,79,13)"/><text x="278.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.25%)</title><rect x="275" y="372" width="3" height="15" fill="rgb(241,133,33)"/><text x="278.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="275" y="388" width="3" height="15" fill="rgb(215,227,43)"/><text x="278.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.25%)</title><rect x="275" y="404" width="3" height="15" fill="rgb(206,11,17)"/><text x="278.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.25%)</title><rect x="275" y="420" width="3" height="15" fill="rgb(244,212,26)"/><text x="278.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.25%)</title><rect x="275" y="436" width="3" height="15" fill="rgb(248,78,3)"/><text x="278.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.25%)</title><rect x="275" y="452" width="3" height="15" fill="rgb(242,17,4)"/><text x="278.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="275" y="468" width="3" height="15" fill="rgb(248,197,33)"/><text x="278.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.12%)</title><rect x="277" y="484" width="1" height="15" fill="rgb(213,206,33)"/><text x="280.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="277" y="500" width="1" height="15" fill="rgb(223,166,7)"/><text x="280.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="277" y="516" width="1" height="15" fill="rgb(225,85,49)"/><text x="280.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="277" y="532" width="1" height="15" fill="rgb(218,164,24)"/><text x="280.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="277" y="548" width="1" height="15" fill="rgb(230,22,4)"/><text x="280.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="277" y="564" width="1" height="15" fill="rgb(243,35,30)"/><text x="280.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.12%)</title><rect x="277" y="580" width="1" height="15" fill="rgb(224,110,34)"/><text x="280.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="277" y="596" width="1" height="15" fill="rgb(205,147,33)"/><text x="280.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="277" y="612" width="1" height="15" fill="rgb(222,195,2)"/><text x="280.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="277" y="628" width="1" height="15" fill="rgb(221,147,53)"/><text x="280.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="277" y="644" width="1" height="15" fill="rgb(254,210,38)"/><text x="280.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="277" y="660" width="1" height="15" fill="rgb(229,195,3)"/><text x="280.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="277" y="676" width="1" height="15" fill="rgb(243,158,11)"/><text x="280.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="277" y="692" width="1" height="15" fill="rgb(243,181,22)"/><text x="280.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="277" y="708" width="1" height="15" fill="rgb(218,3,39)"/><text x="280.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.12%)</title><rect x="277" y="724" width="1" height="15" fill="rgb(248,115,33)"/><text x="280.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="277" y="740" width="1" height="15" fill="rgb(212,103,37)"/><text x="280.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="277" y="756" width="1" height="15" fill="rgb(219,48,54)"/><text x="280.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="277" y="772" width="1" height="15" fill="rgb(253,106,29)"/><text x="280.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="277" y="788" width="1" height="15" fill="rgb(246,100,0)"/><text x="280.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="277" y="804" width="1" height="15" fill="rgb(241,49,33)"/><text x="280.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.12%)</title><rect x="277" y="820" width="1" height="15" fill="rgb(244,205,31)"/><text x="280.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="277" y="836" width="1" height="15" fill="rgb(209,204,4)"/><text x="280.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="277" y="852" width="1" height="15" fill="rgb(250,11,28)"/><text x="280.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="277" y="868" width="1" height="15" fill="rgb(234,47,49)"/><text x="280.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="277" y="884" width="1" height="15" fill="rgb(211,183,7)"/><text x="280.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="277" y="900" width="1" height="15" fill="rgb(242,74,18)"/><text x="280.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.12%)</title><rect x="277" y="916" width="1" height="15" fill="rgb(247,19,27)"/><text x="280.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="277" y="932" width="1" height="15" fill="rgb(239,163,14)"/><text x="280.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="277" y="948" width="1" height="15" fill="rgb(237,74,6)"/><text x="280.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="277" y="964" width="1" height="15" fill="rgb(239,130,37)"/><text x="280.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="277" y="980" width="1" height="15" fill="rgb(225,49,9)"/><text x="280.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="277" y="996" width="1" height="15" fill="rgb(235,30,40)"/><text x="280.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="277" y="1012" width="1" height="15" fill="rgb(253,25,28)"/><text x="280.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="277" y="1028" width="1" height="15" fill="rgb(250,147,48)"/><text x="280.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="277" y="1044" width="1" height="15" fill="rgb(213,146,52)"/><text x="280.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:12) (1 samples, 0.12%)</title><rect x="277" y="1060" width="1" height="15" fill="rgb(236,38,0)"/><text x="280.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="277" y="1076" width="1" height="15" fill="rgb(244,97,11)"/><text x="280.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="277" y="1092" width="1" height="15" fill="rgb(215,205,26)"/><text x="280.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="277" y="1108" width="1" height="15" fill="rgb(218,65,46)"/><text x="280.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="277" y="1124" width="1" height="15" fill="rgb(253,148,1)"/><text x="280.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="277" y="1140" width="1" height="15" fill="rgb(232,147,21)"/><text x="280.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py:7) (1 samples, 0.12%)</title><rect x="277" y="1156" width="1" height="15" fill="rgb(253,214,37)"/><text x="280.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="277" y="1172" width="1" height="15" fill="rgb(222,76,36)"/><text x="280.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="277" y="1188" width="1" height="15" fill="rgb(208,130,25)"/><text x="280.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="277" y="1204" width="1" height="15" fill="rgb(250,156,28)"/><text x="280.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="277" y="1220" width="1" height="15" fill="rgb(234,114,8)"/><text x="280.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="277" y="1236" width="1" height="15" fill="rgb(241,127,2)"/><text x="280.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="277" y="1252" width="1" height="15" fill="rgb(230,46,44)"/><text x="280.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="277" y="1268" width="1" height="15" fill="rgb(225,154,4)"/><text x="280.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pygit_helper.py:13) (1 samples, 0.12%)</title><rect x="277" y="1284" width="1" height="15" fill="rgb(234,222,43)"/><text x="280.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="277" y="1300" width="1" height="15" fill="rgb(222,228,31)"/><text x="280.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="277" y="1316" width="1" height="15" fill="rgb(244,133,21)"/><text x="280.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="277" y="1332" width="1" height="15" fill="rgb(220,52,54)"/><text x="280.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="277" y="1348" width="1" height="15" fill="rgb(232,153,22)"/><text x="280.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="277" y="1364" width="1" height="15" fill="rgb(220,110,50)"/><text x="280.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="277" y="1380" width="1" height="15" fill="rgb(244,101,49)"/><text x="280.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="277" y="1396" width="1" height="15" fill="rgb(241,147,47)"/><text x="280.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="277" y="1412" width="1" height="15" fill="rgb(231,219,7)"/><text x="280.00" y="1422.50"></text></g><g><title>&lt;module&gt; (xml/sax/__init__.py:22) (1 samples, 0.12%)</title><rect x="277" y="1428" width="1" height="15" fill="rgb(233,218,47)"/><text x="280.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="277" y="1444" width="1" height="15" fill="rgb(237,169,1)"/><text x="280.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="277" y="1460" width="1" height="15" fill="rgb(230,57,21)"/><text x="280.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="277" y="1476" width="1" height="15" fill="rgb(229,65,17)"/><text x="280.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="277" y="1492" width="1" height="15" fill="rgb(228,144,7)"/><text x="280.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="277" y="1508" width="1" height="15" fill="rgb(206,134,48)"/><text x="280.00" y="1518.50"></text></g><g><title>&lt;module&gt; (xml/sax/xmlreader.py:4) (1 samples, 0.12%)</title><rect x="277" y="1524" width="1" height="15" fill="rgb(242,125,5)"/><text x="280.00" y="1534.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;:202) (1 samples, 0.12%)</title><rect x="277" y="1540" width="1" height="15" fill="rgb(248,154,37)"/><text x="280.00" y="1550.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;:96) (1 samples, 0.12%)</title><rect x="277" y="1556" width="1" height="15" fill="rgb(251,18,43)"/><text x="280.00" y="1566.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.12%)</title><rect x="278" y="340" width="2" height="15" fill="rgb(211,216,33)"/><text x="281.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="278" y="356" width="2" height="15" fill="rgb(245,87,7)"/><text x="281.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="278" y="372" width="2" height="15" fill="rgb(212,127,9)"/><text x="281.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="278" y="388" width="2" height="15" fill="rgb(217,162,22)"/><text x="281.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="278" y="404" width="2" height="15" fill="rgb(241,129,34)"/><text x="281.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="278" y="420" width="2" height="15" fill="rgb(247,167,43)"/><text x="281.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:6) (1 samples, 0.12%)</title><rect x="278" y="436" width="2" height="15" fill="rgb(223,170,16)"/><text x="281.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="278" y="452" width="2" height="15" fill="rgb(214,24,37)"/><text x="281.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="278" y="468" width="2" height="15" fill="rgb(240,180,32)"/><text x="281.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="278" y="484" width="2" height="15" fill="rgb(229,208,6)"/><text x="281.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="278" y="500" width="2" height="15" fill="rgb(234,122,31)"/><text x="281.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="278" y="516" width="2" height="15" fill="rgb(218,221,46)"/><text x="281.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py:23) (1 samples, 0.12%)</title><rect x="278" y="532" width="2" height="15" fill="rgb(241,206,46)"/><text x="281.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="278" y="548" width="2" height="15" fill="rgb(227,200,20)"/><text x="281.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="278" y="564" width="2" height="15" fill="rgb(237,49,3)"/><text x="281.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="278" y="580" width="2" height="15" fill="rgb(206,124,36)"/><text x="281.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="278" y="596" width="2" height="15" fill="rgb(213,117,42)"/><text x="281.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="278" y="612" width="2" height="15" fill="rgb(219,131,32)"/><text x="281.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py:102) (1 samples, 0.12%)</title><rect x="278" y="628" width="2" height="15" fill="rgb(230,136,45)"/><text x="281.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="278" y="644" width="2" height="15" fill="rgb(240,76,54)"/><text x="281.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="278" y="660" width="2" height="15" fill="rgb(233,130,0)"/><text x="281.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="278" y="676" width="2" height="15" fill="rgb(217,216,28)"/><text x="281.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="278" y="692" width="2" height="15" fill="rgb(226,79,16)"/><text x="281.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="278" y="708" width="2" height="15" fill="rgb(210,179,42)"/><text x="281.00" y="718.50"></text></g><g><title>&lt;module&gt; (urllib/error.py:14) (1 samples, 0.12%)</title><rect x="278" y="724" width="2" height="15" fill="rgb(236,91,19)"/><text x="281.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="278" y="740" width="2" height="15" fill="rgb(213,225,41)"/><text x="281.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.12%)</title><rect x="278" y="756" width="2" height="15" fill="rgb(233,119,3)"/><text x="281.00" y="766.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:898) (1 samples, 0.12%)</title><rect x="278" y="772" width="2" height="15" fill="rgb(218,190,17)"/><text x="281.00" y="782.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:857) (1 samples, 0.12%)</title><rect x="278" y="788" width="2" height="15" fill="rgb(213,150,51)"/><text x="281.00" y="798.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.12%)</title><rect x="280" y="436" width="1" height="15" fill="rgb(253,44,44)"/><text x="283.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="452" width="1" height="15" fill="rgb(236,2,38)"/><text x="283.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="468" width="1" height="15" fill="rgb(251,22,43)"/><text x="283.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="484" width="1" height="15" fill="rgb(207,85,11)"/><text x="283.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="280" y="500" width="1" height="15" fill="rgb(238,10,44)"/><text x="283.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="516" width="1" height="15" fill="rgb(246,71,14)"/><text x="283.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.12%)</title><rect x="280" y="532" width="1" height="15" fill="rgb(235,79,44)"/><text x="283.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="548" width="1" height="15" fill="rgb(248,92,43)"/><text x="283.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="564" width="1" height="15" fill="rgb(240,38,17)"/><text x="283.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="580" width="1" height="15" fill="rgb(210,145,10)"/><text x="283.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="280" y="596" width="1" height="15" fill="rgb(217,0,48)"/><text x="283.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="612" width="1" height="15" fill="rgb(235,103,17)"/><text x="283.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.12%)</title><rect x="280" y="628" width="1" height="15" fill="rgb(237,124,1)"/><text x="283.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="644" width="1" height="15" fill="rgb(248,2,28)"/><text x="283.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="660" width="1" height="15" fill="rgb(233,127,35)"/><text x="283.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="676" width="1" height="15" fill="rgb(237,76,34)"/><text x="283.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="280" y="692" width="1" height="15" fill="rgb(209,108,43)"/><text x="283.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="708" width="1" height="15" fill="rgb(212,69,4)"/><text x="283.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.12%)</title><rect x="280" y="724" width="1" height="15" fill="rgb(210,4,16)"/><text x="283.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="740" width="1" height="15" fill="rgb(205,108,48)"/><text x="283.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="756" width="1" height="15" fill="rgb(226,203,38)"/><text x="283.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="772" width="1" height="15" fill="rgb(247,2,35)"/><text x="283.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="280" y="788" width="1" height="15" fill="rgb(205,146,7)"/><text x="283.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="804" width="1" height="15" fill="rgb(205,225,13)"/><text x="283.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.12%)</title><rect x="280" y="820" width="1" height="15" fill="rgb(235,42,3)"/><text x="283.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="836" width="1" height="15" fill="rgb(250,34,40)"/><text x="283.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="852" width="1" height="15" fill="rgb(242,151,21)"/><text x="283.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="868" width="1" height="15" fill="rgb(217,214,27)"/><text x="283.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="280" y="884" width="1" height="15" fill="rgb(215,27,51)"/><text x="283.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="900" width="1" height="15" fill="rgb(238,139,40)"/><text x="283.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.12%)</title><rect x="280" y="916" width="1" height="15" fill="rgb(254,203,5)"/><text x="283.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="932" width="1" height="15" fill="rgb(236,215,2)"/><text x="283.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="948" width="1" height="15" fill="rgb(219,160,22)"/><text x="283.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="964" width="1" height="15" fill="rgb(246,81,52)"/><text x="283.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="280" y="980" width="1" height="15" fill="rgb(235,225,9)"/><text x="283.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="996" width="1" height="15" fill="rgb(237,75,34)"/><text x="283.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:305) (1 samples, 0.12%)</title><rect x="280" y="1012" width="1" height="15" fill="rgb(233,9,18)"/><text x="283.00" y="1022.50"></text></g><g><title>DataFrame (pandas/core/frame.py:6661) (1 samples, 0.12%)</title><rect x="280" y="1028" width="1" height="15" fill="rgb(213,193,30)"/><text x="283.00" y="1038.50"></text></g><g><title>dedent (textwrap.py:438) (1 samples, 0.12%)</title><rect x="280" y="1044" width="1" height="15" fill="rgb(214,27,52)"/><text x="283.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.12%)</title><rect x="281" y="1108" width="2" height="15" fill="rgb(235,148,8)"/><text x="284.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="281" y="1124" width="2" height="15" fill="rgb(245,153,42)"/><text x="284.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="281" y="1140" width="2" height="15" fill="rgb(252,81,13)"/><text x="284.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="281" y="1156" width="2" height="15" fill="rgb(239,199,37)"/><text x="284.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="281" y="1172" width="2" height="15" fill="rgb(251,70,4)"/><text x="284.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="281" y="1188" width="2" height="15" fill="rgb(243,179,27)"/><text x="284.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.12%)</title><rect x="281" y="1204" width="2" height="15" fill="rgb(234,70,5)"/><text x="284.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="281" y="1220" width="2" height="15" fill="rgb(247,170,49)"/><text x="284.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="281" y="1236" width="2" height="15" fill="rgb(209,14,50)"/><text x="284.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="281" y="1252" width="2" height="15" fill="rgb(219,193,33)"/><text x="284.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="281" y="1268" width="2" height="15" fill="rgb(222,92,6)"/><text x="284.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="281" y="1284" width="2" height="15" fill="rgb(221,211,25)"/><text x="284.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.12%)</title><rect x="281" y="1300" width="2" height="15" fill="rgb(252,36,38)"/><text x="284.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.12%)</title><rect x="281" y="1316" width="2" height="15" fill="rgb(252,169,37)"/><text x="284.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.12%)</title><rect x="281" y="1332" width="2" height="15" fill="rgb(228,118,39)"/><text x="284.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.12%)</title><rect x="281" y="1348" width="2" height="15" fill="rgb(243,183,1)"/><text x="284.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.12%)</title><rect x="281" y="1364" width="2" height="15" fill="rgb(249,114,16)"/><text x="284.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.12%)</title><rect x="281" y="1380" width="2" height="15" fill="rgb(225,135,4)"/><text x="284.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.12%)</title><rect x="281" y="1396" width="2" height="15" fill="rgb(250,227,49)"/><text x="284.00" y="1406.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.37%)</title><rect x="281" y="676" width="5" height="15" fill="rgb(210,88,18)"/><text x="284.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.37%)</title><rect x="281" y="692" width="5" height="15" fill="rgb(215,18,6)"/><text x="284.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.37%)</title><rect x="281" y="708" width="5" height="15" fill="rgb(217,67,47)"/><text x="284.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.37%)</title><rect x="281" y="724" width="5" height="15" fill="rgb(221,12,26)"/><text x="284.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.37%)</title><rect x="281" y="740" width="5" height="15" fill="rgb(248,183,37)"/><text x="284.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.37%)</title><rect x="281" y="756" width="5" height="15" fill="rgb(240,104,8)"/><text x="284.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.37%)</title><rect x="281" y="772" width="5" height="15" fill="rgb(218,147,35)"/><text x="284.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.37%)</title><rect x="281" y="788" width="5" height="15" fill="rgb(225,107,41)"/><text x="284.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.37%)</title><rect x="281" y="804" width="5" height="15" fill="rgb(207,219,20)"/><text x="284.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.37%)</title><rect x="281" y="820" width="5" height="15" fill="rgb(221,35,35)"/><text x="284.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.37%)</title><rect x="281" y="836" width="5" height="15" fill="rgb(244,103,11)"/><text x="284.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.37%)</title><rect x="281" y="852" width="5" height="15" fill="rgb(248,65,42)"/><text x="284.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.37%)</title><rect x="281" y="868" width="5" height="15" fill="rgb(206,80,5)"/><text x="284.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.37%)</title><rect x="281" y="884" width="5" height="15" fill="rgb(252,191,39)"/><text x="284.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.37%)</title><rect x="281" y="900" width="5" height="15" fill="rgb(240,13,12)"/><text x="284.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.37%)</title><rect x="281" y="916" width="5" height="15" fill="rgb(222,105,28)"/><text x="284.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.37%)</title><rect x="281" y="932" width="5" height="15" fill="rgb(206,43,16)"/><text x="284.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.37%)</title><rect x="281" y="948" width="5" height="15" fill="rgb(210,41,27)"/><text x="284.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.37%)</title><rect x="281" y="964" width="5" height="15" fill="rgb(225,166,11)"/><text x="284.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.37%)</title><rect x="281" y="980" width="5" height="15" fill="rgb(209,10,15)"/><text x="284.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.37%)</title><rect x="281" y="996" width="5" height="15" fill="rgb(220,222,50)"/><text x="284.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.37%)</title><rect x="281" y="1012" width="5" height="15" fill="rgb(229,6,13)"/><text x="284.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.37%)</title><rect x="281" y="1028" width="5" height="15" fill="rgb(206,81,2)"/><text x="284.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.37%)</title><rect x="281" y="1044" width="5" height="15" fill="rgb(211,57,2)"/><text x="284.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.37%)</title><rect x="281" y="1060" width="5" height="15" fill="rgb(214,50,5)"/><text x="284.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.37%)</title><rect x="281" y="1076" width="5" height="15" fill="rgb(252,187,34)"/><text x="284.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.37%)</title><rect x="281" y="1092" width="5" height="15" fill="rgb(234,173,17)"/><text x="284.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.25%)</title><rect x="283" y="1108" width="3" height="15" fill="rgb(222,99,21)"/><text x="286.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.25%)</title><rect x="283" y="1124" width="3" height="15" fill="rgb(207,194,41)"/><text x="286.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="283" y="1140" width="3" height="15" fill="rgb(226,72,16)"/><text x="286.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.25%)</title><rect x="283" y="1156" width="3" height="15" fill="rgb(252,101,9)"/><text x="286.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.25%)</title><rect x="283" y="1172" width="3" height="15" fill="rgb(233,29,17)"/><text x="286.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.25%)</title><rect x="283" y="1188" width="3" height="15" fill="rgb(252,190,13)"/><text x="286.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.25%)</title><rect x="283" y="1204" width="3" height="15" fill="rgb(237,227,7)"/><text x="286.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="283" y="1220" width="3" height="15" fill="rgb(209,181,4)"/><text x="286.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.25%)</title><rect x="283" y="1236" width="3" height="15" fill="rgb(252,186,38)"/><text x="286.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.25%)</title><rect x="283" y="1252" width="3" height="15" fill="rgb(223,64,24)"/><text x="286.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="283" y="1268" width="3" height="15" fill="rgb(246,188,50)"/><text x="286.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.25%)</title><rect x="283" y="1284" width="3" height="15" fill="rgb(250,66,23)"/><text x="286.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.25%)</title><rect x="283" y="1300" width="3" height="15" fill="rgb(212,225,41)"/><text x="286.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.25%)</title><rect x="283" y="1316" width="3" height="15" fill="rgb(228,221,1)"/><text x="286.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.25%)</title><rect x="283" y="1332" width="3" height="15" fill="rgb(226,139,35)"/><text x="286.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="283" y="1348" width="3" height="15" fill="rgb(239,196,41)"/><text x="286.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.25%)</title><rect x="283" y="1364" width="3" height="15" fill="rgb(250,37,25)"/><text x="286.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.25%)</title><rect x="283" y="1380" width="3" height="15" fill="rgb(212,213,13)"/><text x="286.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.25%)</title><rect x="283" y="1396" width="3" height="15" fill="rgb(221,228,10)"/><text x="286.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.25%)</title><rect x="283" y="1412" width="3" height="15" fill="rgb(207,6,10)"/><text x="286.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.25%)</title><rect x="283" y="1428" width="3" height="15" fill="rgb(241,223,6)"/><text x="286.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.25%)</title><rect x="283" y="1444" width="3" height="15" fill="rgb(226,136,50)"/><text x="286.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.25%)</title><rect x="283" y="1460" width="3" height="15" fill="rgb(224,28,6)"/><text x="286.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.25%)</title><rect x="283" y="1476" width="3" height="15" fill="rgb(254,157,19)"/><text x="286.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.25%)</title><rect x="283" y="1492" width="3" height="15" fill="rgb(207,132,15)"/><text x="286.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.25%)</title><rect x="283" y="1508" width="3" height="15" fill="rgb(205,120,2)"/><text x="286.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.25%)</title><rect x="283" y="1524" width="3" height="15" fill="rgb(241,148,52)"/><text x="286.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.25%)</title><rect x="283" y="1540" width="3" height="15" fill="rgb(228,170,33)"/><text x="286.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.25%)</title><rect x="283" y="1556" width="3" height="15" fill="rgb(234,89,7)"/><text x="286.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (2 samples, 0.25%)</title><rect x="283" y="1572" width="3" height="15" fill="rgb(212,182,54)"/><text x="286.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (2 samples, 0.25%)</title><rect x="283" y="1588" width="3" height="15" fill="rgb(250,118,1)"/><text x="286.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:199) (2 samples, 0.25%)</title><rect x="283" y="1604" width="3" height="15" fill="rgb(220,53,9)"/><text x="286.00" y="1614.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.12%)</title><rect x="284" y="1620" width="2" height="15" fill="rgb(243,49,53)"/><text x="287.00" y="1630.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:4) (19 samples, 2.37%)</title><rect x="259" y="52" width="28" height="15" fill="rgb(212,227,50)"/><text x="262.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (19 samples, 2.37%)</title><rect x="259" y="68" width="28" height="15" fill="rgb(220,99,21)"/><text x="262.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (19 samples, 2.37%)</title><rect x="259" y="84" width="28" height="15" fill="rgb(244,87,21)"/><text x="262.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (19 samples, 2.37%)</title><rect x="259" y="100" width="28" height="15" fill="rgb(215,56,4)"/><text x="262.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (19 samples, 2.37%)</title><rect x="259" y="116" width="28" height="15" fill="rgb(226,92,28)"/><text x="262.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (19 samples, 2.37%)</title><rect x="259" y="132" width="28" height="15" fill="rgb(249,107,15)"/><text x="262.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:7) (8 samples, 1.00%)</title><rect x="275" y="148" width="12" height="15" fill="rgb(235,53,1)"/><text x="278.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.00%)</title><rect x="275" y="164" width="12" height="15" fill="rgb(244,180,41)"/><text x="278.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.00%)</title><rect x="275" y="180" width="12" height="15" fill="rgb(208,176,12)"/><text x="278.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.00%)</title><rect x="275" y="196" width="12" height="15" fill="rgb(226,82,46)"/><text x="278.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.00%)</title><rect x="275" y="212" width="12" height="15" fill="rgb(225,154,53)"/><text x="278.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.00%)</title><rect x="275" y="228" width="12" height="15" fill="rgb(225,0,5)"/><text x="278.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 0.75%)</title><rect x="278" y="244" width="9" height="15" fill="rgb(252,188,33)"/><text x="281.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.75%)</title><rect x="278" y="260" width="9" height="15" fill="rgb(230,106,0)"/><text x="281.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.75%)</title><rect x="278" y="276" width="9" height="15" fill="rgb(214,178,46)"/><text x="281.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.75%)</title><rect x="278" y="292" width="9" height="15" fill="rgb(207,54,22)"/><text x="281.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.75%)</title><rect x="278" y="308" width="9" height="15" fill="rgb(235,182,12)"/><text x="281.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.75%)</title><rect x="278" y="324" width="9" height="15" fill="rgb(247,177,47)"/><text x="281.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 0.62%)</title><rect x="280" y="340" width="7" height="15" fill="rgb(243,81,51)"/><text x="283.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.62%)</title><rect x="280" y="356" width="7" height="15" fill="rgb(242,67,3)"/><text x="283.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.62%)</title><rect x="280" y="372" width="7" height="15" fill="rgb(221,51,11)"/><text x="283.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.62%)</title><rect x="280" y="388" width="7" height="15" fill="rgb(250,202,54)"/><text x="283.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.62%)</title><rect x="280" y="404" width="7" height="15" fill="rgb(221,44,29)"/><text x="283.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.62%)</title><rect x="280" y="420" width="7" height="15" fill="rgb(210,91,46)"/><text x="283.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.50%)</title><rect x="281" y="436" width="6" height="15" fill="rgb(244,159,3)"/><text x="284.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.50%)</title><rect x="281" y="452" width="6" height="15" fill="rgb(215,138,11)"/><text x="284.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.50%)</title><rect x="281" y="468" width="6" height="15" fill="rgb(208,138,28)"/><text x="284.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.50%)</title><rect x="281" y="484" width="6" height="15" fill="rgb(244,192,13)"/><text x="284.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.50%)</title><rect x="281" y="500" width="6" height="15" fill="rgb(208,137,29)"/><text x="284.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.50%)</title><rect x="281" y="516" width="6" height="15" fill="rgb(225,109,46)"/><text x="284.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.50%)</title><rect x="281" y="532" width="6" height="15" fill="rgb(205,121,16)"/><text x="284.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.50%)</title><rect x="281" y="548" width="6" height="15" fill="rgb(246,138,17)"/><text x="284.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.50%)</title><rect x="281" y="564" width="6" height="15" fill="rgb(225,108,52)"/><text x="284.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.50%)</title><rect x="281" y="580" width="6" height="15" fill="rgb(236,191,32)"/><text x="284.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.50%)</title><rect x="281" y="596" width="6" height="15" fill="rgb(234,36,24)"/><text x="284.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.50%)</title><rect x="281" y="612" width="6" height="15" fill="rgb(237,130,16)"/><text x="284.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.50%)</title><rect x="281" y="628" width="6" height="15" fill="rgb(251,18,18)"/><text x="284.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.50%)</title><rect x="281" y="644" width="6" height="15" fill="rgb(208,133,18)"/><text x="284.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.50%)</title><rect x="281" y="660" width="6" height="15" fill="rgb(227,83,28)"/><text x="284.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:20) (1 samples, 0.12%)</title><rect x="286" y="676" width="1" height="15" fill="rgb(210,104,49)"/><text x="289.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="286" y="692" width="1" height="15" fill="rgb(226,83,37)"/><text x="289.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="286" y="708" width="1" height="15" fill="rgb(245,218,2)"/><text x="289.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="286" y="724" width="1" height="15" fill="rgb(229,176,41)"/><text x="289.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="286" y="740" width="1" height="15" fill="rgb(235,117,11)"/><text x="289.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:807) (1 samples, 0.12%)</title><rect x="286" y="756" width="1" height="15" fill="rgb(214,34,32)"/><text x="289.00" y="766.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:299) (1 samples, 0.12%)</title><rect x="286" y="772" width="1" height="15" fill="rgb(221,103,8)"/><text x="289.00" y="782.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:18) (1 samples, 0.12%)</title><rect x="287" y="100" width="2" height="15" fill="rgb(225,174,47)"/><text x="290.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.12%)</title><rect x="287" y="116" width="2" height="15" fill="rgb(233,24,29)"/><text x="290.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.12%)</title><rect x="287" y="132" width="2" height="15" fill="rgb(205,56,18)"/><text x="290.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.12%)</title><rect x="287" y="148" width="2" height="15" fill="rgb(226,182,17)"/><text x="290.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.12%)</title><rect x="287" y="164" width="2" height="15" fill="rgb(231,183,34)"/><text x="290.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.12%)</title><rect x="287" y="180" width="2" height="15" fill="rgb(251,122,29)"/><text x="290.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.12%)</title><rect x="287" y="196" width="2" height="15" fill="rgb(228,108,26)"/><text x="290.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:268) (1 samples, 0.12%)</title><rect x="287" y="212" width="2" height="15" fill="rgb(216,132,24)"/><text x="290.00" y="222.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.12%)</title><rect x="289" y="164" width="1" height="15" fill="rgb(205,85,34)"/><text x="292.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.37%)</title><rect x="293" y="180" width="5" height="15" fill="rgb(216,163,33)"/><text x="296.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.12%)</title><rect x="296" y="196" width="2" height="15" fill="rgb(244,215,45)"/><text x="299.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (2 samples, 0.25%)</title><rect x="303" y="212" width="3" height="15" fill="rgb(220,4,31)"/><text x="306.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (2 samples, 0.25%)</title><rect x="303" y="228" width="3" height="15" fill="rgb(208,162,37)"/><text x="306.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.25%)</title><rect x="303" y="244" width="3" height="15" fill="rgb(227,70,16)"/><text x="306.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.25%)</title><rect x="303" y="260" width="3" height="15" fill="rgb(205,79,25)"/><text x="306.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.12%)</title><rect x="305" y="276" width="1" height="15" fill="rgb(220,142,14)"/><text x="308.00" y="286.50"></text></g><g><title>0x7f87343a9d94 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="305" y="292" width="1" height="15" fill="rgb(231,138,27)"/><text x="308.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (4 samples, 0.50%)</title><rect x="302" y="196" width="6" height="15" fill="rgb(244,49,46)"/><text x="305.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.12%)</title><rect x="306" y="212" width="2" height="15" fill="rgb(247,183,52)"/><text x="309.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.12%)</title><rect x="306" y="228" width="2" height="15" fill="rgb(244,85,21)"/><text x="309.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="317" y="260" width="1" height="15" fill="rgb(218,63,42)"/><text x="320.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.12%)</title><rect x="317" y="276" width="1" height="15" fill="rgb(238,145,42)"/><text x="320.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.12%)</title><rect x="317" y="292" width="1" height="15" fill="rgb(229,127,20)"/><text x="320.00" y="302.50"></text></g><g><title>array_reshape (methods.c:195) (3 samples, 0.37%)</title><rect x="318" y="260" width="5" height="15" fill="rgb(213,175,42)"/><text x="321.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:98) (1 samples, 0.12%)</title><rect x="321" y="276" width="2" height="15" fill="rgb(249,137,12)"/><text x="324.00" y="286.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.12%)</title><rect x="323" y="260" width="1" height="15" fill="rgb(207,196,27)"/><text x="326.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.12%)</title><rect x="323" y="276" width="1" height="15" fill="rgb(242,53,16)"/><text x="326.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.12%)</title><rect x="323" y="292" width="1" height="15" fill="rgb(209,141,40)"/><text x="326.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1126) (1 samples, 0.12%)</title><rect x="323" y="308" width="1" height="15" fill="rgb(212,27,50)"/><text x="326.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.12%)</title><rect x="325" y="324" width="2" height="15" fill="rgb(249,112,24)"/><text x="328.00" y="334.50"></text></g><g><title>_wheremask_converter (ufunc_object.c:993) (1 samples, 0.12%)</title><rect x="325" y="340" width="2" height="15" fill="rgb(243,7,52)"/><text x="328.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.12%)</title><rect x="327" y="324" width="1" height="15" fill="rgb(217,13,16)"/><text x="330.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:809) (1 samples, 0.12%)</title><rect x="327" y="340" width="1" height="15" fill="rgb(205,57,11)"/><text x="330.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.12%)</title><rect x="328" y="356" width="2" height="15" fill="rgb(208,120,47)"/><text x="331.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.12%)</title><rect x="328" y="372" width="2" height="15" fill="rgb(248,73,39)"/><text x="331.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.12%)</title><rect x="328" y="388" width="2" height="15" fill="rgb(221,26,32)"/><text x="331.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.12%)</title><rect x="328" y="404" width="2" height="15" fill="rgb(224,188,28)"/><text x="331.00" y="414.50"></text></g><g><title>0x7f8734341a19 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="328" y="420" width="2" height="15" fill="rgb(216,83,21)"/><text x="331.00" y="430.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:736) (1 samples, 0.12%)</title><rect x="328" y="436" width="2" height="15" fill="rgb(244,61,50)"/><text x="331.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:190) (1 samples, 0.12%)</title><rect x="330" y="372" width="1" height="15" fill="rgb(247,173,54)"/><text x="333.00" y="382.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c:872) (1 samples, 0.12%)</title><rect x="330" y="388" width="1" height="15" fill="rgb(211,47,38)"/><text x="333.00" y="398.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.12%)</title><rect x="330" y="404" width="1" height="15" fill="rgb(214,207,2)"/><text x="333.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.25%)</title><rect x="330" y="356" width="3" height="15" fill="rgb(237,102,17)"/><text x="333.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.12%)</title><rect x="331" y="372" width="2" height="15" fill="rgb(224,76,19)"/><text x="334.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2260) (1 samples, 0.12%)</title><rect x="331" y="388" width="2" height="15" fill="rgb(246,28,30)"/><text x="334.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.12%)</title><rect x="333" y="372" width="1" height="15" fill="rgb(210,75,47)"/><text x="336.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.12%)</title><rect x="336" y="388" width="1" height="15" fill="rgb(238,99,3)"/><text x="339.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.12%)</title><rect x="339" y="404" width="1" height="15" fill="rgb(241,84,45)"/><text x="342.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (4 samples, 0.50%)</title><rect x="337" y="388" width="6" height="15" fill="rgb(251,189,42)"/><text x="340.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (2 samples, 0.25%)</title><rect x="340" y="404" width="3" height="15" fill="rgb(249,146,49)"/><text x="343.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.12%)</title><rect x="343" y="388" width="2" height="15" fill="rgb(253,105,49)"/><text x="346.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (15 samples, 1.87%)</title><rect x="324" y="260" width="22" height="15" fill="rgb(243,218,30)"/><text x="327.00" y="270.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (15 samples, 1.87%)</title><rect x="324" y="276" width="22" height="15" fill="rgb(245,65,28)"/><text x="327.00" y="286.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (15 samples, 1.87%)</title><rect x="324" y="292" width="22" height="15" fill="rgb(244,217,46)"/><text x="327.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (14 samples, 1.74%)</title><rect x="325" y="308" width="21" height="15" fill="rgb(238,49,16)"/><text x="328.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (12 samples, 1.49%)</title><rect x="328" y="324" width="18" height="15" fill="rgb(227,133,3)"/><text x="331.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (12 samples, 1.49%)</title><rect x="328" y="340" width="18" height="15" fill="rgb(214,140,43)"/><text x="331.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (9 samples, 1.12%)</title><rect x="333" y="356" width="13" height="15" fill="rgb(229,224,53)"/><text x="336.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (8 samples, 1.00%)</title><rect x="334" y="372" width="12" height="15" fill="rgb(228,71,50)"/><text x="337.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.12%)</title><rect x="345" y="388" width="1" height="15" fill="rgb(212,117,29)"/><text x="348.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.12%)</title><rect x="346" y="276" width="1" height="15" fill="rgb(230,62,39)"/><text x="349.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.12%)</title><rect x="346" y="292" width="1" height="15" fill="rgb(236,74,22)"/><text x="349.00" y="302.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (25 samples, 3.11%)</title><rect x="312" y="244" width="37" height="15" fill="rgb(225,54,26)"/><text x="315.00" y="254.50">nor..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.25%)</title><rect x="346" y="260" width="3" height="15" fill="rgb(212,75,24)"/><text x="349.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="347" y="276" width="2" height="15" fill="rgb(237,191,41)"/><text x="350.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.12%)</title><rect x="347" y="292" width="2" height="15" fill="rgb(215,174,49)"/><text x="350.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.12%)</title><rect x="347" y="308" width="2" height="15" fill="rgb(223,153,2)"/><text x="350.00" y="318.50"></text></g><g><title>0x7f87335abe80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="347" y="324" width="2" height="15" fill="rgb(210,147,13)"/><text x="350.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1714) (1 samples, 0.12%)</title><rect x="349" y="292" width="1" height="15" fill="rgb(217,120,38)"/><text x="352.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.12%)</title><rect x="350" y="324" width="2" height="15" fill="rgb(247,48,18)"/><text x="353.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1536) (1 samples, 0.12%)</title><rect x="350" y="340" width="2" height="15" fill="rgb(232,219,23)"/><text x="353.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.25%)</title><rect x="350" y="308" width="3" height="15" fill="rgb(230,85,45)"/><text x="353.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:268) (1 samples, 0.12%)</title><rect x="352" y="324" width="1" height="15" fill="rgb(228,98,11)"/><text x="355.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.12%)</title><rect x="353" y="356" width="2" height="15" fill="rgb(252,224,53)"/><text x="356.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.12%)</title><rect x="355" y="356" width="1" height="15" fill="rgb(218,136,25)"/><text x="358.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.12%)</title><rect x="355" y="372" width="1" height="15" fill="rgb(231,18,12)"/><text x="358.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.37%)</title><rect x="353" y="308" width="5" height="15" fill="rgb(254,148,4)"/><text x="356.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.37%)</title><rect x="353" y="324" width="5" height="15" fill="rgb(238,213,36)"/><text x="356.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.37%)</title><rect x="353" y="340" width="5" height="15" fill="rgb(213,51,42)"/><text x="356.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1076) (1 samples, 0.12%)</title><rect x="356" y="356" width="2" height="15" fill="rgb(210,33,12)"/><text x="359.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (36 samples, 4.48%)</title><rect x="308" y="196" width="53" height="15" fill="rgb(238,184,13)"/><text x="311.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (35 samples, 4.36%)</title><rect x="309" y="212" width="52" height="15" fill="rgb(213,135,15)"/><text x="312.00" y="222.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (35 samples, 4.36%)</title><rect x="309" y="228" width="52" height="15" fill="rgb(247,2,18)"/><text x="312.00" y="238.50">_run ..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (8 samples, 1.00%)</title><rect x="349" y="244" width="12" height="15" fill="rgb(213,96,1)"/><text x="352.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.00%)</title><rect x="349" y="260" width="12" height="15" fill="rgb(213,5,19)"/><text x="352.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.00%)</title><rect x="349" y="276" width="12" height="15" fill="rgb(250,178,6)"/><text x="352.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 0.87%)</title><rect x="350" y="292" width="11" height="15" fill="rgb(222,70,26)"/><text x="353.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.25%)</title><rect x="358" y="308" width="3" height="15" fill="rgb(209,152,15)"/><text x="361.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (2 samples, 0.25%)</title><rect x="358" y="324" width="3" height="15" fill="rgb(205,134,36)"/><text x="361.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (2 samples, 0.25%)</title><rect x="358" y="340" width="3" height="15" fill="rgb(223,216,28)"/><text x="361.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:604) (2 samples, 0.25%)</title><rect x="358" y="356" width="3" height="15" fill="rgb(211,148,22)"/><text x="361.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (2 samples, 0.25%)</title><rect x="358" y="372" width="3" height="15" fill="rgb(235,160,44)"/><text x="361.00" y="382.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (2 samples, 0.25%)</title><rect x="361" y="244" width="3" height="15" fill="rgb(217,108,7)"/><text x="364.00" y="254.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.12%)</title><rect x="367" y="308" width="1" height="15" fill="rgb(224,145,31)"/><text x="370.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2089) (1 samples, 0.12%)</title><rect x="367" y="324" width="1" height="15" fill="rgb(241,101,41)"/><text x="370.00" y="334.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.12%)</title><rect x="368" y="308" width="2" height="15" fill="rgb(215,12,39)"/><text x="371.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.12%)</title><rect x="368" y="324" width="2" height="15" fill="rgb(252,32,18)"/><text x="371.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2148) (1 samples, 0.12%)</title><rect x="368" y="340" width="2" height="15" fill="rgb(253,173,28)"/><text x="371.00" y="350.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1499) (1 samples, 0.12%)</title><rect x="368" y="356" width="2" height="15" fill="rgb(216,160,37)"/><text x="371.00" y="366.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (1 samples, 0.12%)</title><rect x="370" y="324" width="1" height="15" fill="rgb(228,55,42)"/><text x="373.00" y="334.50"></text></g><g><title>0x7f87343aa124 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="370" y="340" width="1" height="15" fill="rgb(207,215,26)"/><text x="373.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (24 samples, 2.99%)</title><rect x="365" y="276" width="35" height="15" fill="rgb(209,37,37)"/><text x="368.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (23 samples, 2.86%)</title><rect x="367" y="292" width="33" height="15" fill="rgb(208,19,40)"/><text x="370.00" y="302.50">ar..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (21 samples, 2.62%)</title><rect x="370" y="308" width="30" height="15" fill="rgb(229,161,35)"/><text x="373.00" y="318.50">Py..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (20 samples, 2.49%)</title><rect x="371" y="324" width="29" height="15" fill="rgb(234,113,1)"/><text x="374.00" y="334.50">cb..</text></g><g><title>gemm (cblasfuncs.c:40) (20 samples, 2.49%)</title><rect x="371" y="340" width="29" height="15" fill="rgb(235,25,27)"/><text x="374.00" y="350.50">ge..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 2.49%)</title><rect x="371" y="356" width="29" height="15" fill="rgb(250,18,24)"/><text x="374.00" y="366.50">cb..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 2.49%)</title><rect x="371" y="372" width="29" height="15" fill="rgb(235,154,21)"/><text x="374.00" y="382.50">sg..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 2.49%)</title><rect x="371" y="388" width="29" height="15" fill="rgb(228,102,45)"/><text x="374.00" y="398.50">sg..</text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.12%)</title><rect x="400" y="276" width="2" height="15" fill="rgb(216,26,44)"/><text x="403.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (71 samples, 8.84%)</title><rect x="361" y="228" width="104" height="15" fill="rgb(236,13,14)"/><text x="364.00" y="238.50">_run (mlprod..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (69 samples, 8.59%)</title><rect x="364" y="244" width="101" height="15" fill="rgb(235,156,47)"/><text x="367.00" y="254.50">numpy_dot_in..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (68 samples, 8.47%)</title><rect x="365" y="260" width="100" height="15" fill="rgb(243,106,43)"/><text x="368.00" y="270.50">dot (&lt;__arra..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (43 samples, 5.35%)</title><rect x="402" y="276" width="63" height="15" fill="rgb(207,8,47)"/><text x="405.00" y="286.50">sgemm_..</text></g><g><title>array_inplace_add (number.c:711) (1 samples, 0.12%)</title><rect x="465" y="244" width="2" height="15" fill="rgb(214,178,8)"/><text x="468.00" y="254.50"></text></g><g><title>PyArray_GenericInplaceBinaryFunction (number.c:303) (1 samples, 0.12%)</title><rect x="465" y="260" width="2" height="15" fill="rgb(229,202,30)"/><text x="468.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.12%)</title><rect x="467" y="260" width="1" height="15" fill="rgb(238,68,14)"/><text x="470.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.12%)</title><rect x="467" y="276" width="1" height="15" fill="rgb(234,142,46)"/><text x="470.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.12%)</title><rect x="467" y="292" width="1" height="15" fill="rgb(251,51,21)"/><text x="470.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1795) (1 samples, 0.12%)</title><rect x="467" y="308" width="1" height="15" fill="rgb(244,105,2)"/><text x="470.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.12%)</title><rect x="468" y="292" width="1" height="15" fill="rgb(218,76,0)"/><text x="471.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.12%)</title><rect x="468" y="308" width="1" height="15" fill="rgb(228,89,52)"/><text x="471.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="468" y="324" width="1" height="15" fill="rgb(253,173,45)"/><text x="471.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1526) (1 samples, 0.12%)</title><rect x="469" y="292" width="2" height="15" fill="rgb(246,14,31)"/><text x="472.00" y="302.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c:1094) (1 samples, 0.12%)</title><rect x="469" y="308" width="2" height="15" fill="rgb(246,95,35)"/><text x="472.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.25%)</title><rect x="471" y="340" width="3" height="15" fill="rgb(211,59,4)"/><text x="474.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (7 samples, 0.87%)</title><rect x="465" y="228" width="10" height="15" fill="rgb(233,109,10)"/><text x="468.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.75%)</title><rect x="467" y="244" width="8" height="15" fill="rgb(250,168,34)"/><text x="470.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.62%)</title><rect x="468" y="260" width="7" height="15" fill="rgb(238,63,12)"/><text x="471.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.62%)</title><rect x="468" y="276" width="7" height="15" fill="rgb(209,79,9)"/><text x="471.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.37%)</title><rect x="471" y="292" width="4" height="15" fill="rgb(248,173,33)"/><text x="474.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.37%)</title><rect x="471" y="308" width="4" height="15" fill="rgb(239,226,6)"/><text x="474.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.37%)</title><rect x="471" y="324" width="4" height="15" fill="rgb(228,110,1)"/><text x="474.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.12%)</title><rect x="474" y="340" width="1" height="15" fill="rgb(238,99,47)"/><text x="477.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:45) (1 samples, 0.12%)</title><rect x="475" y="228" width="2" height="15" fill="rgb(218,81,9)"/><text x="478.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.12%)</title><rect x="477" y="260" width="1" height="15" fill="rgb(244,63,45)"/><text x="480.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.12%)</title><rect x="477" y="276" width="1" height="15" fill="rgb(221,88,36)"/><text x="480.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:919) (1 samples, 0.12%)</title><rect x="477" y="292" width="1" height="15" fill="rgb(230,180,47)"/><text x="480.00" y="302.50"></text></g><g><title>0x7f871f693204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="478" y="324" width="3" height="15" fill="rgb(247,67,13)"/><text x="481.00" y="334.50"></text></g><g><title>0x7f871f79cc70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="483" y="340" width="3" height="15" fill="rgb(232,81,25)"/><text x="486.00" y="350.50"></text></g><g><title>0x7f87344d51a0 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="491" y="356" width="2" height="15" fill="rgb(238,27,32)"/><text x="494.00" y="366.50"></text></g><g><title>0x7f8734508e00 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="493" y="356" width="1" height="15" fill="rgb(205,47,23)"/><text x="496.00" y="366.50"></text></g><g><title>0x7f8734508e17 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="494" y="356" width="2" height="15" fill="rgb(228,211,23)"/><text x="497.00" y="366.50"></text></g><g><title>0x7f8734508e37 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="496" y="356" width="1" height="15" fill="rgb(222,147,39)"/><text x="499.00" y="366.50"></text></g><g><title>0x7f8734508e71 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="497" y="356" width="2" height="15" fill="rgb(222,49,11)"/><text x="500.00" y="366.50"></text></g><g><title>0x7f8734508e7e (libm-2.29.so) (3 samples, 0.37%)</title><rect x="499" y="356" width="4" height="15" fill="rgb(211,40,28)"/><text x="502.00" y="366.50"></text></g><g><title>0x7f871f693214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (17 samples, 2.12%)</title><rect x="481" y="324" width="25" height="15" fill="rgb(245,220,38)"/><text x="484.00" y="334.50">0..</text></g><g><title>expf (libm-2.29.so) (14 samples, 1.74%)</title><rect x="486" y="340" width="20" height="15" fill="rgb(237,96,43)"/><text x="489.00" y="350.50"></text></g><g><title>0x7f8734508ea6 (libm-2.29.so) (2 samples, 0.25%)</title><rect x="503" y="356" width="3" height="15" fill="rgb(238,133,8)"/><text x="506.00" y="366.50"></text></g><g><title>0x7f871f693224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="506" y="324" width="2" height="15" fill="rgb(223,79,50)"/><text x="509.00" y="334.50"></text></g><g><title>0x7f871f67133d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (24 samples, 2.99%)</title><rect x="478" y="308" width="36" height="15" fill="rgb(219,90,31)"/><text x="481.00" y="318.50">0x7..</text></g><g><title>0x7f871f693228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.50%)</title><rect x="508" y="324" width="6" height="15" fill="rgb(210,215,16)"/><text x="511.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (26 samples, 3.24%)</title><rect x="477" y="228" width="38" height="15" fill="rgb(245,113,18)"/><text x="480.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (26 samples, 3.24%)</title><rect x="477" y="244" width="38" height="15" fill="rgb(220,135,41)"/><text x="480.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (25 samples, 3.11%)</title><rect x="478" y="260" width="37" height="15" fill="rgb(247,114,39)"/><text x="481.00" y="270.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (25 samples, 3.11%)</title><rect x="478" y="276" width="37" height="15" fill="rgb(212,91,15)"/><text x="481.00" y="286.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (25 samples, 3.11%)</title><rect x="478" y="292" width="37" height="15" fill="rgb(227,223,32)"/><text x="481.00" y="302.50">tri..</text></g><g><title>0x7f871f671345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="514" y="308" width="1" height="15" fill="rgb(220,14,36)"/><text x="517.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.12%)</title><rect x="515" y="228" width="1" height="15" fill="rgb(244,112,13)"/><text x="518.00" y="238.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.12%)</title><rect x="516" y="308" width="2" height="15" fill="rgb(227,133,51)"/><text x="519.00" y="318.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3094) (1 samples, 0.12%)</title><rect x="518" y="340" width="1" height="15" fill="rgb(218,51,9)"/><text x="521.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3109) (1 samples, 0.12%)</title><rect x="519" y="340" width="2" height="15" fill="rgb(212,63,3)"/><text x="522.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3127) (1 samples, 0.12%)</title><rect x="521" y="340" width="1" height="15" fill="rgb(218,170,33)"/><text x="524.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (155 samples, 19.30%)</title><rect x="298" y="180" width="227" height="15" fill="rgb(212,181,2)"/><text x="301.00" y="190.50">run (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (112 samples, 13.95%)</title><rect x="361" y="196" width="164" height="15" fill="rgb(237,29,16)"/><text x="364.00" y="206.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (112 samples, 13.95%)</title><rect x="361" y="212" width="164" height="15" fill="rgb(223,56,42)"/><text x="364.00" y="222.50">run (mlprodict/onnxrt..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (6 samples, 0.75%)</title><rect x="516" y="228" width="9" height="15" fill="rgb(231,122,7)"/><text x="519.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 0.75%)</title><rect x="516" y="244" width="9" height="15" fill="rgb(247,182,36)"/><text x="519.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.75%)</title><rect x="516" y="260" width="9" height="15" fill="rgb(236,137,47)"/><text x="519.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 0.75%)</title><rect x="516" y="276" width="9" height="15" fill="rgb(254,74,14)"/><text x="519.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (6 samples, 0.75%)</title><rect x="516" y="292" width="9" height="15" fill="rgb(246,33,13)"/><text x="519.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (5 samples, 0.62%)</title><rect x="518" y="308" width="7" height="15" fill="rgb(211,203,7)"/><text x="521.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (5 samples, 0.62%)</title><rect x="518" y="324" width="7" height="15" fill="rgb(218,81,10)"/><text x="521.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3140) (2 samples, 0.25%)</title><rect x="522" y="340" width="3" height="15" fill="rgb(239,142,52)"/><text x="525.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.25%)</title><rect x="525" y="180" width="3" height="15" fill="rgb(252,106,53)"/><text x="528.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (164 samples, 20.42%)</title><rect x="290" y="164" width="241" height="15" fill="rgb(205,151,45)"/><text x="293.00" y="174.50">_run_sequence_runtime (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.25%)</title><rect x="528" y="180" width="3" height="15" fill="rgb(239,186,43)"/><text x="531.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:45) (167 samples, 20.80%)</title><rect x="287" y="52" width="246" height="15" fill="rgb(236,30,50)"/><text x="290.00" y="62.50">&lt;module&gt; (bench_LogisticRegressi..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:44) (167 samples, 20.80%)</title><rect x="287" y="68" width="246" height="15" fill="rgb(233,170,18)"/><text x="290.00" y="78.50">profile_pyrt (bench_LogisticRegr..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:29) (167 samples, 20.80%)</title><rect x="287" y="84" width="246" height="15" fill="rgb(230,28,9)"/><text x="290.00" y="94.50">setup_profile (bench_LogisticReg..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:23) (166 samples, 20.67%)</title><rect x="289" y="100" width="244" height="15" fill="rgb(248,78,25)"/><text x="292.00" y="110.50">profile (bench_LogisticRegressio..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (166 samples, 20.67%)</title><rect x="289" y="116" width="244" height="15" fill="rgb(232,79,0)"/><text x="292.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (166 samples, 20.67%)</title><rect x="289" y="132" width="244" height="15" fill="rgb(215,160,0)"/><text x="292.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (166 samples, 20.67%)</title><rect x="289" y="148" width="244" height="15" fill="rgb(218,118,39)"/><text x="292.00" y="158.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.12%)</title><rect x="531" y="164" width="2" height="15" fill="rgb(213,81,46)"/><text x="534.00" y="174.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:28) (1 samples, 0.12%)</title><rect x="533" y="84" width="1" height="15" fill="rgb(228,131,46)"/><text x="536.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.12%)</title><rect x="533" y="100" width="1" height="15" fill="rgb(252,11,9)"/><text x="536.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.12%)</title><rect x="533" y="116" width="1" height="15" fill="rgb(235,207,46)"/><text x="536.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.12%)</title><rect x="533" y="132" width="1" height="15" fill="rgb(237,55,26)"/><text x="536.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.12%)</title><rect x="533" y="148" width="1" height="15" fill="rgb(221,51,20)"/><text x="536.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:99) (1 samples, 0.12%)</title><rect x="533" y="164" width="1" height="15" fill="rgb(241,170,53)"/><text x="536.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py:52) (1 samples, 0.12%)</title><rect x="533" y="180" width="1" height="15" fill="rgb(236,134,47)"/><text x="536.00" y="190.50"></text></g><g><title>__init__ (onnxruntime/capi/session.py:23) (1 samples, 0.12%)</title><rect x="533" y="196" width="1" height="15" fill="rgb(219,31,2)"/><text x="536.00" y="206.50"></text></g><g><title>_load_model (onnxruntime/capi/session.py:37) (1 samples, 0.12%)</title><rect x="533" y="212" width="1" height="15" fill="rgb(235,115,17)"/><text x="536.00" y="222.50"></text></g><g><title>0x7f86f43b9ff9 (?) (1 samples, 0.12%)</title><rect x="533" y="228" width="1" height="15" fill="rgb(227,153,11)"/><text x="536.00" y="238.50"></text></g><g><title>0x7f86f43b457e (?) (1 samples, 0.12%)</title><rect x="533" y="244" width="1" height="15" fill="rgb(219,151,5)"/><text x="536.00" y="254.50"></text></g><g><title>0x7f86f43e1426 (?) (1 samples, 0.12%)</title><rect x="533" y="260" width="1" height="15" fill="rgb(248,23,25)"/><text x="536.00" y="270.50"></text></g><g><title>0x7f86f48050b2 (?) (1 samples, 0.12%)</title><rect x="533" y="276" width="1" height="15" fill="rgb(214,126,29)"/><text x="536.00" y="286.50"></text></g><g><title>0x7f86f445a9fc (?) (1 samples, 0.12%)</title><rect x="533" y="292" width="1" height="15" fill="rgb(249,190,49)"/><text x="536.00" y="302.50"></text></g><g><title>0x7f86f445a720 (?) (1 samples, 0.12%)</title><rect x="533" y="308" width="1" height="15" fill="rgb(207,25,42)"/><text x="536.00" y="318.50"></text></g><g><title>0x7f86f445a411 (?) (1 samples, 0.12%)</title><rect x="533" y="324" width="1" height="15" fill="rgb(254,13,30)"/><text x="536.00" y="334.50"></text></g><g><title>0x7f86f47fdb61 (?) (1 samples, 0.12%)</title><rect x="533" y="340" width="1" height="15" fill="rgb(235,134,35)"/><text x="536.00" y="350.50"></text></g><g><title>0x7f86f47fc766 (?) (1 samples, 0.12%)</title><rect x="533" y="356" width="1" height="15" fill="rgb(250,23,43)"/><text x="536.00" y="366.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="534" y="260" width="3" height="15" fill="rgb(252,137,45)"/><text x="537.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="536" y="276" width="1" height="15" fill="rgb(239,52,38)"/><text x="539.00" y="286.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:18) (3 samples, 0.37%)</title><rect x="534" y="100" width="5" height="15" fill="rgb(249,45,2)"/><text x="537.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.37%)</title><rect x="534" y="116" width="5" height="15" fill="rgb(209,117,40)"/><text x="537.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (3 samples, 0.37%)</title><rect x="534" y="132" width="5" height="15" fill="rgb(209,89,37)"/><text x="537.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (3 samples, 0.37%)</title><rect x="534" y="148" width="5" height="15" fill="rgb(212,188,16)"/><text x="537.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (3 samples, 0.37%)</title><rect x="534" y="164" width="5" height="15" fill="rgb(217,104,49)"/><text x="537.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (3 samples, 0.37%)</title><rect x="534" y="180" width="5" height="15" fill="rgb(232,140,0)"/><text x="537.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (3 samples, 0.37%)</title><rect x="534" y="196" width="5" height="15" fill="rgb(211,163,10)"/><text x="537.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.37%)</title><rect x="534" y="212" width="5" height="15" fill="rgb(246,186,7)"/><text x="537.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.37%)</title><rect x="534" y="228" width="5" height="15" fill="rgb(240,160,52)"/><text x="537.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.37%)</title><rect x="534" y="244" width="5" height="15" fill="rgb(216,120,6)"/><text x="537.00" y="254.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="537" y="260" width="2" height="15" fill="rgb(253,195,52)"/><text x="540.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="537" y="276" width="2" height="15" fill="rgb(219,174,31)"/><text x="540.00" y="286.50"></text></g><g><title>0x7f8734389d07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="537" y="292" width="2" height="15" fill="rgb(207,116,18)"/><text x="540.00" y="302.50"></text></g><g><title>0x7f8734388bdf (libc-2.29.so) (6 samples, 0.75%)</title><rect x="575" y="132" width="9" height="15" fill="rgb(219,124,45)"/><text x="578.00" y="142.50"></text></g><g><title>0x7f8734388c00 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="584" y="132" width="2" height="15" fill="rgb(251,5,17)"/><text x="587.00" y="142.50"></text></g><g><title>0x7f8734388c20 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="586" y="132" width="1" height="15" fill="rgb(240,76,26)"/><text x="589.00" y="142.50"></text></g><g><title>0x7f8734388c36 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="587" y="132" width="1" height="15" fill="rgb(249,119,49)"/><text x="590.00" y="142.50"></text></g><g><title>0x7f8734388c49 (libc-2.29.so) (3 samples, 0.37%)</title><rect x="588" y="132" width="5" height="15" fill="rgb(243,134,25)"/><text x="591.00" y="142.50"></text></g><g><title>0x7f8734388c5a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="593" y="132" width="1" height="15" fill="rgb(210,160,36)"/><text x="596.00" y="142.50"></text></g><g><title>0x7f8734388c6a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="594" y="132" width="2" height="15" fill="rgb(227,75,27)"/><text x="597.00" y="142.50"></text></g><g><title>0x7f8734388c73 (libc-2.29.so) (4 samples, 0.50%)</title><rect x="596" y="132" width="6" height="15" fill="rgb(226,48,40)"/><text x="599.00" y="142.50"></text></g><g><title>0x7f8734388ac1 (libc-2.29.so) (3 samples, 0.37%)</title><rect x="597" y="148" width="5" height="15" fill="rgb(214,155,30)"/><text x="600.00" y="158.50"></text></g><g><title>0x7f8734388aa0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="602" y="148" width="1" height="15" fill="rgb(247,143,49)"/><text x="605.00" y="158.50"></text></g><g><title>0x7f8734389eb0 (libc-2.29.so) (20 samples, 2.49%)</title><rect x="575" y="116" width="30" height="15" fill="rgb(245,20,7)"/><text x="578.00" y="126.50">0x..</text></g><g><title>0x7f8734388ca7 (libc-2.29.so) (2 samples, 0.25%)</title><rect x="602" y="132" width="3" height="15" fill="rgb(229,92,1)"/><text x="605.00" y="142.50"></text></g><g><title>0x7f8734388aa8 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="603" y="148" width="2" height="15" fill="rgb(253,100,12)"/><text x="606.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="605" y="116" width="1" height="15" fill="rgb(236,109,12)"/><text x="608.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.12%)</title><rect x="605" y="132" width="1" height="15" fill="rgb(218,99,4)"/><text x="608.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.12%)</title><rect x="605" y="148" width="1" height="15" fill="rgb(221,2,14)"/><text x="608.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.12%)</title><rect x="606" y="116" width="2" height="15" fill="rgb(225,145,15)"/><text x="609.00" y="126.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.12%)</title><rect x="606" y="132" width="2" height="15" fill="rgb(246,33,30)"/><text x="609.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.12%)</title><rect x="609" y="148" width="2" height="15" fill="rgb(211,132,46)"/><text x="612.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.37%)</title><rect x="613" y="196" width="5" height="15" fill="rgb(237,222,39)"/><text x="616.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.25%)</title><rect x="615" y="212" width="3" height="15" fill="rgb(207,19,7)"/><text x="618.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="616" y="228" width="2" height="15" fill="rgb(217,97,10)"/><text x="619.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="616" y="244" width="2" height="15" fill="rgb(220,207,11)"/><text x="619.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="616" y="260" width="2" height="15" fill="rgb(233,43,7)"/><text x="619.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="616" y="276" width="2" height="15" fill="rgb(232,166,44)"/><text x="619.00" y="286.50"></text></g><g><title>0x7f86f43818a0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="622" y="260" width="2" height="15" fill="rgb(221,157,29)"/><text x="625.00" y="270.50"></text></g><g><title>0x7f87343aa120 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="624" y="260" width="1" height="15" fill="rgb(235,191,14)"/><text x="627.00" y="270.50"></text></g><g><title>onnxruntime::DataTypeImpl::GetType&lt;std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="625" y="260" width="2" height="15" fill="rgb(240,180,32)"/><text x="628.00" y="270.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="628" y="340" width="3" height="15" fill="rgb(232,54,35)"/><text x="631.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="628" y="356" width="3" height="15" fill="rgb(212,86,0)"/><text x="631.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="628" y="372" width="3" height="15" fill="rgb(233,191,31)"/><text x="631.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="630" y="388" width="1" height="15" fill="rgb(213,37,46)"/><text x="633.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="630" y="404" width="1" height="15" fill="rgb(220,78,16)"/><text x="633.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="630" y="420" width="1" height="15" fill="rgb(225,116,31)"/><text x="633.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="630" y="436" width="1" height="15" fill="rgb(254,62,27)"/><text x="633.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="630" y="452" width="1" height="15" fill="rgb(243,210,42)"/><text x="633.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="630" y="468" width="1" height="15" fill="rgb(225,2,12)"/><text x="633.00" y="478.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="630" y="484" width="1" height="15" fill="rgb(229,11,27)"/><text x="633.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="631" y="356" width="2" height="15" fill="rgb(238,89,5)"/><text x="634.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="631" y="340" width="3" height="15" fill="rgb(230,127,50)"/><text x="634.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="633" y="356" width="1" height="15" fill="rgb(236,212,45)"/><text x="636.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="634" y="340" width="2" height="15" fill="rgb(206,34,7)"/><text x="637.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="634" y="356" width="2" height="15" fill="rgb(244,67,46)"/><text x="637.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="634" y="372" width="2" height="15" fill="rgb(219,152,5)"/><text x="637.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="634" y="388" width="2" height="15" fill="rgb(212,80,21)"/><text x="637.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="804" y="388" width="2" height="15" fill="rgb(243,122,9)"/><text x="807.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="804" y="404" width="2" height="15" fill="rgb(212,148,10)"/><text x="807.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="804" y="420" width="2" height="15" fill="rgb(247,119,50)"/><text x="807.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="804" y="436" width="2" height="15" fill="rgb(241,129,12)"/><text x="807.00" y="446.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="804" y="356" width="3" height="15" fill="rgb(219,59,5)"/><text x="807.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="804" y="372" width="3" height="15" fill="rgb(244,60,40)"/><text x="807.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOutputArgIndex (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="806" y="388" width="1" height="15" fill="rgb(251,203,11)"/><text x="809.00" y="398.50"></text></g><g><title>0x7f87343a9d97 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="816" y="372" width="2" height="15" fill="rgb(206,173,8)"/><text x="819.00" y="382.50"></text></g><g><title>0x7f87343a9db3 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="818" y="372" width="1" height="15" fill="rgb(205,184,35)"/><text x="821.00" y="382.50"></text></g><g><title>0x7f8734508e00 (libm-2.29.so) (3 samples, 0.37%)</title><rect x="819" y="372" width="5" height="15" fill="rgb(241,196,53)"/><text x="822.00" y="382.50"></text></g><g><title>0x7f8734508e17 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="824" y="372" width="1" height="15" fill="rgb(234,1,54)"/><text x="827.00" y="382.50"></text></g><g><title>0x7f8734508e2f (libm-2.29.so) (1 samples, 0.12%)</title><rect x="825" y="372" width="2" height="15" fill="rgb(219,222,19)"/><text x="828.00" y="382.50"></text></g><g><title>0x7f8734508e4e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="827" y="372" width="1" height="15" fill="rgb(253,186,46)"/><text x="830.00" y="382.50"></text></g><g><title>0x7f8734508e71 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="828" y="372" width="1" height="15" fill="rgb(205,89,20)"/><text x="831.00" y="382.50"></text></g><g><title>0x7f8734508e7a (libm-2.29.so) (1 samples, 0.12%)</title><rect x="829" y="372" width="2" height="15" fill="rgb(240,15,5)"/><text x="832.00" y="382.50"></text></g><g><title>0x7f8734508e9e (libm-2.29.so) (2 samples, 0.25%)</title><rect x="831" y="372" width="3" height="15" fill="rgb(215,84,51)"/><text x="834.00" y="382.50"></text></g><g><title>0x7f8734508ea2 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="834" y="372" width="1" height="15" fill="rgb(218,170,45)"/><text x="837.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (138 samples, 17.19%)</title><rect x="636" y="340" width="202" height="15" fill="rgb(214,10,28)"/><text x="639.00" y="350.50">onnxruntime::ml::LinearCla..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 2.62%)</title><rect x="807" y="356" width="31" height="15" fill="rgb(211,227,0)"/><text x="810.00" y="366.50">on..</text></g><g><title>0x7f8734508ea6 (libm-2.29.so) (2 samples, 0.25%)</title><rect x="835" y="372" width="3" height="15" fill="rgb(226,137,5)"/><text x="838.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.74%)</title><rect x="838" y="340" width="21" height="15" fill="rgb(244,65,50)"/><text x="841.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.74%)</title><rect x="838" y="356" width="21" height="15" fill="rgb(253,188,32)"/><text x="841.00" y="366.50"></text></g><g><title>0x7f86f4380930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="881" y="356" width="1" height="15" fill="rgb(235,37,15)"/><text x="884.00" y="366.50"></text></g><g><title>0x7f8723e55d50 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="884" y="372" width="1" height="15" fill="rgb(235,187,34)"/><text x="887.00" y="382.50"></text></g><g><title>0x7f873438ab1c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="931" y="388" width="1" height="15" fill="rgb(215,72,19)"/><text x="934.00" y="398.50"></text></g><g><title>0x7f873438ab24 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="932" y="388" width="2" height="15" fill="rgb(208,66,14)"/><text x="935.00" y="398.50"></text></g><g><title>0x7f873438ab61 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="934" y="388" width="1" height="15" fill="rgb(246,178,41)"/><text x="937.00" y="398.50"></text></g><g><title>0x7f873438ad54 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="935" y="388" width="2" height="15" fill="rgb(245,99,32)"/><text x="938.00" y="398.50"></text></g><g><title>0x7f873438ad67 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="937" y="388" width="1" height="15" fill="rgb(212,7,5)"/><text x="940.00" y="398.50"></text></g><g><title>0x7f873438ad81 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="938" y="388" width="2" height="15" fill="rgb(232,166,2)"/><text x="941.00" y="398.50"></text></g><g><title>0x7f873438ad8d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="940" y="388" width="1" height="15" fill="rgb(254,23,50)"/><text x="943.00" y="398.50"></text></g><g><title>0x7f873438adb4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="941" y="388" width="2" height="15" fill="rgb(243,166,12)"/><text x="944.00" y="398.50"></text></g><g><title>0x7f873438adec (libc-2.29.so) (1 samples, 0.12%)</title><rect x="943" y="388" width="1" height="15" fill="rgb(215,210,24)"/><text x="946.00" y="398.50"></text></g><g><title>0x7f873438af2a (libc-2.29.so) (3 samples, 0.37%)</title><rect x="944" y="388" width="5" height="15" fill="rgb(220,146,41)"/><text x="947.00" y="398.50"></text></g><g><title>0x7f873438afd2 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="949" y="388" width="1" height="15" fill="rgb(250,24,39)"/><text x="952.00" y="398.50"></text></g><g><title>0x7f873438afde (libc-2.29.so) (1 samples, 0.12%)</title><rect x="950" y="388" width="1" height="15" fill="rgb(218,106,42)"/><text x="953.00" y="398.50"></text></g><g><title>0x7f873438b08c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="951" y="388" width="2" height="15" fill="rgb(205,62,31)"/><text x="954.00" y="398.50"></text></g><g><title>0x7f873438b097 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="953" y="388" width="1" height="15" fill="rgb(240,27,42)"/><text x="956.00" y="398.50"></text></g><g><title>0x7f873438b0a3 (libc-2.29.so) (3 samples, 0.37%)</title><rect x="954" y="388" width="5" height="15" fill="rgb(236,31,27)"/><text x="957.00" y="398.50"></text></g><g><title>0x7f873438b368 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="959" y="388" width="1" height="15" fill="rgb(254,108,33)"/><text x="962.00" y="398.50"></text></g><g><title>0x7f873438b384 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="960" y="388" width="2" height="15" fill="rgb(242,141,51)"/><text x="963.00" y="398.50"></text></g><g><title>0x7f873438b395 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="962" y="388" width="1" height="15" fill="rgb(244,107,3)"/><text x="965.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (56 samples, 6.97%)</title><rect x="882" y="356" width="83" height="15" fill="rgb(253,179,36)"/><text x="885.00" y="366.50">operator ..</text></g><g><title>malloc (libc-2.29.so) (54 samples, 6.72%)</title><rect x="885" y="372" width="80" height="15" fill="rgb(209,121,15)"/><text x="888.00" y="382.50">malloc (l..</text></g><g><title>0x7f873438b3d1 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="963" y="388" width="2" height="15" fill="rgb(236,104,15)"/><text x="966.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="965" y="356" width="1" height="15" fill="rgb(246,206,13)"/><text x="968.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.00%)</title><rect x="966" y="356" width="12" height="15" fill="rgb(210,195,49)"/><text x="969.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (4 samples, 0.50%)</title><rect x="978" y="356" width="6" height="15" fill="rgb(235,69,0)"/><text x="981.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (243 samples, 30.26%)</title><rect x="628" y="308" width="357" height="15" fill="rgb(219,229,10)"/><text x="631.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntim..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (243 samples, 30.26%)</title><rect x="628" y="324" width="357" height="15" fill="rgb(232,171,8)"/><text x="631.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxru..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (86 samples, 10.71%)</title><rect x="859" y="340" width="126" height="15" fill="rgb(251,124,41)"/><text x="862.00" y="350.50">onnxruntime::ml..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="984" y="356" width="1" height="15" fill="rgb(227,117,3)"/><text x="987.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (245 samples, 30.51%)</title><rect x="627" y="276" width="360" height="15" fill="rgb(253,165,47)"/><text x="630.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (244 samples, 30.39%)</title><rect x="628" y="292" width="359" height="15" fill="rgb(245,54,35)"/><text x="631.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="985" y="308" width="2" height="15" fill="rgb(211,150,41)"/><text x="988.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="985" y="324" width="2" height="15" fill="rgb(220,108,11)"/><text x="988.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="985" y="340" width="2" height="15" fill="rgb(209,28,31)"/><text x="988.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (246 samples, 30.64%)</title><rect x="627" y="260" width="361" height="15" fill="rgb(225,78,11)"/><text x="630.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="987" y="276" width="1" height="15" fill="rgb(205,199,13)"/><text x="990.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.12%)</title><rect x="988" y="292" width="2" height="15" fill="rgb(248,152,5)"/><text x="991.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.12%)</title><rect x="988" y="308" width="2" height="15" fill="rgb(211,36,11)"/><text x="991.00" y="318.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.25%)</title><rect x="988" y="276" width="3" height="15" fill="rgb(219,175,34)"/><text x="991.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.12%)</title><rect x="990" y="292" width="1" height="15" fill="rgb(215,24,19)"/><text x="993.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.12%)</title><rect x="990" y="308" width="1" height="15" fill="rgb(221,212,24)"/><text x="993.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.12%)</title><rect x="990" y="324" width="1" height="15" fill="rgb(222,116,46)"/><text x="993.00" y="334.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.37%)</title><rect x="988" y="260" width="5" height="15" fill="rgb(239,198,14)"/><text x="991.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="991" y="276" width="2" height="15" fill="rgb(206,222,51)"/><text x="994.00" y="286.50"></text></g><g><title>0x7f86f4381870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1088" y="276" width="2" height="15" fill="rgb(232,106,13)"/><text x="1091.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 3.36%)</title><rect x="1090" y="276" width="39" height="15" fill="rgb(245,43,42)"/><text x="1093.00" y="286.50">pyb..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 11.96%)</title><rect x="993" y="260" width="141" height="15" fill="rgb(209,60,23)"/><text x="996.00" y="270.50">pybind11::detail:..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (3 samples, 0.37%)</title><rect x="1129" y="276" width="5" height="15" fill="rgb(239,75,25)"/><text x="1132.00" y="286.50"></text></g><g><title>0x7f8723e567a0 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1137" y="292" width="1" height="15" fill="rgb(235,102,34)"/><text x="1140.00" y="302.50"></text></g><g><title>0x7f8734389971 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1138" y="292" width="2" height="15" fill="rgb(229,222,12)"/><text x="1141.00" y="302.50"></text></g><g><title>0x7f873438999b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1140" y="292" width="1" height="15" fill="rgb(238,168,54)"/><text x="1143.00" y="302.50"></text></g><g><title>0x7f87343899b3 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1141" y="292" width="1" height="15" fill="rgb(216,96,44)"/><text x="1144.00" y="302.50"></text></g><g><title>0x7f8734389a33 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1142" y="292" width="2" height="15" fill="rgb(235,67,18)"/><text x="1145.00" y="302.50"></text></g><g><title>0x7f8734389a4b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1144" y="292" width="1" height="15" fill="rgb(234,47,4)"/><text x="1147.00" y="302.50"></text></g><g><title>0x7f8734389d07 (libc-2.29.so) (7 samples, 0.87%)</title><rect x="1145" y="292" width="11" height="15" fill="rgb(233,149,6)"/><text x="1148.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.50%)</title><rect x="1156" y="292" width="6" height="15" fill="rgb(243,83,41)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7f8723e567a0 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1165" y="308" width="1" height="15" fill="rgb(222,117,33)"/><text x="1168.00" y="318.50"></text></g><g><title>0x7f873438991e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1166" y="308" width="1" height="15" fill="rgb(221,23,10)"/><text x="1169.00" y="318.50"></text></g><g><title>0x7f8734389961 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1167" y="308" width="2" height="15" fill="rgb(226,2,40)"/><text x="1170.00" y="318.50"></text></g><g><title>0x7f8734389971 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1169" y="308" width="1" height="15" fill="rgb(223,63,35)"/><text x="1172.00" y="318.50"></text></g><g><title>0x7f873438997c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1170" y="308" width="2" height="15" fill="rgb(244,44,46)"/><text x="1173.00" y="318.50"></text></g><g><title>0x7f87343899d3 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1172" y="308" width="1" height="15" fill="rgb(245,166,10)"/><text x="1175.00" y="318.50"></text></g><g><title>0x7f87343899ed (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1173" y="308" width="2" height="15" fill="rgb(232,199,43)"/><text x="1176.00" y="318.50"></text></g><g><title>0x7f8734389a33 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1175" y="308" width="1" height="15" fill="rgb(216,221,39)"/><text x="1178.00" y="318.50"></text></g><g><title>0x7f8734389d07 (libc-2.29.so) (4 samples, 0.50%)</title><rect x="1176" y="308" width="6" height="15" fill="rgb(212,97,20)"/><text x="1179.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (389 samples, 48.44%)</title><rect x="612" y="164" width="572" height="15" fill="rgb(224,59,6)"/><text x="615.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (388 samples, 48.32%)</title><rect x="613" y="180" width="571" height="15" fill="rgb(227,211,39)"/><text x="616.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (385 samples, 47.95%)</title><rect x="618" y="196" width="566" height="15" fill="rgb(206,198,28)"/><text x="621.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (384 samples, 47.82%)</title><rect x="619" y="212" width="565" height="15" fill="rgb(207,159,47)"/><text x="622.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_sta..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (383 samples, 47.70%)</title><rect x="621" y="228" width="563" height="15" fill="rgb(216,7,44)"/><text x="624.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (383 samples, 47.70%)</title><rect x="621" y="244" width="563" height="15" fill="rgb(243,59,15)"/><text x="624.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 4.23%)</title><rect x="1134" y="260" width="50" height="15" fill="rgb(228,151,14)"/><text x="1137.00" y="270.50">std::..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 4.23%)</title><rect x="1134" y="276" width="50" height="15" fill="rgb(220,132,6)"/><text x="1137.00" y="286.50">onnxr..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.87%)</title><rect x="1162" y="292" width="22" height="15" fill="rgb(221,83,15)"/><text x="1165.00" y="302.50">s..</text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1182" y="308" width="2" height="15" fill="rgb(254,48,34)"/><text x="1185.00" y="318.50"></text></g><g><title>all (803 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(247,152,54)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:52) (447 samples, 55.67%)</title><rect x="533" y="52" width="657" height="15" fill="rgb(220,197,3)"/><text x="536.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:52)</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:51) (447 samples, 55.67%)</title><rect x="533" y="68" width="657" height="15" fill="rgb(238,186,43)"/><text x="536.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:29) (446 samples, 55.54%)</title><rect x="534" y="84" width="656" height="15" fill="rgb(223,108,21)"/><text x="537.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.p..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:23) (443 samples, 55.17%)</title><rect x="539" y="100" width="651" height="15" fill="rgb(239,152,14)"/><text x="542.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_50_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (396 samples, 49.32%)</title><rect x="608" y="116" width="582" height="15" fill="rgb(251,36,37)"/><text x="611.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (395 samples, 49.19%)</title><rect x="609" y="132" width="581" height="15" fill="rgb(245,57,44)"/><text x="612.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (394 samples, 49.07%)</title><rect x="611" y="148" width="579" height="15" fill="rgb(231,125,9)"/><text x="614.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 0.50%)</title><rect x="1184" y="164" width="6" height="15" fill="rgb(251,110,26)"/><text x="1187.00" y="174.50"></text></g></g></svg>