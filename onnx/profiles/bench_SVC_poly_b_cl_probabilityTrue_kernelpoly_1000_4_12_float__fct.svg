<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1590" onload="init(evt)" viewBox="0 0 1200 1590" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1590" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1573.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1573.00"> </text><g id="frames"><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(219,153,6)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(219,227,44)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(209,140,17)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.10%)</title><rect x="10" y="1028" width="1" height="15" fill="rgb(218,216,7)"/><text x="13.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.10%)</title><rect x="10" y="1044" width="1" height="15" fill="rgb(223,199,30)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.20%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(217,52,45)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.20%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(212,168,40)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.20%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(233,169,28)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.20%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(225,214,10)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(210,186,24)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(252,6,50)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(250,125,32)"/><text x="13.00" y="974.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(209,221,28)"/><text x="14.00" y="990.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="12" y="868" width="1" height="15" fill="rgb(223,120,30)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="12" y="884" width="1" height="15" fill="rgb(221,2,9)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="12" y="900" width="1" height="15" fill="rgb(235,225,41)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="12" y="916" width="1" height="15" fill="rgb(240,63,13)"/><text x="15.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="12" y="932" width="1" height="15" fill="rgb(221,76,11)"/><text x="15.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="12" y="948" width="1" height="15" fill="rgb(248,51,32)"/><text x="15.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="12" y="964" width="1" height="15" fill="rgb(229,111,19)"/><text x="15.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="12" y="980" width="1" height="15" fill="rgb(210,87,9)"/><text x="15.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="12" y="996" width="1" height="15" fill="rgb(249,181,51)"/><text x="15.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.10%)</title><rect x="12" y="1012" width="1" height="15" fill="rgb(254,11,36)"/><text x="15.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.10%)</title><rect x="12" y="1028" width="1" height="15" fill="rgb(223,18,28)"/><text x="15.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.10%)</title><rect x="12" y="1044" width="1" height="15" fill="rgb(211,183,52)"/><text x="15.00" y="1054.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.40%)</title><rect x="10" y="836" width="4" height="15" fill="rgb(234,75,54)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.40%)</title><rect x="10" y="852" width="4" height="15" fill="rgb(214,26,46)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="13" y="868" width="1" height="15" fill="rgb(249,172,23)"/><text x="16.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="13" y="884" width="1" height="15" fill="rgb(232,206,3)"/><text x="16.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="13" y="900" width="1" height="15" fill="rgb(228,165,54)"/><text x="16.00" y="910.50"></text></g><g><title>isdir (genericpath.py) (1 samples, 0.10%)</title><rect x="13" y="916" width="1" height="15" fill="rgb(207,46,17)"/><text x="16.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="196" width="5" height="15" fill="rgb(211,33,12)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="212" width="5" height="15" fill="rgb(234,2,8)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="228" width="5" height="15" fill="rgb(244,187,29)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(242,10,39)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.50%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(206,129,49)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(219,152,23)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 0.50%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(245,90,52)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(219,32,0)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(241,67,19)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(229,225,29)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.50%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(218,177,42)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(236,48,13)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 0.50%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(223,145,32)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(239,125,44)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(246,181,20)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(241,37,39)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.50%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(205,197,19)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(220,119,30)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 0.50%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(251,48,43)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(240,47,48)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(238,220,22)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(244,151,40)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.50%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(236,31,4)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(251,128,8)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 0.50%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(239,200,13)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(236,171,24)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(213,196,20)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(221,176,12)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(213,103,40)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(244,100,33)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(214,42,9)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.50%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(222,159,17)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(218,44,50)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 0.50%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(251,26,14)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(218,177,54)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(232,223,38)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(212,17,4)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.50%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(239,23,5)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(244,69,35)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 0.50%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(224,2,21)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="836" width="1" height="15" fill="rgb(218,40,15)"/><text x="17.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="852" width="1" height="15" fill="rgb(237,209,40)"/><text x="17.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="868" width="1" height="15" fill="rgb(234,41,27)"/><text x="17.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="14" y="884" width="1" height="15" fill="rgb(247,185,18)"/><text x="17.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="900" width="1" height="15" fill="rgb(235,97,45)"/><text x="17.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.10%)</title><rect x="14" y="916" width="1" height="15" fill="rgb(207,141,37)"/><text x="17.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.10%)</title><rect x="14" y="932" width="1" height="15" fill="rgb(208,40,27)"/><text x="17.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.10%)</title><rect x="14" y="948" width="1" height="15" fill="rgb(233,14,33)"/><text x="17.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.10%)</title><rect x="14" y="964" width="1" height="15" fill="rgb(228,77,14)"/><text x="17.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.10%)</title><rect x="14" y="980" width="1" height="15" fill="rgb(231,215,34)"/><text x="17.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="14" y="996" width="1" height="15" fill="rgb(214,215,20)"/><text x="17.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.10%)</title><rect x="14" y="1012" width="1" height="15" fill="rgb(226,177,17)"/><text x="17.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="14" y="1028" width="1" height="15" fill="rgb(240,70,29)"/><text x="17.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.10%)</title><rect x="14" y="1044" width="1" height="15" fill="rgb(219,97,23)"/><text x="17.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="14" y="1060" width="1" height="15" fill="rgb(207,135,39)"/><text x="17.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.10%)</title><rect x="14" y="1076" width="1" height="15" fill="rgb(252,99,42)"/><text x="17.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="14" y="1092" width="1" height="15" fill="rgb(230,101,4)"/><text x="17.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.10%)</title><rect x="14" y="1108" width="1" height="15" fill="rgb(241,0,54)"/><text x="17.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="14" y="1124" width="1" height="15" fill="rgb(242,226,31)"/><text x="17.00" y="1134.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.10%)</title><rect x="14" y="1140" width="1" height="15" fill="rgb(240,23,1)"/><text x="17.00" y="1150.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="14" y="1156" width="1" height="15" fill="rgb(206,148,25)"/><text x="17.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.10%)</title><rect x="15" y="340" width="2" height="15" fill="rgb(213,228,14)"/><text x="18.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="356" width="2" height="15" fill="rgb(248,155,41)"/><text x="18.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="372" width="2" height="15" fill="rgb(231,123,43)"/><text x="18.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="388" width="2" height="15" fill="rgb(253,30,52)"/><text x="18.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="15" y="404" width="2" height="15" fill="rgb(215,16,47)"/><text x="18.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="420" width="2" height="15" fill="rgb(209,174,23)"/><text x="18.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (1 samples, 0.10%)</title><rect x="15" y="436" width="2" height="15" fill="rgb(239,176,53)"/><text x="18.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="452" width="2" height="15" fill="rgb(225,46,6)"/><text x="18.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="468" width="2" height="15" fill="rgb(224,78,18)"/><text x="18.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="484" width="2" height="15" fill="rgb(251,207,10)"/><text x="18.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="15" y="500" width="2" height="15" fill="rgb(225,58,6)"/><text x="18.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="516" width="2" height="15" fill="rgb(214,69,31)"/><text x="18.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.10%)</title><rect x="15" y="532" width="2" height="15" fill="rgb(250,139,39)"/><text x="18.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="548" width="2" height="15" fill="rgb(230,185,43)"/><text x="18.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="564" width="2" height="15" fill="rgb(241,19,14)"/><text x="18.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="580" width="2" height="15" fill="rgb(241,161,37)"/><text x="18.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="15" y="596" width="2" height="15" fill="rgb(223,120,31)"/><text x="18.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="612" width="2" height="15" fill="rgb(222,149,45)"/><text x="18.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.10%)</title><rect x="15" y="628" width="2" height="15" fill="rgb(232,220,51)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="644" width="2" height="15" fill="rgb(232,17,39)"/><text x="18.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="660" width="2" height="15" fill="rgb(253,31,51)"/><text x="18.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="676" width="2" height="15" fill="rgb(205,117,9)"/><text x="18.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="15" y="692" width="2" height="15" fill="rgb(233,131,27)"/><text x="18.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="708" width="2" height="15" fill="rgb(234,163,3)"/><text x="18.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.10%)</title><rect x="15" y="724" width="2" height="15" fill="rgb(220,41,42)"/><text x="18.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="740" width="2" height="15" fill="rgb(212,72,52)"/><text x="18.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="756" width="2" height="15" fill="rgb(239,133,50)"/><text x="18.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="772" width="2" height="15" fill="rgb(231,55,14)"/><text x="18.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="15" y="788" width="2" height="15" fill="rgb(216,211,54)"/><text x="18.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="804" width="2" height="15" fill="rgb(233,171,46)"/><text x="18.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.10%)</title><rect x="15" y="820" width="2" height="15" fill="rgb(245,71,42)"/><text x="18.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="836" width="2" height="15" fill="rgb(223,195,40)"/><text x="18.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="852" width="2" height="15" fill="rgb(222,75,6)"/><text x="18.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="868" width="2" height="15" fill="rgb(239,81,3)"/><text x="18.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(249,63,45)"/><text x="18.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(205,143,48)"/><text x="18.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.10%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(237,60,29)"/><text x="18.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(234,32,46)"/><text x="18.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(247,91,19)"/><text x="18.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(213,166,50)"/><text x="18.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(249,227,15)"/><text x="18.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="996" width="2" height="15" fill="rgb(205,143,33)"/><text x="18.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.10%)</title><rect x="15" y="1012" width="2" height="15" fill="rgb(243,35,23)"/><text x="18.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="1028" width="2" height="15" fill="rgb(219,77,47)"/><text x="18.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="1044" width="2" height="15" fill="rgb(213,31,40)"/><text x="18.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="1060" width="2" height="15" fill="rgb(215,108,11)"/><text x="18.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="15" y="1076" width="2" height="15" fill="rgb(247,57,52)"/><text x="18.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="15" y="1092" width="2" height="15" fill="rgb(219,3,44)"/><text x="18.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="15" y="1108" width="2" height="15" fill="rgb(205,76,38)"/><text x="18.00" y="1118.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="868" width="1" height="15" fill="rgb(247,228,14)"/><text x="20.00" y="878.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="17" y="884" width="1" height="15" fill="rgb(227,94,22)"/><text x="20.00" y="894.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="17" y="900" width="1" height="15" fill="rgb(224,220,17)"/><text x="20.00" y="910.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="17" y="916" width="1" height="15" fill="rgb(231,222,29)"/><text x="20.00" y="926.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="17" y="932" width="1" height="15" fill="rgb(212,141,45)"/><text x="20.00" y="942.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="17" y="948" width="1" height="15" fill="rgb(210,122,8)"/><text x="20.00" y="958.50"></text></g><g><title>os_fspath (python3.7) (1 samples, 0.10%)</title><rect x="17" y="964" width="1" height="15" fill="rgb(249,121,10)"/><text x="20.00" y="974.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (2 samples, 0.20%)</title><rect x="17" y="580" width="2" height="15" fill="rgb(205,29,22)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="17" y="596" width="2" height="15" fill="rgb(227,164,32)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="17" y="612" width="2" height="15" fill="rgb(218,100,43)"/><text x="20.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="17" y="628" width="2" height="15" fill="rgb(224,89,54)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="17" y="644" width="2" height="15" fill="rgb(223,203,41)"/><text x="20.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="17" y="660" width="2" height="15" fill="rgb(238,95,30)"/><text x="20.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="17" y="676" width="2" height="15" fill="rgb(238,176,24)"/><text x="20.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="17" y="692" width="2" height="15" fill="rgb(222,156,33)"/><text x="20.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="17" y="708" width="2" height="15" fill="rgb(237,104,12)"/><text x="20.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (2 samples, 0.20%)</title><rect x="17" y="724" width="2" height="15" fill="rgb(246,14,35)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="17" y="740" width="2" height="15" fill="rgb(223,156,18)"/><text x="20.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="17" y="756" width="2" height="15" fill="rgb(250,96,50)"/><text x="20.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="17" y="772" width="2" height="15" fill="rgb(214,75,4)"/><text x="20.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="17" y="788" width="2" height="15" fill="rgb(218,171,31)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="17" y="804" width="2" height="15" fill="rgb(232,58,34)"/><text x="20.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (2 samples, 0.20%)</title><rect x="17" y="820" width="2" height="15" fill="rgb(247,70,40)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="17" y="836" width="2" height="15" fill="rgb(212,187,9)"/><text x="20.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="17" y="852" width="2" height="15" fill="rgb(217,137,26)"/><text x="20.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="868" width="1" height="15" fill="rgb(230,92,31)"/><text x="21.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="884" width="1" height="15" fill="rgb(253,106,16)"/><text x="21.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="900" width="1" height="15" fill="rgb(211,144,5)"/><text x="21.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.10%)</title><rect x="18" y="916" width="1" height="15" fill="rgb(213,220,38)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="932" width="1" height="15" fill="rgb(232,82,53)"/><text x="21.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="948" width="1" height="15" fill="rgb(232,5,38)"/><text x="21.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="964" width="1" height="15" fill="rgb(229,72,18)"/><text x="21.00" y="974.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="980" width="1" height="15" fill="rgb(254,63,37)"/><text x="21.00" y="990.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="996" width="1" height="15" fill="rgb(208,130,24)"/><text x="21.00" y="1006.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1012" width="1" height="15" fill="rgb(210,103,49)"/><text x="21.00" y="1022.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="1028" width="1" height="15" fill="rgb(212,182,14)"/><text x="21.00" y="1038.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="1044" width="1" height="15" fill="rgb(217,211,28)"/><text x="21.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="788" width="1" height="15" fill="rgb(224,202,21)"/><text x="22.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="804" width="1" height="15" fill="rgb(251,122,49)"/><text x="22.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="820" width="1" height="15" fill="rgb(229,191,8)"/><text x="22.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="836" width="1" height="15" fill="rgb(223,199,23)"/><text x="22.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="852" width="1" height="15" fill="rgb(235,75,12)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.10%)</title><rect x="19" y="868" width="1" height="15" fill="rgb(207,161,35)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="884" width="1" height="15" fill="rgb(232,90,38)"/><text x="22.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="900" width="1" height="15" fill="rgb(209,137,54)"/><text x="22.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="916" width="1" height="15" fill="rgb(218,62,48)"/><text x="22.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="932" width="1" height="15" fill="rgb(215,128,0)"/><text x="22.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="948" width="1" height="15" fill="rgb(206,47,25)"/><text x="22.00" y="958.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="964" width="1" height="15" fill="rgb(214,45,26)"/><text x="22.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="948" width="1" height="15" fill="rgb(224,24,8)"/><text x="23.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="964" width="1" height="15" fill="rgb(253,183,34)"/><text x="23.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="980" width="1" height="15" fill="rgb(209,157,49)"/><text x="23.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="996" width="1" height="15" fill="rgb(224,135,13)"/><text x="23.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1012" width="1" height="15" fill="rgb(237,61,17)"/><text x="23.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1028" width="1" height="15" fill="rgb(220,47,29)"/><text x="23.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.10%)</title><rect x="20" y="1044" width="1" height="15" fill="rgb(213,133,27)"/><text x="23.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1060" width="1" height="15" fill="rgb(247,206,50)"/><text x="23.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1076" width="1" height="15" fill="rgb(246,145,21)"/><text x="23.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1092" width="1" height="15" fill="rgb(225,159,0)"/><text x="23.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1108" width="1" height="15" fill="rgb(227,89,50)"/><text x="23.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1124" width="1" height="15" fill="rgb(231,54,42)"/><text x="23.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1140" width="1" height="15" fill="rgb(215,181,36)"/><text x="23.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1156" width="1" height="15" fill="rgb(214,104,15)"/><text x="23.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.10%)</title><rect x="20" y="1172" width="1" height="15" fill="rgb(213,104,50)"/><text x="23.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1188" width="1" height="15" fill="rgb(244,182,4)"/><text x="23.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1204" width="1" height="15" fill="rgb(206,113,21)"/><text x="23.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1220" width="1" height="15" fill="rgb(249,196,52)"/><text x="23.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1236" width="1" height="15" fill="rgb(211,108,5)"/><text x="23.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1252" width="1" height="15" fill="rgb(205,115,43)"/><text x="23.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1268" width="1" height="15" fill="rgb(234,182,26)"/><text x="23.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1284" width="1" height="15" fill="rgb(229,4,16)"/><text x="23.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py) (1 samples, 0.10%)</title><rect x="20" y="1300" width="1" height="15" fill="rgb(252,143,35)"/><text x="23.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1316" width="1" height="15" fill="rgb(208,58,30)"/><text x="23.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1332" width="1" height="15" fill="rgb(221,107,33)"/><text x="23.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1348" width="1" height="15" fill="rgb(219,219,24)"/><text x="23.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1364" width="1" height="15" fill="rgb(241,86,21)"/><text x="23.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1380" width="1" height="15" fill="rgb(206,173,45)"/><text x="23.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py) (1 samples, 0.10%)</title><rect x="20" y="1396" width="1" height="15" fill="rgb(213,25,3)"/><text x="23.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1412" width="1" height="15" fill="rgb(210,10,11)"/><text x="23.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1428" width="1" height="15" fill="rgb(249,205,29)"/><text x="23.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1444" width="1" height="15" fill="rgb(213,122,0)"/><text x="23.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1460" width="1" height="15" fill="rgb(206,135,23)"/><text x="23.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1476" width="1" height="15" fill="rgb(227,25,36)"/><text x="23.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1492" width="1" height="15" fill="rgb(212,31,40)"/><text x="23.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1508" width="1" height="15" fill="rgb(230,179,0)"/><text x="23.00" y="1518.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1524" width="1" height="15" fill="rgb(230,50,48)"/><text x="23.00" y="1534.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1540" width="1" height="15" fill="rgb(235,88,50)"/><text x="23.00" y="1550.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 0.59%)</title><rect x="15" y="244" width="7" height="15" fill="rgb(251,19,24)"/><text x="18.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="15" y="260" width="7" height="15" fill="rgb(235,177,48)"/><text x="18.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="15" y="276" width="7" height="15" fill="rgb(217,162,13)"/><text x="18.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="15" y="292" width="7" height="15" fill="rgb(229,69,14)"/><text x="18.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.59%)</title><rect x="15" y="308" width="7" height="15" fill="rgb(228,43,24)"/><text x="18.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="15" y="324" width="7" height="15" fill="rgb(231,14,46)"/><text x="18.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (5 samples, 0.50%)</title><rect x="17" y="340" width="5" height="15" fill="rgb(216,91,49)"/><text x="20.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="17" y="356" width="5" height="15" fill="rgb(251,39,26)"/><text x="20.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="17" y="372" width="5" height="15" fill="rgb(252,86,39)"/><text x="20.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="17" y="388" width="5" height="15" fill="rgb(209,206,11)"/><text x="20.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="17" y="404" width="5" height="15" fill="rgb(211,40,45)"/><text x="20.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="17" y="420" width="5" height="15" fill="rgb(207,91,3)"/><text x="20.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="17" y="436" width="5" height="15" fill="rgb(227,55,26)"/><text x="20.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.50%)</title><rect x="17" y="452" width="5" height="15" fill="rgb(243,132,5)"/><text x="20.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="17" y="468" width="5" height="15" fill="rgb(221,126,21)"/><text x="20.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (5 samples, 0.50%)</title><rect x="17" y="484" width="5" height="15" fill="rgb(206,60,51)"/><text x="20.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="17" y="500" width="5" height="15" fill="rgb(218,63,9)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="17" y="516" width="5" height="15" fill="rgb(239,7,32)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="17" y="532" width="5" height="15" fill="rgb(224,24,0)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.50%)</title><rect x="17" y="548" width="5" height="15" fill="rgb(253,9,9)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.50%)</title><rect x="17" y="564" width="5" height="15" fill="rgb(234,62,37)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (3 samples, 0.30%)</title><rect x="19" y="580" width="3" height="15" fill="rgb(231,123,34)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.30%)</title><rect x="19" y="596" width="3" height="15" fill="rgb(231,43,9)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.30%)</title><rect x="19" y="612" width="3" height="15" fill="rgb(234,54,17)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.30%)</title><rect x="19" y="628" width="3" height="15" fill="rgb(253,92,19)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.30%)</title><rect x="19" y="644" width="3" height="15" fill="rgb(250,38,30)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.30%)</title><rect x="19" y="660" width="3" height="15" fill="rgb(246,181,21)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (3 samples, 0.30%)</title><rect x="19" y="676" width="3" height="15" fill="rgb(226,95,9)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.30%)</title><rect x="19" y="692" width="3" height="15" fill="rgb(243,76,30)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.30%)</title><rect x="19" y="708" width="3" height="15" fill="rgb(248,23,27)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.30%)</title><rect x="19" y="724" width="3" height="15" fill="rgb(236,157,17)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.30%)</title><rect x="19" y="740" width="3" height="15" fill="rgb(234,77,25)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.30%)</title><rect x="19" y="756" width="3" height="15" fill="rgb(234,2,54)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (3 samples, 0.30%)</title><rect x="19" y="772" width="3" height="15" fill="rgb(227,135,33)"/><text x="22.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="20" y="788" width="2" height="15" fill="rgb(243,188,34)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="20" y="804" width="2" height="15" fill="rgb(247,141,17)"/><text x="23.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="20" y="820" width="2" height="15" fill="rgb(219,150,12)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="20" y="836" width="2" height="15" fill="rgb(235,31,11)"/><text x="23.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="20" y="852" width="2" height="15" fill="rgb(210,54,21)"/><text x="23.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="20" y="868" width="2" height="15" fill="rgb(232,10,11)"/><text x="23.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="20" y="884" width="2" height="15" fill="rgb(241,60,2)"/><text x="23.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (2 samples, 0.20%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(233,7,37)"/><text x="23.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(232,79,28)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(208,212,44)"/><text x="23.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="948" width="1" height="15" fill="rgb(242,161,45)"/><text x="24.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="964" width="1" height="15" fill="rgb(248,22,14)"/><text x="24.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="980" width="1" height="15" fill="rgb(225,1,24)"/><text x="24.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.10%)</title><rect x="21" y="996" width="1" height="15" fill="rgb(227,141,9)"/><text x="24.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1012" width="1" height="15" fill="rgb(247,11,46)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1028" width="1" height="15" fill="rgb(232,171,11)"/><text x="24.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1044" width="1" height="15" fill="rgb(218,186,14)"/><text x="24.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1060" width="1" height="15" fill="rgb(216,61,13)"/><text x="24.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1076" width="1" height="15" fill="rgb(253,90,46)"/><text x="24.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.10%)</title><rect x="21" y="1092" width="1" height="15" fill="rgb(217,187,7)"/><text x="24.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1108" width="1" height="15" fill="rgb(228,43,25)"/><text x="24.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1124" width="1" height="15" fill="rgb(223,170,30)"/><text x="24.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1140" width="1" height="15" fill="rgb(215,21,27)"/><text x="24.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1156" width="1" height="15" fill="rgb(252,5,51)"/><text x="24.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1172" width="1" height="15" fill="rgb(232,177,35)"/><text x="24.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/x25519.py) (1 samples, 0.10%)</title><rect x="21" y="1188" width="1" height="15" fill="rgb(216,135,7)"/><text x="24.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.10%)</title><rect x="21" y="1204" width="1" height="15" fill="rgb(206,89,53)"/><text x="24.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.10%)</title><rect x="21" y="1220" width="1" height="15" fill="rgb(217,63,47)"/><text x="24.00" y="1230.50"></text></g><g><title>__eq__ (inspect.py) (1 samples, 0.10%)</title><rect x="21" y="1236" width="1" height="15" fill="rgb(217,112,46)"/><text x="24.00" y="1246.50"></text></g><g><title>_hash_basis (inspect.py) (1 samples, 0.10%)</title><rect x="21" y="1252" width="1" height="15" fill="rgb(212,46,34)"/><text x="24.00" y="1262.50"></text></g><g><title>&lt;dictcomp&gt; (inspect.py) (1 samples, 0.10%)</title><rect x="21" y="1268" width="1" height="15" fill="rgb(248,109,10)"/><text x="24.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="676" width="2" height="15" fill="rgb(221,188,7)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="692" width="2" height="15" fill="rgb(220,105,25)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="708" width="2" height="15" fill="rgb(222,106,18)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="724" width="2" height="15" fill="rgb(220,226,16)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="22" y="740" width="2" height="15" fill="rgb(212,195,44)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="756" width="2" height="15" fill="rgb(236,28,23)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.10%)</title><rect x="22" y="772" width="2" height="15" fill="rgb(237,122,54)"/><text x="25.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="788" width="2" height="15" fill="rgb(245,58,24)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="804" width="2" height="15" fill="rgb(221,166,53)"/><text x="25.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="820" width="2" height="15" fill="rgb(228,219,45)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="836" width="2" height="15" fill="rgb(232,185,42)"/><text x="25.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="852" width="2" height="15" fill="rgb(217,158,21)"/><text x="25.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="22" y="868" width="2" height="15" fill="rgb(220,23,8)"/><text x="25.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="884" width="2" height="15" fill="rgb(247,11,53)"/><text x="25.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.10%)</title><rect x="22" y="900" width="2" height="15" fill="rgb(253,51,35)"/><text x="25.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="916" width="2" height="15" fill="rgb(227,124,32)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="932" width="2" height="15" fill="rgb(212,195,32)"/><text x="25.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="948" width="2" height="15" fill="rgb(251,163,19)"/><text x="25.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="22" y="964" width="2" height="15" fill="rgb(230,62,14)"/><text x="25.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="980" width="2" height="15" fill="rgb(211,225,17)"/><text x="25.00" y="990.50"></text></g><g><title>&lt;module&gt; (pathlib.py) (1 samples, 0.10%)</title><rect x="22" y="996" width="2" height="15" fill="rgb(213,68,28)"/><text x="25.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1012" width="2" height="15" fill="rgb(244,162,53)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1028" width="2" height="15" fill="rgb(232,73,48)"/><text x="25.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1044" width="2" height="15" fill="rgb(254,217,12)"/><text x="25.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="22" y="1060" width="2" height="15" fill="rgb(214,183,28)"/><text x="25.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1076" width="2" height="15" fill="rgb(240,22,17)"/><text x="25.00" y="1086.50"></text></g><g><title>&lt;module&gt; (urllib/parse.py) (1 samples, 0.10%)</title><rect x="22" y="1092" width="2" height="15" fill="rgb(217,203,51)"/><text x="25.00" y="1102.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.10%)</title><rect x="22" y="1108" width="2" height="15" fill="rgb(206,61,10)"/><text x="25.00" y="1118.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.20%)</title><rect x="22" y="372" width="3" height="15" fill="rgb(233,94,36)"/><text x="25.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="22" y="388" width="3" height="15" fill="rgb(212,109,24)"/><text x="25.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="22" y="404" width="3" height="15" fill="rgb(238,223,30)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="22" y="420" width="3" height="15" fill="rgb(234,100,21)"/><text x="25.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="22" y="436" width="3" height="15" fill="rgb(221,47,25)"/><text x="25.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="22" y="452" width="3" height="15" fill="rgb(218,51,54)"/><text x="25.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="22" y="468" width="3" height="15" fill="rgb(220,221,22)"/><text x="25.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="22" y="484" width="3" height="15" fill="rgb(216,167,1)"/><text x="25.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (2 samples, 0.20%)</title><rect x="22" y="500" width="3" height="15" fill="rgb(207,174,15)"/><text x="25.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="22" y="516" width="3" height="15" fill="rgb(254,224,27)"/><text x="25.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="22" y="532" width="3" height="15" fill="rgb(223,105,18)"/><text x="25.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="22" y="548" width="3" height="15" fill="rgb(220,3,17)"/><text x="25.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="22" y="564" width="3" height="15" fill="rgb(205,178,38)"/><text x="25.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="22" y="580" width="3" height="15" fill="rgb(211,138,34)"/><text x="25.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="22" y="596" width="3" height="15" fill="rgb(253,55,41)"/><text x="25.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="22" y="612" width="3" height="15" fill="rgb(220,209,31)"/><text x="25.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (2 samples, 0.20%)</title><rect x="22" y="628" width="3" height="15" fill="rgb(249,149,19)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="22" y="644" width="3" height="15" fill="rgb(247,212,44)"/><text x="25.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="22" y="660" width="3" height="15" fill="rgb(216,132,4)"/><text x="25.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="676" width="1" height="15" fill="rgb(205,46,15)"/><text x="27.00" y="686.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="692" width="1" height="15" fill="rgb(246,7,17)"/><text x="27.00" y="702.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="708" width="1" height="15" fill="rgb(220,177,39)"/><text x="27.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="724" width="1" height="15" fill="rgb(209,141,39)"/><text x="27.00" y="734.50"></text></g><g><title>0x7fdccf4171ca (?) (1 samples, 0.10%)</title><rect x="24" y="740" width="1" height="15" fill="rgb(236,0,31)"/><text x="27.00" y="750.50"></text></g><g><title>0x7fdccf37fc52 (?) (1 samples, 0.10%)</title><rect x="24" y="756" width="1" height="15" fill="rgb(244,79,20)"/><text x="27.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="772" width="1" height="15" fill="rgb(253,114,5)"/><text x="27.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="788" width="1" height="15" fill="rgb(223,142,15)"/><text x="27.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="804" width="1" height="15" fill="rgb(238,214,23)"/><text x="27.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="820" width="1" height="15" fill="rgb(207,225,17)"/><text x="27.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="836" width="1" height="15" fill="rgb(208,119,28)"/><text x="27.00" y="846.50"></text></g><g><title>&lt;module&gt; (datetime.py) (1 samples, 0.10%)</title><rect x="24" y="852" width="1" height="15" fill="rgb(232,125,14)"/><text x="27.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="868" width="1" height="15" fill="rgb(252,49,52)"/><text x="27.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="884" width="1" height="15" fill="rgb(213,92,43)"/><text x="27.00" y="894.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="900" width="1" height="15" fill="rgb(218,222,52)"/><text x="27.00" y="910.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="916" width="1" height="15" fill="rgb(249,84,29)"/><text x="27.00" y="926.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="932" width="1" height="15" fill="rgb(230,72,48)"/><text x="27.00" y="942.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="948" width="1" height="15" fill="rgb(220,45,25)"/><text x="27.00" y="958.50"></text></g><g><title>__init__ (numpy/lib/index_tricks.py) (1 samples, 0.10%)</title><rect x="25" y="484" width="1" height="15" fill="rgb(211,189,29)"/><text x="28.00" y="494.50"></text></g><g><title>__init__ (numpy/lib/index_tricks.py) (1 samples, 0.10%)</title><rect x="25" y="500" width="1" height="15" fill="rgb(223,173,48)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.49%)</title><rect x="10" y="68" width="17" height="15" fill="rgb(210,211,54)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.49%)</title><rect x="10" y="84" width="17" height="15" fill="rgb(226,40,29)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.49%)</title><rect x="10" y="100" width="17" height="15" fill="rgb(243,6,33)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 1.49%)</title><rect x="10" y="116" width="17" height="15" fill="rgb(221,195,6)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.49%)</title><rect x="10" y="132" width="17" height="15" fill="rgb(231,20,31)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_b_cl_probabilityTrue_kernelpoly.py) (15 samples, 1.49%)</title><rect x="10" y="148" width="17" height="15" fill="rgb(234,192,30)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.49%)</title><rect x="10" y="164" width="17" height="15" fill="rgb(235,200,36)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.49%)</title><rect x="10" y="180" width="17" height="15" fill="rgb(216,203,16)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 0.99%)</title><rect x="15" y="196" width="12" height="15" fill="rgb(234,200,6)"/><text x="18.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 0.99%)</title><rect x="15" y="212" width="12" height="15" fill="rgb(221,103,5)"/><text x="18.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 0.99%)</title><rect x="15" y="228" width="12" height="15" fill="rgb(210,113,30)"/><text x="18.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (4 samples, 0.40%)</title><rect x="22" y="244" width="5" height="15" fill="rgb(226,152,29)"/><text x="25.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.40%)</title><rect x="22" y="260" width="5" height="15" fill="rgb(233,129,45)"/><text x="25.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.40%)</title><rect x="22" y="276" width="5" height="15" fill="rgb(215,121,19)"/><text x="25.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.40%)</title><rect x="22" y="292" width="5" height="15" fill="rgb(225,69,25)"/><text x="25.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.40%)</title><rect x="22" y="308" width="5" height="15" fill="rgb(241,17,25)"/><text x="25.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.40%)</title><rect x="22" y="324" width="5" height="15" fill="rgb(212,84,39)"/><text x="25.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.40%)</title><rect x="22" y="340" width="5" height="15" fill="rgb(225,163,42)"/><text x="25.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.40%)</title><rect x="22" y="356" width="5" height="15" fill="rgb(238,172,27)"/><text x="25.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (2 samples, 0.20%)</title><rect x="25" y="372" width="2" height="15" fill="rgb(254,99,32)"/><text x="28.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="25" y="388" width="2" height="15" fill="rgb(247,117,13)"/><text x="28.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="25" y="404" width="2" height="15" fill="rgb(229,125,47)"/><text x="28.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="25" y="420" width="2" height="15" fill="rgb(236,35,26)"/><text x="28.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="25" y="436" width="2" height="15" fill="rgb(254,56,43)"/><text x="28.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="25" y="452" width="2" height="15" fill="rgb(221,131,38)"/><text x="28.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (2 samples, 0.20%)</title><rect x="25" y="468" width="2" height="15" fill="rgb(234,119,45)"/><text x="28.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="484" width="1" height="15" fill="rgb(236,215,35)"/><text x="29.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="500" width="1" height="15" fill="rgb(252,89,44)"/><text x="29.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="516" width="1" height="15" fill="rgb(219,113,53)"/><text x="29.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="532" width="1" height="15" fill="rgb(230,24,49)"/><text x="29.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="548" width="1" height="15" fill="rgb(254,96,24)"/><text x="29.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py) (1 samples, 0.10%)</title><rect x="26" y="564" width="1" height="15" fill="rgb(215,183,23)"/><text x="29.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="580" width="1" height="15" fill="rgb(247,126,17)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="596" width="1" height="15" fill="rgb(247,197,46)"/><text x="29.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="612" width="1" height="15" fill="rgb(251,105,37)"/><text x="29.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="628" width="1" height="15" fill="rgb(211,40,16)"/><text x="29.00" y="638.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="644" width="1" height="15" fill="rgb(235,131,39)"/><text x="29.00" y="654.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="660" width="1" height="15" fill="rgb(222,178,16)"/><text x="29.00" y="670.50"></text></g><g><title>unicode_compare (python3.7) (1 samples, 0.10%)</title><rect x="26" y="676" width="1" height="15" fill="rgb(237,47,26)"/><text x="29.00" y="686.50"></text></g><g><title>0x7fdcd01cf73f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="26" y="692" width="1" height="15" fill="rgb(221,223,18)"/><text x="29.00" y="702.50"></text></g><g><title>0x7fdcd00efbc6 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="42" y="132" width="1" height="15" fill="rgb(226,178,54)"/><text x="45.00" y="142.50"></text></g><g><title>0x7fdcd00f0eb0 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="42" y="116" width="3" height="15" fill="rgb(247,178,31)"/><text x="45.00" y="126.50"></text></g><g><title>0x7fdcd00efc19 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="43" y="132" width="2" height="15" fill="rgb(248,70,32)"/><text x="46.00" y="142.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="46" y="292" width="1" height="15" fill="rgb(229,77,38)"/><text x="49.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="46" y="308" width="1" height="15" fill="rgb(231,14,10)"/><text x="49.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="46" y="324" width="1" height="15" fill="rgb(233,51,25)"/><text x="49.00" y="334.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="47" y="340" width="1" height="15" fill="rgb(239,179,34)"/><text x="50.00" y="350.50"></text></g><g><title>0x7fdc90127ce0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="137" y="356" width="1" height="15" fill="rgb(228,128,8)"/><text x="140.00" y="366.50"></text></g><g><title>0x7fdcd00f091e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="138" y="356" width="1" height="15" fill="rgb(205,157,10)"/><text x="141.00" y="366.50"></text></g><g><title>0x7fdcd00f0998 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="139" y="356" width="1" height="15" fill="rgb(214,107,48)"/><text x="142.00" y="366.50"></text></g><g><title>0x7fdcd00f0a41 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="140" y="356" width="3" height="15" fill="rgb(223,200,44)"/><text x="143.00" y="366.50"></text></g><g><title>0x7fdcd00f0a4d (libc-2.29.so) (1 samples, 0.10%)</title><rect x="143" y="356" width="1" height="15" fill="rgb(245,1,36)"/><text x="146.00" y="366.50"></text></g><g><title>0x7fdcd00f0bc0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="144" y="356" width="1" height="15" fill="rgb(228,80,15)"/><text x="147.00" y="366.50"></text></g><g><title>0x7fdcd00f0be4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="145" y="356" width="1" height="15" fill="rgb(238,227,3)"/><text x="148.00" y="366.50"></text></g><g><title>0x7fdcd011116d (libc-2.29.so) (1 samples, 0.10%)</title><rect x="146" y="356" width="1" height="15" fill="rgb(240,163,48)"/><text x="149.00" y="366.50"></text></g><g><title>0x7fdcd026fe00 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="147" y="356" width="2" height="15" fill="rgb(231,129,42)"/><text x="150.00" y="366.50"></text></g><g><title>0x7fdcd026fe27 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="149" y="356" width="1" height="15" fill="rgb(239,38,38)"/><text x="152.00" y="366.50"></text></g><g><title>0x7fdcd026fe57 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="150" y="356" width="1" height="15" fill="rgb(205,1,18)"/><text x="153.00" y="366.50"></text></g><g><title>0x7fdcd026fe71 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="151" y="356" width="1" height="15" fill="rgb(212,92,12)"/><text x="154.00" y="366.50"></text></g><g><title>0x7fdcd026fe7e (libm-2.29.so) (1 samples, 0.10%)</title><rect x="152" y="356" width="1" height="15" fill="rgb(250,153,19)"/><text x="155.00" y="366.50"></text></g><g><title>0x7fdcd026fea2 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="153" y="356" width="1" height="15" fill="rgb(222,92,11)"/><text x="156.00" y="366.50"></text></g><g><title>0x7fdcd026fea6 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="154" y="356" width="2" height="15" fill="rgb(241,14,19)"/><text x="157.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="156" y="356" width="1" height="15" fill="rgb(218,146,24)"/><text x="159.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="156" y="372" width="1" height="15" fill="rgb(205,218,30)"/><text x="159.00" y="382.50"></text></g><g><title>0x7fdc901280f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="215" y="372" width="1" height="15" fill="rgb(232,88,37)"/><text x="218.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="216" y="372" width="1" height="15" fill="rgb(236,15,3)"/><text x="219.00" y="382.50"></text></g><g><title>0x7fdcbfbbd7a0 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="222" y="388" width="1" height="15" fill="rgb(224,141,3)"/><text x="225.00" y="398.50"></text></g><g><title>0x7fdcd00f090e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="223" y="388" width="1" height="15" fill="rgb(233,64,43)"/><text x="226.00" y="398.50"></text></g><g><title>0x7fdcd00f0922 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="224" y="388" width="2" height="15" fill="rgb(209,29,8)"/><text x="227.00" y="398.50"></text></g><g><title>0x7fdcd00f0971 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="226" y="388" width="1" height="15" fill="rgb(209,135,53)"/><text x="229.00" y="398.50"></text></g><g><title>0x7fdcd00f097c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="227" y="388" width="1" height="15" fill="rgb(217,72,50)"/><text x="230.00" y="398.50"></text></g><g><title>0x7fdcd00f0982 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="228" y="388" width="1" height="15" fill="rgb(243,71,5)"/><text x="231.00" y="398.50"></text></g><g><title>0x7fdcd00f0a4d (libc-2.29.so) (1 samples, 0.10%)</title><rect x="229" y="388" width="1" height="15" fill="rgb(229,138,30)"/><text x="232.00" y="398.50"></text></g><g><title>0x7fdcd00f0bc0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="230" y="388" width="1" height="15" fill="rgb(239,12,54)"/><text x="233.00" y="398.50"></text></g><g><title>0x7fdcd00f0be4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="231" y="388" width="2" height="15" fill="rgb(252,76,27)"/><text x="234.00" y="398.50"></text></g><g><title>0x7fdcd00f0be8 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="233" y="388" width="1" height="15" fill="rgb(242,26,40)"/><text x="236.00" y="398.50"></text></g><g><title>0x7fdcd0110d97 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="234" y="388" width="1" height="15" fill="rgb(208,117,37)"/><text x="237.00" y="398.50"></text></g><g><title>0x7fdcd0110dbf (libc-2.29.so) (1 samples, 0.10%)</title><rect x="235" y="388" width="1" height="15" fill="rgb(232,158,43)"/><text x="238.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (8 samples, 0.79%)</title><rect x="236" y="388" width="9" height="15" fill="rgb(207,128,52)"/><text x="239.00" y="398.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.20%)</title><rect x="245" y="388" width="3" height="15" fill="rgb(220,28,21)"/><text x="248.00" y="398.50"></text></g><g><title>0x7fdcbfbbcd50 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="251" y="404" width="2" height="15" fill="rgb(224,102,8)"/><text x="254.00" y="414.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (90 samples, 8.91%)</title><rect x="157" y="356" width="105" height="15" fill="rgb(231,21,45)"/><text x="160.00" y="366.50">onnxruntime:..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (38 samples, 3.76%)</title><rect x="217" y="372" width="45" height="15" fill="rgb(227,195,4)"/><text x="220.00" y="382.50">std:..</text></g><g><title>operator new (libstdc++.so.6.0.28) (12 samples, 1.19%)</title><rect x="248" y="388" width="14" height="15" fill="rgb(207,168,19)"/><text x="251.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (8 samples, 0.79%)</title><rect x="253" y="404" width="9" height="15" fill="rgb(210,49,0)"/><text x="256.00" y="414.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="262" y="356" width="2" height="15" fill="rgb(234,68,37)"/><text x="265.00" y="366.50"></text></g><g><title>0x7fdcd0110dbb (libc-2.29.so) (1 samples, 0.10%)</title><rect x="263" y="372" width="1" height="15" fill="rgb(231,126,22)"/><text x="266.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.50%)</title><rect x="264" y="356" width="6" height="15" fill="rgb(218,19,4)"/><text x="267.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.30%)</title><rect x="267" y="372" width="3" height="15" fill="rgb(237,218,0)"/><text x="270.00" y="382.50"></text></g><g><title>0x7fdcd025ab20 (libm-2.29.so) (4 samples, 0.40%)</title><rect x="297" y="372" width="5" height="15" fill="rgb(242,22,22)"/><text x="300.00" y="382.50"></text></g><g><title>0x7fdcd025ab2e (libm-2.29.so) (2 samples, 0.20%)</title><rect x="302" y="372" width="2" height="15" fill="rgb(227,142,18)"/><text x="305.00" y="382.50"></text></g><g><title>0x7fdcd025ab44 (libm-2.29.so) (2 samples, 0.20%)</title><rect x="304" y="372" width="2" height="15" fill="rgb(224,181,28)"/><text x="307.00" y="382.50"></text></g><g><title>0x7fdcd025ab56 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="306" y="372" width="1" height="15" fill="rgb(206,86,23)"/><text x="309.00" y="382.50"></text></g><g><title>0x7fdcd025ab6e (libm-2.29.so) (1 samples, 0.10%)</title><rect x="307" y="372" width="2" height="15" fill="rgb(229,205,50)"/><text x="310.00" y="382.50"></text></g><g><title>0x7fdcd025abaf (libm-2.29.so) (2 samples, 0.20%)</title><rect x="309" y="372" width="2" height="15" fill="rgb(215,57,38)"/><text x="312.00" y="382.50"></text></g><g><title>0x7fdcd025abbe (libm-2.29.so) (2 samples, 0.20%)</title><rect x="311" y="372" width="2" height="15" fill="rgb(231,144,25)"/><text x="314.00" y="382.50"></text></g><g><title>0x7fdcd025abe9 (libm-2.29.so) (3 samples, 0.30%)</title><rect x="313" y="372" width="4" height="15" fill="rgb(212,138,23)"/><text x="316.00" y="382.50"></text></g><g><title>0x7fdcd025abec (libm-2.29.so) (2 samples, 0.20%)</title><rect x="317" y="372" width="2" height="15" fill="rgb(213,42,23)"/><text x="320.00" y="382.50"></text></g><g><title>0x7fdcd025abf8 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="319" y="372" width="1" height="15" fill="rgb(236,146,32)"/><text x="322.00" y="382.50"></text></g><g><title>0x7fdcd025abfc (libm-2.29.so) (2 samples, 0.20%)</title><rect x="320" y="372" width="3" height="15" fill="rgb(229,52,45)"/><text x="323.00" y="382.50"></text></g><g><title>0x7fdcd025ac00 (libm-2.29.so) (3 samples, 0.30%)</title><rect x="323" y="372" width="3" height="15" fill="rgb(222,49,24)"/><text x="326.00" y="382.50"></text></g><g><title>0x7fdcd025ac10 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="326" y="372" width="1" height="15" fill="rgb(244,75,20)"/><text x="329.00" y="382.50"></text></g><g><title>0x7fdcd025ac25 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="327" y="372" width="1" height="15" fill="rgb(228,170,30)"/><text x="330.00" y="382.50"></text></g><g><title>0x7fdcd025ac2d (libm-2.29.so) (2 samples, 0.20%)</title><rect x="328" y="372" width="3" height="15" fill="rgb(232,50,12)"/><text x="331.00" y="382.50"></text></g><g><title>0x7fdcd025ac50 (libm-2.29.so) (3 samples, 0.30%)</title><rect x="331" y="372" width="3" height="15" fill="rgb(225,66,0)"/><text x="334.00" y="382.50"></text></g><g><title>0x7fdcd025ac61 (libm-2.29.so) (3 samples, 0.30%)</title><rect x="334" y="372" width="4" height="15" fill="rgb(223,101,35)"/><text x="337.00" y="382.50"></text></g><g><title>0x7fdcd025ac66 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="338" y="372" width="1" height="15" fill="rgb(205,50,30)"/><text x="341.00" y="382.50"></text></g><g><title>0x7fdcd025ac6b (libm-2.29.so) (2 samples, 0.20%)</title><rect x="339" y="372" width="2" height="15" fill="rgb(237,6,51)"/><text x="342.00" y="382.50"></text></g><g><title>0x7fdcd025ac7c (libm-2.29.so) (1 samples, 0.10%)</title><rect x="341" y="372" width="1" height="15" fill="rgb(221,127,24)"/><text x="344.00" y="382.50"></text></g><g><title>0x7fdcd025ac81 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="342" y="372" width="2" height="15" fill="rgb(246,100,16)"/><text x="345.00" y="382.50"></text></g><g><title>0x7fdcd025ac8b (libm-2.29.so) (1 samples, 0.10%)</title><rect x="344" y="372" width="1" height="15" fill="rgb(229,131,38)"/><text x="347.00" y="382.50"></text></g><g><title>0x7fdcd025ac90 (libm-2.29.so) (2 samples, 0.20%)</title><rect x="345" y="372" width="2" height="15" fill="rgb(214,133,29)"/><text x="348.00" y="382.50"></text></g><g><title>0x7fdcd025ac9e (libm-2.29.so) (6 samples, 0.59%)</title><rect x="347" y="372" width="7" height="15" fill="rgb(230,66,0)"/><text x="350.00" y="382.50"></text></g><g><title>0x7fdcd025acb5 (libm-2.29.so) (6 samples, 0.59%)</title><rect x="354" y="372" width="7" height="15" fill="rgb(240,27,30)"/><text x="357.00" y="382.50"></text></g><g><title>0x7fdcd025accc (libm-2.29.so) (2 samples, 0.20%)</title><rect x="361" y="372" width="3" height="15" fill="rgb(230,222,19)"/><text x="364.00" y="382.50"></text></g><g><title>0x7fdcd025acd6 (libm-2.29.so) (3 samples, 0.30%)</title><rect x="364" y="372" width="3" height="15" fill="rgb(239,35,0)"/><text x="367.00" y="382.50"></text></g><g><title>0x7fdcd025ace4 (libm-2.29.so) (7 samples, 0.69%)</title><rect x="367" y="372" width="8" height="15" fill="rgb(238,148,28)"/><text x="370.00" y="382.50"></text></g><g><title>0x7fdcd025acf0 (libm-2.29.so) (4 samples, 0.40%)</title><rect x="375" y="372" width="5" height="15" fill="rgb(206,125,29)"/><text x="378.00" y="382.50"></text></g><g><title>0x7fdcd025acf4 (libm-2.29.so) (2 samples, 0.20%)</title><rect x="380" y="372" width="2" height="15" fill="rgb(210,195,35)"/><text x="383.00" y="382.50"></text></g><g><title>0x7fdcd025acf8 (libm-2.29.so) (8 samples, 0.79%)</title><rect x="382" y="372" width="10" height="15" fill="rgb(253,44,34)"/><text x="385.00" y="382.50"></text></g><g><title>0x7fdcd025ad0d (libm-2.29.so) (1 samples, 0.10%)</title><rect x="392" y="372" width="1" height="15" fill="rgb(215,1,41)"/><text x="395.00" y="382.50"></text></g><g><title>0x7fdcd025ad11 (libm-2.29.so) (6 samples, 0.59%)</title><rect x="393" y="372" width="7" height="15" fill="rgb(242,202,23)"/><text x="396.00" y="382.50"></text></g><g><title>0x7fdcd025ad15 (libm-2.29.so) (2 samples, 0.20%)</title><rect x="400" y="372" width="2" height="15" fill="rgb(217,67,31)"/><text x="403.00" y="382.50"></text></g><g><title>0x7fdcd025ad19 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="402" y="372" width="1" height="15" fill="rgb(247,113,50)"/><text x="405.00" y="382.50"></text></g><g><title>0x7fdcd025ad1d (libm-2.29.so) (4 samples, 0.40%)</title><rect x="403" y="372" width="5" height="15" fill="rgb(242,143,17)"/><text x="406.00" y="382.50"></text></g><g><title>0x7fdcd025ad22 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="408" y="372" width="1" height="15" fill="rgb(207,170,49)"/><text x="411.00" y="382.50"></text></g><g><title>0x7fdcd025ad27 (libm-2.29.so) (2 samples, 0.20%)</title><rect x="409" y="372" width="2" height="15" fill="rgb(237,76,46)"/><text x="412.00" y="382.50"></text></g><g><title>0x7fdcd025ad2b (libm-2.29.so) (3 samples, 0.30%)</title><rect x="411" y="372" width="4" height="15" fill="rgb(226,62,48)"/><text x="414.00" y="382.50"></text></g><g><title>0x7fdcd025ad47 (libm-2.29.so) (4 samples, 0.40%)</title><rect x="415" y="372" width="5" height="15" fill="rgb(206,101,15)"/><text x="418.00" y="382.50"></text></g><g><title>0x7fdcd025ad67 (libm-2.29.so) (3 samples, 0.30%)</title><rect x="420" y="372" width="3" height="15" fill="rgb(231,48,1)"/><text x="423.00" y="382.50"></text></g><g><title>0x7fdcd025ad6f (libm-2.29.so) (2 samples, 0.20%)</title><rect x="423" y="372" width="2" height="15" fill="rgb(205,40,7)"/><text x="426.00" y="382.50"></text></g><g><title>0x7fdcd025ad74 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="425" y="372" width="2" height="15" fill="rgb(206,189,42)"/><text x="428.00" y="382.50"></text></g><g><title>0x7fdcd025ad78 (libm-2.29.so) (4 samples, 0.40%)</title><rect x="427" y="372" width="4" height="15" fill="rgb(213,171,24)"/><text x="430.00" y="382.50"></text></g><g><title>0x7fdcd025ad92 (libm-2.29.so) (6 samples, 0.59%)</title><rect x="431" y="372" width="7" height="15" fill="rgb(217,112,46)"/><text x="434.00" y="382.50"></text></g><g><title>0x7fdcd025ada2 (libm-2.29.so) (2 samples, 0.20%)</title><rect x="438" y="372" width="3" height="15" fill="rgb(216,209,9)"/><text x="441.00" y="382.50"></text></g><g><title>0x7fdcd025adaa (libm-2.29.so) (5 samples, 0.50%)</title><rect x="441" y="372" width="5" height="15" fill="rgb(237,68,0)"/><text x="444.00" y="382.50"></text></g><g><title>0x7fdcd025adb6 (libm-2.29.so) (5 samples, 0.50%)</title><rect x="446" y="372" width="6" height="15" fill="rgb(243,185,14)"/><text x="449.00" y="382.50"></text></g><g><title>0x7fdcd025adc4 (libm-2.29.so) (9 samples, 0.89%)</title><rect x="452" y="372" width="11" height="15" fill="rgb(238,202,9)"/><text x="455.00" y="382.50"></text></g><g><title>0x7fdcd025adcc (libm-2.29.so) (3 samples, 0.30%)</title><rect x="463" y="372" width="3" height="15" fill="rgb(219,8,54)"/><text x="466.00" y="382.50"></text></g><g><title>0x7fdcd025add4 (libm-2.29.so) (2 samples, 0.20%)</title><rect x="466" y="372" width="3" height="15" fill="rgb(221,14,45)"/><text x="469.00" y="382.50"></text></g><g><title>0x7fdcd025ade4 (libm-2.29.so) (2 samples, 0.20%)</title><rect x="469" y="372" width="2" height="15" fill="rgb(205,96,18)"/><text x="472.00" y="382.50"></text></g><g><title>0x7fdcd025ade8 (libm-2.29.so) (6 samples, 0.59%)</title><rect x="471" y="372" width="7" height="15" fill="rgb(232,80,42)"/><text x="474.00" y="382.50"></text></g><g><title>0x7fdcd025adf0 (libm-2.29.so) (7 samples, 0.69%)</title><rect x="478" y="372" width="8" height="15" fill="rgb(232,54,6)"/><text x="481.00" y="382.50"></text></g><g><title>0x7fdcd025adf8 (libm-2.29.so) (7 samples, 0.69%)</title><rect x="486" y="372" width="8" height="15" fill="rgb(210,162,13)"/><text x="489.00" y="382.50"></text></g><g><title>0x7fdcd025ae09 (libm-2.29.so) (6 samples, 0.59%)</title><rect x="494" y="372" width="7" height="15" fill="rgb(222,181,12)"/><text x="497.00" y="382.50"></text></g><g><title>powf32x (libm-2.29.so) (202 samples, 20.00%)</title><rect x="270" y="356" width="236" height="15" fill="rgb(241,219,23)"/><text x="273.00" y="366.50">powf32x (libm-2.29.so)</text></g><g><title>0x7fdcd025ae0d (libm-2.29.so) (4 samples, 0.40%)</title><rect x="501" y="372" width="5" height="15" fill="rgb(218,213,23)"/><text x="504.00" y="382.50"></text></g><g><title>0x7fdc90127960 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="521" y="372" width="1" height="15" fill="rgb(227,220,51)"/><text x="524.00" y="382.50"></text></g><g><title>0x7fdcbfbbd7a0 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="522" y="372" width="2" height="15" fill="rgb(224,113,17)"/><text x="525.00" y="382.50"></text></g><g><title>0x7fdcd00f095e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="524" y="372" width="1" height="15" fill="rgb(248,98,25)"/><text x="527.00" y="382.50"></text></g><g><title>0x7fdcd00f0961 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="525" y="372" width="1" height="15" fill="rgb(245,45,23)"/><text x="528.00" y="382.50"></text></g><g><title>0x7fdcd00f0971 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="526" y="372" width="2" height="15" fill="rgb(209,49,37)"/><text x="529.00" y="382.50"></text></g><g><title>0x7fdcd00f0991 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="528" y="372" width="1" height="15" fill="rgb(248,212,47)"/><text x="531.00" y="382.50"></text></g><g><title>0x7fdcd00f0a41 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="529" y="372" width="2" height="15" fill="rgb(213,139,26)"/><text x="532.00" y="382.50"></text></g><g><title>0x7fdcd00f0bc0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="531" y="372" width="1" height="15" fill="rgb(250,197,45)"/><text x="534.00" y="382.50"></text></g><g><title>0x7fdcd0110d6f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="532" y="372" width="1" height="15" fill="rgb(243,39,43)"/><text x="535.00" y="382.50"></text></g><g><title>0x7fdcd0110dbb (libc-2.29.so) (1 samples, 0.10%)</title><rect x="533" y="372" width="1" height="15" fill="rgb(231,111,31)"/><text x="536.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="534" y="372" width="1" height="15" fill="rgb(243,4,40)"/><text x="537.00" y="382.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (426 samples, 42.18%)</title><rect x="48" y="340" width="498" height="15" fill="rgb(248,13,0)"/><text x="51.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onn..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 3.37%)</title><rect x="506" y="356" width="40" height="15" fill="rgb(227,222,37)"/><text x="509.00" y="366.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 0.89%)</title><rect x="535" y="372" width="11" height="15" fill="rgb(243,37,25)"/><text x="538.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 0.89%)</title><rect x="535" y="388" width="11" height="15" fill="rgb(206,78,36)"/><text x="538.00" y="398.50"></text></g><g><title>0x7fdcd00f1d54 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="569" y="388" width="1" height="15" fill="rgb(224,105,15)"/><text x="572.00" y="398.50"></text></g><g><title>0x7fdcd00f1d81 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="570" y="388" width="1" height="15" fill="rgb(207,106,1)"/><text x="573.00" y="398.50"></text></g><g><title>0x7fdcd00f1d8d (libc-2.29.so) (1 samples, 0.10%)</title><rect x="571" y="388" width="2" height="15" fill="rgb(239,216,0)"/><text x="574.00" y="398.50"></text></g><g><title>0x7fdcd00f1d9f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="573" y="388" width="1" height="15" fill="rgb(222,74,7)"/><text x="576.00" y="398.50"></text></g><g><title>0x7fdcd00f1dd2 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="574" y="388" width="1" height="15" fill="rgb(234,65,11)"/><text x="577.00" y="398.50"></text></g><g><title>0x7fdcd00f1dec (libc-2.29.so) (2 samples, 0.20%)</title><rect x="575" y="388" width="2" height="15" fill="rgb(226,55,19)"/><text x="578.00" y="398.50"></text></g><g><title>0x7fdcd00f1fd2 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="577" y="388" width="1" height="15" fill="rgb(238,58,29)"/><text x="580.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (29 samples, 2.87%)</title><rect x="546" y="356" width="34" height="15" fill="rgb(245,115,6)"/><text x="549.00" y="366.50">op..</text></g><g><title>malloc (libc-2.29.so) (29 samples, 2.87%)</title><rect x="546" y="372" width="34" height="15" fill="rgb(250,127,1)"/><text x="549.00" y="382.50">ma..</text></g><g><title>0x7fdcd00f1fe6 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="578" y="388" width="2" height="15" fill="rgb(242,127,32)"/><text x="581.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.40%)</title><rect x="580" y="356" width="4" height="15" fill="rgb(253,78,53)"/><text x="583.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="583" y="372" width="1" height="15" fill="rgb(210,170,31)"/><text x="586.00" y="382.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (462 samples, 45.74%)</title><rect x="47" y="308" width="540" height="15" fill="rgb(235,184,11)"/><text x="50.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind1..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (462 samples, 45.74%)</title><rect x="47" y="324" width="540" height="15" fill="rgb(248,21,6)"/><text x="50.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pyb..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (35 samples, 3.47%)</title><rect x="546" y="340" width="41" height="15" fill="rgb(220,223,0)"/><text x="549.00" y="350.50">onn..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (2 samples, 0.20%)</title><rect x="584" y="356" width="3" height="15" fill="rgb(248,187,48)"/><text x="587.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (464 samples, 45.94%)</title><rect x="46" y="260" width="542" height="15" fill="rgb(242,184,51)"/><text x="49.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (464 samples, 45.94%)</title><rect x="46" y="276" width="542" height="15" fill="rgb(226,76,41)"/><text x="49.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (463 samples, 45.84%)</title><rect x="47" y="292" width="541" height="15" fill="rgb(224,109,42)"/><text x="50.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_st..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="587" y="308" width="1" height="15" fill="rgb(217,138,40)"/><text x="590.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="587" y="324" width="1" height="15" fill="rgb(239,166,41)"/><text x="590.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="587" y="340" width="1" height="15" fill="rgb(233,119,52)"/><text x="590.00" y="350.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, float, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, float&gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="588" y="260" width="1" height="15" fill="rgb(213,38,1)"/><text x="591.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.69%)</title><rect x="611" y="276" width="8" height="15" fill="rgb(252,29,50)"/><text x="614.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 2.67%)</title><rect x="589" y="260" width="32" height="15" fill="rgb(237,35,23)"/><text x="592.00" y="270.50">py..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="619" y="276" width="2" height="15" fill="rgb(222,134,15)"/><text x="622.00" y="286.50"></text></g><g><title>0x7fdcd00f0cf0 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="622" y="292" width="2" height="15" fill="rgb(206,184,28)"/><text x="625.00" y="302.50"></text></g><g><title>0x7fdcd00f0d02 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="624" y="308" width="1" height="15" fill="rgb(231,198,7)"/><text x="627.00" y="318.50"></text></g><g><title>0x7fdcd00f0d07 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="625" y="308" width="1" height="15" fill="rgb(223,201,6)"/><text x="628.00" y="318.50"></text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (514 samples, 50.89%)</title><rect x="27" y="100" width="601" height="15" fill="rgb(215,136,53)"/><text x="30.00" y="110.50">profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (499 samples, 49.41%)</title><rect x="45" y="116" width="583" height="15" fill="rgb(247,197,42)"/><text x="48.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (499 samples, 49.41%)</title><rect x="45" y="132" width="583" height="15" fill="rgb(220,165,23)"/><text x="48.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (499 samples, 49.41%)</title><rect x="45" y="148" width="583" height="15" fill="rgb(225,95,44)"/><text x="48.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (499 samples, 49.41%)</title><rect x="45" y="164" width="583" height="15" fill="rgb(216,171,29)"/><text x="48.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (498 samples, 49.31%)</title><rect x="46" y="180" width="582" height="15" fill="rgb(245,205,37)"/><text x="49.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (498 samples, 49.31%)</title><rect x="46" y="196" width="582" height="15" fill="rgb(210,158,1)"/><text x="49.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (498 samples, 49.31%)</title><rect x="46" y="212" width="582" height="15" fill="rgb(228,219,18)"/><text x="49.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state...</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (498 samples, 49.31%)</title><rect x="46" y="228" width="582" height="15" fill="rgb(251,140,12)"/><text x="49.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(py..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (498 samples, 49.31%)</title><rect x="46" y="244" width="582" height="15" fill="rgb(205,176,35)"/><text x="49.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::I..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.59%)</title><rect x="621" y="260" width="7" height="15" fill="rgb(215,86,34)"/><text x="624.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.59%)</title><rect x="621" y="276" width="7" height="15" fill="rgb(238,145,30)"/><text x="624.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.30%)</title><rect x="624" y="292" width="4" height="15" fill="rgb(212,166,51)"/><text x="627.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="626" y="308" width="2" height="15" fill="rgb(248,106,28)"/><text x="629.00" y="318.50"></text></g><g><title>0x7fdc888e0350 (?) (1 samples, 0.10%)</title><rect x="628" y="724" width="1" height="15" fill="rgb(240,104,27)"/><text x="631.00" y="734.50"></text></g><g><title>profile_ort (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (516 samples, 51.09%)</title><rect x="27" y="68" width="603" height="15" fill="rgb(223,176,7)"/><text x="30.00" y="78.50">profile_ort (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (516 samples, 51.09%)</title><rect x="27" y="84" width="603" height="15" fill="rgb(208,188,24)"/><text x="30.00" y="94.50">setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.20%)</title><rect x="628" y="100" width="2" height="15" fill="rgb(223,223,22)"/><text x="631.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.20%)</title><rect x="628" y="116" width="2" height="15" fill="rgb(224,120,31)"/><text x="631.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.20%)</title><rect x="628" y="132" width="2" height="15" fill="rgb(224,194,24)"/><text x="631.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.20%)</title><rect x="628" y="148" width="2" height="15" fill="rgb(222,172,8)"/><text x="631.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.20%)</title><rect x="628" y="164" width="2" height="15" fill="rgb(213,37,9)"/><text x="631.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="180" width="2" height="15" fill="rgb(224,166,52)"/><text x="631.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="196" width="2" height="15" fill="rgb(240,225,1)"/><text x="631.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="212" width="2" height="15" fill="rgb(227,11,29)"/><text x="631.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="628" y="228" width="2" height="15" fill="rgb(216,120,20)"/><text x="631.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="244" width="2" height="15" fill="rgb(233,156,28)"/><text x="631.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (2 samples, 0.20%)</title><rect x="628" y="260" width="2" height="15" fill="rgb(239,206,52)"/><text x="631.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="276" width="2" height="15" fill="rgb(247,60,40)"/><text x="631.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="292" width="2" height="15" fill="rgb(221,53,5)"/><text x="631.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="308" width="2" height="15" fill="rgb(234,92,48)"/><text x="631.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="628" y="324" width="2" height="15" fill="rgb(253,172,39)"/><text x="631.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="340" width="2" height="15" fill="rgb(206,108,12)"/><text x="631.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (2 samples, 0.20%)</title><rect x="628" y="356" width="2" height="15" fill="rgb(213,41,29)"/><text x="631.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="372" width="2" height="15" fill="rgb(217,39,25)"/><text x="631.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="388" width="2" height="15" fill="rgb(211,69,12)"/><text x="631.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="404" width="2" height="15" fill="rgb(253,134,43)"/><text x="631.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="628" y="420" width="2" height="15" fill="rgb(226,24,12)"/><text x="631.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="436" width="2" height="15" fill="rgb(236,161,1)"/><text x="631.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (2 samples, 0.20%)</title><rect x="628" y="452" width="2" height="15" fill="rgb(228,107,17)"/><text x="631.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="468" width="2" height="15" fill="rgb(251,174,30)"/><text x="631.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="484" width="2" height="15" fill="rgb(252,66,12)"/><text x="631.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="500" width="2" height="15" fill="rgb(217,135,0)"/><text x="631.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="516" width="2" height="15" fill="rgb(214,0,52)"/><text x="631.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="628" y="532" width="2" height="15" fill="rgb(244,202,34)"/><text x="631.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="628" y="548" width="2" height="15" fill="rgb(251,152,43)"/><text x="631.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (2 samples, 0.20%)</title><rect x="628" y="564" width="2" height="15" fill="rgb(217,44,31)"/><text x="631.00" y="574.50"></text></g><g><title>0x7fdcd0378995 (libdl-2.29.so) (2 samples, 0.20%)</title><rect x="628" y="580" width="2" height="15" fill="rgb(242,128,22)"/><text x="631.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (2 samples, 0.20%)</title><rect x="628" y="596" width="2" height="15" fill="rgb(217,93,14)"/><text x="631.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.20%)</title><rect x="628" y="612" width="2" height="15" fill="rgb(232,182,36)"/><text x="631.00" y="622.50"></text></g><g><title>0x7fdcd0378258 (libdl-2.29.so) (2 samples, 0.20%)</title><rect x="628" y="628" width="2" height="15" fill="rgb(235,42,41)"/><text x="631.00" y="638.50"></text></g><g><title>0x7fdcd03c5d7a (ld-2.29.so) (2 samples, 0.20%)</title><rect x="628" y="644" width="2" height="15" fill="rgb(239,17,21)"/><text x="631.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.20%)</title><rect x="628" y="660" width="2" height="15" fill="rgb(207,1,44)"/><text x="631.00" y="670.50"></text></g><g><title>0x7fdcd03c6473 (ld-2.29.so) (2 samples, 0.20%)</title><rect x="628" y="676" width="2" height="15" fill="rgb(241,228,34)"/><text x="631.00" y="686.50"></text></g><g><title>0x7fdcd03c26b9 (ld-2.29.so) (2 samples, 0.20%)</title><rect x="628" y="692" width="2" height="15" fill="rgb(250,49,53)"/><text x="631.00" y="702.50"></text></g><g><title>0x7fdcd03c25ba (ld-2.29.so) (2 samples, 0.20%)</title><rect x="628" y="708" width="2" height="15" fill="rgb(231,122,7)"/><text x="631.00" y="718.50"></text></g><g><title>__sti__$E (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.10%)</title><rect x="629" y="724" width="1" height="15" fill="rgb(251,35,9)"/><text x="632.00" y="734.50"></text></g><g><title>mkl_dnn_def_Xbyak_F64::Operand::Operand (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.10%)</title><rect x="629" y="740" width="1" height="15" fill="rgb(228,202,5)"/><text x="632.00" y="750.50"></text></g><g><title>0x7fdc9125fc29 (?) (1 samples, 0.10%)</title><rect x="635" y="244" width="1" height="15" fill="rgb(225,48,36)"/><text x="638.00" y="254.50"></text></g><g><title>0x7fdc91266d9e (?) (1 samples, 0.10%)</title><rect x="635" y="260" width="1" height="15" fill="rgb(223,52,14)"/><text x="638.00" y="270.50"></text></g><g><title>0x7fdc91266c56 (?) (1 samples, 0.10%)</title><rect x="635" y="276" width="1" height="15" fill="rgb(237,111,11)"/><text x="638.00" y="286.50"></text></g><g><title>0x7fdc9126cac7 (?) (1 samples, 0.10%)</title><rect x="635" y="292" width="1" height="15" fill="rgb(215,99,23)"/><text x="638.00" y="302.50"></text></g><g><title>0x7fdc9126bc81 (?) (1 samples, 0.10%)</title><rect x="635" y="308" width="1" height="15" fill="rgb(247,125,48)"/><text x="638.00" y="318.50"></text></g><g><title>0x7fdc91263fc6 (?) (1 samples, 0.10%)</title><rect x="635" y="324" width="1" height="15" fill="rgb(223,69,40)"/><text x="638.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="635" y="340" width="1" height="15" fill="rgb(239,52,29)"/><text x="638.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="635" y="356" width="1" height="15" fill="rgb(245,30,43)"/><text x="638.00" y="366.50"></text></g><g><title>pybind11::array_t&lt;long, 16&gt;::array_t (numpy.h) (1 samples, 0.10%)</title><rect x="636" y="436" width="1" height="15" fill="rgb(252,40,32)"/><text x="639.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.10%)</title><rect x="636" y="452" width="1" height="15" fill="rgb(235,53,12)"/><text x="639.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.10%)</title><rect x="636" y="468" width="1" height="15" fill="rgb(230,197,48)"/><text x="639.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;long&gt; (numpy.h) (1 samples, 0.10%)</title><rect x="636" y="484" width="1" height="15" fill="rgb(254,163,3)"/><text x="639.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.10%)</title><rect x="636" y="500" width="1" height="15" fill="rgb(243,106,50)"/><text x="639.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.10%)</title><rect x="636" y="516" width="1" height="15" fill="rgb(222,161,9)"/><text x="639.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.10%)</title><rect x="636" y="532" width="1" height="15" fill="rgb(235,188,45)"/><text x="639.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.10%)</title><rect x="636" y="548" width="1" height="15" fill="rgb(247,2,8)"/><text x="639.00" y="558.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.10%)</title><rect x="636" y="564" width="1" height="15" fill="rgb(254,2,37)"/><text x="639.00" y="574.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.10%)</title><rect x="636" y="580" width="1" height="15" fill="rgb(251,57,52)"/><text x="639.00" y="590.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.10%)</title><rect x="636" y="596" width="1" height="15" fill="rgb(216,119,44)"/><text x="639.00" y="606.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.10%)</title><rect x="636" y="612" width="1" height="15" fill="rgb(249,216,54)"/><text x="639.00" y="622.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.10%)</title><rect x="636" y="628" width="1" height="15" fill="rgb(245,92,15)"/><text x="639.00" y="638.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="636" y="644" width="1" height="15" fill="rgb(210,57,44)"/><text x="639.00" y="654.50"></text></g><g><title>0x7fdcd00f1db0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="636" y="660" width="1" height="15" fill="rgb(246,185,28)"/><text x="639.00" y="670.50"></text></g><g><title>0x7fdc9124f2a0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="670" y="468" width="1" height="15" fill="rgb(212,67,19)"/><text x="673.00" y="478.50"></text></g><g><title>0x7fdc9124f440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="671" y="468" width="2" height="15" fill="rgb(233,158,34)"/><text x="674.00" y="478.50"></text></g><g><title>0x7fdcd00f0906 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="673" y="468" width="1" height="15" fill="rgb(213,227,1)"/><text x="676.00" y="478.50"></text></g><g><title>0x7fdcd00f093b (libc-2.29.so) (1 samples, 0.10%)</title><rect x="674" y="468" width="1" height="15" fill="rgb(240,77,2)"/><text x="677.00" y="478.50"></text></g><g><title>0x7fdcd00f0991 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="675" y="468" width="2" height="15" fill="rgb(222,226,11)"/><text x="678.00" y="478.50"></text></g><g><title>0x7fdcd00f0bc0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="677" y="468" width="1" height="15" fill="rgb(227,62,9)"/><text x="680.00" y="478.50"></text></g><g><title>0x7fdc9124ee60 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="728" y="484" width="1" height="15" fill="rgb(252,123,31)"/><text x="731.00" y="494.50"></text></g><g><title>0x7fdc9124f2b0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="729" y="484" width="3" height="15" fill="rgb(217,38,50)"/><text x="732.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (36 samples, 3.56%)</title><rect x="732" y="484" width="42" height="15" fill="rgb(228,101,54)"/><text x="735.00" y="494.50">vec..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (85 samples, 8.42%)</title><rect x="678" y="468" width="99" height="15" fill="rgb(232,164,47)"/><text x="681.00" y="478.50">RuntimeSVMC..</text></g><g><title>vector_dot_product_pointer_sse&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (3 samples, 0.30%)</title><rect x="774" y="484" width="3" height="15" fill="rgb(251,173,46)"/><text x="777.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="777" y="468" width="1" height="15" fill="rgb(221,54,15)"/><text x="780.00" y="478.50"></text></g><g><title>0x7fdcd026fe96 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="785" y="500" width="1" height="15" fill="rgb(228,125,18)"/><text x="788.00" y="510.50"></text></g><g><title>0x7fdcd026fea2 (libm-2.29.so) (2 samples, 0.20%)</title><rect x="786" y="500" width="3" height="15" fill="rgb(235,82,17)"/><text x="789.00" y="510.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (10 samples, 0.99%)</title><rect x="778" y="468" width="12" height="15" fill="rgb(223,225,44)"/><text x="781.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (9 samples, 0.89%)</title><rect x="779" y="484" width="11" height="15" fill="rgb(249,123,16)"/><text x="782.00" y="494.50"></text></g><g><title>std::abs (cmath) (1 samples, 0.10%)</title><rect x="789" y="500" width="1" height="15" fill="rgb(246,33,3)"/><text x="792.00" y="510.50"></text></g><g><title>std::max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt; &gt; (stl_algo.h) (2 samples, 0.20%)</title><rect x="790" y="468" width="2" height="15" fill="rgb(237,84,37)"/><text x="793.00" y="478.50"></text></g><g><title>std::__max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (stl_algo.h) (2 samples, 0.20%)</title><rect x="790" y="484" width="2" height="15" fill="rgb(208,156,13)"/><text x="793.00" y="494.50"></text></g><g><title>__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;::operator++ (stl_iterator.h) (2 samples, 0.20%)</title><rect x="790" y="500" width="2" height="15" fill="rgb(206,71,8)"/><text x="793.00" y="510.50"></text></g><g><title>std::min&lt;float&gt; (stl_algobase.h) (1 samples, 0.10%)</title><rect x="792" y="468" width="1" height="15" fill="rgb(239,37,3)"/><text x="795.00" y="478.50"></text></g><g><title>0x7fdcd00f090e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="793" y="484" width="2" height="15" fill="rgb(218,154,39)"/><text x="796.00" y="494.50"></text></g><g><title>0x7fdcd00f0991 (libc-2.29.so) (3 samples, 0.30%)</title><rect x="795" y="484" width="3" height="15" fill="rgb(212,155,3)"/><text x="798.00" y="494.50"></text></g><g><title>0x7fdcd00f0998 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="798" y="484" width="1" height="15" fill="rgb(211,100,51)"/><text x="801.00" y="494.50"></text></g><g><title>0x7fdcd0110d50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="799" y="484" width="1" height="15" fill="rgb(244,127,5)"/><text x="802.00" y="494.50"></text></g><g><title>0x7fdcd0110e04 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="800" y="484" width="3" height="15" fill="rgb(206,198,41)"/><text x="803.00" y="494.50"></text></g><g><title>0x7fdcd0110e27 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="803" y="484" width="1" height="15" fill="rgb(237,229,54)"/><text x="806.00" y="494.50"></text></g><g><title>0x7fdcd0110e2c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="804" y="484" width="1" height="15" fill="rgb(221,123,31)"/><text x="807.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="805" y="484" width="1" height="15" fill="rgb(228,211,14)"/><text x="808.00" y="494.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="806" y="484" width="1" height="15" fill="rgb(237,89,17)"/><text x="809.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (14 samples, 1.39%)</title><rect x="807" y="484" width="17" height="15" fill="rgb(237,223,34)"/><text x="810.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (14 samples, 1.39%)</title><rect x="807" y="500" width="17" height="15" fill="rgb(245,186,3)"/><text x="810.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (14 samples, 1.39%)</title><rect x="807" y="516" width="17" height="15" fill="rgb(208,8,9)"/><text x="810.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (14 samples, 1.39%)</title><rect x="807" y="532" width="17" height="15" fill="rgb(234,50,39)"/><text x="810.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (12 samples, 1.19%)</title><rect x="810" y="548" width="14" height="15" fill="rgb(230,139,47)"/><text x="813.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (28 samples, 2.77%)</title><rect x="793" y="468" width="33" height="15" fill="rgb(250,97,24)"/><text x="796.00" y="478.50">st..</text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float&gt; (alloc_traits.h) (2 samples, 0.20%)</title><rect x="824" y="484" width="2" height="15" fill="rgb(250,105,27)"/><text x="827.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float&gt; (new_allocator.h) (2 samples, 0.20%)</title><rect x="824" y="500" width="2" height="15" fill="rgb(221,222,38)"/><text x="827.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::operator[] (stl_vector.h) (1 samples, 0.10%)</title><rect x="826" y="468" width="1" height="15" fill="rgb(219,130,15)"/><text x="829.00" y="478.50"></text></g><g><title>0x7fdcd00f0965 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="830" y="516" width="1" height="15" fill="rgb(244,34,53)"/><text x="833.00" y="526.50"></text></g><g><title>0x7fdcd00f0991 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="831" y="516" width="1" height="15" fill="rgb(222,67,15)"/><text x="834.00" y="526.50"></text></g><g><title>0x7fdcd00f0bd8 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="832" y="516" width="2" height="15" fill="rgb(236,50,19)"/><text x="835.00" y="526.50"></text></g><g><title>0x7fdcd0110dc9 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="834" y="516" width="2" height="15" fill="rgb(215,79,41)"/><text x="837.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="836" y="516" width="1" height="15" fill="rgb(251,122,20)"/><text x="839.00" y="526.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (3 samples, 0.30%)</title><rect x="837" y="516" width="3" height="15" fill="rgb(210,105,8)"/><text x="840.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (3 samples, 0.30%)</title><rect x="837" y="532" width="3" height="15" fill="rgb(229,178,3)"/><text x="840.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (3 samples, 0.30%)</title><rect x="837" y="548" width="3" height="15" fill="rgb(246,80,45)"/><text x="840.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.30%)</title><rect x="837" y="564" width="3" height="15" fill="rgb(211,86,35)"/><text x="840.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.30%)</title><rect x="837" y="580" width="3" height="15" fill="rgb(245,60,12)"/><text x="840.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (13 samples, 1.29%)</title><rect x="827" y="468" width="16" height="15" fill="rgb(222,21,45)"/><text x="830.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (13 samples, 1.29%)</title><rect x="827" y="484" width="16" height="15" fill="rgb(211,194,41)"/><text x="830.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (13 samples, 1.29%)</title><rect x="827" y="500" width="16" height="15" fill="rgb(221,42,39)"/><text x="830.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h) (2 samples, 0.20%)</title><rect x="840" y="516" width="3" height="15" fill="rgb(227,183,19)"/><text x="843.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (2 samples, 0.20%)</title><rect x="840" y="532" width="3" height="15" fill="rgb(241,118,48)"/><text x="843.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::resize (stl_vector.h) (1 samples, 0.10%)</title><rect x="843" y="468" width="1" height="15" fill="rgb(235,203,50)"/><text x="846.00" y="478.50"></text></g><g><title>0x7fdc9124f810 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="892" y="500" width="1" height="15" fill="rgb(253,132,41)"/><text x="895.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="893" y="500" width="1" height="15" fill="rgb(229,123,1)"/><text x="896.00" y="510.50"></text></g><g><title>std::fabs (cmath) (1 samples, 0.10%)</title><rect x="894" y="500" width="1" height="15" fill="rgb(207,214,28)"/><text x="897.00" y="510.50"></text></g><g><title>0x7fdcbfbbd7a0 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="895" y="516" width="1" height="15" fill="rgb(229,76,34)"/><text x="898.00" y="526.50"></text></g><g><title>0x7fdcd00f0991 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="896" y="516" width="1" height="15" fill="rgb(235,113,14)"/><text x="899.00" y="526.50"></text></g><g><title>0x7fdcd00f0bc0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="897" y="516" width="2" height="15" fill="rgb(253,32,4)"/><text x="900.00" y="526.50"></text></g><g><title>0x7fdcd00f0bd8 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="899" y="516" width="1" height="15" fill="rgb(248,35,5)"/><text x="902.00" y="526.50"></text></g><g><title>0x7fdcd0110d50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="900" y="516" width="1" height="15" fill="rgb(227,155,38)"/><text x="903.00" y="526.50"></text></g><g><title>0x7fdcd0110d6f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="901" y="516" width="1" height="15" fill="rgb(227,196,19)"/><text x="904.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (8 samples, 0.79%)</title><rect x="902" y="516" width="9" height="15" fill="rgb(242,194,12)"/><text x="905.00" y="526.50"></text></g><g><title>0x7fdc9124f2d0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="913" y="564" width="1" height="15" fill="rgb(237,148,50)"/><text x="916.00" y="574.50"></text></g><g><title>0x7fdcbfbbcd50 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="914" y="580" width="1" height="15" fill="rgb(239,24,31)"/><text x="917.00" y="590.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (10 samples, 0.99%)</title><rect x="911" y="516" width="12" height="15" fill="rgb(232,85,34)"/><text x="914.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (9 samples, 0.89%)</title><rect x="913" y="532" width="10" height="15" fill="rgb(231,39,24)"/><text x="916.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (9 samples, 0.89%)</title><rect x="913" y="548" width="10" height="15" fill="rgb(206,98,4)"/><text x="916.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 0.79%)</title><rect x="914" y="564" width="9" height="15" fill="rgb(245,75,28)"/><text x="917.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 0.69%)</title><rect x="915" y="580" width="8" height="15" fill="rgb(221,139,1)"/><text x="918.00" y="590.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h) (1 samples, 0.10%)</title><rect x="923" y="516" width="1" height="15" fill="rgb(211,65,24)"/><text x="926.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h) (1 samples, 0.10%)</title><rect x="923" y="532" width="1" height="15" fill="rgb(244,103,17)"/><text x="926.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h) (1 samples, 0.10%)</title><rect x="923" y="548" width="1" height="15" fill="rgb(225,160,46)"/><text x="926.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (26 samples, 2.57%)</title><rect x="895" y="500" width="30" height="15" fill="rgb(251,51,50)"/><text x="898.00" y="510.50">st..</text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float&gt; (alloc_traits.h) (1 samples, 0.10%)</title><rect x="924" y="516" width="1" height="15" fill="rgb(220,186,43)"/><text x="927.00" y="526.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float&gt; (new_allocator.h) (1 samples, 0.10%)</title><rect x="924" y="532" width="1" height="15" fill="rgb(215,157,42)"/><text x="927.00" y="542.50"></text></g><g><title>0x7fdcd00f0971 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="925" y="516" width="2" height="15" fill="rgb(252,227,45)"/><text x="928.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="927" y="516" width="1" height="15" fill="rgb(250,179,36)"/><text x="930.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (73 samples, 7.23%)</title><rect x="844" y="484" width="85" height="15" fill="rgb(245,27,32)"/><text x="847.00" y="494.50">multiclass..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (3 samples, 0.30%)</title><rect x="925" y="500" width="4" height="15" fill="rgb(254,93,21)"/><text x="928.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::~_Vector_base (stl_vector.h) (1 samples, 0.10%)</title><rect x="928" y="516" width="1" height="15" fill="rgb(214,114,12)"/><text x="931.00" y="526.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h) (1 samples, 0.10%)</title><rect x="928" y="532" width="1" height="15" fill="rgb(238,109,9)"/><text x="931.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (74 samples, 7.33%)</title><rect x="844" y="468" width="86" height="15" fill="rgb(247,219,39)"/><text x="847.00" y="478.50">std::vecto..</text></g><g><title>write_scores&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (1 samples, 0.10%)</title><rect x="929" y="484" width="1" height="15" fill="rgb(227,183,20)"/><text x="932.00" y="494.50"></text></g><g><title>0x7fdc9124f1b0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="929" y="500" width="1" height="15" fill="rgb(237,44,4)"/><text x="932.00" y="510.50"></text></g><g><title>0x7fdc9124f2d0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="930" y="516" width="1" height="15" fill="rgb(250,139,50)"/><text x="933.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h) (5 samples, 0.50%)</title><rect x="930" y="468" width="6" height="15" fill="rgb(236,58,44)"/><text x="933.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h) (5 samples, 0.50%)</title><rect x="930" y="484" width="6" height="15" fill="rgb(212,224,42)"/><text x="933.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h) (5 samples, 0.50%)</title><rect x="930" y="500" width="6" height="15" fill="rgb(211,91,11)"/><text x="933.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.40%)</title><rect x="931" y="516" width="5" height="15" fill="rgb(254,146,53)"/><text x="934.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.30%)</title><rect x="932" y="532" width="4" height="15" fill="rgb(215,217,25)"/><text x="935.00" y="542.50"></text></g><g><title>0x7fdcbfbbd7a0 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="936" y="484" width="1" height="15" fill="rgb(208,5,48)"/><text x="939.00" y="494.50"></text></g><g><title>0x7fdcd00f091e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="937" y="484" width="1" height="15" fill="rgb(242,178,16)"/><text x="940.00" y="494.50"></text></g><g><title>0x7fdcd00f095e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="938" y="484" width="1" height="15" fill="rgb(227,45,29)"/><text x="941.00" y="494.50"></text></g><g><title>0x7fdcd00f0991 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="939" y="484" width="3" height="15" fill="rgb(248,204,26)"/><text x="942.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="942" y="484" width="1" height="15" fill="rgb(248,156,17)"/><text x="945.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (7 samples, 0.69%)</title><rect x="936" y="468" width="8" height="15" fill="rgb(216,208,54)"/><text x="939.00" y="478.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="943" y="484" width="1" height="15" fill="rgb(208,120,29)"/><text x="946.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h) (2 samples, 0.20%)</title><rect x="944" y="468" width="2" height="15" fill="rgb(238,52,9)"/><text x="947.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h) (2 samples, 0.20%)</title><rect x="944" y="484" width="2" height="15" fill="rgb(220,130,19)"/><text x="947.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc) (2 samples, 0.20%)</title><rect x="944" y="500" width="2" height="15" fill="rgb(230,109,54)"/><text x="947.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.10%)</title><rect x="945" y="516" width="1" height="15" fill="rgb(218,127,44)"/><text x="948.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.10%)</title><rect x="945" y="532" width="1" height="15" fill="rgb(214,53,20)"/><text x="948.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h) (1 samples, 0.10%)</title><rect x="945" y="548" width="1" height="15" fill="rgb(243,0,1)"/><text x="948.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="945" y="564" width="1" height="15" fill="rgb(235,40,2)"/><text x="948.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="945" y="580" width="1" height="15" fill="rgb(243,121,12)"/><text x="948.00" y="590.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (266 samples, 26.34%)</title><rect x="637" y="452" width="311" height="15" fill="rgb(254,100,21)"/><text x="640.00" y="462.50">RuntimeSVMClassifier&lt;float&gt;::compute_gil_..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (stl_vector.h) (1 samples, 0.10%)</title><rect x="946" y="468" width="2" height="15" fill="rgb(254,205,35)"/><text x="949.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_Vector_base (stl_vector.h) (1 samples, 0.10%)</title><rect x="946" y="484" width="2" height="15" fill="rgb(249,68,40)"/><text x="949.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_Vector_impl::_Vector_impl (stl_vector.h) (1 samples, 0.10%)</title><rect x="946" y="500" width="2" height="15" fill="rgb(234,174,22)"/><text x="949.00" y="510.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (268 samples, 26.53%)</title><rect x="636" y="292" width="313" height="15" fill="rgb(244,135,29)"/><text x="639.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeS..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (268 samples, 26.53%)</title><rect x="636" y="308" width="313" height="15" fill="rgb(253,129,13)"/><text x="639.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeS..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (268 samples, 26.53%)</title><rect x="636" y="324" width="313" height="15" fill="rgb(231,71,0)"/><text x="639.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (268 samples, 26.53%)</title><rect x="636" y="340" width="313" height="15" fill="rgb(206,28,13)"/><text x="639.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (nu..</text></g><g><title>pybind11::array::~array (numpy.h) (268 samples, 26.53%)</title><rect x="636" y="356" width="313" height="15" fill="rgb(246,224,29)"/><text x="639.00" y="366.50">pybind11::array::~array (numpy.h)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (268 samples, 26.53%)</title><rect x="636" y="372" width="313" height="15" fill="rgb(232,83,30)"/><text x="639.00" y="382.50">pybind11::buffer::~buffer (pytypes.h)</text></g><g><title>pybind11::object::~object (pytypes.h) (268 samples, 26.53%)</title><rect x="636" y="388" width="313" height="15" fill="rgb(245,139,33)"/><text x="639.00" y="398.50">pybind11::object::~object (pytypes.h)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (268 samples, 26.53%)</title><rect x="636" y="404" width="313" height="15" fill="rgb(226,119,5)"/><text x="639.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (268 samples, 26.53%)</title><rect x="636" y="420" width="313" height="15" fill="rgb(232,141,17)"/><text x="639.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlpr..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (267 samples, 26.44%)</title><rect x="637" y="436" width="312" height="15" fill="rgb(228,120,52)"/><text x="640.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (vector.tcc) (1 samples, 0.10%)</title><rect x="948" y="452" width="1" height="15" fill="rgb(218,164,29)"/><text x="951.00" y="462.50"></text></g><g><title>profile_pyrt (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (274 samples, 27.13%)</title><rect x="630" y="68" width="320" height="15" fill="rgb(253,194,13)"/><text x="633.00" y="78.50">profile_pyrt (bench_SVC_poly_b_cl_probabili..</text></g><g><title>setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (274 samples, 27.13%)</title><rect x="630" y="84" width="320" height="15" fill="rgb(223,142,38)"/><text x="633.00" y="94.50">setup_profile (bench_SVC_poly_b_cl_probabil..</text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (274 samples, 27.13%)</title><rect x="630" y="100" width="320" height="15" fill="rgb(236,63,41)"/><text x="633.00" y="110.50">profile (bench_SVC_poly_b_cl_probabilityTru..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (274 samples, 27.13%)</title><rect x="630" y="116" width="320" height="15" fill="rgb(206,129,38)"/><text x="633.00" y="126.50">time_predict (mlprodict/asv_benchmark/commo..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (274 samples, 27.13%)</title><rect x="630" y="132" width="320" height="15" fill="rgb(213,18,29)"/><text x="633.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_as..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (274 samples, 27.13%)</title><rect x="630" y="148" width="320" height="15" fill="rgb(247,142,11)"/><text x="633.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (274 samples, 27.13%)</title><rect x="630" y="164" width="320" height="15" fill="rgb(206,98,47)"/><text x="633.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (273 samples, 27.03%)</title><rect x="631" y="180" width="319" height="15" fill="rgb(232,47,54)"/><text x="634.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (270 samples, 26.73%)</title><rect x="635" y="196" width="315" height="15" fill="rgb(235,171,53)"/><text x="638.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (270 samples, 26.73%)</title><rect x="635" y="212" width="315" height="15" fill="rgb(252,141,45)"/><text x="638.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (270 samples, 26.73%)</title><rect x="635" y="228" width="315" height="15" fill="rgb(244,109,10)"/><text x="638.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_clas..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (269 samples, 26.63%)</title><rect x="636" y="244" width="314" height="15" fill="rgb(223,9,46)"/><text x="639.00" y="254.50">pybind11::cpp_function::dispatcher (pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (269 samples, 26.63%)</title><rect x="636" y="260" width="314" height="15" fill="rgb(245,202,32)"/><text x="639.00" y="270.50">void pybind11::cpp_function::initialize&lt;py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (269 samples, 26.63%)</title><rect x="636" y="276" width="314" height="15" fill="rgb(243,133,54)"/><text x="639.00" y="286.50">void pybind11::cpp_function::initialize&lt;py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (1 samples, 0.10%)</title><rect x="949" y="292" width="1" height="15" fill="rgb(214,66,44)"/><text x="952.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (1 samples, 0.10%)</title><rect x="949" y="308" width="1" height="15" fill="rgb(223,53,8)"/><text x="952.00" y="318.50"></text></g><g><title>std::_Bit_reference::operator bool (stl_bvector.h) (1 samples, 0.10%)</title><rect x="949" y="324" width="1" height="15" fill="rgb(227,141,6)"/><text x="952.00" y="334.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (cast.h) (1 samples, 0.10%)</title><rect x="949" y="340" width="1" height="15" fill="rgb(217,187,38)"/><text x="952.00" y="350.50"></text></g><g><title>pybind11::detail::get_type_info (cast.h) (1 samples, 0.10%)</title><rect x="949" y="356" width="1" height="15" fill="rgb(246,80,43)"/><text x="952.00" y="366.50"></text></g><g><title>pybind11::detail::get_global_type_info (cast.h) (1 samples, 0.10%)</title><rect x="949" y="372" width="1" height="15" fill="rgb(209,0,25)"/><text x="952.00" y="382.50"></text></g><g><title>std::unordered_map&lt;std::type_index, pybind11::detail::type_info*, std::hash&lt;std::type_index&gt;, std::equal_to&lt;std::type_index&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt; &gt;::find (unordered_map.h) (1 samples, 0.10%)</title><rect x="949" y="388" width="1" height="15" fill="rgb(214,8,30)"/><text x="952.00" y="398.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (1 samples, 0.10%)</title><rect x="949" y="404" width="1" height="15" fill="rgb(218,126,31)"/><text x="952.00" y="414.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::__detail::_Select1st, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (hashtable_policy.h) (1 samples, 0.10%)</title><rect x="949" y="420" width="1" height="15" fill="rgb(208,137,51)"/><text x="952.00" y="430.50"></text></g><g><title>std::hash&lt;std::type_index&gt;::operator() (typeindex) (1 samples, 0.10%)</title><rect x="949" y="436" width="1" height="15" fill="rgb(249,63,35)"/><text x="952.00" y="446.50"></text></g><g><title>std::type_index::hash_code (typeindex) (1 samples, 0.10%)</title><rect x="949" y="452" width="1" height="15" fill="rgb(239,175,24)"/><text x="952.00" y="462.50"></text></g><g><title>std::type_info::hash_code (typeinfo) (1 samples, 0.10%)</title><rect x="949" y="468" width="1" height="15" fill="rgb(252,135,52)"/><text x="952.00" y="478.50"></text></g><g><title>0x7fdcd0106e60 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="949" y="484" width="1" height="15" fill="rgb(235,16,22)"/><text x="952.00" y="494.50"></text></g><g><title>0x7fdcaabe13fd (?) (1 samples, 0.10%)</title><rect x="951" y="180" width="1" height="15" fill="rgb(208,117,35)"/><text x="954.00" y="190.50"></text></g><g><title>0x7fdcaabdf553 (?) (1 samples, 0.10%)</title><rect x="951" y="196" width="1" height="15" fill="rgb(235,143,27)"/><text x="954.00" y="206.50"></text></g><g><title>0x7fdcaabdaa09 (?) (1 samples, 0.10%)</title><rect x="951" y="212" width="1" height="15" fill="rgb(252,89,47)"/><text x="954.00" y="222.50"></text></g><g><title>0x7fdcaabed6a8 (?) (1 samples, 0.10%)</title><rect x="951" y="228" width="1" height="15" fill="rgb(240,221,54)"/><text x="954.00" y="238.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="953" y="228" width="2" height="15" fill="rgb(219,3,49)"/><text x="956.00" y="238.50"></text></g><g><title>0x7fdcaabc1e80 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1031" y="244" width="1" height="15" fill="rgb(227,79,4)"/><text x="1034.00" y="254.50"></text></g><g><title>0x7fdcd00f0906 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1032" y="244" width="1" height="15" fill="rgb(221,206,30)"/><text x="1035.00" y="254.50"></text></g><g><title>0x7fdcd00f090e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1033" y="244" width="1" height="15" fill="rgb(241,58,12)"/><text x="1036.00" y="254.50"></text></g><g><title>0x7fdcd00f091e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1034" y="244" width="1" height="15" fill="rgb(211,221,5)"/><text x="1037.00" y="254.50"></text></g><g><title>0x7fdcd00f092f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1035" y="244" width="1" height="15" fill="rgb(234,193,3)"/><text x="1038.00" y="254.50"></text></g><g><title>0x7fdcd00f0961 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1036" y="244" width="2" height="15" fill="rgb(215,85,54)"/><text x="1039.00" y="254.50"></text></g><g><title>0x7fdcd00f0982 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1038" y="244" width="1" height="15" fill="rgb(252,34,24)"/><text x="1041.00" y="254.50"></text></g><g><title>0x7fdcd00f0998 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1039" y="244" width="1" height="15" fill="rgb(237,196,8)"/><text x="1042.00" y="254.50"></text></g><g><title>0x7fdcd00f099b (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1040" y="244" width="1" height="15" fill="rgb(219,161,5)"/><text x="1043.00" y="254.50"></text></g><g><title>0x7fdcd00f09d9 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1041" y="244" width="1" height="15" fill="rgb(217,1,49)"/><text x="1044.00" y="254.50"></text></g><g><title>0x7fdcd00f0be4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1042" y="244" width="1" height="15" fill="rgb(206,87,7)"/><text x="1045.00" y="254.50"></text></g><g><title>0x7fdcd00f0d02 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1043" y="244" width="2" height="15" fill="rgb(228,23,32)"/><text x="1046.00" y="254.50"></text></g><g><title>0x7fdcd02c2ba0 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1046" y="260" width="1" height="15" fill="rgb(233,33,24)"/><text x="1049.00" y="270.50"></text></g><g><title>0x7fdcd02c2bd3 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1047" y="260" width="1" height="15" fill="rgb(239,46,49)"/><text x="1050.00" y="270.50"></text></g><g><title>0x7fdcd02c2be7 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1048" y="260" width="1" height="15" fill="rgb(250,156,6)"/><text x="1051.00" y="270.50"></text></g><g><title>0x7fdcd02c2bfc (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1049" y="260" width="1" height="15" fill="rgb(215,100,1)"/><text x="1052.00" y="270.50"></text></g><g><title>0x7fdcd02c2c07 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="1050" y="260" width="2" height="15" fill="rgb(227,123,6)"/><text x="1053.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (9 samples, 0.89%)</title><rect x="1045" y="244" width="10" height="15" fill="rgb(230,42,44)"/><text x="1048.00" y="254.50"></text></g><g><title>0x7fdcd02c2c7f (libm-2.29.so) (3 samples, 0.30%)</title><rect x="1052" y="260" width="3" height="15" fill="rgb(213,74,35)"/><text x="1055.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.20%)</title><rect x="1055" y="244" width="2" height="15" fill="rgb(221,138,46)"/><text x="1058.00" y="254.50"></text></g><g><title>0x7fdcd00f1b24 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1072" y="260" width="1" height="15" fill="rgb(240,87,1)"/><text x="1075.00" y="270.50"></text></g><g><title>0x7fdcd00f1c34 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1073" y="260" width="1" height="15" fill="rgb(229,116,33)"/><text x="1076.00" y="270.50"></text></g><g><title>0x7fdcd00f1c38 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="1074" y="260" width="2" height="15" fill="rgb(212,24,47)"/><text x="1077.00" y="270.50"></text></g><g><title>0x7fdcd00f1c48 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1076" y="260" width="1" height="15" fill="rgb(246,223,33)"/><text x="1079.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (18 samples, 1.78%)</title><rect x="1057" y="244" width="22" height="15" fill="rgb(248,219,35)"/><text x="1060.00" y="254.50">m..</text></g><g><title>0x7fdcd00f200a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1077" y="260" width="2" height="15" fill="rgb(241,6,43)"/><text x="1080.00" y="270.50"></text></g><g><title>0x7fdcaabc2020 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1097" y="260" width="1" height="15" fill="rgb(208,150,37)"/><text x="1100.00" y="270.50"></text></g><g><title>0x7fdcaabc23a0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="1098" y="260" width="3" height="15" fill="rgb(219,114,43)"/><text x="1101.00" y="270.50"></text></g><g><title>0x7fdcd00f0906 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1101" y="260" width="1" height="15" fill="rgb(224,1,42)"/><text x="1104.00" y="270.50"></text></g><g><title>0x7fdcd00f0982 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1102" y="260" width="1" height="15" fill="rgb(251,100,37)"/><text x="1105.00" y="270.50"></text></g><g><title>0x7fdcd00f0991 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1103" y="260" width="1" height="15" fill="rgb(212,172,31)"/><text x="1106.00" y="270.50"></text></g><g><title>0x7fdcd00f0bc0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1104" y="260" width="1" height="15" fill="rgb(224,162,39)"/><text x="1107.00" y="270.50"></text></g><g><title>0x7fdcd01111ea (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1105" y="260" width="2" height="15" fill="rgb(241,128,8)"/><text x="1108.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.59%)</title><rect x="1107" y="260" width="7" height="15" fill="rgb(232,98,32)"/><text x="1110.00" y="270.50"></text></g><g><title>0x7fdcaabc26b0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.59%)</title><rect x="1150" y="276" width="7" height="15" fill="rgb(252,118,32)"/><text x="1153.00" y="286.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (195 samples, 19.31%)</title><rect x="951" y="164" width="228" height="15" fill="rgb(207,7,30)"/><text x="954.00" y="174.50">_dense_predict_proba (sklearn/..</text></g><g><title>0x7fdcaabe13fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (194 samples, 19.21%)</title><rect x="952" y="180" width="227" height="15" fill="rgb(231,159,50)"/><text x="955.00" y="190.50">0x7fdcaabe13fd (sklearn/svm/_l..</text></g><g><title>0x7fdcaabdf553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (194 samples, 19.21%)</title><rect x="952" y="196" width="227" height="15" fill="rgb(240,65,49)"/><text x="955.00" y="206.50">0x7fdcaabdf553 (sklearn/svm/_l..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (194 samples, 19.21%)</title><rect x="952" y="212" width="227" height="15" fill="rgb(240,57,29)"/><text x="955.00" y="222.50">copy_predict_proba (sklearn/sv..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (192 samples, 19.01%)</title><rect x="955" y="228" width="224" height="15" fill="rgb(217,183,37)"/><text x="958.00" y="238.50">svm_predict_probability (skle..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (86 samples, 8.51%)</title><rect x="1079" y="244" width="100" height="15" fill="rgb(242,152,48)"/><text x="1082.00" y="254.50">svm_predict_..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (56 samples, 5.54%)</title><rect x="1114" y="260" width="65" height="15" fill="rgb(238,107,3)"/><text x="1117.00" y="270.50">svm::Ke..</text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (19 samples, 1.88%)</title><rect x="1157" y="276" width="22" height="15" fill="rgb(219,213,27)"/><text x="1160.00" y="286.50">s..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.10%)</title><rect x="1181" y="196" width="1" height="15" fill="rgb(228,27,13)"/><text x="1184.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="1181" y="212" width="1" height="15" fill="rgb(239,7,1)"/><text x="1184.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.10%)</title><rect x="1182" y="196" width="2" height="15" fill="rgb(224,170,41)"/><text x="1185.00" y="206.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.10%)</title><rect x="1182" y="212" width="2" height="15" fill="rgb(214,63,17)"/><text x="1185.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.20%)</title><rect x="1184" y="196" width="2" height="15" fill="rgb(238,157,3)"/><text x="1187.00" y="206.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="1186" y="308" width="1" height="15" fill="rgb(254,62,12)"/><text x="1189.00" y="318.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.20%)</title><rect x="1186" y="196" width="2" height="15" fill="rgb(234,92,25)"/><text x="1189.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.20%)</title><rect x="1186" y="212" width="2" height="15" fill="rgb(219,201,5)"/><text x="1189.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.20%)</title><rect x="1186" y="228" width="2" height="15" fill="rgb(213,0,20)"/><text x="1189.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.20%)</title><rect x="1186" y="244" width="2" height="15" fill="rgb(214,163,39)"/><text x="1189.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (2 samples, 0.20%)</title><rect x="1186" y="260" width="2" height="15" fill="rgb(222,185,48)"/><text x="1189.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.20%)</title><rect x="1186" y="276" width="2" height="15" fill="rgb(228,77,11)"/><text x="1189.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.20%)</title><rect x="1186" y="292" width="2" height="15" fill="rgb(217,50,28)"/><text x="1189.00" y="302.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.10%)</title><rect x="1187" y="308" width="1" height="15" fill="rgb(216,130,36)"/><text x="1190.00" y="318.50"></text></g><g><title>all (1,010 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(212,121,18)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (1,010 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(218,138,35)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (205 samples, 20.30%)</title><rect x="950" y="68" width="240" height="15" fill="rgb(228,216,4)"/><text x="953.00" y="78.50">profile_skl (bench_SVC_poly_b_c..</text></g><g><title>setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (205 samples, 20.30%)</title><rect x="950" y="84" width="240" height="15" fill="rgb(246,166,6)"/><text x="953.00" y="94.50">setup_profile (bench_SVC_poly_b..</text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (205 samples, 20.30%)</title><rect x="950" y="100" width="240" height="15" fill="rgb(253,62,4)"/><text x="953.00" y="110.50">profile (bench_SVC_poly_b_cl_pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (205 samples, 20.30%)</title><rect x="950" y="116" width="240" height="15" fill="rgb(226,145,52)"/><text x="953.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (205 samples, 20.30%)</title><rect x="950" y="132" width="240" height="15" fill="rgb(219,62,33)"/><text x="953.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchma..</text></g><g><title>_predict_proba (sklearn/svm/_base.py) (205 samples, 20.30%)</title><rect x="950" y="148" width="240" height="15" fill="rgb(235,76,9)"/><text x="953.00" y="158.50">_predict_proba (sklearn/svm/_ba..</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (9 samples, 0.89%)</title><rect x="1179" y="164" width="11" height="15" fill="rgb(237,157,47)"/><text x="1182.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (9 samples, 0.89%)</title><rect x="1179" y="180" width="11" height="15" fill="rgb(215,21,16)"/><text x="1182.00" y="190.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.10%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(208,143,8)"/><text x="1191.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.10%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(235,35,18)"/><text x="1191.00" y="222.50"></text></g></g></svg>