<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1558" onload="init(evt)" viewBox="0 0 1200 1558" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1558" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1541.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1541.00"> </text><g id="frames"><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(229,156,4)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(247,90,16)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="10" y="1012" width="2" height="15" fill="rgb(253,184,54)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.17%)</title><rect x="10" y="1028" width="2" height="15" fill="rgb(229,111,9)"/><text x="13.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.17%)</title><rect x="10" y="1044" width="2" height="15" fill="rgb(226,28,31)"/><text x="13.00" y="1054.50"></text></g><g><title>mbstowcs (libc-2.29.so) (1 samples, 0.17%)</title><rect x="10" y="1060" width="2" height="15" fill="rgb(223,206,28)"/><text x="13.00" y="1070.50"></text></g><g><title>0x7fbea005a541 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="10" y="1076" width="2" height="15" fill="rgb(211,211,42)"/><text x="13.00" y="1086.50"></text></g><g><title>0x7fbe9ffd52b2 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="10" y="1092" width="2" height="15" fill="rgb(251,124,38)"/><text x="13.00" y="1102.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(229,62,41)"/><text x="15.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.17%)</title><rect x="12" y="996" width="2" height="15" fill="rgb(210,182,13)"/><text x="15.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.17%)</title><rect x="12" y="1012" width="2" height="15" fill="rgb(208,61,46)"/><text x="15.00" y="1022.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (3 samples, 0.51%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(232,166,33)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (3 samples, 0.51%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(240,33,40)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 0.51%)</title><rect x="10" y="900" width="6" height="15" fill="rgb(238,172,17)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 0.51%)</title><rect x="10" y="916" width="6" height="15" fill="rgb(210,146,4)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="10" y="932" width="6" height="15" fill="rgb(233,170,17)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="10" y="948" width="6" height="15" fill="rgb(224,73,14)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="10" y="964" width="6" height="15" fill="rgb(250,133,20)"/><text x="13.00" y="974.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.17%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(254,50,5)"/><text x="17.00" y="990.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="16" y="932" width="4" height="15" fill="rgb(212,179,20)"/><text x="19.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="16" y="948" width="4" height="15" fill="rgb(215,85,43)"/><text x="19.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="16" y="964" width="4" height="15" fill="rgb(234,204,33)"/><text x="19.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.34%)</title><rect x="16" y="980" width="4" height="15" fill="rgb(254,168,54)"/><text x="19.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.34%)</title><rect x="16" y="996" width="4" height="15" fill="rgb(225,197,21)"/><text x="19.00" y="1006.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.51%)</title><rect x="16" y="868" width="6" height="15" fill="rgb(235,14,46)"/><text x="19.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.51%)</title><rect x="16" y="884" width="6" height="15" fill="rgb(215,204,17)"/><text x="19.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.51%)</title><rect x="16" y="900" width="6" height="15" fill="rgb(208,148,16)"/><text x="19.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.51%)</title><rect x="16" y="916" width="6" height="15" fill="rgb(244,212,21)"/><text x="19.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(217,2,10)"/><text x="23.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.17%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(238,208,9)"/><text x="23.00" y="958.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.17%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(234,151,19)"/><text x="23.00" y="974.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (8 samples, 1.36%)</title><rect x="10" y="836" width="16" height="15" fill="rgb(242,66,4)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (8 samples, 1.36%)</title><rect x="10" y="852" width="16" height="15" fill="rgb(246,66,19)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="22" y="868" width="4" height="15" fill="rgb(250,64,20)"/><text x="25.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="22" y="884" width="4" height="15" fill="rgb(247,62,12)"/><text x="25.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="22" y="900" width="4" height="15" fill="rgb(222,48,39)"/><text x="25.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="22" y="916" width="4" height="15" fill="rgb(216,24,52)"/><text x="25.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="22" y="932" width="4" height="15" fill="rgb(217,130,39)"/><text x="25.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.34%)</title><rect x="22" y="948" width="4" height="15" fill="rgb(216,5,20)"/><text x="25.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.34%)</title><rect x="22" y="964" width="4" height="15" fill="rgb(228,24,45)"/><text x="25.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="196" width="18" height="15" fill="rgb(246,114,12)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="212" width="18" height="15" fill="rgb(254,212,2)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="228" width="18" height="15" fill="rgb(250,210,14)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="244" width="18" height="15" fill="rgb(220,1,47)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.53%)</title><rect x="10" y="260" width="18" height="15" fill="rgb(223,76,17)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="276" width="18" height="15" fill="rgb(244,163,13)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (9 samples, 1.53%)</title><rect x="10" y="292" width="18" height="15" fill="rgb(222,4,23)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="308" width="18" height="15" fill="rgb(225,2,50)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="324" width="18" height="15" fill="rgb(218,183,49)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="340" width="18" height="15" fill="rgb(244,200,21)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.53%)</title><rect x="10" y="356" width="18" height="15" fill="rgb(218,208,36)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="372" width="18" height="15" fill="rgb(247,49,15)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (9 samples, 1.53%)</title><rect x="10" y="388" width="18" height="15" fill="rgb(206,189,4)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="404" width="18" height="15" fill="rgb(209,27,9)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="420" width="18" height="15" fill="rgb(210,141,5)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="436" width="18" height="15" fill="rgb(238,69,39)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.53%)</title><rect x="10" y="452" width="18" height="15" fill="rgb(254,158,19)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="468" width="18" height="15" fill="rgb(223,95,20)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (9 samples, 1.53%)</title><rect x="10" y="484" width="18" height="15" fill="rgb(239,197,8)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="500" width="18" height="15" fill="rgb(222,57,17)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="516" width="18" height="15" fill="rgb(241,193,47)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="532" width="18" height="15" fill="rgb(233,37,43)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.53%)</title><rect x="10" y="548" width="18" height="15" fill="rgb(241,147,24)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="564" width="18" height="15" fill="rgb(207,97,32)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (9 samples, 1.53%)</title><rect x="10" y="580" width="18" height="15" fill="rgb(228,49,7)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="596" width="18" height="15" fill="rgb(229,17,28)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="612" width="18" height="15" fill="rgb(234,158,27)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="628" width="18" height="15" fill="rgb(240,225,41)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="644" width="18" height="15" fill="rgb(220,38,4)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="660" width="18" height="15" fill="rgb(225,97,54)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="676" width="18" height="15" fill="rgb(242,115,41)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.53%)</title><rect x="10" y="692" width="18" height="15" fill="rgb(216,146,51)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="708" width="18" height="15" fill="rgb(244,106,31)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (9 samples, 1.53%)</title><rect x="10" y="724" width="18" height="15" fill="rgb(241,60,19)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="740" width="18" height="15" fill="rgb(211,72,11)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="756" width="18" height="15" fill="rgb(239,89,42)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="772" width="18" height="15" fill="rgb(245,69,9)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.53%)</title><rect x="10" y="788" width="18" height="15" fill="rgb(245,83,46)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.53%)</title><rect x="10" y="804" width="18" height="15" fill="rgb(225,140,54)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (9 samples, 1.53%)</title><rect x="10" y="820" width="18" height="15" fill="rgb(206,90,47)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="26" y="836" width="2" height="15" fill="rgb(246,1,27)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="26" y="852" width="2" height="15" fill="rgb(211,178,46)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(229,30,36)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(241,159,11)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="26" y="900" width="2" height="15" fill="rgb(254,204,8)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.17%)</title><rect x="26" y="916" width="2" height="15" fill="rgb(211,39,41)"/><text x="29.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.17%)</title><rect x="26" y="932" width="2" height="15" fill="rgb(211,141,43)"/><text x="29.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.17%)</title><rect x="26" y="948" width="2" height="15" fill="rgb(218,47,36)"/><text x="29.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.17%)</title><rect x="26" y="964" width="2" height="15" fill="rgb(254,48,1)"/><text x="29.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="26" y="980" width="2" height="15" fill="rgb(208,101,14)"/><text x="29.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="26" y="996" width="2" height="15" fill="rgb(224,50,12)"/><text x="29.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.17%)</title><rect x="26" y="1012" width="2" height="15" fill="rgb(213,26,11)"/><text x="29.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="26" y="1028" width="2" height="15" fill="rgb(235,182,3)"/><text x="29.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.17%)</title><rect x="26" y="1044" width="2" height="15" fill="rgb(212,0,5)"/><text x="29.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="26" y="1060" width="2" height="15" fill="rgb(237,207,22)"/><text x="29.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.17%)</title><rect x="26" y="1076" width="2" height="15" fill="rgb(208,26,15)"/><text x="29.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="26" y="1092" width="2" height="15" fill="rgb(205,46,31)"/><text x="29.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.17%)</title><rect x="26" y="1108" width="2" height="15" fill="rgb(239,74,18)"/><text x="29.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="26" y="1124" width="2" height="15" fill="rgb(228,95,26)"/><text x="29.00" y="1134.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.17%)</title><rect x="28" y="724" width="2" height="15" fill="rgb(225,99,54)"/><text x="31.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="740" width="2" height="15" fill="rgb(231,135,3)"/><text x="31.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="756" width="2" height="15" fill="rgb(248,24,49)"/><text x="31.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="772" width="2" height="15" fill="rgb(238,35,28)"/><text x="31.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="28" y="788" width="2" height="15" fill="rgb(239,28,13)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="804" width="2" height="15" fill="rgb(219,200,25)"/><text x="31.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.17%)</title><rect x="28" y="820" width="2" height="15" fill="rgb(251,68,13)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="836" width="2" height="15" fill="rgb(244,98,52)"/><text x="31.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="852" width="2" height="15" fill="rgb(249,200,37)"/><text x="31.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="868" width="2" height="15" fill="rgb(208,161,27)"/><text x="31.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="28" y="884" width="2" height="15" fill="rgb(221,175,5)"/><text x="31.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="900" width="2" height="15" fill="rgb(237,55,1)"/><text x="31.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.17%)</title><rect x="28" y="916" width="2" height="15" fill="rgb(248,21,19)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="932" width="2" height="15" fill="rgb(227,199,13)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="948" width="2" height="15" fill="rgb(235,137,38)"/><text x="31.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="964" width="2" height="15" fill="rgb(228,26,0)"/><text x="31.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="28" y="980" width="2" height="15" fill="rgb(242,137,49)"/><text x="31.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="996" width="2" height="15" fill="rgb(213,83,30)"/><text x="31.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.17%)</title><rect x="28" y="1012" width="2" height="15" fill="rgb(246,113,47)"/><text x="31.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1028" width="2" height="15" fill="rgb(207,43,51)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1044" width="2" height="15" fill="rgb(208,170,3)"/><text x="31.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1060" width="2" height="15" fill="rgb(220,80,10)"/><text x="31.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="28" y="1076" width="2" height="15" fill="rgb(210,203,39)"/><text x="31.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1092" width="2" height="15" fill="rgb(223,190,52)"/><text x="31.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.17%)</title><rect x="28" y="1108" width="2" height="15" fill="rgb(240,207,29)"/><text x="31.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1124" width="2" height="15" fill="rgb(218,227,52)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1140" width="2" height="15" fill="rgb(214,183,1)"/><text x="31.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1156" width="2" height="15" fill="rgb(210,186,52)"/><text x="31.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="28" y="1172" width="2" height="15" fill="rgb(231,127,53)"/><text x="31.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1188" width="2" height="15" fill="rgb(241,136,52)"/><text x="31.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.17%)</title><rect x="28" y="1204" width="2" height="15" fill="rgb(254,101,2)"/><text x="31.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1220" width="2" height="15" fill="rgb(253,196,11)"/><text x="31.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1236" width="2" height="15" fill="rgb(216,208,27)"/><text x="31.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1252" width="2" height="15" fill="rgb(242,33,25)"/><text x="31.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="28" y="1268" width="2" height="15" fill="rgb(225,59,29)"/><text x="31.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1284" width="2" height="15" fill="rgb(248,116,7)"/><text x="31.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.17%)</title><rect x="28" y="1300" width="2" height="15" fill="rgb(251,153,52)"/><text x="31.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1316" width="2" height="15" fill="rgb(253,163,11)"/><text x="31.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1332" width="2" height="15" fill="rgb(228,140,10)"/><text x="31.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1348" width="2" height="15" fill="rgb(251,217,10)"/><text x="31.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="28" y="1364" width="2" height="15" fill="rgb(213,86,2)"/><text x="31.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1380" width="2" height="15" fill="rgb(217,79,9)"/><text x="31.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/datetimes.py) (1 samples, 0.17%)</title><rect x="28" y="1396" width="2" height="15" fill="rgb(234,82,19)"/><text x="31.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1412" width="2" height="15" fill="rgb(207,226,44)"/><text x="31.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1428" width="2" height="15" fill="rgb(226,142,30)"/><text x="31.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1444" width="2" height="15" fill="rgb(218,53,48)"/><text x="31.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="28" y="1460" width="2" height="15" fill="rgb(215,118,49)"/><text x="31.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1476" width="2" height="15" fill="rgb(210,1,5)"/><text x="31.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/datetimelike.py) (1 samples, 0.17%)</title><rect x="28" y="1492" width="2" height="15" fill="rgb(217,191,23)"/><text x="31.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1508" width="2" height="15" fill="rgb(212,216,38)"/><text x="31.00" y="1518.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (2 samples, 0.34%)</title><rect x="28" y="436" width="4" height="15" fill="rgb(214,131,32)"/><text x="31.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="28" y="452" width="4" height="15" fill="rgb(245,186,17)"/><text x="31.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="28" y="468" width="4" height="15" fill="rgb(254,40,48)"/><text x="31.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="28" y="484" width="4" height="15" fill="rgb(221,71,39)"/><text x="31.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="28" y="500" width="4" height="15" fill="rgb(249,92,20)"/><text x="31.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="28" y="516" width="4" height="15" fill="rgb(229,125,37)"/><text x="31.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.34%)</title><rect x="28" y="532" width="4" height="15" fill="rgb(217,214,8)"/><text x="31.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="28" y="548" width="4" height="15" fill="rgb(209,14,51)"/><text x="31.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="28" y="564" width="4" height="15" fill="rgb(239,147,5)"/><text x="31.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="28" y="580" width="4" height="15" fill="rgb(221,191,9)"/><text x="31.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="28" y="596" width="4" height="15" fill="rgb(213,1,11)"/><text x="31.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="28" y="612" width="4" height="15" fill="rgb(211,220,2)"/><text x="31.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.34%)</title><rect x="28" y="628" width="4" height="15" fill="rgb(226,129,4)"/><text x="31.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="28" y="644" width="4" height="15" fill="rgb(211,136,54)"/><text x="31.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="28" y="660" width="4" height="15" fill="rgb(254,37,44)"/><text x="31.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="28" y="676" width="4" height="15" fill="rgb(254,139,38)"/><text x="31.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="28" y="692" width="4" height="15" fill="rgb(248,123,26)"/><text x="31.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="28" y="708" width="4" height="15" fill="rgb(208,171,32)"/><text x="31.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.17%)</title><rect x="30" y="724" width="2" height="15" fill="rgb(232,196,23)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="740" width="2" height="15" fill="rgb(214,213,21)"/><text x="33.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="756" width="2" height="15" fill="rgb(210,199,30)"/><text x="33.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="772" width="2" height="15" fill="rgb(225,101,51)"/><text x="33.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="30" y="788" width="2" height="15" fill="rgb(231,40,39)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="804" width="2" height="15" fill="rgb(230,135,21)"/><text x="33.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py) (1 samples, 0.17%)</title><rect x="30" y="820" width="2" height="15" fill="rgb(209,41,45)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="836" width="2" height="15" fill="rgb(207,152,46)"/><text x="33.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="852" width="2" height="15" fill="rgb(249,212,0)"/><text x="33.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="868" width="2" height="15" fill="rgb(206,28,18)"/><text x="33.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="30" y="884" width="2" height="15" fill="rgb(215,228,0)"/><text x="33.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="900" width="2" height="15" fill="rgb(214,86,37)"/><text x="33.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py) (1 samples, 0.17%)</title><rect x="30" y="916" width="2" height="15" fill="rgb(207,52,34)"/><text x="33.00" y="926.50"></text></g><g><title>ExcelFile (pandas/io/excel/_base.py) (1 samples, 0.17%)</title><rect x="30" y="932" width="2" height="15" fill="rgb(253,64,52)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="948" width="2" height="15" fill="rgb(237,97,9)"/><text x="33.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="964" width="2" height="15" fill="rgb(249,32,34)"/><text x="33.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="980" width="2" height="15" fill="rgb(225,7,43)"/><text x="33.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="30" y="996" width="2" height="15" fill="rgb(248,21,52)"/><text x="33.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="30" y="1012" width="2" height="15" fill="rgb(237,210,17)"/><text x="33.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_odfreader.py) (1 samples, 0.17%)</title><rect x="30" y="1028" width="2" height="15" fill="rgb(228,25,18)"/><text x="33.00" y="1038.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.51%)</title><rect x="28" y="340" width="6" height="15" fill="rgb(220,218,10)"/><text x="31.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="28" y="356" width="6" height="15" fill="rgb(231,144,1)"/><text x="31.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="28" y="372" width="6" height="15" fill="rgb(237,124,20)"/><text x="31.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="28" y="388" width="6" height="15" fill="rgb(254,167,4)"/><text x="31.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="28" y="404" width="6" height="15" fill="rgb(212,30,24)"/><text x="31.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="28" y="420" width="6" height="15" fill="rgb(254,34,28)"/><text x="31.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.17%)</title><rect x="32" y="436" width="2" height="15" fill="rgb(222,41,8)"/><text x="35.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="452" width="2" height="15" fill="rgb(226,113,16)"/><text x="35.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="468" width="2" height="15" fill="rgb(244,76,37)"/><text x="35.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="484" width="2" height="15" fill="rgb(241,203,41)"/><text x="35.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="32" y="500" width="2" height="15" fill="rgb(210,94,20)"/><text x="35.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="516" width="2" height="15" fill="rgb(234,171,37)"/><text x="35.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_twenty_newsgroups.py) (1 samples, 0.17%)</title><rect x="32" y="532" width="2" height="15" fill="rgb(231,114,41)"/><text x="35.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="548" width="2" height="15" fill="rgb(248,186,27)"/><text x="35.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="564" width="2" height="15" fill="rgb(229,37,0)"/><text x="35.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="580" width="2" height="15" fill="rgb(236,213,21)"/><text x="35.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="596" width="2" height="15" fill="rgb(211,159,34)"/><text x="35.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="612" width="2" height="15" fill="rgb(225,196,36)"/><text x="35.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="628" width="2" height="15" fill="rgb(245,192,10)"/><text x="35.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="32" y="644" width="2" height="15" fill="rgb(219,83,48)"/><text x="35.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="660" width="2" height="15" fill="rgb(218,90,28)"/><text x="35.00" y="670.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_extraction/__init__.py) (1 samples, 0.17%)</title><rect x="32" y="676" width="2" height="15" fill="rgb(233,208,39)"/><text x="35.00" y="686.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="692" width="2" height="15" fill="rgb(240,114,3)"/><text x="35.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="708" width="2" height="15" fill="rgb(253,72,25)"/><text x="35.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="724" width="2" height="15" fill="rgb(246,3,29)"/><text x="35.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="740" width="2" height="15" fill="rgb(218,99,22)"/><text x="35.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="756" width="2" height="15" fill="rgb(243,48,1)"/><text x="35.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="32" y="772" width="2" height="15" fill="rgb(246,36,52)"/><text x="35.00" y="782.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="32" y="788" width="2" height="15" fill="rgb(226,91,44)"/><text x="35.00" y="798.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="32" y="804" width="2" height="15" fill="rgb(207,179,9)"/><text x="35.00" y="814.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (4 samples, 0.68%)</title><rect x="28" y="244" width="8" height="15" fill="rgb(217,54,39)"/><text x="31.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.68%)</title><rect x="28" y="260" width="8" height="15" fill="rgb(240,194,15)"/><text x="31.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.68%)</title><rect x="28" y="276" width="8" height="15" fill="rgb(250,6,4)"/><text x="31.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.68%)</title><rect x="28" y="292" width="8" height="15" fill="rgb(235,9,22)"/><text x="31.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.68%)</title><rect x="28" y="308" width="8" height="15" fill="rgb(251,176,35)"/><text x="31.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.68%)</title><rect x="28" y="324" width="8" height="15" fill="rgb(222,60,5)"/><text x="31.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.17%)</title><rect x="34" y="340" width="2" height="15" fill="rgb(239,197,37)"/><text x="37.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="356" width="2" height="15" fill="rgb(242,149,17)"/><text x="37.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="372" width="2" height="15" fill="rgb(235,80,43)"/><text x="37.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="388" width="2" height="15" fill="rgb(221,2,5)"/><text x="37.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="404" width="2" height="15" fill="rgb(247,158,12)"/><text x="37.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="420" width="2" height="15" fill="rgb(222,160,47)"/><text x="37.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="436" width="2" height="15" fill="rgb(221,0,29)"/><text x="37.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="34" y="452" width="2" height="15" fill="rgb(236,76,37)"/><text x="37.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="468" width="2" height="15" fill="rgb(240,126,32)"/><text x="37.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.17%)</title><rect x="34" y="484" width="2" height="15" fill="rgb(244,72,44)"/><text x="37.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="500" width="2" height="15" fill="rgb(254,226,12)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="516" width="2" height="15" fill="rgb(231,72,33)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="532" width="2" height="15" fill="rgb(236,136,44)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="34" y="548" width="2" height="15" fill="rgb(209,139,23)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="564" width="2" height="15" fill="rgb(233,191,12)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.17%)</title><rect x="34" y="580" width="2" height="15" fill="rgb(238,191,33)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="596" width="2" height="15" fill="rgb(214,110,40)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="612" width="2" height="15" fill="rgb(240,108,12)"/><text x="37.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="628" width="2" height="15" fill="rgb(244,88,42)"/><text x="37.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="644" width="2" height="15" fill="rgb(218,114,46)"/><text x="37.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="660" width="2" height="15" fill="rgb(214,85,41)"/><text x="37.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="676" width="2" height="15" fill="rgb(241,176,49)"/><text x="37.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="34" y="692" width="2" height="15" fill="rgb(252,78,8)"/><text x="37.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="708" width="2" height="15" fill="rgb(214,117,0)"/><text x="37.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.17%)</title><rect x="34" y="724" width="2" height="15" fill="rgb(235,69,54)"/><text x="37.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="740" width="2" height="15" fill="rgb(241,83,53)"/><text x="37.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="756" width="2" height="15" fill="rgb(245,20,21)"/><text x="37.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="772" width="2" height="15" fill="rgb(220,171,40)"/><text x="37.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="34" y="788" width="2" height="15" fill="rgb(230,3,42)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="804" width="2" height="15" fill="rgb(238,144,3)"/><text x="37.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.17%)</title><rect x="34" y="820" width="2" height="15" fill="rgb(223,83,16)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="836" width="2" height="15" fill="rgb(239,228,30)"/><text x="37.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="852" width="2" height="15" fill="rgb(227,164,10)"/><text x="37.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="868" width="2" height="15" fill="rgb(248,172,38)"/><text x="37.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="34" y="884" width="2" height="15" fill="rgb(238,34,46)"/><text x="37.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="900" width="2" height="15" fill="rgb(234,115,2)"/><text x="37.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.17%)</title><rect x="34" y="916" width="2" height="15" fill="rgb(243,129,53)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="932" width="2" height="15" fill="rgb(247,13,12)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="948" width="2" height="15" fill="rgb(214,176,30)"/><text x="37.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="964" width="2" height="15" fill="rgb(252,10,26)"/><text x="37.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="980" width="2" height="15" fill="rgb(233,194,7)"/><text x="37.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="996" width="2" height="15" fill="rgb(247,109,48)"/><text x="37.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="1012" width="2" height="15" fill="rgb(212,154,34)"/><text x="37.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="34" y="1028" width="2" height="15" fill="rgb(205,147,23)"/><text x="37.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="1044" width="2" height="15" fill="rgb(218,118,31)"/><text x="37.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.17%)</title><rect x="34" y="1060" width="2" height="15" fill="rgb(247,58,45)"/><text x="37.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="1076" width="2" height="15" fill="rgb(208,179,33)"/><text x="37.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="1092" width="2" height="15" fill="rgb(220,184,48)"/><text x="37.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="34" y="1108" width="2" height="15" fill="rgb(220,206,21)"/><text x="37.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="34" y="1124" width="2" height="15" fill="rgb(207,77,12)"/><text x="37.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="34" y="1140" width="2" height="15" fill="rgb(222,110,44)"/><text x="37.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="34" y="1156" width="2" height="15" fill="rgb(223,115,18)"/><text x="37.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.39%)</title><rect x="10" y="68" width="28" height="15" fill="rgb(220,108,25)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.39%)</title><rect x="10" y="84" width="28" height="15" fill="rgb(205,192,26)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.39%)</title><rect x="10" y="100" width="28" height="15" fill="rgb(207,132,34)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 2.39%)</title><rect x="10" y="116" width="28" height="15" fill="rgb(246,86,40)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.39%)</title><rect x="10" y="132" width="28" height="15" fill="rgb(237,165,30)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py) (14 samples, 2.39%)</title><rect x="10" y="148" width="28" height="15" fill="rgb(223,207,48)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.39%)</title><rect x="10" y="164" width="28" height="15" fill="rgb(236,125,44)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.39%)</title><rect x="10" y="180" width="28" height="15" fill="rgb(219,26,53)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.85%)</title><rect x="28" y="196" width="10" height="15" fill="rgb(252,157,29)"/><text x="31.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.85%)</title><rect x="28" y="212" width="10" height="15" fill="rgb(213,218,31)"/><text x="31.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.85%)</title><rect x="28" y="228" width="10" height="15" fill="rgb(247,204,12)"/><text x="31.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.17%)</title><rect x="36" y="244" width="2" height="15" fill="rgb(251,66,30)"/><text x="39.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="260" width="2" height="15" fill="rgb(213,77,8)"/><text x="39.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="276" width="2" height="15" fill="rgb(226,154,10)"/><text x="39.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="292" width="2" height="15" fill="rgb(225,154,28)"/><text x="39.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="308" width="2" height="15" fill="rgb(231,179,16)"/><text x="39.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="324" width="2" height="15" fill="rgb(235,68,51)"/><text x="39.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="36" y="340" width="2" height="15" fill="rgb(214,51,36)"/><text x="39.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="356" width="2" height="15" fill="rgb(226,149,12)"/><text x="39.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.17%)</title><rect x="36" y="372" width="2" height="15" fill="rgb(224,107,20)"/><text x="39.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="388" width="2" height="15" fill="rgb(218,171,9)"/><text x="39.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="404" width="2" height="15" fill="rgb(252,190,5)"/><text x="39.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="420" width="2" height="15" fill="rgb(211,102,4)"/><text x="39.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="436" width="2" height="15" fill="rgb(232,184,7)"/><text x="39.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="452" width="2" height="15" fill="rgb(233,192,50)"/><text x="39.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="36" y="468" width="2" height="15" fill="rgb(225,204,43)"/><text x="39.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="484" width="2" height="15" fill="rgb(223,90,33)"/><text x="39.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py) (1 samples, 0.17%)</title><rect x="36" y="500" width="2" height="15" fill="rgb(206,7,41)"/><text x="39.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.17%)</title><rect x="36" y="516" width="2" height="15" fill="rgb(217,139,15)"/><text x="39.00" y="526.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.17%)</title><rect x="36" y="532" width="2" height="15" fill="rgb(229,108,33)"/><text x="39.00" y="542.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="40" y="116" width="2" height="15" fill="rgb(227,34,44)"/><text x="43.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.17%)</title><rect x="40" y="132" width="2" height="15" fill="rgb(227,82,19)"/><text x="43.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.17%)</title><rect x="40" y="148" width="2" height="15" fill="rgb(208,127,40)"/><text x="43.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.17%)</title><rect x="40" y="164" width="2" height="15" fill="rgb(235,142,26)"/><text x="43.00" y="174.50"></text></g><g><title>0x7fbea002ceb0 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="40" y="180" width="2" height="15" fill="rgb(227,3,33)"/><text x="43.00" y="190.50"></text></g><g><title>0x7fbea002bc73 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="40" y="196" width="2" height="15" fill="rgb(252,212,20)"/><text x="43.00" y="206.50"></text></g><g><title>0x7fbea002baa4 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="40" y="212" width="2" height="15" fill="rgb(221,202,35)"/><text x="43.00" y="222.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.34%)</title><rect x="46" y="180" width="4" height="15" fill="rgb(249,103,29)"/><text x="49.00" y="190.50"></text></g><g><title>0x7fbe6009cff9 (?) (1 samples, 0.17%)</title><rect x="56" y="212" width="2" height="15" fill="rgb(233,15,37)"/><text x="59.00" y="222.50"></text></g><g><title>0x7fbe60097ef6 (?) (1 samples, 0.17%)</title><rect x="56" y="228" width="2" height="15" fill="rgb(231,88,17)"/><text x="59.00" y="238.50"></text></g><g><title>0x7fbe6008c962 (?) (1 samples, 0.17%)</title><rect x="56" y="244" width="2" height="15" fill="rgb(207,157,23)"/><text x="59.00" y="254.50"></text></g><g><title>0x7fbe600c07a7 (?) (1 samples, 0.17%)</title><rect x="56" y="260" width="2" height="15" fill="rgb(222,92,18)"/><text x="59.00" y="270.50"></text></g><g><title>0x7fbe600c0379 (?) (1 samples, 0.17%)</title><rect x="56" y="276" width="2" height="15" fill="rgb(235,191,51)"/><text x="59.00" y="286.50"></text></g><g><title>0x7fbe6051e8b8 (?) (1 samples, 0.17%)</title><rect x="56" y="292" width="2" height="15" fill="rgb(222,165,45)"/><text x="59.00" y="302.50"></text></g><g><title>0x7fbe6051cc7f (?) (1 samples, 0.17%)</title><rect x="56" y="308" width="2" height="15" fill="rgb(242,106,41)"/><text x="59.00" y="318.50"></text></g><g><title>0x7fbe6052f99c (?) (1 samples, 0.17%)</title><rect x="56" y="324" width="2" height="15" fill="rgb(212,116,46)"/><text x="59.00" y="334.50"></text></g><g><title>0x7fbe60214adb (?) (1 samples, 0.17%)</title><rect x="56" y="340" width="2" height="15" fill="rgb(228,70,45)"/><text x="59.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="58" y="244" width="2" height="15" fill="rgb(214,80,0)"/><text x="61.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="58" y="260" width="2" height="15" fill="rgb(229,67,7)"/><text x="61.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.34%)</title><rect x="58" y="212" width="4" height="15" fill="rgb(232,163,8)"/><text x="61.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="58" y="228" width="4" height="15" fill="rgb(219,10,19)"/><text x="61.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="60" y="244" width="2" height="15" fill="rgb(226,128,28)"/><text x="63.00" y="254.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="60" y="260" width="2" height="15" fill="rgb(228,17,0)"/><text x="63.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="64" y="292" width="2" height="15" fill="rgb(238,42,40)"/><text x="67.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="64" y="308" width="2" height="15" fill="rgb(248,155,4)"/><text x="67.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="64" y="324" width="2" height="15" fill="rgb(215,18,46)"/><text x="67.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="66" y="292" width="2" height="15" fill="rgb(221,140,12)"/><text x="69.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="66" y="308" width="2" height="15" fill="rgb(229,86,40)"/><text x="69.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="66" y="324" width="2" height="15" fill="rgb(239,138,6)"/><text x="69.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="66" y="340" width="2" height="15" fill="rgb(206,162,13)"/><text x="69.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="68" y="340" width="2" height="15" fill="rgb(222,22,16)"/><text x="71.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="68" y="356" width="2" height="15" fill="rgb(236,138,9)"/><text x="71.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="68" y="372" width="2" height="15" fill="rgb(229,218,54)"/><text x="71.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="68" y="388" width="2" height="15" fill="rgb(226,228,6)"/><text x="71.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="70" y="340" width="2" height="15" fill="rgb(216,108,3)"/><text x="73.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="474" y="356" width="4" height="15" fill="rgb(225,62,28)"/><text x="477.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="474" y="372" width="4" height="15" fill="rgb(217,203,34)"/><text x="477.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="474" y="388" width="4" height="15" fill="rgb(235,36,14)"/><text x="477.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="474" y="404" width="4" height="15" fill="rgb(211,216,0)"/><text x="477.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="474" y="420" width="4" height="15" fill="rgb(212,179,23)"/><text x="477.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="474" y="436" width="4" height="15" fill="rgb(218,69,17)"/><text x="477.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="474" y="452" width="4" height="15" fill="rgb(244,63,42)"/><text x="477.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="474" y="468" width="4" height="15" fill="rgb(216,5,50)"/><text x="477.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="474" y="484" width="4" height="15" fill="rgb(208,29,38)"/><text x="477.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="476" y="500" width="2" height="15" fill="rgb(225,35,0)"/><text x="479.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="476" y="516" width="2" height="15" fill="rgb(245,93,52)"/><text x="479.00" y="526.50"></text></g><g><title>0x7fbea004cdae (libc-2.29.so) (2 samples, 0.34%)</title><rect x="480" y="372" width="4" height="15" fill="rgb(210,65,49)"/><text x="483.00" y="382.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (208 samples, 35.43%)</title><rect x="68" y="324" width="418" height="15" fill="rgb(209,80,14)"/><text x="71.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/cap..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (206 samples, 35.09%)</title><rect x="72" y="340" width="414" height="15" fill="rgb(230,221,10)"/><text x="75.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxr..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.68%)</title><rect x="478" y="356" width="8" height="15" fill="rgb(212,187,12)"/><text x="481.00" y="366.50"></text></g><g><title>0x7fbea004cdbb (libc-2.29.so) (1 samples, 0.17%)</title><rect x="484" y="372" width="2" height="15" fill="rgb(241,149,2)"/><text x="487.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (212 samples, 36.12%)</title><rect x="64" y="276" width="426" height="15" fill="rgb(244,184,44)"/><text x="67.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (210 samples, 35.78%)</title><rect x="68" y="292" width="422" height="15" fill="rgb(230,136,48)"/><text x="71.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (210 samples, 35.78%)</title><rect x="68" y="308" width="422" height="15" fill="rgb(214,227,54)"/><text x="71.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/on..</text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.34%)</title><rect x="486" y="324" width="4" height="15" fill="rgb(213,52,53)"/><text x="489.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.34%)</title><rect x="486" y="340" width="4" height="15" fill="rgb(217,114,49)"/><text x="489.00" y="350.50"></text></g><g><title>0x7fbea002e344 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="488" y="356" width="2" height="15" fill="rgb(231,225,9)"/><text x="491.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (214 samples, 36.46%)</title><rect x="62" y="260" width="430" height="15" fill="rgb(210,71,7)"/><text x="65.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxr..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="490" y="276" width="2" height="15" fill="rgb(229,136,54)"/><text x="493.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="492" y="260" width="4" height="15" fill="rgb(212,94,20)"/><text x="495.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="492" y="276" width="4" height="15" fill="rgb(240,66,6)"/><text x="495.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="494" y="292" width="2" height="15" fill="rgb(226,34,44)"/><text x="497.00" y="302.50"></text></g><g><title>0x7fbea004cd94 (libc-2.29.so) (3 samples, 0.51%)</title><rect x="496" y="276" width="6" height="15" fill="rgb(205,96,52)"/><text x="499.00" y="286.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.17%)</title><rect x="502" y="276" width="2" height="15" fill="rgb(223,19,47)"/><text x="505.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="502" y="292" width="2" height="15" fill="rgb(243,182,42)"/><text x="505.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="502" y="308" width="2" height="15" fill="rgb(210,175,10)"/><text x="505.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.02%)</title><rect x="496" y="260" width="12" height="15" fill="rgb(207,149,5)"/><text x="499.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="504" y="276" width="4" height="15" fill="rgb(239,143,24)"/><text x="507.00" y="286.50"></text></g><g><title>0x7fbe60063960 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="506" y="292" width="2" height="15" fill="rgb(225,97,3)"/><text x="509.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="508" y="308" width="2" height="15" fill="rgb(242,82,11)"/><text x="511.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="508" y="324" width="2" height="15" fill="rgb(249,108,48)"/><text x="511.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="508" y="340" width="2" height="15" fill="rgb(247,30,19)"/><text x="511.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="508" y="356" width="2" height="15" fill="rgb(229,172,5)"/><text x="511.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="508" y="372" width="2" height="15" fill="rgb(252,40,3)"/><text x="511.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="508" y="388" width="2" height="15" fill="rgb(244,192,16)"/><text x="511.00" y="398.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (224 samples, 38.16%)</title><rect x="62" y="244" width="450" height="15" fill="rgb(215,170,17)"/><text x="65.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{la..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="508" y="260" width="4" height="15" fill="rgb(217,115,38)"/><text x="511.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="508" y="276" width="4" height="15" fill="rgb(230,86,22)"/><text x="511.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="508" y="292" width="4" height="15" fill="rgb(209,139,50)"/><text x="511.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::ReleaseBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="510" y="308" width="2" height="15" fill="rgb(224,102,24)"/><text x="513.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="512" y="244" width="2" height="15" fill="rgb(254,121,46)"/><text x="515.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="512" y="260" width="2" height="15" fill="rgb(209,69,37)"/><text x="515.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="512" y="276" width="2" height="15" fill="rgb(224,133,52)"/><text x="515.00" y="286.50"></text></g><g><title>0x7fbea004cd50 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="512" y="292" width="2" height="15" fill="rgb(246,18,7)"/><text x="515.00" y="302.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py) (239 samples, 40.72%)</title><rect x="38" y="68" width="480" height="15" fill="rgb(238,192,15)"/><text x="41.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_dec_b_cl_dec_solv..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py) (239 samples, 40.72%)</title><rect x="38" y="84" width="480" height="15" fill="rgb(212,26,45)"/><text x="41.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_so..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py) (239 samples, 40.72%)</title><rect x="38" y="100" width="480" height="15" fill="rgb(228,100,11)"/><text x="41.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (237 samples, 40.37%)</title><rect x="42" y="116" width="476" height="15" fill="rgb(248,206,16)"/><text x="45.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (236 samples, 40.20%)</title><rect x="44" y="132" width="474" height="15" fill="rgb(210,145,3)"/><text x="47.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (236 samples, 40.20%)</title><rect x="44" y="148" width="474" height="15" fill="rgb(240,56,0)"/><text x="47.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (235 samples, 40.03%)</title><rect x="46" y="164" width="472" height="15" fill="rgb(213,7,9)"/><text x="49.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (233 samples, 39.69%)</title><rect x="50" y="180" width="468" height="15" fill="rgb(217,52,37)"/><text x="53.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (233 samples, 39.69%)</title><rect x="50" y="196" width="468" height="15" fill="rgb(233,73,36)"/><text x="53.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (227 samples, 38.67%)</title><rect x="62" y="212" width="456" height="15" fill="rgb(219,216,17)"/><text x="65.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxrunti..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (227 samples, 38.67%)</title><rect x="62" y="228" width="456" height="15" fill="rgb(224,8,42)"/><text x="65.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::a..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="514" y="244" width="4" height="15" fill="rgb(254,56,10)"/><text x="517.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="518" y="116" width="2" height="15" fill="rgb(225,31,30)"/><text x="521.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.17%)</title><rect x="518" y="132" width="2" height="15" fill="rgb(213,22,0)"/><text x="521.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.17%)</title><rect x="544" y="180" width="2" height="15" fill="rgb(229,109,36)"/><text x="547.00" y="190.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.34%)</title><rect x="560" y="212" width="4" height="15" fill="rgb(218,49,30)"/><text x="563.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.34%)</title><rect x="560" y="228" width="4" height="15" fill="rgb(237,157,16)"/><text x="563.00" y="238.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.17%)</title><rect x="562" y="244" width="2" height="15" fill="rgb(221,169,31)"/><text x="565.00" y="254.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.17%)</title><rect x="562" y="260" width="2" height="15" fill="rgb(253,16,36)"/><text x="565.00" y="270.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.17%)</title><rect x="562" y="276" width="2" height="15" fill="rgb(237,54,7)"/><text x="565.00" y="286.50"></text></g><g><title>0x7fbea010a134 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="574" y="244" width="2" height="15" fill="rgb(220,182,26)"/><text x="577.00" y="254.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (7 samples, 1.19%)</title><rect x="588" y="340" width="15" height="15" fill="rgb(232,110,27)"/><text x="591.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.17%)</title><rect x="603" y="372" width="2" height="15" fill="rgb(218,187,11)"/><text x="606.00" y="382.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.17%)</title><rect x="603" y="388" width="2" height="15" fill="rgb(231,12,32)"/><text x="606.00" y="398.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.17%)</title><rect x="603" y="404" width="2" height="15" fill="rgb(234,99,2)"/><text x="606.00" y="414.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (11 samples, 1.87%)</title><rect x="584" y="324" width="23" height="15" fill="rgb(223,10,48)"/><text x="587.00" y="334.50">P..</text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.34%)</title><rect x="603" y="340" width="4" height="15" fill="rgb(237,88,15)"/><text x="606.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.34%)</title><rect x="603" y="356" width="4" height="15" fill="rgb(213,80,29)"/><text x="606.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="605" y="372" width="2" height="15" fill="rgb(223,214,54)"/><text x="608.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="605" y="388" width="2" height="15" fill="rgb(205,38,40)"/><text x="608.00" y="398.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (16 samples, 2.73%)</title><rect x="576" y="244" width="33" height="15" fill="rgb(231,99,23)"/><text x="579.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (15 samples, 2.56%)</title><rect x="578" y="260" width="31" height="15" fill="rgb(206,34,10)"/><text x="581.00" y="270.50">ar..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (15 samples, 2.56%)</title><rect x="578" y="276" width="31" height="15" fill="rgb(228,62,5)"/><text x="581.00" y="286.50">ar..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (15 samples, 2.56%)</title><rect x="578" y="292" width="31" height="15" fill="rgb(243,191,25)"/><text x="581.00" y="302.50">_w..</text></g><g><title>array_argmax (methods.c) (13 samples, 2.21%)</title><rect x="582" y="308" width="27" height="15" fill="rgb(211,185,54)"/><text x="585.00" y="318.50">a..</text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.17%)</title><rect x="607" y="324" width="2" height="15" fill="rgb(241,28,54)"/><text x="610.00" y="334.50"></text></g><g><title>array_inplace_add (number.c) (1 samples, 0.17%)</title><rect x="609" y="244" width="2" height="15" fill="rgb(251,121,13)"/><text x="612.00" y="254.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="623" y="372" width="2" height="15" fill="rgb(238,143,12)"/><text x="626.00" y="382.50"></text></g><g><title>gemm (cblasfuncs.c) (25 samples, 4.26%)</title><rect x="623" y="340" width="50" height="15" fill="rgb(232,38,33)"/><text x="626.00" y="350.50">gemm ..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (25 samples, 4.26%)</title><rect x="623" y="356" width="50" height="15" fill="rgb(252,83,0)"/><text x="626.00" y="366.50">cblas..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 4.09%)</title><rect x="625" y="372" width="48" height="15" fill="rgb(254,197,41)"/><text x="628.00" y="382.50">sgem..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 4.09%)</title><rect x="625" y="388" width="48" height="15" fill="rgb(216,204,20)"/><text x="628.00" y="398.50">sgem..</text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.17%)</title><rect x="675" y="388" width="2" height="15" fill="rgb(247,16,10)"/><text x="678.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (28 samples, 4.77%)</title><rect x="623" y="276" width="56" height="15" fill="rgb(229,145,5)"/><text x="626.00" y="286.50">array..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (28 samples, 4.77%)</title><rect x="623" y="292" width="56" height="15" fill="rgb(253,207,7)"/><text x="626.00" y="302.50">array..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (28 samples, 4.77%)</title><rect x="623" y="308" width="56" height="15" fill="rgb(213,99,2)"/><text x="626.00" y="318.50">PyArr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (28 samples, 4.77%)</title><rect x="623" y="324" width="56" height="15" fill="rgb(210,43,49)"/><text x="626.00" y="334.50">cblas..</text></g><g><title>new_array_for_sum (common.c) (3 samples, 0.51%)</title><rect x="673" y="340" width="6" height="15" fill="rgb(249,172,53)"/><text x="676.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (3 samples, 0.51%)</title><rect x="673" y="356" width="6" height="15" fill="rgb(227,218,30)"/><text x="676.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.51%)</title><rect x="673" y="372" width="6" height="15" fill="rgb(225,10,23)"/><text x="676.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="677" y="388" width="2" height="15" fill="rgb(231,159,12)"/><text x="680.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="677" y="404" width="2" height="15" fill="rgb(224,96,38)"/><text x="680.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.17%)</title><rect x="677" y="420" width="2" height="15" fill="rgb(209,167,5)"/><text x="680.00" y="430.50"></text></g><g><title>dot (numpy/core/multiarray.py) (1 samples, 0.17%)</title><rect x="679" y="276" width="2" height="15" fill="rgb(252,97,6)"/><text x="682.00" y="286.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="681" y="276" width="2" height="15" fill="rgb(216,77,23)"/><text x="684.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (110 samples, 18.74%)</title><rect x="611" y="244" width="221" height="15" fill="rgb(239,90,45)"/><text x="614.00" y="254.50">numpy_dot_inplace (mlprodict/..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (109 samples, 18.57%)</title><rect x="613" y="260" width="219" height="15" fill="rgb(223,129,18)"/><text x="616.00" y="270.50">dot (&lt;__array_function__ int..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (74 samples, 12.61%)</title><rect x="683" y="276" width="149" height="15" fill="rgb(214,199,7)"/><text x="686.00" y="286.50">sgemm_kernel_SANDYB..</text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.17%)</title><rect x="832" y="276" width="2" height="15" fill="rgb(252,168,14)"/><text x="835.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.51%)</title><rect x="834" y="308" width="6" height="15" fill="rgb(231,164,31)"/><text x="837.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.17%)</title><rect x="838" y="324" width="2" height="15" fill="rgb(238,220,45)"/><text x="841.00" y="334.50"></text></g><g><title>0x7fbea004cdae (libc-2.29.so) (1 samples, 0.17%)</title><rect x="852" y="356" width="2" height="15" fill="rgb(207,27,36)"/><text x="855.00" y="366.50"></text></g><g><title>0x7fbea004cdbb (libc-2.29.so) (2 samples, 0.34%)</title><rect x="854" y="356" width="4" height="15" fill="rgb(206,117,18)"/><text x="857.00" y="366.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (165 samples, 28.11%)</title><rect x="528" y="132" width="332" height="15" fill="rgb(236,15,6)"/><text x="531.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (161 samples, 27.43%)</title><rect x="536" y="148" width="324" height="15" fill="rgb(247,191,12)"/><text x="539.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (161 samples, 27.43%)</title><rect x="536" y="164" width="324" height="15" fill="rgb(234,159,38)"/><text x="539.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (156 samples, 26.58%)</title><rect x="546" y="180" width="314" height="15" fill="rgb(207,207,14)"/><text x="549.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (152 samples, 25.89%)</title><rect x="554" y="196" width="306" height="15" fill="rgb(209,2,40)"/><text x="557.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (147 samples, 25.04%)</title><rect x="564" y="212" width="296" height="15" fill="rgb(209,221,37)"/><text x="567.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (147 samples, 25.04%)</title><rect x="564" y="228" width="296" height="15" fill="rgb(229,4,30)"/><text x="567.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_linea..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 2.39%)</title><rect x="832" y="244" width="28" height="15" fill="rgb(224,172,26)"/><text x="835.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 2.39%)</title><rect x="832" y="260" width="28" height="15" fill="rgb(222,27,47)"/><text x="835.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (13 samples, 2.21%)</title><rect x="834" y="276" width="26" height="15" fill="rgb(226,172,36)"/><text x="837.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (13 samples, 2.21%)</title><rect x="834" y="292" width="26" height="15" fill="rgb(234,22,31)"/><text x="837.00" y="302.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (10 samples, 1.70%)</title><rect x="840" y="308" width="20" height="15" fill="rgb(206,203,36)"/><text x="843.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (10 samples, 1.70%)</title><rect x="840" y="324" width="20" height="15" fill="rgb(252,216,36)"/><text x="843.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (9 samples, 1.53%)</title><rect x="842" y="340" width="18" height="15" fill="rgb(220,182,36)"/><text x="845.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="858" y="356" width="2" height="15" fill="rgb(248,31,4)"/><text x="861.00" y="366.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py) (172 samples, 29.30%)</title><rect x="518" y="68" width="346" height="15" fill="rgb(207,124,5)"/><text x="521.00" y="78.50">profile_pyrt (bench_LogisticRegression_libline..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py) (172 samples, 29.30%)</title><rect x="518" y="84" width="346" height="15" fill="rgb(242,186,54)"/><text x="521.00" y="94.50">setup_profile (bench_LogisticRegression_liblin..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py) (172 samples, 29.30%)</title><rect x="518" y="100" width="346" height="15" fill="rgb(212,166,43)"/><text x="521.00" y="110.50">profile (bench_LogisticRegression_liblinear_de..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (171 samples, 29.13%)</title><rect x="520" y="116" width="344" height="15" fill="rgb(235,99,4)"/><text x="523.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.34%)</title><rect x="860" y="132" width="4" height="15" fill="rgb(240,74,36)"/><text x="863.00" y="142.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.17%)</title><rect x="882" y="196" width="2" height="15" fill="rgb(242,104,5)"/><text x="885.00" y="206.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.17%)</title><rect x="886" y="244" width="2" height="15" fill="rgb(252,103,42)"/><text x="889.00" y="254.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.17%)</title><rect x="886" y="260" width="2" height="15" fill="rgb(215,54,11)"/><text x="889.00" y="270.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.17%)</title><rect x="886" y="276" width="2" height="15" fill="rgb(229,140,37)"/><text x="889.00" y="286.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.17%)</title><rect x="886" y="292" width="2" height="15" fill="rgb(240,62,10)"/><text x="889.00" y="302.50"></text></g><g><title>array_add (number.c) (5 samples, 0.85%)</title><rect x="882" y="164" width="10" height="15" fill="rgb(254,169,16)"/><text x="885.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.85%)</title><rect x="882" y="180" width="10" height="15" fill="rgb(241,93,10)"/><text x="885.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.68%)</title><rect x="884" y="196" width="8" height="15" fill="rgb(214,47,21)"/><text x="887.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.68%)</title><rect x="884" y="212" width="8" height="15" fill="rgb(220,46,11)"/><text x="887.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.51%)</title><rect x="886" y="228" width="6" height="15" fill="rgb(244,66,33)"/><text x="889.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.34%)</title><rect x="888" y="244" width="4" height="15" fill="rgb(207,205,27)"/><text x="891.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.34%)</title><rect x="888" y="260" width="4" height="15" fill="rgb(209,55,20)"/><text x="891.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="890" y="276" width="2" height="15" fill="rgb(251,65,47)"/><text x="893.00" y="286.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.17%)</title><rect x="892" y="180" width="2" height="15" fill="rgb(205,85,42)"/><text x="895.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.34%)</title><rect x="892" y="164" width="4" height="15" fill="rgb(214,168,29)"/><text x="895.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.17%)</title><rect x="894" y="180" width="2" height="15" fill="rgb(228,5,41)"/><text x="897.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.51%)</title><rect x="914" y="180" width="6" height="15" fill="rgb(214,79,48)"/><text x="917.00" y="190.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.17%)</title><rect x="920" y="180" width="2" height="15" fill="rgb(226,50,35)"/><text x="923.00" y="190.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.17%)</title><rect x="922" y="180" width="2" height="15" fill="rgb(253,150,27)"/><text x="925.00" y="190.50"></text></g><g><title>0x7fbea010a151 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="934" y="196" width="2" height="15" fill="rgb(231,49,42)"/><text x="937.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.17%)</title><rect x="936" y="196" width="2" height="15" fill="rgb(251,30,13)"/><text x="939.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 1.36%)</title><rect x="924" y="180" width="16" height="15" fill="rgb(237,205,47)"/><text x="927.00" y="190.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="938" y="196" width="2" height="15" fill="rgb(216,70,24)"/><text x="941.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 0.85%)</title><rect x="940" y="180" width="10" height="15" fill="rgb(249,200,15)"/><text x="943.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.34%)</title><rect x="946" y="196" width="4" height="15" fill="rgb(207,57,47)"/><text x="949.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.17%)</title><rect x="948" y="212" width="2" height="15" fill="rgb(209,40,3)"/><text x="951.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.17%)</title><rect x="950" y="180" width="2" height="15" fill="rgb(247,102,26)"/><text x="953.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.17%)</title><rect x="952" y="180" width="2" height="15" fill="rgb(208,76,25)"/><text x="955.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (32 samples, 5.45%)</title><rect x="896" y="164" width="64" height="15" fill="rgb(221,160,33)"/><text x="899.00" y="174.50">check_a..</text></g><g><title>simplefilter (warnings.py) (3 samples, 0.51%)</title><rect x="954" y="180" width="6" height="15" fill="rgb(243,187,53)"/><text x="957.00" y="190.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.17%)</title><rect x="958" y="196" width="2" height="15" fill="rgb(220,49,46)"/><text x="961.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.17%)</title><rect x="976" y="196" width="2" height="15" fill="rgb(254,87,46)"/><text x="979.00" y="206.50"></text></g><g><title>0x7fbea010a130 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="976" y="212" width="2" height="15" fill="rgb(238,87,31)"/><text x="979.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (10 samples, 1.70%)</title><rect x="960" y="164" width="20" height="15" fill="rgb(207,40,48)"/><text x="963.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (7 samples, 1.19%)</title><rect x="966" y="180" width="14" height="15" fill="rgb(225,217,7)"/><text x="969.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.17%)</title><rect x="978" y="196" width="2" height="15" fill="rgb(244,143,49)"/><text x="981.00" y="206.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="980" y="180" width="2" height="15" fill="rgb(249,94,54)"/><text x="983.00" y="190.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (34 samples, 5.79%)</title><rect x="982" y="180" width="69" height="15" fill="rgb(208,103,15)"/><text x="985.00" y="190.50">dgemm_k..</text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.17%)</title><rect x="1051" y="196" width="2" height="15" fill="rgb(231,140,29)"/><text x="1054.00" y="206.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (26 samples, 4.43%)</title><rect x="1053" y="228" width="52" height="15" fill="rgb(238,164,15)"/><text x="1056.00" y="238.50">DOUBL..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 4.43%)</title><rect x="1053" y="244" width="52" height="15" fill="rgb(219,32,30)"/><text x="1056.00" y="254.50">cblas..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 4.43%)</title><rect x="1053" y="260" width="52" height="15" fill="rgb(212,78,16)"/><text x="1056.00" y="270.50">dgemm..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 4.09%)</title><rect x="1057" y="276" width="48" height="15" fill="rgb(244,189,5)"/><text x="1060.00" y="286.50">dgem..</text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.17%)</title><rect x="1107" y="292" width="2" height="15" fill="rgb(214,51,50)"/><text x="1110.00" y="302.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.17%)</title><rect x="1107" y="308" width="2" height="15" fill="rgb(208,54,8)"/><text x="1110.00" y="318.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="1109" y="292" width="2" height="15" fill="rgb(216,175,50)"/><text x="1112.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (33 samples, 5.62%)</title><rect x="1105" y="244" width="66" height="15" fill="rgb(244,103,37)"/><text x="1108.00" y="254.50">npyiter..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (33 samples, 5.62%)</title><rect x="1105" y="260" width="66" height="15" fill="rgb(206,26,10)"/><text x="1108.00" y="270.50">PyArray..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (33 samples, 5.62%)</title><rect x="1105" y="276" width="66" height="15" fill="rgb(243,219,19)"/><text x="1108.00" y="286.50">raw_arr..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (30 samples, 5.11%)</title><rect x="1111" y="292" width="60" height="15" fill="rgb(244,104,33)"/><text x="1114.00" y="302.50">_align..</text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.17%)</title><rect x="1171" y="244" width="2" height="15" fill="rgb(229,104,1)"/><text x="1174.00" y="254.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.17%)</title><rect x="1171" y="260" width="2" height="15" fill="rgb(216,88,20)"/><text x="1174.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (35 samples, 5.96%)</title><rect x="1105" y="228" width="70" height="15" fill="rgb(242,18,7)"/><text x="1108.00" y="238.50">NpyIter..</text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.17%)</title><rect x="1173" y="244" width="2" height="15" fill="rgb(216,49,20)"/><text x="1176.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.34%)</title><rect x="1175" y="228" width="4" height="15" fill="rgb(241,172,46)"/><text x="1178.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.34%)</title><rect x="1175" y="244" width="4" height="15" fill="rgb(237,228,19)"/><text x="1178.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.34%)</title><rect x="1175" y="260" width="4" height="15" fill="rgb(219,228,24)"/><text x="1178.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.34%)</title><rect x="1175" y="276" width="4" height="15" fill="rgb(233,205,42)"/><text x="1178.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.17%)</title><rect x="1179" y="244" width="2" height="15" fill="rgb(241,134,21)"/><text x="1182.00" y="254.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.17%)</title><rect x="1179" y="260" width="2" height="15" fill="rgb(215,135,53)"/><text x="1182.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.17%)</title><rect x="1179" y="276" width="2" height="15" fill="rgb(206,198,48)"/><text x="1182.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.34%)</title><rect x="1179" y="228" width="4" height="15" fill="rgb(220,95,0)"/><text x="1182.00" y="238.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="1181" y="244" width="2" height="15" fill="rgb(205,178,36)"/><text x="1184.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (66 samples, 11.24%)</title><rect x="1053" y="196" width="132" height="15" fill="rgb(250,27,43)"/><text x="1056.00" y="206.50">PyUFunc_GenericF..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (66 samples, 11.24%)</title><rect x="1053" y="212" width="132" height="15" fill="rgb(213,190,31)"/><text x="1056.00" y="222.50">PyUFunc_Generali..</text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.17%)</title><rect x="1183" y="228" width="2" height="15" fill="rgb(222,206,45)"/><text x="1186.00" y="238.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.17%)</title><rect x="1183" y="244" width="2" height="15" fill="rgb(236,125,43)"/><text x="1186.00" y="254.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py) (161 samples, 27.43%)</title><rect x="864" y="100" width="323" height="15" fill="rgb(234,96,18)"/><text x="867.00" y="110.50">profile (bench_LogisticRegression_liblinear..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (160 samples, 27.26%)</title><rect x="866" y="116" width="321" height="15" fill="rgb(237,134,51)"/><text x="869.00" y="126.50">time_predict (mlprodict/asv_benchmark/commo..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (158 samples, 26.92%)</title><rect x="870" y="132" width="317" height="15" fill="rgb(224,158,23)"/><text x="873.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_a..</text></g><g><title>decision_function (sklearn/linear_model/_base.py) (156 samples, 26.58%)</title><rect x="874" y="148" width="313" height="15" fill="rgb(245,127,29)"/><text x="877.00" y="158.50">decision_function (sklearn/linear_model/_b..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (103 samples, 17.55%)</title><rect x="980" y="164" width="207" height="15" fill="rgb(236,108,54)"/><text x="983.00" y="174.50">safe_sparse_dot (sklearn/ut..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (68 samples, 11.58%)</title><rect x="1051" y="180" width="136" height="15" fill="rgb(206,106,22)"/><text x="1054.00" y="190.50">ufunc_generic_cal..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1185" y="196" width="2" height="15" fill="rgb(208,194,27)"/><text x="1188.00" y="206.50"></text></g><g><title>all (587 samples, 100%)</title><rect x="10" y="36" width="1179" height="15" fill="rgb(226,146,54)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py) (587 samples, 100.00%)</title><rect x="10" y="52" width="1179" height="15" fill="rgb(228,23,18)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py) (162 samples, 27.60%)</title><rect x="864" y="68" width="325" height="15" fill="rgb(237,33,21)"/><text x="867.00" y="78.50">profile_skl (bench_LogisticRegression_libli..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py) (162 samples, 27.60%)</title><rect x="864" y="84" width="325" height="15" fill="rgb(236,41,33)"/><text x="867.00" y="94.50">setup_profile (bench_LogisticRegression_lib..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.17%)</title><rect x="1187" y="100" width="2" height="15" fill="rgb(239,30,37)"/><text x="1190.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.17%)</title><rect x="1187" y="116" width="2" height="15" fill="rgb(247,159,20)"/><text x="1190.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (1 samples, 0.17%)</title><rect x="1187" y="132" width="2" height="15" fill="rgb(228,58,10)"/><text x="1190.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="1187" y="148" width="2" height="15" fill="rgb(206,223,54)"/><text x="1190.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="1187" y="164" width="2" height="15" fill="rgb(243,116,28)"/><text x="1190.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="1187" y="180" width="2" height="15" fill="rgb(253,223,13)"/><text x="1190.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="1187" y="196" width="2" height="15" fill="rgb(214,185,18)"/><text x="1190.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="1187" y="212" width="2" height="15" fill="rgb(228,188,2)"/><text x="1190.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py) (1 samples, 0.17%)</title><rect x="1187" y="228" width="2" height="15" fill="rgb(226,37,30)"/><text x="1190.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="1187" y="244" width="2" height="15" fill="rgb(206,85,2)"/><text x="1190.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="1187" y="260" width="2" height="15" fill="rgb(206,225,51)"/><text x="1190.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="1187" y="276" width="2" height="15" fill="rgb(253,136,15)"/><text x="1190.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="1187" y="292" width="2" height="15" fill="rgb(236,77,49)"/><text x="1190.00" y="302.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="1187" y="308" width="2" height="15" fill="rgb(215,206,21)"/><text x="1190.00" y="318.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="1187" y="324" width="2" height="15" fill="rgb(209,48,41)"/><text x="1190.00" y="334.50"></text></g></g></svg>