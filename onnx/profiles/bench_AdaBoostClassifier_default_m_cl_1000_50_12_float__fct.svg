<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1638" onload="init(evt)" viewBox="0 0 1200 1638" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1638" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1621.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1621.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(231,81,11)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(242,185,11)"/><text x="13.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(222,229,6)"/><text x="13.00" y="910.50"></text></g><g><title>dirname (posixpath.py) (1 samples, 0.11%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(216,183,14)"/><text x="13.00" y="926.50"></text></g><g><title>_get_sep (posixpath.py) (1 samples, 0.11%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(253,23,30)"/><text x="13.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="11" y="916" width="1" height="15" fill="rgb(213,92,54)"/><text x="14.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="11" y="932" width="1" height="15" fill="rgb(210,39,5)"/><text x="14.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(254,197,15)"/><text x="14.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.11%)</title><rect x="11" y="964" width="1" height="15" fill="rgb(228,54,12)"/><text x="14.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(229,18,42)"/><text x="14.00" y="990.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="11" y="996" width="1" height="15" fill="rgb(245,72,22)"/><text x="14.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="11" y="1012" width="1" height="15" fill="rgb(211,66,14)"/><text x="14.00" y="1022.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(245,43,4)"/><text x="14.00" y="910.50"></text></g><g><title>isdir (genericpath.py) (1 samples, 0.11%)</title><rect x="12" y="916" width="1" height="15" fill="rgb(231,117,22)"/><text x="15.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="12" y="932" width="1" height="15" fill="rgb(226,91,34)"/><text x="15.00" y="942.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.11%)</title><rect x="12" y="948" width="1" height="15" fill="rgb(224,204,45)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 0.45%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(206,19,50)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(223,15,48)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(213,27,15)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(220,180,54)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(208,19,5)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(207,219,9)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.45%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(218,76,44)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(216,70,2)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(232,174,53)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(224,123,23)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(214,186,15)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(244,147,50)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 0.45%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(215,93,33)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(233,69,47)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(245,197,1)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(249,137,42)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(245,89,14)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(247,83,13)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 0.45%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(234,186,26)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(230,54,43)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(230,29,51)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(206,228,26)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(241,157,42)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(243,18,41)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(227,199,39)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(212,103,10)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(214,157,53)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.45%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(209,167,0)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(218,64,48)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(245,113,35)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(233,35,43)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(209,125,29)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(251,36,32)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.45%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(216,125,31)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.45%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(210,218,4)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.45%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(253,221,26)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.34%)</title><rect x="11" y="868" width="4" height="15" fill="rgb(229,26,12)"/><text x="14.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.34%)</title><rect x="11" y="884" width="4" height="15" fill="rgb(224,81,38)"/><text x="14.00" y="894.50"></text></g><g><title>safe_listdir (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="13" y="900" width="2" height="15" fill="rgb(228,96,9)"/><text x="16.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.11%)</title><rect x="13" y="916" width="2" height="15" fill="rgb(225,131,33)"/><text x="16.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(210,6,6)"/><text x="16.00" y="942.50"></text></g><g><title>0x7f0ca9871237 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(245,38,37)"/><text x="16.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="532" width="1" height="15" fill="rgb(225,161,54)"/><text x="18.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="548" width="1" height="15" fill="rgb(225,158,42)"/><text x="18.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="564" width="1" height="15" fill="rgb(226,14,53)"/><text x="18.00" y="574.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="580" width="1" height="15" fill="rgb(244,228,0)"/><text x="18.00" y="590.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="596" width="1" height="15" fill="rgb(211,219,16)"/><text x="18.00" y="606.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="612" width="1" height="15" fill="rgb(247,109,32)"/><text x="18.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="15" y="500" width="2" height="15" fill="rgb(245,227,3)"/><text x="18.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="15" y="516" width="2" height="15" fill="rgb(207,88,3)"/><text x="18.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="532" width="1" height="15" fill="rgb(237,73,16)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="548" width="1" height="15" fill="rgb(252,174,33)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="564" width="1" height="15" fill="rgb(229,191,25)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.11%)</title><rect x="16" y="580" width="1" height="15" fill="rgb(218,128,48)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="596" width="1" height="15" fill="rgb(206,34,37)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="612" width="1" height="15" fill="rgb(213,8,24)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="628" width="1" height="15" fill="rgb(245,172,11)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="644" width="1" height="15" fill="rgb(226,177,50)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="660" width="1" height="15" fill="rgb(245,229,9)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.11%)</title><rect x="16" y="676" width="1" height="15" fill="rgb(222,88,19)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="692" width="1" height="15" fill="rgb(219,108,32)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="708" width="1" height="15" fill="rgb(226,108,33)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="724" width="1" height="15" fill="rgb(218,68,28)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="740" width="1" height="15" fill="rgb(226,90,38)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="756" width="1" height="15" fill="rgb(233,86,32)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.11%)</title><rect x="16" y="772" width="1" height="15" fill="rgb(234,129,52)"/><text x="19.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="788" width="1" height="15" fill="rgb(243,151,10)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="804" width="1" height="15" fill="rgb(247,165,25)"/><text x="19.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="820" width="1" height="15" fill="rgb(244,192,3)"/><text x="19.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="836" width="1" height="15" fill="rgb(247,213,29)"/><text x="19.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="852" width="1" height="15" fill="rgb(241,92,45)"/><text x="19.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="868" width="1" height="15" fill="rgb(241,181,16)"/><text x="19.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="884" width="1" height="15" fill="rgb(235,63,34)"/><text x="19.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.11%)</title><rect x="16" y="900" width="1" height="15" fill="rgb(216,50,23)"/><text x="19.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="916" width="1" height="15" fill="rgb(254,102,44)"/><text x="19.00" y="926.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="932" width="1" height="15" fill="rgb(252,161,26)"/><text x="19.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="196" width="9" height="15" fill="rgb(247,126,45)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="212" width="9" height="15" fill="rgb(222,59,42)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="228" width="9" height="15" fill="rgb(228,47,40)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="244" width="9" height="15" fill="rgb(251,160,40)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.79%)</title><rect x="10" y="260" width="9" height="15" fill="rgb(235,64,18)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="276" width="9" height="15" fill="rgb(234,111,29)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.34%)</title><rect x="15" y="292" width="4" height="15" fill="rgb(228,167,10)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="15" y="308" width="4" height="15" fill="rgb(212,85,29)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="15" y="324" width="4" height="15" fill="rgb(246,65,18)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="15" y="340" width="4" height="15" fill="rgb(212,149,44)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="15" y="356" width="4" height="15" fill="rgb(227,161,13)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="15" y="372" width="4" height="15" fill="rgb(247,63,45)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.34%)</title><rect x="15" y="388" width="4" height="15" fill="rgb(229,104,46)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="15" y="404" width="4" height="15" fill="rgb(215,62,26)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="15" y="420" width="4" height="15" fill="rgb(245,45,30)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="15" y="436" width="4" height="15" fill="rgb(226,35,30)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="15" y="452" width="4" height="15" fill="rgb(213,10,6)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="15" y="468" width="4" height="15" fill="rgb(253,82,44)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.34%)</title><rect x="15" y="484" width="4" height="15" fill="rgb(241,195,40)"/><text x="18.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="500" width="2" height="15" fill="rgb(219,31,52)"/><text x="20.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="516" width="2" height="15" fill="rgb(233,192,34)"/><text x="20.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="532" width="2" height="15" fill="rgb(250,95,19)"/><text x="20.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="548" width="2" height="15" fill="rgb(243,160,50)"/><text x="20.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="564" width="2" height="15" fill="rgb(229,137,11)"/><text x="20.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="580" width="2" height="15" fill="rgb(219,131,21)"/><text x="20.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="596" width="2" height="15" fill="rgb(226,138,46)"/><text x="20.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.11%)</title><rect x="17" y="612" width="2" height="15" fill="rgb(213,196,41)"/><text x="20.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="628" width="2" height="15" fill="rgb(205,5,46)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="644" width="2" height="15" fill="rgb(234,45,16)"/><text x="20.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="660" width="2" height="15" fill="rgb(209,222,49)"/><text x="20.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="676" width="2" height="15" fill="rgb(205,43,52)"/><text x="20.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="692" width="2" height="15" fill="rgb(211,228,11)"/><text x="20.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.11%)</title><rect x="17" y="708" width="2" height="15" fill="rgb(209,10,21)"/><text x="20.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="724" width="2" height="15" fill="rgb(222,125,24)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="740" width="2" height="15" fill="rgb(211,115,47)"/><text x="20.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="756" width="2" height="15" fill="rgb(208,29,35)"/><text x="20.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="772" width="2" height="15" fill="rgb(240,85,52)"/><text x="20.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="788" width="2" height="15" fill="rgb(235,44,37)"/><text x="20.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.11%)</title><rect x="17" y="804" width="2" height="15" fill="rgb(209,160,15)"/><text x="20.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="820" width="2" height="15" fill="rgb(207,58,44)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="836" width="2" height="15" fill="rgb(234,98,48)"/><text x="20.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="852" width="2" height="15" fill="rgb(247,9,8)"/><text x="20.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="868" width="2" height="15" fill="rgb(214,161,53)"/><text x="20.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="884" width="2" height="15" fill="rgb(241,89,48)"/><text x="20.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.11%)</title><rect x="17" y="900" width="2" height="15" fill="rgb(221,17,15)"/><text x="20.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(218,2,52)"/><text x="20.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(236,103,54)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(214,43,47)"/><text x="20.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(210,134,54)"/><text x="20.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(242,110,6)"/><text x="20.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(231,218,12)"/><text x="20.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(214,114,42)"/><text x="20.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py) (1 samples, 0.11%)</title><rect x="17" y="1028" width="2" height="15" fill="rgb(228,143,20)"/><text x="20.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1044" width="2" height="15" fill="rgb(233,177,53)"/><text x="20.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1060" width="2" height="15" fill="rgb(251,123,13)"/><text x="20.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1076" width="2" height="15" fill="rgb(235,63,40)"/><text x="20.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="1092" width="2" height="15" fill="rgb(215,73,42)"/><text x="20.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1108" width="2" height="15" fill="rgb(249,130,49)"/><text x="20.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py) (1 samples, 0.11%)</title><rect x="17" y="1124" width="2" height="15" fill="rgb(234,113,20)"/><text x="20.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1124" width="1" height="15" fill="rgb(211,41,33)"/><text x="22.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1140" width="1" height="15" fill="rgb(230,150,24)"/><text x="22.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1156" width="1" height="15" fill="rgb(222,114,34)"/><text x="22.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="19" y="1172" width="1" height="15" fill="rgb(249,172,11)"/><text x="22.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1188" width="1" height="15" fill="rgb(232,168,21)"/><text x="22.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="19" y="1204" width="1" height="15" fill="rgb(214,187,25)"/><text x="22.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1220" width="1" height="15" fill="rgb(246,206,46)"/><text x="22.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1236" width="1" height="15" fill="rgb(254,168,40)"/><text x="22.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1252" width="1" height="15" fill="rgb(223,38,33)"/><text x="22.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="19" y="1268" width="1" height="15" fill="rgb(207,170,47)"/><text x="22.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1284" width="1" height="15" fill="rgb(253,224,28)"/><text x="22.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="19" y="1300" width="1" height="15" fill="rgb(244,84,33)"/><text x="22.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="19" y="1316" width="1" height="15" fill="rgb(213,57,49)"/><text x="22.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.11%)</title><rect x="19" y="1332" width="1" height="15" fill="rgb(241,193,7)"/><text x="22.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.11%)</title><rect x="19" y="1348" width="1" height="15" fill="rgb(244,125,45)"/><text x="22.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.11%)</title><rect x="19" y="1364" width="1" height="15" fill="rgb(207,206,49)"/><text x="22.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.11%)</title><rect x="19" y="1380" width="1" height="15" fill="rgb(243,45,35)"/><text x="22.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.11%)</title><rect x="19" y="1396" width="1" height="15" fill="rgb(211,139,3)"/><text x="22.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.11%)</title><rect x="19" y="1412" width="1" height="15" fill="rgb(205,120,18)"/><text x="22.00" y="1422.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.45%)</title><rect x="19" y="340" width="5" height="15" fill="rgb(230,4,20)"/><text x="22.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="356" width="5" height="15" fill="rgb(234,190,19)"/><text x="22.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="372" width="5" height="15" fill="rgb(207,37,22)"/><text x="22.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="388" width="5" height="15" fill="rgb(239,137,10)"/><text x="22.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="19" y="404" width="5" height="15" fill="rgb(253,229,47)"/><text x="22.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="420" width="5" height="15" fill="rgb(228,172,20)"/><text x="22.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 0.45%)</title><rect x="19" y="436" width="5" height="15" fill="rgb(235,107,53)"/><text x="22.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="452" width="5" height="15" fill="rgb(211,110,33)"/><text x="22.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="468" width="5" height="15" fill="rgb(209,82,51)"/><text x="22.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="484" width="5" height="15" fill="rgb(229,30,46)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="500" width="5" height="15" fill="rgb(252,13,30)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="516" width="5" height="15" fill="rgb(242,91,37)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="532" width="5" height="15" fill="rgb(206,85,17)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="19" y="548" width="5" height="15" fill="rgb(220,162,10)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="564" width="5" height="15" fill="rgb(218,103,9)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 0.45%)</title><rect x="19" y="580" width="5" height="15" fill="rgb(232,77,15)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="596" width="5" height="15" fill="rgb(214,55,22)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="612" width="5" height="15" fill="rgb(233,15,41)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="628" width="5" height="15" fill="rgb(234,191,1)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="19" y="644" width="5" height="15" fill="rgb(237,113,0)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="660" width="5" height="15" fill="rgb(215,134,6)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 0.45%)</title><rect x="19" y="676" width="5" height="15" fill="rgb(231,28,19)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="692" width="5" height="15" fill="rgb(248,95,49)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="708" width="5" height="15" fill="rgb(223,7,24)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="724" width="5" height="15" fill="rgb(212,213,17)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="19" y="740" width="5" height="15" fill="rgb(216,216,40)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="756" width="5" height="15" fill="rgb(230,181,52)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 0.45%)</title><rect x="19" y="772" width="5" height="15" fill="rgb(224,72,26)"/><text x="22.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="788" width="5" height="15" fill="rgb(235,102,45)"/><text x="22.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="804" width="5" height="15" fill="rgb(253,226,4)"/><text x="22.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="820" width="5" height="15" fill="rgb(226,188,51)"/><text x="22.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="19" y="836" width="5" height="15" fill="rgb(251,220,48)"/><text x="22.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="852" width="5" height="15" fill="rgb(240,125,41)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 0.45%)</title><rect x="19" y="868" width="5" height="15" fill="rgb(244,22,53)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="884" width="5" height="15" fill="rgb(254,71,17)"/><text x="22.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="900" width="5" height="15" fill="rgb(241,92,0)"/><text x="22.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="916" width="5" height="15" fill="rgb(214,213,33)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="932" width="5" height="15" fill="rgb(208,209,36)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(249,181,31)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="964" width="5" height="15" fill="rgb(217,228,7)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="19" y="980" width="5" height="15" fill="rgb(218,39,13)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="996" width="5" height="15" fill="rgb(239,149,41)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 0.45%)</title><rect x="19" y="1012" width="5" height="15" fill="rgb(218,58,48)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="1028" width="5" height="15" fill="rgb(249,222,32)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="1044" width="5" height="15" fill="rgb(229,77,34)"/><text x="22.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="1060" width="5" height="15" fill="rgb(225,160,23)"/><text x="22.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="19" y="1076" width="5" height="15" fill="rgb(235,223,22)"/><text x="22.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="1092" width="5" height="15" fill="rgb(227,25,37)"/><text x="22.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 0.45%)</title><rect x="19" y="1108" width="5" height="15" fill="rgb(211,10,0)"/><text x="22.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1124" width="4" height="15" fill="rgb(239,118,43)"/><text x="23.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1140" width="4" height="15" fill="rgb(247,70,45)"/><text x="23.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1156" width="4" height="15" fill="rgb(231,38,33)"/><text x="23.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1172" width="4" height="15" fill="rgb(212,48,42)"/><text x="23.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1188" width="4" height="15" fill="rgb(214,29,5)"/><text x="23.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="20" y="1204" width="4" height="15" fill="rgb(213,83,4)"/><text x="23.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1220" width="4" height="15" fill="rgb(222,97,28)"/><text x="23.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.34%)</title><rect x="20" y="1236" width="4" height="15" fill="rgb(233,9,53)"/><text x="23.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1252" width="4" height="15" fill="rgb(207,82,34)"/><text x="23.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1268" width="4" height="15" fill="rgb(217,118,35)"/><text x="23.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1284" width="4" height="15" fill="rgb(219,45,2)"/><text x="23.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1300" width="4" height="15" fill="rgb(236,223,41)"/><text x="23.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1316" width="4" height="15" fill="rgb(242,177,14)"/><text x="23.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="20" y="1332" width="4" height="15" fill="rgb(243,175,26)"/><text x="23.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1348" width="4" height="15" fill="rgb(210,128,0)"/><text x="23.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.34%)</title><rect x="20" y="1364" width="4" height="15" fill="rgb(237,35,19)"/><text x="23.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1380" width="4" height="15" fill="rgb(212,11,53)"/><text x="23.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1396" width="4" height="15" fill="rgb(219,1,48)"/><text x="23.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1412" width="4" height="15" fill="rgb(245,9,26)"/><text x="23.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="20" y="1428" width="4" height="15" fill="rgb(207,138,39)"/><text x="23.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="20" y="1444" width="4" height="15" fill="rgb(223,176,48)"/><text x="23.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.34%)</title><rect x="20" y="1460" width="4" height="15" fill="rgb(236,9,13)"/><text x="23.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.34%)</title><rect x="20" y="1476" width="4" height="15" fill="rgb(238,62,42)"/><text x="23.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.34%)</title><rect x="20" y="1492" width="4" height="15" fill="rgb(251,228,32)"/><text x="23.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 0.34%)</title><rect x="20" y="1508" width="4" height="15" fill="rgb(211,139,1)"/><text x="23.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 0.34%)</title><rect x="20" y="1524" width="4" height="15" fill="rgb(239,202,38)"/><text x="23.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 0.34%)</title><rect x="20" y="1540" width="4" height="15" fill="rgb(206,44,8)"/><text x="23.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.22%)</title><rect x="21" y="1556" width="3" height="15" fill="rgb(207,115,12)"/><text x="24.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.22%)</title><rect x="21" y="1572" width="3" height="15" fill="rgb(240,193,48)"/><text x="24.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.11%)</title><rect x="23" y="1588" width="1" height="15" fill="rgb(228,75,16)"/><text x="26.00" y="1598.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.11%)</title><rect x="24" y="580" width="1" height="15" fill="rgb(212,48,0)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="596" width="1" height="15" fill="rgb(254,145,0)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="612" width="1" height="15" fill="rgb(222,71,54)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="628" width="1" height="15" fill="rgb(241,102,37)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="644" width="1" height="15" fill="rgb(236,225,6)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="660" width="1" height="15" fill="rgb(221,162,47)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.11%)</title><rect x="24" y="676" width="1" height="15" fill="rgb(224,180,6)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="692" width="1" height="15" fill="rgb(214,105,47)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="708" width="1" height="15" fill="rgb(234,75,30)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="724" width="1" height="15" fill="rgb(252,177,34)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="740" width="1" height="15" fill="rgb(233,146,36)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="756" width="1" height="15" fill="rgb(222,109,41)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.11%)</title><rect x="24" y="772" width="1" height="15" fill="rgb(208,158,14)"/><text x="27.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.11%)</title><rect x="24" y="788" width="1" height="15" fill="rgb(225,62,38)"/><text x="27.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="24" y="804" width="1" height="15" fill="rgb(246,96,18)"/><text x="27.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="24" y="820" width="1" height="15" fill="rgb(228,208,22)"/><text x="27.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="836" width="1" height="15" fill="rgb(245,25,39)"/><text x="27.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="852" width="1" height="15" fill="rgb(241,147,19)"/><text x="27.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="868" width="1" height="15" fill="rgb(237,185,29)"/><text x="27.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="884" width="1" height="15" fill="rgb(253,227,37)"/><text x="27.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="900" width="1" height="15" fill="rgb(226,121,28)"/><text x="27.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="916" width="1" height="15" fill="rgb(216,75,29)"/><text x="27.00" y="926.50"></text></g><g><title>__init__ (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="932" width="1" height="15" fill="rgb(226,45,19)"/><text x="27.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 0.67%)</title><rect x="19" y="244" width="8" height="15" fill="rgb(213,20,7)"/><text x="22.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="19" y="260" width="8" height="15" fill="rgb(237,106,48)"/><text x="22.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="19" y="276" width="8" height="15" fill="rgb(242,70,43)"/><text x="22.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="19" y="292" width="8" height="15" fill="rgb(253,125,25)"/><text x="22.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.67%)</title><rect x="19" y="308" width="8" height="15" fill="rgb(248,65,25)"/><text x="22.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="19" y="324" width="8" height="15" fill="rgb(247,113,41)"/><text x="22.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.22%)</title><rect x="24" y="340" width="3" height="15" fill="rgb(232,83,0)"/><text x="27.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="24" y="356" width="3" height="15" fill="rgb(238,113,24)"/><text x="27.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="24" y="372" width="3" height="15" fill="rgb(212,30,38)"/><text x="27.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="24" y="388" width="3" height="15" fill="rgb(254,219,54)"/><text x="27.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="24" y="404" width="3" height="15" fill="rgb(219,125,21)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="24" y="420" width="3" height="15" fill="rgb(243,191,12)"/><text x="27.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="24" y="436" width="3" height="15" fill="rgb(219,113,49)"/><text x="27.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="24" y="452" width="3" height="15" fill="rgb(228,75,54)"/><text x="27.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="24" y="468" width="3" height="15" fill="rgb(252,106,1)"/><text x="27.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.22%)</title><rect x="24" y="484" width="3" height="15" fill="rgb(241,104,51)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="24" y="500" width="3" height="15" fill="rgb(212,121,23)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="24" y="516" width="3" height="15" fill="rgb(223,41,36)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="24" y="532" width="3" height="15" fill="rgb(245,62,15)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="24" y="548" width="3" height="15" fill="rgb(226,171,4)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="24" y="564" width="3" height="15" fill="rgb(212,143,48)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.11%)</title><rect x="25" y="580" width="2" height="15" fill="rgb(221,85,48)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="596" width="2" height="15" fill="rgb(210,75,12)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="612" width="2" height="15" fill="rgb(220,219,11)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="628" width="2" height="15" fill="rgb(234,77,36)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="644" width="2" height="15" fill="rgb(221,125,31)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="660" width="2" height="15" fill="rgb(222,24,12)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.11%)</title><rect x="25" y="676" width="2" height="15" fill="rgb(241,52,49)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="692" width="2" height="15" fill="rgb(235,108,0)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="708" width="2" height="15" fill="rgb(211,68,34)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="724" width="2" height="15" fill="rgb(216,188,12)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="740" width="2" height="15" fill="rgb(254,210,29)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="756" width="2" height="15" fill="rgb(208,110,3)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.11%)</title><rect x="25" y="772" width="2" height="15" fill="rgb(244,210,22)"/><text x="28.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="788" width="2" height="15" fill="rgb(244,13,4)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="804" width="2" height="15" fill="rgb(232,43,9)"/><text x="28.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="820" width="2" height="15" fill="rgb(217,182,24)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="836" width="2" height="15" fill="rgb(251,186,39)"/><text x="28.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="852" width="2" height="15" fill="rgb(237,218,49)"/><text x="28.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="868" width="2" height="15" fill="rgb(215,34,4)"/><text x="28.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="884" width="2" height="15" fill="rgb(216,162,32)"/><text x="28.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.11%)</title><rect x="25" y="900" width="2" height="15" fill="rgb(215,99,41)"/><text x="28.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="916" width="2" height="15" fill="rgb(242,104,12)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="932" width="2" height="15" fill="rgb(238,127,18)"/><text x="28.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="948" width="2" height="15" fill="rgb(251,162,22)"/><text x="28.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="964" width="2" height="15" fill="rgb(208,191,39)"/><text x="28.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="980" width="2" height="15" fill="rgb(216,221,18)"/><text x="28.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.11%)</title><rect x="25" y="996" width="2" height="15" fill="rgb(215,65,25)"/><text x="28.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1012" width="2" height="15" fill="rgb(213,223,51)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1028" width="2" height="15" fill="rgb(226,202,21)"/><text x="28.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1044" width="2" height="15" fill="rgb(252,46,40)"/><text x="28.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="1060" width="2" height="15" fill="rgb(221,139,17)"/><text x="28.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1076" width="2" height="15" fill="rgb(227,122,7)"/><text x="28.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.11%)</title><rect x="25" y="1092" width="2" height="15" fill="rgb(240,211,52)"/><text x="28.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1108" width="2" height="15" fill="rgb(232,78,21)"/><text x="28.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1124" width="2" height="15" fill="rgb(223,186,40)"/><text x="28.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1140" width="2" height="15" fill="rgb(233,67,27)"/><text x="28.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="1156" width="2" height="15" fill="rgb(231,48,8)"/><text x="28.00" y="1166.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="1172" width="2" height="15" fill="rgb(236,14,42)"/><text x="28.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="260" width="1" height="15" fill="rgb(253,179,49)"/><text x="30.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="276" width="1" height="15" fill="rgb(226,11,38)"/><text x="30.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="292" width="1" height="15" fill="rgb(238,181,41)"/><text x="30.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="308" width="1" height="15" fill="rgb(233,39,6)"/><text x="30.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="324" width="1" height="15" fill="rgb(220,53,34)"/><text x="30.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="340" width="1" height="15" fill="rgb(247,127,40)"/><text x="30.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="356" width="1" height="15" fill="rgb(206,72,53)"/><text x="30.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="372" width="1" height="15" fill="rgb(254,20,1)"/><text x="30.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="388" width="1" height="15" fill="rgb(218,115,17)"/><text x="30.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="404" width="1" height="15" fill="rgb(216,130,49)"/><text x="30.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="420" width="1" height="15" fill="rgb(242,27,39)"/><text x="30.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="436" width="1" height="15" fill="rgb(209,82,48)"/><text x="30.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="452" width="1" height="15" fill="rgb(226,93,21)"/><text x="30.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="468" width="1" height="15" fill="rgb(246,84,9)"/><text x="30.00" y="478.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="484" width="1" height="15" fill="rgb(219,75,5)"/><text x="30.00" y="494.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="500" width="1" height="15" fill="rgb(245,213,32)"/><text x="30.00" y="510.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="516" width="1" height="15" fill="rgb(221,184,14)"/><text x="30.00" y="526.50"></text></g><g><title>unicode_rstrip (python3.7) (1 samples, 0.11%)</title><rect x="27" y="532" width="1" height="15" fill="rgb(246,39,22)"/><text x="30.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.69%)</title><rect x="10" y="68" width="19" height="15" fill="rgb(206,82,53)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.69%)</title><rect x="10" y="84" width="19" height="15" fill="rgb(210,186,34)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.69%)</title><rect x="10" y="100" width="19" height="15" fill="rgb(249,203,33)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 1.69%)</title><rect x="10" y="116" width="19" height="15" fill="rgb(236,128,45)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.69%)</title><rect x="10" y="132" width="19" height="15" fill="rgb(215,34,41)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py) (15 samples, 1.69%)</title><rect x="10" y="148" width="19" height="15" fill="rgb(239,171,26)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.69%)</title><rect x="10" y="164" width="19" height="15" fill="rgb(248,141,39)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.69%)</title><rect x="10" y="180" width="19" height="15" fill="rgb(206,198,38)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.90%)</title><rect x="19" y="196" width="10" height="15" fill="rgb(222,128,48)"/><text x="22.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.90%)</title><rect x="19" y="212" width="10" height="15" fill="rgb(223,198,43)"/><text x="22.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.90%)</title><rect x="19" y="228" width="10" height="15" fill="rgb(214,169,30)"/><text x="22.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.22%)</title><rect x="27" y="244" width="2" height="15" fill="rgb(230,92,7)"/><text x="30.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="260" width="1" height="15" fill="rgb(221,26,17)"/><text x="31.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="276" width="1" height="15" fill="rgb(205,107,40)"/><text x="31.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="292" width="1" height="15" fill="rgb(205,206,16)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="308" width="1" height="15" fill="rgb(211,59,54)"/><text x="31.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="324" width="1" height="15" fill="rgb(234,183,26)"/><text x="31.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="340" width="1" height="15" fill="rgb(238,164,51)"/><text x="31.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="356" width="1" height="15" fill="rgb(246,174,10)"/><text x="31.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.11%)</title><rect x="28" y="372" width="1" height="15" fill="rgb(214,97,25)"/><text x="31.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="388" width="1" height="15" fill="rgb(238,3,40)"/><text x="31.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="404" width="1" height="15" fill="rgb(239,192,10)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="420" width="1" height="15" fill="rgb(228,48,16)"/><text x="31.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="436" width="1" height="15" fill="rgb(237,164,52)"/><text x="31.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="452" width="1" height="15" fill="rgb(215,207,48)"/><text x="31.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="468" width="1" height="15" fill="rgb(228,81,2)"/><text x="31.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="484" width="1" height="15" fill="rgb(237,98,36)"/><text x="31.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py) (1 samples, 0.11%)</title><rect x="28" y="500" width="1" height="15" fill="rgb(225,27,25)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="516" width="1" height="15" fill="rgb(234,126,2)"/><text x="31.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="532" width="1" height="15" fill="rgb(254,156,42)"/><text x="31.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="548" width="1" height="15" fill="rgb(253,161,52)"/><text x="31.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="564" width="1" height="15" fill="rgb(219,128,1)"/><text x="31.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="580" width="1" height="15" fill="rgb(240,213,9)"/><text x="31.00" y="590.50"></text></g><g><title>&lt;module&gt; (numpy/core/_exceptions.py) (1 samples, 0.11%)</title><rect x="28" y="596" width="1" height="15" fill="rgb(249,54,50)"/><text x="31.00" y="606.50"></text></g><g><title>_UFuncInputCastingError (numpy/core/_exceptions.py) (1 samples, 0.11%)</title><rect x="28" y="612" width="1" height="15" fill="rgb(232,183,48)"/><text x="31.00" y="622.50"></text></g><g><title>0x7f0c694efff9 (?) (1 samples, 0.11%)</title><rect x="31" y="212" width="1" height="15" fill="rgb(242,43,11)"/><text x="34.00" y="222.50"></text></g><g><title>0x7f0c694eaef6 (?) (1 samples, 0.11%)</title><rect x="31" y="228" width="1" height="15" fill="rgb(217,36,3)"/><text x="34.00" y="238.50"></text></g><g><title>0x7f0c694df962 (?) (1 samples, 0.11%)</title><rect x="31" y="244" width="1" height="15" fill="rgb(205,151,22)"/><text x="34.00" y="254.50"></text></g><g><title>0x7f0c695137a7 (?) (1 samples, 0.11%)</title><rect x="31" y="260" width="1" height="15" fill="rgb(234,14,22)"/><text x="34.00" y="270.50"></text></g><g><title>0x7f0c69513379 (?) (1 samples, 0.11%)</title><rect x="31" y="276" width="1" height="15" fill="rgb(217,58,51)"/><text x="34.00" y="286.50"></text></g><g><title>0x7f0c699718b8 (?) (1 samples, 0.11%)</title><rect x="31" y="292" width="1" height="15" fill="rgb(254,30,27)"/><text x="34.00" y="302.50"></text></g><g><title>0x7f0c6996fc7f (?) (1 samples, 0.11%)</title><rect x="31" y="308" width="1" height="15" fill="rgb(211,204,23)"/><text x="34.00" y="318.50"></text></g><g><title>0x7f0c6998299c (?) (1 samples, 0.11%)</title><rect x="31" y="324" width="1" height="15" fill="rgb(245,181,16)"/><text x="34.00" y="334.50"></text></g><g><title>0x7f0c696a019e (?) (1 samples, 0.11%)</title><rect x="31" y="340" width="1" height="15" fill="rgb(206,18,8)"/><text x="34.00" y="350.50"></text></g><g><title>0x7f0c6969d1fd (?) (1 samples, 0.11%)</title><rect x="31" y="356" width="1" height="15" fill="rgb(226,114,0)"/><text x="34.00" y="366.50"></text></g><g><title>0x7f0c6969cd20 (?) (1 samples, 0.11%)</title><rect x="31" y="372" width="1" height="15" fill="rgb(246,33,0)"/><text x="34.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="31" y="388" width="1" height="15" fill="rgb(206,209,6)"/><text x="34.00" y="398.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="33" y="340" width="2" height="15" fill="rgb(230,142,10)"/><text x="36.00" y="350.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.45%)</title><rect x="35" y="340" width="5" height="15" fill="rgb(239,119,25)"/><text x="38.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="37" y="356" width="3" height="15" fill="rgb(220,193,3)"/><text x="40.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="37" y="372" width="3" height="15" fill="rgb(234,164,24)"/><text x="40.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="37" y="388" width="3" height="15" fill="rgb(239,119,11)"/><text x="40.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="39" y="404" width="1" height="15" fill="rgb(210,133,17)"/><text x="42.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="39" y="420" width="1" height="15" fill="rgb(218,95,42)"/><text x="42.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="39" y="436" width="1" height="15" fill="rgb(207,200,46)"/><text x="42.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="39" y="452" width="1" height="15" fill="rgb(253,181,5)"/><text x="42.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="39" y="468" width="1" height="15" fill="rgb(238,28,30)"/><text x="42.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="39" y="484" width="1" height="15" fill="rgb(212,223,41)"/><text x="42.00" y="494.50"></text></g><g><title>onnxruntime::Equal&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="40" y="340" width="1" height="15" fill="rgb(233,17,1)"/><text x="43.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;int, bool, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int)#2}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="40" y="356" width="1" height="15" fill="rgb(237,197,11)"/><text x="43.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;int, int&gt;, onnxruntime::TBroadcastOutput&lt;bool&gt;, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int)#2}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="40" y="372" width="1" height="15" fill="rgb(250,218,8)"/><text x="43.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="41" y="340" width="2" height="15" fill="rgb(253,226,32)"/><text x="44.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="41" y="356" width="2" height="15" fill="rgb(208,200,17)"/><text x="44.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="41" y="372" width="2" height="15" fill="rgb(218,164,23)"/><text x="44.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="41" y="388" width="2" height="15" fill="rgb(238,57,26)"/><text x="44.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="41" y="404" width="2" height="15" fill="rgb(254,211,5)"/><text x="44.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="41" y="420" width="2" height="15" fill="rgb(211,126,13)"/><text x="44.00" y="430.50"></text></g><g><title>0x7f0ca9833028 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="41" y="436" width="2" height="15" fill="rgb(208,161,35)"/><text x="44.00" y="446.50"></text></g><g><title>0x7f0ca9830c10 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="41" y="452" width="2" height="15" fill="rgb(230,28,24)"/><text x="44.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="43" y="340" width="1" height="15" fill="rgb(222,166,10)"/><text x="46.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="43" y="356" width="1" height="15" fill="rgb(230,164,21)"/><text x="46.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="43" y="372" width="1" height="15" fill="rgb(213,64,50)"/><text x="46.00" y="382.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.12%)</title><rect x="44" y="340" width="13" height="15" fill="rgb(252,142,18)"/><text x="47.00" y="350.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.57%)</title><rect x="57" y="340" width="19" height="15" fill="rgb(227,201,25)"/><text x="60.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.57%)</title><rect x="57" y="356" width="19" height="15" fill="rgb(254,96,47)"/><text x="60.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.57%)</title><rect x="57" y="372" width="19" height="15" fill="rgb(228,119,0)"/><text x="60.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="68" y="388" width="8" height="15" fill="rgb(251,118,19)"/><text x="71.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="76" y="340" width="8" height="15" fill="rgb(225,104,45)"/><text x="79.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="81" y="356" width="3" height="15" fill="rgb(237,190,28)"/><text x="84.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="82" y="372" width="2" height="15" fill="rgb(220,206,32)"/><text x="85.00" y="382.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="84" y="340" width="1" height="15" fill="rgb(240,205,13)"/><text x="87.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="84" y="356" width="1" height="15" fill="rgb(229,168,47)"/><text x="87.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="84" y="372" width="1" height="15" fill="rgb(248,206,52)"/><text x="87.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="84" y="388" width="1" height="15" fill="rgb(205,85,7)"/><text x="87.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="84" y="404" width="1" height="15" fill="rgb(215,134,37)"/><text x="87.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="84" y="420" width="1" height="15" fill="rgb(249,124,27)"/><text x="87.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="84" y="436" width="1" height="15" fill="rgb(226,150,12)"/><text x="87.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="84" y="452" width="1" height="15" fill="rgb(249,186,33)"/><text x="87.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="84" y="468" width="1" height="15" fill="rgb(207,228,54)"/><text x="87.00" y="478.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.46%)</title><rect x="85" y="340" width="17" height="15" fill="rgb(212,75,53)"/><text x="88.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.46%)</title><rect x="85" y="356" width="17" height="15" fill="rgb(245,62,2)"/><text x="88.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.46%)</title><rect x="85" y="372" width="17" height="15" fill="rgb(237,15,26)"/><text x="88.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="96" y="388" width="6" height="15" fill="rgb(249,210,23)"/><text x="99.00" y="398.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="102" y="372" width="2" height="15" fill="rgb(254,90,7)"/><text x="105.00" y="382.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="102" y="340" width="3" height="15" fill="rgb(251,83,10)"/><text x="105.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="102" y="356" width="3" height="15" fill="rgb(225,198,29)"/><text x="105.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="104" y="372" width="1" height="15" fill="rgb(236,221,32)"/><text x="107.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="104" y="388" width="1" height="15" fill="rgb(240,140,24)"/><text x="107.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="104" y="404" width="1" height="15" fill="rgb(241,191,17)"/><text x="107.00" y="414.50"></text></g><g><title>0x7f0c694b79d0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="167" y="356" width="2" height="15" fill="rgb(205,88,30)"/><text x="170.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="169" y="356" width="2" height="15" fill="rgb(222,54,30)"/><text x="172.00" y="366.50"></text></g><g><title>0x7f0c694b6930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="264" y="388" width="1" height="15" fill="rgb(245,1,50)"/><text x="267.00" y="398.50"></text></g><g><title>0x7f0c992fdd50 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="268" y="404" width="1" height="15" fill="rgb(215,58,5)"/><text x="271.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (17 samples, 1.91%)</title><rect x="265" y="388" width="23" height="15" fill="rgb(214,182,35)"/><text x="268.00" y="398.50">o..</text></g><g><title>malloc (libc-2.29.so) (14 samples, 1.57%)</title><rect x="269" y="404" width="19" height="15" fill="rgb(205,135,2)"/><text x="272.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (98 samples, 11.01%)</title><rect x="171" y="356" width="130" height="15" fill="rgb(250,84,18)"/><text x="174.00" y="366.50">onnxruntime::ml:..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (44 samples, 4.94%)</title><rect x="243" y="372" width="58" height="15" fill="rgb(231,36,52)"/><text x="246.00" y="382.50">std::_..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (10 samples, 1.12%)</title><rect x="288" y="388" width="13" height="15" fill="rgb(217,160,25)"/><text x="291.00" y="398.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.35%)</title><rect x="301" y="356" width="16" height="15" fill="rgb(233,104,9)"/><text x="304.00" y="366.50"></text></g><g><title>0x7f0ca9851dbb (libc-2.29.so) (2 samples, 0.22%)</title><rect x="314" y="372" width="3" height="15" fill="rgb(234,174,39)"/><text x="317.00" y="382.50"></text></g><g><title>0x7f0ca983191e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="322" y="372" width="2" height="15" fill="rgb(234,146,10)"/><text x="325.00" y="382.50"></text></g><g><title>0x7f0ca9831945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="324" y="372" width="1" height="15" fill="rgb(228,63,5)"/><text x="327.00" y="382.50"></text></g><g><title>0x7f0ca9831965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="325" y="372" width="1" height="15" fill="rgb(246,221,28)"/><text x="328.00" y="382.50"></text></g><g><title>0x7f0ca983196a (libc-2.29.so) (2 samples, 0.22%)</title><rect x="326" y="372" width="3" height="15" fill="rgb(246,10,4)"/><text x="329.00" y="382.50"></text></g><g><title>0x7f0ca9831991 (libc-2.29.so) (6 samples, 0.67%)</title><rect x="329" y="372" width="8" height="15" fill="rgb(228,156,21)"/><text x="332.00" y="382.50"></text></g><g><title>0x7f0ca9831998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="337" y="372" width="1" height="15" fill="rgb(246,142,28)"/><text x="340.00" y="382.50"></text></g><g><title>0x7f0ca9831a4d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="338" y="372" width="2" height="15" fill="rgb(211,67,38)"/><text x="341.00" y="382.50"></text></g><g><title>0x7f0ca9831be4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="340" y="372" width="1" height="15" fill="rgb(245,142,2)"/><text x="343.00" y="382.50"></text></g><g><title>0x7f0ca9831be8 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="341" y="372" width="3" height="15" fill="rgb(254,24,27)"/><text x="344.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (9 samples, 1.01%)</title><rect x="344" y="372" width="12" height="15" fill="rgb(222,148,17)"/><text x="347.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="356" y="372" width="1" height="15" fill="rgb(207,220,39)"/><text x="359.00" y="382.50"></text></g><g><title>0x7f0ca9831904 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="367" y="388" width="2" height="15" fill="rgb(240,73,40)"/><text x="370.00" y="398.50"></text></g><g><title>0x7f0ca9831917 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="369" y="388" width="1" height="15" fill="rgb(216,35,23)"/><text x="372.00" y="398.50"></text></g><g><title>0x7f0ca983196a (libc-2.29.so) (2 samples, 0.22%)</title><rect x="370" y="388" width="3" height="15" fill="rgb(222,229,46)"/><text x="373.00" y="398.50"></text></g><g><title>0x7f0ca9831991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="373" y="388" width="1" height="15" fill="rgb(205,147,16)"/><text x="376.00" y="398.50"></text></g><g><title>0x7f0ca9831a55 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="374" y="388" width="3" height="15" fill="rgb(240,109,24)"/><text x="377.00" y="398.50"></text></g><g><title>0x7f0ca9831bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="377" y="388" width="1" height="15" fill="rgb(216,194,13)"/><text x="380.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 5.28%)</title><rect x="317" y="356" width="62" height="15" fill="rgb(247,223,14)"/><text x="320.00" y="366.50">std::_..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.91%)</title><rect x="357" y="372" width="22" height="15" fill="rgb(219,63,7)"/><text x="360.00" y="382.50">s..</text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="378" y="388" width="1" height="15" fill="rgb(238,125,15)"/><text x="381.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (219 samples, 24.61%)</title><rect x="105" y="340" width="290" height="15" fill="rgb(248,84,1)"/><text x="108.00" y="350.50">onnxruntime::ml::TreeEnsembleClassifie..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (12 samples, 1.35%)</title><rect x="379" y="356" width="16" height="15" fill="rgb(244,151,37)"/><text x="382.00" y="366.50"></text></g><g><title>0x7f0c694b7ba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="395" y="356" width="2" height="15" fill="rgb(221,65,42)"/><text x="398.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="397" y="356" width="2" height="15" fill="rgb(210,159,31)"/><text x="400.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="397" y="372" width="2" height="15" fill="rgb(226,122,10)"/><text x="400.00" y="382.50"></text></g><g><title>0x7f0ca983307f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="398" y="388" width="1" height="15" fill="rgb(254,86,2)"/><text x="401.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (278 samples, 31.24%)</title><rect x="32" y="260" width="369" height="15" fill="rgb(253,19,4)"/><text x="35.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (278 samples, 31.24%)</title><rect x="32" y="276" width="369" height="15" fill="rgb(227,166,46)"/><text x="35.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (278 samples, 31.24%)</title><rect x="32" y="292" width="369" height="15" fill="rgb(244,179,24)"/><text x="35.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (278 samples, 31.24%)</title><rect x="32" y="308" width="369" height="15" fill="rgb(238,99,42)"/><text x="35.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (278 samples, 31.24%)</title><rect x="32" y="324" width="369" height="15" fill="rgb(232,47,49)"/><text x="35.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrunt..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.45%)</title><rect x="395" y="340" width="6" height="15" fill="rgb(225,163,14)"/><text x="398.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="399" y="356" width="2" height="15" fill="rgb(225,222,13)"/><text x="402.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="401" y="260" width="1" height="15" fill="rgb(222,27,33)"/><text x="404.00" y="270.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (286 samples, 32.13%)</title><rect x="29" y="100" width="380" height="15" fill="rgb(209,52,24)"/><text x="32.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1000..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (285 samples, 32.02%)</title><rect x="31" y="116" width="378" height="15" fill="rgb(248,177,40)"/><text x="34.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (285 samples, 32.02%)</title><rect x="31" y="132" width="378" height="15" fill="rgb(252,27,20)"/><text x="34.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (285 samples, 32.02%)</title><rect x="31" y="148" width="378" height="15" fill="rgb(236,53,18)"/><text x="34.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (285 samples, 32.02%)</title><rect x="31" y="164" width="378" height="15" fill="rgb(220,6,4)"/><text x="34.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (285 samples, 32.02%)</title><rect x="31" y="180" width="378" height="15" fill="rgb(224,202,18)"/><text x="34.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (285 samples, 32.02%)</title><rect x="31" y="196" width="378" height="15" fill="rgb(226,54,13)"/><text x="34.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (284 samples, 31.91%)</title><rect x="32" y="212" width="377" height="15" fill="rgb(211,133,25)"/><text x="35.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/cap..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (284 samples, 31.91%)</title><rect x="32" y="228" width="377" height="15" fill="rgb(217,58,11)"/><text x="35.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (284 samples, 31.91%)</title><rect x="32" y="244" width="377" height="15" fill="rgb(213,229,12)"/><text x="35.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::mod..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="402" y="260" width="7" height="15" fill="rgb(232,37,8)"/><text x="405.00" y="270.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.11%)</title><rect x="409" y="180" width="1" height="15" fill="rgb(209,175,48)"/><text x="412.00" y="190.50"></text></g><g><title>0x7f0c97b822dd (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="409" y="196" width="1" height="15" fill="rgb(227,51,50)"/><text x="412.00" y="206.50"></text></g><g><title>google::protobuf::internal::WireFormat::_InternalSerialize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="409" y="212" width="1" height="15" fill="rgb(228,77,28)"/><text x="412.00" y="222.50"></text></g><g><title>google::protobuf::internal::WireFormat::InternalSerializeField (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="409" y="228" width="1" height="15" fill="rgb(243,114,2)"/><text x="412.00" y="238.50"></text></g><g><title>google::protobuf::internal::WireFormat::_InternalSerialize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="409" y="244" width="1" height="15" fill="rgb(236,130,43)"/><text x="412.00" y="254.50"></text></g><g><title>google::protobuf::internal::WireFormat::InternalSerializeField (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="409" y="260" width="1" height="15" fill="rgb(212,1,30)"/><text x="412.00" y="270.50"></text></g><g><title>google::protobuf::internal::WireFormat::_InternalSerialize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="409" y="276" width="1" height="15" fill="rgb(241,106,21)"/><text x="412.00" y="286.50"></text></g><g><title>google::protobuf::internal::WireFormat::InternalSerializeField (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="409" y="292" width="1" height="15" fill="rgb(226,130,40)"/><text x="412.00" y="302.50"></text></g><g><title>google::protobuf::internal::WireFormat::_InternalSerialize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="409" y="308" width="1" height="15" fill="rgb(206,79,19)"/><text x="412.00" y="318.50"></text></g><g><title>google::protobuf::internal::WireFormat::InternalSerializeField (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="409" y="324" width="1" height="15" fill="rgb(227,45,22)"/><text x="412.00" y="334.50"></text></g><g><title>google::protobuf::Reflection::GetRepeatedInt64 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="409" y="340" width="1" height="15" fill="rgb(241,176,38)"/><text x="412.00" y="350.50"></text></g><g><title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::RepeatedField&lt;long&gt; &gt; (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="409" y="356" width="1" height="15" fill="rgb(253,106,52)"/><text x="412.00" y="366.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="409" y="372" width="1" height="15" fill="rgb(249,227,40)"/><text x="412.00" y="382.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="409" y="388" width="1" height="15" fill="rgb(251,147,2)"/><text x="412.00" y="398.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.22%)</title><rect x="409" y="132" width="2" height="15" fill="rgb(221,218,28)"/><text x="412.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.22%)</title><rect x="409" y="148" width="2" height="15" fill="rgb(247,211,13)"/><text x="412.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.22%)</title><rect x="409" y="164" width="2" height="15" fill="rgb(210,159,51)"/><text x="412.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.11%)</title><rect x="410" y="180" width="1" height="15" fill="rgb(223,106,16)"/><text x="413.00" y="190.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.11%)</title><rect x="410" y="196" width="1" height="15" fill="rgb(216,7,0)"/><text x="413.00" y="206.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.11%)</title><rect x="410" y="212" width="1" height="15" fill="rgb(214,189,53)"/><text x="413.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.11%)</title><rect x="410" y="228" width="1" height="15" fill="rgb(227,101,49)"/><text x="413.00" y="238.50"></text></g><g><title>global_index (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.11%)</title><rect x="410" y="244" width="1" height="15" fill="rgb(241,40,6)"/><text x="413.00" y="254.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.11%)</title><rect x="411" y="196" width="2" height="15" fill="rgb(213,65,6)"/><text x="414.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.11%)</title><rect x="411" y="212" width="2" height="15" fill="rgb(247,214,44)"/><text x="414.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py) (1 samples, 0.11%)</title><rect x="411" y="228" width="2" height="15" fill="rgb(247,171,48)"/><text x="414.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py) (1 samples, 0.11%)</title><rect x="411" y="244" width="2" height="15" fill="rgb(232,131,42)"/><text x="414.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="411" y="260" width="2" height="15" fill="rgb(209,96,36)"/><text x="414.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="411" y="276" width="2" height="15" fill="rgb(210,53,28)"/><text x="414.00" y="286.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.11%)</title><rect x="411" y="292" width="2" height="15" fill="rgb(219,133,16)"/><text x="414.00" y="302.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.11%)</title><rect x="411" y="308" width="2" height="15" fill="rgb(211,40,47)"/><text x="414.00" y="318.50"></text></g><g><title>line (traceback.py) (1 samples, 0.11%)</title><rect x="411" y="324" width="2" height="15" fill="rgb(215,22,47)"/><text x="414.00" y="334.50"></text></g><g><title>unicode_strip (python3.7) (1 samples, 0.11%)</title><rect x="411" y="340" width="2" height="15" fill="rgb(212,205,48)"/><text x="414.00" y="350.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (291 samples, 32.70%)</title><rect x="29" y="68" width="386" height="15" fill="rgb(224,14,13)"/><text x="32.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_m_cl_1..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (291 samples, 32.70%)</title><rect x="29" y="84" width="386" height="15" fill="rgb(254,25,29)"/><text x="32.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.56%)</title><rect x="409" y="100" width="6" height="15" fill="rgb(208,144,46)"/><text x="412.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.56%)</title><rect x="409" y="116" width="6" height="15" fill="rgb(237,71,10)"/><text x="412.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.34%)</title><rect x="411" y="132" width="4" height="15" fill="rgb(214,68,2)"/><text x="414.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (3 samples, 0.34%)</title><rect x="411" y="148" width="4" height="15" fill="rgb(212,54,28)"/><text x="414.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (3 samples, 0.34%)</title><rect x="411" y="164" width="4" height="15" fill="rgb(213,148,3)"/><text x="414.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (3 samples, 0.34%)</title><rect x="411" y="180" width="4" height="15" fill="rgb(209,20,52)"/><text x="414.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py) (2 samples, 0.22%)</title><rect x="413" y="196" width="2" height="15" fill="rgb(249,225,16)"/><text x="416.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (2 samples, 0.22%)</title><rect x="413" y="212" width="2" height="15" fill="rgb(234,140,25)"/><text x="416.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.22%)</title><rect x="413" y="228" width="2" height="15" fill="rgb(235,58,37)"/><text x="416.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="413" y="244" width="2" height="15" fill="rgb(246,157,1)"/><text x="416.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.22%)</title><rect x="413" y="260" width="2" height="15" fill="rgb(238,175,2)"/><text x="416.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.22%)</title><rect x="413" y="276" width="2" height="15" fill="rgb(254,151,48)"/><text x="416.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (2 samples, 0.22%)</title><rect x="479" y="292" width="2" height="15" fill="rgb(208,210,32)"/><text x="482.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (2 samples, 0.22%)</title><rect x="479" y="308" width="2" height="15" fill="rgb(238,147,29)"/><text x="482.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (2 samples, 0.22%)</title><rect x="479" y="324" width="2" height="15" fill="rgb(211,113,42)"/><text x="482.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (2 samples, 0.22%)</title><rect x="479" y="340" width="2" height="15" fill="rgb(225,34,31)"/><text x="482.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (3 samples, 0.34%)</title><rect x="479" y="212" width="4" height="15" fill="rgb(238,51,22)"/><text x="482.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.34%)</title><rect x="479" y="228" width="4" height="15" fill="rgb(251,193,54)"/><text x="482.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (3 samples, 0.34%)</title><rect x="479" y="244" width="4" height="15" fill="rgb(207,70,45)"/><text x="482.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.34%)</title><rect x="479" y="260" width="4" height="15" fill="rgb(220,14,47)"/><text x="482.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (3 samples, 0.34%)</title><rect x="479" y="276" width="4" height="15" fill="rgb(223,82,50)"/><text x="482.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.11%)</title><rect x="481" y="292" width="2" height="15" fill="rgb(248,103,23)"/><text x="484.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.11%)</title><rect x="481" y="308" width="2" height="15" fill="rgb(208,2,20)"/><text x="484.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (1 samples, 0.11%)</title><rect x="483" y="212" width="1" height="15" fill="rgb(209,158,47)"/><text x="486.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.11%)</title><rect x="483" y="228" width="1" height="15" fill="rgb(225,37,25)"/><text x="486.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.11%)</title><rect x="483" y="244" width="1" height="15" fill="rgb(234,41,6)"/><text x="486.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.11%)</title><rect x="483" y="260" width="1" height="15" fill="rgb(228,166,38)"/><text x="486.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.11%)</title><rect x="483" y="276" width="1" height="15" fill="rgb(225,150,14)"/><text x="486.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.11%)</title><rect x="483" y="292" width="1" height="15" fill="rgb(239,53,7)"/><text x="486.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="484" y="276" width="1" height="15" fill="rgb(215,182,51)"/><text x="487.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="484" y="292" width="1" height="15" fill="rgb(244,82,49)"/><text x="487.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.11%)</title><rect x="484" y="308" width="1" height="15" fill="rgb(215,149,52)"/><text x="487.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.11%)</title><rect x="484" y="324" width="1" height="15" fill="rgb(243,149,50)"/><text x="487.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (2 samples, 0.22%)</title><rect x="484" y="212" width="3" height="15" fill="rgb(236,26,6)"/><text x="487.00" y="222.50"></text></g><g><title>array_add (number.c) (2 samples, 0.22%)</title><rect x="484" y="228" width="3" height="15" fill="rgb(236,218,5)"/><text x="487.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.22%)</title><rect x="484" y="244" width="3" height="15" fill="rgb(221,210,18)"/><text x="487.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.22%)</title><rect x="484" y="260" width="3" height="15" fill="rgb(213,202,32)"/><text x="487.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="485" y="276" width="2" height="15" fill="rgb(218,84,16)"/><text x="488.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="485" y="292" width="2" height="15" fill="rgb(251,73,11)"/><text x="488.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.11%)</title><rect x="485" y="308" width="2" height="15" fill="rgb(213,59,7)"/><text x="488.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="485" y="324" width="2" height="15" fill="rgb(214,187,10)"/><text x="488.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="485" y="340" width="2" height="15" fill="rgb(232,132,10)"/><text x="488.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="485" y="356" width="2" height="15" fill="rgb(213,1,7)"/><text x="488.00" y="366.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.11%)</title><rect x="492" y="244" width="1" height="15" fill="rgb(230,100,5)"/><text x="495.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="492" y="260" width="1" height="15" fill="rgb(250,91,1)"/><text x="495.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="493" y="260" width="2" height="15" fill="rgb(253,216,14)"/><text x="496.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="493" y="276" width="2" height="15" fill="rgb(245,41,51)"/><text x="496.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="493" y="292" width="2" height="15" fill="rgb(226,5,5)"/><text x="496.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="493" y="308" width="2" height="15" fill="rgb(235,112,45)"/><text x="496.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="495" y="324" width="1" height="15" fill="rgb(211,151,0)"/><text x="498.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (3 samples, 0.34%)</title><rect x="496" y="324" width="4" height="15" fill="rgb(221,198,20)"/><text x="499.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.11%)</title><rect x="499" y="340" width="1" height="15" fill="rgb(247,16,17)"/><text x="502.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="499" y="356" width="1" height="15" fill="rgb(234,156,18)"/><text x="502.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="499" y="372" width="1" height="15" fill="rgb(250,194,51)"/><text x="502.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="499" y="388" width="1" height="15" fill="rgb(225,116,40)"/><text x="502.00" y="398.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.11%)</title><rect x="500" y="324" width="1" height="15" fill="rgb(208,142,48)"/><text x="503.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="501" y="324" width="2" height="15" fill="rgb(245,158,11)"/><text x="504.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 0.79%)</title><rect x="495" y="308" width="9" height="15" fill="rgb(254,214,6)"/><text x="498.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.11%)</title><rect x="503" y="324" width="1" height="15" fill="rgb(244,80,23)"/><text x="506.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.11%)</title><rect x="503" y="340" width="1" height="15" fill="rgb(231,139,46)"/><text x="506.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.11%)</title><rect x="503" y="356" width="1" height="15" fill="rgb(245,217,32)"/><text x="506.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.11%)</title><rect x="503" y="372" width="1" height="15" fill="rgb(251,42,9)"/><text x="506.00" y="382.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 0.56%)</title><rect x="504" y="308" width="7" height="15" fill="rgb(231,137,52)"/><text x="507.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.56%)</title><rect x="504" y="324" width="7" height="15" fill="rgb(223,177,20)"/><text x="507.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.45%)</title><rect x="505" y="340" width="6" height="15" fill="rgb(222,12,0)"/><text x="508.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.34%)</title><rect x="507" y="356" width="4" height="15" fill="rgb(210,81,37)"/><text x="510.00" y="366.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (2 samples, 0.22%)</title><rect x="511" y="308" width="2" height="15" fill="rgb(206,216,7)"/><text x="514.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (2 samples, 0.22%)</title><rect x="511" y="324" width="2" height="15" fill="rgb(253,196,38)"/><text x="514.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (15 samples, 1.69%)</title><rect x="495" y="276" width="20" height="15" fill="rgb(207,165,24)"/><text x="498.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (15 samples, 1.69%)</title><rect x="495" y="292" width="20" height="15" fill="rgb(235,45,0)"/><text x="498.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="513" y="308" width="2" height="15" fill="rgb(253,221,16)"/><text x="516.00" y="318.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="513" y="324" width="2" height="15" fill="rgb(214,220,11)"/><text x="516.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.22%)</title><rect x="515" y="276" width="2" height="15" fill="rgb(211,104,27)"/><text x="518.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.11%)</title><rect x="516" y="292" width="1" height="15" fill="rgb(217,81,23)"/><text x="519.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (19 samples, 2.13%)</title><rect x="495" y="260" width="25" height="15" fill="rgb(248,48,36)"/><text x="498.00" y="270.50">P..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.22%)</title><rect x="517" y="276" width="3" height="15" fill="rgb(247,85,28)"/><text x="520.00" y="286.50"></text></g><g><title>0x7f0ca9852120 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="519" y="292" width="1" height="15" fill="rgb(228,175,24)"/><text x="522.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (26 samples, 2.92%)</title><rect x="488" y="228" width="35" height="15" fill="rgb(220,110,9)"/><text x="491.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 2.47%)</title><rect x="493" y="244" width="30" height="15" fill="rgb(240,98,5)"/><text x="496.00" y="254.50">uf..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.22%)</title><rect x="520" y="260" width="3" height="15" fill="rgb(218,202,36)"/><text x="523.00" y="270.50"></text></g><g><title>0x7f0ca8a53f10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="521" y="276" width="2" height="15" fill="rgb(253,59,3)"/><text x="524.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py) (1 samples, 0.11%)</title><rect x="523" y="228" width="1" height="15" fill="rgb(239,162,10)"/><text x="526.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="523" y="244" width="1" height="15" fill="rgb(249,24,12)"/><text x="526.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="523" y="260" width="1" height="15" fill="rgb(247,222,18)"/><text x="526.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="523" y="276" width="1" height="15" fill="rgb(233,217,5)"/><text x="526.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="523" y="292" width="1" height="15" fill="rgb(252,87,7)"/><text x="526.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src) (1 samples, 0.11%)</title><rect x="523" y="308" width="1" height="15" fill="rgb(221,110,1)"/><text x="526.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="523" y="324" width="1" height="15" fill="rgb(223,175,51)"/><text x="526.00" y="334.50"></text></g><g><title>0x7f0ca997d1a0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="523" y="340" width="1" height="15" fill="rgb(221,84,16)"/><text x="526.00" y="350.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.11%)</title><rect x="528" y="276" width="1" height="15" fill="rgb(232,174,53)"/><text x="531.00" y="286.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.11%)</title><rect x="529" y="324" width="2" height="15" fill="rgb(250,196,10)"/><text x="532.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.11%)</title><rect x="529" y="340" width="2" height="15" fill="rgb(251,154,43)"/><text x="532.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.11%)</title><rect x="529" y="356" width="2" height="15" fill="rgb(245,154,26)"/><text x="532.00" y="366.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.11%)</title><rect x="529" y="372" width="2" height="15" fill="rgb(233,72,19)"/><text x="532.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.22%)</title><rect x="529" y="292" width="3" height="15" fill="rgb(219,68,25)"/><text x="532.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.22%)</title><rect x="529" y="308" width="3" height="15" fill="rgb(238,40,1)"/><text x="532.00" y="318.50"></text></g><g><title>strides_to_terms (mem_overlap.c) (1 samples, 0.11%)</title><rect x="531" y="324" width="1" height="15" fill="rgb(209,1,45)"/><text x="534.00" y="334.50"></text></g><g><title>0x7f0ca99b3960 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="532" y="324" width="1" height="15" fill="rgb(254,36,49)"/><text x="535.00" y="334.50"></text></g><g><title>0x7f0ca99b3979 (libm-2.29.so) (4 samples, 0.45%)</title><rect x="533" y="324" width="6" height="15" fill="rgb(240,195,30)"/><text x="536.00" y="334.50"></text></g><g><title>0x7f0ca99b3997 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="539" y="324" width="1" height="15" fill="rgb(222,33,38)"/><text x="542.00" y="334.50"></text></g><g><title>0x7f0ca99b39a4 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="540" y="324" width="2" height="15" fill="rgb(246,215,50)"/><text x="543.00" y="334.50"></text></g><g><title>0x7f0ca99b39af (libm-2.29.so) (2 samples, 0.22%)</title><rect x="542" y="324" width="3" height="15" fill="rgb(220,108,49)"/><text x="545.00" y="334.50"></text></g><g><title>0x7f0ca99b39d4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="545" y="324" width="1" height="15" fill="rgb(243,154,11)"/><text x="548.00" y="334.50"></text></g><g><title>0x7f0ca99b39e0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="546" y="324" width="2" height="15" fill="rgb(246,69,9)"/><text x="549.00" y="334.50"></text></g><g><title>0x7f0ca99b39e4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="548" y="324" width="1" height="15" fill="rgb(244,31,34)"/><text x="551.00" y="334.50"></text></g><g><title>0x7f0ca99b39f4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="549" y="324" width="1" height="15" fill="rgb(223,172,3)"/><text x="552.00" y="334.50"></text></g><g><title>0x7f0ca99b39f8 (libm-2.29.so) (3 samples, 0.34%)</title><rect x="550" y="324" width="4" height="15" fill="rgb(229,94,54)"/><text x="553.00" y="334.50"></text></g><g><title>0x7f0ca99b3a04 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="554" y="324" width="3" height="15" fill="rgb(209,90,29)"/><text x="557.00" y="334.50"></text></g><g><title>0x7f0ca99b3a15 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="557" y="324" width="3" height="15" fill="rgb(239,18,9)"/><text x="560.00" y="334.50"></text></g><g><title>0x7f0ca99b3a19 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="560" y="324" width="1" height="15" fill="rgb(211,41,47)"/><text x="563.00" y="334.50"></text></g><g><title>0x7f0ca99b3a1d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="561" y="324" width="1" height="15" fill="rgb(221,12,17)"/><text x="564.00" y="334.50"></text></g><g><title>0x7f0ca99b3a21 (libm-2.29.so) (4 samples, 0.45%)</title><rect x="562" y="324" width="6" height="15" fill="rgb(224,202,47)"/><text x="565.00" y="334.50"></text></g><g><title>logf (libm-2.29.so) (3 samples, 0.34%)</title><rect x="568" y="324" width="4" height="15" fill="rgb(251,72,40)"/><text x="571.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (33 samples, 3.71%)</title><rect x="529" y="276" width="44" height="15" fill="rgb(224,211,3)"/><text x="532.00" y="286.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (31 samples, 3.48%)</title><rect x="532" y="292" width="41" height="15" fill="rgb(207,140,42)"/><text x="535.00" y="302.50">tri..</text></g><g><title>FLOAT_log (loops.c.src) (31 samples, 3.48%)</title><rect x="532" y="308" width="41" height="15" fill="rgb(250,60,38)"/><text x="535.00" y="318.50">FLO..</text></g><g><title>npy_logf (npy_math_internal.h.src) (1 samples, 0.11%)</title><rect x="572" y="324" width="1" height="15" fill="rgb(251,197,19)"/><text x="575.00" y="334.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.11%)</title><rect x="574" y="292" width="2" height="15" fill="rgb(249,65,32)"/><text x="577.00" y="302.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.11%)</title><rect x="574" y="308" width="2" height="15" fill="rgb(229,151,45)"/><text x="577.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 0.45%)</title><rect x="573" y="276" width="5" height="15" fill="rgb(215,4,14)"/><text x="576.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (2 samples, 0.22%)</title><rect x="576" y="292" width="2" height="15" fill="rgb(208,124,11)"/><text x="579.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (42 samples, 4.72%)</title><rect x="524" y="228" width="56" height="15" fill="rgb(225,219,1)"/><text x="527.00" y="238.50">_run ..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (40 samples, 4.49%)</title><rect x="527" y="244" width="53" height="15" fill="rgb(231,48,54)"/><text x="530.00" y="254.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (40 samples, 4.49%)</title><rect x="527" y="260" width="53" height="15" fill="rgb(212,140,8)"/><text x="530.00" y="270.50">PyUFu..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="578" y="276" width="2" height="15" fill="rgb(210,66,35)"/><text x="581.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="578" y="292" width="2" height="15" fill="rgb(251,85,39)"/><text x="581.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="578" y="308" width="2" height="15" fill="rgb(252,53,1)"/><text x="581.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="578" y="324" width="2" height="15" fill="rgb(210,76,11)"/><text x="581.00" y="334.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="578" y="340" width="2" height="15" fill="rgb(242,44,17)"/><text x="581.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="586" y="324" width="2" height="15" fill="rgb(242,17,43)"/><text x="589.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="586" y="340" width="2" height="15" fill="rgb(240,199,16)"/><text x="589.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="586" y="356" width="2" height="15" fill="rgb(242,82,12)"/><text x="589.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="586" y="372" width="2" height="15" fill="rgb(220,93,18)"/><text x="589.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="586" y="388" width="2" height="15" fill="rgb(223,204,38)"/><text x="589.00" y="398.50"></text></g><g><title>0x7f0ca9852120 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="590" y="356" width="2" height="15" fill="rgb(241,26,54)"/><text x="593.00" y="366.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.11%)</title><rect x="594" y="388" width="2" height="15" fill="rgb(209,102,45)"/><text x="597.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.34%)</title><rect x="593" y="372" width="4" height="15" fill="rgb(239,162,32)"/><text x="596.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="596" y="388" width="1" height="15" fill="rgb(214,220,18)"/><text x="599.00" y="398.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c) (1 samples, 0.11%)</title><rect x="596" y="404" width="1" height="15" fill="rgb(219,97,35)"/><text x="599.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="597" y="372" width="1" height="15" fill="rgb(217,141,1)"/><text x="600.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="597" y="388" width="1" height="15" fill="rgb(247,45,8)"/><text x="600.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="597" y="404" width="1" height="15" fill="rgb(248,86,43)"/><text x="600.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="597" y="420" width="1" height="15" fill="rgb(238,106,49)"/><text x="600.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="597" y="436" width="1" height="15" fill="rgb(219,105,3)"/><text x="600.00" y="446.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.22%)</title><rect x="598" y="372" width="3" height="15" fill="rgb(250,133,4)"/><text x="601.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="600" y="388" width="1" height="15" fill="rgb(246,36,51)"/><text x="603.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="600" y="404" width="1" height="15" fill="rgb(211,60,47)"/><text x="603.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src) (6 samples, 0.67%)</title><rect x="607" y="388" width="8" height="15" fill="rgb(206,175,11)"/><text x="610.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (4 samples, 0.45%)</title><rect x="610" y="404" width="5" height="15" fill="rgb(242,213,25)"/><text x="613.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="615" y="388" width="2" height="15" fill="rgb(241,59,20)"/><text x="618.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (37 samples, 4.16%)</title><rect x="580" y="228" width="49" height="15" fill="rgb(236,53,35)"/><text x="583.00" y="238.50">_run..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (35 samples, 3.93%)</title><rect x="582" y="244" width="47" height="15" fill="rgb(234,2,10)"/><text x="585.00" y="254.50">sum ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (34 samples, 3.82%)</title><rect x="584" y="260" width="45" height="15" fill="rgb(242,82,1)"/><text x="587.00" y="270.50">arra..</text></g><g><title>sum (numpy/core/fromnumeric.py) (33 samples, 3.71%)</title><rect x="585" y="276" width="44" height="15" fill="rgb(223,91,27)"/><text x="588.00" y="286.50">sum ..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (33 samples, 3.71%)</title><rect x="585" y="292" width="44" height="15" fill="rgb(248,54,20)"/><text x="588.00" y="302.50">_wra..</text></g><g><title>ufunc_reduce (ufunc_object.c) (32 samples, 3.60%)</title><rect x="586" y="308" width="43" height="15" fill="rgb(218,149,7)"/><text x="589.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (31 samples, 3.48%)</title><rect x="588" y="324" width="41" height="15" fill="rgb(234,158,44)"/><text x="591.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (30 samples, 3.37%)</title><rect x="589" y="340" width="40" height="15" fill="rgb(220,5,7)"/><text x="592.00" y="350.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (28 samples, 3.15%)</title><rect x="592" y="356" width="37" height="15" fill="rgb(213,79,43)"/><text x="595.00" y="366.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (21 samples, 2.36%)</title><rect x="601" y="372" width="28" height="15" fill="rgb(222,162,28)"/><text x="604.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (9 samples, 1.01%)</title><rect x="617" y="388" width="12" height="15" fill="rgb(222,53,17)"/><text x="620.00" y="398.50"></text></g><g><title>0x7f0c6a38f422 (?) (1 samples, 0.11%)</title><rect x="629" y="244" width="1" height="15" fill="rgb(246,208,23)"/><text x="632.00" y="254.50"></text></g><g><title>0x7f0c6a39589e (?) (1 samples, 0.11%)</title><rect x="629" y="260" width="1" height="15" fill="rgb(253,211,51)"/><text x="632.00" y="270.50"></text></g><g><title>0x7f0c6a39574f (?) (1 samples, 0.11%)</title><rect x="629" y="276" width="1" height="15" fill="rgb(220,95,21)"/><text x="632.00" y="286.50"></text></g><g><title>0x7f0c6a39ba3a (?) (1 samples, 0.11%)</title><rect x="629" y="292" width="1" height="15" fill="rgb(229,205,46)"/><text x="632.00" y="302.50"></text></g><g><title>0x7f0c737f7ab9 (?) (1 samples, 0.11%)</title><rect x="629" y="308" width="1" height="15" fill="rgb(253,10,14)"/><text x="632.00" y="318.50"></text></g><g><title>0x7f0c737f8ea0 (?) (1 samples, 0.11%)</title><rect x="629" y="324" width="1" height="15" fill="rgb(240,125,39)"/><text x="632.00" y="334.50"></text></g><g><title>0x7f0c737f8ea0 (libgomp.so.1.0.0) (6 samples, 0.67%)</title><rect x="630" y="468" width="8" height="15" fill="rgb(254,25,20)"/><text x="633.00" y="478.50"></text></g><g><title>0x7f0c737f8ea9 (libgomp.so.1.0.0) (9 samples, 1.01%)</title><rect x="638" y="468" width="12" height="15" fill="rgb(239,88,13)"/><text x="641.00" y="478.50"></text></g><g><title>0x7f0c737f8eab (libgomp.so.1.0.0) (21 samples, 2.36%)</title><rect x="650" y="468" width="28" height="15" fill="rgb(232,33,17)"/><text x="653.00" y="478.50">0..</text></g><g><title>0x7f0c737f7ab9 (libgomp.so.1.0.0) (51 samples, 5.73%)</title><rect x="630" y="452" width="68" height="15" fill="rgb(215,30,5)"/><text x="633.00" y="462.50">0x7f0c7..</text></g><g><title>0x7f0c737f8ead (libgomp.so.1.0.0) (15 samples, 1.69%)</title><rect x="678" y="468" width="20" height="15" fill="rgb(210,223,46)"/><text x="681.00" y="478.50"></text></g><g><title>0x7f0c737f8cf9 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="698" y="484" width="1" height="15" fill="rgb(251,102,46)"/><text x="701.00" y="494.50"></text></g><g><title>0x7f0c737f8cfb (libgomp.so.1.0.0) (5 samples, 0.56%)</title><rect x="699" y="484" width="7" height="15" fill="rgb(250,154,4)"/><text x="702.00" y="494.50"></text></g><g><title>0x7f0c737f6daa (libgomp.so.1.0.0) (8 samples, 0.90%)</title><rect x="698" y="468" width="10" height="15" fill="rgb(245,44,35)"/><text x="701.00" y="478.50"></text></g><g><title>0x7f0c737f8cfd (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="706" y="484" width="2" height="15" fill="rgb(232,9,19)"/><text x="709.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (182 samples, 20.45%)</title><rect x="470" y="196" width="241" height="15" fill="rgb(234,121,34)"/><text x="473.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (169 samples, 18.99%)</title><rect x="487" y="212" width="224" height="15" fill="rgb(207,44,54)"/><text x="490.00" y="222.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (62 samples, 6.97%)</title><rect x="629" y="228" width="82" height="15" fill="rgb(218,219,2)"/><text x="632.00" y="238.50">_run (mlp..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (61 samples, 6.85%)</title><rect x="630" y="244" width="81" height="15" fill="rgb(246,130,48)"/><text x="633.00" y="254.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (61 samples, 6.85%)</title><rect x="630" y="260" width="81" height="15" fill="rgb(245,44,9)"/><text x="633.00" y="270.50">void pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (61 samples, 6.85%)</title><rect x="630" y="276" width="81" height="15" fill="rgb(207,199,20)"/><text x="633.00" y="286.50">void pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (61 samples, 6.85%)</title><rect x="630" y="292" width="81" height="15" fill="rgb(221,142,14)"/><text x="633.00" y="302.50">pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (61 samples, 6.85%)</title><rect x="630" y="308" width="81" height="15" fill="rgb(221,131,42)"/><text x="633.00" y="318.50">pybind11:..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (61 samples, 6.85%)</title><rect x="630" y="324" width="81" height="15" fill="rgb(218,54,16)"/><text x="633.00" y="334.50">pybind11:..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (61 samples, 6.85%)</title><rect x="630" y="340" width="81" height="15" fill="rgb(212,37,53)"/><text x="633.00" y="350.50">pybind11:..</text></g><g><title>pybind11::array::~array (numpy.h) (61 samples, 6.85%)</title><rect x="630" y="356" width="81" height="15" fill="rgb(216,164,23)"/><text x="633.00" y="366.50">pybind11:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (61 samples, 6.85%)</title><rect x="630" y="372" width="81" height="15" fill="rgb(243,204,53)"/><text x="633.00" y="382.50">pybind11:..</text></g><g><title>pybind11::object::~object (pytypes.h) (61 samples, 6.85%)</title><rect x="630" y="388" width="81" height="15" fill="rgb(224,92,1)"/><text x="633.00" y="398.50">pybind11:..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (61 samples, 6.85%)</title><rect x="630" y="404" width="81" height="15" fill="rgb(236,19,41)"/><text x="633.00" y="414.50">pybind11:..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (61 samples, 6.85%)</title><rect x="630" y="420" width="81" height="15" fill="rgb(224,95,25)"/><text x="633.00" y="430.50">RuntimeTr..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (61 samples, 6.85%)</title><rect x="630" y="436" width="81" height="15" fill="rgb(234,137,27)"/><text x="633.00" y="446.50">pybind11:..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (10 samples, 1.12%)</title><rect x="698" y="452" width="13" height="15" fill="rgb(219,31,43)"/><text x="701.00" y="462.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (2 samples, 0.22%)</title><rect x="708" y="468" width="3" height="15" fill="rgb(246,39,49)"/><text x="711.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.11%)</title><rect x="710" y="484" width="1" height="15" fill="rgb(244,21,8)"/><text x="713.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="710" y="500" width="1" height="15" fill="rgb(221,28,47)"/><text x="713.00" y="510.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="727" y="372" width="1" height="15" fill="rgb(251,167,16)"/><text x="730.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="727" y="388" width="1" height="15" fill="rgb(233,59,45)"/><text x="730.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="727" y="404" width="1" height="15" fill="rgb(217,187,49)"/><text x="730.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (11 samples, 1.24%)</title><rect x="729" y="420" width="15" height="15" fill="rgb(224,86,0)"/><text x="732.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="744" y="420" width="1" height="15" fill="rgb(207,159,20)"/><text x="747.00" y="430.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.11%)</title><rect x="744" y="436" width="1" height="15" fill="rgb(205,165,23)"/><text x="747.00" y="446.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="745" y="420" width="2" height="15" fill="rgb(209,155,49)"/><text x="748.00" y="430.50"></text></g><g><title>0x7f0ca98319a8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="745" y="436" width="2" height="15" fill="rgb(215,51,0)"/><text x="748.00" y="446.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.11%)</title><rect x="747" y="420" width="1" height="15" fill="rgb(205,160,16)"/><text x="750.00" y="430.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src) (3 samples, 0.34%)</title><rect x="748" y="468" width="4" height="15" fill="rgb(205,143,23)"/><text x="751.00" y="478.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.45%)</title><rect x="748" y="420" width="5" height="15" fill="rgb(214,60,34)"/><text x="751.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.45%)</title><rect x="748" y="436" width="5" height="15" fill="rgb(211,55,39)"/><text x="751.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.45%)</title><rect x="748" y="452" width="5" height="15" fill="rgb(246,44,5)"/><text x="751.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="752" y="468" width="1" height="15" fill="rgb(222,56,18)"/><text x="755.00" y="478.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="753" y="420" width="2" height="15" fill="rgb(219,99,34)"/><text x="756.00" y="430.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="755" y="420" width="1" height="15" fill="rgb(235,23,13)"/><text x="758.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="755" y="436" width="1" height="15" fill="rgb(220,103,36)"/><text x="758.00" y="446.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="755" y="452" width="1" height="15" fill="rgb(228,43,47)"/><text x="758.00" y="462.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (21 samples, 2.36%)</title><rect x="729" y="388" width="28" height="15" fill="rgb(216,124,36)"/><text x="732.00" y="398.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (21 samples, 2.36%)</title><rect x="729" y="404" width="28" height="15" fill="rgb(247,120,34)"/><text x="732.00" y="414.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="756" y="420" width="1" height="15" fill="rgb(251,173,19)"/><text x="759.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="756" y="436" width="1" height="15" fill="rgb(252,45,45)"/><text x="759.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="756" y="452" width="1" height="15" fill="rgb(248,79,17)"/><text x="759.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="756" y="468" width="1" height="15" fill="rgb(242,227,43)"/><text x="759.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (23 samples, 2.58%)</title><rect x="728" y="372" width="31" height="15" fill="rgb(220,80,41)"/><text x="731.00" y="382.50">Py..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="757" y="388" width="2" height="15" fill="rgb(223,136,18)"/><text x="760.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="757" y="404" width="2" height="15" fill="rgb(205,93,17)"/><text x="760.00" y="414.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="757" y="420" width="2" height="15" fill="rgb(234,56,31)"/><text x="760.00" y="430.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.11%)</title><rect x="757" y="436" width="2" height="15" fill="rgb(225,220,40)"/><text x="760.00" y="446.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (25 samples, 2.81%)</title><rect x="727" y="340" width="33" height="15" fill="rgb(237,20,29)"/><text x="730.00" y="350.50">_c..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (25 samples, 2.81%)</title><rect x="727" y="356" width="33" height="15" fill="rgb(220,15,37)"/><text x="730.00" y="366.50">uf..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="759" y="372" width="1" height="15" fill="rgb(207,153,46)"/><text x="762.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="759" y="388" width="1" height="15" fill="rgb(237,89,25)"/><text x="762.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="759" y="404" width="1" height="15" fill="rgb(224,181,23)"/><text x="762.00" y="414.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="760" y="340" width="1" height="15" fill="rgb(249,117,50)"/><text x="763.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="767" y="356" width="4" height="15" fill="rgb(237,207,21)"/><text x="770.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (4 samples, 0.45%)</title><rect x="771" y="356" width="5" height="15" fill="rgb(249,147,4)"/><text x="774.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.34%)</title><rect x="772" y="372" width="4" height="15" fill="rgb(211,0,31)"/><text x="775.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (3 samples, 0.34%)</title><rect x="772" y="388" width="4" height="15" fill="rgb(212,86,22)"/><text x="775.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.22%)</title><rect x="773" y="404" width="3" height="15" fill="rgb(232,41,43)"/><text x="776.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.22%)</title><rect x="773" y="420" width="3" height="15" fill="rgb(241,60,25)"/><text x="776.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.11%)</title><rect x="775" y="436" width="1" height="15" fill="rgb(240,19,34)"/><text x="778.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="775" y="452" width="1" height="15" fill="rgb(226,203,54)"/><text x="778.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="775" y="468" width="1" height="15" fill="rgb(235,69,23)"/><text x="778.00" y="478.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="775" y="484" width="1" height="15" fill="rgb(227,229,23)"/><text x="778.00" y="494.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="775" y="500" width="1" height="15" fill="rgb(247,141,16)"/><text x="778.00" y="510.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="775" y="516" width="1" height="15" fill="rgb(213,204,47)"/><text x="778.00" y="526.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.11%)</title><rect x="776" y="372" width="1" height="15" fill="rgb(230,83,41)"/><text x="779.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="776" y="388" width="1" height="15" fill="rgb(209,32,30)"/><text x="779.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="776" y="404" width="1" height="15" fill="rgb(245,114,27)"/><text x="779.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="776" y="420" width="1" height="15" fill="rgb(244,80,5)"/><text x="779.00" y="430.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="778" y="388" width="2" height="15" fill="rgb(233,229,34)"/><text x="781.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.34%)</title><rect x="777" y="372" width="4" height="15" fill="rgb(215,213,2)"/><text x="780.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="780" y="388" width="1" height="15" fill="rgb(232,84,37)"/><text x="783.00" y="398.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (277 samples, 31.12%)</title><rect x="415" y="100" width="367" height="15" fill="rgb(251,94,18)"/><text x="418.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_10..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (277 samples, 31.12%)</title><rect x="415" y="116" width="367" height="15" fill="rgb(249,40,51)"/><text x="418.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (277 samples, 31.12%)</title><rect x="415" y="132" width="367" height="15" fill="rgb(238,213,40)"/><text x="418.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (277 samples, 31.12%)</title><rect x="415" y="148" width="367" height="15" fill="rgb(226,45,38)"/><text x="418.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (277 samples, 31.12%)</title><rect x="415" y="164" width="367" height="15" fill="rgb(227,47,5)"/><text x="418.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (272 samples, 30.56%)</title><rect x="422" y="180" width="360" height="15" fill="rgb(234,199,29)"/><text x="425.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (54 samples, 6.07%)</title><rect x="711" y="196" width="71" height="15" fill="rgb(205,24,10)"/><text x="714.00" y="206.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (49 samples, 5.51%)</title><rect x="718" y="212" width="64" height="15" fill="rgb(214,103,18)"/><text x="721.00" y="222.50">_run (m..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (45 samples, 5.06%)</title><rect x="723" y="228" width="59" height="15" fill="rgb(235,31,49)"/><text x="726.00" y="238.50">clip (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (45 samples, 5.06%)</title><rect x="723" y="244" width="59" height="15" fill="rgb(243,106,19)"/><text x="726.00" y="254.50">array_..</text></g><g><title>clip (numpy/core/fromnumeric.py) (45 samples, 5.06%)</title><rect x="723" y="260" width="59" height="15" fill="rgb(247,100,15)"/><text x="726.00" y="270.50">clip (..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (44 samples, 4.94%)</title><rect x="724" y="276" width="58" height="15" fill="rgb(238,193,17)"/><text x="727.00" y="286.50">_wrapf..</text></g><g><title>array_clip (methods.c) (44 samples, 4.94%)</title><rect x="724" y="292" width="58" height="15" fill="rgb(245,42,4)"/><text x="727.00" y="302.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (44 samples, 4.94%)</title><rect x="724" y="308" width="58" height="15" fill="rgb(248,108,26)"/><text x="727.00" y="318.50">forwar..</text></g><g><title>_clip (numpy/core/_methods.py) (44 samples, 4.94%)</title><rect x="724" y="324" width="58" height="15" fill="rgb(247,194,15)"/><text x="727.00" y="334.50">_clip ..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (16 samples, 1.80%)</title><rect x="761" y="340" width="21" height="15" fill="rgb(212,35,23)"/><text x="764.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.56%)</title><rect x="776" y="356" width="6" height="15" fill="rgb(235,115,17)"/><text x="779.00" y="366.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.11%)</title><rect x="781" y="372" width="1" height="15" fill="rgb(216,213,18)"/><text x="784.00" y="382.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.11%)</title><rect x="781" y="388" width="1" height="15" fill="rgb(232,14,5)"/><text x="784.00" y="398.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="782" y="436" width="2" height="15" fill="rgb(209,154,36)"/><text x="785.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="782" y="212" width="3" height="15" fill="rgb(220,91,6)"/><text x="785.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="782" y="228" width="3" height="15" fill="rgb(232,207,53)"/><text x="785.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="782" y="244" width="3" height="15" fill="rgb(205,151,41)"/><text x="785.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="782" y="260" width="3" height="15" fill="rgb(249,100,43)"/><text x="785.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="782" y="276" width="3" height="15" fill="rgb(240,103,51)"/><text x="785.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.22%)</title><rect x="782" y="292" width="3" height="15" fill="rgb(254,48,42)"/><text x="785.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="782" y="308" width="3" height="15" fill="rgb(244,207,34)"/><text x="785.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="782" y="324" width="3" height="15" fill="rgb(219,212,48)"/><text x="785.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="782" y="340" width="3" height="15" fill="rgb(223,4,47)"/><text x="785.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="782" y="356" width="3" height="15" fill="rgb(223,143,49)"/><text x="785.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="782" y="372" width="3" height="15" fill="rgb(208,100,42)"/><text x="785.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.22%)</title><rect x="782" y="388" width="3" height="15" fill="rgb(211,58,48)"/><text x="785.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="782" y="404" width="3" height="15" fill="rgb(236,182,3)"/><text x="785.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="782" y="420" width="3" height="15" fill="rgb(211,213,40)"/><text x="785.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="784" y="436" width="1" height="15" fill="rgb(225,130,11)"/><text x="787.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="784" y="452" width="1" height="15" fill="rgb(205,76,17)"/><text x="787.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="784" y="468" width="1" height="15" fill="rgb(246,82,29)"/><text x="787.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.11%)</title><rect x="784" y="484" width="1" height="15" fill="rgb(246,112,0)"/><text x="787.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.11%)</title><rect x="784" y="500" width="1" height="15" fill="rgb(251,79,14)"/><text x="787.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="784" y="516" width="1" height="15" fill="rgb(230,139,39)"/><text x="787.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="784" y="532" width="1" height="15" fill="rgb(233,0,0)"/><text x="787.00" y="542.50"></text></g><g><title>std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt;::_M_emplace_back_aux&lt;onnx::OpSchema&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="784" y="548" width="1" height="15" fill="rgb(206,53,35)"/><text x="787.00" y="558.50"></text></g><g><title>onnx::OpSchema::~OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="784" y="564" width="1" height="15" fill="rgb(205,2,15)"/><text x="787.00" y="574.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_M_erase (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="784" y="580" width="1" height="15" fill="rgb(249,212,22)"/><text x="787.00" y="590.50"></text></g><g><title>onnx::AttributeProto::~AttributeProto (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="784" y="596" width="1" height="15" fill="rgb(251,50,12)"/><text x="787.00" y="606.50"></text></g><g><title>onnx::AttributeProto::SharedDtor (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="784" y="612" width="1" height="15" fill="rgb(253,6,34)"/><text x="787.00" y="622.50"></text></g><g><title>0x7f0ca98319ff (libc-2.29.so) (1 samples, 0.11%)</title><rect x="784" y="628" width="1" height="15" fill="rgb(246,162,35)"/><text x="787.00" y="638.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (3 samples, 0.34%)</title><rect x="782" y="180" width="4" height="15" fill="rgb(236,136,28)"/><text x="785.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (3 samples, 0.34%)</title><rect x="782" y="196" width="4" height="15" fill="rgb(244,214,30)"/><text x="785.00" y="206.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.11%)</title><rect x="785" y="212" width="1" height="15" fill="rgb(231,31,43)"/><text x="788.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (1 samples, 0.11%)</title><rect x="785" y="228" width="1" height="15" fill="rgb(251,134,34)"/><text x="788.00" y="238.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (1 samples, 0.11%)</title><rect x="785" y="244" width="1" height="15" fill="rgb(240,93,16)"/><text x="788.00" y="254.50"></text></g><g><title>_init (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (1 samples, 0.11%)</title><rect x="785" y="260" width="1" height="15" fill="rgb(240,118,30)"/><text x="788.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (1 samples, 0.11%)</title><rect x="785" y="276" width="1" height="15" fill="rgb(224,133,25)"/><text x="788.00" y="286.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.45%)</title><rect x="782" y="132" width="6" height="15" fill="rgb(235,15,47)"/><text x="785.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.45%)</title><rect x="782" y="148" width="6" height="15" fill="rgb(240,107,46)"/><text x="785.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.45%)</title><rect x="782" y="164" width="6" height="15" fill="rgb(215,129,49)"/><text x="785.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.11%)</title><rect x="786" y="180" width="2" height="15" fill="rgb(242,79,3)"/><text x="789.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.11%)</title><rect x="786" y="196" width="2" height="15" fill="rgb(248,58,48)"/><text x="789.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.11%)</title><rect x="786" y="212" width="2" height="15" fill="rgb(206,67,9)"/><text x="789.00" y="222.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (282 samples, 31.69%)</title><rect x="415" y="68" width="374" height="15" fill="rgb(239,36,2)"/><text x="418.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_m_c..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (282 samples, 31.69%)</title><rect x="415" y="84" width="374" height="15" fill="rgb(240,175,29)"/><text x="418.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.56%)</title><rect x="782" y="100" width="7" height="15" fill="rgb(246,87,7)"/><text x="785.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.56%)</title><rect x="782" y="116" width="7" height="15" fill="rgb(221,17,23)"/><text x="785.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="788" y="132" width="1" height="15" fill="rgb(252,167,31)"/><text x="791.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.11%)</title><rect x="788" y="148" width="1" height="15" fill="rgb(237,210,30)"/><text x="791.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.11%)</title><rect x="788" y="164" width="1" height="15" fill="rgb(228,16,44)"/><text x="791.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="788" y="180" width="1" height="15" fill="rgb(235,145,24)"/><text x="791.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py) (1 samples, 0.11%)</title><rect x="788" y="196" width="1" height="15" fill="rgb(246,14,47)"/><text x="791.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="788" y="212" width="1" height="15" fill="rgb(207,203,8)"/><text x="791.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.11%)</title><rect x="788" y="228" width="1" height="15" fill="rgb(241,122,19)"/><text x="791.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="788" y="244" width="1" height="15" fill="rgb(243,75,17)"/><text x="791.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.11%)</title><rect x="788" y="260" width="1" height="15" fill="rgb(213,69,35)"/><text x="791.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.11%)</title><rect x="788" y="276" width="1" height="15" fill="rgb(229,52,32)"/><text x="791.00" y="286.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="789" y="164" width="1" height="15" fill="rgb(209,113,22)"/><text x="792.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (1 samples, 0.11%)</title><rect x="789" y="180" width="1" height="15" fill="rgb(235,215,51)"/><text x="792.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="789" y="196" width="1" height="15" fill="rgb(223,118,21)"/><text x="792.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="789" y="212" width="1" height="15" fill="rgb(248,228,16)"/><text x="792.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="789" y="228" width="1" height="15" fill="rgb(252,104,53)"/><text x="792.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="789" y="244" width="1" height="15" fill="rgb(238,104,21)"/><text x="792.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.11%)</title><rect x="789" y="260" width="1" height="15" fill="rgb(216,86,51)"/><text x="792.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="789" y="276" width="1" height="15" fill="rgb(212,113,12)"/><text x="792.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.11%)</title><rect x="789" y="292" width="1" height="15" fill="rgb(229,195,4)"/><text x="792.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.11%)</title><rect x="789" y="308" width="1" height="15" fill="rgb(222,90,14)"/><text x="792.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="789" y="324" width="1" height="15" fill="rgb(223,180,44)"/><text x="792.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (1 samples, 0.11%)</title><rect x="789" y="340" width="1" height="15" fill="rgb(234,70,48)"/><text x="792.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="789" y="356" width="1" height="15" fill="rgb(253,28,25)"/><text x="792.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="789" y="372" width="1" height="15" fill="rgb(211,208,32)"/><text x="792.00" y="382.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="789" y="388" width="1" height="15" fill="rgb(223,16,52)"/><text x="792.00" y="398.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="790" y="164" width="2" height="15" fill="rgb(237,131,17)"/><text x="793.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="790" y="180" width="2" height="15" fill="rgb(252,48,16)"/><text x="793.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="790" y="196" width="2" height="15" fill="rgb(208,167,6)"/><text x="793.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="792" y="164" width="1" height="15" fill="rgb(251,229,47)"/><text x="795.00" y="174.50"></text></g><g><title>0x7f0c83275d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="810" y="212" width="2" height="15" fill="rgb(218,158,17)"/><text x="813.00" y="222.50"></text></g><g><title>0x7f0c83274fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="810" y="228" width="2" height="15" fill="rgb(236,57,11)"/><text x="813.00" y="238.50"></text></g><g><title>0x7f0c83284540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="810" y="244" width="2" height="15" fill="rgb(208,89,13)"/><text x="813.00" y="254.50"></text></g><g><title>0x7f0c832592f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="810" y="260" width="2" height="15" fill="rgb(246,110,38)"/><text x="813.00" y="270.50"></text></g><g><title>0x7f0c83258530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="810" y="276" width="2" height="15" fill="rgb(231,85,36)"/><text x="813.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (1 samples, 0.11%)</title><rect x="810" y="292" width="2" height="15" fill="rgb(227,155,40)"/><text x="813.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.22%)</title><rect x="812" y="228" width="2" height="15" fill="rgb(207,3,43)"/><text x="815.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.22%)</title><rect x="812" y="244" width="2" height="15" fill="rgb(208,195,44)"/><text x="815.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.34%)</title><rect x="812" y="212" width="4" height="15" fill="rgb(209,83,27)"/><text x="815.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="814" y="228" width="2" height="15" fill="rgb(249,33,26)"/><text x="817.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="814" y="244" width="2" height="15" fill="rgb(239,58,45)"/><text x="817.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="814" y="260" width="2" height="15" fill="rgb(252,140,13)"/><text x="817.00" y="270.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.11%)</title><rect x="814" y="276" width="2" height="15" fill="rgb(238,79,35)"/><text x="817.00" y="286.50"></text></g><g><title>0x7f0ca9831f69 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="814" y="292" width="2" height="15" fill="rgb(248,169,41)"/><text x="817.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="816" y="212" width="1" height="15" fill="rgb(212,192,50)"/><text x="819.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="816" y="228" width="1" height="15" fill="rgb(221,102,22)"/><text x="819.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="816" y="244" width="1" height="15" fill="rgb(244,113,11)"/><text x="819.00" y="254.50"></text></g><g><title>array_clip (methods.c) (1 samples, 0.11%)</title><rect x="816" y="260" width="1" height="15" fill="rgb(223,123,9)"/><text x="819.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.11%)</title><rect x="816" y="276" width="1" height="15" fill="rgb(208,118,23)"/><text x="819.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="816" y="292" width="1" height="15" fill="rgb(252,39,48)"/><text x="819.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="816" y="308" width="1" height="15" fill="rgb(253,29,21)"/><text x="819.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="816" y="324" width="1" height="15" fill="rgb(213,96,53)"/><text x="819.00" y="334.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.11%)</title><rect x="821" y="292" width="1" height="15" fill="rgb(247,113,27)"/><text x="824.00" y="302.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.11%)</title><rect x="821" y="308" width="1" height="15" fill="rgb(221,34,18)"/><text x="824.00" y="318.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.22%)</title><rect x="821" y="276" width="3" height="15" fill="rgb(247,66,43)"/><text x="824.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.11%)</title><rect x="822" y="292" width="2" height="15" fill="rgb(252,46,7)"/><text x="825.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="822" y="308" width="2" height="15" fill="rgb(235,62,4)"/><text x="825.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (4 samples, 0.45%)</title><rect x="820" y="260" width="5" height="15" fill="rgb(238,148,24)"/><text x="823.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="824" y="276" width="1" height="15" fill="rgb(205,16,22)"/><text x="827.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="824" y="292" width="1" height="15" fill="rgb(224,216,40)"/><text x="827.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.11%)</title><rect x="824" y="308" width="1" height="15" fill="rgb(220,62,33)"/><text x="827.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.11%)</title><rect x="825" y="260" width="1" height="15" fill="rgb(247,195,17)"/><text x="828.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="826" y="260" width="2" height="15" fill="rgb(208,121,8)"/><text x="829.00" y="270.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="828" y="292" width="1" height="15" fill="rgb(254,220,20)"/><text x="831.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="829" y="292" width="1" height="15" fill="rgb(227,5,33)"/><text x="832.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="830" y="292" width="2" height="15" fill="rgb(230,60,2)"/><text x="833.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.45%)</title><rect x="828" y="260" width="5" height="15" fill="rgb(241,31,51)"/><text x="831.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (4 samples, 0.45%)</title><rect x="828" y="276" width="5" height="15" fill="rgb(206,137,13)"/><text x="831.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="832" y="292" width="1" height="15" fill="rgb(252,94,54)"/><text x="835.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="832" y="308" width="1" height="15" fill="rgb(225,209,1)"/><text x="835.00" y="318.50"></text></g><g><title>array_multiply (number.c) (13 samples, 1.46%)</title><rect x="817" y="212" width="17" height="15" fill="rgb(238,18,31)"/><text x="820.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 1.35%)</title><rect x="818" y="228" width="16" height="15" fill="rgb(241,175,9)"/><text x="821.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.24%)</title><rect x="820" y="244" width="14" height="15" fill="rgb(221,89,34)"/><text x="823.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="833" y="260" width="1" height="15" fill="rgb(213,69,26)"/><text x="836.00" y="270.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="834" y="260" width="1" height="15" fill="rgb(229,46,48)"/><text x="837.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="834" y="276" width="1" height="15" fill="rgb(246,8,48)"/><text x="837.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="834" y="292" width="1" height="15" fill="rgb(227,188,34)"/><text x="837.00" y="302.50"></text></g><g><title>_mm_sub_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="835" y="340" width="2" height="15" fill="rgb(248,112,39)"/><text x="838.00" y="350.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (2 samples, 0.22%)</title><rect x="835" y="292" width="3" height="15" fill="rgb(236,224,40)"/><text x="838.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (2 samples, 0.22%)</title><rect x="835" y="308" width="3" height="15" fill="rgb(233,166,18)"/><text x="838.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (2 samples, 0.22%)</title><rect x="835" y="324" width="3" height="15" fill="rgb(249,118,11)"/><text x="838.00" y="334.50"></text></g><g><title>npy_blocked_end (lowlevel_strided_loops.h) (1 samples, 0.11%)</title><rect x="837" y="340" width="1" height="15" fill="rgb(247,105,31)"/><text x="840.00" y="350.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.11%)</title><rect x="838" y="292" width="1" height="15" fill="rgb(219,67,44)"/><text x="841.00" y="302.50"></text></g><g><title>array_subtract (number.c) (13 samples, 1.46%)</title><rect x="834" y="212" width="17" height="15" fill="rgb(221,221,19)"/><text x="837.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 1.46%)</title><rect x="834" y="228" width="17" height="15" fill="rgb(245,223,39)"/><text x="837.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 1.46%)</title><rect x="834" y="244" width="17" height="15" fill="rgb(248,95,39)"/><text x="837.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (12 samples, 1.35%)</title><rect x="835" y="260" width="16" height="15" fill="rgb(217,99,39)"/><text x="838.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (12 samples, 1.35%)</title><rect x="835" y="276" width="16" height="15" fill="rgb(220,148,4)"/><text x="838.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (9 samples, 1.01%)</title><rect x="839" y="292" width="12" height="15" fill="rgb(213,122,24)"/><text x="842.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (9 samples, 1.01%)</title><rect x="839" y="308" width="12" height="15" fill="rgb(223,112,7)"/><text x="842.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (8 samples, 0.90%)</title><rect x="841" y="324" width="10" height="15" fill="rgb(227,24,53)"/><text x="844.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.34%)</title><rect x="847" y="340" width="4" height="15" fill="rgb(235,1,5)"/><text x="850.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="853" y="276" width="1" height="15" fill="rgb(240,162,7)"/><text x="856.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="853" y="292" width="1" height="15" fill="rgb(229,124,42)"/><text x="856.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="853" y="308" width="1" height="15" fill="rgb(234,211,18)"/><text x="856.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="857" y="324" width="1" height="15" fill="rgb(246,34,52)"/><text x="860.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="857" y="340" width="1" height="15" fill="rgb(205,39,16)"/><text x="860.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="857" y="356" width="1" height="15" fill="rgb(228,165,7)"/><text x="860.00" y="366.50"></text></g><g><title>0x7f0ca97e99e8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="857" y="372" width="1" height="15" fill="rgb(252,81,36)"/><text x="860.00" y="382.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.11%)</title><rect x="858" y="324" width="1" height="15" fill="rgb(211,52,32)"/><text x="861.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="858" y="340" width="1" height="15" fill="rgb(243,89,14)"/><text x="861.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="858" y="356" width="1" height="15" fill="rgb(249,160,21)"/><text x="861.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="858" y="372" width="1" height="15" fill="rgb(205,174,34)"/><text x="861.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src) (8 samples, 0.90%)</title><rect x="862" y="340" width="11" height="15" fill="rgb(234,120,53)"/><text x="865.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (3 samples, 0.34%)</title><rect x="869" y="356" width="4" height="15" fill="rgb(216,85,12)"/><text x="872.00" y="366.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (2 samples, 0.22%)</title><rect x="873" y="340" width="2" height="15" fill="rgb(210,46,13)"/><text x="876.00" y="350.50"></text></g><g><title>array_sum (methods.c) (20 samples, 2.25%)</title><rect x="851" y="212" width="27" height="15" fill="rgb(222,156,13)"/><text x="854.00" y="222.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (20 samples, 2.25%)</title><rect x="851" y="228" width="27" height="15" fill="rgb(244,215,6)"/><text x="854.00" y="238.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (19 samples, 2.13%)</title><rect x="853" y="244" width="25" height="15" fill="rgb(234,206,16)"/><text x="856.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (19 samples, 2.13%)</title><rect x="853" y="260" width="25" height="15" fill="rgb(240,155,46)"/><text x="856.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (18 samples, 2.02%)</title><rect x="854" y="276" width="24" height="15" fill="rgb(237,157,31)"/><text x="857.00" y="286.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (16 samples, 1.80%)</title><rect x="857" y="292" width="21" height="15" fill="rgb(211,73,25)"/><text x="860.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (16 samples, 1.80%)</title><rect x="857" y="308" width="21" height="15" fill="rgb(252,63,17)"/><text x="860.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (14 samples, 1.57%)</title><rect x="859" y="324" width="19" height="15" fill="rgb(246,217,15)"/><text x="862.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.22%)</title><rect x="875" y="340" width="3" height="15" fill="rgb(233,219,35)"/><text x="878.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.11%)</title><rect x="887" y="452" width="2" height="15" fill="rgb(207,95,6)"/><text x="890.00" y="462.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.11%)</title><rect x="887" y="468" width="2" height="15" fill="rgb(217,47,17)"/><text x="890.00" y="478.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.22%)</title><rect x="887" y="436" width="3" height="15" fill="rgb(231,51,13)"/><text x="890.00" y="446.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.11%)</title><rect x="889" y="452" width="1" height="15" fill="rgb(231,121,9)"/><text x="892.00" y="462.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.34%)</title><rect x="887" y="388" width="4" height="15" fill="rgb(244,159,40)"/><text x="890.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.34%)</title><rect x="887" y="404" width="4" height="15" fill="rgb(230,214,28)"/><text x="890.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (3 samples, 0.34%)</title><rect x="887" y="420" width="4" height="15" fill="rgb(219,90,31)"/><text x="890.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="890" y="436" width="1" height="15" fill="rgb(214,24,4)"/><text x="893.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 0.79%)</title><rect x="887" y="372" width="9" height="15" fill="rgb(248,118,24)"/><text x="890.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (4 samples, 0.45%)</title><rect x="891" y="388" width="5" height="15" fill="rgb(226,81,35)"/><text x="894.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (4 samples, 0.45%)</title><rect x="891" y="404" width="5" height="15" fill="rgb(215,219,10)"/><text x="894.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.01%)</title><rect x="886" y="356" width="12" height="15" fill="rgb(209,175,50)"/><text x="889.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="896" y="372" width="2" height="15" fill="rgb(246,26,3)"/><text x="899.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="896" y="388" width="2" height="15" fill="rgb(212,46,25)"/><text x="899.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="896" y="404" width="2" height="15" fill="rgb(206,225,21)"/><text x="899.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.11%)</title><rect x="896" y="420" width="2" height="15" fill="rgb(210,44,19)"/><text x="899.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.11%)</title><rect x="896" y="436" width="2" height="15" fill="rgb(217,37,22)"/><text x="899.00" y="446.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.11%)</title><rect x="896" y="452" width="2" height="15" fill="rgb(209,71,0)"/><text x="899.00" y="462.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.11%)</title><rect x="896" y="468" width="2" height="15" fill="rgb(234,7,40)"/><text x="899.00" y="478.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (10 samples, 1.12%)</title><rect x="886" y="324" width="13" height="15" fill="rgb(218,28,27)"/><text x="889.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.12%)</title><rect x="886" y="340" width="13" height="15" fill="rgb(237,224,28)"/><text x="889.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="898" y="356" width="1" height="15" fill="rgb(216,4,17)"/><text x="901.00" y="366.50"></text></g><g><title>0x7f0ca8a53e10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="898" y="372" width="1" height="15" fill="rgb(250,17,49)"/><text x="901.00" y="382.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="899" y="324" width="1" height="15" fill="rgb(237,4,3)"/><text x="902.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="906" y="340" width="1" height="15" fill="rgb(228,200,11)"/><text x="909.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="910" y="388" width="1" height="15" fill="rgb(250,198,2)"/><text x="913.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="910" y="404" width="1" height="15" fill="rgb(238,166,20)"/><text x="913.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="910" y="420" width="1" height="15" fill="rgb(249,207,49)"/><text x="913.00" y="430.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (7 samples, 0.79%)</title><rect x="907" y="340" width="9" height="15" fill="rgb(209,206,49)"/><text x="910.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 0.67%)</title><rect x="908" y="356" width="8" height="15" fill="rgb(231,43,40)"/><text x="911.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (5 samples, 0.56%)</title><rect x="910" y="372" width="6" height="15" fill="rgb(247,226,7)"/><text x="913.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.45%)</title><rect x="911" y="388" width="5" height="15" fill="rgb(220,149,2)"/><text x="914.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.34%)</title><rect x="912" y="404" width="4" height="15" fill="rgb(224,3,26)"/><text x="915.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.22%)</title><rect x="914" y="420" width="2" height="15" fill="rgb(235,138,42)"/><text x="917.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.22%)</title><rect x="914" y="436" width="2" height="15" fill="rgb(243,66,28)"/><text x="917.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.22%)</title><rect x="914" y="452" width="2" height="15" fill="rgb(244,66,2)"/><text x="917.00" y="462.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="918" y="356" width="1" height="15" fill="rgb(217,177,0)"/><text x="921.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="918" y="372" width="1" height="15" fill="rgb(226,180,0)"/><text x="921.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="918" y="388" width="1" height="15" fill="rgb(205,208,37)"/><text x="921.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="919" y="372" width="1" height="15" fill="rgb(254,5,20)"/><text x="922.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="919" y="388" width="1" height="15" fill="rgb(233,216,25)"/><text x="922.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="919" y="404" width="1" height="15" fill="rgb(206,8,24)"/><text x="922.00" y="414.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.34%)</title><rect x="920" y="372" width="4" height="15" fill="rgb(210,103,17)"/><text x="923.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.22%)</title><rect x="922" y="388" width="2" height="15" fill="rgb(240,207,34)"/><text x="925.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="923" y="404" width="1" height="15" fill="rgb(206,227,28)"/><text x="926.00" y="414.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="924" y="388" width="2" height="15" fill="rgb(241,51,36)"/><text x="927.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="924" y="404" width="2" height="15" fill="rgb(242,10,20)"/><text x="927.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 0.67%)</title><rect x="919" y="356" width="8" height="15" fill="rgb(224,37,1)"/><text x="922.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.22%)</title><rect x="924" y="372" width="3" height="15" fill="rgb(222,112,35)"/><text x="927.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="926" y="388" width="1" height="15" fill="rgb(241,191,35)"/><text x="929.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="926" y="404" width="1" height="15" fill="rgb(212,108,50)"/><text x="929.00" y="414.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (38 samples, 4.27%)</title><rect x="878" y="244" width="50" height="15" fill="rgb(227,82,32)"/><text x="881.00" y="254.50">clip ..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (38 samples, 4.27%)</title><rect x="878" y="260" width="50" height="15" fill="rgb(228,147,42)"/><text x="881.00" y="270.50">_wrap..</text></g><g><title>array_clip (methods.c) (38 samples, 4.27%)</title><rect x="878" y="276" width="50" height="15" fill="rgb(218,24,34)"/><text x="881.00" y="286.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (38 samples, 4.27%)</title><rect x="878" y="292" width="50" height="15" fill="rgb(253,223,29)"/><text x="881.00" y="302.50">forwa..</text></g><g><title>_clip (numpy/core/_methods.py) (38 samples, 4.27%)</title><rect x="878" y="308" width="50" height="15" fill="rgb(239,109,3)"/><text x="881.00" y="318.50">_clip..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (21 samples, 2.36%)</title><rect x="900" y="324" width="28" height="15" fill="rgb(225,176,16)"/><text x="903.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.01%)</title><rect x="916" y="340" width="12" height="15" fill="rgb(216,12,54)"/><text x="919.00" y="350.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.11%)</title><rect x="927" y="356" width="1" height="15" fill="rgb(208,203,37)"/><text x="930.00" y="366.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (40 samples, 4.49%)</title><rect x="878" y="212" width="53" height="15" fill="rgb(209,192,17)"/><text x="881.00" y="222.50">clip ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (40 samples, 4.49%)</title><rect x="878" y="228" width="53" height="15" fill="rgb(232,4,29)"/><text x="881.00" y="238.50">array..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.22%)</title><rect x="928" y="244" width="3" height="15" fill="rgb(206,170,35)"/><text x="931.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.22%)</title><rect x="928" y="260" width="3" height="15" fill="rgb(251,202,52)"/><text x="931.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.22%)</title><rect x="928" y="276" width="3" height="15" fill="rgb(235,37,13)"/><text x="931.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.22%)</title><rect x="928" y="292" width="3" height="15" fill="rgb(237,93,13)"/><text x="931.00" y="302.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.11%)</title><rect x="930" y="308" width="1" height="15" fill="rgb(224,228,51)"/><text x="933.00" y="318.50"></text></g><g><title>0x7f0c83274f12 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="944" y="244" width="2" height="15" fill="rgb(213,40,47)"/><text x="947.00" y="254.50"></text></g><g><title>0x7f0c83274f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="946" y="244" width="1" height="15" fill="rgb(234,12,3)"/><text x="949.00" y="254.50"></text></g><g><title>0x7f0c83264d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="946" y="260" width="1" height="15" fill="rgb(244,193,17)"/><text x="949.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.11%)</title><rect x="946" y="276" width="1" height="15" fill="rgb(253,36,47)"/><text x="949.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="946" y="292" width="1" height="15" fill="rgb(211,135,46)"/><text x="949.00" y="302.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.11%)</title><rect x="946" y="308" width="1" height="15" fill="rgb(213,161,41)"/><text x="949.00" y="318.50"></text></g><g><title>0x7f0c8325d10c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="947" y="324" width="1" height="15" fill="rgb(227,25,42)"/><text x="950.00" y="334.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="948" y="356" width="2" height="15" fill="rgb(245,99,54)"/><text x="951.00" y="366.50"></text></g><g><title>0x7f0c832832df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.67%)</title><rect x="947" y="276" width="8" height="15" fill="rgb(237,177,50)"/><text x="950.00" y="286.50"></text></g><g><title>0x7f0c83267d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.67%)</title><rect x="947" y="292" width="8" height="15" fill="rgb(219,12,14)"/><text x="950.00" y="302.50"></text></g><g><title>0x7f0c83267666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.67%)</title><rect x="947" y="308" width="8" height="15" fill="rgb(217,76,48)"/><text x="950.00" y="318.50"></text></g><g><title>0x7f0c8325d2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.56%)</title><rect x="948" y="324" width="7" height="15" fill="rgb(215,222,43)"/><text x="951.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (5 samples, 0.56%)</title><rect x="948" y="340" width="7" height="15" fill="rgb(253,78,18)"/><text x="951.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 0.45%)</title><rect x="950" y="356" width="5" height="15" fill="rgb(224,96,42)"/><text x="953.00" y="366.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.11%)</title><rect x="953" y="372" width="2" height="15" fill="rgb(208,159,6)"/><text x="956.00" y="382.50"></text></g><g><title>0x7f0ca9831bd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="953" y="388" width="2" height="15" fill="rgb(219,185,4)"/><text x="956.00" y="398.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.11%)</title><rect x="955" y="308" width="1" height="15" fill="rgb(212,145,2)"/><text x="958.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.11%)</title><rect x="955" y="324" width="1" height="15" fill="rgb(240,29,3)"/><text x="958.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="955" y="340" width="1" height="15" fill="rgb(253,198,39)"/><text x="958.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.11%)</title><rect x="955" y="356" width="1" height="15" fill="rgb(252,137,39)"/><text x="958.00" y="366.50"></text></g><g><title>0x7f0c83283592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="955" y="276" width="2" height="15" fill="rgb(231,153,3)"/><text x="958.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.22%)</title><rect x="955" y="292" width="2" height="15" fill="rgb(217,149,39)"/><text x="958.00" y="302.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.11%)</title><rect x="956" y="308" width="1" height="15" fill="rgb(217,89,50)"/><text x="959.00" y="318.50"></text></g><g><title>0x7f0c83283698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="957" y="276" width="2" height="15" fill="rgb(210,226,35)"/><text x="960.00" y="286.50"></text></g><g><title>0x7f0c832836ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="959" y="276" width="2" height="15" fill="rgb(234,215,53)"/><text x="962.00" y="286.50"></text></g><g><title>0x7f0c832836b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="961" y="276" width="2" height="15" fill="rgb(249,139,43)"/><text x="964.00" y="286.50"></text></g><g><title>0x7f0c832836d4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="963" y="276" width="1" height="15" fill="rgb(232,98,11)"/><text x="966.00" y="286.50"></text></g><g><title>0x7f0c832836d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="964" y="276" width="1" height="15" fill="rgb(248,53,5)"/><text x="967.00" y="286.50"></text></g><g><title>0x7f0c832836e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="965" y="276" width="3" height="15" fill="rgb(237,105,16)"/><text x="968.00" y="286.50"></text></g><g><title>0x7f0c832836e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="968" y="276" width="1" height="15" fill="rgb(223,0,54)"/><text x="971.00" y="286.50"></text></g><g><title>0x7f0c83284405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.02%)</title><rect x="947" y="260" width="24" height="15" fill="rgb(244,66,16)"/><text x="950.00" y="270.50">0..</text></g><g><title>0x7f0c83283c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="969" y="276" width="2" height="15" fill="rgb(207,182,4)"/><text x="972.00" y="286.50"></text></g><g><title>0x7f0c8325b529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="969" y="292" width="2" height="15" fill="rgb(239,118,4)"/><text x="972.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.11%)</title><rect x="969" y="308" width="2" height="15" fill="rgb(207,92,50)"/><text x="972.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.11%)</title><rect x="969" y="324" width="2" height="15" fill="rgb(209,59,10)"/><text x="972.00" y="334.50"></text></g><g><title>0x7f0c83274fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (19 samples, 2.13%)</title><rect x="947" y="244" width="25" height="15" fill="rgb(234,43,13)"/><text x="950.00" y="254.50">0..</text></g><g><title>0x7f0c83284540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="971" y="260" width="1" height="15" fill="rgb(252,133,12)"/><text x="974.00" y="270.50"></text></g><g><title>0x7f0c83259215 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="971" y="276" width="1" height="15" fill="rgb(222,196,2)"/><text x="974.00" y="286.50"></text></g><g><title>0x7f0c83274fd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="972" y="244" width="1" height="15" fill="rgb(233,142,29)"/><text x="975.00" y="254.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (2 samples, 0.22%)</title><rect x="975" y="276" width="2" height="15" fill="rgb(231,202,18)"/><text x="978.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (5 samples, 0.56%)</title><rect x="977" y="292" width="7" height="15" fill="rgb(215,158,12)"/><text x="980.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="984" y="324" width="1" height="15" fill="rgb(228,209,9)"/><text x="987.00" y="334.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="984" y="340" width="1" height="15" fill="rgb(221,201,39)"/><text x="987.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (7 samples, 0.79%)</title><rect x="977" y="276" width="10" height="15" fill="rgb(243,86,17)"/><text x="980.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.22%)</title><rect x="984" y="292" width="3" height="15" fill="rgb(230,82,49)"/><text x="987.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.22%)</title><rect x="984" y="308" width="3" height="15" fill="rgb(227,36,10)"/><text x="987.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="985" y="324" width="2" height="15" fill="rgb(208,131,31)"/><text x="988.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="985" y="340" width="2" height="15" fill="rgb(235,108,37)"/><text x="988.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="985" y="356" width="2" height="15" fill="rgb(240,15,47)"/><text x="988.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="985" y="372" width="2" height="15" fill="rgb(234,51,53)"/><text x="988.00" y="382.50"></text></g><g><title>0x7f0ca9832b12 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="985" y="388" width="2" height="15" fill="rgb(224,90,29)"/><text x="988.00" y="398.50"></text></g><g><title>0x7f0c8327505a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.35%)</title><rect x="973" y="244" width="16" height="15" fill="rgb(205,181,48)"/><text x="976.00" y="254.50"></text></g><g><title>array_take (methods.c) (12 samples, 1.35%)</title><rect x="973" y="260" width="16" height="15" fill="rgb(246,30,34)"/><text x="976.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.22%)</title><rect x="987" y="276" width="2" height="15" fill="rgb(219,198,44)"/><text x="990.00" y="286.50"></text></g><g><title>0x7f0c8327514f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="989" y="244" width="2" height="15" fill="rgb(234,142,10)"/><text x="992.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="989" y="260" width="2" height="15" fill="rgb(219,176,13)"/><text x="992.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="989" y="276" width="2" height="15" fill="rgb(247,119,6)"/><text x="992.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="989" y="292" width="2" height="15" fill="rgb(233,98,12)"/><text x="992.00" y="302.50"></text></g><g><title>0x7f0c83275d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (36 samples, 4.04%)</title><rect x="944" y="228" width="48" height="15" fill="rgb(249,223,16)"/><text x="947.00" y="238.50">0x7f..</text></g><g><title>0x7f0c832751bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="991" y="244" width="1" height="15" fill="rgb(239,115,40)"/><text x="994.00" y="254.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 0.45%)</title><rect x="1000" y="260" width="5" height="15" fill="rgb(237,222,54)"/><text x="1003.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="1009" y="276" width="3" height="15" fill="rgb(244,48,38)"/><text x="1012.00" y="286.50"></text></g><g><title>0x7f0ca9847e9d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1011" y="292" width="1" height="15" fill="rgb(219,191,47)"/><text x="1014.00" y="302.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 0.67%)</title><rect x="1005" y="260" width="8" height="15" fill="rgb(206,87,22)"/><text x="1008.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1012" y="276" width="1" height="15" fill="rgb(250,228,12)"/><text x="1015.00" y="286.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.22%)</title><rect x="1013" y="260" width="3" height="15" fill="rgb(224,45,54)"/><text x="1016.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.34%)</title><rect x="1016" y="260" width="4" height="15" fill="rgb(248,97,49)"/><text x="1019.00" y="270.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.11%)</title><rect x="1020" y="260" width="1" height="15" fill="rgb(207,190,9)"/><text x="1023.00" y="270.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.11%)</title><rect x="1021" y="260" width="1" height="15" fill="rgb(214,214,4)"/><text x="1024.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (29 samples, 3.26%)</title><rect x="992" y="228" width="38" height="15" fill="rgb(223,9,27)"/><text x="995.00" y="238.50">_va..</text></g><g><title>check_array (sklearn/utils/validation.py) (28 samples, 3.15%)</title><rect x="993" y="244" width="37" height="15" fill="rgb(254,30,47)"/><text x="996.00" y="254.50">che..</text></g><g><title>simplefilter (warnings.py) (6 samples, 0.67%)</title><rect x="1022" y="260" width="8" height="15" fill="rgb(237,78,6)"/><text x="1025.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (4 samples, 0.45%)</title><rect x="1025" y="276" width="5" height="15" fill="rgb(229,214,5)"/><text x="1028.00" y="286.50"></text></g><g><title>array_assign_subscript (mapping.c) (2 samples, 0.22%)</title><rect x="1030" y="228" width="3" height="15" fill="rgb(211,211,36)"/><text x="1033.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (2 samples, 0.22%)</title><rect x="1030" y="244" width="3" height="15" fill="rgb(212,52,46)"/><text x="1033.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c) (2 samples, 0.22%)</title><rect x="1030" y="260" width="3" height="15" fill="rgb(245,205,9)"/><text x="1033.00" y="270.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="1032" y="276" width="1" height="15" fill="rgb(218,132,0)"/><text x="1035.00" y="286.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1032" y="292" width="1" height="15" fill="rgb(249,223,31)"/><text x="1035.00" y="302.50"></text></g><g><title>0x7f0ca97e98d9 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1032" y="308" width="1" height="15" fill="rgb(245,91,54)"/><text x="1035.00" y="318.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1033" y="276" width="1" height="15" fill="rgb(242,13,50)"/><text x="1036.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1033" y="292" width="1" height="15" fill="rgb(242,37,32)"/><text x="1036.00" y="302.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1033" y="308" width="1" height="15" fill="rgb(217,132,0)"/><text x="1036.00" y="318.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1033" y="324" width="1" height="15" fill="rgb(208,42,43)"/><text x="1036.00" y="334.50"></text></g><g><title>DOUBLE_equal (loops.c.src) (1 samples, 0.11%)</title><rect x="1034" y="308" width="2" height="15" fill="rgb(239,91,53)"/><text x="1037.00" y="318.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1034" y="324" width="2" height="15" fill="rgb(238,12,24)"/><text x="1037.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1034" y="340" width="2" height="15" fill="rgb(218,161,24)"/><text x="1037.00" y="350.50"></text></g><g><title>_mm_cmpeq_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="1034" y="356" width="2" height="15" fill="rgb(205,127,7)"/><text x="1037.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.22%)</title><rect x="1034" y="276" width="3" height="15" fill="rgb(235,108,15)"/><text x="1037.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.22%)</title><rect x="1034" y="292" width="3" height="15" fill="rgb(226,62,31)"/><text x="1037.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="1036" y="308" width="1" height="15" fill="rgb(246,213,35)"/><text x="1039.00" y="318.50"></text></g><g><title>array_richcompare (arrayobject.c) (5 samples, 0.56%)</title><rect x="1033" y="228" width="7" height="15" fill="rgb(211,146,0)"/><text x="1036.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.56%)</title><rect x="1033" y="244" width="7" height="15" fill="rgb(233,4,22)"/><text x="1036.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.56%)</title><rect x="1033" y="260" width="7" height="15" fill="rgb(238,108,2)"/><text x="1036.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.22%)</title><rect x="1037" y="276" width="3" height="15" fill="rgb(233,105,6)"/><text x="1040.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="1038" y="292" width="2" height="15" fill="rgb(251,117,23)"/><text x="1041.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="1038" y="308" width="2" height="15" fill="rgb(223,33,54)"/><text x="1041.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="1038" y="324" width="2" height="15" fill="rgb(252,177,2)"/><text x="1041.00" y="334.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.11%)</title><rect x="1040" y="244" width="1" height="15" fill="rgb(235,127,5)"/><text x="1043.00" y="254.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.34%)</title><rect x="1040" y="228" width="4" height="15" fill="rgb(229,71,0)"/><text x="1043.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (2 samples, 0.22%)</title><rect x="1041" y="244" width="3" height="15" fill="rgb(214,59,16)"/><text x="1044.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.22%)</title><rect x="1045" y="292" width="3" height="15" fill="rgb(226,99,1)"/><text x="1048.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.22%)</title><rect x="1045" y="308" width="3" height="15" fill="rgb(241,145,49)"/><text x="1048.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.22%)</title><rect x="1045" y="324" width="3" height="15" fill="rgb(238,77,3)"/><text x="1048.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="1046" y="340" width="2" height="15" fill="rgb(253,184,43)"/><text x="1049.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="1046" y="356" width="2" height="15" fill="rgb(212,222,26)"/><text x="1049.00" y="366.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.11%)</title><rect x="1046" y="372" width="2" height="15" fill="rgb(247,107,5)"/><text x="1049.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1049" y="340" width="1" height="15" fill="rgb(212,178,25)"/><text x="1052.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1049" y="356" width="1" height="15" fill="rgb(252,74,2)"/><text x="1052.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="1050" y="340" width="2" height="15" fill="rgb(220,228,32)"/><text x="1053.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="1050" y="356" width="2" height="15" fill="rgb(249,40,6)"/><text x="1053.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="1050" y="372" width="2" height="15" fill="rgb(206,6,10)"/><text x="1053.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="1050" y="388" width="2" height="15" fill="rgb(222,219,19)"/><text x="1053.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1050" y="404" width="2" height="15" fill="rgb(217,147,4)"/><text x="1053.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1050" y="420" width="2" height="15" fill="rgb(215,69,33)"/><text x="1053.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="1050" y="436" width="2" height="15" fill="rgb(242,122,53)"/><text x="1053.00" y="446.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.11%)</title><rect x="1052" y="340" width="1" height="15" fill="rgb(235,52,50)"/><text x="1055.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (9 samples, 1.01%)</title><rect x="1058" y="356" width="12" height="15" fill="rgb(214,37,35)"/><text x="1061.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (3 samples, 0.34%)</title><rect x="1066" y="372" width="4" height="15" fill="rgb(222,174,44)"/><text x="1069.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (19 samples, 2.13%)</title><rect x="1049" y="324" width="25" height="15" fill="rgb(244,153,34)"/><text x="1052.00" y="334.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (16 samples, 1.80%)</title><rect x="1053" y="340" width="21" height="15" fill="rgb(246,174,53)"/><text x="1056.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.34%)</title><rect x="1070" y="356" width="4" height="15" fill="rgb(254,171,13)"/><text x="1073.00" y="366.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.11%)</title><rect x="1074" y="324" width="1" height="15" fill="rgb(230,195,32)"/><text x="1077.00" y="334.50"></text></g><g><title>array_sum (methods.c) (25 samples, 2.81%)</title><rect x="1044" y="228" width="33" height="15" fill="rgb(217,120,27)"/><text x="1047.00" y="238.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (25 samples, 2.81%)</title><rect x="1044" y="244" width="33" height="15" fill="rgb(210,74,31)"/><text x="1047.00" y="254.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (24 samples, 2.70%)</title><rect x="1045" y="260" width="32" height="15" fill="rgb(217,198,9)"/><text x="1048.00" y="270.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (24 samples, 2.70%)</title><rect x="1045" y="276" width="32" height="15" fill="rgb(237,58,15)"/><text x="1048.00" y="286.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (22 samples, 2.47%)</title><rect x="1048" y="292" width="29" height="15" fill="rgb(214,85,12)"/><text x="1051.00" y="302.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (21 samples, 2.36%)</title><rect x="1049" y="308" width="28" height="15" fill="rgb(229,184,40)"/><text x="1052.00" y="318.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1075" y="324" width="2" height="15" fill="rgb(244,45,47)"/><text x="1078.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1075" y="340" width="2" height="15" fill="rgb(246,34,6)"/><text x="1078.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1075" y="356" width="2" height="15" fill="rgb(245,57,20)"/><text x="1078.00" y="366.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1075" y="372" width="2" height="15" fill="rgb(254,191,8)"/><text x="1078.00" y="382.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1075" y="388" width="2" height="15" fill="rgb(212,76,44)"/><text x="1078.00" y="398.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.11%)</title><rect x="1082" y="260" width="1" height="15" fill="rgb(224,145,53)"/><text x="1085.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 0.67%)</title><rect x="1077" y="228" width="8" height="15" fill="rgb(213,154,47)"/><text x="1080.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (4 samples, 0.45%)</title><rect x="1079" y="244" width="6" height="15" fill="rgb(225,102,30)"/><text x="1082.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="1083" y="260" width="2" height="15" fill="rgb(218,174,7)"/><text x="1086.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.22%)</title><rect x="1086" y="260" width="3" height="15" fill="rgb(217,55,5)"/><text x="1089.00" y="270.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="1087" y="276" width="2" height="15" fill="rgb(212,198,33)"/><text x="1090.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (11 samples, 1.24%)</title><rect x="1089" y="292" width="14" height="15" fill="rgb(238,189,48)"/><text x="1092.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (11 samples, 1.24%)</title><rect x="1089" y="308" width="14" height="15" fill="rgb(230,158,45)"/><text x="1092.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (11 samples, 1.24%)</title><rect x="1089" y="324" width="14" height="15" fill="rgb(220,53,52)"/><text x="1092.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (11 samples, 1.24%)</title><rect x="1089" y="340" width="14" height="15" fill="rgb(214,152,42)"/><text x="1092.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.11%)</title><rect x="1103" y="324" width="2" height="15" fill="rgb(235,4,33)"/><text x="1106.00" y="334.50"></text></g><g><title>npy_uint_alignment (array_assign.c) (1 samples, 0.11%)</title><rect x="1103" y="340" width="2" height="15" fill="rgb(238,121,48)"/><text x="1106.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.22%)</title><rect x="1103" y="292" width="3" height="15" fill="rgb(220,102,31)"/><text x="1106.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.22%)</title><rect x="1103" y="308" width="3" height="15" fill="rgb(252,75,44)"/><text x="1106.00" y="318.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="1105" y="324" width="1" height="15" fill="rgb(247,81,15)"/><text x="1108.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.22%)</title><rect x="1106" y="292" width="3" height="15" fill="rgb(212,166,34)"/><text x="1109.00" y="302.50"></text></g><g><title>0x7f0ca9831f71 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1107" y="308" width="2" height="15" fill="rgb(226,180,27)"/><text x="1110.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (20 samples, 2.25%)</title><rect x="1089" y="260" width="26" height="15" fill="rgb(220,118,38)"/><text x="1092.00" y="270.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (20 samples, 2.25%)</title><rect x="1089" y="276" width="26" height="15" fill="rgb(248,168,43)"/><text x="1092.00" y="286.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 0.56%)</title><rect x="1109" y="292" width="6" height="15" fill="rgb(209,198,34)"/><text x="1112.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.56%)</title><rect x="1109" y="308" width="6" height="15" fill="rgb(244,102,29)"/><text x="1112.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.56%)</title><rect x="1109" y="324" width="6" height="15" fill="rgb(237,130,51)"/><text x="1112.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.34%)</title><rect x="1111" y="340" width="4" height="15" fill="rgb(213,177,50)"/><text x="1114.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (140 samples, 15.73%)</title><rect x="931" y="212" width="186" height="15" fill="rgb(206,192,30)"/><text x="934.00" y="222.50">predict_proba (sklearn/t..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (24 samples, 2.70%)</title><rect x="1085" y="228" width="32" height="15" fill="rgb(206,170,39)"/><text x="1088.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (24 samples, 2.70%)</title><rect x="1085" y="244" width="32" height="15" fill="rgb(232,5,2)"/><text x="1088.00" y="254.50">Py..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1115" y="260" width="2" height="15" fill="rgb(226,148,18)"/><text x="1118.00" y="270.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1115" y="276" width="2" height="15" fill="rgb(251,49,25)"/><text x="1118.00" y="286.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1115" y="292" width="2" height="15" fill="rgb(220,160,0)"/><text x="1118.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="1117" y="228" width="1" height="15" fill="rgb(233,38,35)"/><text x="1120.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="1117" y="244" width="1" height="15" fill="rgb(216,18,54)"/><text x="1120.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="1119" y="260" width="2" height="15" fill="rgb(250,206,19)"/><text x="1122.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="1119" y="276" width="2" height="15" fill="rgb(211,146,13)"/><text x="1122.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1119" y="292" width="2" height="15" fill="rgb(220,29,47)"/><text x="1122.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1119" y="308" width="2" height="15" fill="rgb(243,214,2)"/><text x="1122.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="1119" y="324" width="2" height="15" fill="rgb(228,85,13)"/><text x="1122.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1119" y="340" width="2" height="15" fill="rgb(213,10,20)"/><text x="1122.00" y="350.50"></text></g><g><title>0x7f0ca98331b6 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1119" y="356" width="2" height="15" fill="rgb(216,55,12)"/><text x="1122.00" y="366.50"></text></g><g><title>0x7f0ca8a550c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1126" y="292" width="1" height="15" fill="rgb(210,66,8)"/><text x="1129.00" y="302.50"></text></g><g><title>0x7f0ca9a03dd0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1127" y="292" width="2" height="15" fill="rgb(252,21,6)"/><text x="1130.00" y="302.50"></text></g><g><title>0x7f0ca9a03dee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1129" y="292" width="1" height="15" fill="rgb(254,119,11)"/><text x="1132.00" y="302.50"></text></g><g><title>0x7f0ca9a03e01 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1130" y="292" width="2" height="15" fill="rgb(214,123,10)"/><text x="1133.00" y="302.50"></text></g><g><title>0x7f0ca9a03e4d (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1132" y="292" width="3" height="15" fill="rgb(250,4,44)"/><text x="1135.00" y="302.50"></text></g><g><title>0x7f0ca9a03e61 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1135" y="292" width="1" height="15" fill="rgb(218,112,37)"/><text x="1138.00" y="302.50"></text></g><g><title>0x7f0ca9a03e7e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1136" y="292" width="2" height="15" fill="rgb(224,3,39)"/><text x="1139.00" y="302.50"></text></g><g><title>0x7f0ca9a03e8d (libm-2.29.so) (4 samples, 0.45%)</title><rect x="1138" y="292" width="5" height="15" fill="rgb(206,153,3)"/><text x="1141.00" y="302.50"></text></g><g><title>0x7f0ca9a03ea2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1143" y="292" width="1" height="15" fill="rgb(212,200,16)"/><text x="1146.00" y="302.50"></text></g><g><title>0x7f0ca9a03ec6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1144" y="292" width="2" height="15" fill="rgb(247,19,10)"/><text x="1147.00" y="302.50"></text></g><g><title>0x7f0ca9a03eca (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1146" y="292" width="2" height="15" fill="rgb(230,67,38)"/><text x="1149.00" y="302.50"></text></g><g><title>0x7f0ca9a03ed2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1148" y="292" width="2" height="15" fill="rgb(236,187,54)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7f0ca9a03eda (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1150" y="292" width="1" height="15" fill="rgb(237,148,24)"/><text x="1153.00" y="302.50"></text></g><g><title>0x7f0ca9a03eee (libm-2.29.so) (4 samples, 0.45%)</title><rect x="1151" y="292" width="5" height="15" fill="rgb(208,177,34)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7f0ca9a03ef6 (libm-2.29.so) (4 samples, 0.45%)</title><rect x="1156" y="292" width="6" height="15" fill="rgb(214,125,54)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7f0ca9a03efa (libm-2.29.so) (5 samples, 0.56%)</title><rect x="1162" y="292" width="6" height="15" fill="rgb(206,33,9)"/><text x="1165.00" y="302.50"></text></g><g><title>0x7f0ca9a03f0a (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1168" y="292" width="2" height="15" fill="rgb(231,25,0)"/><text x="1171.00" y="302.50"></text></g><g><title>0x7f0ca9a04013 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1170" y="292" width="1" height="15" fill="rgb(223,125,45)"/><text x="1173.00" y="302.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1171" y="292" width="1" height="15" fill="rgb(228,116,42)"/><text x="1174.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (288 samples, 32.36%)</title><rect x="794" y="196" width="382" height="15" fill="rgb(233,145,8)"/><text x="797.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (45 samples, 5.06%)</title><rect x="1117" y="212" width="59" height="15" fill="rgb(251,41,10)"/><text x="1120.00" y="222.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (44 samples, 4.94%)</title><rect x="1118" y="228" width="58" height="15" fill="rgb(223,227,44)"/><text x="1121.00" y="238.50">PyUFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (43 samples, 4.83%)</title><rect x="1119" y="244" width="57" height="15" fill="rgb(249,120,28)"/><text x="1122.00" y="254.50">execut..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (42 samples, 4.72%)</title><rect x="1121" y="260" width="55" height="15" fill="rgb(246,143,25)"/><text x="1124.00" y="270.50">trivi..</text></g><g><title>PyUFunc_d_d (loops.c.src) (42 samples, 4.72%)</title><rect x="1121" y="276" width="55" height="15" fill="rgb(225,69,8)"/><text x="1124.00" y="286.50">PyUFu..</text></g><g><title>npy_log (npy_math_internal.h.src) (3 samples, 0.34%)</title><rect x="1172" y="292" width="4" height="15" fill="rgb(219,151,15)"/><text x="1175.00" y="302.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (290 samples, 32.58%)</title><rect x="793" y="180" width="385" height="15" fill="rgb(213,146,41)"/><text x="796.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1176" y="196" width="2" height="15" fill="rgb(214,51,50)"/><text x="1179.00" y="206.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="1178" y="180" width="1" height="15" fill="rgb(213,210,40)"/><text x="1181.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1178" y="196" width="1" height="15" fill="rgb(227,41,38)"/><text x="1181.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1178" y="212" width="1" height="15" fill="rgb(228,155,13)"/><text x="1181.00" y="222.50"></text></g><g><title>0x7f0ca9852124 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1179" y="196" width="1" height="15" fill="rgb(247,149,54)"/><text x="1182.00" y="206.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="1180" y="244" width="2" height="15" fill="rgb(250,130,32)"/><text x="1183.00" y="254.50"></text></g><g><title>array_add (number.c) (4 samples, 0.45%)</title><rect x="1179" y="180" width="5" height="15" fill="rgb(247,53,2)"/><text x="1182.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.34%)</title><rect x="1180" y="196" width="4" height="15" fill="rgb(218,24,39)"/><text x="1183.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.34%)</title><rect x="1180" y="212" width="4" height="15" fill="rgb(238,204,44)"/><text x="1183.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.34%)</title><rect x="1180" y="228" width="4" height="15" fill="rgb(214,36,21)"/><text x="1183.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.22%)</title><rect x="1182" y="244" width="2" height="15" fill="rgb(238,181,47)"/><text x="1185.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.22%)</title><rect x="1182" y="260" width="2" height="15" fill="rgb(239,215,40)"/><text x="1185.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (2 samples, 0.22%)</title><rect x="1182" y="276" width="2" height="15" fill="rgb(208,116,22)"/><text x="1185.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (2 samples, 0.22%)</title><rect x="1182" y="292" width="2" height="15" fill="rgb(214,59,6)"/><text x="1185.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.22%)</title><rect x="1182" y="308" width="2" height="15" fill="rgb(215,120,39)"/><text x="1185.00" y="318.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (299 samples, 33.60%)</title><rect x="789" y="68" width="397" height="15" fill="rgb(209,117,18)"/><text x="792.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_100..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (299 samples, 33.60%)</title><rect x="789" y="84" width="397" height="15" fill="rgb(222,90,35)"/><text x="792.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (299 samples, 33.60%)</title><rect x="789" y="100" width="397" height="15" fill="rgb(219,23,41)"/><text x="792.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1000_50..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (299 samples, 33.60%)</title><rect x="789" y="116" width="397" height="15" fill="rgb(239,120,30)"/><text x="792.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (299 samples, 33.60%)</title><rect x="789" y="132" width="397" height="15" fill="rgb(227,185,10)"/><text x="792.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (299 samples, 33.60%)</title><rect x="789" y="148" width="397" height="15" fill="rgb(254,115,52)"/><text x="792.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (296 samples, 33.26%)</title><rect x="793" y="164" width="393" height="15" fill="rgb(249,72,26)"/><text x="796.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting...</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1184" y="180" width="2" height="15" fill="rgb(252,101,42)"/><text x="1187.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1184" y="196" width="2" height="15" fill="rgb(216,76,30)"/><text x="1187.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1184" y="212" width="2" height="15" fill="rgb(222,176,41)"/><text x="1187.00" y="222.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1184" y="228" width="2" height="15" fill="rgb(249,146,44)"/><text x="1187.00" y="238.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1184" y="244" width="2" height="15" fill="rgb(229,123,32)"/><text x="1187.00" y="254.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="1184" y="260" width="2" height="15" fill="rgb(248,66,29)"/><text x="1187.00" y="270.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.11%)</title><rect x="1186" y="180" width="1" height="15" fill="rgb(205,7,51)"/><text x="1189.00" y="190.50"></text></g><g><title>clone (sklearn/base.py) (1 samples, 0.11%)</title><rect x="1186" y="196" width="1" height="15" fill="rgb(210,175,16)"/><text x="1189.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.11%)</title><rect x="1186" y="212" width="1" height="15" fill="rgb(210,65,11)"/><text x="1189.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.11%)</title><rect x="1186" y="228" width="1" height="15" fill="rgb(236,101,33)"/><text x="1189.00" y="238.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.11%)</title><rect x="1186" y="244" width="1" height="15" fill="rgb(215,185,17)"/><text x="1189.00" y="254.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="1186" y="260" width="1" height="15" fill="rgb(212,158,11)"/><text x="1189.00" y="270.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="1186" y="276" width="1" height="15" fill="rgb(252,130,35)"/><text x="1189.00" y="286.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.11%)</title><rect x="1186" y="292" width="1" height="15" fill="rgb(224,107,27)"/><text x="1189.00" y="302.50"></text></g><g><title>0x7f0c83269b11 (?) (1 samples, 0.11%)</title><rect x="1187" y="212" width="1" height="15" fill="rgb(215,98,52)"/><text x="1190.00" y="222.50"></text></g><g><title>0x7f0c8329b10a (?) (1 samples, 0.11%)</title><rect x="1187" y="228" width="1" height="15" fill="rgb(224,52,10)"/><text x="1190.00" y="238.50"></text></g><g><title>0x7f0c834c6e2e (?) (1 samples, 0.11%)</title><rect x="1187" y="244" width="1" height="15" fill="rgb(229,197,37)"/><text x="1190.00" y="254.50"></text></g><g><title>0x7f0c83702f33 (?) (1 samples, 0.11%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(218,30,34)"/><text x="1190.00" y="270.50"></text></g><g><title>all (890 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(239,155,24)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (890 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(241,105,50)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (3 samples, 0.34%)</title><rect x="1186" y="68" width="4" height="15" fill="rgb(249,102,1)"/><text x="1189.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py) (3 samples, 0.34%)</title><rect x="1186" y="84" width="4" height="15" fill="rgb(254,198,54)"/><text x="1189.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.34%)</title><rect x="1186" y="100" width="4" height="15" fill="rgb(236,179,35)"/><text x="1189.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.34%)</title><rect x="1186" y="116" width="4" height="15" fill="rgb(249,53,22)"/><text x="1189.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.34%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(227,39,17)"/><text x="1189.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.34%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(217,104,36)"/><text x="1189.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.34%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(250,17,41)"/><text x="1189.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (2 samples, 0.22%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(251,112,8)"/><text x="1190.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (2 samples, 0.22%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(252,13,29)"/><text x="1190.00" y="206.50"></text></g><g><title>0x7f0c83269b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(220,63,43)"/><text x="1191.00" y="222.50"></text></g><g><title>0x7f0c8329b10a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(235,38,51)"/><text x="1191.00" y="238.50"></text></g><g><title>0x7f0c834c6e2e (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(248,145,8)"/><text x="1191.00" y="254.50"></text></g><g><title>0x7f0c83702e90 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(226,186,35)"/><text x="1191.00" y="270.50"></text></g></g></svg>