<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2198" onload="init(evt)" viewBox="0 0 1200 2198" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2198" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2181.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2181.00"> </text><g id="frames"><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(219,125,24)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(235,158,12)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(217,5,1)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="10" y="1028" width="1" height="15" fill="rgb(216,152,41)"/><text x="13.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.11%)</title><rect x="10" y="1044" width="1" height="15" fill="rgb(238,166,50)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(216,109,31)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(238,152,24)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(232,104,49)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(234,30,37)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(248,92,53)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(222,51,25)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(232,225,46)"/><text x="13.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(246,55,21)"/><text x="14.00" y="990.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="868" width="1" height="15" fill="rgb(207,217,49)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="884" width="1" height="15" fill="rgb(230,39,35)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="900" width="1" height="15" fill="rgb(229,21,21)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="916" width="1" height="15" fill="rgb(249,95,24)"/><text x="15.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="932" width="1" height="15" fill="rgb(222,187,4)"/><text x="15.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="948" width="1" height="15" fill="rgb(232,212,48)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="964" width="1" height="15" fill="rgb(234,189,28)"/><text x="15.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="12" y="980" width="1" height="15" fill="rgb(248,188,29)"/><text x="15.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="12" y="996" width="1" height="15" fill="rgb(222,170,14)"/><text x="15.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="12" y="1012" width="1" height="15" fill="rgb(238,42,40)"/><text x="15.00" y="1022.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.42%)</title><rect x="10" y="836" width="4" height="15" fill="rgb(208,114,27)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.42%)</title><rect x="10" y="852" width="4" height="15" fill="rgb(228,189,20)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="13" y="868" width="1" height="15" fill="rgb(226,165,48)"/><text x="16.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="13" y="884" width="1" height="15" fill="rgb(239,134,43)"/><text x="16.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="13" y="900" width="1" height="15" fill="rgb(215,156,45)"/><text x="16.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="13" y="916" width="1" height="15" fill="rgb(228,64,13)"/><text x="16.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="13" y="932" width="1" height="15" fill="rgb(222,130,8)"/><text x="16.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="13" y="948" width="1" height="15" fill="rgb(226,119,2)"/><text x="16.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.11%)</title><rect x="13" y="964" width="1" height="15" fill="rgb(239,215,38)"/><text x="16.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="13" y="980" width="1" height="15" fill="rgb(222,199,9)"/><text x="16.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 0.53%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(210,87,39)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(233,126,17)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(248,142,8)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(230,6,25)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.53%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(210,153,16)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(230,19,2)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 0.53%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(226,132,53)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(249,202,35)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(227,133,28)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(205,7,54)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.53%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(235,3,28)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(213,147,27)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 0.53%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(254,53,51)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(215,103,18)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(223,34,0)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(239,82,26)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.53%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(230,92,9)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(224,64,39)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 0.53%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(222,108,15)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(247,19,47)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(214,135,43)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(237,79,26)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(207,65,7)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(225,137,50)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(224,63,2)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.53%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(236,105,53)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(216,45,43)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 0.53%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(215,227,39)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(247,191,15)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(226,196,40)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(209,186,31)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.53%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(251,111,20)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.53%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(213,89,13)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 0.53%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(248,108,2)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="836" width="2" height="15" fill="rgb(220,103,3)"/><text x="17.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="852" width="2" height="15" fill="rgb(233,138,14)"/><text x="17.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="868" width="2" height="15" fill="rgb(208,58,28)"/><text x="17.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="14" y="884" width="2" height="15" fill="rgb(215,207,49)"/><text x="17.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="900" width="2" height="15" fill="rgb(210,27,32)"/><text x="17.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.11%)</title><rect x="14" y="916" width="2" height="15" fill="rgb(254,104,26)"/><text x="17.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(250,138,19)"/><text x="17.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.11%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(213,228,42)"/><text x="17.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(224,36,46)"/><text x="17.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(235,117,1)"/><text x="17.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="14" y="996" width="2" height="15" fill="rgb(231,92,5)"/><text x="17.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="14" y="1012" width="2" height="15" fill="rgb(229,206,29)"/><text x="17.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="14" y="1028" width="2" height="15" fill="rgb(239,199,53)"/><text x="17.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="14" y="1044" width="2" height="15" fill="rgb(252,23,25)"/><text x="17.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="14" y="1060" width="2" height="15" fill="rgb(208,84,10)"/><text x="17.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="14" y="1076" width="2" height="15" fill="rgb(234,74,38)"/><text x="17.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="14" y="1092" width="2" height="15" fill="rgb(247,156,28)"/><text x="17.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="14" y="1108" width="2" height="15" fill="rgb(230,22,26)"/><text x="17.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="14" y="1124" width="2" height="15" fill="rgb(224,198,5)"/><text x="17.00" y="1134.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="14" y="1140" width="2" height="15" fill="rgb(222,193,5)"/><text x="17.00" y="1150.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="14" y="1156" width="2" height="15" fill="rgb(216,69,5)"/><text x="17.00" y="1166.50"></text></g><g><title>_class_escape (sre_parse.py) (1 samples, 0.11%)</title><rect x="14" y="1172" width="2" height="15" fill="rgb(230,34,14)"/><text x="17.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.63%)</title><rect x="10" y="196" width="7" height="15" fill="rgb(215,106,8)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.63%)</title><rect x="10" y="212" width="7" height="15" fill="rgb(205,142,35)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.63%)</title><rect x="10" y="228" width="7" height="15" fill="rgb(217,220,9)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.63%)</title><rect x="10" y="244" width="7" height="15" fill="rgb(229,1,41)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.63%)</title><rect x="10" y="260" width="7" height="15" fill="rgb(238,3,40)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.63%)</title><rect x="10" y="276" width="7" height="15" fill="rgb(225,52,15)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.11%)</title><rect x="16" y="292" width="1" height="15" fill="rgb(236,28,13)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="308" width="1" height="15" fill="rgb(221,63,31)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="324" width="1" height="15" fill="rgb(238,208,43)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="340" width="1" height="15" fill="rgb(240,24,7)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="356" width="1" height="15" fill="rgb(220,192,46)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="372" width="1" height="15" fill="rgb(209,154,20)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.11%)</title><rect x="16" y="388" width="1" height="15" fill="rgb(233,143,32)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="404" width="1" height="15" fill="rgb(217,101,2)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="420" width="1" height="15" fill="rgb(239,90,7)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="436" width="1" height="15" fill="rgb(239,27,53)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="452" width="1" height="15" fill="rgb(220,33,23)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="468" width="1" height="15" fill="rgb(236,81,40)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.11%)</title><rect x="16" y="484" width="1" height="15" fill="rgb(227,208,14)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="500" width="1" height="15" fill="rgb(247,226,14)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="516" width="1" height="15" fill="rgb(236,109,37)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="532" width="1" height="15" fill="rgb(216,168,1)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="548" width="1" height="15" fill="rgb(246,213,18)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="564" width="1" height="15" fill="rgb(219,80,10)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.11%)</title><rect x="16" y="580" width="1" height="15" fill="rgb(207,24,46)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="596" width="1" height="15" fill="rgb(245,63,3)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="612" width="1" height="15" fill="rgb(213,10,14)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="628" width="1" height="15" fill="rgb(243,30,31)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="644" width="1" height="15" fill="rgb(252,55,14)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="660" width="1" height="15" fill="rgb(233,4,54)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.11%)</title><rect x="16" y="676" width="1" height="15" fill="rgb(242,32,23)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="692" width="1" height="15" fill="rgb(218,182,54)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="708" width="1" height="15" fill="rgb(232,99,23)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="724" width="1" height="15" fill="rgb(217,41,35)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="740" width="1" height="15" fill="rgb(238,199,23)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="756" width="1" height="15" fill="rgb(226,35,30)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.11%)</title><rect x="16" y="772" width="1" height="15" fill="rgb(214,139,47)"/><text x="19.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="788" width="1" height="15" fill="rgb(251,172,32)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="804" width="1" height="15" fill="rgb(224,187,16)"/><text x="19.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="820" width="1" height="15" fill="rgb(221,7,4)"/><text x="19.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="836" width="1" height="15" fill="rgb(206,41,37)"/><text x="19.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="852" width="1" height="15" fill="rgb(207,29,46)"/><text x="19.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="868" width="1" height="15" fill="rgb(238,94,42)"/><text x="19.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="884" width="1" height="15" fill="rgb(234,44,10)"/><text x="19.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.11%)</title><rect x="16" y="900" width="1" height="15" fill="rgb(235,91,43)"/><text x="19.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="916" width="1" height="15" fill="rgb(246,138,51)"/><text x="19.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="932" width="1" height="15" fill="rgb(240,63,14)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="948" width="1" height="15" fill="rgb(246,69,1)"/><text x="19.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="964" width="1" height="15" fill="rgb(211,139,27)"/><text x="19.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="980" width="1" height="15" fill="rgb(223,164,5)"/><text x="19.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="996" width="1" height="15" fill="rgb(221,63,43)"/><text x="19.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1012" width="1" height="15" fill="rgb(206,108,29)"/><text x="19.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.11%)</title><rect x="16" y="1028" width="1" height="15" fill="rgb(216,171,53)"/><text x="19.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.11%)</title><rect x="16" y="1044" width="1" height="15" fill="rgb(207,33,21)"/><text x="19.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.11%)</title><rect x="16" y="1060" width="1" height="15" fill="rgb(251,17,52)"/><text x="19.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.11%)</title><rect x="16" y="1076" width="1" height="15" fill="rgb(206,109,43)"/><text x="19.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.11%)</title><rect x="16" y="1092" width="1" height="15" fill="rgb(242,145,19)"/><text x="19.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1124" width="1" height="15" fill="rgb(210,165,34)"/><text x="20.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1140" width="1" height="15" fill="rgb(221,125,10)"/><text x="20.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1156" width="1" height="15" fill="rgb(247,158,36)"/><text x="20.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="1172" width="1" height="15" fill="rgb(220,46,53)"/><text x="20.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1188" width="1" height="15" fill="rgb(217,23,41)"/><text x="20.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="17" y="1204" width="1" height="15" fill="rgb(221,158,3)"/><text x="20.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1220" width="1" height="15" fill="rgb(230,146,21)"/><text x="20.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1236" width="1" height="15" fill="rgb(206,166,47)"/><text x="20.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1252" width="1" height="15" fill="rgb(221,163,17)"/><text x="20.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="1268" width="1" height="15" fill="rgb(236,125,10)"/><text x="20.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1284" width="1" height="15" fill="rgb(242,226,2)"/><text x="20.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="17" y="1300" width="1" height="15" fill="rgb(238,187,0)"/><text x="20.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="17" y="1316" width="1" height="15" fill="rgb(249,105,32)"/><text x="20.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.11%)</title><rect x="17" y="1332" width="1" height="15" fill="rgb(214,52,31)"/><text x="20.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.11%)</title><rect x="17" y="1348" width="1" height="15" fill="rgb(219,97,20)"/><text x="20.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.11%)</title><rect x="17" y="1364" width="1" height="15" fill="rgb(254,58,7)"/><text x="20.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="484" width="2" height="15" fill="rgb(237,145,5)"/><text x="20.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="500" width="2" height="15" fill="rgb(212,78,45)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="516" width="2" height="15" fill="rgb(243,173,11)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="532" width="2" height="15" fill="rgb(214,15,43)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="17" y="548" width="2" height="15" fill="rgb(226,117,18)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="564" width="2" height="15" fill="rgb(222,152,13)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.21%)</title><rect x="17" y="580" width="2" height="15" fill="rgb(225,77,51)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="596" width="2" height="15" fill="rgb(250,66,7)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="612" width="2" height="15" fill="rgb(215,99,15)"/><text x="20.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="628" width="2" height="15" fill="rgb(252,178,53)"/><text x="20.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="17" y="644" width="2" height="15" fill="rgb(222,48,3)"/><text x="20.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="660" width="2" height="15" fill="rgb(232,216,11)"/><text x="20.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.21%)</title><rect x="17" y="676" width="2" height="15" fill="rgb(233,140,30)"/><text x="20.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="692" width="2" height="15" fill="rgb(215,53,3)"/><text x="20.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="708" width="2" height="15" fill="rgb(242,46,38)"/><text x="20.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="724" width="2" height="15" fill="rgb(220,28,26)"/><text x="20.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="17" y="740" width="2" height="15" fill="rgb(254,98,23)"/><text x="20.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="756" width="2" height="15" fill="rgb(243,210,45)"/><text x="20.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.21%)</title><rect x="17" y="772" width="2" height="15" fill="rgb(223,84,6)"/><text x="20.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="788" width="2" height="15" fill="rgb(223,57,42)"/><text x="20.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="804" width="2" height="15" fill="rgb(252,53,28)"/><text x="20.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="820" width="2" height="15" fill="rgb(253,106,2)"/><text x="20.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="17" y="836" width="2" height="15" fill="rgb(242,33,4)"/><text x="20.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="852" width="2" height="15" fill="rgb(213,97,50)"/><text x="20.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.21%)</title><rect x="17" y="868" width="2" height="15" fill="rgb(233,148,51)"/><text x="20.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="884" width="2" height="15" fill="rgb(228,41,51)"/><text x="20.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="900" width="2" height="15" fill="rgb(209,195,33)"/><text x="20.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(211,24,25)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(213,189,18)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(206,190,41)"/><text x="20.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(212,7,54)"/><text x="20.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(206,184,53)"/><text x="20.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(214,62,34)"/><text x="20.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.21%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(248,221,39)"/><text x="20.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="1028" width="2" height="15" fill="rgb(215,159,34)"/><text x="20.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="1044" width="2" height="15" fill="rgb(240,49,19)"/><text x="20.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="1060" width="2" height="15" fill="rgb(224,150,15)"/><text x="20.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="17" y="1076" width="2" height="15" fill="rgb(229,120,25)"/><text x="20.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="17" y="1092" width="2" height="15" fill="rgb(240,35,24)"/><text x="20.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.21%)</title><rect x="17" y="1108" width="2" height="15" fill="rgb(224,199,43)"/><text x="20.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1124" width="1" height="15" fill="rgb(208,227,12)"/><text x="21.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1140" width="1" height="15" fill="rgb(254,187,24)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1156" width="1" height="15" fill="rgb(205,225,16)"/><text x="21.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1172" width="1" height="15" fill="rgb(235,106,29)"/><text x="21.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1188" width="1" height="15" fill="rgb(225,199,48)"/><text x="21.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1204" width="1" height="15" fill="rgb(221,59,10)"/><text x="21.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1220" width="1" height="15" fill="rgb(220,74,5)"/><text x="21.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.11%)</title><rect x="18" y="1236" width="1" height="15" fill="rgb(249,79,43)"/><text x="21.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1252" width="1" height="15" fill="rgb(221,100,8)"/><text x="21.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1268" width="1" height="15" fill="rgb(247,73,52)"/><text x="21.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1284" width="1" height="15" fill="rgb(226,176,4)"/><text x="21.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1300" width="1" height="15" fill="rgb(227,123,7)"/><text x="21.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1316" width="1" height="15" fill="rgb(242,64,22)"/><text x="21.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1332" width="1" height="15" fill="rgb(247,96,14)"/><text x="21.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1348" width="1" height="15" fill="rgb(210,96,36)"/><text x="21.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.11%)</title><rect x="18" y="1364" width="1" height="15" fill="rgb(220,66,3)"/><text x="21.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1380" width="1" height="15" fill="rgb(222,200,35)"/><text x="21.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1396" width="1" height="15" fill="rgb(237,45,39)"/><text x="21.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1412" width="1" height="15" fill="rgb(250,51,29)"/><text x="21.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1428" width="1" height="15" fill="rgb(254,3,15)"/><text x="21.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1444" width="1" height="15" fill="rgb(221,51,48)"/><text x="21.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.11%)</title><rect x="18" y="1460" width="1" height="15" fill="rgb(231,209,5)"/><text x="21.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.11%)</title><rect x="18" y="1476" width="1" height="15" fill="rgb(251,32,47)"/><text x="21.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.11%)</title><rect x="18" y="1492" width="1" height="15" fill="rgb(224,22,29)"/><text x="21.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.11%)</title><rect x="18" y="1508" width="1" height="15" fill="rgb(243,91,48)"/><text x="21.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.11%)</title><rect x="18" y="1524" width="1" height="15" fill="rgb(223,29,29)"/><text x="21.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="18" y="1540" width="1" height="15" fill="rgb(243,186,23)"/><text x="21.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="18" y="1556" width="1" height="15" fill="rgb(226,135,51)"/><text x="21.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.11%)</title><rect x="18" y="1572" width="1" height="15" fill="rgb(223,60,36)"/><text x="21.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="18" y="1588" width="1" height="15" fill="rgb(239,33,49)"/><text x="21.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="18" y="1604" width="1" height="15" fill="rgb(219,170,38)"/><text x="21.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="18" y="1620" width="1" height="15" fill="rgb(216,161,23)"/><text x="21.00" y="1630.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute&gt;::cast&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="18" y="1636" width="1" height="15" fill="rgb(235,124,48)"/><text x="21.00" y="1646.50"></text></g><g><title>pybind11::dict::dict (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="18" y="1652" width="1" height="15" fill="rgb(229,140,13)"/><text x="21.00" y="1662.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.11%)</title><rect x="19" y="1108" width="2" height="15" fill="rgb(242,72,15)"/><text x="22.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1124" width="2" height="15" fill="rgb(248,98,35)"/><text x="22.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1140" width="2" height="15" fill="rgb(244,16,36)"/><text x="22.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1156" width="2" height="15" fill="rgb(253,100,16)"/><text x="22.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="19" y="1172" width="2" height="15" fill="rgb(233,135,10)"/><text x="22.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1188" width="2" height="15" fill="rgb(226,156,17)"/><text x="22.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.11%)</title><rect x="19" y="1204" width="2" height="15" fill="rgb(249,146,24)"/><text x="22.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1220" width="2" height="15" fill="rgb(207,25,26)"/><text x="22.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1236" width="2" height="15" fill="rgb(252,201,40)"/><text x="22.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1252" width="2" height="15" fill="rgb(234,140,46)"/><text x="22.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="19" y="1268" width="2" height="15" fill="rgb(247,45,16)"/><text x="22.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1284" width="2" height="15" fill="rgb(205,96,3)"/><text x="22.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.11%)</title><rect x="19" y="1300" width="2" height="15" fill="rgb(227,47,20)"/><text x="22.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1316" width="2" height="15" fill="rgb(244,55,17)"/><text x="22.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1332" width="2" height="15" fill="rgb(234,94,47)"/><text x="22.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1348" width="2" height="15" fill="rgb(225,183,39)"/><text x="22.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="19" y="1364" width="2" height="15" fill="rgb(227,168,45)"/><text x="22.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1380" width="2" height="15" fill="rgb(251,42,32)"/><text x="22.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/category.py) (1 samples, 0.11%)</title><rect x="19" y="1396" width="2" height="15" fill="rgb(207,131,1)"/><text x="22.00" y="1406.50"></text></g><g><title>CategoricalIndex (pandas/core/indexes/category.py) (1 samples, 0.11%)</title><rect x="19" y="1412" width="2" height="15" fill="rgb(211,216,30)"/><text x="22.00" y="1422.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.11%)</title><rect x="19" y="1428" width="2" height="15" fill="rgb(225,192,34)"/><text x="22.00" y="1438.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.11%)</title><rect x="19" y="1444" width="2" height="15" fill="rgb(209,74,36)"/><text x="22.00" y="1454.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="19" y="1460" width="2" height="15" fill="rgb(219,208,18)"/><text x="22.00" y="1470.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.42%)</title><rect x="17" y="340" width="5" height="15" fill="rgb(247,211,40)"/><text x="20.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="17" y="356" width="5" height="15" fill="rgb(244,30,5)"/><text x="20.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="17" y="372" width="5" height="15" fill="rgb(213,51,30)"/><text x="20.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="17" y="388" width="5" height="15" fill="rgb(233,35,54)"/><text x="20.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.42%)</title><rect x="17" y="404" width="5" height="15" fill="rgb(217,151,49)"/><text x="20.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="17" y="420" width="5" height="15" fill="rgb(229,78,15)"/><text x="20.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 0.42%)</title><rect x="17" y="436" width="5" height="15" fill="rgb(248,88,36)"/><text x="20.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="17" y="452" width="5" height="15" fill="rgb(235,221,10)"/><text x="20.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="17" y="468" width="5" height="15" fill="rgb(240,88,13)"/><text x="20.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="484" width="3" height="15" fill="rgb(248,126,11)"/><text x="22.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="19" y="500" width="3" height="15" fill="rgb(214,209,14)"/><text x="22.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="516" width="3" height="15" fill="rgb(248,223,23)"/><text x="22.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.21%)</title><rect x="19" y="532" width="3" height="15" fill="rgb(205,29,22)"/><text x="22.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="548" width="3" height="15" fill="rgb(244,125,24)"/><text x="22.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="564" width="3" height="15" fill="rgb(210,198,46)"/><text x="22.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="580" width="3" height="15" fill="rgb(250,26,5)"/><text x="22.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="19" y="596" width="3" height="15" fill="rgb(227,129,1)"/><text x="22.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="612" width="3" height="15" fill="rgb(220,6,20)"/><text x="22.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.21%)</title><rect x="19" y="628" width="3" height="15" fill="rgb(232,82,12)"/><text x="22.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="644" width="3" height="15" fill="rgb(220,211,51)"/><text x="22.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="660" width="3" height="15" fill="rgb(239,219,11)"/><text x="22.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="676" width="3" height="15" fill="rgb(240,169,35)"/><text x="22.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="19" y="692" width="3" height="15" fill="rgb(227,16,2)"/><text x="22.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="708" width="3" height="15" fill="rgb(236,22,3)"/><text x="22.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.21%)</title><rect x="19" y="724" width="3" height="15" fill="rgb(216,138,14)"/><text x="22.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="740" width="3" height="15" fill="rgb(246,10,14)"/><text x="22.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="756" width="3" height="15" fill="rgb(210,109,2)"/><text x="22.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="772" width="3" height="15" fill="rgb(240,174,30)"/><text x="22.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="19" y="788" width="3" height="15" fill="rgb(241,205,13)"/><text x="22.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="804" width="3" height="15" fill="rgb(252,85,54)"/><text x="22.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.21%)</title><rect x="19" y="820" width="3" height="15" fill="rgb(215,87,53)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="836" width="3" height="15" fill="rgb(237,3,36)"/><text x="22.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="852" width="3" height="15" fill="rgb(233,69,54)"/><text x="22.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="868" width="3" height="15" fill="rgb(247,108,19)"/><text x="22.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="19" y="884" width="3" height="15" fill="rgb(237,112,20)"/><text x="22.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="900" width="3" height="15" fill="rgb(235,145,18)"/><text x="22.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.21%)</title><rect x="19" y="916" width="3" height="15" fill="rgb(238,227,15)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="932" width="3" height="15" fill="rgb(216,99,46)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="948" width="3" height="15" fill="rgb(248,78,39)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="964" width="3" height="15" fill="rgb(209,132,50)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="19" y="980" width="3" height="15" fill="rgb(234,156,10)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="996" width="3" height="15" fill="rgb(225,98,18)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.21%)</title><rect x="19" y="1012" width="3" height="15" fill="rgb(253,177,31)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="1028" width="3" height="15" fill="rgb(229,38,33)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="1044" width="3" height="15" fill="rgb(250,170,40)"/><text x="22.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="1060" width="3" height="15" fill="rgb(233,38,33)"/><text x="22.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="19" y="1076" width="3" height="15" fill="rgb(240,151,33)"/><text x="22.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="19" y="1092" width="3" height="15" fill="rgb(214,25,13)"/><text x="22.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.11%)</title><rect x="21" y="1108" width="1" height="15" fill="rgb(244,157,30)"/><text x="24.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1124" width="1" height="15" fill="rgb(248,130,4)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1140" width="1" height="15" fill="rgb(212,170,32)"/><text x="24.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1156" width="1" height="15" fill="rgb(205,107,45)"/><text x="24.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="21" y="1172" width="1" height="15" fill="rgb(235,11,39)"/><text x="24.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1188" width="1" height="15" fill="rgb(228,121,15)"/><text x="24.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.11%)</title><rect x="21" y="1204" width="1" height="15" fill="rgb(208,197,47)"/><text x="24.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1220" width="1" height="15" fill="rgb(234,71,8)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1236" width="1" height="15" fill="rgb(238,31,42)"/><text x="24.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1252" width="1" height="15" fill="rgb(210,88,15)"/><text x="24.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="21" y="1268" width="1" height="15" fill="rgb(232,224,19)"/><text x="24.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1284" width="1" height="15" fill="rgb(205,3,10)"/><text x="24.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.11%)</title><rect x="21" y="1300" width="1" height="15" fill="rgb(207,210,31)"/><text x="24.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1316" width="1" height="15" fill="rgb(250,53,25)"/><text x="24.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1332" width="1" height="15" fill="rgb(218,222,15)"/><text x="24.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1348" width="1" height="15" fill="rgb(216,188,48)"/><text x="24.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="21" y="1364" width="1" height="15" fill="rgb(234,215,45)"/><text x="24.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1380" width="1" height="15" fill="rgb(222,20,46)"/><text x="24.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="21" y="1396" width="1" height="15" fill="rgb(241,21,47)"/><text x="24.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1412" width="1" height="15" fill="rgb(211,85,33)"/><text x="24.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1428" width="1" height="15" fill="rgb(212,138,48)"/><text x="24.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1444" width="1" height="15" fill="rgb(238,217,30)"/><text x="24.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="21" y="1460" width="1" height="15" fill="rgb(250,132,12)"/><text x="24.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1476" width="1" height="15" fill="rgb(229,135,1)"/><text x="24.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.11%)</title><rect x="21" y="1492" width="1" height="15" fill="rgb(217,130,4)"/><text x="24.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1508" width="1" height="15" fill="rgb(230,161,36)"/><text x="24.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1524" width="1" height="15" fill="rgb(244,160,49)"/><text x="24.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1540" width="1" height="15" fill="rgb(232,210,25)"/><text x="24.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="21" y="1556" width="1" height="15" fill="rgb(236,153,21)"/><text x="24.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1572" width="1" height="15" fill="rgb(224,22,26)"/><text x="24.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.11%)</title><rect x="21" y="1588" width="1" height="15" fill="rgb(241,42,13)"/><text x="24.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1604" width="1" height="15" fill="rgb(229,157,53)"/><text x="24.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1620" width="1" height="15" fill="rgb(231,142,14)"/><text x="24.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1636" width="1" height="15" fill="rgb(223,198,34)"/><text x="24.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="21" y="1652" width="1" height="15" fill="rgb(223,143,26)"/><text x="24.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1668" width="1" height="15" fill="rgb(254,47,21)"/><text x="24.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.11%)</title><rect x="21" y="1684" width="1" height="15" fill="rgb(215,212,6)"/><text x="24.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1700" width="1" height="15" fill="rgb(241,63,19)"/><text x="24.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1716" width="1" height="15" fill="rgb(220,145,21)"/><text x="24.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1732" width="1" height="15" fill="rgb(228,44,19)"/><text x="24.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="21" y="1748" width="1" height="15" fill="rgb(230,58,52)"/><text x="24.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1764" width="1" height="15" fill="rgb(210,112,32)"/><text x="24.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.11%)</title><rect x="21" y="1780" width="1" height="15" fill="rgb(226,180,35)"/><text x="24.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1796" width="1" height="15" fill="rgb(249,44,36)"/><text x="24.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1812" width="1" height="15" fill="rgb(230,96,36)"/><text x="24.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1828" width="1" height="15" fill="rgb(252,62,45)"/><text x="24.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="21" y="1844" width="1" height="15" fill="rgb(235,112,19)"/><text x="24.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1860" width="1" height="15" fill="rgb(243,168,36)"/><text x="24.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.11%)</title><rect x="21" y="1876" width="1" height="15" fill="rgb(222,126,15)"/><text x="24.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1892" width="1" height="15" fill="rgb(236,65,39)"/><text x="24.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1908" width="1" height="15" fill="rgb(218,8,10)"/><text x="24.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1924" width="1" height="15" fill="rgb(251,224,44)"/><text x="24.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="21" y="1940" width="1" height="15" fill="rgb(221,139,11)"/><text x="24.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="21" y="1956" width="1" height="15" fill="rgb(217,62,20)"/><text x="24.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py) (1 samples, 0.11%)</title><rect x="21" y="1972" width="1" height="15" fill="rgb(233,66,19)"/><text x="24.00" y="1982.50"></text></g><g><title>json_load (matplotlib/font_manager.py) (1 samples, 0.11%)</title><rect x="21" y="1988" width="1" height="15" fill="rgb(229,84,9)"/><text x="24.00" y="1998.50"></text></g><g><title>load (json/__init__.py) (1 samples, 0.11%)</title><rect x="21" y="2004" width="1" height="15" fill="rgb(220,56,52)"/><text x="24.00" y="2014.50"></text></g><g><title>loads (json/__init__.py) (1 samples, 0.11%)</title><rect x="21" y="2020" width="1" height="15" fill="rgb(243,229,32)"/><text x="24.00" y="2030.50"></text></g><g><title>decode (json/decoder.py) (1 samples, 0.11%)</title><rect x="21" y="2036" width="1" height="15" fill="rgb(254,138,33)"/><text x="24.00" y="2046.50"></text></g><g><title>raw_decode (json/decoder.py) (1 samples, 0.11%)</title><rect x="21" y="2052" width="1" height="15" fill="rgb(213,64,8)"/><text x="24.00" y="2062.50"></text></g><g><title>0x7fa18a6d9720 (?) (1 samples, 0.11%)</title><rect x="21" y="2068" width="1" height="15" fill="rgb(237,208,27)"/><text x="24.00" y="2078.50"></text></g><g><title>0x7fa18a6db568 (?) (1 samples, 0.11%)</title><rect x="21" y="2084" width="1" height="15" fill="rgb(217,166,23)"/><text x="24.00" y="2094.50"></text></g><g><title>0x7fa18a6da8fe (?) (1 samples, 0.11%)</title><rect x="21" y="2100" width="1" height="15" fill="rgb(215,43,13)"/><text x="24.00" y="2110.50"></text></g><g><title>0x7fa18a6da75d (?) (1 samples, 0.11%)</title><rect x="21" y="2116" width="1" height="15" fill="rgb(245,100,34)"/><text x="24.00" y="2126.50"></text></g><g><title>0x7fa18a6d3cb1 (?) (1 samples, 0.11%)</title><rect x="21" y="2132" width="1" height="15" fill="rgb(211,222,27)"/><text x="24.00" y="2142.50"></text></g><g><title>_json_decode (matplotlib/font_manager.py) (1 samples, 0.11%)</title><rect x="21" y="2148" width="1" height="15" fill="rgb(219,136,23)"/><text x="24.00" y="2158.50"></text></g><g><title>0x7fa1692ec54d (?) (1 samples, 0.11%)</title><rect x="22" y="1412" width="1" height="15" fill="rgb(253,28,31)"/><text x="25.00" y="1422.50"></text></g><g><title>0x7fa16932d231 (?) (1 samples, 0.11%)</title><rect x="22" y="1428" width="1" height="15" fill="rgb(236,168,36)"/><text x="25.00" y="1438.50"></text></g><g><title>0x7fa1693ee3a3 (?) (1 samples, 0.11%)</title><rect x="22" y="1444" width="1" height="15" fill="rgb(221,66,1)"/><text x="25.00" y="1454.50"></text></g><g><title>0x7fa16942cd69 (?) (1 samples, 0.11%)</title><rect x="22" y="1460" width="1" height="15" fill="rgb(248,227,23)"/><text x="25.00" y="1470.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="22" y="1476" width="1" height="15" fill="rgb(205,164,38)"/><text x="25.00" y="1486.50"></text></g><g><title>0x7fa1693edd89 (?) (1 samples, 0.11%)</title><rect x="22" y="1492" width="1" height="15" fill="rgb(236,138,2)"/><text x="25.00" y="1502.50"></text></g><g><title>0x7fa1694bcfb2 (?) (1 samples, 0.11%)</title><rect x="22" y="1508" width="1" height="15" fill="rgb(248,11,14)"/><text x="25.00" y="1518.50"></text></g><g><title>0x7fa1693fe5a8 (?) (1 samples, 0.11%)</title><rect x="22" y="1524" width="1" height="15" fill="rgb(245,91,17)"/><text x="25.00" y="1534.50"></text></g><g><title>0x7fa16942ccf9 (?) (1 samples, 0.11%)</title><rect x="22" y="1540" width="1" height="15" fill="rgb(254,215,38)"/><text x="25.00" y="1550.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="22" y="1556" width="1" height="15" fill="rgb(254,86,0)"/><text x="25.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="948" width="4" height="15" fill="rgb(211,141,19)"/><text x="25.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="964" width="4" height="15" fill="rgb(254,188,23)"/><text x="25.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="980" width="4" height="15" fill="rgb(219,58,3)"/><text x="25.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="996" width="4" height="15" fill="rgb(206,0,15)"/><text x="25.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="22" y="1012" width="4" height="15" fill="rgb(241,229,21)"/><text x="25.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1028" width="4" height="15" fill="rgb(223,168,19)"/><text x="25.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (3 samples, 0.32%)</title><rect x="22" y="1044" width="4" height="15" fill="rgb(233,144,16)"/><text x="25.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1060" width="4" height="15" fill="rgb(216,1,26)"/><text x="25.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1076" width="4" height="15" fill="rgb(237,200,21)"/><text x="25.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1092" width="4" height="15" fill="rgb(219,23,46)"/><text x="25.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1108" width="4" height="15" fill="rgb(235,40,28)"/><text x="25.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1124" width="4" height="15" fill="rgb(233,220,33)"/><text x="25.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="22" y="1140" width="4" height="15" fill="rgb(247,185,25)"/><text x="25.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1156" width="4" height="15" fill="rgb(237,46,38)"/><text x="25.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (3 samples, 0.32%)</title><rect x="22" y="1172" width="4" height="15" fill="rgb(211,10,9)"/><text x="25.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1188" width="4" height="15" fill="rgb(242,134,24)"/><text x="25.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1204" width="4" height="15" fill="rgb(212,112,10)"/><text x="25.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1220" width="4" height="15" fill="rgb(217,213,28)"/><text x="25.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="22" y="1236" width="4" height="15" fill="rgb(211,216,30)"/><text x="25.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1252" width="4" height="15" fill="rgb(238,17,37)"/><text x="25.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py) (3 samples, 0.32%)</title><rect x="22" y="1268" width="4" height="15" fill="rgb(245,129,42)"/><text x="25.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1284" width="4" height="15" fill="rgb(207,69,39)"/><text x="25.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1300" width="4" height="15" fill="rgb(214,85,45)"/><text x="25.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1316" width="4" height="15" fill="rgb(245,51,6)"/><text x="25.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="22" y="1332" width="4" height="15" fill="rgb(213,213,49)"/><text x="25.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1348" width="4" height="15" fill="rgb(234,218,4)"/><text x="25.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py) (3 samples, 0.32%)</title><rect x="22" y="1364" width="4" height="15" fill="rgb(232,144,23)"/><text x="25.00" y="1374.50"></text></g><g><title>init_static_locks (cryptography/hazmat/bindings/openssl/binding.py) (3 samples, 0.32%)</title><rect x="22" y="1380" width="4" height="15" fill="rgb(253,114,21)"/><text x="25.00" y="1390.50"></text></g><g><title>_ensure_ffi_initialized (cryptography/hazmat/bindings/openssl/binding.py) (3 samples, 0.32%)</title><rect x="22" y="1396" width="4" height="15" fill="rgb(251,108,44)"/><text x="25.00" y="1406.50"></text></g><g><title>_cffi_f_SSL_library_init (_openssl.c) (2 samples, 0.21%)</title><rect x="23" y="1412" width="3" height="15" fill="rgb(251,40,18)"/><text x="26.00" y="1422.50"></text></g><g><title>OPENSSL_init_ssl (cryptography/hazmat/bindings/_openssl.abi3.so) (2 samples, 0.21%)</title><rect x="23" y="1428" width="3" height="15" fill="rgb(222,33,25)"/><text x="26.00" y="1438.50"></text></g><g><title>OPENSSL_init_crypto (cryptography/hazmat/bindings/_openssl.abi3.so) (2 samples, 0.21%)</title><rect x="23" y="1444" width="3" height="15" fill="rgb(237,168,48)"/><text x="26.00" y="1454.50"></text></g><g><title>CRYPTO_THREAD_run_once (cryptography/hazmat/bindings/_openssl.abi3.so) (2 samples, 0.21%)</title><rect x="23" y="1460" width="3" height="15" fill="rgb(219,145,34)"/><text x="26.00" y="1470.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (2 samples, 0.21%)</title><rect x="23" y="1476" width="3" height="15" fill="rgb(220,118,6)"/><text x="26.00" y="1486.50"></text></g><g><title>ossl_init_add_all_ciphers_ossl_ (cryptography/hazmat/bindings/_openssl.abi3.so) (2 samples, 0.21%)</title><rect x="23" y="1492" width="3" height="15" fill="rgb(213,137,54)"/><text x="26.00" y="1502.50"></text></g><g><title>openssl_add_all_ciphers_int (cryptography/hazmat/bindings/_openssl.abi3.so) (2 samples, 0.21%)</title><rect x="23" y="1508" width="3" height="15" fill="rgb(215,160,44)"/><text x="26.00" y="1518.50"></text></g><g><title>OBJ_NAME_add (cryptography/hazmat/bindings/_openssl.abi3.so) (2 samples, 0.21%)</title><rect x="23" y="1524" width="3" height="15" fill="rgb(231,189,30)"/><text x="26.00" y="1534.50"></text></g><g><title>OPENSSL_LH_insert (cryptography/hazmat/bindings/_openssl.abi3.so) (1 samples, 0.11%)</title><rect x="24" y="1540" width="2" height="15" fill="rgb(247,92,53)"/><text x="27.00" y="1550.50"></text></g><g><title>getrn (cryptography/hazmat/bindings/_openssl.abi3.so) (1 samples, 0.11%)</title><rect x="24" y="1556" width="2" height="15" fill="rgb(236,194,48)"/><text x="27.00" y="1566.50"></text></g><g><title>obj_name_hash (cryptography/hazmat/bindings/_openssl.abi3.so) (1 samples, 0.11%)</title><rect x="24" y="1572" width="2" height="15" fill="rgb(213,117,24)"/><text x="27.00" y="1582.50"></text></g><g><title>openssl_lh_strcasehash (cryptography/hazmat/bindings/_openssl.abi3.so) (1 samples, 0.11%)</title><rect x="24" y="1588" width="2" height="15" fill="rgb(205,144,49)"/><text x="27.00" y="1598.50"></text></g><g><title>ossl_tolower (cryptography/hazmat/bindings/_openssl.abi3.so) (1 samples, 0.11%)</title><rect x="24" y="1604" width="2" height="15" fill="rgb(226,189,13)"/><text x="27.00" y="1614.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 0.84%)</title><rect x="17" y="244" width="10" height="15" fill="rgb(247,45,6)"/><text x="20.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.84%)</title><rect x="17" y="260" width="10" height="15" fill="rgb(249,207,3)"/><text x="20.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.84%)</title><rect x="17" y="276" width="10" height="15" fill="rgb(240,64,35)"/><text x="20.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.84%)</title><rect x="17" y="292" width="10" height="15" fill="rgb(215,109,29)"/><text x="20.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.84%)</title><rect x="17" y="308" width="10" height="15" fill="rgb(228,95,43)"/><text x="20.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.84%)</title><rect x="17" y="324" width="10" height="15" fill="rgb(219,60,12)"/><text x="20.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 0.42%)</title><rect x="22" y="340" width="5" height="15" fill="rgb(217,167,45)"/><text x="25.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="356" width="5" height="15" fill="rgb(247,55,34)"/><text x="25.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="372" width="5" height="15" fill="rgb(218,155,50)"/><text x="25.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="388" width="5" height="15" fill="rgb(252,74,16)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="404" width="5" height="15" fill="rgb(254,65,31)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="420" width="5" height="15" fill="rgb(233,136,40)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="436" width="5" height="15" fill="rgb(207,53,34)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.42%)</title><rect x="22" y="452" width="5" height="15" fill="rgb(244,214,36)"/><text x="25.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="468" width="5" height="15" fill="rgb(235,133,13)"/><text x="25.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (4 samples, 0.42%)</title><rect x="22" y="484" width="5" height="15" fill="rgb(227,83,16)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="500" width="5" height="15" fill="rgb(231,126,33)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="516" width="5" height="15" fill="rgb(230,183,28)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="532" width="5" height="15" fill="rgb(235,157,43)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.42%)</title><rect x="22" y="548" width="5" height="15" fill="rgb(226,8,12)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="564" width="5" height="15" fill="rgb(234,217,11)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (4 samples, 0.42%)</title><rect x="22" y="580" width="5" height="15" fill="rgb(222,76,53)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="596" width="5" height="15" fill="rgb(212,77,14)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="612" width="5" height="15" fill="rgb(244,96,4)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="628" width="5" height="15" fill="rgb(254,197,30)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.42%)</title><rect x="22" y="644" width="5" height="15" fill="rgb(221,228,29)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="660" width="5" height="15" fill="rgb(251,17,52)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (4 samples, 0.42%)</title><rect x="22" y="676" width="5" height="15" fill="rgb(210,0,14)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="692" width="5" height="15" fill="rgb(229,54,12)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="708" width="5" height="15" fill="rgb(205,86,43)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="724" width="5" height="15" fill="rgb(237,35,14)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.42%)</title><rect x="22" y="740" width="5" height="15" fill="rgb(219,74,29)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="756" width="5" height="15" fill="rgb(210,178,18)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (4 samples, 0.42%)</title><rect x="22" y="772" width="5" height="15" fill="rgb(248,90,23)"/><text x="25.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="788" width="5" height="15" fill="rgb(244,147,38)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="804" width="5" height="15" fill="rgb(247,225,12)"/><text x="25.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="820" width="5" height="15" fill="rgb(240,66,9)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="836" width="5" height="15" fill="rgb(208,120,23)"/><text x="25.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="852" width="5" height="15" fill="rgb(253,36,28)"/><text x="25.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.42%)</title><rect x="22" y="868" width="5" height="15" fill="rgb(244,204,51)"/><text x="25.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="884" width="5" height="15" fill="rgb(225,124,44)"/><text x="25.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (4 samples, 0.42%)</title><rect x="22" y="900" width="5" height="15" fill="rgb(233,61,50)"/><text x="25.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="916" width="5" height="15" fill="rgb(228,43,44)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="22" y="932" width="5" height="15" fill="rgb(252,156,49)"/><text x="25.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="948" width="1" height="15" fill="rgb(210,81,7)"/><text x="29.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="964" width="1" height="15" fill="rgb(235,170,16)"/><text x="29.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="980" width="1" height="15" fill="rgb(207,54,32)"/><text x="29.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.11%)</title><rect x="26" y="996" width="1" height="15" fill="rgb(241,102,18)"/><text x="29.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1012" width="1" height="15" fill="rgb(237,10,31)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1028" width="1" height="15" fill="rgb(207,202,43)"/><text x="29.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1044" width="1" height="15" fill="rgb(222,19,11)"/><text x="29.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1060" width="1" height="15" fill="rgb(222,15,36)"/><text x="29.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1076" width="1" height="15" fill="rgb(219,206,1)"/><text x="29.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.11%)</title><rect x="26" y="1092" width="1" height="15" fill="rgb(237,12,47)"/><text x="29.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1108" width="1" height="15" fill="rgb(241,33,48)"/><text x="29.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1124" width="1" height="15" fill="rgb(224,163,39)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1140" width="1" height="15" fill="rgb(249,205,47)"/><text x="29.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1156" width="1" height="15" fill="rgb(231,87,15)"/><text x="29.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1172" width="1" height="15" fill="rgb(239,111,45)"/><text x="29.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1188" width="1" height="15" fill="rgb(230,107,37)"/><text x="29.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1204" width="1" height="15" fill="rgb(219,104,10)"/><text x="29.00" y="1214.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/kdf/scrypt.py) (1 samples, 0.11%)</title><rect x="26" y="1220" width="1" height="15" fill="rgb(238,206,54)"/><text x="29.00" y="1230.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.11%)</title><rect x="26" y="1236" width="1" height="15" fill="rgb(246,39,37)"/><text x="29.00" y="1246.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.11%)</title><rect x="26" y="1252" width="1" height="15" fill="rgb(215,201,44)"/><text x="29.00" y="1262.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.11%)</title><rect x="26" y="1268" width="1" height="15" fill="rgb(230,97,29)"/><text x="29.00" y="1278.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="26" y="1284" width="1" height="15" fill="rgb(222,214,54)"/><text x="29.00" y="1294.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="26" y="1300" width="1" height="15" fill="rgb(229,175,48)"/><text x="29.00" y="1310.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.11%)</title><rect x="26" y="1316" width="1" height="15" fill="rgb(224,13,0)"/><text x="29.00" y="1326.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.11%)</title><rect x="26" y="1332" width="1" height="15" fill="rgb(214,169,23)"/><text x="29.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.58%)</title><rect x="10" y="68" width="18" height="15" fill="rgb(225,124,43)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.58%)</title><rect x="10" y="84" width="18" height="15" fill="rgb(247,97,46)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.58%)</title><rect x="10" y="100" width="18" height="15" fill="rgb(238,41,33)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 1.58%)</title><rect x="10" y="116" width="18" height="15" fill="rgb(244,102,8)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.58%)</title><rect x="10" y="132" width="18" height="15" fill="rgb(252,110,16)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py) (15 samples, 1.58%)</title><rect x="10" y="148" width="18" height="15" fill="rgb(236,68,37)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.58%)</title><rect x="10" y="164" width="18" height="15" fill="rgb(249,121,5)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.58%)</title><rect x="10" y="180" width="18" height="15" fill="rgb(235,69,52)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.95%)</title><rect x="17" y="196" width="11" height="15" fill="rgb(211,43,45)"/><text x="20.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 0.95%)</title><rect x="17" y="212" width="11" height="15" fill="rgb(215,182,36)"/><text x="20.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.95%)</title><rect x="17" y="228" width="11" height="15" fill="rgb(217,58,5)"/><text x="20.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="244" width="1" height="15" fill="rgb(242,18,9)"/><text x="30.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="260" width="1" height="15" fill="rgb(239,178,49)"/><text x="30.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="276" width="1" height="15" fill="rgb(236,220,16)"/><text x="30.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="292" width="1" height="15" fill="rgb(208,194,24)"/><text x="30.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="308" width="1" height="15" fill="rgb(208,201,27)"/><text x="30.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="324" width="1" height="15" fill="rgb(210,132,33)"/><text x="30.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="340" width="1" height="15" fill="rgb(250,227,22)"/><text x="30.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="356" width="1" height="15" fill="rgb(244,36,39)"/><text x="30.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="372" width="1" height="15" fill="rgb(254,63,25)"/><text x="30.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="388" width="1" height="15" fill="rgb(249,104,43)"/><text x="30.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="404" width="1" height="15" fill="rgb(245,13,26)"/><text x="30.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="420" width="1" height="15" fill="rgb(222,69,25)"/><text x="30.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="436" width="1" height="15" fill="rgb(209,40,8)"/><text x="30.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="452" width="1" height="15" fill="rgb(249,73,15)"/><text x="30.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py) (1 samples, 0.11%)</title><rect x="27" y="468" width="1" height="15" fill="rgb(232,107,8)"/><text x="30.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="484" width="1" height="15" fill="rgb(226,0,6)"/><text x="30.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="500" width="1" height="15" fill="rgb(253,212,33)"/><text x="30.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="516" width="1" height="15" fill="rgb(254,217,4)"/><text x="30.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="532" width="1" height="15" fill="rgb(229,206,45)"/><text x="30.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="548" width="1" height="15" fill="rgb(247,57,23)"/><text x="30.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/_datasource.py) (1 samples, 0.11%)</title><rect x="27" y="564" width="1" height="15" fill="rgb(221,102,45)"/><text x="30.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="580" width="1" height="15" fill="rgb(208,79,18)"/><text x="30.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="596" width="1" height="15" fill="rgb(250,153,42)"/><text x="30.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="612" width="1" height="15" fill="rgb(230,157,36)"/><text x="30.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="628" width="1" height="15" fill="rgb(207,196,17)"/><text x="30.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="644" width="1" height="15" fill="rgb(248,7,41)"/><text x="30.00" y="654.50"></text></g><g><title>&lt;module&gt; (shutil.py) (1 samples, 0.11%)</title><rect x="27" y="660" width="1" height="15" fill="rgb(231,225,39)"/><text x="30.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="676" width="1" height="15" fill="rgb(210,139,22)"/><text x="30.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="692" width="1" height="15" fill="rgb(247,135,1)"/><text x="30.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="708" width="1" height="15" fill="rgb(242,40,14)"/><text x="30.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="724" width="1" height="15" fill="rgb(225,21,8)"/><text x="30.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="740" width="1" height="15" fill="rgb(233,71,21)"/><text x="30.00" y="750.50"></text></g><g><title>&lt;module&gt; (lzma.py) (1 samples, 0.11%)</title><rect x="27" y="756" width="1" height="15" fill="rgb(221,7,22)"/><text x="30.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="772" width="1" height="15" fill="rgb(237,61,20)"/><text x="30.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="788" width="1" height="15" fill="rgb(235,161,37)"/><text x="30.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="804" width="1" height="15" fill="rgb(245,125,48)"/><text x="30.00" y="814.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="820" width="1" height="15" fill="rgb(214,104,40)"/><text x="30.00" y="830.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="836" width="1" height="15" fill="rgb(215,87,38)"/><text x="30.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="852" width="1" height="15" fill="rgb(211,37,20)"/><text x="30.00" y="862.50"></text></g><g><title>0x7fa191907d22 (?) (1 samples, 0.11%)</title><rect x="27" y="868" width="1" height="15" fill="rgb(224,6,54)"/><text x="30.00" y="878.50"></text></g><g><title>0x7fa15e141ff9 (?) (1 samples, 0.11%)</title><rect x="31" y="212" width="1" height="15" fill="rgb(223,107,3)"/><text x="34.00" y="222.50"></text></g><g><title>0x7fa15e13cef6 (?) (1 samples, 0.11%)</title><rect x="31" y="228" width="1" height="15" fill="rgb(247,119,43)"/><text x="34.00" y="238.50"></text></g><g><title>0x7fa15e131962 (?) (1 samples, 0.11%)</title><rect x="31" y="244" width="1" height="15" fill="rgb(239,227,54)"/><text x="34.00" y="254.50"></text></g><g><title>0x7fa15e1657a7 (?) (1 samples, 0.11%)</title><rect x="31" y="260" width="1" height="15" fill="rgb(232,138,51)"/><text x="34.00" y="270.50"></text></g><g><title>0x7fa15e165379 (?) (1 samples, 0.11%)</title><rect x="31" y="276" width="1" height="15" fill="rgb(250,114,3)"/><text x="34.00" y="286.50"></text></g><g><title>0x7fa15e5c38b8 (?) (1 samples, 0.11%)</title><rect x="31" y="292" width="1" height="15" fill="rgb(212,31,7)"/><text x="34.00" y="302.50"></text></g><g><title>0x7fa15e5c1c7f (?) (1 samples, 0.11%)</title><rect x="31" y="308" width="1" height="15" fill="rgb(223,106,4)"/><text x="34.00" y="318.50"></text></g><g><title>0x7fa15e5d499c (?) (1 samples, 0.11%)</title><rect x="31" y="324" width="1" height="15" fill="rgb(238,98,31)"/><text x="34.00" y="334.50"></text></g><g><title>0x7fa15e24fac6 (?) (1 samples, 0.11%)</title><rect x="31" y="340" width="1" height="15" fill="rgb(254,108,18)"/><text x="34.00" y="350.50"></text></g><g><title>0x7fa15e24fa60 (?) (1 samples, 0.11%)</title><rect x="31" y="356" width="1" height="15" fill="rgb(225,192,43)"/><text x="34.00" y="366.50"></text></g><g><title>0x7fa15e24f043 (?) (1 samples, 0.11%)</title><rect x="31" y="372" width="1" height="15" fill="rgb(243,207,13)"/><text x="34.00" y="382.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="32" y="292" width="1" height="15" fill="rgb(252,188,17)"/><text x="35.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="32" y="308" width="1" height="15" fill="rgb(224,98,13)"/><text x="35.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="32" y="324" width="1" height="15" fill="rgb(229,102,53)"/><text x="35.00" y="334.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="33" y="340" width="1" height="15" fill="rgb(214,99,44)"/><text x="36.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="33" y="356" width="1" height="15" fill="rgb(233,61,54)"/><text x="36.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="33" y="372" width="1" height="15" fill="rgb(245,170,3)"/><text x="36.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="33" y="388" width="1" height="15" fill="rgb(221,195,42)"/><text x="36.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="33" y="404" width="1" height="15" fill="rgb(234,217,26)"/><text x="36.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="33" y="420" width="1" height="15" fill="rgb(214,111,28)"/><text x="36.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="33" y="436" width="1" height="15" fill="rgb(252,5,33)"/><text x="36.00" y="446.50"></text></g><g><title>onnxruntime::Equal&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="34" y="340" width="2" height="15" fill="rgb(227,198,3)"/><text x="37.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;int, bool, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int)#2}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="34" y="356" width="2" height="15" fill="rgb(208,5,8)"/><text x="37.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;int, int&gt;, onnxruntime::TBroadcastOutput&lt;bool&gt;, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int)#2}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="34" y="372" width="2" height="15" fill="rgb(228,219,13)"/><text x="37.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="36" y="340" width="1" height="15" fill="rgb(249,192,30)"/><text x="39.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="36" y="356" width="1" height="15" fill="rgb(243,184,36)"/><text x="39.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="36" y="372" width="1" height="15" fill="rgb(232,75,22)"/><text x="39.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="36" y="388" width="1" height="15" fill="rgb(244,143,37)"/><text x="39.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="36" y="404" width="1" height="15" fill="rgb(234,165,15)"/><text x="39.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="36" y="420" width="1" height="15" fill="rgb(205,12,42)"/><text x="39.00" y="430.50"></text></g><g><title>0x7fa19e485028 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="36" y="436" width="1" height="15" fill="rgb(210,115,15)"/><text x="39.00" y="446.50"></text></g><g><title>0x7fa19e482c73 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="36" y="452" width="1" height="15" fill="rgb(214,10,12)"/><text x="39.00" y="462.50"></text></g><g><title>0x7fa19e482aa4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="36" y="468" width="1" height="15" fill="rgb(239,167,54)"/><text x="39.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="37" y="340" width="1" height="15" fill="rgb(225,123,43)"/><text x="40.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="37" y="356" width="1" height="15" fill="rgb(216,147,48)"/><text x="40.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="37" y="372" width="1" height="15" fill="rgb(242,79,40)"/><text x="40.00" y="382.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.84%)</title><rect x="38" y="340" width="10" height="15" fill="rgb(227,145,38)"/><text x="41.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.37%)</title><rect x="48" y="372" width="16" height="15" fill="rgb(215,134,41)"/><text x="51.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.84%)</title><rect x="54" y="388" width="10" height="15" fill="rgb(233,30,42)"/><text x="57.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="64" y="372" width="1" height="15" fill="rgb(239,169,46)"/><text x="67.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="64" y="388" width="1" height="15" fill="rgb(225,76,11)"/><text x="67.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="64" y="404" width="1" height="15" fill="rgb(241,194,41)"/><text x="67.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="64" y="420" width="1" height="15" fill="rgb(247,130,47)"/><text x="67.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="64" y="436" width="1" height="15" fill="rgb(213,138,22)"/><text x="67.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="64" y="452" width="1" height="15" fill="rgb(231,130,5)"/><text x="67.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="64" y="468" width="1" height="15" fill="rgb(213,167,19)"/><text x="67.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="64" y="484" width="1" height="15" fill="rgb(242,89,19)"/><text x="67.00" y="494.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="64" y="500" width="1" height="15" fill="rgb(240,107,3)"/><text x="67.00" y="510.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.58%)</title><rect x="48" y="340" width="19" height="15" fill="rgb(245,129,15)"/><text x="51.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.58%)</title><rect x="48" y="356" width="19" height="15" fill="rgb(238,131,53)"/><text x="51.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="65" y="372" width="2" height="15" fill="rgb(240,206,49)"/><text x="68.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="65" y="388" width="2" height="15" fill="rgb(240,25,26)"/><text x="68.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="65" y="404" width="2" height="15" fill="rgb(212,109,52)"/><text x="68.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="65" y="420" width="2" height="15" fill="rgb(208,221,29)"/><text x="68.00" y="430.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="67" y="340" width="1" height="15" fill="rgb(227,2,30)"/><text x="70.00" y="350.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.16%)</title><rect x="68" y="340" width="14" height="15" fill="rgb(230,203,23)"/><text x="71.00" y="350.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="82" y="340" width="1" height="15" fill="rgb(226,80,26)"/><text x="85.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="82" y="356" width="1" height="15" fill="rgb(250,79,4)"/><text x="85.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="82" y="372" width="1" height="15" fill="rgb(208,209,15)"/><text x="85.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="82" y="388" width="1" height="15" fill="rgb(221,62,10)"/><text x="85.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="82" y="404" width="1" height="15" fill="rgb(240,107,13)"/><text x="85.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="82" y="420" width="1" height="15" fill="rgb(233,175,27)"/><text x="85.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="82" y="436" width="1" height="15" fill="rgb(237,202,21)"/><text x="85.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="82" y="452" width="1" height="15" fill="rgb(222,31,50)"/><text x="85.00" y="462.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.58%)</title><rect x="83" y="340" width="18" height="15" fill="rgb(227,89,44)"/><text x="86.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.58%)</title><rect x="83" y="356" width="18" height="15" fill="rgb(208,183,33)"/><text x="86.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.58%)</title><rect x="83" y="372" width="18" height="15" fill="rgb(252,133,43)"/><text x="86.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.63%)</title><rect x="94" y="388" width="7" height="15" fill="rgb(236,30,6)"/><text x="97.00" y="398.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.32%)</title><rect x="101" y="340" width="4" height="15" fill="rgb(230,214,51)"/><text x="104.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.32%)</title><rect x="101" y="356" width="4" height="15" fill="rgb(221,56,31)"/><text x="104.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.32%)</title><rect x="101" y="372" width="4" height="15" fill="rgb(251,105,12)"/><text x="104.00" y="382.50"></text></g><g><title>0x7fa15e1099d0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="147" y="356" width="2" height="15" fill="rgb(216,119,8)"/><text x="150.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.42%)</title><rect x="149" y="356" width="5" height="15" fill="rgb(237,140,27)"/><text x="152.00" y="366.50"></text></g><g><title>0x7fa18df4fd50 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="248" y="404" width="1" height="15" fill="rgb(245,37,3)"/><text x="251.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (19 samples, 2.00%)</title><rect x="248" y="388" width="24" height="15" fill="rgb(244,37,43)"/><text x="251.00" y="398.50">o..</text></g><g><title>malloc (libc-2.29.so) (18 samples, 1.89%)</title><rect x="249" y="404" width="23" height="15" fill="rgb(233,147,27)"/><text x="252.00" y="414.50">m..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (112 samples, 11.79%)</title><rect x="154" y="356" width="139" height="15" fill="rgb(206,35,9)"/><text x="157.00" y="366.50">onnxruntime::ml::..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (55 samples, 5.79%)</title><rect x="224" y="372" width="69" height="15" fill="rgb(220,155,42)"/><text x="227.00" y="382.50">std::_R..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (17 samples, 1.79%)</title><rect x="272" y="388" width="21" height="15" fill="rgb(208,199,17)"/><text x="275.00" y="398.50"></text></g><g><title>0x7fa19e4a3d97 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="304" y="372" width="1" height="15" fill="rgb(226,181,1)"/><text x="307.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.16%)</title><rect x="293" y="356" width="13" height="15" fill="rgb(209,86,28)"/><text x="296.00" y="366.50"></text></g><g><title>0x7fa19e4a3dbe (libc-2.29.so) (1 samples, 0.11%)</title><rect x="305" y="372" width="1" height="15" fill="rgb(235,27,45)"/><text x="308.00" y="382.50"></text></g><g><title>0x7fa19e48390e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="314" y="372" width="1" height="15" fill="rgb(226,229,50)"/><text x="317.00" y="382.50"></text></g><g><title>0x7fa19e48392c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="315" y="372" width="1" height="15" fill="rgb(243,97,6)"/><text x="318.00" y="382.50"></text></g><g><title>0x7fa19e483945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="316" y="372" width="2" height="15" fill="rgb(242,95,4)"/><text x="319.00" y="382.50"></text></g><g><title>0x7fa19e483961 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="318" y="372" width="1" height="15" fill="rgb(232,171,17)"/><text x="321.00" y="382.50"></text></g><g><title>0x7fa19e483965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="319" y="372" width="1" height="15" fill="rgb(232,193,15)"/><text x="322.00" y="382.50"></text></g><g><title>0x7fa19e483991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="320" y="372" width="1" height="15" fill="rgb(226,187,9)"/><text x="323.00" y="382.50"></text></g><g><title>0x7fa19e483998 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="321" y="372" width="3" height="15" fill="rgb(218,182,0)"/><text x="324.00" y="382.50"></text></g><g><title>0x7fa19e483a33 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="324" y="372" width="1" height="15" fill="rgb(218,162,20)"/><text x="327.00" y="382.50"></text></g><g><title>0x7fa19e483bdc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="325" y="372" width="1" height="15" fill="rgb(229,65,22)"/><text x="328.00" y="382.50"></text></g><g><title>0x7fa19e483be0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="326" y="372" width="1" height="15" fill="rgb(214,112,32)"/><text x="329.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (10 samples, 1.05%)</title><rect x="327" y="372" width="13" height="15" fill="rgb(226,153,32)"/><text x="330.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="340" y="372" width="1" height="15" fill="rgb(239,92,8)"/><text x="343.00" y="382.50"></text></g><g><title>0x7fa15e1090f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="350" y="388" width="1" height="15" fill="rgb(219,96,52)"/><text x="353.00" y="398.50"></text></g><g><title>0x7fa19e483906 (libc-2.29.so) (4 samples, 0.42%)</title><rect x="351" y="388" width="5" height="15" fill="rgb(220,17,49)"/><text x="354.00" y="398.50"></text></g><g><title>0x7fa19e48391e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="356" y="388" width="1" height="15" fill="rgb(249,152,49)"/><text x="359.00" y="398.50"></text></g><g><title>0x7fa19e483929 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="357" y="388" width="2" height="15" fill="rgb(251,227,49)"/><text x="360.00" y="398.50"></text></g><g><title>0x7fa19e483965 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="359" y="388" width="2" height="15" fill="rgb(209,184,8)"/><text x="362.00" y="398.50"></text></g><g><title>0x7fa19e48397c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="361" y="388" width="1" height="15" fill="rgb(215,9,50)"/><text x="364.00" y="398.50"></text></g><g><title>0x7fa19e483a55 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="362" y="388" width="3" height="15" fill="rgb(246,14,2)"/><text x="365.00" y="398.50"></text></g><g><title>0x7fa19e483bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="365" y="388" width="1" height="15" fill="rgb(222,195,52)"/><text x="368.00" y="398.50"></text></g><g><title>0x7fa19e483be8 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="366" y="388" width="2" height="15" fill="rgb(251,178,53)"/><text x="369.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (53 samples, 5.58%)</title><rect x="306" y="356" width="66" height="15" fill="rgb(247,53,28)"/><text x="309.00" y="366.50">std::_R..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 2.63%)</title><rect x="341" y="372" width="31" height="15" fill="rgb(231,168,14)"/><text x="344.00" y="382.50">st..</text></g><g><title>free (libc-2.29.so) (3 samples, 0.32%)</title><rect x="368" y="388" width="4" height="15" fill="rgb(217,128,23)"/><text x="371.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (224 samples, 23.58%)</title><rect x="105" y="340" width="278" height="15" fill="rgb(208,155,32)"/><text x="108.00" y="350.50">onnxruntime::ml::TreeEnsembleClassifi..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (9 samples, 0.95%)</title><rect x="372" y="356" width="11" height="15" fill="rgb(234,200,23)"/><text x="375.00" y="366.50"></text></g><g><title>0x7fa15e109ba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="385" y="356" width="1" height="15" fill="rgb(236,82,47)"/><text x="388.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.21%)</title><rect x="386" y="356" width="2" height="15" fill="rgb(252,92,37)"/><text x="389.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="387" y="372" width="1" height="15" fill="rgb(207,139,33)"/><text x="390.00" y="382.50"></text></g><g><title>0x7fa19e4850a3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="387" y="388" width="1" height="15" fill="rgb(237,216,16)"/><text x="390.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 30.32%)</title><rect x="32" y="260" width="358" height="15" fill="rgb(216,174,7)"/><text x="35.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 30.32%)</title><rect x="32" y="276" width="358" height="15" fill="rgb(254,194,20)"/><text x="35.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (287 samples, 30.21%)</title><rect x="33" y="292" width="357" height="15" fill="rgb(251,221,44)"/><text x="36.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (287 samples, 30.21%)</title><rect x="33" y="308" width="357" height="15" fill="rgb(215,25,26)"/><text x="36.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntim..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (287 samples, 30.21%)</title><rect x="33" y="324" width="357" height="15" fill="rgb(247,175,44)"/><text x="36.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxru..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.53%)</title><rect x="383" y="340" width="7" height="15" fill="rgb(210,14,20)"/><text x="386.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="388" y="356" width="2" height="15" fill="rgb(213,68,4)"/><text x="391.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="388" y="372" width="2" height="15" fill="rgb(222,150,43)"/><text x="391.00" y="382.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="390" y="260" width="1" height="15" fill="rgb(216,189,10)"/><text x="393.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.11%)</title><rect x="390" y="276" width="1" height="15" fill="rgb(235,94,48)"/><text x="393.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="390" y="292" width="1" height="15" fill="rgb(224,56,24)"/><text x="393.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="390" y="308" width="1" height="15" fill="rgb(250,225,20)"/><text x="393.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="390" y="324" width="1" height="15" fill="rgb(253,178,36)"/><text x="393.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="390" y="340" width="1" height="15" fill="rgb(245,65,8)"/><text x="393.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="390" y="356" width="1" height="15" fill="rgb(209,38,40)"/><text x="393.00" y="366.50"></text></g><g><title>0x7fa19e485028 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="390" y="372" width="1" height="15" fill="rgb(221,161,51)"/><text x="393.00" y="382.50"></text></g><g><title>0x7fa19e482c14 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="390" y="388" width="1" height="15" fill="rgb(245,144,42)"/><text x="393.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.63%)</title><rect x="391" y="260" width="7" height="15" fill="rgb(206,42,19)"/><text x="394.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="397" y="276" width="1" height="15" fill="rgb(243,77,23)"/><text x="400.00" y="286.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (299 samples, 31.47%)</title><rect x="28" y="68" width="372" height="15" fill="rgb(206,173,18)"/><text x="31.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_m_cl..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (299 samples, 31.47%)</title><rect x="28" y="84" width="372" height="15" fill="rgb(251,206,26)"/><text x="31.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (299 samples, 31.47%)</title><rect x="28" y="100" width="372" height="15" fill="rgb(207,103,12)"/><text x="31.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_100..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (298 samples, 31.37%)</title><rect x="29" y="116" width="371" height="15" fill="rgb(248,0,29)"/><text x="32.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (297 samples, 31.26%)</title><rect x="31" y="132" width="369" height="15" fill="rgb(252,37,43)"/><text x="34.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (297 samples, 31.26%)</title><rect x="31" y="148" width="369" height="15" fill="rgb(228,47,7)"/><text x="34.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (297 samples, 31.26%)</title><rect x="31" y="164" width="369" height="15" fill="rgb(228,96,52)"/><text x="34.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (297 samples, 31.26%)</title><rect x="31" y="180" width="369" height="15" fill="rgb(234,207,41)"/><text x="34.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (297 samples, 31.26%)</title><rect x="31" y="196" width="369" height="15" fill="rgb(207,83,27)"/><text x="34.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (296 samples, 31.16%)</title><rect x="32" y="212" width="368" height="15" fill="rgb(214,63,4)"/><text x="35.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (296 samples, 31.16%)</title><rect x="32" y="228" width="368" height="15" fill="rgb(212,107,18)"/><text x="35.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrunti..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (296 samples, 31.16%)</title><rect x="32" y="244" width="368" height="15" fill="rgb(232,187,9)"/><text x="35.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::m..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="398" y="260" width="2" height="15" fill="rgb(233,14,54)"/><text x="401.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="398" y="276" width="2" height="15" fill="rgb(235,220,31)"/><text x="401.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="398" y="292" width="2" height="15" fill="rgb(220,65,15)"/><text x="401.00" y="302.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.11%)</title><rect x="439" y="196" width="2" height="15" fill="rgb(250,34,22)"/><text x="442.00" y="206.50"></text></g><g><title>array_ravel (methods.c) (1 samples, 0.11%)</title><rect x="445" y="228" width="2" height="15" fill="rgb(234,187,5)"/><text x="448.00" y="238.50"></text></g><g><title>PyArray_Ravel (shape.c) (1 samples, 0.11%)</title><rect x="445" y="244" width="2" height="15" fill="rgb(214,190,36)"/><text x="448.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.11%)</title><rect x="445" y="260" width="2" height="15" fill="rgb(206,154,8)"/><text x="448.00" y="270.50"></text></g><g><title>_fix_unknown_dimension (shape.c) (1 samples, 0.11%)</title><rect x="445" y="276" width="2" height="15" fill="rgb(218,154,24)"/><text x="448.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.11%)</title><rect x="447" y="292" width="1" height="15" fill="rgb(220,113,7)"/><text x="450.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.11%)</title><rect x="447" y="308" width="1" height="15" fill="rgb(244,222,50)"/><text x="450.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.11%)</title><rect x="447" y="324" width="1" height="15" fill="rgb(254,187,17)"/><text x="450.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (3 samples, 0.32%)</title><rect x="445" y="212" width="4" height="15" fill="rgb(226,17,25)"/><text x="448.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.21%)</title><rect x="447" y="228" width="2" height="15" fill="rgb(211,122,52)"/><text x="450.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (2 samples, 0.21%)</title><rect x="447" y="244" width="2" height="15" fill="rgb(227,148,6)"/><text x="450.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.21%)</title><rect x="447" y="260" width="2" height="15" fill="rgb(250,225,34)"/><text x="450.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.21%)</title><rect x="447" y="276" width="2" height="15" fill="rgb(248,136,37)"/><text x="450.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.11%)</title><rect x="448" y="292" width="1" height="15" fill="rgb(215,160,15)"/><text x="451.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.11%)</title><rect x="448" y="308" width="1" height="15" fill="rgb(227,46,52)"/><text x="451.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.11%)</title><rect x="449" y="212" width="1" height="15" fill="rgb(242,127,6)"/><text x="452.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.11%)</title><rect x="449" y="228" width="1" height="15" fill="rgb(220,38,0)"/><text x="452.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.11%)</title><rect x="449" y="244" width="1" height="15" fill="rgb(245,45,50)"/><text x="452.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.11%)</title><rect x="449" y="260" width="1" height="15" fill="rgb(226,34,36)"/><text x="452.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.11%)</title><rect x="449" y="276" width="1" height="15" fill="rgb(251,176,33)"/><text x="452.00" y="286.50"></text></g><g><title>0x7fa19e4a3d94 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="449" y="292" width="1" height="15" fill="rgb(214,22,38)"/><text x="452.00" y="302.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.11%)</title><rect x="450" y="260" width="2" height="15" fill="rgb(216,60,46)"/><text x="453.00" y="270.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.11%)</title><rect x="450" y="276" width="2" height="15" fill="rgb(230,52,13)"/><text x="453.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.11%)</title><rect x="450" y="292" width="2" height="15" fill="rgb(220,213,6)"/><text x="453.00" y="302.50"></text></g><g><title>gentype_alloc (scalartypes.c.src) (1 samples, 0.11%)</title><rect x="450" y="308" width="2" height="15" fill="rgb(249,80,39)"/><text x="453.00" y="318.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.21%)</title><rect x="450" y="244" width="3" height="15" fill="rgb(230,202,16)"/><text x="453.00" y="254.50"></text></g><g><title>array_length (mapping.c) (1 samples, 0.11%)</title><rect x="452" y="260" width="1" height="15" fill="rgb(207,205,12)"/><text x="455.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (4 samples, 0.42%)</title><rect x="450" y="212" width="5" height="15" fill="rgb(246,221,1)"/><text x="453.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 0.42%)</title><rect x="450" y="228" width="5" height="15" fill="rgb(235,208,33)"/><text x="453.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.21%)</title><rect x="453" y="244" width="2" height="15" fill="rgb(245,177,16)"/><text x="456.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.21%)</title><rect x="453" y="260" width="2" height="15" fill="rgb(207,126,32)"/><text x="456.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.21%)</title><rect x="453" y="276" width="2" height="15" fill="rgb(241,164,10)"/><text x="456.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="457" y="276" width="1" height="15" fill="rgb(240,86,3)"/><text x="460.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="457" y="292" width="1" height="15" fill="rgb(212,31,53)"/><text x="460.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.11%)</title><rect x="458" y="276" width="1" height="15" fill="rgb(226,170,10)"/><text x="461.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.11%)</title><rect x="458" y="292" width="1" height="15" fill="rgb(241,212,20)"/><text x="461.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (5 samples, 0.53%)</title><rect x="455" y="212" width="7" height="15" fill="rgb(217,11,51)"/><text x="458.00" y="222.50"></text></g><g><title>array_add (number.c) (4 samples, 0.42%)</title><rect x="457" y="228" width="5" height="15" fill="rgb(241,104,21)"/><text x="460.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.42%)</title><rect x="457" y="244" width="5" height="15" fill="rgb(209,51,7)"/><text x="460.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.42%)</title><rect x="457" y="260" width="5" height="15" fill="rgb(230,200,4)"/><text x="460.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.21%)</title><rect x="459" y="276" width="3" height="15" fill="rgb(251,14,45)"/><text x="462.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.21%)</title><rect x="459" y="292" width="3" height="15" fill="rgb(233,215,19)"/><text x="462.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (2 samples, 0.21%)</title><rect x="459" y="308" width="3" height="15" fill="rgb(221,126,9)"/><text x="462.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (2 samples, 0.21%)</title><rect x="459" y="324" width="3" height="15" fill="rgb(226,151,9)"/><text x="462.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (2 samples, 0.21%)</title><rect x="459" y="340" width="3" height="15" fill="rgb(222,206,23)"/><text x="462.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.21%)</title><rect x="459" y="356" width="3" height="15" fill="rgb(207,34,8)"/><text x="462.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.11%)</title><rect x="462" y="212" width="1" height="15" fill="rgb(237,57,8)"/><text x="465.00" y="222.50"></text></g><g><title>array_size_get (getset.c) (2 samples, 0.21%)</title><rect x="472" y="244" width="2" height="15" fill="rgb(234,172,4)"/><text x="475.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="474" y="260" width="1" height="15" fill="rgb(242,192,7)"/><text x="477.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="475" y="292" width="2" height="15" fill="rgb(220,112,42)"/><text x="478.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.11%)</title><rect x="475" y="308" width="2" height="15" fill="rgb(205,198,8)"/><text x="478.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.11%)</title><rect x="475" y="324" width="2" height="15" fill="rgb(235,157,3)"/><text x="478.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.21%)</title><rect x="475" y="276" width="3" height="15" fill="rgb(209,33,27)"/><text x="478.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="477" y="292" width="1" height="15" fill="rgb(254,159,41)"/><text x="480.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="478" y="292" width="1" height="15" fill="rgb(223,197,31)"/><text x="481.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="480" y="324" width="2" height="15" fill="rgb(222,36,37)"/><text x="483.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.21%)</title><rect x="482" y="324" width="2" height="15" fill="rgb(214,129,45)"/><text x="485.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.11%)</title><rect x="483" y="340" width="1" height="15" fill="rgb(234,199,7)"/><text x="486.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="483" y="356" width="1" height="15" fill="rgb(247,75,29)"/><text x="486.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="483" y="372" width="1" height="15" fill="rgb(216,60,35)"/><text x="486.00" y="382.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h) (1 samples, 0.11%)</title><rect x="485" y="340" width="1" height="15" fill="rgb(239,201,20)"/><text x="488.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 0.63%)</title><rect x="480" y="308" width="8" height="15" fill="rgb(246,82,17)"/><text x="483.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (3 samples, 0.32%)</title><rect x="484" y="324" width="4" height="15" fill="rgb(210,92,36)"/><text x="487.00" y="334.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.11%)</title><rect x="486" y="340" width="2" height="15" fill="rgb(218,187,19)"/><text x="489.00" y="350.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="488" y="324" width="1" height="15" fill="rgb(208,174,22)"/><text x="491.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="488" y="340" width="1" height="15" fill="rgb(244,198,33)"/><text x="491.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 0.74%)</title><rect x="488" y="308" width="8" height="15" fill="rgb(242,59,33)"/><text x="491.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 0.63%)</title><rect x="489" y="324" width="7" height="15" fill="rgb(253,102,7)"/><text x="492.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (6 samples, 0.63%)</title><rect x="489" y="340" width="7" height="15" fill="rgb(235,62,5)"/><text x="492.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="495" y="356" width="1" height="15" fill="rgb(214,157,35)"/><text x="498.00" y="366.50"></text></g><g><title>_mm_set1_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="498" y="324" width="1" height="15" fill="rgb(240,60,10)"/><text x="501.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (29 samples, 3.05%)</title><rect x="464" y="228" width="36" height="15" fill="rgb(220,28,2)"/><text x="467.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (21 samples, 2.21%)</title><rect x="474" y="244" width="26" height="15" fill="rgb(230,45,14)"/><text x="477.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (20 samples, 2.11%)</title><rect x="475" y="260" width="25" height="15" fill="rgb(249,216,37)"/><text x="478.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (18 samples, 1.89%)</title><rect x="478" y="276" width="22" height="15" fill="rgb(241,105,8)"/><text x="481.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (17 samples, 1.79%)</title><rect x="479" y="292" width="21" height="15" fill="rgb(228,105,36)"/><text x="482.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src) (3 samples, 0.32%)</title><rect x="496" y="308" width="4" height="15" fill="rgb(236,215,19)"/><text x="499.00" y="318.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="499" y="324" width="1" height="15" fill="rgb(209,72,8)"/><text x="502.00" y="334.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="500" y="276" width="1" height="15" fill="rgb(212,204,29)"/><text x="503.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="500" y="292" width="1" height="15" fill="rgb(252,25,2)"/><text x="503.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="500" y="308" width="1" height="15" fill="rgb(254,56,28)"/><text x="503.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="500" y="324" width="1" height="15" fill="rgb(233,105,38)"/><text x="503.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.11%)</title><rect x="500" y="340" width="1" height="15" fill="rgb(243,135,11)"/><text x="503.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.11%)</title><rect x="500" y="356" width="1" height="15" fill="rgb(222,69,4)"/><text x="503.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (2 samples, 0.21%)</title><rect x="500" y="228" width="3" height="15" fill="rgb(216,14,5)"/><text x="503.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (2 samples, 0.21%)</title><rect x="500" y="244" width="3" height="15" fill="rgb(205,199,0)"/><text x="503.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (2 samples, 0.21%)</title><rect x="500" y="260" width="3" height="15" fill="rgb(249,67,9)"/><text x="503.00" y="270.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.11%)</title><rect x="501" y="276" width="2" height="15" fill="rgb(252,41,41)"/><text x="504.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.11%)</title><rect x="501" y="292" width="2" height="15" fill="rgb(248,147,41)"/><text x="504.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.11%)</title><rect x="501" y="308" width="2" height="15" fill="rgb(243,109,36)"/><text x="504.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="501" y="324" width="2" height="15" fill="rgb(244,63,15)"/><text x="504.00" y="334.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="505" y="276" width="1" height="15" fill="rgb(213,104,31)"/><text x="508.00" y="286.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.11%)</title><rect x="508" y="324" width="1" height="15" fill="rgb(207,9,47)"/><text x="511.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="508" y="340" width="1" height="15" fill="rgb(240,153,4)"/><text x="511.00" y="350.50"></text></g><g><title>0x7fa19e43b7a5 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="508" y="356" width="1" height="15" fill="rgb(223,135,21)"/><text x="511.00" y="366.50"></text></g><g><title>0x7fa19e43b7c2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="508" y="372" width="1" height="15" fill="rgb(234,76,0)"/><text x="511.00" y="382.50"></text></g><g><title>0x7fa19e43ba6f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="508" y="388" width="1" height="15" fill="rgb(236,50,53)"/><text x="511.00" y="398.50"></text></g><g><title>0x7fa19e4a3d50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="508" y="404" width="1" height="15" fill="rgb(232,3,43)"/><text x="511.00" y="414.50"></text></g><g><title>0x7fa19e483be4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="510" y="340" width="1" height="15" fill="rgb(212,168,16)"/><text x="513.00" y="350.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (5 samples, 0.53%)</title><rect x="506" y="292" width="7" height="15" fill="rgb(220,148,12)"/><text x="509.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (5 samples, 0.53%)</title><rect x="506" y="308" width="7" height="15" fill="rgb(230,35,6)"/><text x="509.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (3 samples, 0.32%)</title><rect x="509" y="324" width="4" height="15" fill="rgb(226,67,37)"/><text x="512.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="511" y="340" width="2" height="15" fill="rgb(215,168,6)"/><text x="514.00" y="350.50"></text></g><g><title>0x7fa19e485059 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="511" y="356" width="2" height="15" fill="rgb(223,210,27)"/><text x="514.00" y="366.50"></text></g><g><title>0x7fa19e605960 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="515" y="324" width="1" height="15" fill="rgb(233,98,40)"/><text x="518.00" y="334.50"></text></g><g><title>0x7fa19e605979 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="516" y="324" width="2" height="15" fill="rgb(229,141,35)"/><text x="519.00" y="334.50"></text></g><g><title>0x7fa19e605997 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="518" y="324" width="1" height="15" fill="rgb(221,195,42)"/><text x="521.00" y="334.50"></text></g><g><title>0x7fa19e6059af (libm-2.29.so) (2 samples, 0.21%)</title><rect x="519" y="324" width="2" height="15" fill="rgb(235,20,9)"/><text x="522.00" y="334.50"></text></g><g><title>0x7fa19e6059bd (libm-2.29.so) (1 samples, 0.11%)</title><rect x="521" y="324" width="1" height="15" fill="rgb(214,40,40)"/><text x="524.00" y="334.50"></text></g><g><title>0x7fa19e6059cc (libm-2.29.so) (1 samples, 0.11%)</title><rect x="522" y="324" width="2" height="15" fill="rgb(229,103,47)"/><text x="525.00" y="334.50"></text></g><g><title>0x7fa19e6059d4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="524" y="324" width="1" height="15" fill="rgb(226,181,45)"/><text x="527.00" y="334.50"></text></g><g><title>0x7fa19e6059e4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="525" y="324" width="1" height="15" fill="rgb(216,93,0)"/><text x="528.00" y="334.50"></text></g><g><title>0x7fa19e6059f8 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="526" y="324" width="1" height="15" fill="rgb(240,115,21)"/><text x="529.00" y="334.50"></text></g><g><title>0x7fa19e605a19 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="527" y="324" width="3" height="15" fill="rgb(208,119,19)"/><text x="530.00" y="334.50"></text></g><g><title>0x7fa19e605a1d (libm-2.29.so) (3 samples, 0.32%)</title><rect x="530" y="324" width="4" height="15" fill="rgb(241,215,46)"/><text x="533.00" y="334.50"></text></g><g><title>0x7fa19e605a21 (libm-2.29.so) (5 samples, 0.53%)</title><rect x="534" y="324" width="6" height="15" fill="rgb(233,212,50)"/><text x="537.00" y="334.50"></text></g><g><title>0x7fa19e605a28 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="540" y="324" width="1" height="15" fill="rgb(245,154,47)"/><text x="543.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (34 samples, 3.58%)</title><rect x="503" y="228" width="42" height="15" fill="rgb(237,121,54)"/><text x="506.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (33 samples, 3.47%)</title><rect x="504" y="244" width="41" height="15" fill="rgb(215,63,13)"/><text x="507.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (32 samples, 3.37%)</title><rect x="505" y="260" width="40" height="15" fill="rgb(247,163,20)"/><text x="508.00" y="270.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (31 samples, 3.26%)</title><rect x="506" y="276" width="39" height="15" fill="rgb(240,210,5)"/><text x="509.00" y="286.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (26 samples, 2.74%)</title><rect x="513" y="292" width="32" height="15" fill="rgb(220,87,25)"/><text x="516.00" y="302.50">tr..</text></g><g><title>FLOAT_log (loops.c.src) (26 samples, 2.74%)</title><rect x="513" y="308" width="32" height="15" fill="rgb(218,80,54)"/><text x="516.00" y="318.50">FL..</text></g><g><title>npy_logf (npy_math_internal.h.src) (3 samples, 0.32%)</title><rect x="541" y="324" width="4" height="15" fill="rgb(239,78,13)"/><text x="544.00" y="334.50"></text></g><g><title>_sum_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="547" y="260" width="2" height="15" fill="rgb(226,98,8)"/><text x="550.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="557" y="324" width="2" height="15" fill="rgb(234,137,7)"/><text x="560.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="557" y="340" width="2" height="15" fill="rgb(254,217,27)"/><text x="560.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="557" y="356" width="2" height="15" fill="rgb(252,28,37)"/><text x="560.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="557" y="372" width="2" height="15" fill="rgb(214,178,54)"/><text x="560.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="557" y="388" width="2" height="15" fill="rgb(222,160,15)"/><text x="560.00" y="398.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.11%)</title><rect x="561" y="340" width="1" height="15" fill="rgb(217,159,44)"/><text x="564.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.11%)</title><rect x="561" y="356" width="1" height="15" fill="rgb(219,135,48)"/><text x="564.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.11%)</title><rect x="561" y="372" width="1" height="15" fill="rgb(241,99,54)"/><text x="564.00" y="382.50"></text></g><g><title>0x7fa19e4a414a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="562" y="388" width="1" height="15" fill="rgb(234,216,17)"/><text x="565.00" y="398.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="563" y="388" width="2" height="15" fill="rgb(238,77,20)"/><text x="566.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="563" y="404" width="2" height="15" fill="rgb(205,28,54)"/><text x="566.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.32%)</title><rect x="562" y="372" width="4" height="15" fill="rgb(253,46,42)"/><text x="565.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="565" y="388" width="1" height="15" fill="rgb(207,67,26)"/><text x="568.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="566" y="372" width="1" height="15" fill="rgb(216,121,22)"/><text x="569.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="566" y="388" width="1" height="15" fill="rgb(221,28,12)"/><text x="569.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="566" y="404" width="1" height="15" fill="rgb(236,201,31)"/><text x="569.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="566" y="420" width="1" height="15" fill="rgb(221,23,41)"/><text x="569.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="566" y="436" width="1" height="15" fill="rgb(211,134,31)"/><text x="569.00" y="446.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="568" y="420" width="2" height="15" fill="rgb(233,32,23)"/><text x="571.00" y="430.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.32%)</title><rect x="567" y="372" width="4" height="15" fill="rgb(248,155,36)"/><text x="570.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.32%)</title><rect x="567" y="388" width="4" height="15" fill="rgb(222,139,17)"/><text x="570.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (3 samples, 0.32%)</title><rect x="567" y="404" width="4" height="15" fill="rgb(209,108,36)"/><text x="570.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="570" y="420" width="1" height="15" fill="rgb(217,203,9)"/><text x="573.00" y="430.50"></text></g><g><title>FLOAT_add (loops.c.src) (14 samples, 1.47%)</title><rect x="573" y="388" width="18" height="15" fill="rgb(218,103,44)"/><text x="576.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (7 samples, 0.74%)</title><rect x="582" y="404" width="9" height="15" fill="rgb(229,183,52)"/><text x="585.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (42 samples, 4.42%)</title><rect x="545" y="228" width="52" height="15" fill="rgb(235,125,10)"/><text x="548.00" y="238.50">_run ..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (42 samples, 4.42%)</title><rect x="545" y="244" width="52" height="15" fill="rgb(215,69,53)"/><text x="548.00" y="254.50">sum (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (39 samples, 4.11%)</title><rect x="549" y="260" width="48" height="15" fill="rgb(252,203,23)"/><text x="552.00" y="270.50">arra..</text></g><g><title>sum (numpy/core/fromnumeric.py) (38 samples, 4.00%)</title><rect x="550" y="276" width="47" height="15" fill="rgb(221,226,30)"/><text x="553.00" y="286.50">sum ..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (33 samples, 3.47%)</title><rect x="556" y="292" width="41" height="15" fill="rgb(237,178,37)"/><text x="559.00" y="302.50">_wr..</text></g><g><title>ufunc_reduce (ufunc_object.c) (32 samples, 3.37%)</title><rect x="557" y="308" width="40" height="15" fill="rgb(220,91,8)"/><text x="560.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (31 samples, 3.26%)</title><rect x="559" y="324" width="38" height="15" fill="rgb(216,147,7)"/><text x="562.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (28 samples, 2.95%)</title><rect x="562" y="340" width="35" height="15" fill="rgb(224,187,20)"/><text x="565.00" y="350.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (28 samples, 2.95%)</title><rect x="562" y="356" width="35" height="15" fill="rgb(236,57,13)"/><text x="565.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (21 samples, 2.21%)</title><rect x="571" y="372" width="26" height="15" fill="rgb(235,194,2)"/><text x="574.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (5 samples, 0.53%)</title><rect x="591" y="388" width="6" height="15" fill="rgb(237,203,30)"/><text x="594.00" y="398.50"></text></g><g><title>0x7fa15efe1422 (?) (1 samples, 0.11%)</title><rect x="597" y="244" width="1" height="15" fill="rgb(219,220,50)"/><text x="600.00" y="254.50"></text></g><g><title>0x7fa15efe789e (?) (1 samples, 0.11%)</title><rect x="597" y="260" width="1" height="15" fill="rgb(245,69,50)"/><text x="600.00" y="270.50"></text></g><g><title>0x7fa15efe774f (?) (1 samples, 0.11%)</title><rect x="597" y="276" width="1" height="15" fill="rgb(222,170,8)"/><text x="600.00" y="286.50"></text></g><g><title>0x7fa15efeda3a (?) (1 samples, 0.11%)</title><rect x="597" y="292" width="1" height="15" fill="rgb(217,51,20)"/><text x="600.00" y="302.50"></text></g><g><title>0x7fa16843fcff (?) (1 samples, 0.11%)</title><rect x="597" y="308" width="1" height="15" fill="rgb(243,24,32)"/><text x="600.00" y="318.50"></text></g><g><title>0x7fa15efe878c (?) (1 samples, 0.11%)</title><rect x="597" y="324" width="1" height="15" fill="rgb(229,62,7)"/><text x="600.00" y="334.50"></text></g><g><title>0x7fa15efd464c (?) (1 samples, 0.11%)</title><rect x="597" y="340" width="1" height="15" fill="rgb(226,77,51)"/><text x="600.00" y="350.50"></text></g><g><title>pybind11::array_t&lt;long, 16&gt;::array_t (numpy.h) (1 samples, 0.11%)</title><rect x="598" y="436" width="2" height="15" fill="rgb(209,57,2)"/><text x="601.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.11%)</title><rect x="598" y="452" width="2" height="15" fill="rgb(253,90,36)"/><text x="601.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.11%)</title><rect x="598" y="468" width="2" height="15" fill="rgb(228,93,27)"/><text x="601.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;long&gt; (numpy.h) (1 samples, 0.11%)</title><rect x="598" y="484" width="2" height="15" fill="rgb(249,118,36)"/><text x="601.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.11%)</title><rect x="598" y="500" width="2" height="15" fill="rgb(240,36,36)"/><text x="601.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.11%)</title><rect x="598" y="516" width="2" height="15" fill="rgb(249,210,6)"/><text x="601.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.11%)</title><rect x="598" y="532" width="2" height="15" fill="rgb(208,72,13)"/><text x="601.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.11%)</title><rect x="598" y="548" width="2" height="15" fill="rgb(227,174,13)"/><text x="601.00" y="558.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="598" y="564" width="2" height="15" fill="rgb(244,79,47)"/><text x="601.00" y="574.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="598" y="580" width="2" height="15" fill="rgb(208,98,27)"/><text x="601.00" y="590.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="598" y="596" width="2" height="15" fill="rgb(220,177,23)"/><text x="601.00" y="606.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="598" y="612" width="2" height="15" fill="rgb(213,123,46)"/><text x="601.00" y="622.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="598" y="628" width="2" height="15" fill="rgb(241,38,2)"/><text x="601.00" y="638.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="598" y="644" width="2" height="15" fill="rgb(247,183,42)"/><text x="601.00" y="654.50"></text></g><g><title>0x7fa19e485028 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="598" y="660" width="2" height="15" fill="rgb(229,35,51)"/><text x="601.00" y="670.50"></text></g><g><title>0x7fa19e482c28 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="598" y="676" width="2" height="15" fill="rgb(235,30,25)"/><text x="601.00" y="686.50"></text></g><g><title>0x7fa16844aea0 (libgomp.so.1.0.0) (5 samples, 0.53%)</title><rect x="600" y="468" width="6" height="15" fill="rgb(252,225,4)"/><text x="603.00" y="478.50"></text></g><g><title>0x7fa16844aea9 (libgomp.so.1.0.0) (17 samples, 1.79%)</title><rect x="606" y="468" width="21" height="15" fill="rgb(216,11,18)"/><text x="609.00" y="478.50"></text></g><g><title>0x7fa16844aeab (libgomp.so.1.0.0) (13 samples, 1.37%)</title><rect x="627" y="468" width="16" height="15" fill="rgb(226,57,44)"/><text x="630.00" y="478.50"></text></g><g><title>0x7fa168449ab9 (libgomp.so.1.0.0) (48 samples, 5.05%)</title><rect x="600" y="452" width="59" height="15" fill="rgb(244,140,40)"/><text x="603.00" y="462.50">0x7fa1..</text></g><g><title>0x7fa16844aead (libgomp.so.1.0.0) (13 samples, 1.37%)</title><rect x="643" y="468" width="16" height="15" fill="rgb(233,54,51)"/><text x="646.00" y="478.50"></text></g><g><title>0x7fa16844acf9 (libgomp.so.1.0.0) (6 samples, 0.63%)</title><rect x="659" y="484" width="8" height="15" fill="rgb(228,65,13)"/><text x="662.00" y="494.50"></text></g><g><title>0x7fa16844acfb (libgomp.so.1.0.0) (4 samples, 0.42%)</title><rect x="667" y="484" width="5" height="15" fill="rgb(228,162,40)"/><text x="670.00" y="494.50"></text></g><g><title>0x7fa16844acfd (libgomp.so.1.0.0) (5 samples, 0.53%)</title><rect x="672" y="484" width="6" height="15" fill="rgb(242,187,42)"/><text x="675.00" y="494.50"></text></g><g><title>0x7fa168448daa (libgomp.so.1.0.0) (16 samples, 1.68%)</title><rect x="659" y="468" width="20" height="15" fill="rgb(206,141,44)"/><text x="662.00" y="478.50"></text></g><g><title>0x7fa16844ad6d (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="678" y="484" width="1" height="15" fill="rgb(218,23,23)"/><text x="681.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::vector (stl_bvector.h) (1 samples, 0.11%)</title><rect x="680" y="484" width="1" height="15" fill="rgb(225,209,33)"/><text x="683.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_initialize (stl_bvector.h) (1 samples, 0.11%)</title><rect x="680" y="500" width="1" height="15" fill="rgb(241,91,18)"/><text x="683.00" y="510.50"></text></g><g><title>std::_Bit_iterator::operator+ (stl_bvector.h) (1 samples, 0.11%)</title><rect x="680" y="516" width="1" height="15" fill="rgb(215,116,9)"/><text x="683.00" y="526.50"></text></g><g><title>std::_Bit_iterator::operator+= (stl_bvector.h) (1 samples, 0.11%)</title><rect x="680" y="532" width="1" height="15" fill="rgb(253,29,50)"/><text x="683.00" y="542.50"></text></g><g><title>std::_Bit_iterator_base::_M_incr (stl_bvector.h) (1 samples, 0.11%)</title><rect x="680" y="548" width="1" height="15" fill="rgb(225,38,0)"/><text x="683.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="680" y="564" width="1" height="15" fill="rgb(214,73,33)"/><text x="683.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="680" y="580" width="1" height="15" fill="rgb(215,14,8)"/><text x="683.00" y="590.50"></text></g><g><title>0x7fa19e485700 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="680" y="596" width="1" height="15" fill="rgb(254,186,20)"/><text x="683.00" y="606.50"></text></g><g><title>0x7fa19e482acd (libc-2.29.so) (1 samples, 0.11%)</title><rect x="680" y="612" width="1" height="15" fill="rgb(244,26,7)"/><text x="683.00" y="622.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (196 samples, 20.63%)</title><rect x="441" y="196" width="243" height="15" fill="rgb(210,218,22)"/><text x="444.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (178 samples, 18.74%)</title><rect x="463" y="212" width="221" height="15" fill="rgb(216,76,34)"/><text x="466.00" y="222.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (70 samples, 7.37%)</title><rect x="597" y="228" width="87" height="15" fill="rgb(242,38,47)"/><text x="600.00" y="238.50">_run (mlpr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (69 samples, 7.26%)</title><rect x="598" y="244" width="86" height="15" fill="rgb(251,23,9)"/><text x="601.00" y="254.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (69 samples, 7.26%)</title><rect x="598" y="260" width="86" height="15" fill="rgb(224,202,6)"/><text x="601.00" y="270.50">void pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (69 samples, 7.26%)</title><rect x="598" y="276" width="86" height="15" fill="rgb(233,205,0)"/><text x="601.00" y="286.50">void pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (69 samples, 7.26%)</title><rect x="598" y="292" width="86" height="15" fill="rgb(240,26,35)"/><text x="601.00" y="302.50">pybind11::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (69 samples, 7.26%)</title><rect x="598" y="308" width="86" height="15" fill="rgb(247,88,38)"/><text x="601.00" y="318.50">pybind11::..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (69 samples, 7.26%)</title><rect x="598" y="324" width="86" height="15" fill="rgb(249,78,23)"/><text x="601.00" y="334.50">pybind11::..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (69 samples, 7.26%)</title><rect x="598" y="340" width="86" height="15" fill="rgb(208,15,40)"/><text x="601.00" y="350.50">pybind11::..</text></g><g><title>pybind11::array::~array (numpy.h) (69 samples, 7.26%)</title><rect x="598" y="356" width="86" height="15" fill="rgb(239,213,39)"/><text x="601.00" y="366.50">pybind11::..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (69 samples, 7.26%)</title><rect x="598" y="372" width="86" height="15" fill="rgb(230,28,37)"/><text x="601.00" y="382.50">pybind11::..</text></g><g><title>pybind11::object::~object (pytypes.h) (69 samples, 7.26%)</title><rect x="598" y="388" width="86" height="15" fill="rgb(224,177,17)"/><text x="601.00" y="398.50">pybind11::..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (69 samples, 7.26%)</title><rect x="598" y="404" width="86" height="15" fill="rgb(249,163,46)"/><text x="601.00" y="414.50">pybind11::..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (69 samples, 7.26%)</title><rect x="598" y="420" width="86" height="15" fill="rgb(250,183,9)"/><text x="601.00" y="430.50">RuntimeTre..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (68 samples, 7.16%)</title><rect x="600" y="436" width="84" height="15" fill="rgb(219,172,24)"/><text x="603.00" y="446.50">pybind11:..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (20 samples, 2.11%)</title><rect x="659" y="452" width="25" height="15" fill="rgb(239,26,9)"/><text x="662.00" y="462.50">G..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (4 samples, 0.42%)</title><rect x="679" y="468" width="5" height="15" fill="rgb(250,74,38)"/><text x="682.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h) (2 samples, 0.21%)</title><rect x="681" y="484" width="3" height="15" fill="rgb(219,188,6)"/><text x="684.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h) (2 samples, 0.21%)</title><rect x="681" y="500" width="3" height="15" fill="rgb(227,2,46)"/><text x="684.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h) (2 samples, 0.21%)</title><rect x="681" y="516" width="3" height="15" fill="rgb(232,11,7)"/><text x="684.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.21%)</title><rect x="681" y="532" width="3" height="15" fill="rgb(222,214,27)"/><text x="684.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.21%)</title><rect x="681" y="548" width="3" height="15" fill="rgb(226,156,22)"/><text x="684.00" y="558.50"></text></g><g><title>0x7fa19e484d27 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="683" y="564" width="1" height="15" fill="rgb(252,165,27)"/><text x="686.00" y="574.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="691" y="244" width="2" height="15" fill="rgb(207,134,36)"/><text x="694.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="703" y="388" width="1" height="15" fill="rgb(212,114,9)"/><text x="706.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="703" y="404" width="1" height="15" fill="rgb(249,198,48)"/><text x="706.00" y="414.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.11%)</title><rect x="703" y="420" width="1" height="15" fill="rgb(240,4,46)"/><text x="706.00" y="430.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.11%)</title><rect x="704" y="388" width="1" height="15" fill="rgb(215,73,26)"/><text x="707.00" y="398.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (9 samples, 0.95%)</title><rect x="706" y="420" width="12" height="15" fill="rgb(228,79,24)"/><text x="709.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="718" y="420" width="1" height="15" fill="rgb(212,1,37)"/><text x="721.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="718" y="436" width="1" height="15" fill="rgb(225,119,45)"/><text x="721.00" y="446.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="719" y="420" width="1" height="15" fill="rgb(218,175,50)"/><text x="722.00" y="430.50"></text></g><g><title>0x7fa19e483b05 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="719" y="436" width="1" height="15" fill="rgb(243,201,40)"/><text x="722.00" y="446.50"></text></g><g><title>0x7fa19e482ae2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="719" y="452" width="1" height="15" fill="rgb(220,227,46)"/><text x="722.00" y="462.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="720" y="436" width="1" height="15" fill="rgb(228,102,2)"/><text x="723.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="720" y="452" width="1" height="15" fill="rgb(238,11,12)"/><text x="723.00" y="462.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src) (4 samples, 0.42%)</title><rect x="721" y="468" width="5" height="15" fill="rgb(245,196,44)"/><text x="724.00" y="478.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 0.63%)</title><rect x="720" y="420" width="7" height="15" fill="rgb(239,115,17)"/><text x="723.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.53%)</title><rect x="721" y="436" width="6" height="15" fill="rgb(205,141,34)"/><text x="724.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.53%)</title><rect x="721" y="452" width="6" height="15" fill="rgb(254,98,28)"/><text x="724.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="726" y="468" width="1" height="15" fill="rgb(223,56,8)"/><text x="729.00" y="478.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (2 samples, 0.21%)</title><rect x="727" y="420" width="3" height="15" fill="rgb(216,127,47)"/><text x="730.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (26 samples, 2.74%)</title><rect x="703" y="372" width="32" height="15" fill="rgb(244,166,38)"/><text x="706.00" y="382.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (24 samples, 2.53%)</title><rect x="705" y="388" width="30" height="15" fill="rgb(232,201,54)"/><text x="708.00" y="398.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (24 samples, 2.53%)</title><rect x="705" y="404" width="30" height="15" fill="rgb(240,172,48)"/><text x="708.00" y="414.50">it..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (4 samples, 0.42%)</title><rect x="730" y="420" width="5" height="15" fill="rgb(242,17,1)"/><text x="733.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (4 samples, 0.42%)</title><rect x="730" y="436" width="5" height="15" fill="rgb(238,132,22)"/><text x="733.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src) (4 samples, 0.42%)</title><rect x="730" y="452" width="5" height="15" fill="rgb(220,75,49)"/><text x="733.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (4 samples, 0.42%)</title><rect x="730" y="468" width="5" height="15" fill="rgb(250,15,0)"/><text x="733.00" y="478.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (27 samples, 2.84%)</title><rect x="703" y="340" width="33" height="15" fill="rgb(233,0,23)"/><text x="706.00" y="350.50">_c..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (27 samples, 2.84%)</title><rect x="703" y="356" width="33" height="15" fill="rgb(236,32,21)"/><text x="706.00" y="366.50">uf..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="735" y="372" width="1" height="15" fill="rgb(215,90,0)"/><text x="738.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="735" y="388" width="1" height="15" fill="rgb(222,48,2)"/><text x="738.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="735" y="404" width="1" height="15" fill="rgb(218,144,32)"/><text x="738.00" y="414.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.42%)</title><rect x="740" y="356" width="5" height="15" fill="rgb(246,42,45)"/><text x="743.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (4 samples, 0.42%)</title><rect x="745" y="356" width="5" height="15" fill="rgb(248,25,38)"/><text x="748.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.42%)</title><rect x="745" y="372" width="5" height="15" fill="rgb(251,86,41)"/><text x="748.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (4 samples, 0.42%)</title><rect x="745" y="388" width="5" height="15" fill="rgb(213,156,48)"/><text x="748.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.32%)</title><rect x="746" y="404" width="4" height="15" fill="rgb(230,204,18)"/><text x="749.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.21%)</title><rect x="747" y="420" width="3" height="15" fill="rgb(219,1,6)"/><text x="750.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.11%)</title><rect x="749" y="436" width="1" height="15" fill="rgb(240,85,5)"/><text x="752.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="749" y="452" width="1" height="15" fill="rgb(232,145,19)"/><text x="752.00" y="462.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.11%)</title><rect x="750" y="372" width="1" height="15" fill="rgb(207,61,28)"/><text x="753.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="750" y="388" width="1" height="15" fill="rgb(241,224,39)"/><text x="753.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="750" y="404" width="1" height="15" fill="rgb(213,20,36)"/><text x="753.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="750" y="420" width="1" height="15" fill="rgb(212,57,16)"/><text x="753.00" y="430.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.11%)</title><rect x="751" y="388" width="1" height="15" fill="rgb(208,9,46)"/><text x="754.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="752" y="388" width="2" height="15" fill="rgb(226,114,50)"/><text x="755.00" y="398.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="752" y="404" width="2" height="15" fill="rgb(212,24,14)"/><text x="755.00" y="414.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (287 samples, 30.21%)</title><rect x="400" y="164" width="356" height="15" fill="rgb(252,199,26)"/><text x="403.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (281 samples, 29.58%)</title><rect x="407" y="180" width="349" height="15" fill="rgb(243,179,43)"/><text x="410.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (58 samples, 6.11%)</title><rect x="684" y="196" width="72" height="15" fill="rgb(208,38,17)"/><text x="687.00" y="206.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (58 samples, 6.11%)</title><rect x="684" y="212" width="72" height="15" fill="rgb(205,13,16)"/><text x="687.00" y="222.50">_run (ml..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (54 samples, 5.68%)</title><rect x="689" y="228" width="67" height="15" fill="rgb(212,177,3)"/><text x="692.00" y="238.50">clip (&lt;..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (51 samples, 5.37%)</title><rect x="693" y="244" width="63" height="15" fill="rgb(230,32,53)"/><text x="696.00" y="254.50">array_..</text></g><g><title>clip (numpy/core/fromnumeric.py) (50 samples, 5.26%)</title><rect x="694" y="260" width="62" height="15" fill="rgb(247,82,14)"/><text x="697.00" y="270.50">clip (..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (46 samples, 4.84%)</title><rect x="699" y="276" width="57" height="15" fill="rgb(251,12,36)"/><text x="702.00" y="286.50">_wrapf..</text></g><g><title>array_clip (methods.c) (45 samples, 4.74%)</title><rect x="700" y="292" width="56" height="15" fill="rgb(212,221,7)"/><text x="703.00" y="302.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (45 samples, 4.74%)</title><rect x="700" y="308" width="56" height="15" fill="rgb(226,134,21)"/><text x="703.00" y="318.50">forwa..</text></g><g><title>_clip (numpy/core/_methods.py) (45 samples, 4.74%)</title><rect x="700" y="324" width="56" height="15" fill="rgb(210,203,53)"/><text x="703.00" y="334.50">_clip..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (16 samples, 1.68%)</title><rect x="736" y="340" width="20" height="15" fill="rgb(222,52,5)"/><text x="739.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.53%)</title><rect x="750" y="356" width="6" height="15" fill="rgb(245,16,3)"/><text x="753.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.42%)</title><rect x="751" y="372" width="5" height="15" fill="rgb(219,59,46)"/><text x="754.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.21%)</title><rect x="754" y="388" width="2" height="15" fill="rgb(253,156,33)"/><text x="757.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="755" y="404" width="1" height="15" fill="rgb(252,61,18)"/><text x="758.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="755" y="420" width="1" height="15" fill="rgb(205,63,38)"/><text x="758.00" y="430.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.21%)</title><rect x="756" y="180" width="2" height="15" fill="rgb(207,60,29)"/><text x="759.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.21%)</title><rect x="756" y="196" width="2" height="15" fill="rgb(233,146,36)"/><text x="759.00" y="206.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (290 samples, 30.53%)</title><rect x="400" y="100" width="360" height="15" fill="rgb(213,226,39)"/><text x="403.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (290 samples, 30.53%)</title><rect x="400" y="116" width="360" height="15" fill="rgb(205,97,47)"/><text x="403.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (290 samples, 30.53%)</title><rect x="400" y="132" width="360" height="15" fill="rgb(249,82,9)"/><text x="403.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (290 samples, 30.53%)</title><rect x="400" y="148" width="360" height="15" fill="rgb(252,31,17)"/><text x="403.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.32%)</title><rect x="756" y="164" width="4" height="15" fill="rgb(207,182,3)"/><text x="759.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="758" y="180" width="2" height="15" fill="rgb(219,62,28)"/><text x="761.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="758" y="196" width="2" height="15" fill="rgb(228,30,25)"/><text x="761.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.11%)</title><rect x="758" y="212" width="2" height="15" fill="rgb(213,200,30)"/><text x="761.00" y="222.50"></text></g><g><title>0x7fa19e483d35 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="758" y="228" width="2" height="15" fill="rgb(247,142,26)"/><text x="761.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="760" y="212" width="1" height="15" fill="rgb(244,68,49)"/><text x="763.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="760" y="228" width="1" height="15" fill="rgb(235,33,14)"/><text x="763.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="760" y="244" width="1" height="15" fill="rgb(243,181,1)"/><text x="763.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="760" y="260" width="1" height="15" fill="rgb(215,78,30)"/><text x="763.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="760" y="276" width="1" height="15" fill="rgb(222,75,7)"/><text x="763.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.11%)</title><rect x="760" y="292" width="1" height="15" fill="rgb(233,68,52)"/><text x="763.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="760" y="308" width="1" height="15" fill="rgb(231,68,22)"/><text x="763.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="760" y="324" width="1" height="15" fill="rgb(248,149,2)"/><text x="763.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="760" y="340" width="1" height="15" fill="rgb(236,128,10)"/><text x="763.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="760" y="356" width="1" height="15" fill="rgb(222,33,21)"/><text x="763.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="760" y="372" width="1" height="15" fill="rgb(224,139,0)"/><text x="763.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.11%)</title><rect x="760" y="388" width="1" height="15" fill="rgb(209,210,38)"/><text x="763.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.11%)</title><rect x="760" y="404" width="1" height="15" fill="rgb(242,181,4)"/><text x="763.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.11%)</title><rect x="760" y="420" width="1" height="15" fill="rgb(226,218,34)"/><text x="763.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="760" y="436" width="1" height="15" fill="rgb(212,56,43)"/><text x="763.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="760" y="452" width="1" height="15" fill="rgb(211,73,48)"/><text x="763.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.11%)</title><rect x="760" y="468" width="1" height="15" fill="rgb(235,149,53)"/><text x="763.00" y="478.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py) (1 samples, 0.11%)</title><rect x="760" y="484" width="1" height="15" fill="rgb(220,164,23)"/><text x="763.00" y="494.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (292 samples, 30.74%)</title><rect x="400" y="68" width="362" height="15" fill="rgb(209,123,1)"/><text x="403.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_m_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (292 samples, 30.74%)</title><rect x="400" y="84" width="362" height="15" fill="rgb(248,109,50)"/><text x="403.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.21%)</title><rect x="760" y="100" width="2" height="15" fill="rgb(232,85,5)"/><text x="763.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.21%)</title><rect x="760" y="116" width="2" height="15" fill="rgb(220,87,37)"/><text x="763.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.21%)</title><rect x="760" y="132" width="2" height="15" fill="rgb(252,141,2)"/><text x="763.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.21%)</title><rect x="760" y="148" width="2" height="15" fill="rgb(245,92,49)"/><text x="763.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.21%)</title><rect x="760" y="164" width="2" height="15" fill="rgb(252,18,47)"/><text x="763.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.21%)</title><rect x="760" y="180" width="2" height="15" fill="rgb(232,113,48)"/><text x="763.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.21%)</title><rect x="760" y="196" width="2" height="15" fill="rgb(219,156,54)"/><text x="763.00" y="206.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.11%)</title><rect x="761" y="212" width="1" height="15" fill="rgb(240,18,54)"/><text x="764.00" y="222.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.11%)</title><rect x="761" y="228" width="1" height="15" fill="rgb(217,59,35)"/><text x="764.00" y="238.50"></text></g><g><title>unicode_resize (python3.7) (1 samples, 0.11%)</title><rect x="761" y="244" width="1" height="15" fill="rgb(234,141,20)"/><text x="764.00" y="254.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="762" y="196" width="1" height="15" fill="rgb(250,182,9)"/><text x="765.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="762" y="212" width="1" height="15" fill="rgb(234,80,33)"/><text x="765.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="762" y="228" width="1" height="15" fill="rgb(253,206,28)"/><text x="765.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="762" y="244" width="1" height="15" fill="rgb(206,108,3)"/><text x="765.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="763" y="244" width="2" height="15" fill="rgb(226,216,45)"/><text x="766.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.11%)</title><rect x="763" y="260" width="2" height="15" fill="rgb(228,219,13)"/><text x="766.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="763" y="276" width="2" height="15" fill="rgb(229,200,22)"/><text x="766.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="763" y="292" width="2" height="15" fill="rgb(254,200,42)"/><text x="766.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="763" y="308" width="2" height="15" fill="rgb(214,104,50)"/><text x="766.00" y="318.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.32%)</title><rect x="762" y="164" width="4" height="15" fill="rgb(247,123,1)"/><text x="765.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (3 samples, 0.32%)</title><rect x="762" y="180" width="4" height="15" fill="rgb(246,134,0)"/><text x="765.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.21%)</title><rect x="763" y="196" width="3" height="15" fill="rgb(218,221,42)"/><text x="766.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.21%)</title><rect x="763" y="212" width="3" height="15" fill="rgb(252,73,14)"/><text x="766.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.21%)</title><rect x="763" y="228" width="3" height="15" fill="rgb(206,43,53)"/><text x="766.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="765" y="244" width="1" height="15" fill="rgb(232,85,9)"/><text x="768.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (1 samples, 0.11%)</title><rect x="765" y="260" width="1" height="15" fill="rgb(237,104,35)"/><text x="768.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.11%)</title><rect x="765" y="276" width="1" height="15" fill="rgb(224,146,45)"/><text x="768.00" y="286.50"></text></g><g><title>0x7fa19e655c52 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="765" y="292" width="1" height="15" fill="rgb(235,120,49)"/><text x="768.00" y="302.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.32%)</title><rect x="766" y="164" width="4" height="15" fill="rgb(216,124,7)"/><text x="769.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (3 samples, 0.32%)</title><rect x="766" y="180" width="4" height="15" fill="rgb(252,96,7)"/><text x="769.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.21%)</title><rect x="767" y="196" width="3" height="15" fill="rgb(231,16,30)"/><text x="770.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.11%)</title><rect x="768" y="212" width="2" height="15" fill="rgb(217,56,25)"/><text x="771.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (2 samples, 0.21%)</title><rect x="781" y="212" width="2" height="15" fill="rgb(250,4,12)"/><text x="784.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (4 samples, 0.42%)</title><rect x="783" y="212" width="5" height="15" fill="rgb(239,170,26)"/><text x="786.00" y="222.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="787" y="228" width="1" height="15" fill="rgb(227,126,12)"/><text x="790.00" y="238.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="787" y="244" width="1" height="15" fill="rgb(237,200,40)"/><text x="790.00" y="254.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.11%)</title><rect x="787" y="260" width="1" height="15" fill="rgb(219,71,14)"/><text x="790.00" y="270.50"></text></g><g><title>0x7fa19e483b05 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="787" y="276" width="1" height="15" fill="rgb(227,28,11)"/><text x="790.00" y="286.50"></text></g><g><title>0x7fa19e482aed (libc-2.29.so) (1 samples, 0.11%)</title><rect x="787" y="292" width="1" height="15" fill="rgb(226,75,14)"/><text x="790.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="790" y="260" width="1" height="15" fill="rgb(250,109,3)"/><text x="793.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="790" y="276" width="1" height="15" fill="rgb(247,65,33)"/><text x="793.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="790" y="292" width="1" height="15" fill="rgb(229,194,12)"/><text x="793.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.11%)</title><rect x="791" y="260" width="1" height="15" fill="rgb(239,13,6)"/><text x="794.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.11%)</title><rect x="791" y="276" width="1" height="15" fill="rgb(240,138,16)"/><text x="794.00" y="286.50"></text></g><g><title>0x7fa19e484fd2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="793" y="372" width="2" height="15" fill="rgb(230,84,48)"/><text x="796.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (3 samples, 0.32%)</title><rect x="792" y="276" width="4" height="15" fill="rgb(215,38,47)"/><text x="795.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.32%)</title><rect x="792" y="292" width="4" height="15" fill="rgb(213,13,41)"/><text x="795.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (3 samples, 0.32%)</title><rect x="792" y="308" width="4" height="15" fill="rgb(206,116,28)"/><text x="795.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (3 samples, 0.32%)</title><rect x="792" y="324" width="4" height="15" fill="rgb(207,193,26)"/><text x="795.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (2 samples, 0.21%)</title><rect x="793" y="340" width="3" height="15" fill="rgb(206,89,17)"/><text x="796.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.21%)</title><rect x="793" y="356" width="3" height="15" fill="rgb(236,41,26)"/><text x="796.00" y="366.50"></text></g><g><title>0x7fa19e4851ba (libc-2.29.so) (1 samples, 0.11%)</title><rect x="795" y="372" width="1" height="15" fill="rgb(245,105,10)"/><text x="798.00" y="382.50"></text></g><g><title>_mm_mul_pd (emmintrin.h) (2 samples, 0.21%)</title><rect x="797" y="308" width="2" height="15" fill="rgb(236,25,54)"/><text x="800.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 0.74%)</title><rect x="792" y="260" width="9" height="15" fill="rgb(227,32,2)"/><text x="795.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (4 samples, 0.42%)</title><rect x="796" y="276" width="5" height="15" fill="rgb(238,145,36)"/><text x="799.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src) (3 samples, 0.32%)</title><rect x="797" y="292" width="4" height="15" fill="rgb(244,57,32)"/><text x="800.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="799" y="308" width="2" height="15" fill="rgb(238,73,35)"/><text x="802.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 1.26%)</title><rect x="788" y="244" width="15" height="15" fill="rgb(226,229,6)"/><text x="791.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.21%)</title><rect x="801" y="260" width="2" height="15" fill="rgb(215,36,46)"/><text x="804.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="802" y="276" width="1" height="15" fill="rgb(242,214,25)"/><text x="805.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="802" y="292" width="1" height="15" fill="rgb(224,139,42)"/><text x="805.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="802" y="308" width="1" height="15" fill="rgb(238,3,8)"/><text x="805.00" y="318.50"></text></g><g><title>array_multiply (number.c) (13 samples, 1.37%)</title><rect x="788" y="212" width="16" height="15" fill="rgb(228,84,32)"/><text x="791.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 1.37%)</title><rect x="788" y="228" width="16" height="15" fill="rgb(216,105,51)"/><text x="791.00" y="238.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.11%)</title><rect x="803" y="244" width="1" height="15" fill="rgb(208,18,45)"/><text x="806.00" y="254.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.11%)</title><rect x="804" y="228" width="2" height="15" fill="rgb(213,6,14)"/><text x="807.00" y="238.50"></text></g><g><title>can_elide_temp (temp_elide.c) (1 samples, 0.11%)</title><rect x="804" y="244" width="2" height="15" fill="rgb(216,185,5)"/><text x="807.00" y="254.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="806" y="340" width="1" height="15" fill="rgb(251,111,30)"/><text x="809.00" y="350.50"></text></g><g><title>_mm_sub_pd (emmintrin.h) (2 samples, 0.21%)</title><rect x="807" y="340" width="2" height="15" fill="rgb(243,149,53)"/><text x="810.00" y="350.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (4 samples, 0.42%)</title><rect x="806" y="292" width="5" height="15" fill="rgb(209,110,28)"/><text x="809.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (4 samples, 0.42%)</title><rect x="806" y="308" width="5" height="15" fill="rgb(227,135,43)"/><text x="809.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (4 samples, 0.42%)</title><rect x="806" y="324" width="5" height="15" fill="rgb(220,99,36)"/><text x="809.00" y="334.50"></text></g><g><title>npy_aligned_block_offset (lowlevel_strided_loops.h) (1 samples, 0.11%)</title><rect x="809" y="340" width="2" height="15" fill="rgb(254,170,39)"/><text x="812.00" y="350.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.11%)</title><rect x="811" y="308" width="1" height="15" fill="rgb(254,167,44)"/><text x="814.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.32%)</title><rect x="811" y="292" width="3" height="15" fill="rgb(223,11,9)"/><text x="814.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.21%)</title><rect x="812" y="308" width="2" height="15" fill="rgb(233,195,49)"/><text x="815.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="814" y="292" width="2" height="15" fill="rgb(224,167,53)"/><text x="817.00" y="302.50"></text></g><g><title>0x7fa19e483991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="814" y="308" width="2" height="15" fill="rgb(227,54,43)"/><text x="817.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="816" y="308" width="1" height="15" fill="rgb(227,181,27)"/><text x="819.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="816" y="324" width="1" height="15" fill="rgb(254,71,52)"/><text x="819.00" y="334.50"></text></g><g><title>0x7fa19e485700 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="816" y="340" width="1" height="15" fill="rgb(243,135,0)"/><text x="819.00" y="350.50"></text></g><g><title>0x7fa19e482b06 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="816" y="356" width="1" height="15" fill="rgb(233,221,14)"/><text x="819.00" y="366.50"></text></g><g><title>array_subtract (number.c) (16 samples, 1.68%)</title><rect x="804" y="212" width="20" height="15" fill="rgb(213,111,27)"/><text x="807.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 1.58%)</title><rect x="806" y="228" width="18" height="15" fill="rgb(222,186,0)"/><text x="809.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 1.58%)</title><rect x="806" y="244" width="18" height="15" fill="rgb(208,158,27)"/><text x="809.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (15 samples, 1.58%)</title><rect x="806" y="260" width="18" height="15" fill="rgb(249,152,15)"/><text x="809.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (15 samples, 1.58%)</title><rect x="806" y="276" width="18" height="15" fill="rgb(211,1,17)"/><text x="809.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 0.74%)</title><rect x="816" y="292" width="8" height="15" fill="rgb(251,186,44)"/><text x="819.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 0.63%)</title><rect x="817" y="308" width="7" height="15" fill="rgb(248,45,29)"/><text x="820.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (6 samples, 0.63%)</title><rect x="817" y="324" width="7" height="15" fill="rgb(211,5,8)"/><text x="820.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.21%)</title><rect x="822" y="340" width="2" height="15" fill="rgb(250,190,21)"/><text x="825.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="824" y="276" width="2" height="15" fill="rgb(218,69,2)"/><text x="827.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="824" y="292" width="2" height="15" fill="rgb(217,188,44)"/><text x="827.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="824" y="308" width="2" height="15" fill="rgb(215,112,39)"/><text x="827.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="824" y="324" width="2" height="15" fill="rgb(206,224,21)"/><text x="827.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="824" y="340" width="2" height="15" fill="rgb(211,211,0)"/><text x="827.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.11%)</title><rect x="826" y="292" width="1" height="15" fill="rgb(240,88,37)"/><text x="829.00" y="302.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.11%)</title><rect x="826" y="308" width="1" height="15" fill="rgb(240,200,33)"/><text x="829.00" y="318.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.11%)</title><rect x="826" y="324" width="1" height="15" fill="rgb(215,75,22)"/><text x="829.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="827" y="340" width="1" height="15" fill="rgb(220,126,47)"/><text x="830.00" y="350.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.11%)</title><rect x="828" y="340" width="1" height="15" fill="rgb(217,57,30)"/><text x="831.00" y="350.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.11%)</title><rect x="829" y="340" width="2" height="15" fill="rgb(212,95,16)"/><text x="832.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.42%)</title><rect x="827" y="324" width="5" height="15" fill="rgb(218,110,38)"/><text x="830.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="831" y="340" width="1" height="15" fill="rgb(205,162,40)"/><text x="834.00" y="350.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.11%)</title><rect x="832" y="324" width="1" height="15" fill="rgb(219,23,35)"/><text x="835.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.11%)</title><rect x="833" y="324" width="1" height="15" fill="rgb(244,15,52)"/><text x="836.00" y="334.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c) (1 samples, 0.11%)</title><rect x="834" y="324" width="2" height="15" fill="rgb(238,171,22)"/><text x="837.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (11 samples, 1.16%)</title><rect x="840" y="340" width="14" height="15" fill="rgb(229,47,23)"/><text x="843.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (5 samples, 0.53%)</title><rect x="848" y="356" width="6" height="15" fill="rgb(234,65,54)"/><text x="851.00" y="366.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (2 samples, 0.21%)</title><rect x="854" y="340" width="3" height="15" fill="rgb(217,156,2)"/><text x="857.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (31 samples, 3.26%)</title><rect x="827" y="308" width="38" height="15" fill="rgb(243,163,54)"/><text x="830.00" y="318.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (24 samples, 2.53%)</title><rect x="836" y="324" width="29" height="15" fill="rgb(232,63,32)"/><text x="839.00" y="334.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (7 samples, 0.74%)</title><rect x="857" y="340" width="8" height="15" fill="rgb(225,81,12)"/><text x="860.00" y="350.50"></text></g><g><title>array_sum (methods.c) (34 samples, 3.58%)</title><rect x="824" y="212" width="43" height="15" fill="rgb(225,57,51)"/><text x="827.00" y="222.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (34 samples, 3.58%)</title><rect x="824" y="228" width="43" height="15" fill="rgb(233,222,21)"/><text x="827.00" y="238.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (34 samples, 3.58%)</title><rect x="824" y="244" width="43" height="15" fill="rgb(244,139,45)"/><text x="827.00" y="254.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (34 samples, 3.58%)</title><rect x="824" y="260" width="43" height="15" fill="rgb(231,95,43)"/><text x="827.00" y="270.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (33 samples, 3.47%)</title><rect x="826" y="276" width="41" height="15" fill="rgb(209,66,18)"/><text x="829.00" y="286.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (32 samples, 3.37%)</title><rect x="827" y="292" width="40" height="15" fill="rgb(249,181,4)"/><text x="830.00" y="302.50">PyU..</text></g><g><title>_get_identity (ufunc_object.c) (1 samples, 0.11%)</title><rect x="865" y="308" width="2" height="15" fill="rgb(209,91,3)"/><text x="868.00" y="318.50"></text></g><g><title>0x7fa19e4a4120 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="869" y="244" width="1" height="15" fill="rgb(227,35,46)"/><text x="872.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.21%)</title><rect x="874" y="356" width="2" height="15" fill="rgb(229,60,33)"/><text x="877.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.21%)</title><rect x="874" y="372" width="2" height="15" fill="rgb(223,96,3)"/><text x="877.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.21%)</title><rect x="874" y="388" width="2" height="15" fill="rgb(244,8,18)"/><text x="877.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.21%)</title><rect x="874" y="404" width="2" height="15" fill="rgb(212,201,53)"/><text x="877.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.21%)</title><rect x="874" y="420" width="2" height="15" fill="rgb(254,51,24)"/><text x="877.00" y="430.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="876" y="372" width="2" height="15" fill="rgb(240,10,50)"/><text x="879.00" y="382.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="876" y="388" width="2" height="15" fill="rgb(210,35,10)"/><text x="879.00" y="398.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.11%)</title><rect x="876" y="404" width="2" height="15" fill="rgb(219,199,42)"/><text x="879.00" y="414.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.11%)</title><rect x="876" y="420" width="2" height="15" fill="rgb(225,161,23)"/><text x="879.00" y="430.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.11%)</title><rect x="878" y="372" width="1" height="15" fill="rgb(241,185,9)"/><text x="881.00" y="382.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.11%)</title><rect x="878" y="388" width="1" height="15" fill="rgb(230,153,50)"/><text x="881.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (6 samples, 0.63%)</title><rect x="879" y="404" width="7" height="15" fill="rgb(214,169,42)"/><text x="882.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 0.74%)</title><rect x="879" y="372" width="9" height="15" fill="rgb(232,72,28)"/><text x="882.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (7 samples, 0.74%)</title><rect x="879" y="388" width="9" height="15" fill="rgb(214,9,43)"/><text x="882.00" y="398.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="886" y="404" width="2" height="15" fill="rgb(229,99,45)"/><text x="889.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 1.05%)</title><rect x="876" y="356" width="13" height="15" fill="rgb(249,91,22)"/><text x="879.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="888" y="372" width="1" height="15" fill="rgb(253,41,31)"/><text x="891.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="888" y="388" width="1" height="15" fill="rgb(226,50,47)"/><text x="891.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="888" y="404" width="1" height="15" fill="rgb(215,138,52)"/><text x="891.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.11%)</title><rect x="888" y="420" width="1" height="15" fill="rgb(222,5,33)"/><text x="891.00" y="430.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.11%)</title><rect x="889" y="356" width="1" height="15" fill="rgb(237,68,42)"/><text x="892.00" y="366.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.11%)</title><rect x="889" y="372" width="1" height="15" fill="rgb(210,30,47)"/><text x="892.00" y="382.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (15 samples, 1.58%)</title><rect x="873" y="324" width="18" height="15" fill="rgb(241,32,16)"/><text x="876.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 1.47%)</title><rect x="874" y="340" width="17" height="15" fill="rgb(235,189,49)"/><text x="877.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="890" y="356" width="1" height="15" fill="rgb(211,132,13)"/><text x="893.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="890" y="372" width="1" height="15" fill="rgb(233,188,12)"/><text x="893.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="890" y="388" width="1" height="15" fill="rgb(215,152,11)"/><text x="893.00" y="398.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="900" y="340" width="1" height="15" fill="rgb(241,47,34)"/><text x="903.00" y="350.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.21%)</title><rect x="901" y="372" width="3" height="15" fill="rgb(210,213,5)"/><text x="904.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.21%)</title><rect x="901" y="388" width="3" height="15" fill="rgb(205,171,47)"/><text x="904.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.21%)</title><rect x="901" y="404" width="3" height="15" fill="rgb(219,69,37)"/><text x="904.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.21%)</title><rect x="901" y="420" width="3" height="15" fill="rgb(219,155,8)"/><text x="904.00" y="430.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.32%)</title><rect x="908" y="388" width="3" height="15" fill="rgb(232,49,5)"/><text x="911.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="910" y="404" width="1" height="15" fill="rgb(234,48,7)"/><text x="913.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="910" y="420" width="1" height="15" fill="rgb(240,120,19)"/><text x="913.00" y="430.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (16 samples, 1.68%)</title><rect x="901" y="340" width="20" height="15" fill="rgb(248,63,48)"/><text x="904.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (16 samples, 1.68%)</title><rect x="901" y="356" width="20" height="15" fill="rgb(208,180,4)"/><text x="904.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (14 samples, 1.47%)</title><rect x="904" y="372" width="17" height="15" fill="rgb(228,146,12)"/><text x="907.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (8 samples, 0.84%)</title><rect x="911" y="388" width="10" height="15" fill="rgb(225,115,22)"/><text x="914.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 0.42%)</title><rect x="916" y="404" width="5" height="15" fill="rgb(237,46,15)"/><text x="919.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (3 samples, 0.32%)</title><rect x="917" y="420" width="4" height="15" fill="rgb(215,6,3)"/><text x="920.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.32%)</title><rect x="917" y="436" width="4" height="15" fill="rgb(219,37,24)"/><text x="920.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (3 samples, 0.32%)</title><rect x="917" y="452" width="4" height="15" fill="rgb(206,6,35)"/><text x="920.00" y="462.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="920" y="468" width="1" height="15" fill="rgb(248,0,38)"/><text x="923.00" y="478.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.21%)</title><rect x="921" y="356" width="3" height="15" fill="rgb(245,170,42)"/><text x="924.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.21%)</title><rect x="921" y="372" width="3" height="15" fill="rgb(220,86,30)"/><text x="924.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.21%)</title><rect x="921" y="388" width="3" height="15" fill="rgb(219,111,29)"/><text x="924.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.21%)</title><rect x="921" y="404" width="3" height="15" fill="rgb(233,0,32)"/><text x="924.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.21%)</title><rect x="921" y="420" width="3" height="15" fill="rgb(240,90,2)"/><text x="924.00" y="430.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="925" y="372" width="1" height="15" fill="rgb(234,69,27)"/><text x="928.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="925" y="388" width="1" height="15" fill="rgb(232,109,24)"/><text x="928.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="926" y="372" width="1" height="15" fill="rgb(246,78,25)"/><text x="929.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="926" y="388" width="1" height="15" fill="rgb(207,108,38)"/><text x="929.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.11%)</title><rect x="927" y="404" width="2" height="15" fill="rgb(220,22,22)"/><text x="930.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="927" y="420" width="2" height="15" fill="rgb(210,67,46)"/><text x="930.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="927" y="436" width="2" height="15" fill="rgb(243,71,41)"/><text x="930.00" y="446.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="927" y="452" width="2" height="15" fill="rgb(247,7,23)"/><text x="930.00" y="462.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.21%)</title><rect x="927" y="372" width="3" height="15" fill="rgb(234,132,48)"/><text x="930.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.21%)</title><rect x="927" y="388" width="3" height="15" fill="rgb(212,10,19)"/><text x="930.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="929" y="404" width="1" height="15" fill="rgb(252,83,40)"/><text x="932.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 0.95%)</title><rect x="924" y="356" width="11" height="15" fill="rgb(211,192,24)"/><text x="927.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (4 samples, 0.42%)</title><rect x="930" y="372" width="5" height="15" fill="rgb(242,99,42)"/><text x="933.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="934" y="388" width="1" height="15" fill="rgb(251,23,28)"/><text x="937.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="934" y="404" width="1" height="15" fill="rgb(219,166,31)"/><text x="937.00" y="414.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.11%)</title><rect x="935" y="356" width="1" height="15" fill="rgb(215,224,54)"/><text x="938.00" y="366.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.11%)</title><rect x="935" y="372" width="1" height="15" fill="rgb(214,183,33)"/><text x="938.00" y="382.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (54 samples, 5.68%)</title><rect x="870" y="244" width="67" height="15" fill="rgb(228,109,39)"/><text x="873.00" y="254.50">clip (n..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (54 samples, 5.68%)</title><rect x="870" y="260" width="67" height="15" fill="rgb(218,68,4)"/><text x="873.00" y="270.50">_wrapfu..</text></g><g><title>array_clip (methods.c) (54 samples, 5.68%)</title><rect x="870" y="276" width="67" height="15" fill="rgb(251,179,0)"/><text x="873.00" y="286.50">array_c..</text></g><g><title>forward_ndarray_method (methods.c) (54 samples, 5.68%)</title><rect x="870" y="292" width="67" height="15" fill="rgb(252,34,41)"/><text x="873.00" y="302.50">forward..</text></g><g><title>_clip (numpy/core/_methods.py) (53 samples, 5.58%)</title><rect x="872" y="308" width="65" height="15" fill="rgb(208,53,7)"/><text x="875.00" y="318.50">_clip (..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (37 samples, 3.89%)</title><rect x="891" y="324" width="46" height="15" fill="rgb(230,109,21)"/><text x="894.00" y="334.50">_cli..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 1.37%)</title><rect x="921" y="340" width="16" height="15" fill="rgb(229,190,10)"/><text x="924.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="936" y="356" width="1" height="15" fill="rgb(225,43,33)"/><text x="939.00" y="366.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (58 samples, 6.11%)</title><rect x="867" y="212" width="72" height="15" fill="rgb(232,170,21)"/><text x="870.00" y="222.50">clip (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (56 samples, 5.89%)</title><rect x="869" y="228" width="70" height="15" fill="rgb(211,60,51)"/><text x="872.00" y="238.50">array_i..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="937" y="244" width="2" height="15" fill="rgb(234,154,35)"/><text x="940.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="937" y="260" width="2" height="15" fill="rgb(240,91,17)"/><text x="940.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="937" y="276" width="2" height="15" fill="rgb(207,214,21)"/><text x="940.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="937" y="292" width="2" height="15" fill="rgb(243,24,26)"/><text x="940.00" y="302.50"></text></g><g><title>0x7fa177ed51dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="941" y="276" width="1" height="15" fill="rgb(254,217,39)"/><text x="944.00" y="286.50"></text></g><g><title>0x7fa177eb9c72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="942" y="292" width="2" height="15" fill="rgb(243,55,2)"/><text x="945.00" y="302.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.11%)</title><rect x="945" y="372" width="1" height="15" fill="rgb(254,71,50)"/><text x="948.00" y="382.50"></text></g><g><title>0x7fa19e4926e3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="945" y="388" width="1" height="15" fill="rgb(207,54,51)"/><text x="948.00" y="398.50"></text></g><g><title>0x7fa177eb9d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.42%)</title><rect x="944" y="292" width="5" height="15" fill="rgb(214,212,33)"/><text x="947.00" y="302.50"></text></g><g><title>0x7fa177eb9666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.42%)</title><rect x="944" y="308" width="5" height="15" fill="rgb(240,50,53)"/><text x="947.00" y="318.50"></text></g><g><title>0x7fa177eaf2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.42%)</title><rect x="944" y="324" width="5" height="15" fill="rgb(249,78,47)"/><text x="947.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (4 samples, 0.42%)</title><rect x="944" y="340" width="5" height="15" fill="rgb(218,130,1)"/><text x="947.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 0.42%)</title><rect x="944" y="356" width="5" height="15" fill="rgb(229,107,48)"/><text x="947.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.21%)</title><rect x="946" y="372" width="3" height="15" fill="rgb(234,147,30)"/><text x="949.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c) (2 samples, 0.21%)</title><rect x="946" y="388" width="3" height="15" fill="rgb(208,64,39)"/><text x="949.00" y="398.50"></text></g><g><title>_append_char (buffer.c) (2 samples, 0.21%)</title><rect x="946" y="404" width="3" height="15" fill="rgb(248,59,38)"/><text x="949.00" y="414.50"></text></g><g><title>realloc (libc-2.29.so) (2 samples, 0.21%)</title><rect x="946" y="420" width="3" height="15" fill="rgb(252,209,16)"/><text x="949.00" y="430.50"></text></g><g><title>0x7fa177ed52df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.63%)</title><rect x="942" y="276" width="8" height="15" fill="rgb(219,191,30)"/><text x="945.00" y="286.50"></text></g><g><title>0x7fa177eb9efd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="949" y="292" width="1" height="15" fill="rgb(233,142,39)"/><text x="952.00" y="302.50"></text></g><g><title>0x7fa177eaa2b2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="949" y="308" width="1" height="15" fill="rgb(239,135,11)"/><text x="952.00" y="318.50"></text></g><g><title>0x7fa177ed5511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="950" y="276" width="1" height="15" fill="rgb(226,136,3)"/><text x="953.00" y="286.50"></text></g><g><title>0x7fa177ed5592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="951" y="276" width="3" height="15" fill="rgb(233,171,28)"/><text x="954.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.21%)</title><rect x="951" y="292" width="3" height="15" fill="rgb(249,172,11)"/><text x="954.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.11%)</title><rect x="952" y="308" width="2" height="15" fill="rgb(216,94,37)"/><text x="955.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.11%)</title><rect x="952" y="324" width="2" height="15" fill="rgb(251,220,48)"/><text x="955.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="952" y="340" width="2" height="15" fill="rgb(215,157,49)"/><text x="955.00" y="350.50"></text></g><g><title>0x7fa19e4a3dbe (libc-2.29.so) (1 samples, 0.11%)</title><rect x="952" y="356" width="2" height="15" fill="rgb(227,180,15)"/><text x="955.00" y="366.50"></text></g><g><title>0x7fa177ed55b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="954" y="276" width="1" height="15" fill="rgb(227,177,30)"/><text x="957.00" y="286.50"></text></g><g><title>0x7fa177ed5680 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="955" y="276" width="1" height="15" fill="rgb(226,21,18)"/><text x="958.00" y="286.50"></text></g><g><title>0x7fa177ed5698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="956" y="276" width="1" height="15" fill="rgb(239,97,37)"/><text x="959.00" y="286.50"></text></g><g><title>0x7fa177ed56aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="957" y="276" width="3" height="15" fill="rgb(231,166,24)"/><text x="960.00" y="286.50"></text></g><g><title>0x7fa177ed56ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="960" y="276" width="2" height="15" fill="rgb(222,217,4)"/><text x="963.00" y="286.50"></text></g><g><title>0x7fa177ed56b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="962" y="276" width="1" height="15" fill="rgb(207,62,28)"/><text x="965.00" y="286.50"></text></g><g><title>0x7fa177ed56de (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="963" y="276" width="3" height="15" fill="rgb(208,54,9)"/><text x="966.00" y="286.50"></text></g><g><title>0x7fa177ed56fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="966" y="276" width="1" height="15" fill="rgb(248,62,5)"/><text x="969.00" y="286.50"></text></g><g><title>0x7fa177ed6405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (22 samples, 2.32%)</title><rect x="941" y="260" width="27" height="15" fill="rgb(212,196,8)"/><text x="944.00" y="270.50">0..</text></g><g><title>0x7fa177ed57b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="967" y="276" width="1" height="15" fill="rgb(233,223,50)"/><text x="970.00" y="286.50"></text></g><g><title>0x7fa177ec6fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (23 samples, 2.42%)</title><rect x="941" y="244" width="29" height="15" fill="rgb(253,24,41)"/><text x="944.00" y="254.50">0x..</text></g><g><title>0x7fa177ed6540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="968" y="260" width="2" height="15" fill="rgb(226,120,29)"/><text x="971.00" y="270.50"></text></g><g><title>0x7fa177eab2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="968" y="276" width="2" height="15" fill="rgb(209,216,37)"/><text x="971.00" y="286.50"></text></g><g><title>0x7fa177eaa530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="968" y="292" width="2" height="15" fill="rgb(214,138,52)"/><text x="971.00" y="302.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.11%)</title><rect x="968" y="308" width="2" height="15" fill="rgb(237,150,51)"/><text x="971.00" y="318.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.11%)</title><rect x="970" y="276" width="1" height="15" fill="rgb(213,195,50)"/><text x="973.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (2 samples, 0.21%)</title><rect x="971" y="292" width="2" height="15" fill="rgb(212,50,25)"/><text x="974.00" y="302.50"></text></g><g><title>0x7fa177ec705a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.63%)</title><rect x="970" y="244" width="7" height="15" fill="rgb(213,174,34)"/><text x="973.00" y="254.50"></text></g><g><title>array_take (methods.c) (6 samples, 0.63%)</title><rect x="970" y="260" width="7" height="15" fill="rgb(252,67,14)"/><text x="973.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (5 samples, 0.53%)</title><rect x="971" y="276" width="6" height="15" fill="rgb(242,70,26)"/><text x="974.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (3 samples, 0.32%)</title><rect x="973" y="292" width="4" height="15" fill="rgb(251,162,4)"/><text x="976.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.32%)</title><rect x="973" y="308" width="4" height="15" fill="rgb(212,181,43)"/><text x="976.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (3 samples, 0.32%)</title><rect x="973" y="324" width="4" height="15" fill="rgb(230,148,40)"/><text x="976.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (3 samples, 0.32%)</title><rect x="973" y="340" width="4" height="15" fill="rgb(236,10,29)"/><text x="976.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (2 samples, 0.21%)</title><rect x="975" y="356" width="2" height="15" fill="rgb(253,139,54)"/><text x="978.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.21%)</title><rect x="975" y="372" width="2" height="15" fill="rgb(245,196,27)"/><text x="978.00" y="382.50"></text></g><g><title>0x7fa19e484b12 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="976" y="388" width="1" height="15" fill="rgb(219,149,45)"/><text x="979.00" y="398.50"></text></g><g><title>0x7fa177ec713a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="977" y="244" width="1" height="15" fill="rgb(210,228,46)"/><text x="980.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="977" y="260" width="1" height="15" fill="rgb(211,131,5)"/><text x="980.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="977" y="276" width="1" height="15" fill="rgb(254,151,10)"/><text x="980.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="977" y="292" width="1" height="15" fill="rgb(242,143,36)"/><text x="980.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="980" y="276" width="1" height="15" fill="rgb(231,76,46)"/><text x="983.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="980" y="292" width="1" height="15" fill="rgb(250,6,34)"/><text x="983.00" y="302.50"></text></g><g><title>0x7fa177ec714f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.32%)</title><rect x="978" y="244" width="4" height="15" fill="rgb(220,53,14)"/><text x="981.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.32%)</title><rect x="978" y="260" width="4" height="15" fill="rgb(218,42,11)"/><text x="981.00" y="270.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="981" y="276" width="1" height="15" fill="rgb(237,30,18)"/><text x="984.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="981" y="292" width="1" height="15" fill="rgb(218,157,26)"/><text x="984.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.11%)</title><rect x="982" y="276" width="1" height="15" fill="rgb(215,156,18)"/><text x="985.00" y="286.50"></text></g><g><title>0x7fa177ec7328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="982" y="244" width="3" height="15" fill="rgb(211,78,50)"/><text x="985.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.21%)</title><rect x="982" y="260" width="3" height="15" fill="rgb(227,218,35)"/><text x="985.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.11%)</title><rect x="983" y="276" width="2" height="15" fill="rgb(221,30,4)"/><text x="986.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.11%)</title><rect x="983" y="292" width="2" height="15" fill="rgb(217,83,46)"/><text x="986.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="983" y="308" width="2" height="15" fill="rgb(234,226,26)"/><text x="986.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="983" y="324" width="2" height="15" fill="rgb(226,103,5)"/><text x="986.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="983" y="340" width="2" height="15" fill="rgb(225,34,8)"/><text x="986.00" y="350.50"></text></g><g><title>0x7fa177ec7d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (36 samples, 3.79%)</title><rect x="941" y="228" width="45" height="15" fill="rgb(246,47,12)"/><text x="944.00" y="238.50">0x7f..</text></g><g><title>0x7fa177ec7365 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="985" y="244" width="1" height="15" fill="rgb(218,26,25)"/><text x="988.00" y="254.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.21%)</title><rect x="1003" y="260" width="3" height="15" fill="rgb(250,214,45)"/><text x="1006.00" y="270.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.11%)</title><rect x="1006" y="260" width="1" height="15" fill="rgb(213,22,53)"/><text x="1009.00" y="270.50"></text></g><g><title>__init__ (warnings.py) (3 samples, 0.32%)</title><rect x="1007" y="260" width="4" height="15" fill="rgb(242,217,26)"/><text x="1010.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1017" y="276" width="1" height="15" fill="rgb(221,195,31)"/><text x="1020.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (7 samples, 0.74%)</title><rect x="1011" y="260" width="8" height="15" fill="rgb(236,121,22)"/><text x="1014.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1018" y="276" width="1" height="15" fill="rgb(216,208,29)"/><text x="1021.00" y="286.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1019" y="260" width="2" height="15" fill="rgb(240,14,5)"/><text x="1022.00" y="270.50"></text></g><g><title>0x7fa19e499e7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1023" y="276" width="1" height="15" fill="rgb(244,79,13)"/><text x="1026.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 0.53%)</title><rect x="1021" y="260" width="6" height="15" fill="rgb(252,28,52)"/><text x="1024.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.21%)</title><rect x="1024" y="276" width="3" height="15" fill="rgb(253,40,14)"/><text x="1027.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.21%)</title><rect x="1024" y="292" width="3" height="15" fill="rgb(254,39,54)"/><text x="1027.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (41 samples, 4.32%)</title><rect x="986" y="228" width="51" height="15" fill="rgb(215,111,15)"/><text x="989.00" y="238.50">_vali..</text></g><g><title>check_array (sklearn/utils/validation.py) (35 samples, 3.68%)</title><rect x="993" y="244" width="44" height="15" fill="rgb(225,11,46)"/><text x="996.00" y="254.50">chec..</text></g><g><title>simplefilter (warnings.py) (8 samples, 0.84%)</title><rect x="1027" y="260" width="10" height="15" fill="rgb(212,48,29)"/><text x="1030.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (6 samples, 0.63%)</title><rect x="1029" y="276" width="8" height="15" fill="rgb(216,22,35)"/><text x="1032.00" y="286.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.11%)</title><rect x="1037" y="228" width="1" height="15" fill="rgb(218,182,45)"/><text x="1040.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.11%)</title><rect x="1037" y="244" width="1" height="15" fill="rgb(234,26,6)"/><text x="1040.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.11%)</title><rect x="1037" y="260" width="1" height="15" fill="rgb(217,60,18)"/><text x="1040.00" y="270.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="1037" y="276" width="1" height="15" fill="rgb(228,177,8)"/><text x="1040.00" y="286.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1037" y="292" width="1" height="15" fill="rgb(215,14,10)"/><text x="1040.00" y="302.50"></text></g><g><title>0x7fa19e4a3d50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1037" y="308" width="1" height="15" fill="rgb(217,222,2)"/><text x="1040.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1040" y="276" width="2" height="15" fill="rgb(221,33,3)"/><text x="1043.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1040" y="292" width="2" height="15" fill="rgb(226,50,11)"/><text x="1043.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.21%)</title><rect x="1040" y="260" width="3" height="15" fill="rgb(229,113,38)"/><text x="1043.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1042" y="276" width="1" height="15" fill="rgb(245,178,37)"/><text x="1045.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c) (6 samples, 0.63%)</title><rect x="1038" y="228" width="7" height="15" fill="rgb(244,179,31)"/><text x="1041.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.42%)</title><rect x="1040" y="244" width="5" height="15" fill="rgb(238,140,39)"/><text x="1043.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.21%)</title><rect x="1043" y="260" width="2" height="15" fill="rgb(229,13,42)"/><text x="1046.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.11%)</title><rect x="1047" y="244" width="1" height="15" fill="rgb(235,47,25)"/><text x="1050.00" y="254.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.32%)</title><rect x="1045" y="228" width="4" height="15" fill="rgb(253,208,15)"/><text x="1048.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.11%)</title><rect x="1048" y="244" width="1" height="15" fill="rgb(224,115,43)"/><text x="1051.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="1052" y="324" width="1" height="15" fill="rgb(234,47,13)"/><text x="1055.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="1052" y="340" width="1" height="15" fill="rgb(244,12,12)"/><text x="1055.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="1052" y="356" width="1" height="15" fill="rgb(227,103,51)"/><text x="1055.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.21%)</title><rect x="1052" y="292" width="2" height="15" fill="rgb(230,163,38)"/><text x="1055.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.21%)</title><rect x="1052" y="308" width="2" height="15" fill="rgb(243,223,42)"/><text x="1055.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="1053" y="324" width="1" height="15" fill="rgb(223,17,37)"/><text x="1056.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1057" y="356" width="1" height="15" fill="rgb(220,45,19)"/><text x="1060.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.21%)</title><rect x="1057" y="340" width="2" height="15" fill="rgb(205,56,53)"/><text x="1060.00" y="350.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="1058" y="356" width="1" height="15" fill="rgb(248,31,47)"/><text x="1061.00" y="366.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (2 samples, 0.21%)</title><rect x="1059" y="340" width="3" height="15" fill="rgb(223,140,27)"/><text x="1062.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (8 samples, 0.84%)</title><rect x="1067" y="356" width="9" height="15" fill="rgb(236,59,45)"/><text x="1070.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (4 samples, 0.42%)</title><rect x="1072" y="372" width="4" height="15" fill="rgb(250,191,28)"/><text x="1075.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (20 samples, 2.11%)</title><rect x="1055" y="324" width="25" height="15" fill="rgb(222,136,9)"/><text x="1058.00" y="334.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (15 samples, 1.58%)</title><rect x="1062" y="340" width="18" height="15" fill="rgb(215,203,46)"/><text x="1065.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.32%)</title><rect x="1076" y="356" width="4" height="15" fill="rgb(229,96,4)"/><text x="1079.00" y="366.50"></text></g><g><title>array_sum (methods.c) (26 samples, 2.74%)</title><rect x="1049" y="228" width="32" height="15" fill="rgb(213,152,42)"/><text x="1052.00" y="238.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (26 samples, 2.74%)</title><rect x="1049" y="244" width="32" height="15" fill="rgb(248,47,51)"/><text x="1052.00" y="254.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (25 samples, 2.63%)</title><rect x="1050" y="260" width="31" height="15" fill="rgb(213,121,1)"/><text x="1053.00" y="270.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (25 samples, 2.63%)</title><rect x="1050" y="276" width="31" height="15" fill="rgb(223,15,53)"/><text x="1053.00" y="286.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (22 samples, 2.32%)</title><rect x="1054" y="292" width="27" height="15" fill="rgb(228,55,24)"/><text x="1057.00" y="302.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (21 samples, 2.21%)</title><rect x="1055" y="308" width="26" height="15" fill="rgb(206,229,34)"/><text x="1058.00" y="318.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1080" y="324" width="1" height="15" fill="rgb(230,223,48)"/><text x="1083.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1080" y="340" width="1" height="15" fill="rgb(240,54,1)"/><text x="1083.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1080" y="356" width="1" height="15" fill="rgb(251,173,13)"/><text x="1083.00" y="366.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1080" y="372" width="1" height="15" fill="rgb(228,204,39)"/><text x="1083.00" y="382.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (5 samples, 0.53%)</title><rect x="1081" y="228" width="7" height="15" fill="rgb(226,219,40)"/><text x="1084.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (4 samples, 0.42%)</title><rect x="1083" y="244" width="5" height="15" fill="rgb(248,80,53)"/><text x="1086.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.21%)</title><rect x="1085" y="260" width="3" height="15" fill="rgb(215,213,47)"/><text x="1088.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.11%)</title><rect x="1088" y="260" width="1" height="15" fill="rgb(219,213,54)"/><text x="1091.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="1088" y="276" width="1" height="15" fill="rgb(245,208,19)"/><text x="1091.00" y="286.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="1090" y="340" width="1" height="15" fill="rgb(224,40,54)"/><text x="1093.00" y="350.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (10 samples, 1.05%)</title><rect x="1090" y="292" width="13" height="15" fill="rgb(218,174,41)"/><text x="1093.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (10 samples, 1.05%)</title><rect x="1090" y="308" width="13" height="15" fill="rgb(219,85,32)"/><text x="1093.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (10 samples, 1.05%)</title><rect x="1090" y="324" width="13" height="15" fill="rgb(210,51,0)"/><text x="1093.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (9 samples, 0.95%)</title><rect x="1091" y="340" width="12" height="15" fill="rgb(249,27,12)"/><text x="1094.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.21%)</title><rect x="1103" y="292" width="2" height="15" fill="rgb(231,132,42)"/><text x="1106.00" y="302.50"></text></g><g><title>0x7fa19e483b82 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1104" y="308" width="1" height="15" fill="rgb(217,70,32)"/><text x="1107.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="1105" y="308" width="1" height="15" fill="rgb(222,132,36)"/><text x="1108.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (25 samples, 2.63%)</title><rect x="1089" y="260" width="31" height="15" fill="rgb(226,154,21)"/><text x="1092.00" y="270.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (25 samples, 2.63%)</title><rect x="1089" y="276" width="31" height="15" fill="rgb(210,60,26)"/><text x="1092.00" y="286.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (12 samples, 1.26%)</title><rect x="1105" y="292" width="15" height="15" fill="rgb(249,204,2)"/><text x="1108.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (11 samples, 1.16%)</title><rect x="1106" y="308" width="14" height="15" fill="rgb(210,158,9)"/><text x="1109.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (10 samples, 1.05%)</title><rect x="1108" y="324" width="12" height="15" fill="rgb(205,208,15)"/><text x="1111.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (6 samples, 0.63%)</title><rect x="1112" y="340" width="8" height="15" fill="rgb(208,187,41)"/><text x="1115.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (148 samples, 15.58%)</title><rect x="939" y="212" width="183" height="15" fill="rgb(230,189,23)"/><text x="942.00" y="222.50">predict_proba (sklearn/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (28 samples, 2.95%)</title><rect x="1088" y="228" width="34" height="15" fill="rgb(244,28,36)"/><text x="1091.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (28 samples, 2.95%)</title><rect x="1088" y="244" width="34" height="15" fill="rgb(209,216,12)"/><text x="1091.00" y="254.50">Py..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.21%)</title><rect x="1120" y="260" width="2" height="15" fill="rgb(239,56,33)"/><text x="1123.00" y="270.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.21%)</title><rect x="1120" y="276" width="2" height="15" fill="rgb(210,147,6)"/><text x="1123.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1121" y="292" width="1" height="15" fill="rgb(222,155,47)"/><text x="1124.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1121" y="308" width="1" height="15" fill="rgb(206,63,10)"/><text x="1124.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1124" y="292" width="1" height="15" fill="rgb(211,6,29)"/><text x="1127.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1124" y="308" width="1" height="15" fill="rgb(242,118,4)"/><text x="1127.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.21%)</title><rect x="1124" y="260" width="2" height="15" fill="rgb(247,42,8)"/><text x="1127.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.21%)</title><rect x="1124" y="276" width="2" height="15" fill="rgb(224,130,48)"/><text x="1127.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="1125" y="292" width="1" height="15" fill="rgb(219,1,12)"/><text x="1128.00" y="302.50"></text></g><g><title>0x7fa19d6a70c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="1129" y="292" width="2" height="15" fill="rgb(213,106,49)"/><text x="1132.00" y="302.50"></text></g><g><title>0x7fa19e655dd0 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="1131" y="292" width="3" height="15" fill="rgb(250,143,14)"/><text x="1134.00" y="302.50"></text></g><g><title>0x7fa19e655e01 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="1134" y="292" width="2" height="15" fill="rgb(238,78,45)"/><text x="1137.00" y="302.50"></text></g><g><title>0x7fa19e655e25 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="1136" y="292" width="3" height="15" fill="rgb(243,49,34)"/><text x="1139.00" y="302.50"></text></g><g><title>0x7fa19e655e40 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="1139" y="292" width="2" height="15" fill="rgb(253,215,54)"/><text x="1142.00" y="302.50"></text></g><g><title>0x7fa19e655e4d (libm-2.29.so) (2 samples, 0.21%)</title><rect x="1141" y="292" width="3" height="15" fill="rgb(245,33,44)"/><text x="1144.00" y="302.50"></text></g><g><title>0x7fa19e655e61 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1144" y="292" width="1" height="15" fill="rgb(218,128,11)"/><text x="1147.00" y="302.50"></text></g><g><title>0x7fa19e655e6e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1145" y="292" width="1" height="15" fill="rgb(207,29,18)"/><text x="1148.00" y="302.50"></text></g><g><title>0x7fa19e655e7e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1146" y="292" width="1" height="15" fill="rgb(241,28,27)"/><text x="1149.00" y="302.50"></text></g><g><title>0x7fa19e655ea2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1147" y="292" width="2" height="15" fill="rgb(229,15,33)"/><text x="1150.00" y="302.50"></text></g><g><title>0x7fa19e655eb6 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="1149" y="292" width="2" height="15" fill="rgb(210,130,28)"/><text x="1152.00" y="302.50"></text></g><g><title>0x7fa19e655ec6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1151" y="292" width="1" height="15" fill="rgb(233,145,5)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7fa19e655eca (libm-2.29.so) (2 samples, 0.21%)</title><rect x="1152" y="292" width="3" height="15" fill="rgb(213,76,28)"/><text x="1155.00" y="302.50"></text></g><g><title>0x7fa19e655ed2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1155" y="292" width="1" height="15" fill="rgb(219,7,46)"/><text x="1158.00" y="302.50"></text></g><g><title>0x7fa19e655ef6 (libm-2.29.so) (5 samples, 0.53%)</title><rect x="1156" y="292" width="6" height="15" fill="rgb(217,24,5)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7fa19e655efa (libm-2.29.so) (3 samples, 0.32%)</title><rect x="1162" y="292" width="4" height="15" fill="rgb(222,224,17)"/><text x="1165.00" y="302.50"></text></g><g><title>0x7fa19e655f2b (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1166" y="292" width="1" height="15" fill="rgb(214,57,22)"/><text x="1169.00" y="302.50"></text></g><g><title>0x7fa19e655fab (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1167" y="292" width="1" height="15" fill="rgb(237,65,4)"/><text x="1170.00" y="302.50"></text></g><g><title>0x7fa19e655fd3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1168" y="292" width="2" height="15" fill="rgb(243,167,40)"/><text x="1171.00" y="302.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1170" y="292" width="1" height="15" fill="rgb(217,75,16)"/><text x="1173.00" y="302.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (39 samples, 4.11%)</title><rect x="1126" y="276" width="49" height="15" fill="rgb(246,74,17)"/><text x="1129.00" y="286.50">PyUF..</text></g><g><title>npy_log (npy_math_internal.h.src) (3 samples, 0.32%)</title><rect x="1171" y="292" width="4" height="15" fill="rgb(217,186,13)"/><text x="1174.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (326 samples, 34.32%)</title><rect x="771" y="196" width="405" height="15" fill="rgb(245,168,31)"/><text x="774.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (43 samples, 4.53%)</title><rect x="1122" y="212" width="54" height="15" fill="rgb(209,5,30)"/><text x="1125.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (43 samples, 4.53%)</title><rect x="1122" y="228" width="54" height="15" fill="rgb(212,72,43)"/><text x="1125.00" y="238.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (42 samples, 4.42%)</title><rect x="1124" y="244" width="52" height="15" fill="rgb(216,195,46)"/><text x="1127.00" y="254.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (40 samples, 4.21%)</title><rect x="1126" y="260" width="50" height="15" fill="rgb(218,57,9)"/><text x="1129.00" y="270.50">trivi..</text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="1175" y="276" width="1" height="15" fill="rgb(214,194,6)"/><text x="1178.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (327 samples, 34.42%)</title><rect x="771" y="180" width="406" height="15" fill="rgb(249,207,20)"/><text x="774.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1176" y="196" width="1" height="15" fill="rgb(212,70,25)"/><text x="1179.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1176" y="212" width="1" height="15" fill="rgb(241,222,12)"/><text x="1179.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="1176" y="228" width="1" height="15" fill="rgb(210,163,19)"/><text x="1179.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="1176" y="244" width="1" height="15" fill="rgb(228,138,23)"/><text x="1179.00" y="254.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1177" y="228" width="1" height="15" fill="rgb(230,60,19)"/><text x="1180.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1178" y="228" width="2" height="15" fill="rgb(236,154,17)"/><text x="1181.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1178" y="244" width="2" height="15" fill="rgb(217,91,32)"/><text x="1181.00" y="254.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1178" y="260" width="2" height="15" fill="rgb(238,53,13)"/><text x="1181.00" y="270.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1178" y="276" width="2" height="15" fill="rgb(254,1,50)"/><text x="1181.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="1180" y="244" width="1" height="15" fill="rgb(250,12,3)"/><text x="1183.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="1180" y="260" width="1" height="15" fill="rgb(216,159,19)"/><text x="1183.00" y="270.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1180" y="276" width="1" height="15" fill="rgb(224,9,3)"/><text x="1183.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1180" y="292" width="1" height="15" fill="rgb(226,19,9)"/><text x="1183.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.11%)</title><rect x="1181" y="260" width="1" height="15" fill="rgb(205,127,49)"/><text x="1184.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1181" y="276" width="1" height="15" fill="rgb(236,77,48)"/><text x="1184.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1181" y="292" width="1" height="15" fill="rgb(243,113,8)"/><text x="1184.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="1181" y="308" width="1" height="15" fill="rgb(231,169,22)"/><text x="1184.00" y="318.50"></text></g><g><title>array_add (number.c) (5 samples, 0.53%)</title><rect x="1177" y="180" width="6" height="15" fill="rgb(251,213,22)"/><text x="1180.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.53%)</title><rect x="1177" y="196" width="6" height="15" fill="rgb(219,137,6)"/><text x="1180.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.53%)</title><rect x="1177" y="212" width="6" height="15" fill="rgb(223,75,31)"/><text x="1180.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.32%)</title><rect x="1180" y="228" width="3" height="15" fill="rgb(232,103,32)"/><text x="1183.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.21%)</title><rect x="1181" y="244" width="2" height="15" fill="rgb(213,189,31)"/><text x="1184.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="1182" y="260" width="1" height="15" fill="rgb(238,5,31)"/><text x="1185.00" y="270.50"></text></g><g><title>array_sum (methods.c) (1 samples, 0.11%)</title><rect x="1183" y="180" width="2" height="15" fill="rgb(224,51,19)"/><text x="1186.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.11%)</title><rect x="1183" y="196" width="2" height="15" fill="rgb(250,193,47)"/><text x="1186.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="1183" y="212" width="2" height="15" fill="rgb(205,157,53)"/><text x="1186.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1183" y="228" width="2" height="15" fill="rgb(229,190,22)"/><text x="1186.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1183" y="244" width="2" height="15" fill="rgb(243,126,5)"/><text x="1186.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1183" y="260" width="2" height="15" fill="rgb(254,77,24)"/><text x="1186.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.11%)</title><rect x="1183" y="276" width="2" height="15" fill="rgb(251,187,53)"/><text x="1186.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="1183" y="292" width="2" height="15" fill="rgb(230,77,8)"/><text x="1186.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="1183" y="308" width="2" height="15" fill="rgb(213,196,47)"/><text x="1186.00" y="318.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.11%)</title><rect x="1183" y="324" width="2" height="15" fill="rgb(207,2,22)"/><text x="1186.00" y="334.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (341 samples, 35.89%)</title><rect x="762" y="100" width="424" height="15" fill="rgb(244,222,54)"/><text x="765.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (341 samples, 35.89%)</title><rect x="762" y="116" width="424" height="15" fill="rgb(240,57,44)"/><text x="765.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (341 samples, 35.89%)</title><rect x="762" y="132" width="424" height="15" fill="rgb(209,8,54)"/><text x="765.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (341 samples, 35.89%)</title><rect x="762" y="148" width="424" height="15" fill="rgb(243,117,3)"/><text x="765.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (335 samples, 35.26%)</title><rect x="770" y="164" width="416" height="15" fill="rgb(249,183,5)"/><text x="773.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1185" y="180" width="1" height="15" fill="rgb(243,164,19)"/><text x="1188.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="1185" y="196" width="1" height="15" fill="rgb(215,111,10)"/><text x="1188.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="1185" y="212" width="1" height="15" fill="rgb(207,110,3)"/><text x="1188.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="1185" y="228" width="1" height="15" fill="rgb(230,92,51)"/><text x="1188.00" y="238.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="1185" y="244" width="1" height="15" fill="rgb(237,108,26)"/><text x="1188.00" y="254.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="1185" y="260" width="1" height="15" fill="rgb(209,41,52)"/><text x="1188.00" y="270.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (342 samples, 36.00%)</title><rect x="762" y="68" width="425" height="15" fill="rgb(222,3,50)"/><text x="765.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1000_50..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (342 samples, 36.00%)</title><rect x="762" y="84" width="425" height="15" fill="rgb(254,44,23)"/><text x="765.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="1186" y="100" width="1" height="15" fill="rgb(248,26,13)"/><text x="1189.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="1186" y="116" width="1" height="15" fill="rgb(224,85,20)"/><text x="1189.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="1186" y="132" width="1" height="15" fill="rgb(224,106,30)"/><text x="1189.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.11%)</title><rect x="1186" y="148" width="1" height="15" fill="rgb(208,130,30)"/><text x="1189.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.11%)</title><rect x="1186" y="164" width="1" height="15" fill="rgb(213,141,33)"/><text x="1189.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="1186" y="180" width="1" height="15" fill="rgb(224,221,51)"/><text x="1189.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py) (1 samples, 0.11%)</title><rect x="1186" y="196" width="1" height="15" fill="rgb(206,180,5)"/><text x="1189.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="1186" y="212" width="1" height="15" fill="rgb(228,131,41)"/><text x="1189.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.11%)</title><rect x="1186" y="228" width="1" height="15" fill="rgb(247,167,10)"/><text x="1189.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1186" y="244" width="1" height="15" fill="rgb(231,38,14)"/><text x="1189.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.11%)</title><rect x="1186" y="260" width="1" height="15" fill="rgb(233,158,21)"/><text x="1189.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.11%)</title><rect x="1186" y="276" width="1" height="15" fill="rgb(236,45,52)"/><text x="1189.00" y="286.50"></text></g><g><title>google::protobuf::python::repeated_scalar_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1186" y="292" width="1" height="15" fill="rgb(248,24,24)"/><text x="1189.00" y="302.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.11%)</title><rect x="1186" y="308" width="1" height="15" fill="rgb(254,29,21)"/><text x="1189.00" y="318.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="1187" y="116" width="1" height="15" fill="rgb(220,24,25)"/><text x="1190.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py) (1 samples, 0.11%)</title><rect x="1187" y="132" width="1" height="15" fill="rgb(244,158,32)"/><text x="1190.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py) (1 samples, 0.11%)</title><rect x="1187" y="148" width="1" height="15" fill="rgb(230,56,30)"/><text x="1190.00" y="158.50"></text></g><g><title>Reader_iternext (_csv.c) (1 samples, 0.11%)</title><rect x="1187" y="164" width="1" height="15" fill="rgb(215,179,19)"/><text x="1190.00" y="174.50"></text></g><g><title>parse_reset (_csv.c) (1 samples, 0.11%)</title><rect x="1187" y="180" width="1" height="15" fill="rgb(221,195,34)"/><text x="1190.00" y="190.50"></text></g><g><title>all (950 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(210,62,45)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (950 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(232,27,0)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py) (2 samples, 0.21%)</title><rect x="1187" y="68" width="3" height="15" fill="rgb(230,48,2)"/><text x="1190.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py) (2 samples, 0.21%)</title><rect x="1187" y="84" width="3" height="15" fill="rgb(252,162,12)"/><text x="1190.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.21%)</title><rect x="1187" y="100" width="3" height="15" fill="rgb(208,93,19)"/><text x="1190.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="1188" y="116" width="2" height="15" fill="rgb(226,159,22)"/><text x="1191.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(216,2,22)"/><text x="1191.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="1188" y="148" width="2" height="15" fill="rgb(210,183,19)"/><text x="1191.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(222,197,51)"/><text x="1191.00" y="174.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.11%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(218,195,26)"/><text x="1191.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (1 samples, 0.11%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(213,7,53)"/><text x="1191.00" y="206.50"></text></g><g><title>set_params (sklearn/base.py) (1 samples, 0.11%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(217,162,35)"/><text x="1191.00" y="222.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.11%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(251,225,44)"/><text x="1191.00" y="238.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.11%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(226,157,35)"/><text x="1191.00" y="254.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.11%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(222,70,53)"/><text x="1191.00" y="270.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(207,212,18)"/><text x="1191.00" y="286.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(216,66,6)"/><text x="1191.00" y="302.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.11%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(210,172,30)"/><text x="1191.00" y="318.50"></text></g></g></svg>