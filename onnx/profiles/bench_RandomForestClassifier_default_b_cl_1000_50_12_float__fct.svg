<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2118" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2101.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2101.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(205,38,25)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(206,99,17)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(230,224,35)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(228,228,23)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(242,128,17)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(212,69,40)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(249,167,40)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(218,173,10)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(244,8,31)"/><text x="13.00" y="1006.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(241,49,33)"/><text x="14.00" y="942.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="11" y="868" width="4" height="15" fill="rgb(225,185,2)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="11" y="884" width="4" height="15" fill="rgb(221,73,11)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="11" y="900" width="4" height="15" fill="rgb(226,85,13)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="11" y="916" width="4" height="15" fill="rgb(208,15,36)"/><text x="14.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(209,205,24)"/><text x="16.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(222,23,49)"/><text x="16.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="13" y="964" width="2" height="15" fill="rgb(228,207,38)"/><text x="16.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="13" y="980" width="2" height="15" fill="rgb(248,138,16)"/><text x="16.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.17%)</title><rect x="13" y="996" width="2" height="15" fill="rgb(205,57,49)"/><text x="16.00" y="1006.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.17%)</title><rect x="13" y="1012" width="2" height="15" fill="rgb(227,15,29)"/><text x="16.00" y="1022.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.17%)</title><rect x="13" y="1028" width="2" height="15" fill="rgb(216,212,25)"/><text x="16.00" y="1038.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.17%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(224,190,33)"/><text x="18.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.17%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(251,6,33)"/><text x="18.00" y="942.50"></text></g><g><title>&lt;lambda&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.17%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(229,24,6)"/><text x="18.00" y="958.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="15" y="900" width="4" height="15" fill="rgb(207,218,43)"/><text x="18.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(243,74,15)"/><text x="20.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(233,136,48)"/><text x="20.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.17%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(210,77,7)"/><text x="20.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.17%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(246,207,51)"/><text x="20.00" y="974.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 1.00%)</title><rect x="10" y="836" width="11" height="15" fill="rgb(249,222,46)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 1.00%)</title><rect x="10" y="852" width="11" height="15" fill="rgb(233,101,0)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.50%)</title><rect x="15" y="868" width="6" height="15" fill="rgb(215,25,11)"/><text x="18.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.50%)</title><rect x="15" y="884" width="6" height="15" fill="rgb(240,20,50)"/><text x="18.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(219,59,30)"/><text x="22.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(253,25,32)"/><text x="22.00" y="926.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.17%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(207,105,8)"/><text x="22.00" y="942.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.17%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(239,135,43)"/><text x="22.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="10" y="596" width="13" height="15" fill="rgb(205,178,27)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="10" y="612" width="13" height="15" fill="rgb(208,121,11)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="10" y="628" width="13" height="15" fill="rgb(205,160,53)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="10" y="644" width="13" height="15" fill="rgb(219,86,25)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="10" y="660" width="13" height="15" fill="rgb(221,54,45)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="10" y="676" width="13" height="15" fill="rgb(209,38,33)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.16%)</title><rect x="10" y="692" width="13" height="15" fill="rgb(217,18,33)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="10" y="708" width="13" height="15" fill="rgb(211,188,1)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 1.16%)</title><rect x="10" y="724" width="13" height="15" fill="rgb(233,149,7)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="10" y="740" width="13" height="15" fill="rgb(252,209,42)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="10" y="756" width="13" height="15" fill="rgb(241,74,50)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="10" y="772" width="13" height="15" fill="rgb(219,134,24)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.16%)</title><rect x="10" y="788" width="13" height="15" fill="rgb(229,63,11)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="10" y="804" width="13" height="15" fill="rgb(242,206,12)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 1.16%)</title><rect x="10" y="820" width="13" height="15" fill="rgb(232,193,52)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="836" width="2" height="15" fill="rgb(233,185,22)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="852" width="2" height="15" fill="rgb(240,122,7)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="868" width="2" height="15" fill="rgb(251,210,26)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="21" y="884" width="2" height="15" fill="rgb(253,99,16)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="900" width="2" height="15" fill="rgb(243,120,9)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py) (1 samples, 0.17%)</title><rect x="21" y="916" width="2" height="15" fill="rgb(217,215,2)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="932" width="2" height="15" fill="rgb(242,204,31)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="948" width="2" height="15" fill="rgb(240,36,16)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="964" width="2" height="15" fill="rgb(211,158,11)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="21" y="980" width="2" height="15" fill="rgb(226,120,14)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="996" width="2" height="15" fill="rgb(253,178,16)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py) (1 samples, 0.17%)</title><rect x="21" y="1012" width="2" height="15" fill="rgb(253,38,36)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1028" width="2" height="15" fill="rgb(209,38,13)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1044" width="2" height="15" fill="rgb(206,203,1)"/><text x="24.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1060" width="2" height="15" fill="rgb(215,107,34)"/><text x="24.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="21" y="1076" width="2" height="15" fill="rgb(254,164,45)"/><text x="24.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1092" width="2" height="15" fill="rgb(210,152,48)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py) (1 samples, 0.17%)</title><rect x="21" y="1108" width="2" height="15" fill="rgb(223,217,29)"/><text x="24.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1124" width="2" height="15" fill="rgb(247,74,12)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1140" width="2" height="15" fill="rgb(238,189,43)"/><text x="24.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1156" width="2" height="15" fill="rgb(205,212,51)"/><text x="24.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="21" y="1172" width="2" height="15" fill="rgb(219,170,20)"/><text x="24.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1188" width="2" height="15" fill="rgb(249,144,32)"/><text x="24.00" y="1198.50"></text></g><g><title>&lt;module&gt; (email/utils.py) (1 samples, 0.17%)</title><rect x="21" y="1204" width="2" height="15" fill="rgb(244,135,41)"/><text x="24.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1220" width="2" height="15" fill="rgb(241,223,31)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1236" width="2" height="15" fill="rgb(251,190,37)"/><text x="24.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1252" width="2" height="15" fill="rgb(236,197,9)"/><text x="24.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="21" y="1268" width="2" height="15" fill="rgb(246,61,7)"/><text x="24.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1284" width="2" height="15" fill="rgb(250,149,19)"/><text x="24.00" y="1294.50"></text></g><g><title>&lt;module&gt; (socket.py) (1 samples, 0.17%)</title><rect x="21" y="1300" width="2" height="15" fill="rgb(210,100,31)"/><text x="24.00" y="1310.50"></text></g><g><title>_convert (enum.py) (1 samples, 0.17%)</title><rect x="21" y="1316" width="2" height="15" fill="rgb(214,55,42)"/><text x="24.00" y="1326.50"></text></g><g><title>__call__ (enum.py) (1 samples, 0.17%)</title><rect x="21" y="1332" width="2" height="15" fill="rgb(210,147,45)"/><text x="24.00" y="1342.50"></text></g><g><title>_create_ (enum.py) (1 samples, 0.17%)</title><rect x="21" y="1348" width="2" height="15" fill="rgb(246,112,27)"/><text x="24.00" y="1358.50"></text></g><g><title>_get_mixins_ (enum.py) (1 samples, 0.17%)</title><rect x="21" y="1364" width="2" height="15" fill="rgb(205,196,10)"/><text x="24.00" y="1374.50"></text></g><g><title>_find_data_type (enum.py) (1 samples, 0.17%)</title><rect x="21" y="1380" width="2" height="15" fill="rgb(206,214,36)"/><text x="24.00" y="1390.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (8 samples, 1.33%)</title><rect x="10" y="292" width="15" height="15" fill="rgb(230,205,1)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.33%)</title><rect x="10" y="308" width="15" height="15" fill="rgb(224,50,17)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.33%)</title><rect x="10" y="324" width="15" height="15" fill="rgb(252,215,16)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.33%)</title><rect x="10" y="340" width="15" height="15" fill="rgb(251,176,23)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.33%)</title><rect x="10" y="356" width="15" height="15" fill="rgb(246,197,21)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.33%)</title><rect x="10" y="372" width="15" height="15" fill="rgb(207,226,41)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (8 samples, 1.33%)</title><rect x="10" y="388" width="15" height="15" fill="rgb(217,169,54)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.33%)</title><rect x="10" y="404" width="15" height="15" fill="rgb(205,155,36)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.33%)</title><rect x="10" y="420" width="15" height="15" fill="rgb(207,143,20)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.33%)</title><rect x="10" y="436" width="15" height="15" fill="rgb(245,214,1)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.33%)</title><rect x="10" y="452" width="15" height="15" fill="rgb(243,115,54)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.33%)</title><rect x="10" y="468" width="15" height="15" fill="rgb(246,29,16)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (8 samples, 1.33%)</title><rect x="10" y="484" width="15" height="15" fill="rgb(220,13,49)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.33%)</title><rect x="10" y="500" width="15" height="15" fill="rgb(249,187,52)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.33%)</title><rect x="10" y="516" width="15" height="15" fill="rgb(252,142,49)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.33%)</title><rect x="10" y="532" width="15" height="15" fill="rgb(252,141,46)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.33%)</title><rect x="10" y="548" width="15" height="15" fill="rgb(206,152,21)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.33%)</title><rect x="10" y="564" width="15" height="15" fill="rgb(220,38,8)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (8 samples, 1.33%)</title><rect x="10" y="580" width="15" height="15" fill="rgb(213,97,3)"/><text x="13.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="23" y="596" width="2" height="15" fill="rgb(213,167,43)"/><text x="26.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="23" y="612" width="2" height="15" fill="rgb(207,126,35)"/><text x="26.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="23" y="628" width="2" height="15" fill="rgb(238,121,51)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="23" y="644" width="2" height="15" fill="rgb(250,170,25)"/><text x="26.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="23" y="660" width="2" height="15" fill="rgb(214,49,15)"/><text x="26.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="23" y="676" width="2" height="15" fill="rgb(228,154,21)"/><text x="26.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="23" y="692" width="2" height="15" fill="rgb(236,17,20)"/><text x="26.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor.py) (1 samples, 0.17%)</title><rect x="23" y="708" width="2" height="15" fill="rgb(236,22,18)"/><text x="26.00" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="23" y="724" width="2" height="15" fill="rgb(242,153,49)"/><text x="26.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="23" y="740" width="2" height="15" fill="rgb(216,49,28)"/><text x="26.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="23" y="756" width="2" height="15" fill="rgb(210,111,29)"/><text x="26.00" y="766.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="23" y="772" width="2" height="15" fill="rgb(208,66,45)"/><text x="26.00" y="782.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="23" y="788" width="2" height="15" fill="rgb(219,92,25)"/><text x="26.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="500" width="2" height="15" fill="rgb(250,64,26)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="516" width="2" height="15" fill="rgb(223,48,49)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="532" width="2" height="15" fill="rgb(206,172,0)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="25" y="548" width="2" height="15" fill="rgb(226,111,22)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="564" width="2" height="15" fill="rgb(210,83,2)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.17%)</title><rect x="25" y="580" width="2" height="15" fill="rgb(218,158,10)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="596" width="2" height="15" fill="rgb(224,143,44)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="612" width="2" height="15" fill="rgb(227,137,41)"/><text x="28.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="628" width="2" height="15" fill="rgb(219,162,30)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="644" width="2" height="15" fill="rgb(205,209,52)"/><text x="28.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="660" width="2" height="15" fill="rgb(246,107,35)"/><text x="28.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="676" width="2" height="15" fill="rgb(207,218,23)"/><text x="28.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="25" y="692" width="2" height="15" fill="rgb(218,173,45)"/><text x="28.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="708" width="2" height="15" fill="rgb(209,118,29)"/><text x="28.00" y="718.50"></text></g><g><title>&lt;module&gt; (distutils/__init__.py) (1 samples, 0.17%)</title><rect x="25" y="724" width="2" height="15" fill="rgb(224,2,43)"/><text x="28.00" y="734.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="740" width="2" height="15" fill="rgb(244,152,49)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="756" width="2" height="15" fill="rgb(217,152,21)"/><text x="28.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="772" width="2" height="15" fill="rgb(214,134,5)"/><text x="28.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="788" width="2" height="15" fill="rgb(247,184,33)"/><text x="28.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="804" width="2" height="15" fill="rgb(235,77,38)"/><text x="28.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="25" y="820" width="2" height="15" fill="rgb(226,48,2)"/><text x="28.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="836" width="2" height="15" fill="rgb(225,100,2)"/><text x="28.00" y="846.50"></text></g><g><title>&lt;module&gt; (distutils/dist.py) (1 samples, 0.17%)</title><rect x="25" y="852" width="2" height="15" fill="rgb(234,27,41)"/><text x="28.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="868" width="2" height="15" fill="rgb(236,180,53)"/><text x="28.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="884" width="2" height="15" fill="rgb(212,174,20)"/><text x="28.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="900" width="2" height="15" fill="rgb(236,197,37)"/><text x="28.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="25" y="916" width="2" height="15" fill="rgb(254,119,38)"/><text x="28.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="932" width="2" height="15" fill="rgb(211,75,51)"/><text x="28.00" y="942.50"></text></g><g><title>&lt;module&gt; (distutils/errors.py) (1 samples, 0.17%)</title><rect x="25" y="948" width="2" height="15" fill="rgb(219,181,4)"/><text x="28.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.66%)</title><rect x="10" y="196" width="19" height="15" fill="rgb(251,182,12)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.66%)</title><rect x="10" y="212" width="19" height="15" fill="rgb(226,43,44)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.66%)</title><rect x="10" y="228" width="19" height="15" fill="rgb(249,150,5)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.66%)</title><rect x="10" y="244" width="19" height="15" fill="rgb(242,219,40)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.66%)</title><rect x="10" y="260" width="19" height="15" fill="rgb(231,29,49)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.66%)</title><rect x="10" y="276" width="19" height="15" fill="rgb(237,120,42)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.33%)</title><rect x="25" y="292" width="4" height="15" fill="rgb(207,190,34)"/><text x="28.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="25" y="308" width="4" height="15" fill="rgb(223,88,37)"/><text x="28.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="25" y="324" width="4" height="15" fill="rgb(248,183,39)"/><text x="28.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="25" y="340" width="4" height="15" fill="rgb(245,2,42)"/><text x="28.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="25" y="356" width="4" height="15" fill="rgb(213,219,0)"/><text x="28.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="25" y="372" width="4" height="15" fill="rgb(237,217,48)"/><text x="28.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.33%)</title><rect x="25" y="388" width="4" height="15" fill="rgb(237,141,15)"/><text x="28.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="25" y="404" width="4" height="15" fill="rgb(206,84,44)"/><text x="28.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="25" y="420" width="4" height="15" fill="rgb(227,213,35)"/><text x="28.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="25" y="436" width="4" height="15" fill="rgb(213,67,48)"/><text x="28.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="25" y="452" width="4" height="15" fill="rgb(214,99,47)"/><text x="28.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="25" y="468" width="4" height="15" fill="rgb(231,206,28)"/><text x="28.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.33%)</title><rect x="25" y="484" width="4" height="15" fill="rgb(231,183,7)"/><text x="28.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="500" width="2" height="15" fill="rgb(248,17,13)"/><text x="30.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="516" width="2" height="15" fill="rgb(234,7,1)"/><text x="30.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="532" width="2" height="15" fill="rgb(242,52,8)"/><text x="30.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="548" width="2" height="15" fill="rgb(235,109,24)"/><text x="30.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="564" width="2" height="15" fill="rgb(247,156,7)"/><text x="30.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="27" y="580" width="2" height="15" fill="rgb(214,4,21)"/><text x="30.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="596" width="2" height="15" fill="rgb(220,87,18)"/><text x="30.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.17%)</title><rect x="27" y="612" width="2" height="15" fill="rgb(230,78,27)"/><text x="30.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="628" width="2" height="15" fill="rgb(209,195,2)"/><text x="30.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="644" width="2" height="15" fill="rgb(254,167,21)"/><text x="30.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="660" width="2" height="15" fill="rgb(245,206,24)"/><text x="30.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="27" y="676" width="2" height="15" fill="rgb(249,69,4)"/><text x="30.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="692" width="2" height="15" fill="rgb(220,139,34)"/><text x="30.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.17%)</title><rect x="27" y="708" width="2" height="15" fill="rgb(227,83,28)"/><text x="30.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="724" width="2" height="15" fill="rgb(219,88,38)"/><text x="30.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="740" width="2" height="15" fill="rgb(217,140,28)"/><text x="30.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="756" width="2" height="15" fill="rgb(233,105,13)"/><text x="30.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="27" y="772" width="2" height="15" fill="rgb(248,18,32)"/><text x="30.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="788" width="2" height="15" fill="rgb(227,97,5)"/><text x="30.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.17%)</title><rect x="27" y="804" width="2" height="15" fill="rgb(252,65,30)"/><text x="30.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="820" width="2" height="15" fill="rgb(206,24,3)"/><text x="30.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="836" width="2" height="15" fill="rgb(241,127,51)"/><text x="30.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="852" width="2" height="15" fill="rgb(217,199,6)"/><text x="30.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="27" y="868" width="2" height="15" fill="rgb(229,107,30)"/><text x="30.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="884" width="2" height="15" fill="rgb(230,10,19)"/><text x="30.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.17%)</title><rect x="27" y="900" width="2" height="15" fill="rgb(224,205,14)"/><text x="30.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="916" width="2" height="15" fill="rgb(250,213,46)"/><text x="30.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="932" width="2" height="15" fill="rgb(220,88,42)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="948" width="2" height="15" fill="rgb(210,224,43)"/><text x="30.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="964" width="2" height="15" fill="rgb(206,129,10)"/><text x="30.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="980" width="2" height="15" fill="rgb(243,147,18)"/><text x="30.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="27" y="996" width="2" height="15" fill="rgb(241,83,43)"/><text x="30.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1012" width="2" height="15" fill="rgb(212,13,20)"/><text x="30.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py) (1 samples, 0.17%)</title><rect x="27" y="1028" width="2" height="15" fill="rgb(233,29,38)"/><text x="30.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1044" width="2" height="15" fill="rgb(248,45,34)"/><text x="30.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1060" width="2" height="15" fill="rgb(228,90,43)"/><text x="30.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1076" width="2" height="15" fill="rgb(214,6,6)"/><text x="30.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="27" y="1092" width="2" height="15" fill="rgb(209,93,40)"/><text x="30.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1108" width="2" height="15" fill="rgb(215,149,17)"/><text x="30.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py) (1 samples, 0.17%)</title><rect x="27" y="1124" width="2" height="15" fill="rgb(248,205,29)"/><text x="30.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="1124" width="2" height="15" fill="rgb(221,190,7)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="1140" width="2" height="15" fill="rgb(207,50,16)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="1156" width="2" height="15" fill="rgb(227,38,52)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="29" y="1172" width="2" height="15" fill="rgb(232,179,13)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="1188" width="2" height="15" fill="rgb(206,96,12)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.17%)</title><rect x="29" y="1204" width="2" height="15" fill="rgb(223,117,22)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="1220" width="2" height="15" fill="rgb(247,177,24)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="1236" width="2" height="15" fill="rgb(245,106,38)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="1252" width="2" height="15" fill="rgb(230,160,45)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="29" y="1268" width="2" height="15" fill="rgb(253,158,40)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="1284" width="2" height="15" fill="rgb(234,212,1)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.17%)</title><rect x="29" y="1300" width="2" height="15" fill="rgb(242,212,53)"/><text x="32.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.17%)</title><rect x="29" y="1316" width="2" height="15" fill="rgb(206,56,16)"/><text x="32.00" y="1326.50"></text></g><g><title>compile (re.py) (1 samples, 0.17%)</title><rect x="29" y="1332" width="2" height="15" fill="rgb(231,43,20)"/><text x="32.00" y="1342.50"></text></g><g><title>_compile (re.py) (1 samples, 0.17%)</title><rect x="29" y="1348" width="2" height="15" fill="rgb(251,109,6)"/><text x="32.00" y="1358.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="29" y="1364" width="2" height="15" fill="rgb(237,68,42)"/><text x="32.00" y="1374.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="29" y="1380" width="2" height="15" fill="rgb(207,220,9)"/><text x="32.00" y="1390.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.17%)</title><rect x="29" y="1396" width="2" height="15" fill="rgb(224,201,50)"/><text x="32.00" y="1406.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="29" y="1412" width="2" height="15" fill="rgb(207,46,36)"/><text x="32.00" y="1422.50"></text></g><g><title>_uniq (sre_parse.py) (1 samples, 0.17%)</title><rect x="29" y="1428" width="2" height="15" fill="rgb(227,169,21)"/><text x="32.00" y="1438.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="31" y="1588" width="2" height="15" fill="rgb(246,209,24)"/><text x="34.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="31" y="1604" width="2" height="15" fill="rgb(248,45,32)"/><text x="34.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="31" y="1620" width="2" height="15" fill="rgb(209,57,36)"/><text x="34.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="31" y="1636" width="2" height="15" fill="rgb(239,65,23)"/><text x="34.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.17%)</title><rect x="31" y="1652" width="2" height="15" fill="rgb(214,114,11)"/><text x="34.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.17%)</title><rect x="31" y="1668" width="2" height="15" fill="rgb(229,142,6)"/><text x="34.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.17%)</title><rect x="31" y="1684" width="2" height="15" fill="rgb(205,101,8)"/><text x="34.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.17%)</title><rect x="31" y="1700" width="2" height="15" fill="rgb(239,85,31)"/><text x="34.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.17%)</title><rect x="31" y="1716" width="2" height="15" fill="rgb(225,19,11)"/><text x="34.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.17%)</title><rect x="31" y="1732" width="2" height="15" fill="rgb(235,50,25)"/><text x="34.00" y="1742.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.17%)</title><rect x="31" y="1748" width="2" height="15" fill="rgb(229,113,8)"/><text x="34.00" y="1758.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.17%)</title><rect x="31" y="1764" width="2" height="15" fill="rgb(231,145,29)"/><text x="34.00" y="1774.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.17%)</title><rect x="31" y="1780" width="2" height="15" fill="rgb(205,150,46)"/><text x="34.00" y="1790.50"></text></g><g><title>expect (jinja2/lexer.py) (1 samples, 0.17%)</title><rect x="31" y="1796" width="2" height="15" fill="rgb(220,123,22)"/><text x="34.00" y="1806.50"></text></g><g><title>__next__ (jinja2/lexer.py) (1 samples, 0.17%)</title><rect x="31" y="1812" width="2" height="15" fill="rgb(237,139,48)"/><text x="34.00" y="1822.50"></text></g><g><title>wrap (jinja2/lexer.py) (1 samples, 0.17%)</title><rect x="31" y="1828" width="2" height="15" fill="rgb(237,46,32)"/><text x="34.00" y="1838.50"></text></g><g><title>_normalize_newlines (jinja2/lexer.py) (1 samples, 0.17%)</title><rect x="31" y="1844" width="2" height="15" fill="rgb(234,177,24)"/><text x="34.00" y="1854.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.17%)</title><rect x="31" y="1860" width="2" height="15" fill="rgb(231,74,48)"/><text x="34.00" y="1870.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.17%)</title><rect x="31" y="1876" width="2" height="15" fill="rgb(237,123,12)"/><text x="34.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1476" width="4" height="15" fill="rgb(213,11,13)"/><text x="34.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1492" width="4" height="15" fill="rgb(213,25,23)"/><text x="34.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1508" width="4" height="15" fill="rgb(235,181,5)"/><text x="34.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="31" y="1524" width="4" height="15" fill="rgb(223,77,33)"/><text x="34.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1540" width="4" height="15" fill="rgb(250,161,41)"/><text x="34.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (2 samples, 0.33%)</title><rect x="31" y="1556" width="4" height="15" fill="rgb(250,127,2)"/><text x="34.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (2 samples, 0.33%)</title><rect x="31" y="1572" width="4" height="15" fill="rgb(224,130,33)"/><text x="34.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1588" width="2" height="15" fill="rgb(234,117,11)"/><text x="36.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1604" width="2" height="15" fill="rgb(205,180,26)"/><text x="36.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1620" width="2" height="15" fill="rgb(217,217,28)"/><text x="36.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1636" width="2" height="15" fill="rgb(239,61,8)"/><text x="36.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1652" width="2" height="15" fill="rgb(216,147,23)"/><text x="36.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.17%)</title><rect x="33" y="1668" width="2" height="15" fill="rgb(231,223,9)"/><text x="36.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py) (1 samples, 0.17%)</title><rect x="33" y="1684" width="2" height="15" fill="rgb(238,50,52)"/><text x="36.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1700" width="2" height="15" fill="rgb(227,223,17)"/><text x="36.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1716" width="2" height="15" fill="rgb(248,15,4)"/><text x="36.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1732" width="2" height="15" fill="rgb(240,164,25)"/><text x="36.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1748" width="2" height="15" fill="rgb(254,3,16)"/><text x="36.00" y="1758.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1764" width="2" height="15" fill="rgb(213,133,25)"/><text x="36.00" y="1774.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1780" width="2" height="15" fill="rgb(224,110,27)"/><text x="36.00" y="1790.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.17%)</title><rect x="35" y="1508" width="2" height="15" fill="rgb(221,140,38)"/><text x="38.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="484" width="10" height="15" fill="rgb(241,61,24)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="500" width="10" height="15" fill="rgb(207,215,27)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="516" width="10" height="15" fill="rgb(247,14,40)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="532" width="10" height="15" fill="rgb(208,80,38)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="29" y="548" width="10" height="15" fill="rgb(217,204,0)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="564" width="10" height="15" fill="rgb(247,38,39)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (5 samples, 0.83%)</title><rect x="29" y="580" width="10" height="15" fill="rgb(253,166,40)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="596" width="10" height="15" fill="rgb(240,84,27)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="612" width="10" height="15" fill="rgb(242,216,2)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="628" width="10" height="15" fill="rgb(208,28,19)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="29" y="644" width="10" height="15" fill="rgb(242,111,15)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="660" width="10" height="15" fill="rgb(243,159,5)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (5 samples, 0.83%)</title><rect x="29" y="676" width="10" height="15" fill="rgb(227,130,42)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="692" width="10" height="15" fill="rgb(247,34,53)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="708" width="10" height="15" fill="rgb(243,3,12)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="724" width="10" height="15" fill="rgb(230,100,47)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="29" y="740" width="10" height="15" fill="rgb(243,173,50)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="756" width="10" height="15" fill="rgb(231,135,15)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 0.83%)</title><rect x="29" y="772" width="10" height="15" fill="rgb(241,13,36)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="788" width="10" height="15" fill="rgb(251,116,45)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="804" width="10" height="15" fill="rgb(214,85,9)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="820" width="10" height="15" fill="rgb(250,64,36)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="29" y="836" width="10" height="15" fill="rgb(235,153,13)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="852" width="10" height="15" fill="rgb(250,132,47)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 0.83%)</title><rect x="29" y="868" width="10" height="15" fill="rgb(233,108,35)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="884" width="10" height="15" fill="rgb(213,36,6)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="900" width="10" height="15" fill="rgb(252,143,41)"/><text x="32.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="916" width="10" height="15" fill="rgb(220,91,44)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="932" width="10" height="15" fill="rgb(251,192,32)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="948" width="10" height="15" fill="rgb(210,207,15)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="964" width="10" height="15" fill="rgb(234,29,18)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="29" y="980" width="10" height="15" fill="rgb(209,204,13)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="996" width="10" height="15" fill="rgb(226,139,49)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 0.83%)</title><rect x="29" y="1012" width="10" height="15" fill="rgb(212,135,32)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="1028" width="10" height="15" fill="rgb(240,32,48)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="1044" width="10" height="15" fill="rgb(217,77,42)"/><text x="32.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="1060" width="10" height="15" fill="rgb(236,169,4)"/><text x="32.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="29" y="1076" width="10" height="15" fill="rgb(248,25,33)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="29" y="1092" width="10" height="15" fill="rgb(213,77,39)"/><text x="32.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 0.83%)</title><rect x="29" y="1108" width="10" height="15" fill="rgb(240,206,20)"/><text x="32.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1124" width="8" height="15" fill="rgb(240,193,38)"/><text x="34.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1140" width="8" height="15" fill="rgb(232,12,7)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1156" width="8" height="15" fill="rgb(221,9,14)"/><text x="34.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1172" width="8" height="15" fill="rgb(227,112,50)"/><text x="34.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1188" width="8" height="15" fill="rgb(234,36,18)"/><text x="34.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="31" y="1204" width="8" height="15" fill="rgb(232,151,18)"/><text x="34.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1220" width="8" height="15" fill="rgb(218,108,19)"/><text x="34.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 0.67%)</title><rect x="31" y="1236" width="8" height="15" fill="rgb(232,114,54)"/><text x="34.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1252" width="8" height="15" fill="rgb(229,97,35)"/><text x="34.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1268" width="8" height="15" fill="rgb(221,107,1)"/><text x="34.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1284" width="8" height="15" fill="rgb(213,194,32)"/><text x="34.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1300" width="8" height="15" fill="rgb(236,203,10)"/><text x="34.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1316" width="8" height="15" fill="rgb(210,32,17)"/><text x="34.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="31" y="1332" width="8" height="15" fill="rgb(239,197,32)"/><text x="34.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1348" width="8" height="15" fill="rgb(240,130,17)"/><text x="34.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 0.67%)</title><rect x="31" y="1364" width="8" height="15" fill="rgb(228,198,20)"/><text x="34.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1380" width="8" height="15" fill="rgb(235,200,46)"/><text x="34.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1396" width="8" height="15" fill="rgb(241,117,43)"/><text x="34.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1412" width="8" height="15" fill="rgb(224,177,13)"/><text x="34.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="31" y="1428" width="8" height="15" fill="rgb(239,105,27)"/><text x="34.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="31" y="1444" width="8" height="15" fill="rgb(245,196,4)"/><text x="34.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.67%)</title><rect x="31" y="1460" width="8" height="15" fill="rgb(218,91,11)"/><text x="34.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.33%)</title><rect x="35" y="1476" width="4" height="15" fill="rgb(245,160,39)"/><text x="38.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.33%)</title><rect x="35" y="1492" width="4" height="15" fill="rgb(230,206,21)"/><text x="38.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.17%)</title><rect x="37" y="1508" width="2" height="15" fill="rgb(209,229,24)"/><text x="40.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.17%)</title><rect x="37" y="1524" width="2" height="15" fill="rgb(216,84,46)"/><text x="40.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="37" y="1540" width="2" height="15" fill="rgb(243,177,6)"/><text x="40.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.17%)</title><rect x="37" y="1556" width="2" height="15" fill="rgb(213,170,15)"/><text x="40.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.17%)</title><rect x="37" y="1572" width="2" height="15" fill="rgb(248,79,4)"/><text x="40.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 0.17%)</title><rect x="39" y="1684" width="2" height="15" fill="rgb(208,35,32)"/><text x="42.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="39" y="1700" width="2" height="15" fill="rgb(243,0,11)"/><text x="42.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="39" y="1716" width="2" height="15" fill="rgb(250,52,49)"/><text x="42.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="39" y="1732" width="2" height="15" fill="rgb(221,139,50)"/><text x="42.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="39" y="1748" width="2" height="15" fill="rgb(233,170,39)"/><text x="42.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="39" y="1764" width="2" height="15" fill="rgb(208,53,10)"/><text x="42.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 0.17%)</title><rect x="39" y="1780" width="2" height="15" fill="rgb(225,34,30)"/><text x="42.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (1 samples, 0.17%)</title><rect x="39" y="1796" width="2" height="15" fill="rgb(252,148,10)"/><text x="42.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (1 samples, 0.17%)</title><rect x="39" y="1812" width="2" height="15" fill="rgb(247,196,13)"/><text x="42.00" y="1822.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 1.16%)</title><rect x="29" y="244" width="14" height="15" fill="rgb(249,20,41)"/><text x="32.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="29" y="260" width="14" height="15" fill="rgb(214,106,54)"/><text x="32.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="29" y="276" width="14" height="15" fill="rgb(254,134,16)"/><text x="32.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="29" y="292" width="14" height="15" fill="rgb(211,43,14)"/><text x="32.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.16%)</title><rect x="29" y="308" width="14" height="15" fill="rgb(245,221,19)"/><text x="32.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="29" y="324" width="14" height="15" fill="rgb(235,102,43)"/><text x="32.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 1.16%)</title><rect x="29" y="340" width="14" height="15" fill="rgb(206,24,17)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="29" y="356" width="14" height="15" fill="rgb(212,29,9)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="29" y="372" width="14" height="15" fill="rgb(254,119,46)"/><text x="32.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="29" y="388" width="14" height="15" fill="rgb(245,142,0)"/><text x="32.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.16%)</title><rect x="29" y="404" width="14" height="15" fill="rgb(246,164,33)"/><text x="32.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="29" y="420" width="14" height="15" fill="rgb(237,123,41)"/><text x="32.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 1.16%)</title><rect x="29" y="436" width="14" height="15" fill="rgb(214,72,11)"/><text x="32.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="29" y="452" width="14" height="15" fill="rgb(210,224,9)"/><text x="32.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.16%)</title><rect x="29" y="468" width="14" height="15" fill="rgb(228,152,14)"/><text x="32.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="484" width="4" height="15" fill="rgb(248,91,34)"/><text x="42.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="39" y="500" width="4" height="15" fill="rgb(229,84,49)"/><text x="42.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="516" width="4" height="15" fill="rgb(219,13,21)"/><text x="42.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.33%)</title><rect x="39" y="532" width="4" height="15" fill="rgb(246,136,25)"/><text x="42.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="548" width="4" height="15" fill="rgb(205,24,30)"/><text x="42.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="564" width="4" height="15" fill="rgb(246,3,50)"/><text x="42.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="580" width="4" height="15" fill="rgb(227,182,8)"/><text x="42.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="39" y="596" width="4" height="15" fill="rgb(249,132,7)"/><text x="42.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="612" width="4" height="15" fill="rgb(231,148,48)"/><text x="42.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.33%)</title><rect x="39" y="628" width="4" height="15" fill="rgb(252,122,41)"/><text x="42.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="644" width="4" height="15" fill="rgb(249,77,50)"/><text x="42.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="660" width="4" height="15" fill="rgb(210,127,34)"/><text x="42.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="676" width="4" height="15" fill="rgb(218,117,42)"/><text x="42.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="39" y="692" width="4" height="15" fill="rgb(237,22,27)"/><text x="42.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="708" width="4" height="15" fill="rgb(234,123,5)"/><text x="42.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.33%)</title><rect x="39" y="724" width="4" height="15" fill="rgb(221,184,36)"/><text x="42.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="740" width="4" height="15" fill="rgb(250,188,19)"/><text x="42.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="756" width="4" height="15" fill="rgb(212,1,48)"/><text x="42.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="772" width="4" height="15" fill="rgb(236,135,1)"/><text x="42.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="39" y="788" width="4" height="15" fill="rgb(254,83,20)"/><text x="42.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="804" width="4" height="15" fill="rgb(249,54,49)"/><text x="42.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.33%)</title><rect x="39" y="820" width="4" height="15" fill="rgb(246,62,49)"/><text x="42.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="836" width="4" height="15" fill="rgb(224,44,36)"/><text x="42.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="852" width="4" height="15" fill="rgb(208,94,50)"/><text x="42.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="868" width="4" height="15" fill="rgb(228,75,50)"/><text x="42.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="39" y="884" width="4" height="15" fill="rgb(242,166,15)"/><text x="42.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="900" width="4" height="15" fill="rgb(246,106,1)"/><text x="42.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.33%)</title><rect x="39" y="916" width="4" height="15" fill="rgb(227,113,42)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="932" width="4" height="15" fill="rgb(254,202,18)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="948" width="4" height="15" fill="rgb(254,151,36)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="964" width="4" height="15" fill="rgb(231,222,13)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="39" y="980" width="4" height="15" fill="rgb(238,1,31)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="996" width="4" height="15" fill="rgb(221,53,34)"/><text x="42.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.33%)</title><rect x="39" y="1012" width="4" height="15" fill="rgb(244,110,5)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1028" width="4" height="15" fill="rgb(225,129,4)"/><text x="42.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1044" width="4" height="15" fill="rgb(253,145,42)"/><text x="42.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1060" width="4" height="15" fill="rgb(215,176,46)"/><text x="42.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="39" y="1076" width="4" height="15" fill="rgb(238,199,10)"/><text x="42.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1092" width="4" height="15" fill="rgb(215,218,50)"/><text x="42.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.33%)</title><rect x="39" y="1108" width="4" height="15" fill="rgb(214,144,33)"/><text x="42.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1124" width="4" height="15" fill="rgb(235,92,17)"/><text x="42.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1140" width="4" height="15" fill="rgb(225,102,47)"/><text x="42.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1156" width="4" height="15" fill="rgb(240,191,27)"/><text x="42.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="39" y="1172" width="4" height="15" fill="rgb(254,225,26)"/><text x="42.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1188" width="4" height="15" fill="rgb(206,71,53)"/><text x="42.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.33%)</title><rect x="39" y="1204" width="4" height="15" fill="rgb(212,88,37)"/><text x="42.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1220" width="4" height="15" fill="rgb(228,108,15)"/><text x="42.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1236" width="4" height="15" fill="rgb(223,74,19)"/><text x="42.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1252" width="4" height="15" fill="rgb(246,40,42)"/><text x="42.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="39" y="1268" width="4" height="15" fill="rgb(212,11,38)"/><text x="42.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1284" width="4" height="15" fill="rgb(228,215,6)"/><text x="42.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.33%)</title><rect x="39" y="1300" width="4" height="15" fill="rgb(229,113,43)"/><text x="42.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1316" width="4" height="15" fill="rgb(240,114,46)"/><text x="42.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1332" width="4" height="15" fill="rgb(225,111,5)"/><text x="42.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1348" width="4" height="15" fill="rgb(231,41,21)"/><text x="42.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="39" y="1364" width="4" height="15" fill="rgb(243,51,16)"/><text x="42.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1380" width="4" height="15" fill="rgb(247,99,30)"/><text x="42.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.33%)</title><rect x="39" y="1396" width="4" height="15" fill="rgb(246,22,3)"/><text x="42.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1412" width="4" height="15" fill="rgb(230,15,12)"/><text x="42.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1428" width="4" height="15" fill="rgb(227,25,50)"/><text x="42.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1444" width="4" height="15" fill="rgb(226,31,30)"/><text x="42.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="39" y="1460" width="4" height="15" fill="rgb(254,153,37)"/><text x="42.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1476" width="4" height="15" fill="rgb(254,75,34)"/><text x="42.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.33%)</title><rect x="39" y="1492" width="4" height="15" fill="rgb(234,38,19)"/><text x="42.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1508" width="4" height="15" fill="rgb(238,6,32)"/><text x="42.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1524" width="4" height="15" fill="rgb(240,150,12)"/><text x="42.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1540" width="4" height="15" fill="rgb(222,202,54)"/><text x="42.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="39" y="1556" width="4" height="15" fill="rgb(205,26,54)"/><text x="42.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1572" width="4" height="15" fill="rgb(250,43,26)"/><text x="42.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.33%)</title><rect x="39" y="1588" width="4" height="15" fill="rgb(211,131,15)"/><text x="42.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1604" width="4" height="15" fill="rgb(211,160,8)"/><text x="42.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1620" width="4" height="15" fill="rgb(214,137,8)"/><text x="42.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1636" width="4" height="15" fill="rgb(220,4,31)"/><text x="42.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="39" y="1652" width="4" height="15" fill="rgb(242,84,30)"/><text x="42.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="39" y="1668" width="4" height="15" fill="rgb(216,7,21)"/><text x="42.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.17%)</title><rect x="41" y="1684" width="2" height="15" fill="rgb(209,17,26)"/><text x="44.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="1700" width="2" height="15" fill="rgb(225,88,21)"/><text x="44.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="1716" width="2" height="15" fill="rgb(229,122,35)"/><text x="44.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="1732" width="2" height="15" fill="rgb(215,15,31)"/><text x="44.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="41" y="1748" width="2" height="15" fill="rgb(239,213,24)"/><text x="44.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="1764" width="2" height="15" fill="rgb(215,53,36)"/><text x="44.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.17%)</title><rect x="41" y="1780" width="2" height="15" fill="rgb(215,168,15)"/><text x="44.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="1796" width="2" height="15" fill="rgb(220,218,33)"/><text x="44.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="1812" width="2" height="15" fill="rgb(240,9,3)"/><text x="44.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="1828" width="2" height="15" fill="rgb(211,126,54)"/><text x="44.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="41" y="1844" width="2" height="15" fill="rgb(213,216,2)"/><text x="44.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="1860" width="2" height="15" fill="rgb(244,140,2)"/><text x="44.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.17%)</title><rect x="41" y="1876" width="2" height="15" fill="rgb(220,203,12)"/><text x="44.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="1892" width="2" height="15" fill="rgb(219,13,41)"/><text x="44.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="1908" width="2" height="15" fill="rgb(216,52,47)"/><text x="44.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="1924" width="2" height="15" fill="rgb(205,203,14)"/><text x="44.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="41" y="1940" width="2" height="15" fill="rgb(225,171,40)"/><text x="44.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="1956" width="2" height="15" fill="rgb(208,111,29)"/><text x="44.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (1 samples, 0.17%)</title><rect x="41" y="1972" width="2" height="15" fill="rgb(230,67,41)"/><text x="44.00" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="1988" width="2" height="15" fill="rgb(253,20,25)"/><text x="44.00" y="1998.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="2004" width="2" height="15" fill="rgb(233,66,46)"/><text x="44.00" y="2014.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="2020" width="2" height="15" fill="rgb(214,88,17)"/><text x="44.00" y="2030.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="41" y="2036" width="2" height="15" fill="rgb(253,115,26)"/><text x="44.00" y="2046.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="2052" width="2" height="15" fill="rgb(206,132,10)"/><text x="44.00" y="2062.50"></text></g><g><title>&lt;module&gt; (matplotlib/mathtext.py) (1 samples, 0.17%)</title><rect x="41" y="2068" width="2" height="15" fill="rgb(228,79,19)"/><text x="44.00" y="2078.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="260" width="2" height="15" fill="rgb(239,121,36)"/><text x="46.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="276" width="2" height="15" fill="rgb(211,94,11)"/><text x="46.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="292" width="2" height="15" fill="rgb(233,56,36)"/><text x="46.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="43" y="308" width="2" height="15" fill="rgb(211,26,38)"/><text x="46.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="324" width="2" height="15" fill="rgb(253,52,5)"/><text x="46.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.17%)</title><rect x="43" y="340" width="2" height="15" fill="rgb(244,184,18)"/><text x="46.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="356" width="2" height="15" fill="rgb(246,54,44)"/><text x="46.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="372" width="2" height="15" fill="rgb(215,174,37)"/><text x="46.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="388" width="2" height="15" fill="rgb(241,166,10)"/><text x="46.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="43" y="404" width="2" height="15" fill="rgb(226,17,9)"/><text x="46.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="420" width="2" height="15" fill="rgb(239,16,31)"/><text x="46.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.17%)</title><rect x="43" y="436" width="2" height="15" fill="rgb(216,184,52)"/><text x="46.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="452" width="2" height="15" fill="rgb(234,180,1)"/><text x="46.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="468" width="2" height="15" fill="rgb(224,179,27)"/><text x="46.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="484" width="2" height="15" fill="rgb(211,68,25)"/><text x="46.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="43" y="500" width="2" height="15" fill="rgb(210,116,48)"/><text x="46.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="516" width="2" height="15" fill="rgb(211,100,4)"/><text x="46.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/main.py) (1 samples, 0.17%)</title><rect x="43" y="532" width="2" height="15" fill="rgb(253,35,39)"/><text x="46.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="548" width="2" height="15" fill="rgb(226,1,20)"/><text x="46.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="564" width="2" height="15" fill="rgb(218,108,1)"/><text x="46.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="580" width="2" height="15" fill="rgb(236,80,31)"/><text x="46.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="43" y="596" width="2" height="15" fill="rgb(243,157,35)"/><text x="46.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="612" width="2" height="15" fill="rgb(215,106,27)"/><text x="46.00" y="622.50"></text></g><g><title>&lt;module&gt; (argparse.py) (1 samples, 0.17%)</title><rect x="43" y="628" width="2" height="15" fill="rgb(213,212,31)"/><text x="46.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="644" width="2" height="15" fill="rgb(206,46,23)"/><text x="46.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="660" width="2" height="15" fill="rgb(216,188,48)"/><text x="46.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="676" width="2" height="15" fill="rgb(217,52,37)"/><text x="46.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="43" y="692" width="2" height="15" fill="rgb(246,57,12)"/><text x="46.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="708" width="2" height="15" fill="rgb(223,26,51)"/><text x="46.00" y="718.50"></text></g><g><title>&lt;module&gt; (gettext.py) (1 samples, 0.17%)</title><rect x="43" y="724" width="2" height="15" fill="rgb(206,31,10)"/><text x="46.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="740" width="2" height="15" fill="rgb(238,50,17)"/><text x="46.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="756" width="2" height="15" fill="rgb(233,56,5)"/><text x="46.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="772" width="2" height="15" fill="rgb(230,82,34)"/><text x="46.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="43" y="788" width="2" height="15" fill="rgb(241,102,27)"/><text x="46.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="43" y="804" width="2" height="15" fill="rgb(243,67,12)"/><text x="46.00" y="814.50"></text></g><g><title>&lt;module&gt; (locale.py) (1 samples, 0.17%)</title><rect x="43" y="820" width="2" height="15" fill="rgb(231,212,45)"/><text x="46.00" y="830.50"></text></g><g><title>compile (re.py) (1 samples, 0.17%)</title><rect x="43" y="836" width="2" height="15" fill="rgb(245,227,6)"/><text x="46.00" y="846.50"></text></g><g><title>_compile (re.py) (1 samples, 0.17%)</title><rect x="43" y="852" width="2" height="15" fill="rgb(213,114,52)"/><text x="46.00" y="862.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="43" y="868" width="2" height="15" fill="rgb(242,91,10)"/><text x="46.00" y="878.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="43" y="884" width="2" height="15" fill="rgb(223,81,18)"/><text x="46.00" y="894.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.17%)</title><rect x="43" y="900" width="2" height="15" fill="rgb(241,219,46)"/><text x="46.00" y="910.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="43" y="916" width="2" height="15" fill="rgb(224,130,37)"/><text x="46.00" y="926.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.17%)</title><rect x="45" y="500" width="2" height="15" fill="rgb(213,207,25)"/><text x="48.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="45" y="516" width="2" height="15" fill="rgb(208,198,3)"/><text x="48.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="45" y="532" width="2" height="15" fill="rgb(207,9,3)"/><text x="48.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="45" y="548" width="2" height="15" fill="rgb(236,12,43)"/><text x="48.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="45" y="564" width="2" height="15" fill="rgb(232,180,10)"/><text x="48.00" y="574.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="45" y="580" width="2" height="15" fill="rgb(215,63,44)"/><text x="48.00" y="590.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.33%)</title><rect x="45" y="372" width="4" height="15" fill="rgb(229,155,48)"/><text x="48.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="45" y="388" width="4" height="15" fill="rgb(221,80,23)"/><text x="48.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="45" y="404" width="4" height="15" fill="rgb(212,94,46)"/><text x="48.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="45" y="420" width="4" height="15" fill="rgb(225,180,48)"/><text x="48.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="45" y="436" width="4" height="15" fill="rgb(246,33,40)"/><text x="48.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="45" y="452" width="4" height="15" fill="rgb(224,128,23)"/><text x="48.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="45" y="468" width="4" height="15" fill="rgb(216,72,3)"/><text x="48.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="45" y="484" width="4" height="15" fill="rgb(243,217,27)"/><text x="48.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py) (1 samples, 0.17%)</title><rect x="47" y="500" width="2" height="15" fill="rgb(209,119,38)"/><text x="50.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="516" width="2" height="15" fill="rgb(240,39,51)"/><text x="50.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="532" width="2" height="15" fill="rgb(251,135,38)"/><text x="50.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="548" width="2" height="15" fill="rgb(240,56,12)"/><text x="50.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="564" width="2" height="15" fill="rgb(208,24,40)"/><text x="50.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="580" width="2" height="15" fill="rgb(224,120,45)"/><text x="50.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="47" y="596" width="2" height="15" fill="rgb(235,23,17)"/><text x="50.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="47" y="612" width="2" height="15" fill="rgb(241,133,23)"/><text x="50.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/fromnumeric.py) (1 samples, 0.17%)</title><rect x="47" y="628" width="2" height="15" fill="rgb(234,210,21)"/><text x="50.00" y="638.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.17%)</title><rect x="47" y="644" width="2" height="15" fill="rgb(213,182,39)"/><text x="50.00" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.49%)</title><rect x="10" y="68" width="41" height="15" fill="rgb(220,100,52)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.49%)</title><rect x="10" y="84" width="41" height="15" fill="rgb(206,66,20)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.49%)</title><rect x="10" y="100" width="41" height="15" fill="rgb(207,159,39)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 3.49%)</title><rect x="10" y="116" width="41" height="15" fill="rgb(206,70,20)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.49%)</title><rect x="10" y="132" width="41" height="15" fill="rgb(225,41,10)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py) (21 samples, 3.49%)</title><rect x="10" y="148" width="41" height="15" fill="rgb(211,12,52)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.49%)</title><rect x="10" y="164" width="41" height="15" fill="rgb(237,107,15)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.49%)</title><rect x="10" y="180" width="41" height="15" fill="rgb(211,118,26)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.83%)</title><rect x="29" y="196" width="22" height="15" fill="rgb(218,203,45)"/><text x="32.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.83%)</title><rect x="29" y="212" width="22" height="15" fill="rgb(246,68,43)"/><text x="32.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.83%)</title><rect x="29" y="228" width="22" height="15" fill="rgb(252,69,46)"/><text x="32.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (4 samples, 0.67%)</title><rect x="43" y="244" width="8" height="15" fill="rgb(228,127,42)"/><text x="46.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="45" y="260" width="6" height="15" fill="rgb(239,146,32)"/><text x="48.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="45" y="276" width="6" height="15" fill="rgb(228,131,36)"/><text x="48.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="45" y="292" width="6" height="15" fill="rgb(237,19,12)"/><text x="48.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="45" y="308" width="6" height="15" fill="rgb(228,138,14)"/><text x="48.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="45" y="324" width="6" height="15" fill="rgb(249,79,54)"/><text x="48.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="45" y="340" width="6" height="15" fill="rgb(251,64,47)"/><text x="48.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="45" y="356" width="6" height="15" fill="rgb(206,21,46)"/><text x="48.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.17%)</title><rect x="49" y="372" width="2" height="15" fill="rgb(235,133,12)"/><text x="52.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="388" width="2" height="15" fill="rgb(228,114,8)"/><text x="52.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="404" width="2" height="15" fill="rgb(244,141,41)"/><text x="52.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="420" width="2" height="15" fill="rgb(225,59,37)"/><text x="52.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="436" width="2" height="15" fill="rgb(230,157,42)"/><text x="52.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="452" width="2" height="15" fill="rgb(219,127,25)"/><text x="52.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="49" y="468" width="2" height="15" fill="rgb(222,133,1)"/><text x="52.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="484" width="2" height="15" fill="rgb(254,41,41)"/><text x="52.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.17%)</title><rect x="49" y="500" width="2" height="15" fill="rgb(220,77,51)"/><text x="52.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="516" width="2" height="15" fill="rgb(232,180,43)"/><text x="52.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="532" width="2" height="15" fill="rgb(249,149,31)"/><text x="52.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="548" width="2" height="15" fill="rgb(221,34,49)"/><text x="52.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="49" y="564" width="2" height="15" fill="rgb(239,174,3)"/><text x="52.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="580" width="2" height="15" fill="rgb(248,82,14)"/><text x="52.00" y="590.50"></text></g><g><title>0x7f45510f9585 (?) (1 samples, 0.17%)</title><rect x="49" y="596" width="2" height="15" fill="rgb(209,22,41)"/><text x="52.00" y="606.50"></text></g><g><title>0x7f45510ff075 (?) (1 samples, 0.17%)</title><rect x="49" y="612" width="2" height="15" fill="rgb(226,149,29)"/><text x="52.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="628" width="2" height="15" fill="rgb(253,29,12)"/><text x="52.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="644" width="2" height="15" fill="rgb(229,49,4)"/><text x="52.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="660" width="2" height="15" fill="rgb(240,25,41)"/><text x="52.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="49" y="676" width="2" height="15" fill="rgb(205,102,26)"/><text x="52.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="692" width="2" height="15" fill="rgb(232,127,7)"/><text x="52.00" y="702.50"></text></g><g><title>0x7f4550a36543 (?) (1 samples, 0.17%)</title><rect x="49" y="708" width="2" height="15" fill="rgb(252,35,49)"/><text x="52.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="724" width="2" height="15" fill="rgb(222,6,2)"/><text x="52.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="740" width="2" height="15" fill="rgb(214,175,16)"/><text x="52.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="756" width="2" height="15" fill="rgb(212,119,35)"/><text x="52.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="49" y="772" width="2" height="15" fill="rgb(206,213,6)"/><text x="52.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="788" width="2" height="15" fill="rgb(227,23,34)"/><text x="52.00" y="798.50"></text></g><g><title>0x7f455080bb9c (?) (1 samples, 0.17%)</title><rect x="49" y="804" width="2" height="15" fill="rgb(214,185,10)"/><text x="52.00" y="814.50"></text></g><g><title>0x7f455080f885 (?) (1 samples, 0.17%)</title><rect x="49" y="820" width="2" height="15" fill="rgb(217,59,26)"/><text x="52.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="836" width="2" height="15" fill="rgb(240,206,5)"/><text x="52.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="852" width="2" height="15" fill="rgb(241,128,33)"/><text x="52.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="868" width="2" height="15" fill="rgb(207,130,13)"/><text x="52.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="49" y="884" width="2" height="15" fill="rgb(207,154,33)"/><text x="52.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="900" width="2" height="15" fill="rgb(215,73,28)"/><text x="52.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py) (1 samples, 0.17%)</title><rect x="49" y="916" width="2" height="15" fill="rgb(207,139,14)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="932" width="2" height="15" fill="rgb(246,86,49)"/><text x="52.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="948" width="2" height="15" fill="rgb(235,9,13)"/><text x="52.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="964" width="2" height="15" fill="rgb(213,119,23)"/><text x="52.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="49" y="980" width="2" height="15" fill="rgb(210,203,39)"/><text x="52.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="996" width="2" height="15" fill="rgb(230,97,3)"/><text x="52.00" y="1006.50"></text></g><g><title>&lt;module&gt; (hmac.py) (1 samples, 0.17%)</title><rect x="49" y="1012" width="2" height="15" fill="rgb(223,5,5)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="1028" width="2" height="15" fill="rgb(240,112,23)"/><text x="52.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="1044" width="2" height="15" fill="rgb(245,152,50)"/><text x="52.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="1060" width="2" height="15" fill="rgb(205,203,33)"/><text x="52.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="1076" width="2" height="15" fill="rgb(210,144,14)"/><text x="52.00" y="1086.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="49" y="1092" width="2" height="15" fill="rgb(206,215,29)"/><text x="52.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="49" y="1108" width="2" height="15" fill="rgb(233,48,25)"/><text x="52.00" y="1118.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.17%)</title><rect x="49" y="1124" width="2" height="15" fill="rgb(235,131,19)"/><text x="52.00" y="1134.50"></text></g><g><title>0x7f455eaba995 (libdl-2.29.so) (1 samples, 0.17%)</title><rect x="49" y="1140" width="2" height="15" fill="rgb(233,97,7)"/><text x="52.00" y="1150.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.17%)</title><rect x="49" y="1156" width="2" height="15" fill="rgb(233,20,23)"/><text x="52.00" y="1166.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.17%)</title><rect x="49" y="1172" width="2" height="15" fill="rgb(253,8,0)"/><text x="52.00" y="1182.50"></text></g><g><title>0x7f455eaba258 (libdl-2.29.so) (1 samples, 0.17%)</title><rect x="49" y="1188" width="2" height="15" fill="rgb(219,98,28)"/><text x="52.00" y="1198.50"></text></g><g><title>0x7f455eb07d7a (ld-2.29.so) (1 samples, 0.17%)</title><rect x="49" y="1204" width="2" height="15" fill="rgb(216,12,24)"/><text x="52.00" y="1214.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.17%)</title><rect x="49" y="1220" width="2" height="15" fill="rgb(231,91,53)"/><text x="52.00" y="1230.50"></text></g><g><title>0x7f455eb08345 (ld-2.29.so) (1 samples, 0.17%)</title><rect x="49" y="1236" width="2" height="15" fill="rgb(218,229,3)"/><text x="52.00" y="1246.50"></text></g><g><title>0x7f455eb00fec (ld-2.29.so) (1 samples, 0.17%)</title><rect x="49" y="1252" width="2" height="15" fill="rgb(238,71,50)"/><text x="52.00" y="1262.50"></text></g><g><title>0x7f455eaff56b (ld-2.29.so) (1 samples, 0.17%)</title><rect x="49" y="1268" width="2" height="15" fill="rgb(236,64,1)"/><text x="52.00" y="1278.50"></text></g><g><title>0x7f455eafe966 (ld-2.29.so) (1 samples, 0.17%)</title><rect x="49" y="1284" width="2" height="15" fill="rgb(220,146,54)"/><text x="52.00" y="1294.50"></text></g><g><title>0x7f451e7f0ff9 (?) (1 samples, 0.17%)</title><rect x="53" y="212" width="2" height="15" fill="rgb(214,97,54)"/><text x="56.00" y="222.50"></text></g><g><title>0x7f451e7ebef6 (?) (1 samples, 0.17%)</title><rect x="53" y="228" width="2" height="15" fill="rgb(208,200,12)"/><text x="56.00" y="238.50"></text></g><g><title>0x7f451e7e0962 (?) (1 samples, 0.17%)</title><rect x="53" y="244" width="2" height="15" fill="rgb(237,146,42)"/><text x="56.00" y="254.50"></text></g><g><title>0x7f451e8147a7 (?) (1 samples, 0.17%)</title><rect x="53" y="260" width="2" height="15" fill="rgb(232,144,8)"/><text x="56.00" y="270.50"></text></g><g><title>0x7f451e814379 (?) (1 samples, 0.17%)</title><rect x="53" y="276" width="2" height="15" fill="rgb(231,117,48)"/><text x="56.00" y="286.50"></text></g><g><title>0x7f451ec728b8 (?) (1 samples, 0.17%)</title><rect x="53" y="292" width="2" height="15" fill="rgb(247,126,21)"/><text x="56.00" y="302.50"></text></g><g><title>0x7f451ec70c7f (?) (1 samples, 0.17%)</title><rect x="53" y="308" width="2" height="15" fill="rgb(225,185,31)"/><text x="56.00" y="318.50"></text></g><g><title>0x7f451ec8399c (?) (1 samples, 0.17%)</title><rect x="53" y="324" width="2" height="15" fill="rgb(235,104,19)"/><text x="56.00" y="334.50"></text></g><g><title>0x7f451e9a119e (?) (1 samples, 0.17%)</title><rect x="53" y="340" width="2" height="15" fill="rgb(226,119,21)"/><text x="56.00" y="350.50"></text></g><g><title>0x7f451e99e10d (?) (1 samples, 0.17%)</title><rect x="53" y="356" width="2" height="15" fill="rgb(205,197,5)"/><text x="56.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="55" y="340" width="2" height="15" fill="rgb(246,3,14)"/><text x="58.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="55" y="356" width="2" height="15" fill="rgb(222,56,52)"/><text x="58.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (163 samples, 27.12%)</title><rect x="63" y="356" width="320" height="15" fill="rgb(212,224,10)"/><text x="66.00" y="366.50">onnxruntime::ml::TreeEnsembleClassifier&lt;flo..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="379" y="372" width="4" height="15" fill="rgb(244,21,22)"/><text x="382.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="381" y="388" width="2" height="15" fill="rgb(205,96,46)"/><text x="384.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="381" y="404" width="2" height="15" fill="rgb(244,76,47)"/><text x="384.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (167 samples, 27.79%)</title><rect x="57" y="340" width="328" height="15" fill="rgb(228,58,11)"/><text x="60.00" y="350.50">onnxruntime::ml::TreeEnsembleClassifier&lt;floa..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="383" y="356" width="2" height="15" fill="rgb(222,179,23)"/><text x="386.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="383" y="372" width="2" height="15" fill="rgb(246,101,47)"/><text x="386.00" y="382.50"></text></g><g><title>0x7f455e832998 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="383" y="388" width="2" height="15" fill="rgb(250,100,0)"/><text x="386.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (172 samples, 28.62%)</title><rect x="55" y="260" width="337" height="15" fill="rgb(220,160,17)"/><text x="58.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrunti..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (172 samples, 28.62%)</title><rect x="55" y="276" width="337" height="15" fill="rgb(220,177,12)"/><text x="58.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (172 samples, 28.62%)</title><rect x="55" y="292" width="337" height="15" fill="rgb(247,186,2)"/><text x="58.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (172 samples, 28.62%)</title><rect x="55" y="308" width="337" height="15" fill="rgb(238,214,27)"/><text x="58.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrun..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (172 samples, 28.62%)</title><rect x="55" y="324" width="337" height="15" fill="rgb(213,75,44)"/><text x="58.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onn..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.67%)</title><rect x="385" y="340" width="7" height="15" fill="rgb(215,120,15)"/><text x="388.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.50%)</title><rect x="386" y="356" width="6" height="15" fill="rgb(243,128,29)"/><text x="389.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.50%)</title><rect x="386" y="372" width="6" height="15" fill="rgb(222,166,34)"/><text x="389.00" y="382.50"></text></g><g><title>0x7f455e8343c4 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="390" y="388" width="2" height="15" fill="rgb(220,7,13)"/><text x="393.00" y="398.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py) (176 samples, 29.28%)</title><rect x="51" y="68" width="345" height="15" fill="rgb(245,87,14)"/><text x="54.00" y="78.50">profile_ort (bench_RandomForestClassifier_defa..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py) (176 samples, 29.28%)</title><rect x="51" y="84" width="345" height="15" fill="rgb(250,143,46)"/><text x="54.00" y="94.50">setup_profile (bench_RandomForestClassifier_de..</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py) (176 samples, 29.28%)</title><rect x="51" y="100" width="345" height="15" fill="rgb(216,200,35)"/><text x="54.00" y="110.50">profile (bench_RandomForestClassifier_default_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (176 samples, 29.28%)</title><rect x="51" y="116" width="345" height="15" fill="rgb(222,17,17)"/><text x="54.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (175 samples, 29.12%)</title><rect x="53" y="132" width="343" height="15" fill="rgb(237,160,39)"/><text x="56.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (175 samples, 29.12%)</title><rect x="53" y="148" width="343" height="15" fill="rgb(212,28,10)"/><text x="56.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (175 samples, 29.12%)</title><rect x="53" y="164" width="343" height="15" fill="rgb(215,185,28)"/><text x="56.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (175 samples, 29.12%)</title><rect x="53" y="180" width="343" height="15" fill="rgb(219,76,16)"/><text x="56.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (175 samples, 29.12%)</title><rect x="53" y="196" width="343" height="15" fill="rgb(242,215,40)"/><text x="56.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (174 samples, 28.95%)</title><rect x="55" y="212" width="341" height="15" fill="rgb(251,35,13)"/><text x="58.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntim..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (174 samples, 28.95%)</title><rect x="55" y="228" width="341" height="15" fill="rgb(207,68,47)"/><text x="58.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxru..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (174 samples, 28.95%)</title><rect x="55" y="244" width="341" height="15" fill="rgb(239,15,25)"/><text x="58.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="392" y="260" width="4" height="15" fill="rgb(237,188,44)"/><text x="395.00" y="270.50"></text></g><g><title>0x7f451f4d0422 (?) (1 samples, 0.17%)</title><rect x="396" y="244" width="2" height="15" fill="rgb(251,65,20)"/><text x="399.00" y="254.50"></text></g><g><title>0x7f451f4d689e (?) (1 samples, 0.17%)</title><rect x="396" y="260" width="2" height="15" fill="rgb(223,48,15)"/><text x="399.00" y="270.50"></text></g><g><title>0x7f451f4d674f (?) (1 samples, 0.17%)</title><rect x="396" y="276" width="2" height="15" fill="rgb(206,224,44)"/><text x="399.00" y="286.50"></text></g><g><title>0x7f451f4dca3a (?) (1 samples, 0.17%)</title><rect x="396" y="292" width="2" height="15" fill="rgb(227,17,4)"/><text x="399.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="396" y="308" width="2" height="15" fill="rgb(231,115,44)"/><text x="399.00" y="318.50"></text></g><g><title>0x7f451f4d778c (?) (1 samples, 0.17%)</title><rect x="396" y="324" width="2" height="15" fill="rgb(241,113,7)"/><text x="399.00" y="334.50"></text></g><g><title>0x7f451f4c33c0 (?) (1 samples, 0.17%)</title><rect x="396" y="340" width="2" height="15" fill="rgb(209,114,44)"/><text x="399.00" y="350.50"></text></g><g><title>0x7f45287f8ab9 (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="398" y="452" width="2" height="15" fill="rgb(227,139,29)"/><text x="401.00" y="462.50"></text></g><g><title>0x7f45287f9eab (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="398" y="468" width="2" height="15" fill="rgb(238,28,28)"/><text x="401.00" y="478.50"></text></g><g><title>std::isnan (cmath) (2 samples, 0.33%)</title><rect x="432" y="500" width="4" height="15" fill="rgb(215,187,21)"/><text x="435.00" y="510.50"></text></g><g><title>std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_map.h) (22 samples, 3.66%)</title><rect x="436" y="500" width="43" height="15" fill="rgb(227,184,52)"/><text x="439.00" y="510.50">std:..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_tree.h) (22 samples, 3.66%)</title><rect x="436" y="516" width="43" height="15" fill="rgb(226,135,24)"/><text x="439.00" y="526.50">std:..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h) (22 samples, 3.66%)</title><rect x="436" y="532" width="43" height="15" fill="rgb(236,7,49)"/><text x="439.00" y="542.50">std:..</text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (stl_bvector.h) (3 samples, 0.50%)</title><rect x="479" y="500" width="6" height="15" fill="rgb(215,81,3)"/><text x="482.00" y="510.50"></text></g><g><title>std::_Bit_iterator::operator* (stl_bvector.h) (3 samples, 0.50%)</title><rect x="479" y="516" width="6" height="15" fill="rgb(230,116,13)"/><text x="482.00" y="526.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h) (2 samples, 0.33%)</title><rect x="485" y="500" width="4" height="15" fill="rgb(253,62,30)"/><text x="488.00" y="510.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py) (48 samples, 7.99%)</title><rect x="396" y="100" width="95" height="15" fill="rgb(231,82,19)"/><text x="399.00" y="110.50">profile (be..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (48 samples, 7.99%)</title><rect x="396" y="116" width="95" height="15" fill="rgb(232,190,17)"/><text x="399.00" y="126.50">time_predic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (48 samples, 7.99%)</title><rect x="396" y="132" width="95" height="15" fill="rgb(248,200,31)"/><text x="399.00" y="142.50">&lt;lambda&gt; (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (48 samples, 7.99%)</title><rect x="396" y="148" width="95" height="15" fill="rgb(232,208,45)"/><text x="399.00" y="158.50">run (mlprod..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (48 samples, 7.99%)</title><rect x="396" y="164" width="95" height="15" fill="rgb(229,9,14)"/><text x="399.00" y="174.50">_run_sequen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (48 samples, 7.99%)</title><rect x="396" y="180" width="95" height="15" fill="rgb(249,116,12)"/><text x="399.00" y="190.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (48 samples, 7.99%)</title><rect x="396" y="196" width="95" height="15" fill="rgb(219,27,50)"/><text x="399.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (48 samples, 7.99%)</title><rect x="396" y="212" width="95" height="15" fill="rgb(246,94,26)"/><text x="399.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (48 samples, 7.99%)</title><rect x="396" y="228" width="95" height="15" fill="rgb(218,124,45)"/><text x="399.00" y="238.50">_run (mlpro..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (47 samples, 7.82%)</title><rect x="398" y="244" width="93" height="15" fill="rgb(241,103,51)"/><text x="401.00" y="254.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (47 samples, 7.82%)</title><rect x="398" y="260" width="93" height="15" fill="rgb(252,48,30)"/><text x="401.00" y="270.50">void pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (47 samples, 7.82%)</title><rect x="398" y="276" width="93" height="15" fill="rgb(226,185,34)"/><text x="401.00" y="286.50">void pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (47 samples, 7.82%)</title><rect x="398" y="292" width="93" height="15" fill="rgb(247,181,52)"/><text x="401.00" y="302.50">pybind11::d..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (47 samples, 7.82%)</title><rect x="398" y="308" width="93" height="15" fill="rgb(227,94,26)"/><text x="401.00" y="318.50">pybind11::d..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (47 samples, 7.82%)</title><rect x="398" y="324" width="93" height="15" fill="rgb(245,100,40)"/><text x="401.00" y="334.50">pybind11::c..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (47 samples, 7.82%)</title><rect x="398" y="340" width="93" height="15" fill="rgb(242,140,8)"/><text x="401.00" y="350.50">pybind11::a..</text></g><g><title>pybind11::array::~array (numpy.h) (47 samples, 7.82%)</title><rect x="398" y="356" width="93" height="15" fill="rgb(219,207,31)"/><text x="401.00" y="366.50">pybind11::a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (47 samples, 7.82%)</title><rect x="398" y="372" width="93" height="15" fill="rgb(235,211,48)"/><text x="401.00" y="382.50">pybind11::b..</text></g><g><title>pybind11::object::~object (pytypes.h) (47 samples, 7.82%)</title><rect x="398" y="388" width="93" height="15" fill="rgb(216,144,29)"/><text x="401.00" y="398.50">pybind11::o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (47 samples, 7.82%)</title><rect x="398" y="404" width="93" height="15" fill="rgb(217,15,14)"/><text x="401.00" y="414.50">pybind11::h..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (47 samples, 7.82%)</title><rect x="398" y="420" width="93" height="15" fill="rgb(250,209,33)"/><text x="401.00" y="430.50">RuntimeTree..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (47 samples, 7.82%)</title><rect x="398" y="436" width="93" height="15" fill="rgb(234,9,36)"/><text x="401.00" y="446.50">pybind11::g..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (46 samples, 7.65%)</title><rect x="400" y="452" width="91" height="15" fill="rgb(230,40,31)"/><text x="403.00" y="462.50">GOMP_paral..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (46 samples, 7.65%)</title><rect x="400" y="468" width="91" height="15" fill="rgb(222,135,29)"/><text x="403.00" y="478.50">RuntimeTre..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (45 samples, 7.49%)</title><rect x="402" y="484" width="89" height="15" fill="rgb(210,142,2)"/><text x="405.00" y="494.50">RuntimeTre..</text></g><g><title>std::vector&lt;std::tuple&lt;long, long, long, float&gt;, std::allocator&lt;std::tuple&lt;long, long, long, float&gt; &gt; &gt;::operator[] (stl_vector.h) (1 samples, 0.17%)</title><rect x="489" y="500" width="2" height="15" fill="rgb(213,141,12)"/><text x="492.00" y="510.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py) (49 samples, 8.15%)</title><rect x="396" y="68" width="96" height="15" fill="rgb(252,90,51)"/><text x="399.00" y="78.50">profile_pyr..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py) (49 samples, 8.15%)</title><rect x="396" y="84" width="96" height="15" fill="rgb(227,119,14)"/><text x="399.00" y="94.50">setup_profi..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.17%)</title><rect x="491" y="100" width="1" height="15" fill="rgb(222,63,20)"/><text x="494.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.17%)</title><rect x="491" y="116" width="1" height="15" fill="rgb(245,61,35)"/><text x="494.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.17%)</title><rect x="491" y="132" width="1" height="15" fill="rgb(205,180,41)"/><text x="494.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.17%)</title><rect x="491" y="148" width="1" height="15" fill="rgb(227,166,4)"/><text x="494.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.17%)</title><rect x="491" y="164" width="1" height="15" fill="rgb(246,60,54)"/><text x="494.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.17%)</title><rect x="491" y="180" width="1" height="15" fill="rgb(211,129,12)"/><text x="494.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (1 samples, 0.17%)</title><rect x="491" y="196" width="1" height="15" fill="rgb(205,110,18)"/><text x="494.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.17%)</title><rect x="491" y="212" width="1" height="15" fill="rgb(216,172,30)"/><text x="494.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.17%)</title><rect x="491" y="228" width="1" height="15" fill="rgb(205,174,33)"/><text x="494.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.17%)</title><rect x="491" y="244" width="1" height="15" fill="rgb(239,195,0)"/><text x="494.00" y="254.50"></text></g><g><title>multi_DECREF (mapping.c) (1 samples, 0.17%)</title><rect x="491" y="260" width="1" height="15" fill="rgb(238,154,20)"/><text x="494.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.17%)</title><rect x="494" y="164" width="2" height="15" fill="rgb(215,88,5)"/><text x="497.00" y="174.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.17%)</title><rect x="494" y="180" width="2" height="15" fill="rgb(250,77,27)"/><text x="497.00" y="190.50"></text></g><g><title>_initialize_backend (joblib/parallel.py) (1 samples, 0.17%)</title><rect x="502" y="180" width="2" height="15" fill="rgb(226,99,4)"/><text x="505.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (13 samples, 2.16%)</title><rect x="549" y="196" width="26" height="15" fill="rgb(244,8,35)"/><text x="552.00" y="206.50">&lt;..</text></g><g><title>delayed (joblib/parallel.py) (9 samples, 1.50%)</title><rect x="557" y="212" width="18" height="15" fill="rgb(252,81,28)"/><text x="560.00" y="222.50"></text></g><g><title>update_wrapper (functools.py) (6 samples, 1.00%)</title><rect x="563" y="228" width="12" height="15" fill="rgb(236,39,8)"/><text x="566.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py) (3 samples, 0.50%)</title><rect x="575" y="196" width="6" height="15" fill="rgb(227,120,53)"/><text x="578.00" y="206.50"></text></g><g><title>__len__ (joblib/parallel.py) (1 samples, 0.17%)</title><rect x="591" y="212" width="2" height="15" fill="rgb(214,129,40)"/><text x="594.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (6 samples, 1.00%)</title><rect x="593" y="228" width="11" height="15" fill="rgb(229,102,25)"/><text x="596.00" y="238.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.17%)</title><rect x="602" y="244" width="2" height="15" fill="rgb(224,159,24)"/><text x="605.00" y="254.50"></text></g><g><title>pthread_self@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="602" y="260" width="2" height="15" fill="rgb(222,78,8)"/><text x="605.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="624" y="292" width="2" height="15" fill="rgb(210,111,24)"/><text x="627.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.17%)</title><rect x="624" y="308" width="2" height="15" fill="rgb(205,221,35)"/><text x="627.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.17%)</title><rect x="624" y="324" width="2" height="15" fill="rgb(207,45,18)"/><text x="627.00" y="334.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.33%)</title><rect x="626" y="292" width="4" height="15" fill="rgb(244,74,38)"/><text x="629.00" y="302.50"></text></g><g><title>0x7f4538276d2e (?) (1 samples, 0.17%)</title><rect x="648" y="308" width="2" height="15" fill="rgb(235,40,32)"/><text x="651.00" y="318.50"></text></g><g><title>0x7f4538275fa6 (?) (1 samples, 0.17%)</title><rect x="648" y="324" width="2" height="15" fill="rgb(233,193,44)"/><text x="651.00" y="334.50"></text></g><g><title>0x7f4538285405 (?) (1 samples, 0.17%)</title><rect x="648" y="340" width="2" height="15" fill="rgb(228,12,7)"/><text x="651.00" y="350.50"></text></g><g><title>0x7f45382846b1 (?) (1 samples, 0.17%)</title><rect x="648" y="356" width="2" height="15" fill="rgb(244,88,28)"/><text x="651.00" y="366.50"></text></g><g><title>0x7f4538265cd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="650" y="340" width="2" height="15" fill="rgb(231,53,49)"/><text x="653.00" y="350.50"></text></g><g><title>0x7f4538275f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="650" y="324" width="3" height="15" fill="rgb(209,179,13)"/><text x="653.00" y="334.50"></text></g><g><title>0x7f4538265d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="652" y="340" width="1" height="15" fill="rgb(239,55,25)"/><text x="655.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.17%)</title><rect x="652" y="356" width="1" height="15" fill="rgb(207,189,14)"/><text x="655.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="652" y="372" width="1" height="15" fill="rgb(226,153,35)"/><text x="655.00" y="382.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.17%)</title><rect x="652" y="388" width="1" height="15" fill="rgb(248,139,10)"/><text x="655.00" y="398.50"></text></g><g><title>0x7f45382841dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="653" y="356" width="2" height="15" fill="rgb(222,112,24)"/><text x="656.00" y="366.50"></text></g><g><title>0x7f4538284225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="655" y="356" width="2" height="15" fill="rgb(220,93,10)"/><text x="658.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.17%)</title><rect x="655" y="372" width="2" height="15" fill="rgb(245,10,14)"/><text x="658.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.17%)</title><rect x="655" y="388" width="2" height="15" fill="rgb(224,144,40)"/><text x="658.00" y="398.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.17%)</title><rect x="661" y="452" width="2" height="15" fill="rgb(211,55,3)"/><text x="664.00" y="462.50"></text></g><g><title>0x7f45382842df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.67%)</title><rect x="657" y="356" width="8" height="15" fill="rgb(232,33,50)"/><text x="660.00" y="366.50"></text></g><g><title>0x7f4538268d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.67%)</title><rect x="657" y="372" width="8" height="15" fill="rgb(233,216,35)"/><text x="660.00" y="382.50"></text></g><g><title>0x7f4538268666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.67%)</title><rect x="657" y="388" width="8" height="15" fill="rgb(232,137,53)"/><text x="660.00" y="398.50"></text></g><g><title>0x7f453825e2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.67%)</title><rect x="657" y="404" width="8" height="15" fill="rgb(224,3,54)"/><text x="660.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (4 samples, 0.67%)</title><rect x="657" y="420" width="8" height="15" fill="rgb(216,83,32)"/><text x="660.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 0.67%)</title><rect x="657" y="436" width="8" height="15" fill="rgb(238,215,16)"/><text x="660.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.17%)</title><rect x="663" y="452" width="2" height="15" fill="rgb(241,53,51)"/><text x="666.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.17%)</title><rect x="663" y="468" width="2" height="15" fill="rgb(241,37,46)"/><text x="666.00" y="478.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.17%)</title><rect x="663" y="484" width="2" height="15" fill="rgb(236,199,16)"/><text x="666.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="663" y="500" width="2" height="15" fill="rgb(225,167,33)"/><text x="666.00" y="510.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.33%)</title><rect x="667" y="388" width="4" height="15" fill="rgb(219,147,17)"/><text x="670.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.33%)</title><rect x="667" y="404" width="4" height="15" fill="rgb(232,13,4)"/><text x="670.00" y="414.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (2 samples, 0.33%)</title><rect x="671" y="452" width="4" height="15" fill="rgb(241,150,37)"/><text x="674.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.33%)</title><rect x="671" y="468" width="4" height="15" fill="rgb(233,124,40)"/><text x="674.00" y="478.50"></text></g><g><title>0x7f455e83421f (libc-2.29.so) (1 samples, 0.17%)</title><rect x="673" y="484" width="2" height="15" fill="rgb(234,195,31)"/><text x="676.00" y="494.50"></text></g><g><title>0x7f4538284592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.00%)</title><rect x="665" y="356" width="12" height="15" fill="rgb(222,198,36)"/><text x="668.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (6 samples, 1.00%)</title><rect x="665" y="372" width="12" height="15" fill="rgb(250,224,52)"/><text x="668.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (3 samples, 0.50%)</title><rect x="671" y="388" width="6" height="15" fill="rgb(212,180,0)"/><text x="674.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c) (3 samples, 0.50%)</title><rect x="671" y="404" width="6" height="15" fill="rgb(237,103,1)"/><text x="674.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.50%)</title><rect x="671" y="420" width="6" height="15" fill="rgb(227,53,39)"/><text x="674.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (3 samples, 0.50%)</title><rect x="671" y="436" width="6" height="15" fill="rgb(223,19,40)"/><text x="674.00" y="446.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="675" y="452" width="2" height="15" fill="rgb(228,129,36)"/><text x="678.00" y="462.50"></text></g><g><title>0x7f4538284690 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="677" y="356" width="2" height="15" fill="rgb(228,159,37)"/><text x="680.00" y="366.50"></text></g><g><title>0x7f4538284698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="679" y="356" width="2" height="15" fill="rgb(252,54,54)"/><text x="682.00" y="366.50"></text></g><g><title>0x7f45382846aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.83%)</title><rect x="681" y="356" width="10" height="15" fill="rgb(209,29,11)"/><text x="684.00" y="366.50"></text></g><g><title>0x7f45382846ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="691" y="356" width="4" height="15" fill="rgb(249,2,14)"/><text x="694.00" y="366.50"></text></g><g><title>0x7f45382846b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="695" y="356" width="2" height="15" fill="rgb(240,202,5)"/><text x="698.00" y="366.50"></text></g><g><title>0x7f45382846b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.67%)</title><rect x="697" y="356" width="8" height="15" fill="rgb(207,39,23)"/><text x="700.00" y="366.50"></text></g><g><title>0x7f45382846bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="705" y="356" width="2" height="15" fill="rgb(217,6,20)"/><text x="708.00" y="366.50"></text></g><g><title>0x7f45382846c6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="707" y="356" width="1" height="15" fill="rgb(251,211,53)"/><text x="710.00" y="366.50"></text></g><g><title>0x7f45382846d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="708" y="356" width="2" height="15" fill="rgb(207,215,49)"/><text x="711.00" y="366.50"></text></g><g><title>0x7f45382846e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="710" y="356" width="2" height="15" fill="rgb(235,200,50)"/><text x="713.00" y="366.50"></text></g><g><title>0x7f45382846fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="712" y="356" width="2" height="15" fill="rgb(209,115,1)"/><text x="715.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="712" y="372" width="2" height="15" fill="rgb(245,51,22)"/><text x="715.00" y="382.50"></text></g><g><title>0x7f45382847a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.50%)</title><rect x="714" y="356" width="6" height="15" fill="rgb(252,206,48)"/><text x="717.00" y="366.50"></text></g><g><title>0x7f45382847b0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="720" y="356" width="4" height="15" fill="rgb(229,31,42)"/><text x="723.00" y="366.50"></text></g><g><title>0x7f4538284972 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="724" y="356" width="2" height="15" fill="rgb(238,119,30)"/><text x="727.00" y="366.50"></text></g><g><title>0x7f4538285405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (41 samples, 6.82%)</title><rect x="653" y="340" width="81" height="15" fill="rgb(224,201,0)"/><text x="656.00" y="350.50">0x7f45382..</text></g><g><title>0x7f4538284c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.67%)</title><rect x="726" y="356" width="8" height="15" fill="rgb(209,190,53)"/><text x="729.00" y="366.50"></text></g><g><title>0x7f453825c529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.67%)</title><rect x="726" y="372" width="8" height="15" fill="rgb(251,75,34)"/><text x="729.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (4 samples, 0.67%)</title><rect x="726" y="388" width="8" height="15" fill="rgb(234,137,28)"/><text x="729.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.50%)</title><rect x="728" y="404" width="6" height="15" fill="rgb(239,116,14)"/><text x="731.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.17%)</title><rect x="732" y="420" width="2" height="15" fill="rgb(243,188,27)"/><text x="735.00" y="430.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.17%)</title><rect x="732" y="436" width="2" height="15" fill="rgb(214,222,52)"/><text x="735.00" y="446.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.17%)</title><rect x="732" y="452" width="2" height="15" fill="rgb(219,150,10)"/><text x="735.00" y="462.50"></text></g><g><title>0x7f45382594f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="734" y="372" width="2" height="15" fill="rgb(250,188,9)"/><text x="737.00" y="382.50"></text></g><g><title>0x7f4538275fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (43 samples, 7.15%)</title><rect x="653" y="324" width="85" height="15" fill="rgb(241,193,47)"/><text x="656.00" y="334.50">0x7f453827..</text></g><g><title>0x7f4538285540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="734" y="340" width="4" height="15" fill="rgb(250,129,7)"/><text x="737.00" y="350.50"></text></g><g><title>0x7f453825a2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="734" y="356" width="4" height="15" fill="rgb(236,141,42)"/><text x="737.00" y="366.50"></text></g><g><title>0x7f4538259530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="736" y="372" width="2" height="15" fill="rgb(235,136,40)"/><text x="739.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.17%)</title><rect x="736" y="388" width="2" height="15" fill="rgb(206,199,3)"/><text x="739.00" y="398.50"></text></g><g><title>0x7f4538276002 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="738" y="324" width="2" height="15" fill="rgb(226,175,38)"/><text x="741.00" y="334.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (4 samples, 0.67%)</title><rect x="744" y="372" width="8" height="15" fill="rgb(206,52,19)"/><text x="747.00" y="382.50"></text></g><g><title>0x7f453827605a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.16%)</title><rect x="740" y="324" width="14" height="15" fill="rgb(214,175,37)"/><text x="743.00" y="334.50"></text></g><g><title>array_take (methods.c) (7 samples, 1.16%)</title><rect x="740" y="340" width="14" height="15" fill="rgb(229,49,31)"/><text x="743.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (6 samples, 1.00%)</title><rect x="742" y="356" width="12" height="15" fill="rgb(248,85,11)"/><text x="745.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.17%)</title><rect x="752" y="372" width="2" height="15" fill="rgb(219,56,54)"/><text x="755.00" y="382.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.17%)</title><rect x="752" y="388" width="2" height="15" fill="rgb(239,143,29)"/><text x="755.00" y="398.50"></text></g><g><title>0x7f453827613a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="754" y="324" width="2" height="15" fill="rgb(239,37,42)"/><text x="757.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="754" y="340" width="2" height="15" fill="rgb(216,58,11)"/><text x="757.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.17%)</title><rect x="758" y="356" width="2" height="15" fill="rgb(239,170,28)"/><text x="761.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.17%)</title><rect x="758" y="372" width="2" height="15" fill="rgb(233,163,16)"/><text x="761.00" y="382.50"></text></g><g><title>0x7f453827614f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.50%)</title><rect x="756" y="324" width="5" height="15" fill="rgb(215,74,40)"/><text x="759.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.33%)</title><rect x="758" y="340" width="3" height="15" fill="rgb(244,170,54)"/><text x="761.00" y="350.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.17%)</title><rect x="760" y="356" width="1" height="15" fill="rgb(242,128,35)"/><text x="763.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.17%)</title><rect x="760" y="372" width="1" height="15" fill="rgb(221,132,41)"/><text x="763.00" y="382.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.17%)</title><rect x="760" y="388" width="1" height="15" fill="rgb(244,60,31)"/><text x="763.00" y="398.50"></text></g><g><title>0x7f455e832cb0 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="760" y="404" width="1" height="15" fill="rgb(225,206,1)"/><text x="763.00" y="414.50"></text></g><g><title>0x7f4538276163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="761" y="324" width="2" height="15" fill="rgb(236,158,8)"/><text x="764.00" y="334.50"></text></g><g><title>0x7f45382761bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="763" y="324" width="2" height="15" fill="rgb(234,26,53)"/><text x="766.00" y="334.50"></text></g><g><title>0x7f453827623a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="765" y="324" width="2" height="15" fill="rgb(248,61,27)"/><text x="768.00" y="334.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.17%)</title><rect x="767" y="356" width="2" height="15" fill="rgb(245,90,3)"/><text x="770.00" y="366.50"></text></g><g><title>0x7f4538276328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="767" y="324" width="4" height="15" fill="rgb(209,99,20)"/><text x="770.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.33%)</title><rect x="767" y="340" width="4" height="15" fill="rgb(249,173,48)"/><text x="770.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.17%)</title><rect x="769" y="356" width="2" height="15" fill="rgb(221,149,34)"/><text x="772.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.17%)</title><rect x="769" y="372" width="2" height="15" fill="rgb(235,173,12)"/><text x="772.00" y="382.50"></text></g><g><title>0x7f4538276554 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="771" y="324" width="2" height="15" fill="rgb(218,15,51)"/><text x="774.00" y="334.50"></text></g><g><title>0x7f4538276d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (64 samples, 10.65%)</title><rect x="650" y="308" width="125" height="15" fill="rgb(228,37,34)"/><text x="653.00" y="318.50">0x7f4538276d2e ..</text></g><g><title>0x7f45382765f2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="773" y="324" width="2" height="15" fill="rgb(228,101,34)"/><text x="776.00" y="334.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (2 samples, 0.33%)</title><rect x="775" y="308" width="4" height="15" fill="rgb(249,68,39)"/><text x="778.00" y="318.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.17%)</title><rect x="779" y="308" width="2" height="15" fill="rgb(228,110,15)"/><text x="782.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.17%)</title><rect x="779" y="324" width="2" height="15" fill="rgb(205,36,35)"/><text x="782.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.17%)</title><rect x="779" y="340" width="2" height="15" fill="rgb(223,2,9)"/><text x="782.00" y="350.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.17%)</title><rect x="785" y="404" width="2" height="15" fill="rgb(247,88,0)"/><text x="788.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.33%)</title><rect x="785" y="372" width="4" height="15" fill="rgb(237,183,13)"/><text x="788.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.33%)</title><rect x="785" y="388" width="4" height="15" fill="rgb(216,186,25)"/><text x="788.00" y="398.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="787" y="404" width="2" height="15" fill="rgb(244,44,5)"/><text x="790.00" y="414.50"></text></g><g><title>DOUBLE_equal (loops.c.src) (1 samples, 0.17%)</title><rect x="789" y="388" width="2" height="15" fill="rgb(251,214,25)"/><text x="792.00" y="398.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src) (1 samples, 0.17%)</title><rect x="789" y="404" width="2" height="15" fill="rgb(247,37,24)"/><text x="792.00" y="414.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src) (1 samples, 0.17%)</title><rect x="789" y="420" width="2" height="15" fill="rgb(235,99,30)"/><text x="792.00" y="430.50"></text></g><g><title>_mm_cmpeq_pd (emmintrin.h) (1 samples, 0.17%)</title><rect x="789" y="436" width="2" height="15" fill="rgb(227,134,49)"/><text x="792.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.67%)</title><rect x="785" y="356" width="8" height="15" fill="rgb(222,109,4)"/><text x="788.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.33%)</title><rect x="789" y="372" width="4" height="15" fill="rgb(252,150,41)"/><text x="792.00" y="382.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="791" y="388" width="2" height="15" fill="rgb(218,59,14)"/><text x="794.00" y="398.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.33%)</title><rect x="793" y="356" width="4" height="15" fill="rgb(233,187,46)"/><text x="796.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.17%)</title><rect x="795" y="372" width="2" height="15" fill="rgb(206,26,16)"/><text x="798.00" y="382.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.17%)</title><rect x="795" y="388" width="2" height="15" fill="rgb(234,197,27)"/><text x="798.00" y="398.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.17%)</title><rect x="795" y="404" width="2" height="15" fill="rgb(215,89,50)"/><text x="798.00" y="414.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.17%)</title><rect x="795" y="420" width="2" height="15" fill="rgb(217,178,20)"/><text x="798.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.16%)</title><rect x="785" y="340" width="14" height="15" fill="rgb(234,211,53)"/><text x="788.00" y="350.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.17%)</title><rect x="797" y="356" width="2" height="15" fill="rgb(236,208,17)"/><text x="800.00" y="366.50"></text></g><g><title>array_richcompare (arrayobject.c) (10 samples, 1.66%)</title><rect x="781" y="308" width="20" height="15" fill="rgb(254,107,45)"/><text x="784.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.33%)</title><rect x="785" y="324" width="16" height="15" fill="rgb(243,11,31)"/><text x="788.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="799" y="340" width="2" height="15" fill="rgb(212,203,50)"/><text x="802.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.17%)</title><rect x="799" y="356" width="2" height="15" fill="rgb(228,78,12)"/><text x="802.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.17%)</title><rect x="799" y="372" width="2" height="15" fill="rgb(229,54,50)"/><text x="802.00" y="382.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.50%)</title><rect x="801" y="308" width="6" height="15" fill="rgb(228,178,47)"/><text x="804.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c) (3 samples, 0.50%)</title><rect x="801" y="324" width="6" height="15" fill="rgb(209,163,16)"/><text x="804.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.17%)</title><rect x="805" y="340" width="2" height="15" fill="rgb(241,138,52)"/><text x="808.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="805" y="356" width="2" height="15" fill="rgb(212,14,32)"/><text x="808.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="805" y="372" width="2" height="15" fill="rgb(224,18,52)"/><text x="808.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.17%)</title><rect x="811" y="436" width="2" height="15" fill="rgb(209,30,50)"/><text x="814.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.50%)</title><rect x="809" y="420" width="5" height="15" fill="rgb(219,168,6)"/><text x="812.00" y="430.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.17%)</title><rect x="813" y="436" width="1" height="15" fill="rgb(252,185,48)"/><text x="816.00" y="446.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.17%)</title><rect x="814" y="420" width="2" height="15" fill="rgb(214,28,3)"/><text x="817.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.17%)</title><rect x="814" y="436" width="2" height="15" fill="rgb(213,176,17)"/><text x="817.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.17%)</title><rect x="814" y="452" width="2" height="15" fill="rgb(223,216,45)"/><text x="817.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="814" y="468" width="2" height="15" fill="rgb(246,166,27)"/><text x="817.00" y="478.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="814" y="484" width="2" height="15" fill="rgb(250,40,51)"/><text x="817.00" y="494.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="814" y="500" width="2" height="15" fill="rgb(250,170,17)"/><text x="817.00" y="510.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.17%)</title><rect x="814" y="516" width="2" height="15" fill="rgb(233,83,37)"/><text x="817.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="814" y="532" width="2" height="15" fill="rgb(249,30,5)"/><text x="817.00" y="542.50"></text></g><g><title>0x7f455e833d50 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="814" y="548" width="2" height="15" fill="rgb(231,1,29)"/><text x="817.00" y="558.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.33%)</title><rect x="816" y="420" width="4" height="15" fill="rgb(252,197,34)"/><text x="819.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.33%)</title><rect x="816" y="436" width="4" height="15" fill="rgb(234,11,28)"/><text x="819.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.33%)</title><rect x="816" y="452" width="4" height="15" fill="rgb(219,155,42)"/><text x="819.00" y="462.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.33%)</title><rect x="816" y="468" width="4" height="15" fill="rgb(216,216,36)"/><text x="819.00" y="478.50"></text></g><g><title>DOUBLE_add (loops.c.src) (29 samples, 4.83%)</title><rect x="828" y="436" width="57" height="15" fill="rgb(239,48,32)"/><text x="831.00" y="446.50">DOUBLE..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (12 samples, 2.00%)</title><rect x="862" y="452" width="23" height="15" fill="rgb(212,186,0)"/><text x="865.00" y="462.50">p..</text></g><g><title>array_sum (methods.c) (51 samples, 8.49%)</title><rect x="807" y="308" width="100" height="15" fill="rgb(244,219,34)"/><text x="810.00" y="318.50">array_sum (m..</text></g><g><title>forward_ndarray_method (methods.c) (51 samples, 8.49%)</title><rect x="807" y="324" width="100" height="15" fill="rgb(237,97,40)"/><text x="810.00" y="334.50">forward_ndar..</text></g><g><title>_sum (numpy/core/_methods.py) (51 samples, 8.49%)</title><rect x="807" y="340" width="100" height="15" fill="rgb(234,49,1)"/><text x="810.00" y="350.50">_sum (numpy/..</text></g><g><title>ufunc_reduce (ufunc_object.c) (50 samples, 8.32%)</title><rect x="809" y="356" width="98" height="15" fill="rgb(244,91,12)"/><text x="812.00" y="366.50">ufunc_reduc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (50 samples, 8.32%)</title><rect x="809" y="372" width="98" height="15" fill="rgb(242,225,30)"/><text x="812.00" y="382.50">PyUFunc_Gen..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (50 samples, 8.32%)</title><rect x="809" y="388" width="98" height="15" fill="rgb(238,112,50)"/><text x="812.00" y="398.50">PyUFunc_Red..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (50 samples, 8.32%)</title><rect x="809" y="404" width="98" height="15" fill="rgb(208,213,16)"/><text x="812.00" y="414.50">PyUFunc_Red..</text></g><g><title>reduce_loop (ufunc_object.c) (44 samples, 7.32%)</title><rect x="820" y="420" width="87" height="15" fill="rgb(216,78,6)"/><text x="823.00" y="430.50">reduce_loo..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (11 samples, 1.83%)</title><rect x="885" y="436" width="22" height="15" fill="rgb(222,62,50)"/><text x="888.00" y="446.50">n..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (11 samples, 1.83%)</title><rect x="919" y="324" width="21" height="15" fill="rgb(250,86,5)"/><text x="922.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (5 samples, 0.83%)</title><rect x="930" y="340" width="10" height="15" fill="rgb(206,20,27)"/><text x="933.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (18 samples, 3.00%)</title><rect x="907" y="308" width="35" height="15" fill="rgb(253,25,28)"/><text x="910.00" y="318.50">ch..</text></g><g><title>isclass (inspect.py) (1 samples, 0.17%)</title><rect x="940" y="324" width="2" height="15" fill="rgb(228,97,4)"/><text x="943.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.17%)</title><rect x="944" y="324" width="2" height="15" fill="rgb(239,5,2)"/><text x="947.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.17%)</title><rect x="944" y="340" width="2" height="15" fill="rgb(225,108,54)"/><text x="947.00" y="350.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.17%)</title><rect x="954" y="420" width="2" height="15" fill="rgb(228,95,38)"/><text x="957.00" y="430.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (11 samples, 1.83%)</title><rect x="952" y="372" width="22" height="15" fill="rgb(217,55,12)"/><text x="955.00" y="382.50">D..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (10 samples, 1.66%)</title><rect x="954" y="388" width="20" height="15" fill="rgb(254,53,36)"/><text x="957.00" y="398.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (10 samples, 1.66%)</title><rect x="954" y="404" width="20" height="15" fill="rgb(240,144,20)"/><text x="957.00" y="414.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (9 samples, 1.50%)</title><rect x="956" y="420" width="18" height="15" fill="rgb(210,36,33)"/><text x="959.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.17%)</title><rect x="975" y="388" width="2" height="15" fill="rgb(238,107,17)"/><text x="978.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.17%)</title><rect x="975" y="404" width="2" height="15" fill="rgb(205,44,41)"/><text x="978.00" y="414.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.17%)</title><rect x="975" y="420" width="2" height="15" fill="rgb(227,78,54)"/><text x="978.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.50%)</title><rect x="974" y="372" width="5" height="15" fill="rgb(241,6,49)"/><text x="977.00" y="382.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c) (1 samples, 0.17%)</title><rect x="977" y="388" width="2" height="15" fill="rgb(246,71,16)"/><text x="980.00" y="398.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (2 samples, 0.33%)</title><rect x="979" y="388" width="4" height="15" fill="rgb(226,167,41)"/><text x="982.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.33%)</title><rect x="979" y="404" width="4" height="15" fill="rgb(206,160,21)"/><text x="982.00" y="414.50"></text></g><g><title>0x7f455e834707 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="981" y="420" width="2" height="15" fill="rgb(223,151,4)"/><text x="984.00" y="430.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (15 samples, 2.50%)</title><rect x="979" y="372" width="30" height="15" fill="rgb(238,100,17)"/><text x="982.00" y="382.50">Np..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (13 samples, 2.16%)</title><rect x="983" y="388" width="26" height="15" fill="rgb(215,55,36)"/><text x="986.00" y="398.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (13 samples, 2.16%)</title><rect x="983" y="404" width="26" height="15" fill="rgb(217,222,8)"/><text x="986.00" y="414.50">P..</text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (7 samples, 1.16%)</title><rect x="995" y="420" width="14" height="15" fill="rgb(250,72,19)"/><text x="998.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (31 samples, 5.16%)</title><rect x="950" y="340" width="61" height="15" fill="rgb(246,174,8)"/><text x="953.00" y="350.50">execut..</text></g><g><title>iterator_loop (ufunc_object.c) (31 samples, 5.16%)</title><rect x="950" y="356" width="61" height="15" fill="rgb(245,191,22)"/><text x="953.00" y="366.50">iterat..</text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="1009" y="372" width="2" height="15" fill="rgb(253,145,9)"/><text x="1012.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (195 samples, 32.45%)</title><rect x="630" y="292" width="383" height="15" fill="rgb(206,21,54)"/><text x="633.00" y="302.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (36 samples, 5.99%)</title><rect x="942" y="308" width="71" height="15" fill="rgb(221,170,38)"/><text x="945.00" y="318.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (34 samples, 5.66%)</title><rect x="946" y="324" width="67" height="15" fill="rgb(217,121,25)"/><text x="949.00" y="334.50">PyUFunc..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1011" y="340" width="2" height="15" fill="rgb(211,150,34)"/><text x="1014.00" y="350.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.17%)</title><rect x="1013" y="340" width="2" height="15" fill="rgb(208,222,3)"/><text x="1016.00" y="350.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (3 samples, 0.50%)</title><rect x="1015" y="372" width="6" height="15" fill="rgb(226,147,12)"/><text x="1018.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1019" y="388" width="2" height="15" fill="rgb(237,228,47)"/><text x="1022.00" y="398.50"></text></g><g><title>0x7f455e7ea7a5 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1019" y="404" width="2" height="15" fill="rgb(249,66,41)"/><text x="1022.00" y="414.50"></text></g><g><title>0x7f455e7ea7c2 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1019" y="420" width="2" height="15" fill="rgb(237,146,40)"/><text x="1022.00" y="430.50"></text></g><g><title>0x7f455e7eaa19 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1019" y="436" width="2" height="15" fill="rgb(232,119,25)"/><text x="1022.00" y="446.50"></text></g><g><title>diophantine_sort_A (mem_overlap.c) (1 samples, 0.17%)</title><rect x="1019" y="452" width="2" height="15" fill="rgb(214,153,32)"/><text x="1022.00" y="462.50"></text></g><g><title>0x7f455e832902 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1021" y="388" width="2" height="15" fill="rgb(229,95,17)"/><text x="1024.00" y="398.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (5 samples, 0.83%)</title><rect x="1015" y="340" width="10" height="15" fill="rgb(241,145,33)"/><text x="1018.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (5 samples, 0.83%)</title><rect x="1015" y="356" width="10" height="15" fill="rgb(247,133,51)"/><text x="1018.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.33%)</title><rect x="1021" y="372" width="4" height="15" fill="rgb(245,99,7)"/><text x="1024.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.17%)</title><rect x="1023" y="388" width="2" height="15" fill="rgb(232,197,40)"/><text x="1026.00" y="398.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.17%)</title><rect x="1023" y="404" width="2" height="15" fill="rgb(245,198,9)"/><text x="1026.00" y="414.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.17%)</title><rect x="1023" y="420" width="2" height="15" fill="rgb(220,53,7)"/><text x="1026.00" y="430.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.17%)</title><rect x="1023" y="436" width="2" height="15" fill="rgb(211,222,1)"/><text x="1026.00" y="446.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="1025" y="340" width="2" height="15" fill="rgb(230,9,22)"/><text x="1028.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.83%)</title><rect x="1013" y="308" width="21" height="15" fill="rgb(253,211,51)"/><text x="1016.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 1.83%)</title><rect x="1013" y="324" width="21" height="15" fill="rgb(233,6,41)"/><text x="1016.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (4 samples, 0.67%)</title><rect x="1027" y="340" width="7" height="15" fill="rgb(225,122,3)"/><text x="1030.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (3 samples, 0.50%)</title><rect x="1029" y="356" width="5" height="15" fill="rgb(237,83,16)"/><text x="1032.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (3 samples, 0.50%)</title><rect x="1029" y="372" width="5" height="15" fill="rgb(215,125,18)"/><text x="1032.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (3 samples, 0.50%)</title><rect x="1029" y="388" width="5" height="15" fill="rgb(240,77,39)"/><text x="1032.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.33%)</title><rect x="1030" y="404" width="4" height="15" fill="rgb(209,6,39)"/><text x="1033.00" y="414.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (213 samples, 35.44%)</title><rect x="618" y="276" width="418" height="15" fill="rgb(250,151,30)"/><text x="621.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_forest.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 2.00%)</title><rect x="1013" y="292" width="23" height="15" fill="rgb(205,149,51)"/><text x="1016.00" y="302.50">u..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1034" y="308" width="2" height="15" fill="rgb(214,88,52)"/><text x="1037.00" y="318.50"></text></g><g><title>0x7f455da55a80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1034" y="324" width="2" height="15" fill="rgb(237,144,12)"/><text x="1037.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (216 samples, 35.94%)</title><rect x="614" y="260" width="424" height="15" fill="rgb(251,182,33)"/><text x="617.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="1036" y="276" width="2" height="15" fill="rgb(228,78,1)"/><text x="1039.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.17%)</title><rect x="1036" y="292" width="2" height="15" fill="rgb(223,169,7)"/><text x="1039.00" y="302.50"></text></g><g><title>__exit__ (joblib/parallel.py) (6 samples, 1.00%)</title><rect x="1038" y="260" width="12" height="15" fill="rgb(226,144,2)"/><text x="1041.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py) (6 samples, 1.00%)</title><rect x="1038" y="276" width="12" height="15" fill="rgb(240,186,51)"/><text x="1041.00" y="286.50"></text></g><g><title>_dispatch (joblib/parallel.py) (247 samples, 41.10%)</title><rect x="581" y="196" width="485" height="15" fill="rgb(207,197,7)"/><text x="584.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>apply_async (joblib/_parallel_backends.py) (241 samples, 40.10%)</title><rect x="593" y="212" width="473" height="15" fill="rgb(217,150,8)"/><text x="596.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (235 samples, 39.10%)</title><rect x="604" y="228" width="462" height="15" fill="rgb(219,47,33)"/><text x="607.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (233 samples, 38.77%)</title><rect x="608" y="244" width="458" height="15" fill="rgb(247,25,9)"/><text x="611.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (8 samples, 1.33%)</title><rect x="1050" y="260" width="16" height="15" fill="rgb(243,186,30)"/><text x="1053.00" y="270.50"></text></g><g><title>0x7f455e848e7e (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1064" y="276" width="2" height="15" fill="rgb(239,53,31)"/><text x="1067.00" y="286.50"></text></g><g><title>__enter__ (threading.py) (1 samples, 0.17%)</title><rect x="1085" y="212" width="2" height="15" fill="rgb(213,86,44)"/><text x="1088.00" y="222.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.17%)</title><rect x="1087" y="212" width="2" height="15" fill="rgb(230,73,47)"/><text x="1090.00" y="222.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.17%)</title><rect x="1087" y="228" width="2" height="15" fill="rgb(213,100,46)"/><text x="1090.00" y="238.50"></text></g><g><title>_qsize (queue.py) (2 samples, 0.33%)</title><rect x="1089" y="212" width="4" height="15" fill="rgb(241,58,50)"/><text x="1092.00" y="222.50"></text></g><g><title>get (queue.py) (16 samples, 2.66%)</title><rect x="1066" y="196" width="31" height="15" fill="rgb(214,149,51)"/><text x="1069.00" y="206.50">ge..</text></g><g><title>notify (threading.py) (2 samples, 0.33%)</title><rect x="1093" y="212" width="4" height="15" fill="rgb(236,75,45)"/><text x="1096.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (1 samples, 0.17%)</title><rect x="1095" y="228" width="2" height="15" fill="rgb(249,229,39)"/><text x="1098.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="1103" y="212" width="4" height="15" fill="rgb(228,42,31)"/><text x="1106.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (15 samples, 2.50%)</title><rect x="1107" y="212" width="29" height="15" fill="rgb(233,93,26)"/><text x="1110.00" y="222.50">ge..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (7 samples, 1.16%)</title><rect x="1123" y="228" width="13" height="15" fill="rgb(227,60,32)"/><text x="1126.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (21 samples, 3.49%)</title><rect x="1097" y="196" width="41" height="15" fill="rgb(208,86,3)"/><text x="1100.00" y="206.50">get..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="1136" y="212" width="2" height="15" fill="rgb(247,193,12)"/><text x="1139.00" y="222.50"></text></g><g><title>__enter__ (threading.py) (1 samples, 0.17%)</title><rect x="1146" y="212" width="2" height="15" fill="rgb(252,146,42)"/><text x="1149.00" y="222.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.17%)</title><rect x="1148" y="212" width="2" height="15" fill="rgb(219,67,25)"/><text x="1151.00" y="222.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.17%)</title><rect x="1148" y="228" width="2" height="15" fill="rgb(210,30,30)"/><text x="1151.00" y="238.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.17%)</title><rect x="1148" y="244" width="2" height="15" fill="rgb(251,15,44)"/><text x="1151.00" y="254.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="1148" y="260" width="2" height="15" fill="rgb(241,178,24)"/><text x="1151.00" y="270.50"></text></g><g><title>_put (queue.py) (1 samples, 0.17%)</title><rect x="1150" y="212" width="2" height="15" fill="rgb(207,50,43)"/><text x="1153.00" y="222.50"></text></g><g><title>0x7f455e853120 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1158" y="228" width="2" height="15" fill="rgb(238,153,28)"/><text x="1161.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (335 samples, 55.74%)</title><rect x="504" y="180" width="658" height="15" fill="rgb(216,219,29)"/><text x="507.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (12 samples, 2.00%)</title><rect x="1138" y="196" width="24" height="15" fill="rgb(245,72,21)"/><text x="1141.00" y="206.50">p..</text></g><g><title>notify (threading.py) (5 samples, 0.83%)</title><rect x="1152" y="212" width="10" height="15" fill="rgb(223,191,1)"/><text x="1155.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (1 samples, 0.17%)</title><rect x="1160" y="228" width="2" height="15" fill="rgb(230,65,9)"/><text x="1163.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py) (342 samples, 56.91%)</title><rect x="496" y="164" width="672" height="15" fill="rgb(224,183,32)"/><text x="499.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (3 samples, 0.50%)</title><rect x="1162" y="180" width="6" height="15" fill="rgb(246,224,14)"/><text x="1165.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.17%)</title><rect x="1168" y="164" width="2" height="15" fill="rgb(228,8,14)"/><text x="1171.00" y="174.50"></text></g><g><title>memstr_to_bytes (joblib/disk.py) (1 samples, 0.17%)</title><rect x="1168" y="180" width="2" height="15" fill="rgb(208,118,5)"/><text x="1171.00" y="190.50"></text></g><g><title>_joblib_parallel_args (sklearn/utils/fixes.py) (1 samples, 0.17%)</title><rect x="1170" y="164" width="2" height="15" fill="rgb(252,35,8)"/><text x="1173.00" y="174.50"></text></g><g><title>__init__ (distutils/version.py) (1 samples, 0.17%)</title><rect x="1170" y="180" width="2" height="15" fill="rgb(250,228,9)"/><text x="1173.00" y="190.50"></text></g><g><title>parse (distutils/version.py) (1 samples, 0.17%)</title><rect x="1170" y="196" width="2" height="15" fill="rgb(229,44,24)"/><text x="1173.00" y="206.50"></text></g><g><title>array_copyto (multiarraymodule.c) (1 samples, 0.17%)</title><rect x="1172" y="228" width="2" height="15" fill="rgb(205,12,23)"/><text x="1175.00" y="238.50"></text></g><g><title>full (numpy/core/numeric.py) (2 samples, 0.33%)</title><rect x="1172" y="180" width="4" height="15" fill="rgb(224,120,17)"/><text x="1175.00" y="190.50"></text></g><g><title>copyto (&lt;__array_function__ internals&gt;) (2 samples, 0.33%)</title><rect x="1172" y="196" width="4" height="15" fill="rgb(214,17,35)"/><text x="1175.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.33%)</title><rect x="1172" y="212" width="4" height="15" fill="rgb(240,48,13)"/><text x="1175.00" y="222.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.17%)</title><rect x="1174" y="228" width="2" height="15" fill="rgb(253,209,46)"/><text x="1177.00" y="238.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.17%)</title><rect x="1174" y="244" width="2" height="15" fill="rgb(241,131,54)"/><text x="1177.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.17%)</title><rect x="1174" y="260" width="2" height="15" fill="rgb(215,76,3)"/><text x="1177.00" y="270.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.17%)</title><rect x="1174" y="276" width="2" height="15" fill="rgb(245,21,18)"/><text x="1177.00" y="286.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py) (3 samples, 0.50%)</title><rect x="1172" y="164" width="6" height="15" fill="rgb(230,44,3)"/><text x="1175.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1176" y="180" width="2" height="15" fill="rgb(218,150,35)"/><text x="1179.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1176" y="196" width="2" height="15" fill="rgb(221,41,2)"/><text x="1179.00" y="206.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.17%)</title><rect x="1176" y="212" width="2" height="15" fill="rgb(208,202,4)"/><text x="1179.00" y="222.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.17%)</title><rect x="1176" y="228" width="2" height="15" fill="rgb(221,186,45)"/><text x="1179.00" y="238.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1176" y="244" width="2" height="15" fill="rgb(214,123,51)"/><text x="1179.00" y="254.50"></text></g><g><title>profile_skl (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py) (350 samples, 58.24%)</title><rect x="492" y="68" width="688" height="15" fill="rgb(222,180,1)"/><text x="495.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py) (350 samples, 58.24%)</title><rect x="492" y="84" width="688" height="15" fill="rgb(254,136,51)"/><text x="495.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py)</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py) (350 samples, 58.24%)</title><rect x="492" y="100" width="688" height="15" fill="rgb(210,65,18)"/><text x="495.00" y="110.50">profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (350 samples, 58.24%)</title><rect x="492" y="116" width="688" height="15" fill="rgb(216,15,13)"/><text x="495.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (350 samples, 58.24%)</title><rect x="492" y="132" width="688" height="15" fill="rgb(207,127,48)"/><text x="495.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py) (350 samples, 58.24%)</title><rect x="492" y="148" width="688" height="15" fill="rgb(242,46,24)"/><text x="495.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py)</text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;) (1 samples, 0.17%)</title><rect x="1178" y="164" width="2" height="15" fill="rgb(207,170,49)"/><text x="1181.00" y="174.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.17%)</title><rect x="1178" y="180" width="2" height="15" fill="rgb(223,98,42)"/><text x="1181.00" y="190.50"></text></g><g><title>atleast_1d (numpy/core/shape_base.py) (1 samples, 0.17%)</title><rect x="1178" y="196" width="2" height="15" fill="rgb(210,88,2)"/><text x="1181.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.17%)</title><rect x="1180" y="132" width="2" height="15" fill="rgb(233,95,45)"/><text x="1183.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.17%)</title><rect x="1180" y="148" width="2" height="15" fill="rgb(234,154,36)"/><text x="1183.00" y="158.50"></text></g><g><title>clone (sklearn/base.py) (1 samples, 0.17%)</title><rect x="1180" y="164" width="2" height="15" fill="rgb(237,222,22)"/><text x="1183.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.17%)</title><rect x="1180" y="180" width="2" height="15" fill="rgb(244,190,47)"/><text x="1183.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.17%)</title><rect x="1180" y="196" width="2" height="15" fill="rgb(205,216,0)"/><text x="1183.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/base.py) (1 samples, 0.17%)</title><rect x="1180" y="212" width="2" height="15" fill="rgb(210,38,13)"/><text x="1183.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c) (1 samples, 0.17%)</title><rect x="1184" y="356" width="2" height="15" fill="rgb(205,67,0)"/><text x="1187.00" y="366.50"></text></g><g><title>_dispatch (joblib/parallel.py) (3 samples, 0.50%)</title><rect x="1182" y="164" width="6" height="15" fill="rgb(248,89,39)"/><text x="1185.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (3 samples, 0.50%)</title><rect x="1182" y="180" width="6" height="15" fill="rgb(230,176,43)"/><text x="1185.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (3 samples, 0.50%)</title><rect x="1182" y="196" width="6" height="15" fill="rgb(238,116,41)"/><text x="1185.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (3 samples, 0.50%)</title><rect x="1182" y="212" width="6" height="15" fill="rgb(244,67,27)"/><text x="1185.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (3 samples, 0.50%)</title><rect x="1182" y="228" width="6" height="15" fill="rgb(237,165,25)"/><text x="1185.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (3 samples, 0.50%)</title><rect x="1182" y="244" width="6" height="15" fill="rgb(216,130,2)"/><text x="1185.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.50%)</title><rect x="1182" y="260" width="6" height="15" fill="rgb(205,199,31)"/><text x="1185.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.50%)</title><rect x="1182" y="276" width="6" height="15" fill="rgb(222,41,21)"/><text x="1185.00" y="286.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;) (3 samples, 0.50%)</title><rect x="1182" y="292" width="6" height="15" fill="rgb(211,115,34)"/><text x="1185.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.50%)</title><rect x="1182" y="308" width="6" height="15" fill="rgb(224,215,31)"/><text x="1185.00" y="318.50"></text></g><g><title>unique (numpy/lib/arraysetops.py) (3 samples, 0.50%)</title><rect x="1182" y="324" width="6" height="15" fill="rgb(241,222,51)"/><text x="1185.00" y="334.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py) (3 samples, 0.50%)</title><rect x="1182" y="340" width="6" height="15" fill="rgb(241,176,32)"/><text x="1185.00" y="350.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.17%)</title><rect x="1186" y="356" width="2" height="15" fill="rgb(233,134,18)"/><text x="1189.00" y="366.50"></text></g><g><title>array_boolean_subscript (mapping.c) (1 samples, 0.17%)</title><rect x="1186" y="372" width="2" height="15" fill="rgb(221,214,52)"/><text x="1189.00" y="382.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.17%)</title><rect x="1186" y="388" width="2" height="15" fill="rgb(241,217,40)"/><text x="1189.00" y="398.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.17%)</title><rect x="1186" y="404" width="2" height="15" fill="rgb(206,201,11)"/><text x="1189.00" y="414.50"></text></g><g><title>all (601 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(214,116,30)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py) (601 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(242,150,49)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py)</text></g><g><title>start (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py) (5 samples, 0.83%)</title><rect x="1180" y="68" width="10" height="15" fill="rgb(246,225,1)"/><text x="1183.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py) (5 samples, 0.83%)</title><rect x="1180" y="84" width="10" height="15" fill="rgb(210,64,28)"/><text x="1183.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.83%)</title><rect x="1180" y="100" width="10" height="15" fill="rgb(236,170,29)"/><text x="1183.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (5 samples, 0.83%)</title><rect x="1180" y="116" width="10" height="15" fill="rgb(248,194,24)"/><text x="1183.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 0.67%)</title><rect x="1182" y="132" width="8" height="15" fill="rgb(209,79,0)"/><text x="1185.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (4 samples, 0.67%)</title><rect x="1182" y="148" width="8" height="15" fill="rgb(207,108,15)"/><text x="1185.00" y="158.50"></text></g><g><title>get (queue.py) (1 samples, 0.17%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(254,150,51)"/><text x="1191.00" y="174.50"></text></g><g><title>__enter__ (threading.py) (1 samples, 0.17%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(246,155,15)"/><text x="1191.00" y="190.50"></text></g></g></svg>