<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1766" onload="init(evt)" viewBox="0 0 1200 1766" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1766" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1749.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1749.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(206,212,39)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(234,24,4)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(237,180,23)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(219,97,25)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(221,17,1)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(210,56,2)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(238,7,31)"/><text x="13.00" y="974.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(231,49,53)"/><text x="15.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(240,146,37)"/><text x="15.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.19%)</title><rect x="12" y="964" width="2" height="15" fill="rgb(207,210,49)"/><text x="15.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.19%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(248,185,2)"/><text x="15.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.56%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(254,191,0)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(231,27,12)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(210,28,4)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(209,164,48)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.56%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(253,41,42)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(216,133,32)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.56%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(237,209,43)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(231,1,32)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(238,172,32)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(210,201,29)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.56%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(234,11,49)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(220,118,38)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.56%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(248,168,15)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(233,94,4)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(230,80,17)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(211,151,30)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.56%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(234,20,41)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(233,154,32)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.56%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(231,75,30)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(240,98,30)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(205,27,25)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(239,105,47)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(242,197,21)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(240,59,15)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(242,183,29)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.56%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(212,86,37)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(236,5,33)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.56%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(210,184,42)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(230,80,40)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(218,100,15)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(246,55,19)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.56%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(215,100,27)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(236,145,18)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.56%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(253,82,14)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.56%)</title><rect x="10" y="836" width="6" height="15" fill="rgb(217,8,31)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.56%)</title><rect x="10" y="852" width="6" height="15" fill="rgb(249,0,37)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.37%)</title><rect x="12" y="868" width="4" height="15" fill="rgb(238,173,16)"/><text x="15.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.37%)</title><rect x="12" y="884" width="4" height="15" fill="rgb(243,57,27)"/><text x="15.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.37%)</title><rect x="12" y="900" width="4" height="15" fill="rgb(246,45,37)"/><text x="15.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.37%)</title><rect x="12" y="916" width="4" height="15" fill="rgb(213,55,43)"/><text x="15.00" y="926.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.19%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(229,7,44)"/><text x="17.00" y="942.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.19%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(225,26,31)"/><text x="17.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="500" width="2" height="15" fill="rgb(212,210,14)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="516" width="2" height="15" fill="rgb(239,115,29)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="532" width="2" height="15" fill="rgb(252,35,17)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="548" width="2" height="15" fill="rgb(206,114,43)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="564" width="2" height="15" fill="rgb(238,146,39)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.19%)</title><rect x="16" y="580" width="2" height="15" fill="rgb(240,68,18)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="596" width="2" height="15" fill="rgb(225,148,13)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="612" width="2" height="15" fill="rgb(226,18,36)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="628" width="2" height="15" fill="rgb(251,145,43)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="644" width="2" height="15" fill="rgb(230,90,32)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="660" width="2" height="15" fill="rgb(212,113,8)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.19%)</title><rect x="16" y="676" width="2" height="15" fill="rgb(251,59,23)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="692" width="2" height="15" fill="rgb(252,69,38)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="708" width="2" height="15" fill="rgb(230,53,31)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="724" width="2" height="15" fill="rgb(234,130,19)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="740" width="2" height="15" fill="rgb(214,167,34)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="756" width="2" height="15" fill="rgb(250,103,46)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.19%)</title><rect x="16" y="772" width="2" height="15" fill="rgb(243,113,11)"/><text x="19.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="788" width="2" height="15" fill="rgb(207,98,4)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="804" width="2" height="15" fill="rgb(210,60,31)"/><text x="19.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="820" width="2" height="15" fill="rgb(239,44,14)"/><text x="19.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="836" width="2" height="15" fill="rgb(247,121,44)"/><text x="19.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="852" width="2" height="15" fill="rgb(218,117,48)"/><text x="19.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="868" width="2" height="15" fill="rgb(208,148,17)"/><text x="19.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="884" width="2" height="15" fill="rgb(253,10,19)"/><text x="19.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.19%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(221,75,52)"/><text x="19.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(232,185,43)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(225,181,45)"/><text x="19.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(249,62,35)"/><text x="19.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(234,110,2)"/><text x="19.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="980" width="2" height="15" fill="rgb(214,153,27)"/><text x="19.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.19%)</title><rect x="16" y="996" width="2" height="15" fill="rgb(227,156,14)"/><text x="19.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1012" width="2" height="15" fill="rgb(226,76,15)"/><text x="19.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1028" width="2" height="15" fill="rgb(208,226,42)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1044" width="2" height="15" fill="rgb(222,22,32)"/><text x="19.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1060" width="2" height="15" fill="rgb(247,184,35)"/><text x="19.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1076" width="2" height="15" fill="rgb(249,221,5)"/><text x="19.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="1092" width="2" height="15" fill="rgb(216,88,46)"/><text x="19.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1108" width="2" height="15" fill="rgb(238,33,48)"/><text x="19.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.19%)</title><rect x="16" y="1124" width="2" height="15" fill="rgb(227,174,5)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1140" width="2" height="15" fill="rgb(218,152,1)"/><text x="19.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1156" width="2" height="15" fill="rgb(233,126,24)"/><text x="19.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1172" width="2" height="15" fill="rgb(246,7,51)"/><text x="19.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="1188" width="2" height="15" fill="rgb(234,147,14)"/><text x="19.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1204" width="2" height="15" fill="rgb(214,207,30)"/><text x="19.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.19%)</title><rect x="16" y="1220" width="2" height="15" fill="rgb(225,26,54)"/><text x="19.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1236" width="2" height="15" fill="rgb(240,179,5)"/><text x="19.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1252" width="2" height="15" fill="rgb(205,49,12)"/><text x="19.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1268" width="2" height="15" fill="rgb(214,166,34)"/><text x="19.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="1284" width="2" height="15" fill="rgb(225,12,33)"/><text x="19.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1300" width="2" height="15" fill="rgb(250,0,23)"/><text x="19.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.19%)</title><rect x="16" y="1316" width="2" height="15" fill="rgb(236,159,27)"/><text x="19.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1332" width="2" height="15" fill="rgb(209,115,20)"/><text x="19.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1348" width="2" height="15" fill="rgb(242,49,23)"/><text x="19.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1364" width="2" height="15" fill="rgb(217,78,39)"/><text x="19.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="1380" width="2" height="15" fill="rgb(248,92,8)"/><text x="19.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1396" width="2" height="15" fill="rgb(246,202,19)"/><text x="19.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.19%)</title><rect x="16" y="1412" width="2" height="15" fill="rgb(237,130,0)"/><text x="19.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1428" width="2" height="15" fill="rgb(224,181,13)"/><text x="19.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1444" width="2" height="15" fill="rgb(210,110,42)"/><text x="19.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1460" width="2" height="15" fill="rgb(212,32,10)"/><text x="19.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="1476" width="2" height="15" fill="rgb(216,173,28)"/><text x="19.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1492" width="2" height="15" fill="rgb(242,114,34)"/><text x="19.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.19%)</title><rect x="16" y="1508" width="2" height="15" fill="rgb(218,182,46)"/><text x="19.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1524" width="2" height="15" fill="rgb(251,219,18)"/><text x="19.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1540" width="2" height="15" fill="rgb(249,134,23)"/><text x="19.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1556" width="2" height="15" fill="rgb(221,207,31)"/><text x="19.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="1572" width="2" height="15" fill="rgb(254,131,26)"/><text x="19.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1588" width="2" height="15" fill="rgb(232,190,13)"/><text x="19.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/__init__.py) (1 samples, 0.19%)</title><rect x="16" y="1604" width="2" height="15" fill="rgb(226,126,45)"/><text x="19.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1620" width="2" height="15" fill="rgb(213,99,20)"/><text x="19.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1636" width="2" height="15" fill="rgb(225,102,39)"/><text x="19.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1652" width="2" height="15" fill="rgb(215,145,3)"/><text x="19.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="1668" width="2" height="15" fill="rgb(250,167,21)"/><text x="19.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1684" width="2" height="15" fill="rgb(216,74,47)"/><text x="19.00" y="1694.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/lsqr.py) (1 samples, 0.19%)</title><rect x="16" y="1700" width="2" height="15" fill="rgb(205,138,9)"/><text x="19.00" y="1710.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1716" width="2" height="15" fill="rgb(223,141,42)"/><text x="19.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.93%)</title><rect x="10" y="196" width="10" height="15" fill="rgb(205,105,0)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.93%)</title><rect x="10" y="212" width="10" height="15" fill="rgb(253,98,23)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.93%)</title><rect x="10" y="228" width="10" height="15" fill="rgb(207,225,28)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.93%)</title><rect x="10" y="244" width="10" height="15" fill="rgb(225,217,12)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.93%)</title><rect x="10" y="260" width="10" height="15" fill="rgb(230,36,24)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.93%)</title><rect x="10" y="276" width="10" height="15" fill="rgb(226,215,27)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.37%)</title><rect x="16" y="292" width="4" height="15" fill="rgb(219,225,54)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="16" y="308" width="4" height="15" fill="rgb(208,181,35)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="16" y="324" width="4" height="15" fill="rgb(244,224,10)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="16" y="340" width="4" height="15" fill="rgb(220,142,47)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="16" y="356" width="4" height="15" fill="rgb(210,23,47)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="16" y="372" width="4" height="15" fill="rgb(208,207,45)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.37%)</title><rect x="16" y="388" width="4" height="15" fill="rgb(247,188,49)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="16" y="404" width="4" height="15" fill="rgb(215,49,19)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="16" y="420" width="4" height="15" fill="rgb(249,177,43)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="16" y="436" width="4" height="15" fill="rgb(218,49,29)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="16" y="452" width="4" height="15" fill="rgb(247,102,44)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="16" y="468" width="4" height="15" fill="rgb(230,112,10)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.37%)</title><rect x="16" y="484" width="4" height="15" fill="rgb(243,121,33)"/><text x="19.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="500" width="2" height="15" fill="rgb(233,91,16)"/><text x="21.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="516" width="2" height="15" fill="rgb(222,112,19)"/><text x="21.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="532" width="2" height="15" fill="rgb(227,18,4)"/><text x="21.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="548" width="2" height="15" fill="rgb(243,173,28)"/><text x="21.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="564" width="2" height="15" fill="rgb(253,9,23)"/><text x="21.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="18" y="580" width="2" height="15" fill="rgb(252,207,45)"/><text x="21.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="596" width="2" height="15" fill="rgb(253,179,34)"/><text x="21.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.19%)</title><rect x="18" y="612" width="2" height="15" fill="rgb(242,216,20)"/><text x="21.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="628" width="2" height="15" fill="rgb(226,196,5)"/><text x="21.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="644" width="2" height="15" fill="rgb(226,69,1)"/><text x="21.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="660" width="2" height="15" fill="rgb(211,165,42)"/><text x="21.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="18" y="676" width="2" height="15" fill="rgb(216,203,46)"/><text x="21.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="692" width="2" height="15" fill="rgb(206,92,43)"/><text x="21.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.19%)</title><rect x="18" y="708" width="2" height="15" fill="rgb(245,19,0)"/><text x="21.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="724" width="2" height="15" fill="rgb(215,193,0)"/><text x="21.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="740" width="2" height="15" fill="rgb(215,133,52)"/><text x="21.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="756" width="2" height="15" fill="rgb(235,222,20)"/><text x="21.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="18" y="772" width="2" height="15" fill="rgb(210,81,38)"/><text x="21.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="788" width="2" height="15" fill="rgb(210,167,52)"/><text x="21.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.19%)</title><rect x="18" y="804" width="2" height="15" fill="rgb(205,134,16)"/><text x="21.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="820" width="2" height="15" fill="rgb(232,208,13)"/><text x="21.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="836" width="2" height="15" fill="rgb(237,16,42)"/><text x="21.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="852" width="2" height="15" fill="rgb(219,193,14)"/><text x="21.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="18" y="868" width="2" height="15" fill="rgb(206,209,17)"/><text x="21.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="884" width="2" height="15" fill="rgb(252,163,36)"/><text x="21.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.19%)</title><rect x="18" y="900" width="2" height="15" fill="rgb(215,199,35)"/><text x="21.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="916" width="2" height="15" fill="rgb(233,186,8)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="932" width="2" height="15" fill="rgb(219,115,3)"/><text x="21.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="948" width="2" height="15" fill="rgb(205,77,49)"/><text x="21.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="18" y="964" width="2" height="15" fill="rgb(216,119,53)"/><text x="21.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="980" width="2" height="15" fill="rgb(205,151,28)"/><text x="21.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (1 samples, 0.19%)</title><rect x="18" y="996" width="2" height="15" fill="rgb(231,202,37)"/><text x="21.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1012" width="2" height="15" fill="rgb(214,54,40)"/><text x="21.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1028" width="2" height="15" fill="rgb(217,163,12)"/><text x="21.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1044" width="2" height="15" fill="rgb(244,163,27)"/><text x="21.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1060" width="2" height="15" fill="rgb(216,95,42)"/><text x="21.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1076" width="2" height="15" fill="rgb(248,37,15)"/><text x="21.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1092" width="2" height="15" fill="rgb(234,188,19)"/><text x="21.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="18" y="1108" width="2" height="15" fill="rgb(207,72,1)"/><text x="21.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1124" width="2" height="15" fill="rgb(223,85,3)"/><text x="21.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (1 samples, 0.19%)</title><rect x="18" y="1140" width="2" height="15" fill="rgb(231,152,49)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1156" width="2" height="15" fill="rgb(209,209,31)"/><text x="21.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1172" width="2" height="15" fill="rgb(248,74,12)"/><text x="21.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1188" width="2" height="15" fill="rgb(233,132,47)"/><text x="21.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="18" y="1204" width="2" height="15" fill="rgb(239,9,14)"/><text x="21.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1220" width="2" height="15" fill="rgb(228,4,46)"/><text x="21.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/reduction.py) (1 samples, 0.19%)</title><rect x="18" y="1236" width="2" height="15" fill="rgb(209,67,12)"/><text x="21.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1252" width="2" height="15" fill="rgb(207,50,49)"/><text x="21.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1268" width="2" height="15" fill="rgb(228,184,0)"/><text x="21.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1284" width="2" height="15" fill="rgb(205,138,44)"/><text x="21.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="18" y="1300" width="2" height="15" fill="rgb(247,184,49)"/><text x="21.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1316" width="2" height="15" fill="rgb(253,203,50)"/><text x="21.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/_posix_reduction.py) (1 samples, 0.19%)</title><rect x="18" y="1332" width="2" height="15" fill="rgb(225,75,21)"/><text x="21.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="484" width="3" height="15" fill="rgb(229,79,54)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="500" width="3" height="15" fill="rgb(234,217,24)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="516" width="3" height="15" fill="rgb(213,102,14)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="532" width="3" height="15" fill="rgb(228,174,28)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="20" y="548" width="3" height="15" fill="rgb(218,227,26)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="564" width="3" height="15" fill="rgb(208,45,50)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.19%)</title><rect x="20" y="580" width="3" height="15" fill="rgb(237,124,15)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="596" width="3" height="15" fill="rgb(229,63,27)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="612" width="3" height="15" fill="rgb(254,135,16)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="628" width="3" height="15" fill="rgb(254,190,14)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="20" y="644" width="3" height="15" fill="rgb(244,228,28)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="660" width="3" height="15" fill="rgb(239,34,46)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.19%)</title><rect x="20" y="676" width="3" height="15" fill="rgb(251,210,27)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="692" width="3" height="15" fill="rgb(253,77,17)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="708" width="3" height="15" fill="rgb(224,176,46)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="724" width="3" height="15" fill="rgb(250,167,5)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="20" y="740" width="3" height="15" fill="rgb(229,116,5)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="756" width="3" height="15" fill="rgb(214,194,41)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.19%)</title><rect x="20" y="772" width="3" height="15" fill="rgb(246,42,17)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="788" width="3" height="15" fill="rgb(227,27,19)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="804" width="3" height="15" fill="rgb(230,148,23)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="820" width="3" height="15" fill="rgb(237,173,2)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="20" y="836" width="3" height="15" fill="rgb(252,96,6)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="852" width="3" height="15" fill="rgb(227,43,12)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.19%)</title><rect x="20" y="868" width="3" height="15" fill="rgb(213,44,20)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="884" width="3" height="15" fill="rgb(251,179,3)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="900" width="3" height="15" fill="rgb(237,17,4)"/><text x="23.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="916" width="3" height="15" fill="rgb(219,148,30)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="932" width="3" height="15" fill="rgb(212,37,5)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="948" width="3" height="15" fill="rgb(245,160,34)"/><text x="23.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="964" width="3" height="15" fill="rgb(232,212,19)"/><text x="23.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="20" y="980" width="3" height="15" fill="rgb(211,29,14)"/><text x="23.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="996" width="3" height="15" fill="rgb(243,138,2)"/><text x="23.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.19%)</title><rect x="20" y="1012" width="3" height="15" fill="rgb(225,215,45)"/><text x="23.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1028" width="3" height="15" fill="rgb(243,16,9)"/><text x="23.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1044" width="3" height="15" fill="rgb(215,182,46)"/><text x="23.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1060" width="3" height="15" fill="rgb(209,135,20)"/><text x="23.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="20" y="1076" width="3" height="15" fill="rgb(209,67,30)"/><text x="23.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1092" width="3" height="15" fill="rgb(250,170,24)"/><text x="23.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.19%)</title><rect x="20" y="1108" width="3" height="15" fill="rgb(233,102,6)"/><text x="23.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1124" width="3" height="15" fill="rgb(234,79,19)"/><text x="23.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1140" width="3" height="15" fill="rgb(233,103,43)"/><text x="23.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1156" width="3" height="15" fill="rgb(227,106,31)"/><text x="23.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1172" width="3" height="15" fill="rgb(242,33,10)"/><text x="23.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1188" width="3" height="15" fill="rgb(221,24,10)"/><text x="23.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="20" y="1204" width="3" height="15" fill="rgb(249,65,0)"/><text x="23.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1220" width="3" height="15" fill="rgb(214,207,46)"/><text x="23.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.19%)</title><rect x="20" y="1236" width="3" height="15" fill="rgb(236,208,46)"/><text x="23.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1252" width="3" height="15" fill="rgb(220,203,53)"/><text x="23.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1268" width="3" height="15" fill="rgb(230,16,28)"/><text x="23.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1284" width="3" height="15" fill="rgb(237,113,4)"/><text x="23.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1300" width="3" height="15" fill="rgb(213,172,8)"/><text x="23.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1316" width="3" height="15" fill="rgb(225,127,42)"/><text x="23.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="20" y="1332" width="3" height="15" fill="rgb(239,102,20)"/><text x="23.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1348" width="3" height="15" fill="rgb(210,57,19)"/><text x="23.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.19%)</title><rect x="20" y="1364" width="3" height="15" fill="rgb(214,8,3)"/><text x="23.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1380" width="3" height="15" fill="rgb(215,115,8)"/><text x="23.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1396" width="3" height="15" fill="rgb(235,62,50)"/><text x="23.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1412" width="3" height="15" fill="rgb(205,121,29)"/><text x="23.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="20" y="1428" width="3" height="15" fill="rgb(215,203,3)"/><text x="23.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="20" y="1444" width="3" height="15" fill="rgb(232,132,5)"/><text x="23.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.19%)</title><rect x="20" y="1460" width="3" height="15" fill="rgb(208,93,51)"/><text x="23.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.19%)</title><rect x="20" y="1476" width="3" height="15" fill="rgb(210,124,53)"/><text x="23.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.19%)</title><rect x="20" y="1492" width="3" height="15" fill="rgb(211,124,7)"/><text x="23.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.19%)</title><rect x="20" y="1508" width="3" height="15" fill="rgb(235,33,28)"/><text x="23.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.19%)</title><rect x="20" y="1524" width="3" height="15" fill="rgb(211,166,50)"/><text x="23.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="20" y="1540" width="3" height="15" fill="rgb(225,137,38)"/><text x="23.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.19%)</title><rect x="20" y="1556" width="3" height="15" fill="rgb(250,24,36)"/><text x="23.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.19%)</title><rect x="20" y="1572" width="3" height="15" fill="rgb(219,26,51)"/><text x="23.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.19%)</title><rect x="20" y="1588" width="3" height="15" fill="rgb(221,77,45)"/><text x="23.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.19%)</title><rect x="20" y="1604" width="3" height="15" fill="rgb(219,214,27)"/><text x="23.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.19%)</title><rect x="20" y="1620" width="3" height="15" fill="rgb(250,207,46)"/><text x="23.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.19%)</title><rect x="20" y="1636" width="3" height="15" fill="rgb(209,66,37)"/><text x="23.00" y="1646.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="20" y="1652" width="3" height="15" fill="rgb(236,47,28)"/><text x="23.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="772" width="2" height="15" fill="rgb(214,179,48)"/><text x="26.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="788" width="2" height="15" fill="rgb(253,130,11)"/><text x="26.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="804" width="2" height="15" fill="rgb(226,132,44)"/><text x="26.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="820" width="2" height="15" fill="rgb(213,207,7)"/><text x="26.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="23" y="836" width="2" height="15" fill="rgb(235,125,1)"/><text x="26.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="852" width="2" height="15" fill="rgb(210,96,23)"/><text x="26.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.19%)</title><rect x="23" y="868" width="2" height="15" fill="rgb(212,165,1)"/><text x="26.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="884" width="2" height="15" fill="rgb(212,173,15)"/><text x="26.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="900" width="2" height="15" fill="rgb(234,115,18)"/><text x="26.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="916" width="2" height="15" fill="rgb(209,203,23)"/><text x="26.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="23" y="932" width="2" height="15" fill="rgb(240,185,36)"/><text x="26.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="948" width="2" height="15" fill="rgb(214,221,49)"/><text x="26.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py) (1 samples, 0.19%)</title><rect x="23" y="964" width="2" height="15" fill="rgb(214,113,10)"/><text x="26.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="980" width="2" height="15" fill="rgb(226,168,21)"/><text x="26.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="996" width="2" height="15" fill="rgb(236,201,19)"/><text x="26.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="1012" width="2" height="15" fill="rgb(212,133,9)"/><text x="26.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="23" y="1028" width="2" height="15" fill="rgb(254,2,32)"/><text x="26.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="1044" width="2" height="15" fill="rgb(226,117,13)"/><text x="26.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/sorting.py) (1 samples, 0.19%)</title><rect x="23" y="1060" width="2" height="15" fill="rgb(234,6,53)"/><text x="26.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="1076" width="2" height="15" fill="rgb(242,30,49)"/><text x="26.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="1092" width="2" height="15" fill="rgb(227,184,48)"/><text x="26.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="1108" width="2" height="15" fill="rgb(233,151,34)"/><text x="26.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="23" y="1124" width="2" height="15" fill="rgb(210,107,18)"/><text x="26.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="1140" width="2" height="15" fill="rgb(209,69,32)"/><text x="26.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/algorithms.py) (1 samples, 0.19%)</title><rect x="23" y="1156" width="2" height="15" fill="rgb(222,60,4)"/><text x="26.00" y="1166.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.19%)</title><rect x="23" y="1172" width="2" height="15" fill="rgb(225,74,10)"/><text x="26.00" y="1182.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.19%)</title><rect x="23" y="1188" width="2" height="15" fill="rgb(242,89,11)"/><text x="26.00" y="1198.50"></text></g><g><title>sub (re.py) (1 samples, 0.19%)</title><rect x="23" y="1204" width="2" height="15" fill="rgb(223,26,26)"/><text x="26.00" y="1214.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.19%)</title><rect x="23" y="1220" width="2" height="15" fill="rgb(227,172,5)"/><text x="26.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1028" width="2" height="15" fill="rgb(229,37,30)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1044" width="2" height="15" fill="rgb(217,184,33)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1060" width="2" height="15" fill="rgb(208,46,7)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="25" y="1076" width="2" height="15" fill="rgb(213,175,24)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1092" width="2" height="15" fill="rgb(214,215,27)"/><text x="28.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.19%)</title><rect x="25" y="1108" width="2" height="15" fill="rgb(218,192,51)"/><text x="28.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1124" width="2" height="15" fill="rgb(243,9,54)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1140" width="2" height="15" fill="rgb(210,26,32)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1156" width="2" height="15" fill="rgb(241,129,12)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="25" y="1172" width="2" height="15" fill="rgb(226,20,7)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1188" width="2" height="15" fill="rgb(223,86,37)"/><text x="28.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.74%)</title><rect x="20" y="340" width="9" height="15" fill="rgb(252,41,48)"/><text x="23.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.74%)</title><rect x="20" y="356" width="9" height="15" fill="rgb(245,202,1)"/><text x="23.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.74%)</title><rect x="20" y="372" width="9" height="15" fill="rgb(234,137,6)"/><text x="23.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.74%)</title><rect x="20" y="388" width="9" height="15" fill="rgb(236,23,41)"/><text x="23.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.74%)</title><rect x="20" y="404" width="9" height="15" fill="rgb(212,8,7)"/><text x="23.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.74%)</title><rect x="20" y="420" width="9" height="15" fill="rgb(219,198,29)"/><text x="23.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 0.74%)</title><rect x="20" y="436" width="9" height="15" fill="rgb(224,87,26)"/><text x="23.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.74%)</title><rect x="20" y="452" width="9" height="15" fill="rgb(224,97,54)"/><text x="23.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.74%)</title><rect x="20" y="468" width="9" height="15" fill="rgb(218,164,25)"/><text x="23.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="23" y="484" width="6" height="15" fill="rgb(243,214,24)"/><text x="26.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.56%)</title><rect x="23" y="500" width="6" height="15" fill="rgb(247,38,50)"/><text x="26.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="23" y="516" width="6" height="15" fill="rgb(235,62,14)"/><text x="26.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.56%)</title><rect x="23" y="532" width="6" height="15" fill="rgb(249,200,25)"/><text x="26.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="23" y="548" width="6" height="15" fill="rgb(225,71,21)"/><text x="26.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="23" y="564" width="6" height="15" fill="rgb(219,66,17)"/><text x="26.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="23" y="580" width="6" height="15" fill="rgb(242,15,19)"/><text x="26.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.56%)</title><rect x="23" y="596" width="6" height="15" fill="rgb(225,39,21)"/><text x="26.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="23" y="612" width="6" height="15" fill="rgb(242,117,41)"/><text x="26.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.56%)</title><rect x="23" y="628" width="6" height="15" fill="rgb(208,88,50)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="23" y="644" width="6" height="15" fill="rgb(231,18,8)"/><text x="26.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="23" y="660" width="6" height="15" fill="rgb(231,219,30)"/><text x="26.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="23" y="676" width="6" height="15" fill="rgb(221,94,52)"/><text x="26.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.56%)</title><rect x="23" y="692" width="6" height="15" fill="rgb(240,202,17)"/><text x="26.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="23" y="708" width="6" height="15" fill="rgb(249,114,31)"/><text x="26.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.56%)</title><rect x="23" y="724" width="6" height="15" fill="rgb(211,214,48)"/><text x="26.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="23" y="740" width="6" height="15" fill="rgb(252,213,27)"/><text x="26.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.56%)</title><rect x="23" y="756" width="6" height="15" fill="rgb(216,182,0)"/><text x="26.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="25" y="772" width="4" height="15" fill="rgb(223,213,54)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="25" y="788" width="4" height="15" fill="rgb(210,151,36)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="25" y="804" width="4" height="15" fill="rgb(250,39,31)"/><text x="28.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.37%)</title><rect x="25" y="820" width="4" height="15" fill="rgb(220,169,18)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="25" y="836" width="4" height="15" fill="rgb(221,209,11)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="25" y="852" width="4" height="15" fill="rgb(239,146,20)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="25" y="868" width="4" height="15" fill="rgb(216,171,54)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="25" y="884" width="4" height="15" fill="rgb(209,124,22)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="25" y="900" width="4" height="15" fill="rgb(240,187,45)"/><text x="28.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.37%)</title><rect x="25" y="916" width="4" height="15" fill="rgb(250,164,1)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="25" y="932" width="4" height="15" fill="rgb(226,49,14)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="25" y="948" width="4" height="15" fill="rgb(234,196,31)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="25" y="964" width="4" height="15" fill="rgb(242,87,16)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="25" y="980" width="4" height="15" fill="rgb(249,228,45)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="25" y="996" width="4" height="15" fill="rgb(210,143,1)"/><text x="28.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.37%)</title><rect x="25" y="1012" width="4" height="15" fill="rgb(234,140,40)"/><text x="28.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.19%)</title><rect x="27" y="1028" width="2" height="15" fill="rgb(210,51,47)"/><text x="30.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.19%)</title><rect x="27" y="1044" width="2" height="15" fill="rgb(214,106,7)"/><text x="30.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.19%)</title><rect x="27" y="1060" width="2" height="15" fill="rgb(240,30,37)"/><text x="30.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.19%)</title><rect x="27" y="1076" width="2" height="15" fill="rgb(225,143,47)"/><text x="30.00" y="1086.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.19%)</title><rect x="27" y="1092" width="2" height="15" fill="rgb(252,174,12)"/><text x="30.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.19%)</title><rect x="27" y="1108" width="2" height="15" fill="rgb(232,104,46)"/><text x="30.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.19%)</title><rect x="27" y="1124" width="2" height="15" fill="rgb(222,68,42)"/><text x="30.00" y="1134.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.19%)</title><rect x="29" y="580" width="2" height="15" fill="rgb(235,11,44)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="29" y="596" width="2" height="15" fill="rgb(252,47,51)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="29" y="612" width="2" height="15" fill="rgb(216,129,41)"/><text x="32.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="29" y="628" width="2" height="15" fill="rgb(205,195,34)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="29" y="644" width="2" height="15" fill="rgb(228,99,49)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="29" y="660" width="2" height="15" fill="rgb(211,43,7)"/><text x="32.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="29" y="676" width="2" height="15" fill="rgb(216,120,35)"/><text x="32.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="29" y="692" width="2" height="15" fill="rgb(239,45,18)"/><text x="32.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="29" y="708" width="2" height="15" fill="rgb(237,134,7)"/><text x="32.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.19%)</title><rect x="29" y="724" width="2" height="15" fill="rgb(223,46,46)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="29" y="740" width="2" height="15" fill="rgb(233,47,23)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="29" y="756" width="2" height="15" fill="rgb(245,53,29)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="29" y="772" width="2" height="15" fill="rgb(241,7,18)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="29" y="788" width="2" height="15" fill="rgb(214,186,49)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="29" y="804" width="2" height="15" fill="rgb(215,114,48)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.19%)</title><rect x="29" y="820" width="2" height="15" fill="rgb(205,184,24)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="29" y="836" width="2" height="15" fill="rgb(211,39,31)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="29" y="852" width="2" height="15" fill="rgb(230,220,40)"/><text x="32.00" y="862.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="29" y="868" width="2" height="15" fill="rgb(217,190,10)"/><text x="32.00" y="878.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="29" y="884" width="2" height="15" fill="rgb(218,35,10)"/><text x="32.00" y="894.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="29" y="900" width="2" height="15" fill="rgb(205,77,49)"/><text x="32.00" y="910.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="29" y="916" width="2" height="15" fill="rgb(253,58,32)"/><text x="32.00" y="926.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="29" y="932" width="2" height="15" fill="rgb(206,23,36)"/><text x="32.00" y="942.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.19%)</title><rect x="29" y="948" width="2" height="15" fill="rgb(246,18,24)"/><text x="32.00" y="958.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.19%)</title><rect x="29" y="964" width="2" height="15" fill="rgb(250,139,29)"/><text x="32.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 1.12%)</title><rect x="20" y="244" width="14" height="15" fill="rgb(212,101,45)"/><text x="23.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.12%)</title><rect x="20" y="260" width="14" height="15" fill="rgb(213,131,31)"/><text x="23.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.12%)</title><rect x="20" y="276" width="14" height="15" fill="rgb(251,105,45)"/><text x="23.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.12%)</title><rect x="20" y="292" width="14" height="15" fill="rgb(248,42,37)"/><text x="23.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.12%)</title><rect x="20" y="308" width="14" height="15" fill="rgb(252,142,23)"/><text x="23.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.12%)</title><rect x="20" y="324" width="14" height="15" fill="rgb(221,120,48)"/><text x="23.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.37%)</title><rect x="29" y="340" width="5" height="15" fill="rgb(222,5,15)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="29" y="356" width="5" height="15" fill="rgb(219,152,29)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="29" y="372" width="5" height="15" fill="rgb(240,88,52)"/><text x="32.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="29" y="388" width="5" height="15" fill="rgb(235,180,33)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="29" y="404" width="5" height="15" fill="rgb(222,60,22)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="29" y="420" width="5" height="15" fill="rgb(228,145,17)"/><text x="32.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="29" y="436" width="5" height="15" fill="rgb(253,118,32)"/><text x="32.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="29" y="452" width="5" height="15" fill="rgb(209,68,50)"/><text x="32.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="29" y="468" width="5" height="15" fill="rgb(254,18,9)"/><text x="32.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.37%)</title><rect x="29" y="484" width="5" height="15" fill="rgb(206,9,16)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="29" y="500" width="5" height="15" fill="rgb(235,78,3)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="29" y="516" width="5" height="15" fill="rgb(231,184,27)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="29" y="532" width="5" height="15" fill="rgb(213,63,14)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.37%)</title><rect x="29" y="548" width="5" height="15" fill="rgb(247,80,54)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="29" y="564" width="5" height="15" fill="rgb(236,174,47)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.19%)</title><rect x="31" y="580" width="3" height="15" fill="rgb(247,104,21)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="596" width="3" height="15" fill="rgb(241,108,30)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="612" width="3" height="15" fill="rgb(249,136,3)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="628" width="3" height="15" fill="rgb(249,41,10)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="31" y="644" width="3" height="15" fill="rgb(212,195,24)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="660" width="3" height="15" fill="rgb(206,12,33)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.19%)</title><rect x="31" y="676" width="3" height="15" fill="rgb(227,111,4)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="692" width="3" height="15" fill="rgb(235,129,36)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="708" width="3" height="15" fill="rgb(205,200,26)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="724" width="3" height="15" fill="rgb(229,123,23)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="31" y="740" width="3" height="15" fill="rgb(230,199,48)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="756" width="3" height="15" fill="rgb(243,153,39)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.19%)</title><rect x="31" y="772" width="3" height="15" fill="rgb(229,15,9)"/><text x="34.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="788" width="3" height="15" fill="rgb(253,11,33)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="804" width="3" height="15" fill="rgb(221,154,13)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="820" width="3" height="15" fill="rgb(245,218,8)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="836" width="3" height="15" fill="rgb(217,22,35)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="852" width="3" height="15" fill="rgb(247,19,24)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="31" y="868" width="3" height="15" fill="rgb(245,177,51)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="884" width="3" height="15" fill="rgb(220,169,48)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.19%)</title><rect x="31" y="900" width="3" height="15" fill="rgb(240,186,13)"/><text x="34.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="916" width="3" height="15" fill="rgb(227,102,10)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="932" width="3" height="15" fill="rgb(254,45,12)"/><text x="34.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="948" width="3" height="15" fill="rgb(213,197,18)"/><text x="34.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="31" y="964" width="3" height="15" fill="rgb(214,37,11)"/><text x="34.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="980" width="3" height="15" fill="rgb(240,189,26)"/><text x="34.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.19%)</title><rect x="31" y="996" width="3" height="15" fill="rgb(246,142,54)"/><text x="34.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="1012" width="3" height="15" fill="rgb(242,162,11)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="1028" width="3" height="15" fill="rgb(228,147,0)"/><text x="34.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="1044" width="3" height="15" fill="rgb(226,137,47)"/><text x="34.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="31" y="1060" width="3" height="15" fill="rgb(224,114,7)"/><text x="34.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="1076" width="3" height="15" fill="rgb(223,119,11)"/><text x="34.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.19%)</title><rect x="31" y="1092" width="3" height="15" fill="rgb(233,119,33)"/><text x="34.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="1108" width="3" height="15" fill="rgb(234,208,9)"/><text x="34.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="1124" width="3" height="15" fill="rgb(246,64,51)"/><text x="34.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="1140" width="3" height="15" fill="rgb(213,213,49)"/><text x="34.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="31" y="1156" width="3" height="15" fill="rgb(210,15,20)"/><text x="34.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="1172" width="3" height="15" fill="rgb(243,204,1)"/><text x="34.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/rsa.py) (1 samples, 0.19%)</title><rect x="31" y="1188" width="3" height="15" fill="rgb(241,8,54)"/><text x="34.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="1204" width="3" height="15" fill="rgb(219,221,8)"/><text x="34.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="1220" width="3" height="15" fill="rgb(232,60,18)"/><text x="34.00" y="1230.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="31" y="1236" width="3" height="15" fill="rgb(232,142,1)"/><text x="34.00" y="1246.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="31" y="1252" width="3" height="15" fill="rgb(222,50,38)"/><text x="34.00" y="1262.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="31" y="1268" width="3" height="15" fill="rgb(247,162,52)"/><text x="34.00" y="1278.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="31" y="1284" width="3" height="15" fill="rgb(210,26,10)"/><text x="34.00" y="1294.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="31" y="1300" width="3" height="15" fill="rgb(210,46,29)"/><text x="34.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.23%)</title><rect x="10" y="68" width="26" height="15" fill="rgb(217,218,33)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.23%)</title><rect x="10" y="84" width="26" height="15" fill="rgb(237,170,54)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.23%)</title><rect x="10" y="100" width="26" height="15" fill="rgb(207,126,30)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.23%)</title><rect x="10" y="116" width="26" height="15" fill="rgb(251,33,13)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.23%)</title><rect x="10" y="132" width="26" height="15" fill="rgb(215,22,11)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py) (12 samples, 2.23%)</title><rect x="10" y="148" width="26" height="15" fill="rgb(241,176,9)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.23%)</title><rect x="10" y="164" width="26" height="15" fill="rgb(221,201,46)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.23%)</title><rect x="10" y="180" width="26" height="15" fill="rgb(241,199,43)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.30%)</title><rect x="20" y="196" width="16" height="15" fill="rgb(233,128,8)"/><text x="23.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.30%)</title><rect x="20" y="212" width="16" height="15" fill="rgb(214,70,21)"/><text x="23.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.30%)</title><rect x="20" y="228" width="16" height="15" fill="rgb(253,53,42)"/><text x="23.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.19%)</title><rect x="34" y="244" width="2" height="15" fill="rgb(236,144,20)"/><text x="37.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="260" width="2" height="15" fill="rgb(211,85,54)"/><text x="37.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="276" width="2" height="15" fill="rgb(229,175,45)"/><text x="37.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="292" width="2" height="15" fill="rgb(251,168,17)"/><text x="37.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="308" width="2" height="15" fill="rgb(253,122,49)"/><text x="37.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="324" width="2" height="15" fill="rgb(252,16,9)"/><text x="37.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="34" y="340" width="2" height="15" fill="rgb(213,182,16)"/><text x="37.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="356" width="2" height="15" fill="rgb(222,206,6)"/><text x="37.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.19%)</title><rect x="34" y="372" width="2" height="15" fill="rgb(207,113,23)"/><text x="37.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="388" width="2" height="15" fill="rgb(206,201,39)"/><text x="37.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="404" width="2" height="15" fill="rgb(217,180,51)"/><text x="37.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="420" width="2" height="15" fill="rgb(231,9,43)"/><text x="37.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="436" width="2" height="15" fill="rgb(216,205,0)"/><text x="37.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="452" width="2" height="15" fill="rgb(236,169,32)"/><text x="37.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="34" y="468" width="2" height="15" fill="rgb(242,218,49)"/><text x="37.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="484" width="2" height="15" fill="rgb(232,154,20)"/><text x="37.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.19%)</title><rect x="34" y="500" width="2" height="15" fill="rgb(234,222,13)"/><text x="37.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="516" width="2" height="15" fill="rgb(221,119,5)"/><text x="37.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="532" width="2" height="15" fill="rgb(240,136,48)"/><text x="37.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="548" width="2" height="15" fill="rgb(242,117,44)"/><text x="37.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="564" width="2" height="15" fill="rgb(223,108,23)"/><text x="37.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="580" width="2" height="15" fill="rgb(244,228,0)"/><text x="37.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="34" y="596" width="2" height="15" fill="rgb(244,147,31)"/><text x="37.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="612" width="2" height="15" fill="rgb(245,137,10)"/><text x="37.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.19%)</title><rect x="34" y="628" width="2" height="15" fill="rgb(214,46,23)"/><text x="37.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="644" width="2" height="15" fill="rgb(238,1,1)"/><text x="37.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="660" width="2" height="15" fill="rgb(225,80,18)"/><text x="37.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="676" width="2" height="15" fill="rgb(237,126,30)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="692" width="2" height="15" fill="rgb(212,35,18)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="708" width="2" height="15" fill="rgb(225,156,50)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="724" width="2" height="15" fill="rgb(213,99,21)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="34" y="740" width="2" height="15" fill="rgb(236,171,22)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="756" width="2" height="15" fill="rgb(244,162,45)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.19%)</title><rect x="34" y="772" width="2" height="15" fill="rgb(252,152,34)"/><text x="37.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="788" width="2" height="15" fill="rgb(218,160,52)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="804" width="2" height="15" fill="rgb(208,136,47)"/><text x="37.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="820" width="2" height="15" fill="rgb(229,159,43)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="836" width="2" height="15" fill="rgb(209,60,46)"/><text x="37.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="852" width="2" height="15" fill="rgb(232,100,18)"/><text x="37.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="34" y="868" width="2" height="15" fill="rgb(238,178,3)"/><text x="37.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="884" width="2" height="15" fill="rgb(231,123,29)"/><text x="37.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.19%)</title><rect x="34" y="900" width="2" height="15" fill="rgb(225,162,23)"/><text x="37.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="916" width="2" height="15" fill="rgb(251,72,40)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="932" width="2" height="15" fill="rgb(233,150,3)"/><text x="37.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="948" width="2" height="15" fill="rgb(245,69,20)"/><text x="37.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="34" y="964" width="2" height="15" fill="rgb(232,146,52)"/><text x="37.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="980" width="2" height="15" fill="rgb(224,78,10)"/><text x="37.00" y="990.50"></text></g><g><title>&lt;module&gt; (pathlib.py) (1 samples, 0.19%)</title><rect x="34" y="996" width="2" height="15" fill="rgb(220,80,16)"/><text x="37.00" y="1006.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="38" y="116" width="2" height="15" fill="rgb(224,151,49)"/><text x="41.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.19%)</title><rect x="38" y="132" width="2" height="15" fill="rgb(239,194,16)"/><text x="41.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.19%)</title><rect x="38" y="148" width="2" height="15" fill="rgb(219,112,23)"/><text x="41.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.19%)</title><rect x="38" y="164" width="2" height="15" fill="rgb(243,126,32)"/><text x="41.00" y="174.50"></text></g><g><title>0x7fc37b684a33 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="38" y="180" width="2" height="15" fill="rgb(229,143,35)"/><text x="41.00" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.19%)</title><rect x="53" y="180" width="3" height="15" fill="rgb(215,100,14)"/><text x="56.00" y="190.50"></text></g><g><title>0x7fc33b6f4ff9 (?) (1 samples, 0.19%)</title><rect x="60" y="212" width="2" height="15" fill="rgb(218,168,32)"/><text x="63.00" y="222.50"></text></g><g><title>0x7fc33b6efef6 (?) (1 samples, 0.19%)</title><rect x="60" y="228" width="2" height="15" fill="rgb(205,140,24)"/><text x="63.00" y="238.50"></text></g><g><title>0x7fc33b6e4962 (?) (1 samples, 0.19%)</title><rect x="60" y="244" width="2" height="15" fill="rgb(220,50,51)"/><text x="63.00" y="254.50"></text></g><g><title>0x7fc33b7187a7 (?) (1 samples, 0.19%)</title><rect x="60" y="260" width="2" height="15" fill="rgb(248,162,24)"/><text x="63.00" y="270.50"></text></g><g><title>0x7fc33b718379 (?) (1 samples, 0.19%)</title><rect x="60" y="276" width="2" height="15" fill="rgb(234,140,41)"/><text x="63.00" y="286.50"></text></g><g><title>0x7fc33bb768b8 (?) (1 samples, 0.19%)</title><rect x="60" y="292" width="2" height="15" fill="rgb(222,121,14)"/><text x="63.00" y="302.50"></text></g><g><title>0x7fc33bb74c7f (?) (1 samples, 0.19%)</title><rect x="60" y="308" width="2" height="15" fill="rgb(218,124,51)"/><text x="63.00" y="318.50"></text></g><g><title>0x7fc33bb8799c (?) (1 samples, 0.19%)</title><rect x="60" y="324" width="2" height="15" fill="rgb(212,69,46)"/><text x="63.00" y="334.50"></text></g><g><title>0x7fc33b86cd39 (?) (1 samples, 0.19%)</title><rect x="60" y="340" width="2" height="15" fill="rgb(245,126,12)"/><text x="63.00" y="350.50"></text></g><g><title>0x7fc33b86740d (?) (1 samples, 0.19%)</title><rect x="60" y="356" width="2" height="15" fill="rgb(225,163,47)"/><text x="63.00" y="366.50"></text></g><g><title>0x7fc37b803e5f (libm-2.29.so) (1 samples, 0.19%)</title><rect x="60" y="372" width="2" height="15" fill="rgb(207,73,8)"/><text x="63.00" y="382.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="62" y="260" width="2" height="15" fill="rgb(218,120,47)"/><text x="65.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.37%)</title><rect x="62" y="212" width="5" height="15" fill="rgb(216,189,17)"/><text x="65.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="62" y="228" width="5" height="15" fill="rgb(251,82,18)"/><text x="65.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="62" y="244" width="5" height="15" fill="rgb(230,1,19)"/><text x="65.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="64" y="260" width="3" height="15" fill="rgb(217,91,9)"/><text x="67.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="64" y="276" width="3" height="15" fill="rgb(233,155,2)"/><text x="67.00" y="286.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.19%)</title><rect x="67" y="212" width="2" height="15" fill="rgb(221,142,32)"/><text x="70.00" y="222.50"></text></g><g><title>0x7ffd5ad47bb2 ([vdso]) (1 samples, 0.19%)</title><rect x="67" y="228" width="2" height="15" fill="rgb(214,226,13)"/><text x="70.00" y="238.50"></text></g><g><title>0x7ffd5ad47949 ([vdso]) (1 samples, 0.19%)</title><rect x="67" y="244" width="2" height="15" fill="rgb(220,214,19)"/><text x="70.00" y="254.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="73" y="292" width="2" height="15" fill="rgb(218,83,50)"/><text x="76.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="73" y="308" width="2" height="15" fill="rgb(221,199,4)"/><text x="76.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="78" y="340" width="2" height="15" fill="rgb(210,61,21)"/><text x="81.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="78" y="356" width="2" height="15" fill="rgb(252,221,37)"/><text x="81.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="155" y="356" width="2" height="15" fill="rgb(233,213,11)"/><text x="158.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="155" y="372" width="2" height="15" fill="rgb(231,156,18)"/><text x="158.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="155" y="388" width="2" height="15" fill="rgb(244,175,46)"/><text x="158.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="155" y="404" width="2" height="15" fill="rgb(223,100,46)"/><text x="158.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="155" y="420" width="2" height="15" fill="rgb(211,134,9)"/><text x="158.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="155" y="436" width="2" height="15" fill="rgb(245,41,51)"/><text x="158.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="155" y="452" width="2" height="15" fill="rgb(219,187,47)"/><text x="158.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="155" y="468" width="2" height="15" fill="rgb(246,192,10)"/><text x="158.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="155" y="484" width="2" height="15" fill="rgb(240,189,15)"/><text x="158.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="155" y="500" width="2" height="15" fill="rgb(206,100,12)"/><text x="158.00" y="510.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="155" y="516" width="2" height="15" fill="rgb(251,18,32)"/><text x="158.00" y="526.50"></text></g><g><title>0x7fc37b6a4d50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="214" y="372" width="2" height="15" fill="rgb(247,154,30)"/><text x="217.00" y="382.50"></text></g><g><title>0x7fc37b6a4db3 (libc-2.29.so) (5 samples, 0.93%)</title><rect x="216" y="372" width="11" height="15" fill="rgb(218,144,21)"/><text x="219.00" y="382.50"></text></g><g><title>0x7fc37b803e00 (libm-2.29.so) (3 samples, 0.56%)</title><rect x="227" y="372" width="7" height="15" fill="rgb(213,96,52)"/><text x="230.00" y="382.50"></text></g><g><title>0x7fc37b803e0a (libm-2.29.so) (1 samples, 0.19%)</title><rect x="234" y="372" width="2" height="15" fill="rgb(235,141,52)"/><text x="237.00" y="382.50"></text></g><g><title>0x7fc37b803e17 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="236" y="372" width="4" height="15" fill="rgb(241,162,42)"/><text x="239.00" y="382.50"></text></g><g><title>0x7fc37b803e37 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="240" y="372" width="2" height="15" fill="rgb(210,105,14)"/><text x="243.00" y="382.50"></text></g><g><title>0x7fc37b803e46 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="242" y="372" width="3" height="15" fill="rgb(227,139,37)"/><text x="245.00" y="382.50"></text></g><g><title>0x7fc37b803e4a (libm-2.29.so) (3 samples, 0.56%)</title><rect x="245" y="372" width="6" height="15" fill="rgb(239,23,15)"/><text x="248.00" y="382.50"></text></g><g><title>0x7fc37b803e4e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="251" y="372" width="2" height="15" fill="rgb(253,158,24)"/><text x="254.00" y="382.50"></text></g><g><title>0x7fc37b803e5f (libm-2.29.so) (2 samples, 0.37%)</title><rect x="253" y="372" width="5" height="15" fill="rgb(235,67,49)"/><text x="256.00" y="382.50"></text></g><g><title>0x7fc37b803e71 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="258" y="372" width="2" height="15" fill="rgb(251,108,20)"/><text x="261.00" y="382.50"></text></g><g><title>0x7fc37b803e7a (libm-2.29.so) (1 samples, 0.19%)</title><rect x="260" y="372" width="2" height="15" fill="rgb(228,66,9)"/><text x="263.00" y="382.50"></text></g><g><title>0x7fc37b803e7e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="262" y="372" width="2" height="15" fill="rgb(208,188,38)"/><text x="265.00" y="382.50"></text></g><g><title>0x7fc37b803e92 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="264" y="372" width="5" height="15" fill="rgb(208,5,31)"/><text x="267.00" y="382.50"></text></g><g><title>0x7fc37b803e96 (libm-2.29.so) (3 samples, 0.56%)</title><rect x="269" y="372" width="6" height="15" fill="rgb(247,64,41)"/><text x="272.00" y="382.50"></text></g><g><title>0x7fc37b803e9e (libm-2.29.so) (2 samples, 0.37%)</title><rect x="275" y="372" width="5" height="15" fill="rgb(226,16,33)"/><text x="278.00" y="382.50"></text></g><g><title>0x7fc37b803ea2 (libm-2.29.so) (4 samples, 0.74%)</title><rect x="280" y="372" width="9" height="15" fill="rgb(235,147,17)"/><text x="283.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (97 samples, 18.06%)</title><rect x="80" y="340" width="213" height="15" fill="rgb(215,108,2)"/><text x="83.00" y="350.50">onnxruntime::ml::LinearClass..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (62 samples, 11.55%)</title><rect x="157" y="356" width="136" height="15" fill="rgb(226,124,52)"/><text x="160.00" y="366.50">onnxruntime::ml::..</text></g><g><title>0x7fc37b803ea6 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="289" y="372" width="4" height="15" fill="rgb(215,27,13)"/><text x="292.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 22.16%)</title><rect x="73" y="276" width="262" height="15" fill="rgb(213,87,44)"/><text x="76.00" y="286.50">onnxruntime::InferenceSession::Run ..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (118 samples, 21.97%)</title><rect x="75" y="292" width="260" height="15" fill="rgb(237,21,10)"/><text x="78.00" y="302.50">onnxruntime::utils::ExecuteGraph (..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (118 samples, 21.97%)</title><rect x="75" y="308" width="260" height="15" fill="rgb(225,129,19)"/><text x="78.00" y="318.50">onnxruntime::utils::ExecuteGraphIm..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (118 samples, 21.97%)</title><rect x="75" y="324" width="260" height="15" fill="rgb(237,106,25)"/><text x="78.00" y="334.50">onnxruntime::SequentialExecutor::E..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.54%)</title><rect x="293" y="340" width="42" height="15" fill="rgb(251,23,28)"/><text x="296.00" y="350.50">onn..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.54%)</title><rect x="293" y="356" width="42" height="15" fill="rgb(219,43,12)"/><text x="296.00" y="366.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (120 samples, 22.35%)</title><rect x="73" y="260" width="264" height="15" fill="rgb(211,101,46)"/><text x="76.00" y="270.50">onnxruntime::InferenceSession::Run ..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="335" y="276" width="2" height="15" fill="rgb(244,25,14)"/><text x="338.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="339" y="276" width="2" height="15" fill="rgb(248,161,28)"/><text x="342.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="337" y="260" width="7" height="15" fill="rgb(226,164,11)"/><text x="340.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="341" y="276" width="3" height="15" fill="rgb(232,182,22)"/><text x="344.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (125 samples, 23.28%)</title><rect x="71" y="244" width="275" height="15" fill="rgb(230,197,16)"/><text x="74.00" y="254.50">onnxruntime::python::addObjectMethod..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="344" y="260" width="2" height="15" fill="rgb(253,51,25)"/><text x="347.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (139 samples, 25.88%)</title><rect x="42" y="132" width="306" height="15" fill="rgb(214,1,37)"/><text x="45.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (138 samples, 25.70%)</title><rect x="45" y="148" width="303" height="15" fill="rgb(218,178,10)"/><text x="48.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (137 samples, 25.51%)</title><rect x="47" y="164" width="301" height="15" fill="rgb(208,85,20)"/><text x="50.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (133 samples, 24.77%)</title><rect x="56" y="180" width="292" height="15" fill="rgb(205,29,32)"/><text x="59.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session..</text></g><g><title>run (onnxruntime/capi/session.py) (133 samples, 24.77%)</title><rect x="56" y="196" width="292" height="15" fill="rgb(227,109,20)"/><text x="59.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (127 samples, 23.65%)</title><rect x="69" y="212" width="279" height="15" fill="rgb(211,29,7)"/><text x="72.00" y="222.50">pybind11::cpp_function::dispatcher (o..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (127 samples, 23.65%)</title><rect x="69" y="228" width="279" height="15" fill="rgb(228,101,46)"/><text x="72.00" y="238.50">void pybind11::cpp_function::initiali..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="346" y="244" width="2" height="15" fill="rgb(233,225,40)"/><text x="349.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="346" y="260" width="2" height="15" fill="rgb(246,27,37)"/><text x="349.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="346" y="276" width="2" height="15" fill="rgb(218,214,40)"/><text x="349.00" y="286.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py) (143 samples, 26.63%)</title><rect x="36" y="68" width="314" height="15" fill="rgb(235,139,20)"/><text x="39.00" y="78.50">profile_ort (bench_LogisticRegression_libl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py) (143 samples, 26.63%)</title><rect x="36" y="84" width="314" height="15" fill="rgb(206,22,10)"/><text x="39.00" y="94.50">setup_profile (bench_LogisticRegression_li..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py) (143 samples, 26.63%)</title><rect x="36" y="100" width="314" height="15" fill="rgb(233,187,35)"/><text x="39.00" y="110.50">profile (bench_LogisticRegression_liblinea..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (141 samples, 26.26%)</title><rect x="40" y="116" width="310" height="15" fill="rgb(237,229,14)"/><text x="43.00" y="126.50">time_predict (mlprodict/asv_benchmark/com..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="348" y="132" width="2" height="15" fill="rgb(221,42,26)"/><text x="351.00" y="142.50"></text></g><g><title>0x7fc37b76213a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="348" y="148" width="2" height="15" fill="rgb(244,101,53)"/><text x="351.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.56%)</title><rect x="365" y="180" width="7" height="15" fill="rgb(209,209,29)"/><text x="368.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.19%)</title><rect x="390" y="196" width="2" height="15" fill="rgb(241,25,38)"/><text x="393.00" y="206.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (9 samples, 1.68%)</title><rect x="407" y="244" width="20" height="15" fill="rgb(244,99,30)"/><text x="410.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.12%)</title><rect x="414" y="260" width="13" height="15" fill="rgb(219,61,54)"/><text x="417.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (6 samples, 1.12%)</title><rect x="414" y="276" width="13" height="15" fill="rgb(252,206,39)"/><text x="417.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 0.74%)</title><rect x="418" y="292" width="9" height="15" fill="rgb(241,111,0)"/><text x="421.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (3 samples, 0.56%)</title><rect x="420" y="308" width="7" height="15" fill="rgb(242,51,50)"/><text x="423.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (3 samples, 0.56%)</title><rect x="420" y="324" width="7" height="15" fill="rgb(244,0,39)"/><text x="423.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="425" y="340" width="2" height="15" fill="rgb(207,186,27)"/><text x="428.00" y="350.50"></text></g><g><title>0x7fc37b6a5103 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="434" y="340" width="2" height="15" fill="rgb(232,170,20)"/><text x="437.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.93%)</title><rect x="434" y="276" width="11" height="15" fill="rgb(233,27,6)"/><text x="437.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (5 samples, 0.93%)</title><rect x="434" y="292" width="11" height="15" fill="rgb(206,112,39)"/><text x="437.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (5 samples, 0.93%)</title><rect x="434" y="308" width="11" height="15" fill="rgb(227,21,0)"/><text x="437.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (5 samples, 0.93%)</title><rect x="434" y="324" width="11" height="15" fill="rgb(217,136,17)"/><text x="437.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (4 samples, 0.74%)</title><rect x="436" y="340" width="9" height="15" fill="rgb(236,224,2)"/><text x="439.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.74%)</title><rect x="436" y="356" width="9" height="15" fill="rgb(243,149,42)"/><text x="439.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.56%)</title><rect x="438" y="372" width="7" height="15" fill="rgb(245,107,15)"/><text x="441.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.37%)</title><rect x="440" y="388" width="5" height="15" fill="rgb(243,165,19)"/><text x="443.00" y="398.50"></text></g><g><title>dot (numpy/core/multiarray.py) (1 samples, 0.19%)</title><rect x="445" y="276" width="2" height="15" fill="rgb(252,86,45)"/><text x="448.00" y="286.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="447" y="276" width="2" height="15" fill="rgb(222,0,54)"/><text x="450.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (22 samples, 4.10%)</title><rect x="427" y="244" width="48" height="15" fill="rgb(237,105,5)"/><text x="430.00" y="254.50">nump..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (19 samples, 3.54%)</title><rect x="434" y="260" width="41" height="15" fill="rgb(248,222,29)"/><text x="437.00" y="270.50">dot..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.23%)</title><rect x="449" y="276" width="26" height="15" fill="rgb(249,33,15)"/><text x="452.00" y="286.50">s..</text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="475" y="260" width="3" height="15" fill="rgb(233,97,19)"/><text x="478.00" y="270.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="478" y="276" width="2" height="15" fill="rgb(231,77,33)"/><text x="481.00" y="286.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.19%)</title><rect x="480" y="276" width="2" height="15" fill="rgb(212,195,6)"/><text x="483.00" y="286.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (2 samples, 0.37%)</title><rect x="482" y="324" width="4" height="15" fill="rgb(241,125,4)"/><text x="485.00" y="334.50"></text></g><g><title>qsort (libc-2.29.so) (2 samples, 0.37%)</title><rect x="482" y="340" width="4" height="15" fill="rgb(228,130,15)"/><text x="485.00" y="350.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.56%)</title><rect x="482" y="292" width="7" height="15" fill="rgb(241,48,50)"/><text x="485.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.56%)</title><rect x="482" y="308" width="7" height="15" fill="rgb(225,192,22)"/><text x="485.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.19%)</title><rect x="486" y="324" width="3" height="15" fill="rgb(219,174,5)"/><text x="489.00" y="334.50"></text></g><g><title>0x7fc37b684902 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="486" y="340" width="3" height="15" fill="rgb(250,0,17)"/><text x="489.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.37%)</title><rect x="489" y="308" width="4" height="15" fill="rgb(251,213,19)"/><text x="492.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.37%)</title><rect x="489" y="324" width="4" height="15" fill="rgb(223,40,46)"/><text x="492.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="493" y="324" width="2" height="15" fill="rgb(208,3,41)"/><text x="496.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="493" y="340" width="2" height="15" fill="rgb(243,140,40)"/><text x="496.00" y="350.50"></text></g><g><title>0x7fc37b6a4d50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="500" y="356" width="2" height="15" fill="rgb(206,0,1)"/><text x="503.00" y="366.50"></text></g><g><title>0x7fc37b6a4d97 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="502" y="356" width="2" height="15" fill="rgb(250,26,2)"/><text x="505.00" y="366.50"></text></g><g><title>0x7fc37b6a4dbb (libc-2.29.so) (1 samples, 0.19%)</title><rect x="504" y="356" width="2" height="15" fill="rgb(236,226,19)"/><text x="507.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 1.68%)</title><rect x="489" y="292" width="19" height="15" fill="rgb(229,209,31)"/><text x="492.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 1.30%)</title><rect x="493" y="308" width="15" height="15" fill="rgb(206,33,3)"/><text x="496.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 1.12%)</title><rect x="495" y="324" width="13" height="15" fill="rgb(215,147,18)"/><text x="498.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (6 samples, 1.12%)</title><rect x="495" y="340" width="13" height="15" fill="rgb(232,138,17)"/><text x="498.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.19%)</title><rect x="506" y="356" width="2" height="15" fill="rgb(206,25,35)"/><text x="509.00" y="366.50"></text></g><g><title>0x7fc36696c33a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="508" y="308" width="3" height="15" fill="rgb(213,61,37)"/><text x="511.00" y="318.50"></text></g><g><title>0x7fc36698e204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="511" y="324" width="2" height="15" fill="rgb(239,182,37)"/><text x="514.00" y="334.50"></text></g><g><title>0x7fc36694c890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="517" y="340" width="2" height="15" fill="rgb(208,172,54)"/><text x="520.00" y="350.50"></text></g><g><title>0x7fc37b7d01a0 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="532" y="356" width="5" height="15" fill="rgb(205,67,21)"/><text x="535.00" y="366.50"></text></g><g><title>0x7fc37b803e00 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="537" y="356" width="4" height="15" fill="rgb(247,112,39)"/><text x="540.00" y="366.50"></text></g><g><title>0x7fc37b803e17 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="541" y="356" width="2" height="15" fill="rgb(238,229,37)"/><text x="544.00" y="366.50"></text></g><g><title>0x7fc37b803e37 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="543" y="356" width="3" height="15" fill="rgb(214,153,16)"/><text x="546.00" y="366.50"></text></g><g><title>0x7fc37b803e4e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="546" y="356" width="2" height="15" fill="rgb(207,157,39)"/><text x="549.00" y="366.50"></text></g><g><title>0x7fc37b803e71 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="548" y="356" width="4" height="15" fill="rgb(245,167,43)"/><text x="551.00" y="366.50"></text></g><g><title>0x7fc37b803e7e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="552" y="356" width="2" height="15" fill="rgb(252,70,33)"/><text x="555.00" y="366.50"></text></g><g><title>0x7fc37b803e96 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="554" y="356" width="5" height="15" fill="rgb(223,136,29)"/><text x="557.00" y="366.50"></text></g><g><title>0x7fc37b803ea2 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="559" y="356" width="2" height="15" fill="rgb(246,95,27)"/><text x="562.00" y="366.50"></text></g><g><title>0x7fc36698e214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (23 samples, 4.28%)</title><rect x="513" y="324" width="50" height="15" fill="rgb(231,227,49)"/><text x="516.00" y="334.50">0x7fc..</text></g><g><title>expf (libm-2.29.so) (20 samples, 3.72%)</title><rect x="519" y="340" width="44" height="15" fill="rgb(244,152,17)"/><text x="522.00" y="350.50">expf..</text></g><g><title>0x7fc37b803ea6 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="561" y="356" width="2" height="15" fill="rgb(252,166,17)"/><text x="564.00" y="366.50"></text></g><g><title>0x7fc36696c33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (40 samples, 7.45%)</title><rect x="511" y="308" width="87" height="15" fill="rgb(247,140,1)"/><text x="514.00" y="318.50">0x7fc36696..</text></g><g><title>0x7fc36698e228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (16 samples, 2.98%)</title><rect x="563" y="324" width="35" height="15" fill="rgb(218,162,34)"/><text x="566.00" y="334.50">0x..</text></g><g><title>0x7fc36696c345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.74%)</title><rect x="598" y="308" width="9" height="15" fill="rgb(231,68,33)"/><text x="601.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="607" y="308" width="2" height="15" fill="rgb(229,222,11)"/><text x="610.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (59 samples, 10.99%)</title><rect x="482" y="276" width="130" height="15" fill="rgb(213,141,19)"/><text x="485.00" y="286.50">execute_legacy_u..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (47 samples, 8.75%)</title><rect x="508" y="292" width="104" height="15" fill="rgb(211,23,13)"/><text x="511.00" y="302.50">trivial_two_..</text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="609" y="308" width="3" height="15" fill="rgb(221,202,36)"/><text x="612.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (62 samples, 11.55%)</title><rect x="478" y="260" width="136" height="15" fill="rgb(227,1,46)"/><text x="481.00" y="270.50">PyUFunc_GenericFu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.19%)</title><rect x="612" y="276" width="2" height="15" fill="rgb(237,41,5)"/><text x="615.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (97 samples, 18.06%)</title><rect x="403" y="228" width="213" height="15" fill="rgb(237,178,13)"/><text x="406.00" y="238.50">_run (mlprodict/onnxrt/ops_c..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (64 samples, 11.92%)</title><rect x="475" y="244" width="141" height="15" fill="rgb(252,226,46)"/><text x="478.00" y="254.50">ufunc_generic_cal..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.19%)</title><rect x="614" y="260" width="2" height="15" fill="rgb(232,102,21)"/><text x="617.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.37%)</title><rect x="620" y="260" width="5" height="15" fill="rgb(251,199,43)"/><text x="623.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.37%)</title><rect x="620" y="276" width="5" height="15" fill="rgb(248,129,9)"/><text x="623.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.37%)</title><rect x="620" y="292" width="5" height="15" fill="rgb(205,228,17)"/><text x="623.00" y="302.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.19%)</title><rect x="625" y="260" width="2" height="15" fill="rgb(252,211,18)"/><text x="628.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.37%)</title><rect x="627" y="324" width="4" height="15" fill="rgb(238,140,38)"/><text x="630.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.37%)</title><rect x="627" y="340" width="4" height="15" fill="rgb(228,22,39)"/><text x="630.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.37%)</title><rect x="627" y="356" width="4" height="15" fill="rgb(250,166,44)"/><text x="630.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.37%)</title><rect x="627" y="372" width="4" height="15" fill="rgb(222,95,33)"/><text x="630.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.37%)</title><rect x="627" y="388" width="4" height="15" fill="rgb(250,199,18)"/><text x="630.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="634" y="436" width="2" height="15" fill="rgb(212,125,34)"/><text x="637.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="634" y="452" width="2" height="15" fill="rgb(219,169,39)"/><text x="637.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.19%)</title><rect x="634" y="468" width="2" height="15" fill="rgb(238,70,7)"/><text x="637.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="634" y="484" width="2" height="15" fill="rgb(222,202,42)"/><text x="637.00" y="494.50"></text></g><g><title>0x7fc37b6861a3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="634" y="500" width="2" height="15" fill="rgb(210,43,14)"/><text x="637.00" y="510.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.37%)</title><rect x="634" y="404" width="4" height="15" fill="rgb(245,134,44)"/><text x="637.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.37%)</title><rect x="634" y="420" width="4" height="15" fill="rgb(238,151,23)"/><text x="637.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.19%)</title><rect x="636" y="436" width="2" height="15" fill="rgb(216,119,34)"/><text x="639.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="636" y="452" width="2" height="15" fill="rgb(228,136,36)"/><text x="639.00" y="462.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (4 samples, 0.74%)</title><rect x="634" y="372" width="8" height="15" fill="rgb(229,40,7)"/><text x="637.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (4 samples, 0.74%)</title><rect x="634" y="388" width="8" height="15" fill="rgb(248,83,25)"/><text x="637.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.37%)</title><rect x="638" y="404" width="4" height="15" fill="rgb(224,97,28)"/><text x="641.00" y="414.50"></text></g><g><title>0x7fc37b63ca45 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="640" y="420" width="2" height="15" fill="rgb(253,37,32)"/><text x="643.00" y="430.50"></text></g><g><title>0x7fc37a8a6b20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="658" y="388" width="2" height="15" fill="rgb(240,40,43)"/><text x="661.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src) (6 samples, 1.12%)</title><rect x="660" y="388" width="13" height="15" fill="rgb(249,184,25)"/><text x="663.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (4 samples, 0.74%)</title><rect x="664" y="404" width="9" height="15" fill="rgb(251,74,10)"/><text x="667.00" y="414.50"></text></g><g><title>array_sum (methods.c) (26 samples, 4.84%)</title><rect x="627" y="260" width="57" height="15" fill="rgb(214,188,23)"/><text x="630.00" y="270.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (26 samples, 4.84%)</title><rect x="627" y="276" width="57" height="15" fill="rgb(205,140,18)"/><text x="630.00" y="286.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (26 samples, 4.84%)</title><rect x="627" y="292" width="57" height="15" fill="rgb(220,222,13)"/><text x="630.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c) (26 samples, 4.84%)</title><rect x="627" y="308" width="57" height="15" fill="rgb(207,69,8)"/><text x="630.00" y="318.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (24 samples, 4.47%)</title><rect x="631" y="324" width="53" height="15" fill="rgb(214,25,43)"/><text x="634.00" y="334.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (23 samples, 4.28%)</title><rect x="634" y="340" width="50" height="15" fill="rgb(241,192,9)"/><text x="637.00" y="350.50">PyUFu..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (23 samples, 4.28%)</title><rect x="634" y="356" width="50" height="15" fill="rgb(244,213,30)"/><text x="637.00" y="366.50">PyUFu..</text></g><g><title>reduce_loop (ufunc_object.c) (19 samples, 3.54%)</title><rect x="642" y="372" width="42" height="15" fill="rgb(214,96,11)"/><text x="645.00" y="382.50">red..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (5 samples, 0.93%)</title><rect x="673" y="388" width="11" height="15" fill="rgb(245,49,23)"/><text x="676.00" y="398.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.19%)</title><rect x="686" y="276" width="2" height="15" fill="rgb(238,196,35)"/><text x="689.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="688" y="276" width="3" height="15" fill="rgb(227,24,33)"/><text x="691.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="688" y="292" width="3" height="15" fill="rgb(211,83,25)"/><text x="691.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.19%)</title><rect x="688" y="308" width="3" height="15" fill="rgb(236,92,8)"/><text x="691.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="688" y="324" width="3" height="15" fill="rgb(221,97,12)"/><text x="691.00" y="334.50"></text></g><g><title>0x7fc37b762143 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="688" y="340" width="3" height="15" fill="rgb(220,210,22)"/><text x="691.00" y="350.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="693" y="292" width="2" height="15" fill="rgb(216,30,25)"/><text x="696.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="695" y="308" width="2" height="15" fill="rgb(210,214,23)"/><text x="698.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="695" y="324" width="2" height="15" fill="rgb(236,57,6)"/><text x="698.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="695" y="340" width="2" height="15" fill="rgb(238,209,48)"/><text x="698.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.19%)</title><rect x="695" y="356" width="2" height="15" fill="rgb(222,177,12)"/><text x="698.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.19%)</title><rect x="695" y="372" width="2" height="15" fill="rgb(238,229,40)"/><text x="698.00" y="382.50"></text></g><g><title>_mm_div_ps (xmmintrin.h) (1 samples, 0.19%)</title><rect x="699" y="372" width="3" height="15" fill="rgb(233,134,22)"/><text x="702.00" y="382.50"></text></g><g><title>FLOAT_divide (loops.c.src) (3 samples, 0.56%)</title><rect x="697" y="324" width="7" height="15" fill="rgb(236,92,37)"/><text x="700.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (3 samples, 0.56%)</title><rect x="697" y="340" width="7" height="15" fill="rgb(242,104,32)"/><text x="700.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (2 samples, 0.37%)</title><rect x="699" y="356" width="5" height="15" fill="rgb(219,89,11)"/><text x="702.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.19%)</title><rect x="702" y="372" width="2" height="15" fill="rgb(231,77,49)"/><text x="705.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.74%)</title><rect x="704" y="324" width="9" height="15" fill="rgb(221,75,13)"/><text x="707.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.37%)</title><rect x="708" y="340" width="5" height="15" fill="rgb(211,198,32)"/><text x="711.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.19%)</title><rect x="713" y="324" width="2" height="15" fill="rgb(213,70,2)"/><text x="716.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="713" y="340" width="2" height="15" fill="rgb(222,19,19)"/><text x="716.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (17 samples, 3.17%)</title><rect x="697" y="308" width="38" height="15" fill="rgb(247,119,20)"/><text x="700.00" y="318.50">ite..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (9 samples, 1.68%)</title><rect x="715" y="324" width="20" height="15" fill="rgb(211,106,1)"/><text x="718.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (9 samples, 1.68%)</title><rect x="715" y="340" width="20" height="15" fill="rgb(230,208,14)"/><text x="718.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (8 samples, 1.49%)</title><rect x="717" y="356" width="18" height="15" fill="rgb(243,6,37)"/><text x="720.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.56%)</title><rect x="728" y="372" width="7" height="15" fill="rgb(234,100,38)"/><text x="731.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (20 samples, 3.72%)</title><rect x="695" y="292" width="44" height="15" fill="rgb(239,201,33)"/><text x="698.00" y="302.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.37%)</title><rect x="735" y="308" width="4" height="15" fill="rgb(213,142,3)"/><text x="738.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src) (2 samples, 0.37%)</title><rect x="735" y="324" width="4" height="15" fill="rgb(246,87,0)"/><text x="738.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src) (2 samples, 0.37%)</title><rect x="735" y="340" width="4" height="15" fill="rgb(205,85,3)"/><text x="738.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src) (2 samples, 0.37%)</title><rect x="735" y="356" width="4" height="15" fill="rgb(247,199,1)"/><text x="738.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.37%)</title><rect x="735" y="372" width="4" height="15" fill="rgb(236,161,43)"/><text x="738.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.19%)</title><rect x="739" y="292" width="2" height="15" fill="rgb(236,24,37)"/><text x="742.00" y="302.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="741" y="292" width="2" height="15" fill="rgb(243,209,3)"/><text x="744.00" y="302.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.19%)</title><rect x="743" y="292" width="3" height="15" fill="rgb(229,100,19)"/><text x="746.00" y="302.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py) (181 samples, 33.71%)</title><rect x="350" y="100" width="398" height="15" fill="rgb(234,33,26)"/><text x="353.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solve..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (180 samples, 33.52%)</title><rect x="352" y="116" width="396" height="15" fill="rgb(229,190,9)"/><text x="355.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (180 samples, 33.52%)</title><rect x="352" y="132" width="396" height="15" fill="rgb(235,207,17)"/><text x="355.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (180 samples, 33.52%)</title><rect x="352" y="148" width="396" height="15" fill="rgb(243,40,13)"/><text x="355.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (177 samples, 32.96%)</title><rect x="359" y="164" width="389" height="15" fill="rgb(211,198,32)"/><text x="362.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (171 samples, 31.84%)</title><rect x="372" y="180" width="376" height="15" fill="rgb(243,36,53)"/><text x="375.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (162 samples, 30.17%)</title><rect x="392" y="196" width="356" height="15" fill="rgb(247,222,49)"/><text x="395.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (158 samples, 29.42%)</title><rect x="401" y="212" width="347" height="15" fill="rgb(226,169,0)"/><text x="404.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (60 samples, 11.17%)</title><rect x="616" y="228" width="132" height="15" fill="rgb(209,225,0)"/><text x="619.00" y="238.50">_run (mlprodict/..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (60 samples, 11.17%)</title><rect x="616" y="244" width="132" height="15" fill="rgb(218,74,52)"/><text x="619.00" y="254.50">norm_l1 (mlprodi..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (29 samples, 5.40%)</title><rect x="684" y="260" width="64" height="15" fill="rgb(224,16,2)"/><text x="687.00" y="270.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (26 samples, 4.84%)</title><rect x="691" y="276" width="57" height="15" fill="rgb(212,191,17)"/><text x="694.00" y="286.50">PyUFun..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="746" y="292" width="2" height="15" fill="rgb(213,175,44)"/><text x="749.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="746" y="308" width="2" height="15" fill="rgb(208,57,28)"/><text x="749.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.19%)</title><rect x="746" y="324" width="2" height="15" fill="rgb(251,38,37)"/><text x="749.00" y="334.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py) (182 samples, 33.89%)</title><rect x="350" y="68" width="400" height="15" fill="rgb(227,124,7)"/><text x="353.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py) (182 samples, 33.89%)</title><rect x="350" y="84" width="400" height="15" fill="rgb(234,151,43)"/><text x="353.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="748" y="100" width="2" height="15" fill="rgb(250,187,49)"/><text x="751.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="748" y="116" width="2" height="15" fill="rgb(235,37,10)"/><text x="751.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="748" y="132" width="2" height="15" fill="rgb(244,75,2)"/><text x="751.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.19%)</title><rect x="748" y="148" width="2" height="15" fill="rgb(218,112,50)"/><text x="751.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.19%)</title><rect x="748" y="164" width="2" height="15" fill="rgb(252,22,12)"/><text x="751.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.19%)</title><rect x="748" y="180" width="2" height="15" fill="rgb(214,47,29)"/><text x="751.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.19%)</title><rect x="748" y="196" width="2" height="15" fill="rgb(238,163,33)"/><text x="751.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="748" y="212" width="2" height="15" fill="rgb(219,87,25)"/><text x="751.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="748" y="228" width="2" height="15" fill="rgb(251,215,11)"/><text x="751.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="748" y="244" width="2" height="15" fill="rgb(227,114,4)"/><text x="751.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="748" y="260" width="2" height="15" fill="rgb(223,136,3)"/><text x="751.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="748" y="276" width="2" height="15" fill="rgb(219,163,4)"/><text x="751.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.19%)</title><rect x="748" y="292" width="2" height="15" fill="rgb(236,75,2)"/><text x="751.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="748" y="308" width="2" height="15" fill="rgb(206,80,6)"/><text x="751.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="748" y="324" width="2" height="15" fill="rgb(217,63,43)"/><text x="751.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="748" y="340" width="2" height="15" fill="rgb(236,191,14)"/><text x="751.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="748" y="356" width="2" height="15" fill="rgb(233,81,24)"/><text x="751.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="748" y="372" width="2" height="15" fill="rgb(224,50,3)"/><text x="751.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.19%)</title><rect x="748" y="388" width="2" height="15" fill="rgb(249,11,28)"/><text x="751.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="748" y="404" width="2" height="15" fill="rgb(229,133,38)"/><text x="751.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="748" y="420" width="2" height="15" fill="rgb(214,227,23)"/><text x="751.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="748" y="436" width="2" height="15" fill="rgb(247,224,0)"/><text x="751.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="748" y="452" width="2" height="15" fill="rgb(238,167,42)"/><text x="751.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="748" y="468" width="2" height="15" fill="rgb(215,68,54)"/><text x="751.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.19%)</title><rect x="748" y="484" width="2" height="15" fill="rgb(254,72,34)"/><text x="751.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.19%)</title><rect x="748" y="500" width="2" height="15" fill="rgb(214,89,23)"/><text x="751.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="748" y="516" width="2" height="15" fill="rgb(205,22,11)"/><text x="751.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="748" y="532" width="2" height="15" fill="rgb(210,25,4)"/><text x="751.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="748" y="548" width="2" height="15" fill="rgb(234,78,8)"/><text x="751.00" y="558.50"></text></g><g><title>_compile (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="748" y="564" width="2" height="15" fill="rgb(252,122,6)"/><text x="751.00" y="574.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="754" y="116" width="3" height="15" fill="rgb(232,113,0)"/><text x="757.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="754" y="132" width="3" height="15" fill="rgb(223,55,30)"/><text x="757.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="754" y="148" width="3" height="15" fill="rgb(206,115,45)"/><text x="757.00" y="158.50"></text></g><g><title>0x7fc37ab113de (?) (1 samples, 0.19%)</title><rect x="770" y="180" width="2" height="15" fill="rgb(247,92,3)"/><text x="773.00" y="190.50"></text></g><g><title>0x7fc37ab10562 (?) (1 samples, 0.19%)</title><rect x="770" y="196" width="2" height="15" fill="rgb(244,37,32)"/><text x="773.00" y="206.50"></text></g><g><title>0x7fc37ab0debd (?) (1 samples, 0.19%)</title><rect x="770" y="212" width="2" height="15" fill="rgb(222,146,52)"/><text x="773.00" y="222.50"></text></g><g><title>0x7fc37ab463bd (?) (1 samples, 0.19%)</title><rect x="770" y="228" width="2" height="15" fill="rgb(245,47,14)"/><text x="773.00" y="238.50"></text></g><g><title>0x7fc37ab45e96 (?) (1 samples, 0.19%)</title><rect x="770" y="244" width="2" height="15" fill="rgb(240,186,36)"/><text x="773.00" y="254.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="770" y="260" width="2" height="15" fill="rgb(241,180,15)"/><text x="773.00" y="270.50"></text></g><g><title>0x7fc37b63c7a5 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="770" y="276" width="2" height="15" fill="rgb(254,122,50)"/><text x="773.00" y="286.50"></text></g><g><title>0x7fc37b63c7c2 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="770" y="292" width="2" height="15" fill="rgb(219,97,0)"/><text x="773.00" y="302.50"></text></g><g><title>0x7fc37b63ca6f (libc-2.29.so) (1 samples, 0.19%)</title><rect x="770" y="308" width="2" height="15" fill="rgb(205,194,20)"/><text x="773.00" y="318.50"></text></g><g><title>0x7fc37b6a4d50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="770" y="324" width="2" height="15" fill="rgb(251,178,18)"/><text x="773.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.19%)</title><rect x="772" y="180" width="2" height="15" fill="rgb(223,91,6)"/><text x="775.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="776" y="244" width="3" height="15" fill="rgb(226,57,26)"/><text x="779.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="776" y="260" width="3" height="15" fill="rgb(222,203,53)"/><text x="779.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.19%)</title><rect x="776" y="276" width="3" height="15" fill="rgb(209,126,30)"/><text x="779.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.19%)</title><rect x="776" y="292" width="3" height="15" fill="rgb(212,132,33)"/><text x="779.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.19%)</title><rect x="776" y="308" width="3" height="15" fill="rgb(234,27,47)"/><text x="779.00" y="318.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.19%)</title><rect x="779" y="260" width="2" height="15" fill="rgb(216,38,12)"/><text x="782.00" y="270.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="787" y="308" width="3" height="15" fill="rgb(208,67,12)"/><text x="790.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="787" y="324" width="3" height="15" fill="rgb(217,3,5)"/><text x="790.00" y="334.50"></text></g><g><title>0x7fc37b685b12 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="787" y="340" width="3" height="15" fill="rgb(233,139,26)"/><text x="790.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.56%)</title><rect x="785" y="292" width="7" height="15" fill="rgb(211,217,47)"/><text x="788.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="790" y="308" width="2" height="15" fill="rgb(230,186,35)"/><text x="793.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.19%)</title><rect x="792" y="292" width="2" height="15" fill="rgb(233,108,45)"/><text x="795.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.19%)</title><rect x="792" y="308" width="2" height="15" fill="rgb(242,15,18)"/><text x="795.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.19%)</title><rect x="792" y="324" width="2" height="15" fill="rgb(244,38,43)"/><text x="795.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.19%)</title><rect x="792" y="340" width="2" height="15" fill="rgb(242,81,6)"/><text x="795.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (15 samples, 2.79%)</title><rect x="807" y="308" width="33" height="15" fill="rgb(221,67,36)"/><text x="810.00" y="318.50">DO..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (5 samples, 0.93%)</title><rect x="829" y="324" width="11" height="15" fill="rgb(231,216,38)"/><text x="832.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (32 samples, 5.96%)</title><rect x="781" y="276" width="70" height="15" fill="rgb(230,205,51)"/><text x="784.00" y="286.50">PyUFunc..</text></g><g><title>reduce_loop (ufunc_object.c) (26 samples, 4.84%)</title><rect x="794" y="292" width="57" height="15" fill="rgb(253,228,49)"/><text x="797.00" y="302.50">reduce..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (5 samples, 0.93%)</title><rect x="840" y="308" width="11" height="15" fill="rgb(237,92,12)"/><text x="843.00" y="318.50"></text></g><g><title>array_sum (methods.c) (36 samples, 6.70%)</title><rect x="774" y="180" width="79" height="15" fill="rgb(222,88,54)"/><text x="777.00" y="190.50">array_sum..</text></g><g><title>forward_ndarray_method (methods.c) (36 samples, 6.70%)</title><rect x="774" y="196" width="79" height="15" fill="rgb(248,5,14)"/><text x="777.00" y="206.50">forward_n..</text></g><g><title>_sum (numpy/core/_methods.py) (35 samples, 6.52%)</title><rect x="776" y="212" width="77" height="15" fill="rgb(225,68,27)"/><text x="779.00" y="222.50">_sum (nu..</text></g><g><title>ufunc_reduce (ufunc_object.c) (35 samples, 6.52%)</title><rect x="776" y="228" width="77" height="15" fill="rgb(211,195,54)"/><text x="779.00" y="238.50">ufunc_re..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (34 samples, 6.33%)</title><rect x="779" y="244" width="74" height="15" fill="rgb(220,201,46)"/><text x="782.00" y="254.50">PyUFunc_..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (33 samples, 6.15%)</title><rect x="781" y="260" width="72" height="15" fill="rgb(243,107,23)"/><text x="784.00" y="270.50">PyUFunc_..</text></g><g><title>_get_identity (ufunc_object.c) (1 samples, 0.19%)</title><rect x="851" y="276" width="2" height="15" fill="rgb(214,194,37)"/><text x="854.00" y="286.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.19%)</title><rect x="860" y="196" width="2" height="15" fill="rgb(207,41,15)"/><text x="863.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.19%)</title><rect x="860" y="212" width="2" height="15" fill="rgb(236,9,37)"/><text x="863.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="860" y="228" width="2" height="15" fill="rgb(245,188,17)"/><text x="863.00" y="238.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.19%)</title><rect x="860" y="244" width="2" height="15" fill="rgb(249,86,47)"/><text x="863.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="862" y="228" width="2" height="15" fill="rgb(241,108,15)"/><text x="865.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="862" y="244" width="2" height="15" fill="rgb(246,108,42)"/><text x="865.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (3 samples, 0.56%)</title><rect x="866" y="276" width="7" height="15" fill="rgb(246,93,4)"/><text x="869.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (3 samples, 0.56%)</title><rect x="866" y="292" width="7" height="15" fill="rgb(228,131,14)"/><text x="869.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (3 samples, 0.56%)</title><rect x="866" y="308" width="7" height="15" fill="rgb(246,80,28)"/><text x="869.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.37%)</title><rect x="869" y="324" width="4" height="15" fill="rgb(240,201,38)"/><text x="872.00" y="334.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.19%)</title><rect x="873" y="292" width="2" height="15" fill="rgb(254,72,45)"/><text x="876.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.37%)</title><rect x="873" y="276" width="4" height="15" fill="rgb(212,66,5)"/><text x="876.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.19%)</title><rect x="875" y="292" width="2" height="15" fill="rgb(221,164,4)"/><text x="878.00" y="302.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.19%)</title><rect x="875" y="308" width="2" height="15" fill="rgb(248,67,19)"/><text x="878.00" y="318.50"></text></g><g><title>array_add (number.c) (11 samples, 2.05%)</title><rect x="862" y="196" width="24" height="15" fill="rgb(226,136,19)"/><text x="865.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 2.05%)</title><rect x="862" y="212" width="24" height="15" fill="rgb(220,155,42)"/><text x="865.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 1.86%)</title><rect x="864" y="228" width="22" height="15" fill="rgb(213,146,6)"/><text x="867.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 1.86%)</title><rect x="864" y="244" width="22" height="15" fill="rgb(254,61,39)"/><text x="867.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (10 samples, 1.86%)</title><rect x="864" y="260" width="22" height="15" fill="rgb(245,57,6)"/><text x="867.00" y="270.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.74%)</title><rect x="877" y="276" width="9" height="15" fill="rgb(250,117,31)"/><text x="880.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.74%)</title><rect x="877" y="292" width="9" height="15" fill="rgb(241,49,42)"/><text x="880.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.74%)</title><rect x="877" y="308" width="9" height="15" fill="rgb(223,145,54)"/><text x="880.00" y="318.50"></text></g><g><title>0x7fc37b6a4d6a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="884" y="324" width="2" height="15" fill="rgb(224,40,27)"/><text x="887.00" y="334.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.37%)</title><rect x="915" y="212" width="4" height="15" fill="rgb(254,123,7)"/><text x="918.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (4 samples, 0.74%)</title><rect x="919" y="212" width="9" height="15" fill="rgb(253,124,27)"/><text x="922.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.37%)</title><rect x="924" y="228" width="4" height="15" fill="rgb(244,80,5)"/><text x="927.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (8 samples, 1.49%)</title><rect x="928" y="212" width="18" height="15" fill="rgb(238,189,30)"/><text x="931.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.56%)</title><rect x="939" y="228" width="7" height="15" fill="rgb(209,23,4)"/><text x="942.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.37%)</title><rect x="941" y="244" width="5" height="15" fill="rgb(209,69,3)"/><text x="944.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.37%)</title><rect x="946" y="212" width="4" height="15" fill="rgb(220,107,25)"/><text x="949.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.37%)</title><rect x="946" y="228" width="4" height="15" fill="rgb(242,121,6)"/><text x="949.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (36 samples, 6.70%)</title><rect x="886" y="196" width="79" height="15" fill="rgb(242,96,13)"/><text x="889.00" y="206.50">check_arr..</text></g><g><title>simplefilter (warnings.py) (7 samples, 1.30%)</title><rect x="950" y="212" width="15" height="15" fill="rgb(230,51,54)"/><text x="953.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (5 samples, 0.93%)</title><rect x="954" y="228" width="11" height="15" fill="rgb(230,127,10)"/><text x="957.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.37%)</title><rect x="981" y="228" width="4" height="15" fill="rgb(253,129,39)"/><text x="984.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (11 samples, 2.05%)</title><rect x="965" y="196" width="25" height="15" fill="rgb(237,40,21)"/><text x="968.00" y="206.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (11 samples, 2.05%)</title><rect x="965" y="212" width="25" height="15" fill="rgb(215,93,20)"/><text x="968.00" y="222.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.37%)</title><rect x="985" y="228" width="5" height="15" fill="rgb(237,153,24)"/><text x="988.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="994" y="212" width="2" height="15" fill="rgb(233,6,17)"/><text x="997.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.49%)</title><rect x="996" y="212" width="18" height="15" fill="rgb(226,190,24)"/><text x="999.00" y="222.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.19%)</title><rect x="1018" y="276" width="2" height="15" fill="rgb(208,132,13)"/><text x="1021.00" y="286.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (3 samples, 0.56%)</title><rect x="1018" y="260" width="7" height="15" fill="rgb(215,39,39)"/><text x="1021.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.37%)</title><rect x="1020" y="276" width="5" height="15" fill="rgb(240,168,9)"/><text x="1023.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.37%)</title><rect x="1020" y="292" width="5" height="15" fill="rgb(252,228,51)"/><text x="1023.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.37%)</title><rect x="1020" y="308" width="5" height="15" fill="rgb(216,147,54)"/><text x="1023.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.19%)</title><rect x="1027" y="324" width="2" height="15" fill="rgb(210,115,30)"/><text x="1030.00" y="334.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.19%)</title><rect x="1029" y="324" width="2" height="15" fill="rgb(228,30,31)"/><text x="1032.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 0.74%)</title><rect x="1025" y="292" width="8" height="15" fill="rgb(216,206,27)"/><text x="1028.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (4 samples, 0.74%)</title><rect x="1025" y="308" width="8" height="15" fill="rgb(253,150,27)"/><text x="1028.00" y="318.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.19%)</title><rect x="1031" y="324" width="2" height="15" fill="rgb(236,211,0)"/><text x="1034.00" y="334.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.19%)</title><rect x="1031" y="340" width="2" height="15" fill="rgb(243,58,26)"/><text x="1034.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 0.93%)</title><rect x="1025" y="276" width="11" height="15" fill="rgb(217,130,9)"/><text x="1028.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1033" y="292" width="3" height="15" fill="rgb(217,184,1)"/><text x="1036.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="1033" y="308" width="3" height="15" fill="rgb(245,202,3)"/><text x="1036.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="1033" y="324" width="3" height="15" fill="rgb(208,101,33)"/><text x="1036.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="1033" y="340" width="3" height="15" fill="rgb(233,118,43)"/><text x="1036.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="1033" y="356" width="3" height="15" fill="rgb(213,90,28)"/><text x="1036.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 1.12%)</title><rect x="1025" y="260" width="13" height="15" fill="rgb(208,98,21)"/><text x="1028.00" y="270.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1036" y="276" width="2" height="15" fill="rgb(239,107,3)"/><text x="1039.00" y="286.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (85 samples, 15.83%)</title><rect x="853" y="180" width="187" height="15" fill="rgb(231,221,30)"/><text x="856.00" y="190.50">decision_function (sklea..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (23 samples, 4.28%)</title><rect x="990" y="196" width="50" height="15" fill="rgb(232,187,21)"/><text x="993.00" y="206.50">safe_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 2.23%)</title><rect x="1014" y="212" width="26" height="15" fill="rgb(232,186,15)"/><text x="1017.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 2.23%)</title><rect x="1014" y="228" width="26" height="15" fill="rgb(236,96,18)"/><text x="1017.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (12 samples, 2.23%)</title><rect x="1014" y="244" width="26" height="15" fill="rgb(224,200,0)"/><text x="1017.00" y="254.50">P..</text></g><g><title>_get_coredim_sizes (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1038" y="260" width="2" height="15" fill="rgb(205,165,47)"/><text x="1041.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.19%)</title><rect x="1042" y="212" width="2" height="15" fill="rgb(206,32,0)"/><text x="1045.00" y="222.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.19%)</title><rect x="1042" y="228" width="2" height="15" fill="rgb(228,16,53)"/><text x="1045.00" y="238.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1044" y="212" width="3" height="15" fill="rgb(231,152,36)"/><text x="1047.00" y="222.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (7 samples, 1.30%)</title><rect x="1047" y="244" width="15" height="15" fill="rgb(241,61,53)"/><text x="1050.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (7 samples, 1.30%)</title><rect x="1047" y="260" width="15" height="15" fill="rgb(229,143,11)"/><text x="1050.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (7 samples, 1.30%)</title><rect x="1047" y="276" width="15" height="15" fill="rgb(224,155,23)"/><text x="1050.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (7 samples, 1.30%)</title><rect x="1047" y="292" width="15" height="15" fill="rgb(220,60,53)"/><text x="1050.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1062" y="244" width="2" height="15" fill="rgb(237,16,14)"/><text x="1065.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1062" y="260" width="2" height="15" fill="rgb(234,219,29)"/><text x="1065.00" y="270.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.19%)</title><rect x="1062" y="276" width="2" height="15" fill="rgb(237,172,47)"/><text x="1065.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (16 samples, 2.98%)</title><rect x="1047" y="228" width="35" height="15" fill="rgb(219,222,22)"/><text x="1050.00" y="238.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (8 samples, 1.49%)</title><rect x="1064" y="244" width="18" height="15" fill="rgb(253,160,23)"/><text x="1067.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (8 samples, 1.49%)</title><rect x="1064" y="260" width="18" height="15" fill="rgb(237,84,18)"/><text x="1067.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 1.30%)</title><rect x="1066" y="276" width="16" height="15" fill="rgb(251,98,50)"/><text x="1069.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.56%)</title><rect x="1075" y="292" width="7" height="15" fill="rgb(215,133,25)"/><text x="1078.00" y="302.50"></text></g><g><title>0x7fc36696d9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.37%)</title><rect x="1082" y="244" width="4" height="15" fill="rgb(236,95,7)"/><text x="1085.00" y="254.50"></text></g><g><title>0x7fc36694bfe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.37%)</title><rect x="1088" y="276" width="5" height="15" fill="rgb(209,208,34)"/><text x="1091.00" y="286.50"></text></g><g><title>0x7fc366a979f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1093" y="276" width="2" height="15" fill="rgb(224,10,1)"/><text x="1096.00" y="286.50"></text></g><g><title>0x7fc37b7d01b0 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="1106" y="292" width="4" height="15" fill="rgb(235,98,38)"/><text x="1109.00" y="302.50"></text></g><g><title>0x7fc37b856ba0 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="1110" y="292" width="5" height="15" fill="rgb(217,114,39)"/><text x="1113.00" y="302.50"></text></g><g><title>0x7fc37b856bb4 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="1115" y="292" width="4" height="15" fill="rgb(251,158,5)"/><text x="1118.00" y="302.50"></text></g><g><title>0x7fc37b856be7 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="1119" y="292" width="5" height="15" fill="rgb(215,162,14)"/><text x="1122.00" y="302.50"></text></g><g><title>0x7fc37b856c0c (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1124" y="292" width="2" height="15" fill="rgb(248,44,37)"/><text x="1127.00" y="302.50"></text></g><g><title>0x7fc37b856c18 (libm-2.29.so) (3 samples, 0.56%)</title><rect x="1126" y="292" width="6" height="15" fill="rgb(224,78,12)"/><text x="1129.00" y="302.50"></text></g><g><title>0x7fc37b856c2e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1132" y="292" width="3" height="15" fill="rgb(237,181,15)"/><text x="1135.00" y="302.50"></text></g><g><title>0x7fc37b856c3e (libm-2.29.so) (2 samples, 0.37%)</title><rect x="1135" y="292" width="4" height="15" fill="rgb(223,14,5)"/><text x="1138.00" y="302.50"></text></g><g><title>0x7fc37b856c6a (libm-2.29.so) (2 samples, 0.37%)</title><rect x="1139" y="292" width="4" height="15" fill="rgb(209,81,45)"/><text x="1142.00" y="302.50"></text></g><g><title>0x7fc36698e265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (28 samples, 5.21%)</title><rect x="1086" y="260" width="62" height="15" fill="rgb(253,213,30)"/><text x="1089.00" y="270.50">0x7fc3..</text></g><g><title>exp (libm-2.29.so) (24 samples, 4.47%)</title><rect x="1095" y="276" width="53" height="15" fill="rgb(237,53,23)"/><text x="1098.00" y="286.50">exp (..</text></g><g><title>0x7fc37b856c7b (libm-2.29.so) (2 samples, 0.37%)</title><rect x="1143" y="292" width="5" height="15" fill="rgb(240,42,15)"/><text x="1146.00" y="302.50"></text></g><g><title>0x7fc36698e275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1148" y="260" width="2" height="15" fill="rgb(218,138,32)"/><text x="1151.00" y="270.50"></text></g><g><title>0x7fc36696d9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (41 samples, 7.64%)</title><rect x="1086" y="244" width="90" height="15" fill="rgb(205,144,20)"/><text x="1089.00" y="254.50">0x7fc36696..</text></g><g><title>0x7fc36698e279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (12 samples, 2.23%)</title><rect x="1150" y="260" width="26" height="15" fill="rgb(209,137,34)"/><text x="1153.00" y="270.50">0..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (189 samples, 35.20%)</title><rect x="763" y="164" width="416" height="15" fill="rgb(254,213,12)"/><text x="766.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (63 samples, 11.73%)</title><rect x="1040" y="180" width="139" height="15" fill="rgb(243,53,54)"/><text x="1043.00" y="190.50">ufunc_generic_cal..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (62 samples, 11.55%)</title><rect x="1042" y="196" width="137" height="15" fill="rgb(234,114,4)"/><text x="1045.00" y="206.50">PyUFunc_GenericFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (60 samples, 11.17%)</title><rect x="1047" y="212" width="132" height="15" fill="rgb(236,147,22)"/><text x="1050.00" y="222.50">execute_legacy_u..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (44 samples, 8.19%)</title><rect x="1082" y="228" width="97" height="15" fill="rgb(220,41,11)"/><text x="1085.00" y="238.50">trivial_two..</text></g><g><title>0x7fc36696d9e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1176" y="244" width="3" height="15" fill="rgb(231,113,7)"/><text x="1179.00" y="254.50"></text></g><g><title>all (537 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(209,173,2)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py) (537 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(205,60,42)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py) (200 samples, 37.24%)</title><rect x="750" y="68" width="440" height="15" fill="rgb(234,112,16)"/><text x="753.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py) (200 samples, 37.24%)</title><rect x="750" y="84" width="440" height="15" fill="rgb(209,151,7)"/><text x="753.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solve..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py) (200 samples, 37.24%)</title><rect x="750" y="100" width="440" height="15" fill="rgb(224,78,30)"/><text x="753.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverlibli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (197 samples, 36.69%)</title><rect x="757" y="116" width="433" height="15" fill="rgb(250,81,43)"/><text x="760.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (196 samples, 36.50%)</title><rect x="759" y="132" width="431" height="15" fill="rgb(251,68,22)"/><text x="762.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (196 samples, 36.50%)</title><rect x="759" y="148" width="431" height="15" fill="rgb(225,178,53)"/><text x="762.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (5 samples, 0.93%)</title><rect x="1179" y="164" width="11" height="15" fill="rgb(231,147,54)"/><text x="1182.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.56%)</title><rect x="1183" y="180" width="7" height="15" fill="rgb(250,53,16)"/><text x="1186.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.19%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(223,99,34)"/><text x="1190.00" y="206.50"></text></g></g></svg>