<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1718" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1701.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1701.00"> </text><g id="frames"><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:505) (1 samples, 0.20%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(230,15,18)"/><text x="13.00" y="174.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:149) (1 samples, 0.20%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(251,175,45)"/><text x="13.00" y="190.50"></text></g><g><title>clone (sklearn/base.py:73) (1 samples, 0.20%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(213,63,0)"/><text x="13.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.20%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(218,38,5)"/><text x="13.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.20%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(206,89,36)"/><text x="13.00" y="238.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.20%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(252,204,14)"/><text x="13.00" y="254.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.20%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(244,190,54)"/><text x="13.00" y="270.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.20%)</title><rect x="10" y="276" width="2" height="15" fill="rgb(220,67,13)"/><text x="13.00" y="286.50"></text></g><g><title>_signature_from_function (inspect.py:2151) (1 samples, 0.20%)</title><rect x="10" y="292" width="2" height="15" fill="rgb(230,191,46)"/><text x="13.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:31) (2 samples, 0.40%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(250,101,25)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:11) (2 samples, 0.40%)</title><rect x="10" y="68" width="4" height="15" fill="rgb(211,23,2)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:39) (2 samples, 0.40%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(238,118,40)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.40%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(245,0,12)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (2 samples, 0.40%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(220,155,17)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (2 samples, 0.40%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(208,192,30)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (2 samples, 0.40%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(209,224,42)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (1 samples, 0.20%)</title><rect x="12" y="164" width="2" height="15" fill="rgb(230,101,50)"/><text x="15.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (1 samples, 0.20%)</title><rect x="12" y="180" width="2" height="15" fill="rgb(238,76,13)"/><text x="15.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (1 samples, 0.20%)</title><rect x="12" y="196" width="2" height="15" fill="rgb(227,142,0)"/><text x="15.00" y="206.50"></text></g><g><title>0x7ffabe557b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="12" y="212" width="2" height="15" fill="rgb(247,110,50)"/><text x="15.00" y="222.50"></text></g><g><title>0x7ffabe58910a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="12" y="228" width="2" height="15" fill="rgb(208,45,30)"/><text x="15.00" y="238.50"></text></g><g><title>0x7ffabe7b4e7b (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="12" y="244" width="2" height="15" fill="rgb(229,53,1)"/><text x="15.00" y="254.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:77) (1 samples, 0.20%)</title><rect x="14" y="212" width="3" height="15" fill="rgb(245,12,27)"/><text x="17.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:404) (1 samples, 0.20%)</title><rect x="14" y="228" width="3" height="15" fill="rgb(225,34,33)"/><text x="17.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/_container.py:404) (1 samples, 0.20%)</title><rect x="14" y="244" width="3" height="15" fill="rgb(210,66,17)"/><text x="17.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::GetAttr (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="14" y="260" width="3" height="15" fill="rgb(239,34,0)"/><text x="17.00" y="270.50"></text></g><g><title>google::protobuf::python::cmessage::GetFieldValue (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="14" y="276" width="3" height="15" fill="rgb(226,100,49)"/><text x="17.00" y="286.50"></text></g><g><title>google::protobuf::python::cmessage::InternalGetScalar (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="14" y="292" width="3" height="15" fill="rgb(244,26,18)"/><text x="17.00" y="302.50"></text></g><g><title>google::protobuf::python::ToStringObject (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="14" y="308" width="3" height="15" fill="rgb(241,171,49)"/><text x="17.00" y="318.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:28) (2 samples, 0.40%)</title><rect x="14" y="84" width="5" height="15" fill="rgb(206,65,25)"/><text x="17.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.40%)</title><rect x="14" y="100" width="5" height="15" fill="rgb(253,97,17)"/><text x="17.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.40%)</title><rect x="14" y="116" width="5" height="15" fill="rgb(250,186,46)"/><text x="17.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.40%)</title><rect x="14" y="132" width="5" height="15" fill="rgb(248,165,6)"/><text x="17.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.40%)</title><rect x="14" y="148" width="5" height="15" fill="rgb(231,128,5)"/><text x="17.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.40%)</title><rect x="14" y="164" width="5" height="15" fill="rgb(236,204,7)"/><text x="17.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.40%)</title><rect x="14" y="180" width="5" height="15" fill="rgb(238,200,52)"/><text x="17.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (2 samples, 0.40%)</title><rect x="14" y="196" width="5" height="15" fill="rgb(218,211,11)"/><text x="17.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:83) (1 samples, 0.20%)</title><rect x="17" y="212" width="2" height="15" fill="rgb(248,203,31)"/><text x="20.00" y="222.50"></text></g><g><title>apply_reshape (onnxconverter_common/onnx_ops.py:569) (1 samples, 0.20%)</title><rect x="17" y="228" width="2" height="15" fill="rgb(240,177,7)"/><text x="20.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.20%)</title><rect x="17" y="244" width="2" height="15" fill="rgb(207,17,35)"/><text x="20.00" y="254.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py:364) (1 samples, 0.20%)</title><rect x="17" y="260" width="2" height="15" fill="rgb(210,151,47)"/><text x="20.00" y="270.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.20%)</title><rect x="17" y="276" width="2" height="15" fill="rgb(211,83,13)"/><text x="20.00" y="286.50"></text></g><g><title>extract (traceback.py:359) (1 samples, 0.20%)</title><rect x="17" y="292" width="2" height="15" fill="rgb(246,222,4)"/><text x="20.00" y="302.50"></text></g><g><title>checkcache (linecache.py:65) (1 samples, 0.20%)</title><rect x="17" y="308" width="2" height="15" fill="rgb(226,228,4)"/><text x="20.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.20%)</title><rect x="19" y="228" width="2" height="15" fill="rgb(242,105,18)"/><text x="22.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.20%)</title><rect x="24" y="244" width="2" height="15" fill="rgb(247,21,20)"/><text x="27.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (4 samples, 0.80%)</title><rect x="19" y="212" width="9" height="15" fill="rgb(222,200,11)"/><text x="22.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.60%)</title><rect x="21" y="228" width="7" height="15" fill="rgb(207,89,11)"/><text x="24.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.20%)</title><rect x="26" y="244" width="2" height="15" fill="rgb(246,166,12)"/><text x="29.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:184) (1 samples, 0.20%)</title><rect x="28" y="276" width="3" height="15" fill="rgb(254,19,18)"/><text x="31.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 0.60%)</title><rect x="28" y="244" width="7" height="15" fill="rgb(208,152,4)"/><text x="31.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.60%)</title><rect x="28" y="260" width="7" height="15" fill="rgb(238,166,12)"/><text x="31.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.40%)</title><rect x="31" y="276" width="4" height="15" fill="rgb(224,197,15)"/><text x="34.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.20%)</title><rect x="35" y="244" width="3" height="15" fill="rgb(239,49,35)"/><text x="38.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.20%)</title><rect x="38" y="244" width="2" height="15" fill="rgb(234,42,31)"/><text x="41.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.20%)</title><rect x="38" y="260" width="2" height="15" fill="rgb(232,49,17)"/><text x="41.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.40%)</title><rect x="40" y="244" width="5" height="15" fill="rgb(226,26,44)"/><text x="43.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (2 samples, 0.40%)</title><rect x="40" y="260" width="5" height="15" fill="rgb(217,173,36)"/><text x="43.00" y="270.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.20%)</title><rect x="42" y="276" width="3" height="15" fill="rgb(248,170,39)"/><text x="45.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.40%)</title><rect x="45" y="244" width="4" height="15" fill="rgb(220,31,24)"/><text x="48.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.40%)</title><rect x="45" y="260" width="4" height="15" fill="rgb(250,214,43)"/><text x="48.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.20%)</title><rect x="47" y="276" width="2" height="15" fill="rgb(244,206,24)"/><text x="50.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (11 samples, 2.19%)</title><rect x="28" y="212" width="26" height="15" fill="rgb(244,126,39)"/><text x="31.00" y="222.50">p..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (11 samples, 2.19%)</title><rect x="28" y="228" width="26" height="15" fill="rgb(216,78,43)"/><text x="31.00" y="238.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.40%)</title><rect x="49" y="244" width="5" height="15" fill="rgb(228,42,36)"/><text x="52.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.40%)</title><rect x="49" y="260" width="5" height="15" fill="rgb(243,168,4)"/><text x="52.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.20%)</title><rect x="52" y="276" width="2" height="15" fill="rgb(229,192,37)"/><text x="55.00" y="286.50"></text></g><g><title>0x7ffabe562f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="54" y="244" width="2" height="15" fill="rgb(230,3,3)"/><text x="57.00" y="254.50"></text></g><g><title>0x7ffabe552d7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="54" y="260" width="2" height="15" fill="rgb(224,61,20)"/><text x="57.00" y="270.50"></text></g><g><title>0x7ffabe53fbbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="54" y="276" width="2" height="15" fill="rgb(230,184,16)"/><text x="57.00" y="286.50"></text></g><g><title>0x7ffabe546d60 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="54" y="292" width="2" height="15" fill="rgb(246,70,5)"/><text x="57.00" y="302.50"></text></g><g><title>0x7ffabe5712df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="56" y="276" width="3" height="15" fill="rgb(235,90,48)"/><text x="59.00" y="286.50"></text></g><g><title>0x7ffabe555d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="56" y="292" width="3" height="15" fill="rgb(216,189,12)"/><text x="59.00" y="302.50"></text></g><g><title>0x7ffabe5555d8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="56" y="308" width="3" height="15" fill="rgb(249,20,8)"/><text x="59.00" y="318.50"></text></g><g><title>0x7ffabe562fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.40%)</title><rect x="56" y="244" width="5" height="15" fill="rgb(207,64,15)"/><text x="59.00" y="254.50"></text></g><g><title>0x7ffabe572405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.40%)</title><rect x="56" y="260" width="5" height="15" fill="rgb(248,29,10)"/><text x="59.00" y="270.50"></text></g><g><title>0x7ffabe571592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="59" y="276" width="2" height="15" fill="rgb(254,44,32)"/><text x="62.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.20%)</title><rect x="59" y="292" width="2" height="15" fill="rgb(218,50,54)"/><text x="62.00" y="302.50"></text></g><g><title>0x7ffae4b35757 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="59" y="308" width="2" height="15" fill="rgb(237,124,43)"/><text x="62.00" y="318.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.20%)</title><rect x="61" y="260" width="2" height="15" fill="rgb(211,147,36)"/><text x="64.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.20%)</title><rect x="61" y="276" width="2" height="15" fill="rgb(225,131,53)"/><text x="64.00" y="286.50"></text></g><g><title>0x7ffabe56305a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.40%)</title><rect x="61" y="244" width="5" height="15" fill="rgb(246,151,39)"/><text x="64.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.20%)</title><rect x="63" y="260" width="3" height="15" fill="rgb(254,180,34)"/><text x="66.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:72) (1 samples, 0.20%)</title><rect x="63" y="276" width="3" height="15" fill="rgb(248,228,20)"/><text x="66.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (6 samples, 1.19%)</title><rect x="54" y="212" width="14" height="15" fill="rgb(211,117,34)"/><text x="57.00" y="222.50"></text></g><g><title>0x7ffabe563d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.19%)</title><rect x="54" y="228" width="14" height="15" fill="rgb(233,108,5)"/><text x="57.00" y="238.50"></text></g><g><title>0x7ffabe563328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="66" y="244" width="2" height="15" fill="rgb(223,5,8)"/><text x="69.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.20%)</title><rect x="66" y="260" width="2" height="15" fill="rgb(232,215,26)"/><text x="69.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.20%)</title><rect x="66" y="276" width="2" height="15" fill="rgb(213,202,37)"/><text x="69.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.20%)</title><rect x="66" y="292" width="2" height="15" fill="rgb(251,180,42)"/><text x="69.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.20%)</title><rect x="66" y="308" width="2" height="15" fill="rgb(234,34,24)"/><text x="69.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.20%)</title><rect x="66" y="324" width="2" height="15" fill="rgb(218,22,6)"/><text x="69.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.20%)</title><rect x="68" y="212" width="2" height="15" fill="rgb(219,96,44)"/><text x="71.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.20%)</title><rect x="70" y="228" width="3" height="15" fill="rgb(230,218,41)"/><text x="73.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:776) (1 samples, 0.20%)</title><rect x="70" y="244" width="3" height="15" fill="rgb(252,114,12)"/><text x="73.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.20%)</title><rect x="75" y="276" width="3" height="15" fill="rgb(206,144,13)"/><text x="78.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="75" y="292" width="3" height="15" fill="rgb(234,152,4)"/><text x="78.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.20%)</title><rect x="75" y="308" width="3" height="15" fill="rgb(214,73,46)"/><text x="78.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.20%)</title><rect x="75" y="324" width="3" height="15" fill="rgb(211,116,39)"/><text x="78.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:58) (1 samples, 0.20%)</title><rect x="78" y="356" width="2" height="15" fill="rgb(209,45,32)"/><text x="81.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.40%)</title><rect x="78" y="324" width="4" height="15" fill="rgb(216,217,39)"/><text x="81.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.40%)</title><rect x="78" y="340" width="4" height="15" fill="rgb(235,11,25)"/><text x="81.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.20%)</title><rect x="80" y="356" width="2" height="15" fill="rgb(238,7,25)"/><text x="83.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="80" y="372" width="2" height="15" fill="rgb(238,145,39)"/><text x="83.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.20%)</title><rect x="80" y="388" width="2" height="15" fill="rgb(219,188,41)"/><text x="83.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.20%)</title><rect x="80" y="404" width="2" height="15" fill="rgb(229,13,29)"/><text x="83.00" y="414.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (6 samples, 1.19%)</title><rect x="70" y="212" width="15" height="15" fill="rgb(219,63,26)"/><text x="73.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (5 samples, 0.99%)</title><rect x="73" y="228" width="12" height="15" fill="rgb(210,38,21)"/><text x="76.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (5 samples, 0.99%)</title><rect x="73" y="244" width="12" height="15" fill="rgb(245,172,53)"/><text x="76.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (4 samples, 0.80%)</title><rect x="75" y="260" width="10" height="15" fill="rgb(248,83,12)"/><text x="78.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.60%)</title><rect x="78" y="276" width="7" height="15" fill="rgb(253,27,14)"/><text x="81.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.60%)</title><rect x="78" y="292" width="7" height="15" fill="rgb(215,80,35)"/><text x="81.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.60%)</title><rect x="78" y="308" width="7" height="15" fill="rgb(246,33,22)"/><text x="81.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.20%)</title><rect x="82" y="324" width="3" height="15" fill="rgb(252,7,48)"/><text x="85.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.20%)</title><rect x="82" y="340" width="3" height="15" fill="rgb(253,179,51)"/><text x="85.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3045) (1 samples, 0.20%)</title><rect x="82" y="356" width="3" height="15" fill="rgb(244,73,2)"/><text x="85.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="85" y="244" width="2" height="15" fill="rgb(230,156,11)"/><text x="88.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="85" y="260" width="2" height="15" fill="rgb(224,177,7)"/><text x="88.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.20%)</title><rect x="85" y="276" width="2" height="15" fill="rgb(254,206,53)"/><text x="88.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1895) (1 samples, 0.20%)</title><rect x="85" y="292" width="2" height="15" fill="rgb(210,133,29)"/><text x="88.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.20%)</title><rect x="85" y="308" width="2" height="15" fill="rgb(238,178,16)"/><text x="88.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (2 samples, 0.40%)</title><rect x="85" y="212" width="4" height="15" fill="rgb(222,182,14)"/><text x="88.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.40%)</title><rect x="85" y="228" width="4" height="15" fill="rgb(220,8,36)"/><text x="88.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.20%)</title><rect x="87" y="244" width="2" height="15" fill="rgb(237,108,20)"/><text x="90.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.20%)</title><rect x="87" y="260" width="2" height="15" fill="rgb(232,210,29)"/><text x="90.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.20%)</title><rect x="89" y="244" width="3" height="15" fill="rgb(222,175,26)"/><text x="92.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.20%)</title><rect x="89" y="260" width="3" height="15" fill="rgb(241,16,33)"/><text x="92.00" y="270.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (32 samples, 6.36%)</title><rect x="19" y="196" width="75" height="15" fill="rgb(211,32,52)"/><text x="22.00" y="206.50">_samme_p..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (2 samples, 0.40%)</title><rect x="89" y="212" width="5" height="15" fill="rgb(238,223,6)"/><text x="92.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.40%)</title><rect x="89" y="228" width="5" height="15" fill="rgb(251,154,13)"/><text x="92.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="92" y="244" width="2" height="15" fill="rgb(251,214,37)"/><text x="95.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.20%)</title><rect x="92" y="260" width="2" height="15" fill="rgb(205,131,21)"/><text x="95.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.20%)</title><rect x="92" y="276" width="2" height="15" fill="rgb(208,94,31)"/><text x="95.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:295) (1 samples, 0.20%)</title><rect x="92" y="292" width="2" height="15" fill="rgb(228,171,52)"/><text x="95.00" y="302.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.20%)</title><rect x="99" y="212" width="2" height="15" fill="rgb(221,85,12)"/><text x="102.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:373) (1 samples, 0.20%)</title><rect x="101" y="212" width="2" height="15" fill="rgb(234,16,20)"/><text x="104.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.20%)</title><rect x="103" y="228" width="3" height="15" fill="rgb(236,148,21)"/><text x="106.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.20%)</title><rect x="103" y="244" width="3" height="15" fill="rgb(229,165,18)"/><text x="106.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.20%)</title><rect x="103" y="260" width="3" height="15" fill="rgb(242,55,0)"/><text x="106.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.20%)</title><rect x="103" y="276" width="3" height="15" fill="rgb(231,60,21)"/><text x="106.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.20%)</title><rect x="103" y="292" width="3" height="15" fill="rgb(206,48,4)"/><text x="106.00" y="302.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.20%)</title><rect x="106" y="324" width="2" height="15" fill="rgb(242,39,7)"/><text x="109.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (2 samples, 0.40%)</title><rect x="106" y="308" width="4" height="15" fill="rgb(233,212,16)"/><text x="109.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.20%)</title><rect x="108" y="324" width="2" height="15" fill="rgb(241,167,36)"/><text x="111.00" y="334.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c:2061) (1 samples, 0.20%)</title><rect x="108" y="340" width="2" height="15" fill="rgb(245,217,33)"/><text x="111.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.20%)</title><rect x="110" y="324" width="3" height="15" fill="rgb(223,228,30)"/><text x="113.00" y="334.50"></text></g><g><title>0x7ffae4bfd143 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="110" y="340" width="3" height="15" fill="rgb(241,211,51)"/><text x="113.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.20%)</title><rect x="113" y="340" width="2" height="15" fill="rgb(212,145,30)"/><text x="116.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.80%)</title><rect x="110" y="308" width="10" height="15" fill="rgb(232,99,43)"/><text x="113.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.60%)</title><rect x="113" y="324" width="7" height="15" fill="rgb(233,24,35)"/><text x="116.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.40%)</title><rect x="115" y="340" width="5" height="15" fill="rgb(222,201,43)"/><text x="118.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (1 samples, 0.20%)</title><rect x="117" y="356" width="3" height="15" fill="rgb(211,215,25)"/><text x="120.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.20%)</title><rect x="120" y="324" width="2" height="15" fill="rgb(254,97,22)"/><text x="123.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="120" y="340" width="2" height="15" fill="rgb(251,4,17)"/><text x="123.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="120" y="356" width="2" height="15" fill="rgb(229,15,8)"/><text x="123.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.20%)</title><rect x="120" y="372" width="2" height="15" fill="rgb(205,41,38)"/><text x="123.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (3 samples, 0.60%)</title><rect x="120" y="308" width="7" height="15" fill="rgb(210,208,10)"/><text x="123.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.40%)</title><rect x="122" y="324" width="5" height="15" fill="rgb(212,43,49)"/><text x="125.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="124" y="340" width="3" height="15" fill="rgb(233,229,25)"/><text x="127.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="124" y="356" width="3" height="15" fill="rgb(251,223,8)"/><text x="127.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.20%)</title><rect x="124" y="372" width="3" height="15" fill="rgb(248,57,32)"/><text x="127.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.20%)</title><rect x="124" y="388" width="3" height="15" fill="rgb(228,10,46)"/><text x="127.00" y="398.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (15 samples, 2.98%)</title><rect x="94" y="196" width="35" height="15" fill="rgb(251,172,35)"/><text x="97.00" y="206.50">_s..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (11 samples, 2.19%)</title><rect x="103" y="212" width="26" height="15" fill="rgb(220,3,19)"/><text x="106.00" y="222.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 1.99%)</title><rect x="106" y="228" width="23" height="15" fill="rgb(242,163,48)"/><text x="109.00" y="238.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (10 samples, 1.99%)</title><rect x="106" y="244" width="23" height="15" fill="rgb(249,87,37)"/><text x="109.00" y="254.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (10 samples, 1.99%)</title><rect x="106" y="260" width="23" height="15" fill="rgb(213,21,37)"/><text x="109.00" y="270.50">_..</text></g><g><title>array_clip (methods.c:2381) (10 samples, 1.99%)</title><rect x="106" y="276" width="23" height="15" fill="rgb(238,116,27)"/><text x="109.00" y="286.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 1.99%)</title><rect x="106" y="292" width="23" height="15" fill="rgb(217,185,16)"/><text x="109.00" y="302.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:129) (1 samples, 0.20%)</title><rect x="127" y="308" width="2" height="15" fill="rgb(214,19,45)"/><text x="130.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (1 samples, 0.20%)</title><rect x="127" y="324" width="2" height="15" fill="rgb(242,133,19)"/><text x="130.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="127" y="340" width="2" height="15" fill="rgb(208,204,36)"/><text x="130.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="127" y="356" width="2" height="15" fill="rgb(211,34,27)"/><text x="130.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.20%)</title><rect x="127" y="372" width="2" height="15" fill="rgb(212,228,11)"/><text x="130.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.20%)</title><rect x="127" y="388" width="2" height="15" fill="rgb(218,53,50)"/><text x="130.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.20%)</title><rect x="127" y="404" width="2" height="15" fill="rgb(211,4,53)"/><text x="130.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="129" y="228" width="2" height="15" fill="rgb(245,222,53)"/><text x="132.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.20%)</title><rect x="129" y="244" width="2" height="15" fill="rgb(233,57,0)"/><text x="132.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.20%)</title><rect x="129" y="260" width="2" height="15" fill="rgb(241,104,29)"/><text x="132.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.20%)</title><rect x="129" y="276" width="2" height="15" fill="rgb(218,101,3)"/><text x="132.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.20%)</title><rect x="129" y="292" width="2" height="15" fill="rgb(254,5,45)"/><text x="132.00" y="302.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.20%)</title><rect x="129" y="308" width="2" height="15" fill="rgb(214,192,29)"/><text x="132.00" y="318.50"></text></g><g><title>0x7ffae3d430c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="131" y="292" width="3" height="15" fill="rgb(254,196,23)"/><text x="134.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (3 samples, 0.60%)</title><rect x="129" y="196" width="7" height="15" fill="rgb(212,191,13)"/><text x="132.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.60%)</title><rect x="129" y="212" width="7" height="15" fill="rgb(210,77,37)"/><text x="132.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.40%)</title><rect x="131" y="228" width="5" height="15" fill="rgb(231,224,45)"/><text x="134.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.40%)</title><rect x="131" y="244" width="5" height="15" fill="rgb(244,171,45)"/><text x="134.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (2 samples, 0.40%)</title><rect x="131" y="260" width="5" height="15" fill="rgb(253,81,38)"/><text x="134.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (2 samples, 0.40%)</title><rect x="131" y="276" width="5" height="15" fill="rgb(247,100,39)"/><text x="134.00" y="286.50"></text></g><g><title>0x7ffae4cf1dd0 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="134" y="292" width="2" height="15" fill="rgb(245,184,39)"/><text x="137.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:281) (1 samples, 0.20%)</title><rect x="136" y="196" width="3" height="15" fill="rgb(219,200,42)"/><text x="139.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="139" y="228" width="2" height="15" fill="rgb(217,38,5)"/><text x="142.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.20%)</title><rect x="139" y="244" width="2" height="15" fill="rgb(243,61,7)"/><text x="142.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="141" y="244" width="2" height="15" fill="rgb(229,63,25)"/><text x="144.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.20%)</title><rect x="141" y="260" width="2" height="15" fill="rgb(213,75,8)"/><text x="144.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.20%)</title><rect x="141" y="276" width="2" height="15" fill="rgb(231,37,41)"/><text x="144.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.40%)</title><rect x="141" y="228" width="5" height="15" fill="rgb(208,120,22)"/><text x="144.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.20%)</title><rect x="143" y="244" width="3" height="15" fill="rgb(251,95,37)"/><text x="146.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:282) (1 samples, 0.20%)</title><rect x="143" y="260" width="3" height="15" fill="rgb(205,196,38)"/><text x="146.00" y="270.50"></text></g><g><title>array_multiply (number.c:354) (4 samples, 0.80%)</title><rect x="139" y="212" width="9" height="15" fill="rgb(222,215,12)"/><text x="142.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.20%)</title><rect x="146" y="228" width="2" height="15" fill="rgb(212,153,3)"/><text x="149.00" y="238.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:467) (1 samples, 0.20%)</title><rect x="146" y="244" width="2" height="15" fill="rgb(220,165,46)"/><text x="149.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2858) (1 samples, 0.20%)</title><rect x="148" y="308" width="2" height="15" fill="rgb(250,211,23)"/><text x="151.00" y="318.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1984) (1 samples, 0.20%)</title><rect x="148" y="324" width="2" height="15" fill="rgb(211,111,11)"/><text x="151.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.40%)</title><rect x="148" y="276" width="5" height="15" fill="rgb(244,0,40)"/><text x="151.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.40%)</title><rect x="148" y="292" width="5" height="15" fill="rgb(228,8,39)"/><text x="151.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2996) (1 samples, 0.20%)</title><rect x="150" y="308" width="3" height="15" fill="rgb(252,82,15)"/><text x="153.00" y="318.50"></text></g><g><title>array_subtract (number.c:342) (3 samples, 0.60%)</title><rect x="148" y="212" width="7" height="15" fill="rgb(244,118,37)"/><text x="151.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.60%)</title><rect x="148" y="228" width="7" height="15" fill="rgb(208,194,37)"/><text x="151.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.60%)</title><rect x="148" y="244" width="7" height="15" fill="rgb(230,137,36)"/><text x="151.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.60%)</title><rect x="148" y="260" width="7" height="15" fill="rgb(245,27,53)"/><text x="151.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.20%)</title><rect x="153" y="276" width="2" height="15" fill="rgb(254,159,34)"/><text x="156.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:318) (1 samples, 0.20%)</title><rect x="153" y="292" width="2" height="15" fill="rgb(245,67,27)"/><text x="156.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.20%)</title><rect x="155" y="260" width="2" height="15" fill="rgb(248,10,53)"/><text x="158.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="155" y="276" width="2" height="15" fill="rgb(225,71,5)"/><text x="158.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.20%)</title><rect x="155" y="292" width="2" height="15" fill="rgb(224,65,29)"/><text x="158.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.20%)</title><rect x="155" y="308" width="2" height="15" fill="rgb(225,50,8)"/><text x="158.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.20%)</title><rect x="155" y="324" width="2" height="15" fill="rgb(212,170,12)"/><text x="158.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.20%)</title><rect x="155" y="340" width="2" height="15" fill="rgb(222,180,16)"/><text x="158.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.20%)</title><rect x="157" y="276" width="3" height="15" fill="rgb(247,33,10)"/><text x="160.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (61 samples, 12.13%)</title><rect x="19" y="180" width="143" height="15" fill="rgb(215,35,20)"/><text x="22.00" y="190.50">&lt;genexpr&gt; (sklearn..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (10 samples, 1.99%)</title><rect x="139" y="196" width="23" height="15" fill="rgb(209,195,34)"/><text x="142.00" y="206.50">_..</text></g><g><title>array_sum (methods.c:2215) (3 samples, 0.60%)</title><rect x="155" y="212" width="7" height="15" fill="rgb(226,36,35)"/><text x="158.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (3 samples, 0.60%)</title><rect x="155" y="228" width="7" height="15" fill="rgb(252,149,44)"/><text x="158.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (3 samples, 0.60%)</title><rect x="155" y="244" width="7" height="15" fill="rgb(233,85,32)"/><text x="158.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.40%)</title><rect x="157" y="260" width="5" height="15" fill="rgb(235,159,27)"/><text x="160.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.20%)</title><rect x="160" y="276" width="2" height="15" fill="rgb(238,107,17)"/><text x="163.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.20%)</title><rect x="160" y="292" width="2" height="15" fill="rgb(226,213,16)"/><text x="163.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.20%)</title><rect x="160" y="308" width="2" height="15" fill="rgb(245,169,51)"/><text x="163.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.20%)</title><rect x="160" y="324" width="2" height="15" fill="rgb(243,173,30)"/><text x="163.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1642) (1 samples, 0.20%)</title><rect x="160" y="340" width="2" height="15" fill="rgb(222,147,48)"/><text x="163.00" y="350.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.20%)</title><rect x="162" y="180" width="2" height="15" fill="rgb(213,34,21)"/><text x="165.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="162" y="196" width="2" height="15" fill="rgb(210,54,49)"/><text x="165.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.20%)</title><rect x="162" y="212" width="2" height="15" fill="rgb(205,188,42)"/><text x="165.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.20%)</title><rect x="162" y="228" width="2" height="15" fill="rgb(227,109,41)"/><text x="165.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.20%)</title><rect x="164" y="180" width="3" height="15" fill="rgb(221,215,36)"/><text x="167.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:18) (64 samples, 12.72%)</title><rect x="19" y="100" width="150" height="15" fill="rgb(239,188,10)"/><text x="22.00" y="110.50">profile (bench_AdaB..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (64 samples, 12.72%)</title><rect x="19" y="116" width="150" height="15" fill="rgb(254,18,33)"/><text x="22.00" y="126.50">time_predict (mlpro..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (64 samples, 12.72%)</title><rect x="19" y="132" width="150" height="15" fill="rgb(213,47,49)"/><text x="22.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (64 samples, 12.72%)</title><rect x="19" y="148" width="150" height="15" fill="rgb(246,23,51)"/><text x="22.00" y="158.50">predict_proba (skle..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (64 samples, 12.72%)</title><rect x="19" y="164" width="150" height="15" fill="rgb(234,16,23)"/><text x="22.00" y="174.50">decision_function (..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="167" y="180" width="2" height="15" fill="rgb(242,153,32)"/><text x="170.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="167" y="196" width="2" height="15" fill="rgb(228,97,5)"/><text x="170.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.20%)</title><rect x="167" y="212" width="2" height="15" fill="rgb(222,174,36)"/><text x="170.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.20%)</title><rect x="181" y="228" width="2" height="15" fill="rgb(232,135,17)"/><text x="184.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.20%)</title><rect x="183" y="244" width="2" height="15" fill="rgb(242,7,16)"/><text x="186.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.40%)</title><rect x="188" y="260" width="4" height="15" fill="rgb(250,210,44)"/><text x="191.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 0.99%)</title><rect x="185" y="244" width="12" height="15" fill="rgb(250,99,42)"/><text x="188.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.40%)</title><rect x="192" y="260" width="5" height="15" fill="rgb(254,61,1)"/><text x="195.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (13 samples, 2.58%)</title><rect x="171" y="212" width="31" height="15" fill="rgb(220,65,32)"/><text x="174.00" y="222.50">pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 1.59%)</title><rect x="183" y="228" width="19" height="15" fill="rgb(245,215,18)"/><text x="186.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.40%)</title><rect x="197" y="244" width="5" height="15" fill="rgb(252,124,37)"/><text x="200.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.20%)</title><rect x="200" y="260" width="2" height="15" fill="rgb(212,119,1)"/><text x="203.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:481) (1 samples, 0.20%)</title><rect x="207" y="244" width="2" height="15" fill="rgb(208,191,51)"/><text x="210.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:478) (2 samples, 0.40%)</title><rect x="214" y="260" width="4" height="15" fill="rgb(215,81,35)"/><text x="217.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (5 samples, 0.99%)</title><rect x="209" y="244" width="12" height="15" fill="rgb(211,112,26)"/><text x="212.00" y="254.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.20%)</title><rect x="218" y="260" width="3" height="15" fill="rgb(225,59,42)"/><text x="221.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.20%)</title><rect x="223" y="276" width="2" height="15" fill="rgb(246,98,27)"/><text x="226.00" y="286.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.20%)</title><rect x="225" y="276" width="3" height="15" fill="rgb(231,6,11)"/><text x="228.00" y="286.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.20%)</title><rect x="228" y="276" width="2" height="15" fill="rgb(219,180,26)"/><text x="231.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 0.99%)</title><rect x="221" y="244" width="11" height="15" fill="rgb(211,176,44)"/><text x="224.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (5 samples, 0.99%)</title><rect x="221" y="260" width="11" height="15" fill="rgb(247,119,37)"/><text x="224.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.20%)</title><rect x="230" y="276" width="2" height="15" fill="rgb(228,110,35)"/><text x="233.00" y="286.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.20%)</title><rect x="235" y="260" width="2" height="15" fill="rgb(231,67,20)"/><text x="238.00" y="270.50"></text></g><g><title>0x7ffae4b35757 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="235" y="276" width="2" height="15" fill="rgb(244,93,29)"/><text x="238.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (3 samples, 0.60%)</title><rect x="232" y="244" width="7" height="15" fill="rgb(247,154,19)"/><text x="235.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.20%)</title><rect x="237" y="260" width="2" height="15" fill="rgb(254,110,11)"/><text x="240.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.20%)</title><rect x="237" y="276" width="2" height="15" fill="rgb(213,128,9)"/><text x="240.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.20%)</title><rect x="246" y="308" width="3" height="15" fill="rgb(248,56,54)"/><text x="249.00" y="318.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (2 samples, 0.40%)</title><rect x="246" y="292" width="5" height="15" fill="rgb(251,206,46)"/><text x="249.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.20%)</title><rect x="249" y="308" width="2" height="15" fill="rgb(229,210,30)"/><text x="252.00" y="318.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.20%)</title><rect x="249" y="324" width="2" height="15" fill="rgb(212,47,28)"/><text x="252.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.20%)</title><rect x="249" y="340" width="2" height="15" fill="rgb(211,14,38)"/><text x="252.00" y="350.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (6 samples, 1.19%)</title><rect x="239" y="244" width="14" height="15" fill="rgb(244,49,28)"/><text x="242.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 0.80%)</title><rect x="244" y="260" width="9" height="15" fill="rgb(216,102,1)"/><text x="247.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (3 samples, 0.60%)</title><rect x="246" y="276" width="7" height="15" fill="rgb(216,159,42)"/><text x="249.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="251" y="292" width="2" height="15" fill="rgb(209,121,1)"/><text x="254.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.20%)</title><rect x="253" y="244" width="3" height="15" fill="rgb(217,80,46)"/><text x="256.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.40%)</title><rect x="256" y="244" width="5" height="15" fill="rgb(226,191,11)"/><text x="259.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.20%)</title><rect x="258" y="260" width="3" height="15" fill="rgb(251,105,37)"/><text x="261.00" y="270.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.20%)</title><rect x="258" y="276" width="3" height="15" fill="rgb(249,29,48)"/><text x="261.00" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.60%)</title><rect x="272" y="276" width="7" height="15" fill="rgb(227,166,49)"/><text x="275.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (8 samples, 1.59%)</title><rect x="263" y="260" width="19" height="15" fill="rgb(206,91,26)"/><text x="266.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.20%)</title><rect x="279" y="276" width="3" height="15" fill="rgb(211,139,6)"/><text x="282.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (10 samples, 1.99%)</title><rect x="261" y="244" width="23" height="15" fill="rgb(211,122,22)"/><text x="264.00" y="254.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.20%)</title><rect x="282" y="260" width="2" height="15" fill="rgb(219,158,27)"/><text x="285.00" y="270.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.20%)</title><rect x="282" y="276" width="2" height="15" fill="rgb(243,9,34)"/><text x="285.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.40%)</title><rect x="289" y="260" width="4" height="15" fill="rgb(245,80,15)"/><text x="292.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (39 samples, 7.75%)</title><rect x="204" y="228" width="92" height="15" fill="rgb(228,19,20)"/><text x="207.00" y="238.50">_validate_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (5 samples, 0.99%)</title><rect x="284" y="244" width="12" height="15" fill="rgb(247,124,9)"/><text x="287.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.20%)</title><rect x="293" y="260" width="3" height="15" fill="rgb(235,228,13)"/><text x="296.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.20%)</title><rect x="293" y="276" width="3" height="15" fill="rgb(225,34,47)"/><text x="296.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.20%)</title><rect x="293" y="292" width="3" height="15" fill="rgb(215,215,26)"/><text x="296.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (41 samples, 8.15%)</title><rect x="202" y="212" width="96" height="15" fill="rgb(251,202,34)"/><text x="205.00" y="222.50">predict_pro..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.20%)</title><rect x="296" y="228" width="2" height="15" fill="rgb(251,133,49)"/><text x="299.00" y="238.50"></text></g><g><title>0x7ffabe5555d8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="298" y="308" width="2" height="15" fill="rgb(228,52,24)"/><text x="301.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:666) (1 samples, 0.20%)</title><rect x="300" y="356" width="3" height="15" fill="rgb(226,72,19)"/><text x="303.00" y="366.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.20%)</title><rect x="303" y="356" width="2" height="15" fill="rgb(252,9,31)"/><text x="306.00" y="366.50"></text></g><g><title>_buffer_info_cmp (buffer.c:618) (1 samples, 0.20%)</title><rect x="303" y="372" width="2" height="15" fill="rgb(220,110,14)"/><text x="306.00" y="382.50"></text></g><g><title>0x7ffabe555d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.80%)</title><rect x="298" y="292" width="9" height="15" fill="rgb(238,94,1)"/><text x="301.00" y="302.50"></text></g><g><title>0x7ffabe555666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.60%)</title><rect x="300" y="308" width="7" height="15" fill="rgb(241,136,28)"/><text x="303.00" y="318.50"></text></g><g><title>0x7ffabe54b2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.60%)</title><rect x="300" y="324" width="7" height="15" fill="rgb(241,119,47)"/><text x="303.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.60%)</title><rect x="300" y="340" width="7" height="15" fill="rgb(235,79,15)"/><text x="303.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.20%)</title><rect x="305" y="356" width="2" height="15" fill="rgb(206,15,13)"/><text x="308.00" y="366.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.20%)</title><rect x="305" y="372" width="2" height="15" fill="rgb(225,43,25)"/><text x="308.00" y="382.50"></text></g><g><title>0x7ffae4b1f902 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="305" y="388" width="2" height="15" fill="rgb(241,119,5)"/><text x="308.00" y="398.50"></text></g><g><title>0x7ffabe548f22 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="307" y="308" width="3" height="15" fill="rgb(249,59,14)"/><text x="310.00" y="318.50"></text></g><g><title>0x7ffabe548fda (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="310" y="308" width="2" height="15" fill="rgb(217,36,23)"/><text x="313.00" y="318.50"></text></g><g><title>0x7ffabe5489fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="310" y="324" width="2" height="15" fill="rgb(215,209,1)"/><text x="313.00" y="334.50"></text></g><g><title>0x7ffabe548929 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="312" y="324" width="2" height="15" fill="rgb(239,226,10)"/><text x="315.00" y="334.50"></text></g><g><title>0x7ffabe5712df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.59%)</title><rect x="298" y="276" width="19" height="15" fill="rgb(221,11,20)"/><text x="301.00" y="286.50"></text></g><g><title>0x7ffabe555e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.80%)</title><rect x="307" y="292" width="10" height="15" fill="rgb(207,79,22)"/><text x="310.00" y="302.50"></text></g><g><title>0x7ffabe5492bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.40%)</title><rect x="312" y="308" width="5" height="15" fill="rgb(225,29,44)"/><text x="315.00" y="318.50"></text></g><g><title>0x7ffabe548df8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="314" y="324" width="3" height="15" fill="rgb(222,84,44)"/><text x="317.00" y="334.50"></text></g><g><title>0x7ffabe572405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.79%)</title><rect x="298" y="260" width="21" height="15" fill="rgb(224,166,50)"/><text x="301.00" y="270.50"></text></g><g><title>0x7ffabe571511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="317" y="276" width="2" height="15" fill="rgb(212,52,50)"/><text x="320.00" y="286.50"></text></g><g><title>0x7ffabe547234 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="319" y="276" width="3" height="15" fill="rgb(253,228,47)"/><text x="322.00" y="286.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1189) (1 samples, 0.20%)</title><rect x="322" y="308" width="2" height="15" fill="rgb(224,114,51)"/><text x="325.00" y="318.50"></text></g><g><title>0x7ffabe562fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (13 samples, 2.58%)</title><rect x="298" y="244" width="31" height="15" fill="rgb(228,166,3)"/><text x="301.00" y="254.50">0x..</text></g><g><title>0x7ffabe572540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.80%)</title><rect x="319" y="260" width="10" height="15" fill="rgb(237,195,28)"/><text x="322.00" y="270.50"></text></g><g><title>0x7ffabe5472f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.60%)</title><rect x="322" y="276" width="7" height="15" fill="rgb(224,224,33)"/><text x="325.00" y="286.50"></text></g><g><title>0x7ffabe546530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.60%)</title><rect x="322" y="292" width="7" height="15" fill="rgb(240,118,5)"/><text x="325.00" y="302.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.40%)</title><rect x="324" y="308" width="5" height="15" fill="rgb(210,186,52)"/><text x="327.00" y="318.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.20%)</title><rect x="331" y="260" width="2" height="15" fill="rgb(249,195,34)"/><text x="334.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.20%)</title><rect x="331" y="276" width="2" height="15" fill="rgb(228,202,7)"/><text x="334.00" y="286.50"></text></g><g><title>0x7ffabe56305a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.60%)</title><rect x="329" y="244" width="7" height="15" fill="rgb(252,153,13)"/><text x="332.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.20%)</title><rect x="333" y="260" width="3" height="15" fill="rgb(238,138,16)"/><text x="336.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.20%)</title><rect x="333" y="276" width="3" height="15" fill="rgb(212,114,38)"/><text x="336.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.20%)</title><rect x="333" y="292" width="3" height="15" fill="rgb(227,118,52)"/><text x="336.00" y="302.50"></text></g><g><title>0x7ffabe563328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="336" y="244" width="2" height="15" fill="rgb(241,77,30)"/><text x="339.00" y="254.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.20%)</title><rect x="336" y="260" width="2" height="15" fill="rgb(228,36,53)"/><text x="339.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.20%)</title><rect x="336" y="276" width="2" height="15" fill="rgb(235,101,49)"/><text x="339.00" y="286.50"></text></g><g><title>0x7ffae4b3576f (libc-2.29.so) (1 samples, 0.20%)</title><rect x="336" y="292" width="2" height="15" fill="rgb(208,158,22)"/><text x="339.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (18 samples, 3.58%)</title><rect x="298" y="212" width="42" height="15" fill="rgb(250,66,45)"/><text x="301.00" y="222.50">pre..</text></g><g><title>0x7ffabe563d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 3.58%)</title><rect x="298" y="228" width="42" height="15" fill="rgb(251,47,0)"/><text x="301.00" y="238.50">0x7..</text></g><g><title>0x7ffabe563518 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="338" y="244" width="2" height="15" fill="rgb(238,63,53)"/><text x="341.00" y="254.50"></text></g><g><title>0x7ffae4b40120 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="343" y="228" width="2" height="15" fill="rgb(228,64,19)"/><text x="346.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.40%)</title><rect x="350" y="276" width="4" height="15" fill="rgb(216,119,39)"/><text x="353.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.40%)</title><rect x="350" y="292" width="4" height="15" fill="rgb(223,33,30)"/><text x="353.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.40%)</title><rect x="350" y="308" width="4" height="15" fill="rgb(242,126,35)"/><text x="353.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.40%)</title><rect x="350" y="324" width="4" height="15" fill="rgb(253,163,37)"/><text x="353.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.40%)</title><rect x="350" y="340" width="4" height="15" fill="rgb(208,10,43)"/><text x="353.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.40%)</title><rect x="350" y="356" width="4" height="15" fill="rgb(226,187,4)"/><text x="353.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.20%)</title><rect x="354" y="324" width="3" height="15" fill="rgb(242,87,24)"/><text x="357.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.20%)</title><rect x="354" y="340" width="3" height="15" fill="rgb(229,34,22)"/><text x="357.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.20%)</title><rect x="354" y="356" width="3" height="15" fill="rgb(231,101,1)"/><text x="357.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="354" y="372" width="3" height="15" fill="rgb(251,65,48)"/><text x="357.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.20%)</title><rect x="354" y="388" width="3" height="15" fill="rgb(216,72,30)"/><text x="357.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.20%)</title><rect x="354" y="404" width="3" height="15" fill="rgb(246,128,39)"/><text x="357.00" y="414.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:131) (1 samples, 0.20%)</title><rect x="354" y="420" width="3" height="15" fill="rgb(205,194,15)"/><text x="357.00" y="430.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h:1540) (1 samples, 0.20%)</title><rect x="354" y="436" width="3" height="15" fill="rgb(240,221,52)"/><text x="357.00" y="446.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.20%)</title><rect x="357" y="356" width="2" height="15" fill="rgb(235,182,10)"/><text x="360.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.40%)</title><rect x="357" y="324" width="4" height="15" fill="rgb(240,107,28)"/><text x="360.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.40%)</title><rect x="357" y="340" width="4" height="15" fill="rgb(252,173,30)"/><text x="360.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3071) (1 samples, 0.20%)</title><rect x="359" y="356" width="2" height="15" fill="rgb(250,91,28)"/><text x="362.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.20%)</title><rect x="361" y="324" width="3" height="15" fill="rgb(233,132,7)"/><text x="364.00" y="334.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.20%)</title><rect x="361" y="340" width="3" height="15" fill="rgb(206,219,29)"/><text x="364.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.20%)</title><rect x="364" y="356" width="2" height="15" fill="rgb(229,24,28)"/><text x="367.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.40%)</title><rect x="364" y="324" width="4" height="15" fill="rgb(250,38,15)"/><text x="367.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (2 samples, 0.40%)</title><rect x="364" y="340" width="4" height="15" fill="rgb(227,41,9)"/><text x="367.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.20%)</title><rect x="366" y="356" width="2" height="15" fill="rgb(228,0,34)"/><text x="369.00" y="366.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1874) (1 samples, 0.20%)</title><rect x="366" y="372" width="2" height="15" fill="rgb(254,35,6)"/><text x="369.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (13 samples, 2.58%)</title><rect x="340" y="212" width="31" height="15" fill="rgb(241,198,37)"/><text x="343.00" y="222.50">pr..</text></g><g><title>array_sum (methods.c:2215) (11 samples, 2.19%)</title><rect x="345" y="228" width="26" height="15" fill="rgb(240,111,20)"/><text x="348.00" y="238.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 2.19%)</title><rect x="345" y="244" width="26" height="15" fill="rgb(245,117,43)"/><text x="348.00" y="254.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 1.99%)</title><rect x="347" y="260" width="24" height="15" fill="rgb(206,87,32)"/><text x="350.00" y="270.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 1.39%)</title><rect x="354" y="276" width="17" height="15" fill="rgb(246,1,3)"/><text x="357.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 1.39%)</title><rect x="354" y="292" width="17" height="15" fill="rgb(235,182,7)"/><text x="357.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.39%)</title><rect x="354" y="308" width="17" height="15" fill="rgb(229,205,17)"/><text x="357.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.20%)</title><rect x="368" y="324" width="3" height="15" fill="rgb(244,149,17)"/><text x="371.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.20%)</title><rect x="368" y="340" width="3" height="15" fill="rgb(209,201,5)"/><text x="371.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.20%)</title><rect x="371" y="228" width="2" height="15" fill="rgb(231,83,16)"/><text x="374.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:566) (1 samples, 0.20%)</title><rect x="371" y="244" width="2" height="15" fill="rgb(205,22,6)"/><text x="374.00" y="254.50"></text></g><g><title>array_richcompare (arrayobject.c:1388) (1 samples, 0.20%)</title><rect x="373" y="228" width="2" height="15" fill="rgb(238,136,19)"/><text x="376.00" y="238.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.20%)</title><rect x="375" y="228" width="3" height="15" fill="rgb(206,81,21)"/><text x="378.00" y="238.50"></text></g><g><title>binop_should_defer (binop_override.h:123) (1 samples, 0.20%)</title><rect x="375" y="244" width="3" height="15" fill="rgb(226,155,50)"/><text x="378.00" y="254.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src:4574) (1 samples, 0.20%)</title><rect x="375" y="260" width="3" height="15" fill="rgb(246,162,42)"/><text x="378.00" y="270.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.20%)</title><rect x="375" y="276" width="3" height="15" fill="rgb(254,229,15)"/><text x="378.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3162) (1 samples, 0.20%)</title><rect x="378" y="260" width="2" height="15" fill="rgb(233,137,12)"/><text x="381.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.20%)</title><rect x="380" y="276" width="3" height="15" fill="rgb(222,169,38)"/><text x="383.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.20%)</title><rect x="383" y="276" width="2" height="15" fill="rgb(223,165,16)"/><text x="386.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.60%)</title><rect x="380" y="260" width="7" height="15" fill="rgb(251,9,45)"/><text x="383.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.20%)</title><rect x="385" y="276" width="2" height="15" fill="rgb(206,78,30)"/><text x="388.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.20%)</title><rect x="385" y="292" width="2" height="15" fill="rgb(229,6,24)"/><text x="388.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.20%)</title><rect x="385" y="308" width="2" height="15" fill="rgb(207,113,18)"/><text x="388.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.20%)</title><rect x="385" y="324" width="2" height="15" fill="rgb(250,58,5)"/><text x="388.00" y="334.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:63) (1 samples, 0.20%)</title><rect x="385" y="340" width="2" height="15" fill="rgb(231,215,13)"/><text x="388.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.99%)</title><rect x="378" y="244" width="12" height="15" fill="rgb(249,164,4)"/><text x="381.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="387" y="260" width="3" height="15" fill="rgb(252,3,21)"/><text x="390.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:336) (1 samples, 0.20%)</title><rect x="387" y="276" width="3" height="15" fill="rgb(226,225,3)"/><text x="390.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (9 samples, 1.79%)</title><rect x="371" y="212" width="21" height="15" fill="rgb(206,24,2)"/><text x="374.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (6 samples, 1.19%)</title><rect x="378" y="228" width="14" height="15" fill="rgb(243,150,49)"/><text x="381.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.20%)</title><rect x="390" y="244" width="2" height="15" fill="rgb(225,94,44)"/><text x="393.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.20%)</title><rect x="390" y="260" width="2" height="15" fill="rgb(217,97,20)"/><text x="393.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="390" y="276" width="2" height="15" fill="rgb(242,184,16)"/><text x="393.00" y="286.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (96 samples, 19.09%)</title><rect x="169" y="196" width="225" height="15" fill="rgb(213,149,30)"/><text x="172.00" y="206.50">_samme_proba (sklearn/ensembl..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (1 samples, 0.20%)</title><rect x="392" y="212" width="2" height="15" fill="rgb(239,207,23)"/><text x="395.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="392" y="228" width="2" height="15" fill="rgb(244,42,22)"/><text x="395.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="392" y="244" width="2" height="15" fill="rgb(209,115,33)"/><text x="395.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.20%)</title><rect x="392" y="260" width="2" height="15" fill="rgb(209,166,39)"/><text x="395.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.20%)</title><rect x="392" y="276" width="2" height="15" fill="rgb(208,16,4)"/><text x="395.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.20%)</title><rect x="392" y="292" width="2" height="15" fill="rgb(210,106,5)"/><text x="395.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2074) (1 samples, 0.20%)</title><rect x="392" y="308" width="2" height="15" fill="rgb(248,119,21)"/><text x="395.00" y="318.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.20%)</title><rect x="399" y="212" width="2" height="15" fill="rgb(236,177,27)"/><text x="402.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:5) (1 samples, 0.20%)</title><rect x="401" y="212" width="3" height="15" fill="rgb(205,219,44)"/><text x="404.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.40%)</title><rect x="404" y="228" width="4" height="15" fill="rgb(224,207,45)"/><text x="407.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.40%)</title><rect x="404" y="244" width="4" height="15" fill="rgb(207,30,28)"/><text x="407.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.40%)</title><rect x="404" y="260" width="4" height="15" fill="rgb(219,192,33)"/><text x="407.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.40%)</title><rect x="404" y="276" width="4" height="15" fill="rgb(231,66,17)"/><text x="407.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.40%)</title><rect x="404" y="292" width="4" height="15" fill="rgb(236,110,31)"/><text x="407.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.20%)</title><rect x="411" y="260" width="2" height="15" fill="rgb(220,99,39)"/><text x="414.00" y="270.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.20%)</title><rect x="420" y="324" width="2" height="15" fill="rgb(234,189,12)"/><text x="423.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (5 samples, 0.99%)</title><rect x="415" y="308" width="12" height="15" fill="rgb(220,181,9)"/><text x="418.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (2 samples, 0.40%)</title><rect x="422" y="324" width="5" height="15" fill="rgb(233,204,41)"/><text x="425.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.40%)</title><rect x="427" y="324" width="5" height="15" fill="rgb(240,220,21)"/><text x="430.00" y="334.50"></text></g><g><title>0x7ffae4bfe161 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="429" y="340" width="3" height="15" fill="rgb(236,158,54)"/><text x="432.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.20%)</title><rect x="432" y="324" width="2" height="15" fill="rgb(218,179,34)"/><text x="435.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.20%)</title><rect x="432" y="340" width="2" height="15" fill="rgb(225,97,38)"/><text x="435.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.20%)</title><rect x="436" y="420" width="3" height="15" fill="rgb(242,52,51)"/><text x="439.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.40%)</title><rect x="436" y="340" width="5" height="15" fill="rgb(247,40,29)"/><text x="439.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.40%)</title><rect x="436" y="356" width="5" height="15" fill="rgb(207,163,46)"/><text x="439.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.40%)</title><rect x="436" y="372" width="5" height="15" fill="rgb(234,7,27)"/><text x="439.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.40%)</title><rect x="436" y="388" width="5" height="15" fill="rgb(213,99,4)"/><text x="439.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.40%)</title><rect x="436" y="404" width="5" height="15" fill="rgb(222,92,45)"/><text x="439.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.20%)</title><rect x="439" y="420" width="2" height="15" fill="rgb(205,180,41)"/><text x="442.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3162) (1 samples, 0.20%)</title><rect x="441" y="356" width="2" height="15" fill="rgb(217,70,30)"/><text x="444.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="443" y="356" width="3" height="15" fill="rgb(220,186,5)"/><text x="446.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.20%)</title><rect x="443" y="372" width="3" height="15" fill="rgb(246,110,11)"/><text x="446.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.20%)</title><rect x="443" y="388" width="3" height="15" fill="rgb(210,159,12)"/><text x="446.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:333) (1 samples, 0.20%)</title><rect x="443" y="404" width="3" height="15" fill="rgb(207,71,6)"/><text x="446.00" y="414.50"></text></g><g><title>0x7ffae4b3fdbb (libc-2.29.so) (1 samples, 0.20%)</title><rect x="443" y="420" width="3" height="15" fill="rgb(211,172,17)"/><text x="446.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.20%)</title><rect x="446" y="356" width="2" height="15" fill="rgb(245,19,1)"/><text x="449.00" y="366.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.20%)</title><rect x="446" y="372" width="2" height="15" fill="rgb(254,19,26)"/><text x="449.00" y="382.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.20%)</title><rect x="446" y="388" width="2" height="15" fill="rgb(231,219,28)"/><text x="449.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="448" y="356" width="3" height="15" fill="rgb(242,13,19)"/><text x="451.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.20%)</title><rect x="448" y="372" width="3" height="15" fill="rgb(250,79,24)"/><text x="451.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.20%)</title><rect x="448" y="388" width="3" height="15" fill="rgb(253,153,31)"/><text x="451.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.20%)</title><rect x="448" y="404" width="3" height="15" fill="rgb(239,158,40)"/><text x="451.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (11 samples, 2.19%)</title><rect x="427" y="308" width="26" height="15" fill="rgb(218,117,37)"/><text x="430.00" y="318.50">_..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (8 samples, 1.59%)</title><rect x="434" y="324" width="19" height="15" fill="rgb(232,115,43)"/><text x="437.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.99%)</title><rect x="441" y="340" width="12" height="15" fill="rgb(206,95,8)"/><text x="444.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="451" y="356" width="2" height="15" fill="rgb(245,129,48)"/><text x="454.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.20%)</title><rect x="451" y="372" width="2" height="15" fill="rgb(211,184,32)"/><text x="454.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="451" y="388" width="2" height="15" fill="rgb(227,108,50)"/><text x="454.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.20%)</title><rect x="451" y="404" width="2" height="15" fill="rgb(238,227,43)"/><text x="454.00" y="414.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.20%)</title><rect x="451" y="420" width="2" height="15" fill="rgb(210,26,50)"/><text x="454.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.60%)</title><rect x="453" y="324" width="7" height="15" fill="rgb(218,178,12)"/><text x="456.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.60%)</title><rect x="453" y="340" width="7" height="15" fill="rgb(218,171,16)"/><text x="456.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:2) (1 samples, 0.20%)</title><rect x="460" y="340" width="2" height="15" fill="rgb(209,219,28)"/><text x="463.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.20%)</title><rect x="462" y="340" width="3" height="15" fill="rgb(235,115,10)"/><text x="465.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.20%)</title><rect x="465" y="372" width="2" height="15" fill="rgb(214,75,13)"/><text x="468.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:527) (1 samples, 0.20%)</title><rect x="469" y="388" width="3" height="15" fill="rgb(248,170,15)"/><text x="472.00" y="398.50"></text></g><g><title>PyArray_XDECREF (refcount.c:231) (1 samples, 0.20%)</title><rect x="469" y="404" width="3" height="15" fill="rgb(251,122,10)"/><text x="472.00" y="414.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.20%)</title><rect x="469" y="420" width="3" height="15" fill="rgb(243,106,30)"/><text x="472.00" y="430.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.20%)</title><rect x="472" y="388" width="2" height="15" fill="rgb(213,19,41)"/><text x="475.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="472" y="404" width="2" height="15" fill="rgb(245,43,28)"/><text x="475.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.20%)</title><rect x="474" y="404" width="2" height="15" fill="rgb(235,214,29)"/><text x="477.00" y="414.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.20%)</title><rect x="476" y="436" width="3" height="15" fill="rgb(236,134,22)"/><text x="479.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1664) (1 samples, 0.20%)</title><rect x="476" y="452" width="3" height="15" fill="rgb(226,192,22)"/><text x="479.00" y="462.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (9 samples, 1.79%)</title><rect x="460" y="324" width="21" height="15" fill="rgb(254,36,13)"/><text x="463.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (7 samples, 1.39%)</title><rect x="465" y="340" width="16" height="15" fill="rgb(224,66,3)"/><text x="468.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.39%)</title><rect x="465" y="356" width="16" height="15" fill="rgb(233,220,37)"/><text x="468.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (6 samples, 1.19%)</title><rect x="467" y="372" width="14" height="15" fill="rgb(248,118,27)"/><text x="470.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.60%)</title><rect x="474" y="388" width="7" height="15" fill="rgb(250,99,16)"/><text x="477.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.40%)</title><rect x="476" y="404" width="5" height="15" fill="rgb(230,95,12)"/><text x="479.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.40%)</title><rect x="476" y="420" width="5" height="15" fill="rgb(215,28,22)"/><text x="479.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.20%)</title><rect x="479" y="436" width="2" height="15" fill="rgb(206,24,16)"/><text x="482.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.20%)</title><rect x="479" y="452" width="2" height="15" fill="rgb(234,162,11)"/><text x="482.00" y="462.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.20%)</title><rect x="479" y="468" width="2" height="15" fill="rgb(221,172,49)"/><text x="482.00" y="478.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (2 samples, 0.40%)</title><rect x="486" y="404" width="4" height="15" fill="rgb(242,186,29)"/><text x="489.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.60%)</title><rect x="486" y="356" width="7" height="15" fill="rgb(226,104,44)"/><text x="489.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (3 samples, 0.60%)</title><rect x="486" y="372" width="7" height="15" fill="rgb(205,52,3)"/><text x="489.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (3 samples, 0.60%)</title><rect x="486" y="388" width="7" height="15" fill="rgb(248,187,41)"/><text x="489.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1664) (1 samples, 0.20%)</title><rect x="490" y="404" width="3" height="15" fill="rgb(238,48,29)"/><text x="493.00" y="414.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.20%)</title><rect x="493" y="388" width="2" height="15" fill="rgb(205,119,44)"/><text x="496.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.20%)</title><rect x="493" y="404" width="2" height="15" fill="rgb(226,1,19)"/><text x="496.00" y="414.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.40%)</title><rect x="493" y="372" width="4" height="15" fill="rgb(230,64,0)"/><text x="496.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.20%)</title><rect x="495" y="388" width="2" height="15" fill="rgb(235,152,36)"/><text x="498.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.20%)</title><rect x="495" y="404" width="2" height="15" fill="rgb(228,161,3)"/><text x="498.00" y="414.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:456) (1 samples, 0.20%)</title><rect x="495" y="420" width="2" height="15" fill="rgb(240,208,1)"/><text x="498.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (5 samples, 0.99%)</title><rect x="493" y="356" width="11" height="15" fill="rgb(231,211,1)"/><text x="496.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (3 samples, 0.60%)</title><rect x="497" y="372" width="7" height="15" fill="rgb(230,114,28)"/><text x="500.00" y="382.50"></text></g><g><title>0x7ffae4b35e76 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="502" y="388" width="2" height="15" fill="rgb(232,61,12)"/><text x="505.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (24 samples, 4.77%)</title><rect x="453" y="308" width="56" height="15" fill="rgb(214,184,49)"/><text x="456.00" y="318.50">_clip..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (12 samples, 2.39%)</title><rect x="481" y="324" width="28" height="15" fill="rgb(228,154,36)"/><text x="484.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.99%)</title><rect x="486" y="340" width="23" height="15" fill="rgb(254,69,40)"/><text x="489.00" y="350.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3296) (2 samples, 0.40%)</title><rect x="504" y="356" width="5" height="15" fill="rgb(235,126,31)"/><text x="507.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.20%)</title><rect x="507" y="372" width="2" height="15" fill="rgb(229,210,44)"/><text x="510.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="512" y="340" width="2" height="15" fill="rgb(241,226,19)"/><text x="515.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="512" y="356" width="2" height="15" fill="rgb(206,180,36)"/><text x="515.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.20%)</title><rect x="512" y="372" width="2" height="15" fill="rgb(236,226,21)"/><text x="515.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.20%)</title><rect x="512" y="388" width="2" height="15" fill="rgb(213,176,40)"/><text x="515.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="514" y="356" width="2" height="15" fill="rgb(221,115,18)"/><text x="517.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:557) (1 samples, 0.20%)</title><rect x="514" y="372" width="2" height="15" fill="rgb(237,165,42)"/><text x="517.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.20%)</title><rect x="516" y="388" width="3" height="15" fill="rgb(238,138,26)"/><text x="519.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.20%)</title><rect x="516" y="404" width="3" height="15" fill="rgb(251,98,30)"/><text x="519.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.20%)</title><rect x="516" y="420" width="3" height="15" fill="rgb(219,193,18)"/><text x="519.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:334) (1 samples, 0.20%)</title><rect x="516" y="436" width="3" height="15" fill="rgb(254,112,9)"/><text x="519.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.60%)</title><rect x="514" y="340" width="7" height="15" fill="rgb(219,119,1)"/><text x="517.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.40%)</title><rect x="516" y="356" width="5" height="15" fill="rgb(243,47,31)"/><text x="519.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.40%)</title><rect x="516" y="372" width="5" height="15" fill="rgb(237,4,22)"/><text x="519.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:730) (1 samples, 0.20%)</title><rect x="519" y="388" width="2" height="15" fill="rgb(219,74,4)"/><text x="522.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.20%)</title><rect x="521" y="340" width="2" height="15" fill="rgb(210,42,0)"/><text x="524.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.20%)</title><rect x="521" y="356" width="2" height="15" fill="rgb(205,25,23)"/><text x="524.00" y="366.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.20%)</title><rect x="521" y="372" width="2" height="15" fill="rgb(220,85,28)"/><text x="524.00" y="382.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.20%)</title><rect x="521" y="388" width="2" height="15" fill="rgb(215,188,33)"/><text x="524.00" y="398.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (56 samples, 11.13%)</title><rect x="394" y="196" width="132" height="15" fill="rgb(234,111,4)"/><text x="397.00" y="206.50">_samme_proba (sk..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (52 samples, 10.34%)</title><rect x="404" y="212" width="122" height="15" fill="rgb(229,28,53)"/><text x="407.00" y="222.50">clip (&lt;__array_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (50 samples, 9.94%)</title><rect x="408" y="228" width="118" height="15" fill="rgb(245,66,14)"/><text x="411.00" y="238.50">array_implemen..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (50 samples, 9.94%)</title><rect x="408" y="244" width="118" height="15" fill="rgb(229,220,43)"/><text x="411.00" y="254.50">clip (numpy/co..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (48 samples, 9.54%)</title><rect x="413" y="260" width="113" height="15" fill="rgb(238,157,23)"/><text x="416.00" y="270.50">_wrapfunc (nu..</text></g><g><title>array_clip (methods.c:2381) (48 samples, 9.54%)</title><rect x="413" y="276" width="113" height="15" fill="rgb(234,115,49)"/><text x="416.00" y="286.50">array_clip (m..</text></g><g><title>forward_ndarray_method (methods.c:108) (48 samples, 9.54%)</title><rect x="413" y="292" width="113" height="15" fill="rgb(205,225,42)"/><text x="416.00" y="302.50">forward_ndarr..</text></g><g><title>_clip (numpy/core/_methods.py:129) (7 samples, 1.39%)</title><rect x="509" y="308" width="17" height="15" fill="rgb(205,46,53)"/><text x="512.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (7 samples, 1.39%)</title><rect x="509" y="324" width="17" height="15" fill="rgb(222,23,40)"/><text x="512.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.20%)</title><rect x="523" y="340" width="3" height="15" fill="rgb(227,157,39)"/><text x="526.00" y="350.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.20%)</title><rect x="523" y="356" width="3" height="15" fill="rgb(221,57,10)"/><text x="526.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="526" y="228" width="2" height="15" fill="rgb(246,174,13)"/><text x="529.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.20%)</title><rect x="526" y="244" width="2" height="15" fill="rgb(231,141,20)"/><text x="529.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.20%)</title><rect x="528" y="228" width="2" height="15" fill="rgb(229,33,10)"/><text x="531.00" y="238.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.20%)</title><rect x="528" y="244" width="2" height="15" fill="rgb(211,80,45)"/><text x="531.00" y="254.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (3 samples, 0.60%)</title><rect x="526" y="196" width="7" height="15" fill="rgb(241,114,15)"/><text x="529.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.60%)</title><rect x="526" y="212" width="7" height="15" fill="rgb(241,117,39)"/><text x="529.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="530" y="228" width="3" height="15" fill="rgb(205,128,43)"/><text x="533.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.20%)</title><rect x="530" y="244" width="3" height="15" fill="rgb(219,152,10)"/><text x="533.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.20%)</title><rect x="530" y="260" width="3" height="15" fill="rgb(237,148,2)"/><text x="533.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (1 samples, 0.20%)</title><rect x="530" y="276" width="3" height="15" fill="rgb(205,159,48)"/><text x="533.00" y="286.50"></text></g><g><title>0x7ffae4cf2003 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="530" y="292" width="3" height="15" fill="rgb(226,156,21)"/><text x="533.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:281) (1 samples, 0.20%)</title><rect x="533" y="196" width="2" height="15" fill="rgb(233,119,45)"/><text x="536.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.20%)</title><rect x="544" y="212" width="3" height="15" fill="rgb(249,96,27)"/><text x="547.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.20%)</title><rect x="547" y="212" width="2" height="15" fill="rgb(205,94,3)"/><text x="550.00" y="222.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.20%)</title><rect x="547" y="228" width="2" height="15" fill="rgb(207,10,13)"/><text x="550.00" y="238.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.20%)</title><rect x="547" y="244" width="2" height="15" fill="rgb(232,19,45)"/><text x="550.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.20%)</title><rect x="549" y="276" width="2" height="15" fill="rgb(223,77,50)"/><text x="552.00" y="286.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1796) (1 samples, 0.20%)</title><rect x="549" y="292" width="2" height="15" fill="rgb(227,99,18)"/><text x="552.00" y="302.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.20%)</title><rect x="549" y="308" width="2" height="15" fill="rgb(232,158,26)"/><text x="552.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.40%)</title><rect x="549" y="244" width="5" height="15" fill="rgb(252,101,46)"/><text x="552.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.40%)</title><rect x="549" y="260" width="5" height="15" fill="rgb(249,21,39)"/><text x="552.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1895) (1 samples, 0.20%)</title><rect x="551" y="276" width="3" height="15" fill="rgb(223,144,5)"/><text x="554.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.20%)</title><rect x="551" y="292" width="3" height="15" fill="rgb(249,203,47)"/><text x="554.00" y="302.50"></text></g><g><title>array_multiply (number.c:354) (3 samples, 0.60%)</title><rect x="549" y="212" width="7" height="15" fill="rgb(242,11,14)"/><text x="552.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.60%)</title><rect x="549" y="228" width="7" height="15" fill="rgb(228,106,52)"/><text x="552.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.20%)</title><rect x="554" y="244" width="2" height="15" fill="rgb(223,121,38)"/><text x="557.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.20%)</title><rect x="554" y="260" width="2" height="15" fill="rgb(216,101,4)"/><text x="557.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:61) (1 samples, 0.20%)</title><rect x="554" y="276" width="2" height="15" fill="rgb(233,194,13)"/><text x="557.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.20%)</title><rect x="554" y="292" width="2" height="15" fill="rgb(205,140,13)"/><text x="557.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.20%)</title><rect x="554" y="308" width="2" height="15" fill="rgb(249,120,49)"/><text x="557.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.20%)</title><rect x="556" y="212" width="2" height="15" fill="rgb(244,79,3)"/><text x="559.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.20%)</title><rect x="556" y="228" width="2" height="15" fill="rgb(206,192,8)"/><text x="559.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.20%)</title><rect x="556" y="244" width="2" height="15" fill="rgb(238,162,29)"/><text x="559.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.20%)</title><rect x="556" y="260" width="2" height="15" fill="rgb(216,28,47)"/><text x="559.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.20%)</title><rect x="556" y="276" width="2" height="15" fill="rgb(208,1,50)"/><text x="559.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (1 samples, 0.20%)</title><rect x="558" y="228" width="3" height="15" fill="rgb(244,220,21)"/><text x="561.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="561" y="244" width="2" height="15" fill="rgb(239,18,33)"/><text x="564.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1056) (1 samples, 0.20%)</title><rect x="561" y="260" width="2" height="15" fill="rgb(211,134,23)"/><text x="564.00" y="270.50"></text></g><g><title>0x7ffae4b4014e (libc-2.29.so) (1 samples, 0.20%)</title><rect x="561" y="276" width="2" height="15" fill="rgb(228,29,19)"/><text x="564.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.20%)</title><rect x="563" y="292" width="2" height="15" fill="rgb(224,20,53)"/><text x="566.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="563" y="308" width="2" height="15" fill="rgb(219,49,28)"/><text x="566.00" y="318.50"></text></g><g><title>array_subtract (number.c:342) (4 samples, 0.80%)</title><rect x="558" y="212" width="10" height="15" fill="rgb(209,193,10)"/><text x="561.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.60%)</title><rect x="561" y="228" width="7" height="15" fill="rgb(250,78,49)"/><text x="564.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.40%)</title><rect x="563" y="244" width="5" height="15" fill="rgb(249,185,38)"/><text x="566.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.40%)</title><rect x="563" y="260" width="5" height="15" fill="rgb(249,97,1)"/><text x="566.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.40%)</title><rect x="563" y="276" width="5" height="15" fill="rgb(226,67,45)"/><text x="566.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.20%)</title><rect x="565" y="292" width="3" height="15" fill="rgb(207,5,27)"/><text x="568.00" y="302.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.20%)</title><rect x="568" y="356" width="2" height="15" fill="rgb(236,159,54)"/><text x="571.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.40%)</title><rect x="568" y="340" width="5" height="15" fill="rgb(228,66,5)"/><text x="571.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="570" y="356" width="3" height="15" fill="rgb(211,62,48)"/><text x="573.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.60%)</title><rect x="568" y="260" width="7" height="15" fill="rgb(237,199,15)"/><text x="571.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.60%)</title><rect x="568" y="276" width="7" height="15" fill="rgb(250,180,37)"/><text x="571.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.60%)</title><rect x="568" y="292" width="7" height="15" fill="rgb(232,43,38)"/><text x="571.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.60%)</title><rect x="568" y="308" width="7" height="15" fill="rgb(215,158,48)"/><text x="571.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.60%)</title><rect x="568" y="324" width="7" height="15" fill="rgb(234,216,45)"/><text x="571.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.20%)</title><rect x="573" y="340" width="2" height="15" fill="rgb(245,37,20)"/><text x="576.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.20%)</title><rect x="575" y="276" width="2" height="15" fill="rgb(225,60,45)"/><text x="578.00" y="286.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.20%)</title><rect x="575" y="292" width="2" height="15" fill="rgb(217,109,41)"/><text x="578.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3635) (1 samples, 0.20%)</title><rect x="577" y="292" width="3" height="15" fill="rgb(208,112,35)"/><text x="580.00" y="302.50"></text></g><g><title>_get_identity (ufunc_object.c:2486) (1 samples, 0.20%)</title><rect x="577" y="308" width="3" height="15" fill="rgb(241,28,30)"/><text x="580.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.20%)</title><rect x="580" y="308" width="2" height="15" fill="rgb(241,207,18)"/><text x="583.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.20%)</title><rect x="580" y="324" width="2" height="15" fill="rgb(245,205,33)"/><text x="583.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.20%)</title><rect x="580" y="340" width="2" height="15" fill="rgb(232,77,45)"/><text x="583.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="580" y="356" width="2" height="15" fill="rgb(212,35,20)"/><text x="583.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.20%)</title><rect x="580" y="372" width="2" height="15" fill="rgb(251,197,45)"/><text x="583.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.20%)</title><rect x="580" y="388" width="2" height="15" fill="rgb(224,136,18)"/><text x="583.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.20%)</title><rect x="582" y="308" width="2" height="15" fill="rgb(241,49,3)"/><text x="585.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.20%)</title><rect x="582" y="324" width="2" height="15" fill="rgb(233,51,48)"/><text x="585.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.20%)</title><rect x="582" y="340" width="2" height="15" fill="rgb(218,26,2)"/><text x="585.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.20%)</title><rect x="582" y="356" width="2" height="15" fill="rgb(247,129,10)"/><text x="585.00" y="366.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.20%)</title><rect x="582" y="372" width="2" height="15" fill="rgb(205,174,8)"/><text x="585.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.20%)</title><rect x="584" y="308" width="3" height="15" fill="rgb(212,22,33)"/><text x="587.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.20%)</title><rect x="584" y="324" width="3" height="15" fill="rgb(232,11,12)"/><text x="587.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.20%)</title><rect x="584" y="340" width="3" height="15" fill="rgb(236,201,15)"/><text x="587.00" y="350.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1837) (1 samples, 0.20%)</title><rect x="584" y="356" width="3" height="15" fill="rgb(236,118,2)"/><text x="587.00" y="366.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (23 samples, 4.57%)</title><rect x="535" y="196" width="54" height="15" fill="rgb(218,23,19)"/><text x="538.00" y="206.50">_samm..</text></g><g><title>array_sum (methods.c:2215) (9 samples, 1.79%)</title><rect x="568" y="212" width="21" height="15" fill="rgb(250,163,16)"/><text x="571.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 1.79%)</title><rect x="568" y="228" width="21" height="15" fill="rgb(254,48,14)"/><text x="571.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (9 samples, 1.79%)</title><rect x="568" y="244" width="21" height="15" fill="rgb(237,125,0)"/><text x="571.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 1.19%)</title><rect x="575" y="260" width="14" height="15" fill="rgb(218,169,1)"/><text x="578.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.99%)</title><rect x="577" y="276" width="12" height="15" fill="rgb(239,97,14)"/><text x="580.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.80%)</title><rect x="580" y="292" width="9" height="15" fill="rgb(243,76,13)"/><text x="583.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:595) (1 samples, 0.20%)</title><rect x="587" y="308" width="2" height="15" fill="rgb(234,105,42)"/><text x="590.00" y="318.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c:1054) (1 samples, 0.20%)</title><rect x="587" y="324" width="2" height="15" fill="rgb(239,174,31)"/><text x="590.00" y="334.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (180 samples, 35.79%)</title><rect x="169" y="180" width="422" height="15" fill="rgb(216,194,5)"/><text x="172.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="589" y="196" width="2" height="15" fill="rgb(223,225,36)"/><text x="592.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="589" y="212" width="2" height="15" fill="rgb(241,119,6)"/><text x="592.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.20%)</title><rect x="589" y="228" width="2" height="15" fill="rgb(229,229,11)"/><text x="592.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="591" y="212" width="3" height="15" fill="rgb(237,40,42)"/><text x="594.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.20%)</title><rect x="591" y="228" width="3" height="15" fill="rgb(228,9,32)"/><text x="594.00" y="238.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.20%)</title><rect x="591" y="244" width="3" height="15" fill="rgb(245,213,39)"/><text x="594.00" y="254.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (182 samples, 36.18%)</title><rect x="169" y="148" width="427" height="15" fill="rgb(244,95,0)"/><text x="172.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py:808)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (182 samples, 36.18%)</title><rect x="169" y="164" width="427" height="15" fill="rgb(250,222,53)"/><text x="172.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py:69..</text></g><g><title>array_add (number.c:330) (2 samples, 0.40%)</title><rect x="591" y="180" width="5" height="15" fill="rgb(233,149,48)"/><text x="594.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.40%)</title><rect x="591" y="196" width="5" height="15" fill="rgb(238,154,25)"/><text x="594.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="594" y="212" width="2" height="15" fill="rgb(213,111,26)"/><text x="597.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.20%)</title><rect x="594" y="228" width="2" height="15" fill="rgb(250,159,27)"/><text x="597.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="594" y="244" width="2" height="15" fill="rgb(213,149,43)"/><text x="597.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.20%)</title><rect x="594" y="260" width="2" height="15" fill="rgb(248,18,13)"/><text x="597.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.20%)</title><rect x="594" y="276" width="2" height="15" fill="rgb(220,103,23)"/><text x="597.00" y="286.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (1 samples, 0.20%)</title><rect x="596" y="180" width="2" height="15" fill="rgb(240,73,49)"/><text x="599.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="596" y="196" width="2" height="15" fill="rgb(230,204,49)"/><text x="599.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="596" y="212" width="2" height="15" fill="rgb(240,171,3)"/><text x="599.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (1 samples, 0.20%)</title><rect x="596" y="228" width="2" height="15" fill="rgb(207,66,8)"/><text x="599.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.20%)</title><rect x="596" y="244" width="2" height="15" fill="rgb(240,195,51)"/><text x="599.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.20%)</title><rect x="596" y="260" width="2" height="15" fill="rgb(218,228,49)"/><text x="599.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.20%)</title><rect x="596" y="276" width="2" height="15" fill="rgb(249,196,52)"/><text x="599.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.20%)</title><rect x="596" y="292" width="2" height="15" fill="rgb(218,194,26)"/><text x="599.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.20%)</title><rect x="596" y="308" width="2" height="15" fill="rgb(215,90,4)"/><text x="599.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.20%)</title><rect x="596" y="324" width="2" height="15" fill="rgb(249,32,30)"/><text x="599.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.20%)</title><rect x="596" y="340" width="2" height="15" fill="rgb(239,65,24)"/><text x="599.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="596" y="356" width="2" height="15" fill="rgb(216,58,25)"/><text x="599.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.20%)</title><rect x="596" y="372" width="2" height="15" fill="rgb(252,148,2)"/><text x="599.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.20%)</title><rect x="596" y="388" width="2" height="15" fill="rgb(205,162,25)"/><text x="599.00" y="398.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:612) (1 samples, 0.20%)</title><rect x="598" y="180" width="3" height="15" fill="rgb(237,15,48)"/><text x="601.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="598" y="196" width="3" height="15" fill="rgb(248,183,7)"/><text x="601.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="598" y="212" width="3" height="15" fill="rgb(236,84,22)"/><text x="601.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.20%)</title><rect x="598" y="228" width="3" height="15" fill="rgb(239,190,42)"/><text x="601.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.20%)</title><rect x="598" y="244" width="3" height="15" fill="rgb(241,112,33)"/><text x="601.00" y="254.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.20%)</title><rect x="598" y="260" width="3" height="15" fill="rgb(215,28,23)"/><text x="601.00" y="270.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:246) (1 samples, 0.20%)</title><rect x="598" y="276" width="3" height="15" fill="rgb(239,184,13)"/><text x="601.00" y="286.50"></text></g><g><title>sse2_binary_scalar2_subtract_DOUBLE (simd.inc.src:778) (1 samples, 0.20%)</title><rect x="598" y="292" width="3" height="15" fill="rgb(209,211,21)"/><text x="601.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:38) (251 samples, 49.90%)</title><rect x="14" y="52" width="589" height="15" fill="rgb(229,220,27)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:37) (251 samples, 49.90%)</title><rect x="14" y="68" width="589" height="15" fill="rgb(246,136,19)"/><text x="17.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:29) (249 samples, 49.50%)</title><rect x="19" y="84" width="584" height="15" fill="rgb(215,153,38)"/><text x="22.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:23) (185 samples, 36.78%)</title><rect x="169" y="100" width="434" height="15" fill="rgb(254,100,32)"/><text x="172.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (185 samples, 36.78%)</title><rect x="169" y="116" width="434" height="15" fill="rgb(251,114,54)"/><text x="172.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (185 samples, 36.78%)</title><rect x="169" y="132" width="434" height="15" fill="rgb(228,136,1)"/><text x="172.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (3 samples, 0.60%)</title><rect x="596" y="148" width="7" height="15" fill="rgb(242,171,24)"/><text x="599.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (3 samples, 0.60%)</title><rect x="596" y="164" width="7" height="15" fill="rgb(225,214,36)"/><text x="599.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (1 samples, 0.20%)</title><rect x="601" y="180" width="2" height="15" fill="rgb(208,4,54)"/><text x="604.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="601" y="196" width="2" height="15" fill="rgb(238,185,54)"/><text x="604.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="601" y="212" width="2" height="15" fill="rgb(234,227,34)"/><text x="604.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.20%)</title><rect x="601" y="228" width="2" height="15" fill="rgb(236,195,8)"/><text x="604.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.20%)</title><rect x="601" y="244" width="2" height="15" fill="rgb(231,163,54)"/><text x="604.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.20%)</title><rect x="601" y="260" width="2" height="15" fill="rgb(231,77,10)"/><text x="604.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.20%)</title><rect x="601" y="276" width="2" height="15" fill="rgb(245,170,25)"/><text x="604.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.20%)</title><rect x="601" y="292" width="2" height="15" fill="rgb(244,56,41)"/><text x="604.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.20%)</title><rect x="601" y="308" width="2" height="15" fill="rgb(254,155,22)"/><text x="604.00" y="318.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.20%)</title><rect x="603" y="372" width="2" height="15" fill="rgb(250,31,3)"/><text x="606.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="603" y="388" width="2" height="15" fill="rgb(211,29,4)"/><text x="606.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="603" y="404" width="2" height="15" fill="rgb(253,162,31)"/><text x="606.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="603" y="420" width="2" height="15" fill="rgb(220,5,5)"/><text x="606.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="603" y="436" width="2" height="15" fill="rgb(206,92,47)"/><text x="606.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="603" y="452" width="2" height="15" fill="rgb(245,114,38)"/><text x="606.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="603" y="468" width="2" height="15" fill="rgb(244,225,22)"/><text x="606.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="603" y="484" width="2" height="15" fill="rgb(237,131,31)"/><text x="606.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.20%)</title><rect x="603" y="500" width="2" height="15" fill="rgb(245,112,45)"/><text x="606.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="603" y="516" width="2" height="15" fill="rgb(253,98,45)"/><text x="606.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="603" y="532" width="2" height="15" fill="rgb(232,61,53)"/><text x="606.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="603" y="548" width="2" height="15" fill="rgb(235,59,54)"/><text x="606.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="603" y="564" width="2" height="15" fill="rgb(226,127,21)"/><text x="606.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="603" y="580" width="2" height="15" fill="rgb(225,16,6)"/><text x="606.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="603" y="596" width="2" height="15" fill="rgb(228,103,40)"/><text x="606.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="603" y="612" width="2" height="15" fill="rgb(226,158,52)"/><text x="606.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:7) (1 samples, 0.20%)</title><rect x="603" y="628" width="2" height="15" fill="rgb(225,151,23)"/><text x="606.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="603" y="644" width="2" height="15" fill="rgb(207,173,38)"/><text x="606.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="603" y="660" width="2" height="15" fill="rgb(235,43,2)"/><text x="606.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.20%)</title><rect x="603" y="676" width="2" height="15" fill="rgb(219,54,30)"/><text x="606.00" y="686.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.20%)</title><rect x="603" y="692" width="2" height="15" fill="rgb(249,129,11)"/><text x="606.00" y="702.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.20%)</title><rect x="603" y="708" width="2" height="15" fill="rgb(206,74,12)"/><text x="606.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="603" y="724" width="2" height="15" fill="rgb(212,43,53)"/><text x="606.00" y="734.50"></text></g><g><title>PyInit__multiarray_umath (multiarraymodule.c:4595) (1 samples, 0.20%)</title><rect x="603" y="740" width="2" height="15" fill="rgb(208,217,26)"/><text x="606.00" y="750.50"></text></g><g><title>numpy_pydatetime_import (datetime.c:36) (1 samples, 0.20%)</title><rect x="603" y="756" width="2" height="15" fill="rgb(250,15,17)"/><text x="606.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="603" y="772" width="2" height="15" fill="rgb(220,220,38)"/><text x="606.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="603" y="788" width="2" height="15" fill="rgb(229,27,28)"/><text x="606.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="603" y="804" width="2" height="15" fill="rgb(231,25,11)"/><text x="606.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.20%)</title><rect x="603" y="820" width="2" height="15" fill="rgb(220,146,20)"/><text x="606.00" y="830.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.20%)</title><rect x="603" y="836" width="2" height="15" fill="rgb(243,10,54)"/><text x="606.00" y="846.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.20%)</title><rect x="603" y="852" width="2" height="15" fill="rgb(252,90,38)"/><text x="606.00" y="862.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:1) (2 samples, 0.40%)</title><rect x="603" y="148" width="5" height="15" fill="rgb(235,12,48)"/><text x="606.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="603" y="164" width="5" height="15" fill="rgb(224,205,52)"/><text x="606.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="603" y="180" width="5" height="15" fill="rgb(246,168,12)"/><text x="606.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="603" y="196" width="5" height="15" fill="rgb(228,66,1)"/><text x="606.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="603" y="212" width="5" height="15" fill="rgb(230,218,45)"/><text x="606.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="603" y="228" width="5" height="15" fill="rgb(243,54,46)"/><text x="606.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (2 samples, 0.40%)</title><rect x="603" y="244" width="5" height="15" fill="rgb(210,203,41)"/><text x="606.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.40%)</title><rect x="603" y="260" width="5" height="15" fill="rgb(240,221,5)"/><text x="606.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="603" y="276" width="5" height="15" fill="rgb(218,131,13)"/><text x="606.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="603" y="292" width="5" height="15" fill="rgb(244,21,2)"/><text x="606.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="603" y="308" width="5" height="15" fill="rgb(217,76,7)"/><text x="606.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="603" y="324" width="5" height="15" fill="rgb(246,112,54)"/><text x="606.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="603" y="340" width="5" height="15" fill="rgb(238,172,2)"/><text x="606.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="603" y="356" width="5" height="15" fill="rgb(213,130,39)"/><text x="606.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:88) (1 samples, 0.20%)</title><rect x="605" y="372" width="3" height="15" fill="rgb(219,78,39)"/><text x="608.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="605" y="388" width="3" height="15" fill="rgb(216,75,20)"/><text x="608.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="605" y="404" width="3" height="15" fill="rgb(240,138,6)"/><text x="608.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="605" y="420" width="3" height="15" fill="rgb(222,32,3)"/><text x="608.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="605" y="436" width="3" height="15" fill="rgb(213,28,47)"/><text x="608.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.20%)</title><rect x="605" y="452" width="3" height="15" fill="rgb(211,178,30)"/><text x="608.00" y="462.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.20%)</title><rect x="605" y="468" width="3" height="15" fill="rgb(231,85,13)"/><text x="608.00" y="478.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.20%)</title><rect x="605" y="484" width="3" height="15" fill="rgb(212,105,39)"/><text x="608.00" y="494.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.20%)</title><rect x="605" y="500" width="3" height="15" fill="rgb(246,60,21)"/><text x="608.00" y="510.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:370) (1 samples, 0.20%)</title><rect x="605" y="516" width="3" height="15" fill="rgb(208,108,2)"/><text x="608.00" y="526.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.20%)</title><rect x="608" y="852" width="2" height="15" fill="rgb(226,159,34)"/><text x="611.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.20%)</title><rect x="608" y="868" width="2" height="15" fill="rgb(234,212,36)"/><text x="611.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.20%)</title><rect x="608" y="884" width="2" height="15" fill="rgb(248,167,49)"/><text x="611.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.20%)</title><rect x="608" y="900" width="2" height="15" fill="rgb(219,154,22)"/><text x="611.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.20%)</title><rect x="608" y="916" width="2" height="15" fill="rgb(228,26,28)"/><text x="611.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.20%)</title><rect x="608" y="932" width="2" height="15" fill="rgb(215,46,11)"/><text x="611.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.20%)</title><rect x="608" y="948" width="2" height="15" fill="rgb(230,12,33)"/><text x="611.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.20%)</title><rect x="608" y="964" width="2" height="15" fill="rgb(209,188,1)"/><text x="611.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.20%)</title><rect x="608" y="980" width="2" height="15" fill="rgb(215,40,23)"/><text x="611.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.20%)</title><rect x="608" y="996" width="2" height="15" fill="rgb(240,216,42)"/><text x="611.00" y="1006.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:248) (1 samples, 0.20%)</title><rect x="608" y="1012" width="2" height="15" fill="rgb(235,83,37)"/><text x="611.00" y="1022.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.20%)</title><rect x="608" y="1028" width="2" height="15" fill="rgb(223,7,54)"/><text x="611.00" y="1038.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:248) (1 samples, 0.20%)</title><rect x="608" y="1044" width="2" height="15" fill="rgb(244,149,52)"/><text x="611.00" y="1054.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.20%)</title><rect x="608" y="1060" width="2" height="15" fill="rgb(210,138,43)"/><text x="611.00" y="1070.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.40%)</title><rect x="608" y="820" width="4" height="15" fill="rgb(227,69,21)"/><text x="611.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.40%)</title><rect x="608" y="836" width="4" height="15" fill="rgb(214,77,3)"/><text x="611.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.20%)</title><rect x="610" y="852" width="2" height="15" fill="rgb(245,64,49)"/><text x="613.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.20%)</title><rect x="610" y="868" width="2" height="15" fill="rgb(249,188,15)"/><text x="613.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.20%)</title><rect x="610" y="884" width="2" height="15" fill="rgb(205,82,16)"/><text x="613.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.20%)</title><rect x="610" y="900" width="2" height="15" fill="rgb(251,33,49)"/><text x="613.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.20%)</title><rect x="610" y="916" width="2" height="15" fill="rgb(247,219,41)"/><text x="613.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.20%)</title><rect x="610" y="932" width="2" height="15" fill="rgb(227,41,32)"/><text x="613.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.20%)</title><rect x="610" y="948" width="2" height="15" fill="rgb(226,30,35)"/><text x="613.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.20%)</title><rect x="610" y="964" width="2" height="15" fill="rgb(236,139,28)"/><text x="613.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:153) (1 samples, 0.20%)</title><rect x="610" y="980" width="2" height="15" fill="rgb(245,118,8)"/><text x="613.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:2) (3 samples, 0.60%)</title><rect x="608" y="148" width="7" height="15" fill="rgb(209,215,43)"/><text x="611.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="608" y="164" width="7" height="15" fill="rgb(234,162,54)"/><text x="611.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.60%)</title><rect x="608" y="180" width="7" height="15" fill="rgb(238,33,50)"/><text x="611.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="608" y="196" width="7" height="15" fill="rgb(243,67,33)"/><text x="611.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="608" y="212" width="7" height="15" fill="rgb(217,44,35)"/><text x="611.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="608" y="228" width="7" height="15" fill="rgb(234,206,48)"/><text x="611.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="608" y="244" width="7" height="15" fill="rgb(232,67,2)"/><text x="611.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="608" y="260" width="7" height="15" fill="rgb(212,154,52)"/><text x="611.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="608" y="276" width="7" height="15" fill="rgb(244,172,14)"/><text x="611.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.60%)</title><rect x="608" y="292" width="7" height="15" fill="rgb(229,31,21)"/><text x="611.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="608" y="308" width="7" height="15" fill="rgb(232,221,51)"/><text x="611.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="608" y="324" width="7" height="15" fill="rgb(220,24,17)"/><text x="611.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="608" y="340" width="7" height="15" fill="rgb(220,208,40)"/><text x="611.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="608" y="356" width="7" height="15" fill="rgb(224,102,27)"/><text x="611.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="608" y="372" width="7" height="15" fill="rgb(242,37,20)"/><text x="611.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.60%)</title><rect x="608" y="388" width="7" height="15" fill="rgb(228,225,19)"/><text x="611.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="608" y="404" width="7" height="15" fill="rgb(252,15,16)"/><text x="611.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="608" y="420" width="7" height="15" fill="rgb(227,172,9)"/><text x="611.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="608" y="436" width="7" height="15" fill="rgb(250,66,53)"/><text x="611.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="608" y="452" width="7" height="15" fill="rgb(245,10,7)"/><text x="611.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="608" y="468" width="7" height="15" fill="rgb(223,50,46)"/><text x="611.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.60%)</title><rect x="608" y="484" width="7" height="15" fill="rgb(223,37,51)"/><text x="611.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="608" y="500" width="7" height="15" fill="rgb(223,99,10)"/><text x="611.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="608" y="516" width="7" height="15" fill="rgb(247,97,41)"/><text x="611.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="608" y="532" width="7" height="15" fill="rgb(227,187,48)"/><text x="611.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="608" y="548" width="7" height="15" fill="rgb(238,223,26)"/><text x="611.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="608" y="564" width="7" height="15" fill="rgb(230,134,31)"/><text x="611.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.60%)</title><rect x="608" y="580" width="7" height="15" fill="rgb(216,181,14)"/><text x="611.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="608" y="596" width="7" height="15" fill="rgb(238,191,2)"/><text x="611.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.60%)</title><rect x="608" y="612" width="7" height="15" fill="rgb(238,117,24)"/><text x="611.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="608" y="628" width="7" height="15" fill="rgb(218,174,51)"/><text x="611.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="608" y="644" width="7" height="15" fill="rgb(216,44,7)"/><text x="611.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="608" y="660" width="7" height="15" fill="rgb(205,157,10)"/><text x="611.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="608" y="676" width="7" height="15" fill="rgb(250,135,5)"/><text x="611.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="608" y="692" width="7" height="15" fill="rgb(215,47,30)"/><text x="611.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="608" y="708" width="7" height="15" fill="rgb(217,27,29)"/><text x="611.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.60%)</title><rect x="608" y="724" width="7" height="15" fill="rgb(207,197,25)"/><text x="611.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="608" y="740" width="7" height="15" fill="rgb(232,44,11)"/><text x="611.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="608" y="756" width="7" height="15" fill="rgb(213,135,38)"/><text x="611.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="608" y="772" width="7" height="15" fill="rgb(222,127,45)"/><text x="611.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="608" y="788" width="7" height="15" fill="rgb(230,211,40)"/><text x="611.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="608" y="804" width="7" height="15" fill="rgb(228,117,17)"/><text x="611.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.20%)</title><rect x="612" y="820" width="3" height="15" fill="rgb(250,10,51)"/><text x="615.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="612" y="836" width="3" height="15" fill="rgb(215,163,27)"/><text x="615.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="612" y="852" width="3" height="15" fill="rgb(229,221,38)"/><text x="615.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="612" y="868" width="3" height="15" fill="rgb(221,19,53)"/><text x="615.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="612" y="884" width="3" height="15" fill="rgb(217,42,41)"/><text x="615.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="612" y="900" width="3" height="15" fill="rgb(225,224,28)"/><text x="615.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.20%)</title><rect x="612" y="916" width="3" height="15" fill="rgb(246,95,11)"/><text x="615.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="612" y="932" width="3" height="15" fill="rgb(251,159,53)"/><text x="615.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="612" y="948" width="3" height="15" fill="rgb(236,53,43)"/><text x="615.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.20%)</title><rect x="612" y="964" width="3" height="15" fill="rgb(234,221,42)"/><text x="615.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.20%)</title><rect x="612" y="980" width="3" height="15" fill="rgb(240,126,54)"/><text x="615.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.20%)</title><rect x="612" y="996" width="3" height="15" fill="rgb(248,113,54)"/><text x="615.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="612" y="1012" width="3" height="15" fill="rgb(231,14,19)"/><text x="615.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="612" y="1028" width="3" height="15" fill="rgb(243,181,20)"/><text x="615.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="612" y="1044" width="3" height="15" fill="rgb(218,197,11)"/><text x="615.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="612" y="1060" width="3" height="15" fill="rgb(251,105,33)"/><text x="615.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="612" y="1076" width="3" height="15" fill="rgb(249,196,17)"/><text x="615.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:83) (1 samples, 0.20%)</title><rect x="612" y="1092" width="3" height="15" fill="rgb(229,102,18)"/><text x="615.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="612" y="1108" width="3" height="15" fill="rgb(241,50,35)"/><text x="615.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.20%)</title><rect x="612" y="1124" width="3" height="15" fill="rgb(232,126,52)"/><text x="615.00" y="1134.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.20%)</title><rect x="612" y="1140" width="3" height="15" fill="rgb(217,67,29)"/><text x="615.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.20%)</title><rect x="612" y="1156" width="3" height="15" fill="rgb(232,89,20)"/><text x="615.00" y="1166.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.20%)</title><rect x="612" y="1172" width="3" height="15" fill="rgb(245,215,12)"/><text x="615.00" y="1182.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.20%)</title><rect x="612" y="1188" width="3" height="15" fill="rgb(207,184,17)"/><text x="615.00" y="1198.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.20%)</title><rect x="612" y="1204" width="3" height="15" fill="rgb(209,133,25)"/><text x="615.00" y="1214.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:586) (1 samples, 0.20%)</title><rect x="612" y="1220" width="3" height="15" fill="rgb(230,129,52)"/><text x="615.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.20%)</title><rect x="615" y="900" width="2" height="15" fill="rgb(219,149,46)"/><text x="618.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="615" y="916" width="2" height="15" fill="rgb(241,21,1)"/><text x="618.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="615" y="932" width="2" height="15" fill="rgb(221,31,6)"/><text x="618.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="615" y="948" width="2" height="15" fill="rgb(213,67,27)"/><text x="618.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="615" y="964" width="2" height="15" fill="rgb(222,15,34)"/><text x="618.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="615" y="980" width="2" height="15" fill="rgb(216,187,25)"/><text x="618.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:27) (1 samples, 0.20%)</title><rect x="615" y="996" width="2" height="15" fill="rgb(252,129,37)"/><text x="618.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="615" y="1012" width="2" height="15" fill="rgb(242,168,22)"/><text x="618.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="615" y="1028" width="2" height="15" fill="rgb(232,39,23)"/><text x="618.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="615" y="1044" width="2" height="15" fill="rgb(247,64,3)"/><text x="618.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="615" y="1060" width="2" height="15" fill="rgb(248,76,0)"/><text x="618.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="615" y="1076" width="2" height="15" fill="rgb(245,63,33)"/><text x="618.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="615" y="1092" width="2" height="15" fill="rgb(253,19,22)"/><text x="618.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="615" y="1108" width="2" height="15" fill="rgb(220,101,9)"/><text x="618.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py:93) (1 samples, 0.20%)</title><rect x="615" y="1124" width="2" height="15" fill="rgb(238,21,5)"/><text x="618.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="615" y="1140" width="2" height="15" fill="rgb(206,20,28)"/><text x="618.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="615" y="1156" width="2" height="15" fill="rgb(214,41,24)"/><text x="618.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="615" y="1172" width="2" height="15" fill="rgb(243,220,39)"/><text x="618.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.20%)</title><rect x="615" y="1188" width="2" height="15" fill="rgb(228,154,28)"/><text x="618.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.20%)</title><rect x="615" y="1204" width="2" height="15" fill="rgb(247,178,47)"/><text x="618.00" y="1214.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.20%)</title><rect x="615" y="1220" width="2" height="15" fill="rgb(224,138,34)"/><text x="618.00" y="1230.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="615" y="1236" width="2" height="15" fill="rgb(248,192,13)"/><text x="618.00" y="1246.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.40%)</title><rect x="615" y="676" width="4" height="15" fill="rgb(236,181,36)"/><text x="618.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="615" y="692" width="4" height="15" fill="rgb(213,228,44)"/><text x="618.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="615" y="708" width="4" height="15" fill="rgb(218,85,36)"/><text x="618.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="615" y="724" width="4" height="15" fill="rgb(229,98,44)"/><text x="618.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="615" y="740" width="4" height="15" fill="rgb(212,30,36)"/><text x="618.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="615" y="756" width="4" height="15" fill="rgb(236,147,34)"/><text x="618.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.40%)</title><rect x="615" y="772" width="4" height="15" fill="rgb(245,97,19)"/><text x="618.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.40%)</title><rect x="615" y="788" width="4" height="15" fill="rgb(208,192,3)"/><text x="618.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="615" y="804" width="4" height="15" fill="rgb(248,125,7)"/><text x="618.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="615" y="820" width="4" height="15" fill="rgb(224,154,22)"/><text x="618.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="615" y="836" width="4" height="15" fill="rgb(215,10,34)"/><text x="618.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="615" y="852" width="4" height="15" fill="rgb(253,72,22)"/><text x="618.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="615" y="868" width="4" height="15" fill="rgb(210,81,2)"/><text x="618.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="615" y="884" width="4" height="15" fill="rgb(207,93,40)"/><text x="618.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.20%)</title><rect x="617" y="900" width="2" height="15" fill="rgb(222,115,46)"/><text x="620.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="617" y="916" width="2" height="15" fill="rgb(250,63,1)"/><text x="620.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="617" y="932" width="2" height="15" fill="rgb(252,28,53)"/><text x="620.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="617" y="948" width="2" height="15" fill="rgb(225,63,18)"/><text x="620.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="617" y="964" width="2" height="15" fill="rgb(243,208,41)"/><text x="620.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="617" y="980" width="2" height="15" fill="rgb(247,138,40)"/><text x="620.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="617" y="996" width="2" height="15" fill="rgb(230,204,26)"/><text x="620.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="617" y="1012" width="2" height="15" fill="rgb(251,76,13)"/><text x="620.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:280) (1 samples, 0.20%)</title><rect x="617" y="1028" width="2" height="15" fill="rgb(233,196,40)"/><text x="620.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.20%)</title><rect x="617" y="1044" width="2" height="15" fill="rgb(239,224,38)"/><text x="620.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.20%)</title><rect x="617" y="1060" width="2" height="15" fill="rgb(239,58,19)"/><text x="620.00" y="1070.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:4) (3 samples, 0.60%)</title><rect x="615" y="148" width="7" height="15" fill="rgb(209,62,24)"/><text x="618.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="615" y="164" width="7" height="15" fill="rgb(228,27,29)"/><text x="618.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.60%)</title><rect x="615" y="180" width="7" height="15" fill="rgb(222,52,29)"/><text x="618.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="615" y="196" width="7" height="15" fill="rgb(217,84,39)"/><text x="618.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="615" y="212" width="7" height="15" fill="rgb(245,17,4)"/><text x="618.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="615" y="228" width="7" height="15" fill="rgb(215,112,10)"/><text x="618.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="615" y="244" width="7" height="15" fill="rgb(208,219,0)"/><text x="618.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="615" y="260" width="7" height="15" fill="rgb(222,141,51)"/><text x="618.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="615" y="276" width="7" height="15" fill="rgb(245,129,45)"/><text x="618.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.60%)</title><rect x="615" y="292" width="7" height="15" fill="rgb(253,67,16)"/><text x="618.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="615" y="308" width="7" height="15" fill="rgb(219,97,29)"/><text x="618.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="615" y="324" width="7" height="15" fill="rgb(245,108,5)"/><text x="618.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="615" y="340" width="7" height="15" fill="rgb(211,108,24)"/><text x="618.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="615" y="356" width="7" height="15" fill="rgb(215,198,47)"/><text x="618.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="615" y="372" width="7" height="15" fill="rgb(251,111,24)"/><text x="618.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.60%)</title><rect x="615" y="388" width="7" height="15" fill="rgb(254,25,46)"/><text x="618.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="615" y="404" width="7" height="15" fill="rgb(237,76,45)"/><text x="618.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="615" y="420" width="7" height="15" fill="rgb(223,65,8)"/><text x="618.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="615" y="436" width="7" height="15" fill="rgb(239,179,52)"/><text x="618.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="615" y="452" width="7" height="15" fill="rgb(232,124,40)"/><text x="618.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="615" y="468" width="7" height="15" fill="rgb(235,220,21)"/><text x="618.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 0.60%)</title><rect x="615" y="484" width="7" height="15" fill="rgb(224,113,5)"/><text x="618.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="615" y="500" width="7" height="15" fill="rgb(227,228,15)"/><text x="618.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="615" y="516" width="7" height="15" fill="rgb(234,89,10)"/><text x="618.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="615" y="532" width="7" height="15" fill="rgb(228,203,6)"/><text x="618.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="615" y="548" width="7" height="15" fill="rgb(224,70,1)"/><text x="618.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="615" y="564" width="7" height="15" fill="rgb(236,53,25)"/><text x="618.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.60%)</title><rect x="615" y="580" width="7" height="15" fill="rgb(208,176,26)"/><text x="618.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="615" y="596" width="7" height="15" fill="rgb(214,195,27)"/><text x="618.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="615" y="612" width="7" height="15" fill="rgb(231,161,39)"/><text x="618.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="615" y="628" width="7" height="15" fill="rgb(207,61,27)"/><text x="618.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="615" y="644" width="7" height="15" fill="rgb(212,133,10)"/><text x="618.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="615" y="660" width="7" height="15" fill="rgb(234,89,17)"/><text x="618.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:384) (1 samples, 0.20%)</title><rect x="619" y="676" width="3" height="15" fill="rgb(240,207,45)"/><text x="622.00" y="686.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="619" y="692" width="3" height="15" fill="rgb(206,112,27)"/><text x="622.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="619" y="708" width="3" height="15" fill="rgb(252,130,11)"/><text x="622.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="619" y="724" width="3" height="15" fill="rgb(248,94,11)"/><text x="622.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="619" y="740" width="3" height="15" fill="rgb(254,75,32)"/><text x="622.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="619" y="756" width="3" height="15" fill="rgb(244,13,27)"/><text x="622.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.20%)</title><rect x="619" y="772" width="3" height="15" fill="rgb(251,224,39)"/><text x="622.00" y="782.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.20%)</title><rect x="619" y="788" width="3" height="15" fill="rgb(233,14,25)"/><text x="622.00" y="798.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.20%)</title><rect x="619" y="804" width="3" height="15" fill="rgb(210,172,13)"/><text x="622.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.20%)</title><rect x="622" y="484" width="2" height="15" fill="rgb(216,70,0)"/><text x="625.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="622" y="500" width="2" height="15" fill="rgb(229,166,5)"/><text x="625.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="622" y="516" width="2" height="15" fill="rgb(224,179,53)"/><text x="625.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="622" y="532" width="2" height="15" fill="rgb(247,211,18)"/><text x="625.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="622" y="548" width="2" height="15" fill="rgb(205,119,24)"/><text x="625.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="622" y="564" width="2" height="15" fill="rgb(222,89,29)"/><text x="625.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.20%)</title><rect x="622" y="580" width="2" height="15" fill="rgb(206,87,6)"/><text x="625.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="622" y="596" width="2" height="15" fill="rgb(225,165,17)"/><text x="625.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="622" y="612" width="2" height="15" fill="rgb(209,33,0)"/><text x="625.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="622" y="628" width="2" height="15" fill="rgb(235,106,46)"/><text x="625.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="622" y="644" width="2" height="15" fill="rgb(208,67,4)"/><text x="625.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="622" y="660" width="2" height="15" fill="rgb(238,111,1)"/><text x="625.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.20%)</title><rect x="622" y="676" width="2" height="15" fill="rgb(216,8,40)"/><text x="625.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="622" y="692" width="2" height="15" fill="rgb(245,166,7)"/><text x="625.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="622" y="708" width="2" height="15" fill="rgb(221,170,38)"/><text x="625.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="622" y="724" width="2" height="15" fill="rgb(238,186,53)"/><text x="625.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="622" y="740" width="2" height="15" fill="rgb(224,53,9)"/><text x="625.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="622" y="756" width="2" height="15" fill="rgb(224,213,5)"/><text x="625.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.20%)</title><rect x="622" y="772" width="2" height="15" fill="rgb(205,28,23)"/><text x="625.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="622" y="788" width="2" height="15" fill="rgb(217,61,29)"/><text x="625.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="622" y="804" width="2" height="15" fill="rgb(224,85,7)"/><text x="625.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="622" y="820" width="2" height="15" fill="rgb(230,208,4)"/><text x="625.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="622" y="836" width="2" height="15" fill="rgb(211,122,25)"/><text x="625.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="622" y="852" width="2" height="15" fill="rgb(220,168,44)"/><text x="625.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.20%)</title><rect x="622" y="868" width="2" height="15" fill="rgb(246,18,3)"/><text x="625.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="622" y="884" width="2" height="15" fill="rgb(212,91,46)"/><text x="625.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="622" y="900" width="2" height="15" fill="rgb(227,201,19)"/><text x="625.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="622" y="916" width="2" height="15" fill="rgb(237,157,33)"/><text x="625.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="622" y="932" width="2" height="15" fill="rgb(232,141,32)"/><text x="625.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="622" y="948" width="2" height="15" fill="rgb(243,224,45)"/><text x="625.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.20%)</title><rect x="622" y="964" width="2" height="15" fill="rgb(205,161,52)"/><text x="625.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="622" y="980" width="2" height="15" fill="rgb(226,104,49)"/><text x="625.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="622" y="996" width="2" height="15" fill="rgb(245,33,22)"/><text x="625.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="622" y="1012" width="2" height="15" fill="rgb(210,116,15)"/><text x="625.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="622" y="1028" width="2" height="15" fill="rgb(233,81,27)"/><text x="625.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="622" y="1044" width="2" height="15" fill="rgb(248,75,16)"/><text x="625.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.20%)</title><rect x="622" y="1060" width="2" height="15" fill="rgb(250,185,45)"/><text x="625.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="622" y="1076" width="2" height="15" fill="rgb(238,166,7)"/><text x="625.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="622" y="1092" width="2" height="15" fill="rgb(254,222,34)"/><text x="625.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="622" y="1108" width="2" height="15" fill="rgb(227,46,41)"/><text x="625.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="622" y="1124" width="2" height="15" fill="rgb(208,222,3)"/><text x="625.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="622" y="1140" width="2" height="15" fill="rgb(249,207,30)"/><text x="625.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="622" y="1156" width="2" height="15" fill="rgb(236,37,32)"/><text x="625.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="622" y="1172" width="2" height="15" fill="rgb(217,218,41)"/><text x="625.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="622" y="1188" width="2" height="15" fill="rgb(229,124,48)"/><text x="625.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.20%)</title><rect x="622" y="1204" width="2" height="15" fill="rgb(244,197,28)"/><text x="625.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="622" y="1220" width="2" height="15" fill="rgb(212,2,11)"/><text x="625.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="622" y="1236" width="2" height="15" fill="rgb(219,104,11)"/><text x="625.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="622" y="1252" width="2" height="15" fill="rgb(215,42,25)"/><text x="625.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="622" y="1268" width="2" height="15" fill="rgb(242,180,17)"/><text x="625.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="622" y="1284" width="2" height="15" fill="rgb(231,143,36)"/><text x="625.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.20%)</title><rect x="622" y="1300" width="2" height="15" fill="rgb(238,61,26)"/><text x="625.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="622" y="1316" width="2" height="15" fill="rgb(252,221,19)"/><text x="625.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="622" y="1332" width="2" height="15" fill="rgb(218,197,16)"/><text x="625.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="622" y="1348" width="2" height="15" fill="rgb(222,137,38)"/><text x="625.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="622" y="1364" width="2" height="15" fill="rgb(219,9,41)"/><text x="625.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="622" y="1380" width="2" height="15" fill="rgb(246,171,34)"/><text x="625.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:61) (1 samples, 0.20%)</title><rect x="622" y="1396" width="2" height="15" fill="rgb(209,108,36)"/><text x="625.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.20%)</title><rect x="622" y="1412" width="2" height="15" fill="rgb(237,130,18)"/><text x="625.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.20%)</title><rect x="622" y="1428" width="2" height="15" fill="rgb(218,37,17)"/><text x="625.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.20%)</title><rect x="622" y="1444" width="2" height="15" fill="rgb(224,38,16)"/><text x="625.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.20%)</title><rect x="622" y="1460" width="2" height="15" fill="rgb(237,56,18)"/><text x="625.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.20%)</title><rect x="622" y="1476" width="2" height="15" fill="rgb(222,73,26)"/><text x="625.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.20%)</title><rect x="622" y="1492" width="2" height="15" fill="rgb(245,116,48)"/><text x="625.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.20%)</title><rect x="622" y="1508" width="2" height="15" fill="rgb(210,219,48)"/><text x="625.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.20%)</title><rect x="622" y="1524" width="2" height="15" fill="rgb(212,145,14)"/><text x="625.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.20%)</title><rect x="622" y="1540" width="2" height="15" fill="rgb(207,101,53)"/><text x="625.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:538) (1 samples, 0.20%)</title><rect x="622" y="1556" width="2" height="15" fill="rgb(252,130,50)"/><text x="625.00" y="1566.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.40%)</title><rect x="622" y="244" width="4" height="15" fill="rgb(239,13,15)"/><text x="625.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="622" y="260" width="4" height="15" fill="rgb(254,142,7)"/><text x="625.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="622" y="276" width="4" height="15" fill="rgb(228,42,38)"/><text x="625.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="622" y="292" width="4" height="15" fill="rgb(213,33,30)"/><text x="625.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="622" y="308" width="4" height="15" fill="rgb(232,59,25)"/><text x="625.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="622" y="324" width="4" height="15" fill="rgb(205,73,40)"/><text x="625.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.40%)</title><rect x="622" y="340" width="4" height="15" fill="rgb(212,91,40)"/><text x="625.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="622" y="356" width="4" height="15" fill="rgb(238,47,20)"/><text x="625.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.40%)</title><rect x="622" y="372" width="4" height="15" fill="rgb(244,195,8)"/><text x="625.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="622" y="388" width="4" height="15" fill="rgb(252,177,42)"/><text x="625.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="622" y="404" width="4" height="15" fill="rgb(224,162,3)"/><text x="625.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="622" y="420" width="4" height="15" fill="rgb(209,57,51)"/><text x="625.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="622" y="436" width="4" height="15" fill="rgb(220,146,31)"/><text x="625.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="622" y="452" width="4" height="15" fill="rgb(233,123,48)"/><text x="625.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="622" y="468" width="4" height="15" fill="rgb(231,215,14)"/><text x="625.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.20%)</title><rect x="624" y="484" width="2" height="15" fill="rgb(229,159,2)"/><text x="627.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="624" y="500" width="2" height="15" fill="rgb(218,104,31)"/><text x="627.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="624" y="516" width="2" height="15" fill="rgb(234,66,25)"/><text x="627.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="624" y="532" width="2" height="15" fill="rgb(227,190,34)"/><text x="627.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="624" y="548" width="2" height="15" fill="rgb(241,170,25)"/><text x="627.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="624" y="564" width="2" height="15" fill="rgb(252,67,21)"/><text x="627.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.20%)</title><rect x="624" y="580" width="2" height="15" fill="rgb(231,195,12)"/><text x="627.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="624" y="596" width="2" height="15" fill="rgb(222,45,49)"/><text x="627.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="624" y="612" width="2" height="15" fill="rgb(217,160,27)"/><text x="627.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="624" y="628" width="2" height="15" fill="rgb(229,41,46)"/><text x="627.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="624" y="644" width="2" height="15" fill="rgb(249,134,12)"/><text x="627.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="624" y="660" width="2" height="15" fill="rgb(235,155,52)"/><text x="627.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.20%)</title><rect x="624" y="676" width="2" height="15" fill="rgb(224,213,35)"/><text x="627.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="624" y="692" width="2" height="15" fill="rgb(236,209,20)"/><text x="627.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="624" y="708" width="2" height="15" fill="rgb(242,7,54)"/><text x="627.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="624" y="724" width="2" height="15" fill="rgb(226,106,49)"/><text x="627.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="624" y="740" width="2" height="15" fill="rgb(231,2,28)"/><text x="627.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="624" y="756" width="2" height="15" fill="rgb(240,37,4)"/><text x="627.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (1 samples, 0.20%)</title><rect x="624" y="772" width="2" height="15" fill="rgb(226,57,52)"/><text x="627.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.20%)</title><rect x="624" y="788" width="2" height="15" fill="rgb(212,158,14)"/><text x="627.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.20%)</title><rect x="624" y="804" width="2" height="15" fill="rgb(249,127,2)"/><text x="627.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.20%)</title><rect x="624" y="820" width="2" height="15" fill="rgb(221,55,50)"/><text x="627.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.20%)</title><rect x="624" y="836" width="2" height="15" fill="rgb(236,0,43)"/><text x="627.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.20%)</title><rect x="624" y="852" width="2" height="15" fill="rgb(246,209,46)"/><text x="627.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.20%)</title><rect x="624" y="868" width="2" height="15" fill="rgb(229,112,8)"/><text x="627.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.20%)</title><rect x="624" y="884" width="2" height="15" fill="rgb(237,41,33)"/><text x="627.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:646) (1 samples, 0.20%)</title><rect x="624" y="900" width="2" height="15" fill="rgb(252,224,37)"/><text x="627.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py:166) (1 samples, 0.20%)</title><rect x="624" y="916" width="2" height="15" fill="rgb(208,61,14)"/><text x="627.00" y="926.50"></text></g><g><title>__init__ (sre_parse.py:112) (1 samples, 0.20%)</title><rect x="624" y="932" width="2" height="15" fill="rgb(238,88,13)"/><text x="627.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.20%)</title><rect x="626" y="340" width="3" height="15" fill="rgb(219,60,13)"/><text x="629.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="626" y="356" width="3" height="15" fill="rgb(221,47,7)"/><text x="629.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="626" y="372" width="3" height="15" fill="rgb(221,40,51)"/><text x="629.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="626" y="388" width="3" height="15" fill="rgb(227,60,46)"/><text x="629.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="626" y="404" width="3" height="15" fill="rgb(223,58,7)"/><text x="629.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="626" y="420" width="3" height="15" fill="rgb(209,150,8)"/><text x="629.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:48) (1 samples, 0.20%)</title><rect x="626" y="436" width="3" height="15" fill="rgb(245,57,27)"/><text x="629.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="626" y="452" width="3" height="15" fill="rgb(239,45,42)"/><text x="629.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="626" y="468" width="3" height="15" fill="rgb(243,97,7)"/><text x="629.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="626" y="484" width="3" height="15" fill="rgb(244,169,10)"/><text x="629.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="626" y="500" width="3" height="15" fill="rgb(250,64,48)"/><text x="629.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="626" y="516" width="3" height="15" fill="rgb(236,183,45)"/><text x="629.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py:20) (1 samples, 0.20%)</title><rect x="626" y="532" width="3" height="15" fill="rgb(236,61,33)"/><text x="629.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="626" y="548" width="3" height="15" fill="rgb(207,162,15)"/><text x="629.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="626" y="564" width="3" height="15" fill="rgb(238,30,31)"/><text x="629.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="626" y="580" width="3" height="15" fill="rgb(209,5,7)"/><text x="629.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="626" y="596" width="3" height="15" fill="rgb(222,161,24)"/><text x="629.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="626" y="612" width="3" height="15" fill="rgb(251,3,4)"/><text x="629.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="626" y="628" width="3" height="15" fill="rgb(242,102,11)"/><text x="629.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="626" y="644" width="3" height="15" fill="rgb(250,78,4)"/><text x="629.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="626" y="660" width="3" height="15" fill="rgb(241,92,1)"/><text x="629.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py:97) (1 samples, 0.20%)</title><rect x="626" y="676" width="3" height="15" fill="rgb(251,113,9)"/><text x="629.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="626" y="692" width="3" height="15" fill="rgb(219,96,34)"/><text x="629.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="626" y="708" width="3" height="15" fill="rgb(246,55,17)"/><text x="629.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="626" y="724" width="3" height="15" fill="rgb(241,38,41)"/><text x="629.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="626" y="740" width="3" height="15" fill="rgb(251,224,18)"/><text x="629.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="626" y="756" width="3" height="15" fill="rgb(223,121,16)"/><text x="629.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/__init__.py:13) (1 samples, 0.20%)</title><rect x="626" y="772" width="3" height="15" fill="rgb(217,104,27)"/><text x="629.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="626" y="788" width="3" height="15" fill="rgb(252,9,33)"/><text x="629.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="626" y="804" width="3" height="15" fill="rgb(205,87,21)"/><text x="629.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="626" y="820" width="3" height="15" fill="rgb(230,180,28)"/><text x="629.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="626" y="836" width="3" height="15" fill="rgb(254,42,22)"/><text x="629.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="626" y="852" width="3" height="15" fill="rgb(237,122,35)"/><text x="629.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio.py:10) (1 samples, 0.20%)</title><rect x="626" y="868" width="3" height="15" fill="rgb(217,61,33)"/><text x="629.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="626" y="884" width="3" height="15" fill="rgb(247,61,8)"/><text x="629.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="626" y="900" width="3" height="15" fill="rgb(214,204,13)"/><text x="629.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.20%)</title><rect x="626" y="916" width="3" height="15" fill="rgb(226,24,31)"/><text x="629.00" y="926.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.20%)</title><rect x="626" y="932" width="3" height="15" fill="rgb(234,111,42)"/><text x="629.00" y="942.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.20%)</title><rect x="626" y="948" width="3" height="15" fill="rgb(251,144,40)"/><text x="629.00" y="958.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.20%)</title><rect x="626" y="964" width="3" height="15" fill="rgb(230,119,7)"/><text x="629.00" y="974.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:370) (1 samples, 0.20%)</title><rect x="626" y="980" width="3" height="15" fill="rgb(247,165,40)"/><text x="629.00" y="990.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.20%)</title><rect x="626" y="996" width="3" height="15" fill="rgb(231,11,40)"/><text x="629.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.20%)</title><rect x="629" y="628" width="2" height="15" fill="rgb(237,213,52)"/><text x="632.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="629" y="644" width="2" height="15" fill="rgb(245,6,9)"/><text x="632.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="629" y="660" width="2" height="15" fill="rgb(250,115,25)"/><text x="632.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="629" y="676" width="2" height="15" fill="rgb(242,24,22)"/><text x="632.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="629" y="692" width="2" height="15" fill="rgb(250,216,47)"/><text x="632.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="629" y="708" width="2" height="15" fill="rgb(254,187,16)"/><text x="632.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.20%)</title><rect x="629" y="724" width="2" height="15" fill="rgb(226,135,8)"/><text x="632.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="629" y="740" width="2" height="15" fill="rgb(210,96,18)"/><text x="632.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="629" y="756" width="2" height="15" fill="rgb(244,214,30)"/><text x="632.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="629" y="772" width="2" height="15" fill="rgb(243,93,13)"/><text x="632.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="629" y="788" width="2" height="15" fill="rgb(245,122,20)"/><text x="632.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="629" y="804" width="2" height="15" fill="rgb(252,83,4)"/><text x="632.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.20%)</title><rect x="629" y="820" width="2" height="15" fill="rgb(251,25,38)"/><text x="632.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="629" y="836" width="2" height="15" fill="rgb(230,35,29)"/><text x="632.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="629" y="852" width="2" height="15" fill="rgb(228,70,42)"/><text x="632.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="629" y="868" width="2" height="15" fill="rgb(237,187,24)"/><text x="632.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.20%)</title><rect x="629" y="884" width="2" height="15" fill="rgb(239,159,30)"/><text x="632.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="629" y="900" width="2" height="15" fill="rgb(216,114,18)"/><text x="632.00" y="910.50"></text></g><g><title>0x7ffaba05040e (?) (1 samples, 0.20%)</title><rect x="629" y="916" width="2" height="15" fill="rgb(251,163,50)"/><text x="632.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="629" y="932" width="2" height="15" fill="rgb(217,25,49)"/><text x="632.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="629" y="948" width="2" height="15" fill="rgb(211,148,17)"/><text x="632.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="629" y="964" width="2" height="15" fill="rgb(214,119,16)"/><text x="632.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.20%)</title><rect x="629" y="980" width="2" height="15" fill="rgb(213,171,20)"/><text x="632.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="629" y="996" width="2" height="15" fill="rgb(215,101,31)"/><text x="632.00" y="1006.50"></text></g><g><title>0x7ffab9e09cd2 (?) (1 samples, 0.20%)</title><rect x="629" y="1012" width="2" height="15" fill="rgb(249,216,12)"/><text x="632.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="629" y="1028" width="2" height="15" fill="rgb(253,118,12)"/><text x="632.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="629" y="1044" width="2" height="15" fill="rgb(245,219,18)"/><text x="632.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="629" y="1060" width="2" height="15" fill="rgb(227,169,24)"/><text x="632.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.20%)</title><rect x="629" y="1076" width="2" height="15" fill="rgb(217,204,7)"/><text x="632.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="629" y="1092" width="2" height="15" fill="rgb(220,132,1)"/><text x="632.00" y="1102.50"></text></g><g><title>0x7ffab94ff0e5 (?) (1 samples, 0.20%)</title><rect x="629" y="1108" width="2" height="15" fill="rgb(246,141,43)"/><text x="632.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="629" y="1124" width="2" height="15" fill="rgb(223,166,40)"/><text x="632.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="629" y="1140" width="2" height="15" fill="rgb(254,42,34)"/><text x="632.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="629" y="1156" width="2" height="15" fill="rgb(221,223,4)"/><text x="632.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.20%)</title><rect x="629" y="1172" width="2" height="15" fill="rgb(250,28,5)"/><text x="632.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="629" y="1188" width="2" height="15" fill="rgb(238,36,46)"/><text x="632.00" y="1198.50"></text></g><g><title>0x7ffab9284ca4 (?) (1 samples, 0.20%)</title><rect x="629" y="1204" width="2" height="15" fill="rgb(247,34,45)"/><text x="632.00" y="1214.50"></text></g><g><title>0x7ffab928c1cf (?) (1 samples, 0.20%)</title><rect x="629" y="1220" width="2" height="15" fill="rgb(219,7,13)"/><text x="632.00" y="1230.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.20%)</title><rect x="629" y="1236" width="2" height="15" fill="rgb(213,210,23)"/><text x="632.00" y="1246.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.40%)</title><rect x="629" y="436" width="5" height="15" fill="rgb(226,165,40)"/><text x="632.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="629" y="452" width="5" height="15" fill="rgb(228,24,1)"/><text x="632.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="629" y="468" width="5" height="15" fill="rgb(239,226,36)"/><text x="632.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="629" y="484" width="5" height="15" fill="rgb(226,190,15)"/><text x="632.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="629" y="500" width="5" height="15" fill="rgb(238,78,36)"/><text x="632.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="629" y="516" width="5" height="15" fill="rgb(209,25,21)"/><text x="632.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.40%)</title><rect x="629" y="532" width="5" height="15" fill="rgb(247,103,33)"/><text x="632.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="629" y="548" width="5" height="15" fill="rgb(211,171,52)"/><text x="632.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="629" y="564" width="5" height="15" fill="rgb(231,58,9)"/><text x="632.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="629" y="580" width="5" height="15" fill="rgb(225,178,0)"/><text x="632.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="629" y="596" width="5" height="15" fill="rgb(231,25,22)"/><text x="632.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="629" y="612" width="5" height="15" fill="rgb(243,135,21)"/><text x="632.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.20%)</title><rect x="631" y="628" width="3" height="15" fill="rgb(230,215,27)"/><text x="634.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="631" y="644" width="3" height="15" fill="rgb(221,27,42)"/><text x="634.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="631" y="660" width="3" height="15" fill="rgb(230,107,37)"/><text x="634.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="631" y="676" width="3" height="15" fill="rgb(206,191,50)"/><text x="634.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="631" y="692" width="3" height="15" fill="rgb(206,35,29)"/><text x="634.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="631" y="708" width="3" height="15" fill="rgb(212,147,45)"/><text x="634.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.20%)</title><rect x="631" y="724" width="3" height="15" fill="rgb(243,41,33)"/><text x="634.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="631" y="740" width="3" height="15" fill="rgb(212,12,49)"/><text x="634.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="631" y="756" width="3" height="15" fill="rgb(235,55,34)"/><text x="634.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="631" y="772" width="3" height="15" fill="rgb(218,4,2)"/><text x="634.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="631" y="788" width="3" height="15" fill="rgb(217,93,38)"/><text x="634.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="631" y="804" width="3" height="15" fill="rgb(229,105,43)"/><text x="634.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.20%)</title><rect x="631" y="820" width="3" height="15" fill="rgb(251,51,35)"/><text x="634.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="631" y="836" width="3" height="15" fill="rgb(219,224,11)"/><text x="634.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="631" y="852" width="3" height="15" fill="rgb(252,73,25)"/><text x="634.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="631" y="868" width="3" height="15" fill="rgb(251,172,25)"/><text x="634.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="631" y="884" width="3" height="15" fill="rgb(229,18,27)"/><text x="634.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="631" y="900" width="3" height="15" fill="rgb(226,31,42)"/><text x="634.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.20%)</title><rect x="631" y="916" width="3" height="15" fill="rgb(207,59,18)"/><text x="634.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="631" y="932" width="3" height="15" fill="rgb(219,118,36)"/><text x="634.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="631" y="948" width="3" height="15" fill="rgb(214,172,0)"/><text x="634.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="631" y="964" width="3" height="15" fill="rgb(252,124,51)"/><text x="634.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="631" y="980" width="3" height="15" fill="rgb(208,79,14)"/><text x="634.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="631" y="996" width="3" height="15" fill="rgb(212,60,38)"/><text x="634.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:305) (1 samples, 0.20%)</title><rect x="631" y="1012" width="3" height="15" fill="rgb(242,50,2)"/><text x="634.00" y="1022.50"></text></g><g><title>DataFrame (pandas/core/frame.py:6505) (1 samples, 0.20%)</title><rect x="631" y="1028" width="3" height="15" fill="rgb(253,139,2)"/><text x="634.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.20%)</title><rect x="631" y="1044" width="3" height="15" fill="rgb(221,159,33)"/><text x="634.00" y="1054.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.20%)</title><rect x="631" y="1060" width="3" height="15" fill="rgb(242,218,14)"/><text x="634.00" y="1070.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.20%)</title><rect x="631" y="1076" width="3" height="15" fill="rgb(248,92,44)"/><text x="634.00" y="1086.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.20%)</title><rect x="631" y="1092" width="3" height="15" fill="rgb(253,58,46)"/><text x="634.00" y="1102.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.20%)</title><rect x="631" y="1108" width="3" height="15" fill="rgb(235,157,25)"/><text x="634.00" y="1118.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.20%)</title><rect x="634" y="1236" width="2" height="15" fill="rgb(220,179,12)"/><text x="637.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="634" y="1252" width="2" height="15" fill="rgb(247,58,11)"/><text x="637.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="634" y="1268" width="2" height="15" fill="rgb(241,120,36)"/><text x="637.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="634" y="1284" width="2" height="15" fill="rgb(247,57,53)"/><text x="637.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="634" y="1300" width="2" height="15" fill="rgb(221,84,49)"/><text x="637.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="634" y="1316" width="2" height="15" fill="rgb(222,112,13)"/><text x="637.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="634" y="1332" width="2" height="15" fill="rgb(238,123,12)"/><text x="637.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="634" y="1348" width="2" height="15" fill="rgb(233,71,46)"/><text x="637.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.20%)</title><rect x="634" y="1364" width="2" height="15" fill="rgb(244,135,35)"/><text x="637.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="634" y="1380" width="2" height="15" fill="rgb(220,205,2)"/><text x="637.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="634" y="1396" width="2" height="15" fill="rgb(216,63,14)"/><text x="637.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="634" y="1412" width="2" height="15" fill="rgb(240,100,51)"/><text x="637.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="634" y="1428" width="2" height="15" fill="rgb(213,91,4)"/><text x="637.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="634" y="1444" width="2" height="15" fill="rgb(245,227,40)"/><text x="637.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.20%)</title><rect x="634" y="1460" width="2" height="15" fill="rgb(243,9,13)"/><text x="637.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.20%)</title><rect x="634" y="1476" width="2" height="15" fill="rgb(236,223,51)"/><text x="637.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.20%)</title><rect x="634" y="1492" width="2" height="15" fill="rgb(221,171,10)"/><text x="637.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.20%)</title><rect x="634" y="1508" width="2" height="15" fill="rgb(250,186,29)"/><text x="637.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.20%)</title><rect x="634" y="1524" width="2" height="15" fill="rgb(234,17,12)"/><text x="637.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.20%)</title><rect x="634" y="1540" width="2" height="15" fill="rgb(243,131,2)"/><text x="637.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.20%)</title><rect x="634" y="1556" width="2" height="15" fill="rgb(226,116,35)"/><text x="637.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:28) (1 samples, 0.20%)</title><rect x="634" y="1572" width="2" height="15" fill="rgb(215,107,39)"/><text x="637.00" y="1582.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="634" y="1588" width="2" height="15" fill="rgb(254,116,21)"/><text x="637.00" y="1598.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#18}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#18}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="634" y="1604" width="2" height="15" fill="rgb(230,157,9)"/><text x="637.00" y="1614.50"></text></g><g><title>pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#18}::operator() const (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="634" y="1620" width="2" height="15" fill="rgb(230,197,27)"/><text x="637.00" y="1630.50"></text></g><g><title>pybind11::int_::int_ (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="634" y="1636" width="2" height="15" fill="rgb(209,48,50)"/><text x="637.00" y="1646.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="634" y="1652" width="2" height="15" fill="rgb(254,178,45)"/><text x="637.00" y="1662.50"></text></g><g><title>pybind11::detail::function_call::~function_call (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="634" y="1668" width="2" height="15" fill="rgb(249,97,26)"/><text x="637.00" y="1678.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:4) (15 samples, 2.98%)</title><rect x="603" y="52" width="35" height="15" fill="rgb(252,35,45)"/><text x="606.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 2.98%)</title><rect x="603" y="68" width="35" height="15" fill="rgb(208,148,52)"/><text x="606.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 2.98%)</title><rect x="603" y="84" width="35" height="15" fill="rgb(251,165,48)"/><text x="606.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 2.98%)</title><rect x="603" y="100" width="35" height="15" fill="rgb(236,120,53)"/><text x="606.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 2.98%)</title><rect x="603" y="116" width="35" height="15" fill="rgb(243,122,50)"/><text x="606.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 2.98%)</title><rect x="603" y="132" width="35" height="15" fill="rgb(251,7,35)"/><text x="606.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:7) (7 samples, 1.39%)</title><rect x="622" y="148" width="16" height="15" fill="rgb(252,61,27)"/><text x="625.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.39%)</title><rect x="622" y="164" width="16" height="15" fill="rgb(246,40,29)"/><text x="625.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.39%)</title><rect x="622" y="180" width="16" height="15" fill="rgb(233,152,12)"/><text x="625.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.39%)</title><rect x="622" y="196" width="16" height="15" fill="rgb(229,21,24)"/><text x="625.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.39%)</title><rect x="622" y="212" width="16" height="15" fill="rgb(225,115,36)"/><text x="625.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.39%)</title><rect x="622" y="228" width="16" height="15" fill="rgb(217,136,23)"/><text x="625.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 0.99%)</title><rect x="626" y="244" width="12" height="15" fill="rgb(220,215,13)"/><text x="629.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.99%)</title><rect x="626" y="260" width="12" height="15" fill="rgb(246,27,34)"/><text x="629.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.99%)</title><rect x="626" y="276" width="12" height="15" fill="rgb(243,127,49)"/><text x="629.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.99%)</title><rect x="626" y="292" width="12" height="15" fill="rgb(235,37,52)"/><text x="629.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.99%)</title><rect x="626" y="308" width="12" height="15" fill="rgb(234,40,6)"/><text x="629.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.99%)</title><rect x="626" y="324" width="12" height="15" fill="rgb(229,153,19)"/><text x="629.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 0.80%)</title><rect x="629" y="340" width="9" height="15" fill="rgb(251,192,5)"/><text x="632.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.80%)</title><rect x="629" y="356" width="9" height="15" fill="rgb(222,127,38)"/><text x="632.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.80%)</title><rect x="629" y="372" width="9" height="15" fill="rgb(249,108,30)"/><text x="632.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.80%)</title><rect x="629" y="388" width="9" height="15" fill="rgb(238,219,6)"/><text x="632.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.80%)</title><rect x="629" y="404" width="9" height="15" fill="rgb(241,200,15)"/><text x="632.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.80%)</title><rect x="629" y="420" width="9" height="15" fill="rgb(241,152,28)"/><text x="632.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.40%)</title><rect x="634" y="436" width="4" height="15" fill="rgb(237,72,15)"/><text x="637.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="634" y="452" width="4" height="15" fill="rgb(247,111,23)"/><text x="637.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.40%)</title><rect x="634" y="468" width="4" height="15" fill="rgb(213,123,53)"/><text x="637.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="634" y="484" width="4" height="15" fill="rgb(242,36,14)"/><text x="637.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="634" y="500" width="4" height="15" fill="rgb(225,179,6)"/><text x="637.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="634" y="516" width="4" height="15" fill="rgb(230,152,10)"/><text x="637.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="634" y="532" width="4" height="15" fill="rgb(218,215,10)"/><text x="637.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="634" y="548" width="4" height="15" fill="rgb(251,202,40)"/><text x="637.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="634" y="564" width="4" height="15" fill="rgb(242,55,15)"/><text x="637.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.40%)</title><rect x="634" y="580" width="4" height="15" fill="rgb(237,20,29)"/><text x="637.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="634" y="596" width="4" height="15" fill="rgb(232,120,21)"/><text x="637.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="634" y="612" width="4" height="15" fill="rgb(223,95,20)"/><text x="637.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="634" y="628" width="4" height="15" fill="rgb(235,50,20)"/><text x="637.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="634" y="644" width="4" height="15" fill="rgb(210,38,20)"/><text x="637.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="634" y="660" width="4" height="15" fill="rgb(227,100,34)"/><text x="637.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.40%)</title><rect x="634" y="676" width="4" height="15" fill="rgb(242,190,8)"/><text x="637.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="634" y="692" width="4" height="15" fill="rgb(205,79,32)"/><text x="637.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="634" y="708" width="4" height="15" fill="rgb(235,58,35)"/><text x="637.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="634" y="724" width="4" height="15" fill="rgb(216,0,48)"/><text x="637.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="634" y="740" width="4" height="15" fill="rgb(207,171,35)"/><text x="637.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="634" y="756" width="4" height="15" fill="rgb(219,30,50)"/><text x="637.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.40%)</title><rect x="634" y="772" width="4" height="15" fill="rgb(253,195,41)"/><text x="637.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="634" y="788" width="4" height="15" fill="rgb(218,128,0)"/><text x="637.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="634" y="804" width="4" height="15" fill="rgb(234,159,10)"/><text x="637.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="634" y="820" width="4" height="15" fill="rgb(220,82,8)"/><text x="637.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="634" y="836" width="4" height="15" fill="rgb(253,119,7)"/><text x="637.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="634" y="852" width="4" height="15" fill="rgb(227,190,25)"/><text x="637.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.40%)</title><rect x="634" y="868" width="4" height="15" fill="rgb(245,213,12)"/><text x="637.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="634" y="884" width="4" height="15" fill="rgb(239,43,41)"/><text x="637.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.40%)</title><rect x="634" y="900" width="4" height="15" fill="rgb(234,224,43)"/><text x="637.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="634" y="916" width="4" height="15" fill="rgb(224,113,4)"/><text x="637.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="634" y="932" width="4" height="15" fill="rgb(227,16,48)"/><text x="637.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="634" y="948" width="4" height="15" fill="rgb(251,170,15)"/><text x="637.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="634" y="964" width="4" height="15" fill="rgb(234,89,10)"/><text x="637.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="634" y="980" width="4" height="15" fill="rgb(230,214,0)"/><text x="637.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="634" y="996" width="4" height="15" fill="rgb(242,225,12)"/><text x="637.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.40%)</title><rect x="634" y="1012" width="4" height="15" fill="rgb(206,34,35)"/><text x="637.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="634" y="1028" width="4" height="15" fill="rgb(215,31,10)"/><text x="637.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="634" y="1044" width="4" height="15" fill="rgb(237,56,42)"/><text x="637.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="634" y="1060" width="4" height="15" fill="rgb(249,147,19)"/><text x="637.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="634" y="1076" width="4" height="15" fill="rgb(248,174,40)"/><text x="637.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="634" y="1092" width="4" height="15" fill="rgb(251,138,8)"/><text x="637.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.40%)</title><rect x="634" y="1108" width="4" height="15" fill="rgb(224,135,29)"/><text x="637.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.40%)</title><rect x="634" y="1124" width="4" height="15" fill="rgb(249,29,6)"/><text x="637.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="634" y="1140" width="4" height="15" fill="rgb(247,125,5)"/><text x="637.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="634" y="1156" width="4" height="15" fill="rgb(222,88,35)"/><text x="637.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="634" y="1172" width="4" height="15" fill="rgb(246,197,3)"/><text x="637.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="634" y="1188" width="4" height="15" fill="rgb(240,126,31)"/><text x="637.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="634" y="1204" width="4" height="15" fill="rgb(247,101,11)"/><text x="637.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="634" y="1220" width="4" height="15" fill="rgb(237,135,2)"/><text x="637.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:25) (1 samples, 0.20%)</title><rect x="636" y="1236" width="2" height="15" fill="rgb(241,100,30)"/><text x="639.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="636" y="1252" width="2" height="15" fill="rgb(242,225,50)"/><text x="639.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="636" y="1268" width="2" height="15" fill="rgb(233,105,26)"/><text x="639.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="636" y="1284" width="2" height="15" fill="rgb(209,9,0)"/><text x="639.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.20%)</title><rect x="636" y="1300" width="2" height="15" fill="rgb(236,163,22)"/><text x="639.00" y="1310.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.20%)</title><rect x="636" y="1316" width="2" height="15" fill="rgb(246,128,44)"/><text x="639.00" y="1326.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.20%)</title><rect x="636" y="1332" width="2" height="15" fill="rgb(234,93,23)"/><text x="639.00" y="1342.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.20%)</title><rect x="636" y="1348" width="2" height="15" fill="rgb(214,4,36)"/><text x="639.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.20%)</title><rect x="636" y="1364" width="2" height="15" fill="rgb(254,48,24)"/><text x="639.00" y="1374.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;:224) (1 samples, 0.20%)</title><rect x="636" y="1380" width="2" height="15" fill="rgb(251,31,18)"/><text x="639.00" y="1390.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:17) (1 samples, 0.20%)</title><rect x="638" y="100" width="3" height="15" fill="rgb(252,82,21)"/><text x="641.00" y="110.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (8 samples, 1.59%)</title><rect x="643" y="180" width="19" height="15" fill="rgb(231,116,8)"/><text x="646.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.20%)</title><rect x="659" y="196" width="3" height="15" fill="rgb(216,12,45)"/><text x="662.00" y="206.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.20%)</title><rect x="666" y="228" width="3" height="15" fill="rgb(242,161,36)"/><text x="669.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.20%)</title><rect x="666" y="244" width="3" height="15" fill="rgb(222,29,4)"/><text x="669.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (1 samples, 0.20%)</title><rect x="666" y="260" width="3" height="15" fill="rgb(230,81,31)"/><text x="669.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.20%)</title><rect x="666" y="276" width="3" height="15" fill="rgb(215,15,2)"/><text x="669.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="666" y="292" width="3" height="15" fill="rgb(253,134,12)"/><text x="669.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.20%)</title><rect x="666" y="308" width="3" height="15" fill="rgb(223,190,17)"/><text x="669.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.20%)</title><rect x="669" y="276" width="2" height="15" fill="rgb(242,64,14)"/><text x="672.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.20%)</title><rect x="669" y="292" width="2" height="15" fill="rgb(215,92,13)"/><text x="672.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (3 samples, 0.60%)</title><rect x="666" y="196" width="7" height="15" fill="rgb(250,47,2)"/><text x="669.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (3 samples, 0.60%)</title><rect x="666" y="212" width="7" height="15" fill="rgb(221,134,45)"/><text x="669.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (2 samples, 0.40%)</title><rect x="669" y="228" width="4" height="15" fill="rgb(236,94,21)"/><text x="672.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.40%)</title><rect x="669" y="244" width="4" height="15" fill="rgb(253,174,10)"/><text x="672.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (2 samples, 0.40%)</title><rect x="669" y="260" width="4" height="15" fill="rgb(230,166,14)"/><text x="672.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.20%)</title><rect x="671" y="276" width="2" height="15" fill="rgb(247,47,35)"/><text x="674.00" y="286.50"></text></g><g><title>_array_fill_strides (ctors.c:4084) (1 samples, 0.20%)</title><rect x="671" y="292" width="2" height="15" fill="rgb(243,222,50)"/><text x="674.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (1 samples, 0.20%)</title><rect x="673" y="196" width="3" height="15" fill="rgb(243,19,26)"/><text x="676.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.20%)</title><rect x="673" y="212" width="3" height="15" fill="rgb(216,216,31)"/><text x="676.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (1 samples, 0.20%)</title><rect x="673" y="228" width="3" height="15" fill="rgb(247,217,29)"/><text x="676.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (1 samples, 0.20%)</title><rect x="673" y="244" width="3" height="15" fill="rgb(248,5,17)"/><text x="676.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (1 samples, 0.20%)</title><rect x="673" y="260" width="3" height="15" fill="rgb(245,56,26)"/><text x="676.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (1 samples, 0.20%)</title><rect x="676" y="228" width="2" height="15" fill="rgb(214,147,50)"/><text x="679.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="676" y="244" width="2" height="15" fill="rgb(216,177,44)"/><text x="679.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="676" y="260" width="2" height="15" fill="rgb(215,30,16)"/><text x="679.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.20%)</title><rect x="676" y="276" width="2" height="15" fill="rgb(229,201,47)"/><text x="679.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.20%)</title><rect x="676" y="292" width="2" height="15" fill="rgb(252,116,20)"/><text x="679.00" y="302.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.20%)</title><rect x="678" y="244" width="2" height="15" fill="rgb(241,224,47)"/><text x="681.00" y="254.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.40%)</title><rect x="680" y="292" width="5" height="15" fill="rgb(242,90,18)"/><text x="683.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (2 samples, 0.40%)</title><rect x="680" y="308" width="5" height="15" fill="rgb(225,46,2)"/><text x="683.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (5 samples, 0.99%)</title><rect x="676" y="196" width="11" height="15" fill="rgb(218,41,53)"/><text x="679.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (5 samples, 0.99%)</title><rect x="676" y="212" width="11" height="15" fill="rgb(243,208,26)"/><text x="679.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (4 samples, 0.80%)</title><rect x="678" y="228" width="9" height="15" fill="rgb(233,102,34)"/><text x="681.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (3 samples, 0.60%)</title><rect x="680" y="244" width="7" height="15" fill="rgb(232,163,6)"/><text x="683.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.60%)</title><rect x="680" y="260" width="7" height="15" fill="rgb(246,21,43)"/><text x="683.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (3 samples, 0.60%)</title><rect x="680" y="276" width="7" height="15" fill="rgb(247,3,2)"/><text x="683.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.20%)</title><rect x="685" y="292" width="2" height="15" fill="rgb(219,42,36)"/><text x="688.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.20%)</title><rect x="685" y="308" width="2" height="15" fill="rgb(211,57,22)"/><text x="688.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="685" y="324" width="2" height="15" fill="rgb(249,102,8)"/><text x="688.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.20%)</title><rect x="685" y="340" width="2" height="15" fill="rgb(220,72,53)"/><text x="688.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.20%)</title><rect x="685" y="356" width="2" height="15" fill="rgb(208,80,30)"/><text x="688.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.20%)</title><rect x="685" y="372" width="2" height="15" fill="rgb(237,220,45)"/><text x="688.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.20%)</title><rect x="685" y="388" width="2" height="15" fill="rgb(207,154,45)"/><text x="688.00" y="398.50"></text></g><g><title>0x7ffaa567d824 (?) (1 samples, 0.20%)</title><rect x="687" y="244" width="3" height="15" fill="rgb(242,195,15)"/><text x="690.00" y="254.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="687" y="260" width="3" height="15" fill="rgb(211,176,46)"/><text x="690.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="687" y="276" width="3" height="15" fill="rgb(254,216,20)"/><text x="690.00" y="286.50"></text></g><g><title>0x7ffaaeae6ea9 (libgomp.so.1.0.0) (2 samples, 0.40%)</title><rect x="690" y="468" width="5" height="15" fill="rgb(251,145,36)"/><text x="693.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (4 samples, 0.80%)</title><rect x="687" y="196" width="10" height="15" fill="rgb(227,51,51)"/><text x="690.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (4 samples, 0.80%)</title><rect x="687" y="212" width="10" height="15" fill="rgb(207,76,15)"/><text x="690.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (4 samples, 0.80%)</title><rect x="687" y="228" width="10" height="15" fill="rgb(228,168,48)"/><text x="690.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (3 samples, 0.60%)</title><rect x="690" y="244" width="7" height="15" fill="rgb(225,205,50)"/><text x="693.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (3 samples, 0.60%)</title><rect x="690" y="260" width="7" height="15" fill="rgb(220,29,45)"/><text x="693.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (3 samples, 0.60%)</title><rect x="690" y="276" width="7" height="15" fill="rgb(226,152,5)"/><text x="693.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (3 samples, 0.60%)</title><rect x="690" y="292" width="7" height="15" fill="rgb(238,65,17)"/><text x="693.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (3 samples, 0.60%)</title><rect x="690" y="308" width="7" height="15" fill="rgb(251,59,4)"/><text x="693.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (3 samples, 0.60%)</title><rect x="690" y="324" width="7" height="15" fill="rgb(233,4,14)"/><text x="693.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (3 samples, 0.60%)</title><rect x="690" y="340" width="7" height="15" fill="rgb(207,139,0)"/><text x="693.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (3 samples, 0.60%)</title><rect x="690" y="356" width="7" height="15" fill="rgb(227,124,44)"/><text x="693.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (3 samples, 0.60%)</title><rect x="690" y="372" width="7" height="15" fill="rgb(215,22,53)"/><text x="693.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (3 samples, 0.60%)</title><rect x="690" y="388" width="7" height="15" fill="rgb(229,141,20)"/><text x="693.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (3 samples, 0.60%)</title><rect x="690" y="404" width="7" height="15" fill="rgb(234,64,2)"/><text x="693.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (3 samples, 0.60%)</title><rect x="690" y="420" width="7" height="15" fill="rgb(217,95,27)"/><text x="693.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (3 samples, 0.60%)</title><rect x="690" y="436" width="7" height="15" fill="rgb(237,70,14)"/><text x="693.00" y="446.50"></text></g><g><title>0x7ffaaeae5ab9 (libgomp.so.1.0.0) (3 samples, 0.60%)</title><rect x="690" y="452" width="7" height="15" fill="rgb(249,134,20)"/><text x="693.00" y="462.50"></text></g><g><title>0x7ffaaeae6eab (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="695" y="468" width="2" height="15" fill="rgb(231,149,29)"/><text x="698.00" y="478.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.40%)</title><rect x="704" y="244" width="5" height="15" fill="rgb(245,214,1)"/><text x="707.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.40%)</title><rect x="704" y="260" width="5" height="15" fill="rgb(251,76,20)"/><text x="707.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.40%)</title><rect x="704" y="276" width="5" height="15" fill="rgb(226,107,34)"/><text x="707.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.40%)</title><rect x="704" y="292" width="5" height="15" fill="rgb(210,98,54)"/><text x="707.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.20%)</title><rect x="709" y="292" width="2" height="15" fill="rgb(247,152,14)"/><text x="712.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:167) (1 samples, 0.20%)</title><rect x="709" y="308" width="2" height="15" fill="rgb(226,46,23)"/><text x="712.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (5 samples, 0.99%)</title><rect x="702" y="228" width="11" height="15" fill="rgb(215,187,8)"/><text x="705.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.40%)</title><rect x="709" y="244" width="4" height="15" fill="rgb(236,144,31)"/><text x="712.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.40%)</title><rect x="709" y="260" width="4" height="15" fill="rgb(247,83,12)"/><text x="712.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.40%)</title><rect x="709" y="276" width="4" height="15" fill="rgb(215,14,7)"/><text x="712.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.20%)</title><rect x="711" y="292" width="2" height="15" fill="rgb(250,168,25)"/><text x="714.00" y="302.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:855) (1 samples, 0.20%)</title><rect x="711" y="308" width="2" height="15" fill="rgb(209,10,31)"/><text x="714.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="716" y="244" width="2" height="15" fill="rgb(210,133,52)"/><text x="719.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="716" y="260" width="2" height="15" fill="rgb(228,55,35)"/><text x="719.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.20%)</title><rect x="716" y="276" width="2" height="15" fill="rgb(208,154,38)"/><text x="719.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.20%)</title><rect x="716" y="292" width="2" height="15" fill="rgb(218,224,46)"/><text x="719.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.20%)</title><rect x="716" y="308" width="2" height="15" fill="rgb(236,102,15)"/><text x="719.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.20%)</title><rect x="716" y="324" width="2" height="15" fill="rgb(251,70,24)"/><text x="719.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.20%)</title><rect x="716" y="340" width="2" height="15" fill="rgb(233,177,33)"/><text x="719.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="716" y="356" width="2" height="15" fill="rgb(212,100,9)"/><text x="719.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.20%)</title><rect x="716" y="372" width="2" height="15" fill="rgb(251,195,13)"/><text x="719.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.20%)</title><rect x="716" y="388" width="2" height="15" fill="rgb(218,191,13)"/><text x="719.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (10 samples, 1.99%)</title><rect x="697" y="196" width="23" height="15" fill="rgb(209,191,53)"/><text x="700.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (9 samples, 1.79%)</title><rect x="699" y="212" width="21" height="15" fill="rgb(227,203,33)"/><text x="702.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (3 samples, 0.60%)</title><rect x="713" y="228" width="7" height="15" fill="rgb(211,201,41)"/><text x="716.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.20%)</title><rect x="718" y="244" width="2" height="15" fill="rgb(227,158,40)"/><text x="721.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.20%)</title><rect x="718" y="260" width="2" height="15" fill="rgb(236,62,5)"/><text x="721.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:61) (1 samples, 0.20%)</title><rect x="720" y="212" width="3" height="15" fill="rgb(206,138,14)"/><text x="723.00" y="222.50"></text></g><g><title>array_clip (methods.c:2380) (1 samples, 0.20%)</title><rect x="725" y="292" width="2" height="15" fill="rgb(220,211,45)"/><text x="728.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (1 samples, 0.20%)</title><rect x="727" y="324" width="3" height="15" fill="rgb(251,50,4)"/><text x="730.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.20%)</title><rect x="727" y="340" width="3" height="15" fill="rgb(215,178,34)"/><text x="730.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.20%)</title><rect x="727" y="356" width="3" height="15" fill="rgb(221,205,20)"/><text x="730.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="732" y="404" width="2" height="15" fill="rgb(239,158,13)"/><text x="735.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="732" y="420" width="2" height="15" fill="rgb(239,107,20)"/><text x="735.00" y="430.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.20%)</title><rect x="732" y="436" width="2" height="15" fill="rgb(214,29,5)"/><text x="735.00" y="446.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.60%)</title><rect x="730" y="340" width="7" height="15" fill="rgb(235,189,42)"/><text x="733.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.60%)</title><rect x="730" y="356" width="7" height="15" fill="rgb(237,171,10)"/><text x="733.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.60%)</title><rect x="730" y="372" width="7" height="15" fill="rgb(219,91,9)"/><text x="733.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (3 samples, 0.60%)</title><rect x="730" y="388" width="7" height="15" fill="rgb(205,77,8)"/><text x="733.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.20%)</title><rect x="734" y="404" width="3" height="15" fill="rgb(250,143,21)"/><text x="737.00" y="414.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.20%)</title><rect x="734" y="420" width="3" height="15" fill="rgb(241,212,29)"/><text x="737.00" y="430.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.20%)</title><rect x="734" y="436" width="3" height="15" fill="rgb(217,32,19)"/><text x="737.00" y="446.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (4 samples, 0.80%)</title><rect x="730" y="324" width="9" height="15" fill="rgb(229,54,44)"/><text x="733.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.20%)</title><rect x="737" y="340" width="2" height="15" fill="rgb(234,125,48)"/><text x="740.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="737" y="356" width="2" height="15" fill="rgb(240,145,30)"/><text x="740.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="737" y="372" width="2" height="15" fill="rgb(223,177,2)"/><text x="740.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.20%)</title><rect x="737" y="388" width="2" height="15" fill="rgb(230,17,21)"/><text x="740.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1929) (1 samples, 0.20%)</title><rect x="737" y="404" width="2" height="15" fill="rgb(211,20,48)"/><text x="740.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.20%)</title><rect x="737" y="420" width="2" height="15" fill="rgb(218,22,27)"/><text x="740.00" y="430.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.20%)</title><rect x="737" y="436" width="2" height="15" fill="rgb(237,175,1)"/><text x="740.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="741" y="372" width="3" height="15" fill="rgb(239,60,19)"/><text x="744.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.20%)</title><rect x="741" y="388" width="3" height="15" fill="rgb(209,67,35)"/><text x="744.00" y="398.50"></text></g><g><title>PyArray_FromArray (ctors.c:2073) (1 samples, 0.20%)</title><rect x="741" y="404" width="3" height="15" fill="rgb(236,129,33)"/><text x="744.00" y="414.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.20%)</title><rect x="744" y="404" width="2" height="15" fill="rgb(234,165,53)"/><text x="747.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.60%)</title><rect x="741" y="356" width="7" height="15" fill="rgb(245,5,54)"/><text x="744.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.40%)</title><rect x="744" y="372" width="4" height="15" fill="rgb(253,73,16)"/><text x="747.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.40%)</title><rect x="744" y="388" width="4" height="15" fill="rgb(254,124,25)"/><text x="747.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.20%)</title><rect x="746" y="404" width="2" height="15" fill="rgb(226,171,0)"/><text x="749.00" y="414.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1711) (1 samples, 0.20%)</title><rect x="746" y="420" width="2" height="15" fill="rgb(249,188,46)"/><text x="749.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (38 samples, 7.55%)</title><rect x="662" y="180" width="89" height="15" fill="rgb(251,192,32)"/><text x="665.00" y="190.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (13 samples, 2.58%)</title><rect x="720" y="196" width="31" height="15" fill="rgb(251,98,35)"/><text x="723.00" y="206.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (12 samples, 2.39%)</title><rect x="723" y="212" width="28" height="15" fill="rgb(254,67,3)"/><text x="726.00" y="222.50">_..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (11 samples, 2.19%)</title><rect x="725" y="228" width="26" height="15" fill="rgb(212,180,9)"/><text x="728.00" y="238.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 2.19%)</title><rect x="725" y="244" width="26" height="15" fill="rgb(248,229,15)"/><text x="728.00" y="254.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (11 samples, 2.19%)</title><rect x="725" y="260" width="26" height="15" fill="rgb(220,17,42)"/><text x="728.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (11 samples, 2.19%)</title><rect x="725" y="276" width="26" height="15" fill="rgb(234,126,15)"/><text x="728.00" y="286.50">_..</text></g><g><title>array_clip (methods.c:2381) (10 samples, 1.99%)</title><rect x="727" y="292" width="24" height="15" fill="rgb(246,19,14)"/><text x="730.00" y="302.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 1.99%)</title><rect x="727" y="308" width="24" height="15" fill="rgb(207,87,47)"/><text x="730.00" y="318.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:132) (5 samples, 0.99%)</title><rect x="739" y="324" width="12" height="15" fill="rgb(206,168,34)"/><text x="742.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (4 samples, 0.80%)</title><rect x="741" y="340" width="10" height="15" fill="rgb(247,143,45)"/><text x="744.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.20%)</title><rect x="748" y="356" width="3" height="15" fill="rgb(254,179,10)"/><text x="751.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="748" y="372" width="3" height="15" fill="rgb(243,145,20)"/><text x="751.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="748" y="388" width="3" height="15" fill="rgb(226,133,11)"/><text x="751.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.20%)</title><rect x="748" y="404" width="3" height="15" fill="rgb(244,171,5)"/><text x="751.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.20%)</title><rect x="751" y="180" width="2" height="15" fill="rgb(241,143,21)"/><text x="754.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (50 samples, 9.94%)</title><rect x="641" y="164" width="117" height="15" fill="rgb(252,82,3)"/><text x="644.00" y="174.50">_run_sequence_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.40%)</title><rect x="753" y="180" width="5" height="15" fill="rgb(218,186,1)"/><text x="756.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:18) (51 samples, 10.14%)</title><rect x="641" y="100" width="119" height="15" fill="rgb(218,76,17)"/><text x="644.00" y="110.50">profile (bench..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (51 samples, 10.14%)</title><rect x="641" y="116" width="119" height="15" fill="rgb(225,0,23)"/><text x="644.00" y="126.50">time_predict (..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (51 samples, 10.14%)</title><rect x="641" y="132" width="119" height="15" fill="rgb(246,128,46)"/><text x="644.00" y="142.50">&lt;lambda&gt; (mlpr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (51 samples, 10.14%)</title><rect x="641" y="148" width="119" height="15" fill="rgb(247,66,46)"/><text x="644.00" y="158.50">run (mlprodict..</text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.20%)</title><rect x="758" y="164" width="2" height="15" fill="rgb(214,143,2)"/><text x="761.00" y="174.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="758" y="180" width="2" height="15" fill="rgb(214,161,53)"/><text x="761.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (2 samples, 0.40%)</title><rect x="760" y="164" width="5" height="15" fill="rgb(237,32,37)"/><text x="763.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.20%)</title><rect x="774" y="180" width="3" height="15" fill="rgb(241,193,15)"/><text x="777.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (12 samples, 2.39%)</title><rect x="777" y="180" width="28" height="15" fill="rgb(209,197,4)"/><text x="780.00" y="190.50">r..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.20%)</title><rect x="802" y="196" width="3" height="15" fill="rgb(213,110,2)"/><text x="805.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (2 samples, 0.40%)</title><rect x="819" y="212" width="5" height="15" fill="rgb(214,120,28)"/><text x="822.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (2 samples, 0.40%)</title><rect x="819" y="228" width="5" height="15" fill="rgb(217,55,13)"/><text x="822.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.20%)</title><rect x="821" y="244" width="3" height="15" fill="rgb(241,228,34)"/><text x="824.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.20%)</title><rect x="821" y="260" width="3" height="15" fill="rgb(234,171,3)"/><text x="824.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.20%)</title><rect x="821" y="276" width="3" height="15" fill="rgb(224,147,8)"/><text x="824.00" y="286.50"></text></g><g><title>_aligned_cast_int_to_long (lowlevel_strided_loops.c.src:816) (1 samples, 0.20%)</title><rect x="821" y="292" width="3" height="15" fill="rgb(252,207,29)"/><text x="824.00" y="302.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.20%)</title><rect x="824" y="228" width="2" height="15" fill="rgb(245,59,47)"/><text x="827.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.20%)</title><rect x="824" y="244" width="2" height="15" fill="rgb(234,123,31)"/><text x="827.00" y="254.50"></text></g><g><title>0x7ffae4b35757 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="824" y="260" width="2" height="15" fill="rgb(224,57,4)"/><text x="827.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.20%)</title><rect x="826" y="260" width="2" height="15" fill="rgb(207,27,14)"/><text x="829.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.20%)</title><rect x="826" y="276" width="2" height="15" fill="rgb(210,190,6)"/><text x="829.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.20%)</title><rect x="826" y="292" width="2" height="15" fill="rgb(221,67,27)"/><text x="829.00" y="302.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.40%)</title><rect x="826" y="228" width="5" height="15" fill="rgb(249,10,47)"/><text x="829.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.40%)</title><rect x="826" y="244" width="5" height="15" fill="rgb(206,36,45)"/><text x="829.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (1 samples, 0.20%)</title><rect x="828" y="260" width="3" height="15" fill="rgb(224,7,14)"/><text x="831.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.20%)</title><rect x="828" y="276" width="3" height="15" fill="rgb(248,168,19)"/><text x="831.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="828" y="292" width="3" height="15" fill="rgb(239,219,50)"/><text x="831.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.20%)</title><rect x="828" y="308" width="3" height="15" fill="rgb(229,211,7)"/><text x="831.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (4 samples, 0.80%)</title><rect x="824" y="212" width="9" height="15" fill="rgb(238,212,47)"/><text x="827.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.20%)</title><rect x="831" y="228" width="2" height="15" fill="rgb(220,95,40)"/><text x="834.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.20%)</title><rect x="831" y="244" width="2" height="15" fill="rgb(236,107,34)"/><text x="834.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:217) (1 samples, 0.20%)</title><rect x="831" y="260" width="2" height="15" fill="rgb(246,127,17)"/><text x="834.00" y="270.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h:1510) (1 samples, 0.20%)</title><rect x="831" y="276" width="2" height="15" fill="rgb(219,46,34)"/><text x="834.00" y="286.50"></text></g><g><title>array_add (number.c:326) (1 samples, 0.20%)</title><rect x="833" y="228" width="2" height="15" fill="rgb(240,149,42)"/><text x="836.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="835" y="260" width="3" height="15" fill="rgb(250,177,25)"/><text x="838.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1676) (1 samples, 0.20%)</title><rect x="835" y="276" width="3" height="15" fill="rgb(226,45,25)"/><text x="838.00" y="286.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.20%)</title><rect x="835" y="292" width="3" height="15" fill="rgb(254,176,51)"/><text x="838.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (9 samples, 1.79%)</title><rect x="819" y="196" width="21" height="15" fill="rgb(233,21,54)"/><text x="822.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (3 samples, 0.60%)</title><rect x="833" y="212" width="7" height="15" fill="rgb(212,57,49)"/><text x="836.00" y="222.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.40%)</title><rect x="835" y="228" width="5" height="15" fill="rgb(246,92,8)"/><text x="838.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.40%)</title><rect x="835" y="244" width="5" height="15" fill="rgb(253,118,46)"/><text x="838.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3281) (1 samples, 0.20%)</title><rect x="838" y="260" width="2" height="15" fill="rgb(242,160,51)"/><text x="841.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (1 samples, 0.20%)</title><rect x="842" y="228" width="3" height="15" fill="rgb(232,167,29)"/><text x="845.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.20%)</title><rect x="842" y="244" width="3" height="15" fill="rgb(205,224,31)"/><text x="845.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1974) (1 samples, 0.20%)</title><rect x="842" y="260" width="3" height="15" fill="rgb(238,127,7)"/><text x="845.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.20%)</title><rect x="845" y="260" width="2" height="15" fill="rgb(226,3,49)"/><text x="848.00" y="270.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.20%)</title><rect x="847" y="308" width="2" height="15" fill="rgb(229,166,28)"/><text x="850.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.20%)</title><rect x="847" y="324" width="2" height="15" fill="rgb(235,71,5)"/><text x="850.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:372) (1 samples, 0.20%)</title><rect x="849" y="340" width="3" height="15" fill="rgb(229,146,33)"/><text x="852.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.20%)</title><rect x="849" y="356" width="3" height="15" fill="rgb(246,39,44)"/><text x="852.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:242) (1 samples, 0.20%)</title><rect x="849" y="372" width="3" height="15" fill="rgb(225,32,15)"/><text x="852.00" y="382.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.40%)</title><rect x="849" y="324" width="5" height="15" fill="rgb(231,159,20)"/><text x="852.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:375) (1 samples, 0.20%)</title><rect x="852" y="340" width="2" height="15" fill="rgb(226,10,2)"/><text x="855.00" y="350.50"></text></g><g><title>sub_128 (npy_extint128.h:185) (1 samples, 0.20%)</title><rect x="852" y="356" width="2" height="15" fill="rgb(220,177,35)"/><text x="855.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h:149) (1 samples, 0.20%)</title><rect x="852" y="372" width="2" height="15" fill="rgb(214,207,21)"/><text x="855.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (4 samples, 0.80%)</title><rect x="847" y="276" width="9" height="15" fill="rgb(225,66,52)"/><text x="850.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (4 samples, 0.80%)</title><rect x="847" y="292" width="9" height="15" fill="rgb(214,224,26)"/><text x="850.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (3 samples, 0.60%)</title><rect x="849" y="308" width="7" height="15" fill="rgb(249,142,49)"/><text x="852.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:559) (1 samples, 0.20%)</title><rect x="854" y="324" width="2" height="15" fill="rgb(209,175,53)"/><text x="857.00" y="334.50"></text></g><g><title>0x7ffae4b1fa41 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="854" y="340" width="2" height="15" fill="rgb(229,1,16)"/><text x="857.00" y="350.50"></text></g><g><title>0x7ffae4ca19d4 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="859" y="324" width="2" height="15" fill="rgb(224,123,34)"/><text x="862.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (9 samples, 1.79%)</title><rect x="845" y="228" width="21" height="15" fill="rgb(212,140,23)"/><text x="848.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.79%)</title><rect x="845" y="244" width="21" height="15" fill="rgb(209,147,9)"/><text x="848.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.59%)</title><rect x="847" y="260" width="19" height="15" fill="rgb(222,25,27)"/><text x="850.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (4 samples, 0.80%)</title><rect x="856" y="276" width="10" height="15" fill="rgb(212,127,17)"/><text x="859.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (4 samples, 0.80%)</title><rect x="856" y="292" width="10" height="15" fill="rgb(221,49,53)"/><text x="859.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (4 samples, 0.80%)</title><rect x="856" y="308" width="10" height="15" fill="rgb(207,92,20)"/><text x="859.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (2 samples, 0.40%)</title><rect x="861" y="324" width="5" height="15" fill="rgb(207,35,41)"/><text x="864.00" y="334.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2181) (1 samples, 0.20%)</title><rect x="873" y="276" width="2" height="15" fill="rgb(240,211,8)"/><text x="876.00" y="286.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.20%)</title><rect x="875" y="308" width="2" height="15" fill="rgb(244,193,36)"/><text x="878.00" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (4 samples, 0.80%)</title><rect x="875" y="292" width="10" height="15" fill="rgb(222,208,39)"/><text x="878.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (3 samples, 0.60%)</title><rect x="877" y="308" width="8" height="15" fill="rgb(226,157,5)"/><text x="880.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.20%)</title><rect x="887" y="388" width="2" height="15" fill="rgb(219,126,52)"/><text x="890.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.60%)</title><rect x="887" y="308" width="7" height="15" fill="rgb(209,102,15)"/><text x="890.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.60%)</title><rect x="887" y="324" width="7" height="15" fill="rgb(235,164,11)"/><text x="890.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.60%)</title><rect x="887" y="340" width="7" height="15" fill="rgb(252,71,48)"/><text x="890.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.60%)</title><rect x="887" y="356" width="7" height="15" fill="rgb(222,180,22)"/><text x="890.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.60%)</title><rect x="887" y="372" width="7" height="15" fill="rgb(223,109,13)"/><text x="890.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.40%)</title><rect x="889" y="388" width="5" height="15" fill="rgb(238,118,44)"/><text x="892.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.40%)</title><rect x="894" y="324" width="5" height="15" fill="rgb(206,120,15)"/><text x="897.00" y="334.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (2 samples, 0.40%)</title><rect x="894" y="340" width="5" height="15" fill="rgb(213,174,27)"/><text x="897.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (1 samples, 0.20%)</title><rect x="899" y="324" width="2" height="15" fill="rgb(209,34,24)"/><text x="902.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.20%)</title><rect x="899" y="340" width="2" height="15" fill="rgb(213,112,4)"/><text x="902.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.20%)</title><rect x="899" y="356" width="2" height="15" fill="rgb(241,177,47)"/><text x="902.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:872) (1 samples, 0.20%)</title><rect x="899" y="372" width="2" height="15" fill="rgb(215,63,38)"/><text x="902.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.20%)</title><rect x="901" y="340" width="2" height="15" fill="rgb(245,92,25)"/><text x="904.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3447) (1 samples, 0.20%)</title><rect x="901" y="356" width="2" height="15" fill="rgb(228,99,27)"/><text x="904.00" y="366.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.20%)</title><rect x="901" y="372" width="2" height="15" fill="rgb(225,134,42)"/><text x="904.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.20%)</title><rect x="903" y="388" width="3" height="15" fill="rgb(253,15,7)"/><text x="906.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="903" y="404" width="3" height="15" fill="rgb(224,151,35)"/><text x="906.00" y="414.50"></text></g><g><title>0x7ffae4b3fd50 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="903" y="420" width="3" height="15" fill="rgb(216,3,34)"/><text x="906.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.20%)</title><rect x="906" y="420" width="2" height="15" fill="rgb(223,213,10)"/><text x="909.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.20%)</title><rect x="906" y="436" width="2" height="15" fill="rgb(213,138,49)"/><text x="909.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.20%)</title><rect x="906" y="452" width="2" height="15" fill="rgb(227,89,45)"/><text x="909.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (3 samples, 0.60%)</title><rect x="903" y="356" width="7" height="15" fill="rgb(247,50,17)"/><text x="906.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (3 samples, 0.60%)</title><rect x="903" y="372" width="7" height="15" fill="rgb(237,190,4)"/><text x="906.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.40%)</title><rect x="906" y="388" width="4" height="15" fill="rgb(206,8,29)"/><text x="909.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.40%)</title><rect x="906" y="404" width="4" height="15" fill="rgb(209,109,5)"/><text x="909.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.20%)</title><rect x="908" y="420" width="2" height="15" fill="rgb(248,153,30)"/><text x="911.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.20%)</title><rect x="908" y="436" width="2" height="15" fill="rgb(235,3,6)"/><text x="911.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.20%)</title><rect x="908" y="452" width="2" height="15" fill="rgb(246,172,45)"/><text x="911.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (31 samples, 6.16%)</title><rect x="840" y="196" width="73" height="15" fill="rgb(225,97,2)"/><text x="843.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (30 samples, 5.96%)</title><rect x="842" y="212" width="71" height="15" fill="rgb(245,91,17)"/><text x="845.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (20 samples, 3.98%)</title><rect x="866" y="228" width="47" height="15" fill="rgb(251,47,50)"/><text x="869.00" y="238.50">_run..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (18 samples, 3.58%)</title><rect x="870" y="244" width="43" height="15" fill="rgb(209,44,17)"/><text x="873.00" y="254.50">sum ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (18 samples, 3.58%)</title><rect x="870" y="260" width="43" height="15" fill="rgb(207,103,10)"/><text x="873.00" y="270.50">arra..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (16 samples, 3.18%)</title><rect x="875" y="276" width="38" height="15" fill="rgb(234,208,13)"/><text x="878.00" y="286.50">sum..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (12 samples, 2.39%)</title><rect x="885" y="292" width="28" height="15" fill="rgb(221,169,18)"/><text x="888.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 1.59%)</title><rect x="894" y="308" width="19" height="15" fill="rgb(216,159,24)"/><text x="897.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.99%)</title><rect x="901" y="324" width="12" height="15" fill="rgb(208,66,11)"/><text x="904.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.80%)</title><rect x="903" y="340" width="10" height="15" fill="rgb(240,81,49)"/><text x="906.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.20%)</title><rect x="910" y="356" width="3" height="15" fill="rgb(206,118,28)"/><text x="913.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.20%)</title><rect x="910" y="372" width="3" height="15" fill="rgb(236,103,18)"/><text x="913.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1472) (1 samples, 0.20%)</title><rect x="910" y="388" width="3" height="15" fill="rgb(225,210,16)"/><text x="913.00" y="398.50"></text></g><g><title>0x7ffaaeae6ea9 (libgomp.so.1.0.0) (7 samples, 1.39%)</title><rect x="913" y="468" width="16" height="15" fill="rgb(226,157,49)"/><text x="916.00" y="478.50"></text></g><g><title>0x7ffaaeae6eab (libgomp.so.1.0.0) (4 samples, 0.80%)</title><rect x="929" y="468" width="9" height="15" fill="rgb(247,154,8)"/><text x="932.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (18 samples, 3.58%)</title><rect x="913" y="196" width="42" height="15" fill="rgb(218,7,5)"/><text x="916.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (18 samples, 3.58%)</title><rect x="913" y="212" width="42" height="15" fill="rgb(251,38,49)"/><text x="916.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (18 samples, 3.58%)</title><rect x="913" y="228" width="42" height="15" fill="rgb(243,36,20)"/><text x="916.00" y="238.50">_ru..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (18 samples, 3.58%)</title><rect x="913" y="244" width="42" height="15" fill="rgb(243,176,2)"/><text x="916.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (18 samples, 3.58%)</title><rect x="913" y="260" width="42" height="15" fill="rgb(213,85,25)"/><text x="916.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (18 samples, 3.58%)</title><rect x="913" y="276" width="42" height="15" fill="rgb(231,62,54)"/><text x="916.00" y="286.50">voi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (18 samples, 3.58%)</title><rect x="913" y="292" width="42" height="15" fill="rgb(237,217,47)"/><text x="916.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (18 samples, 3.58%)</title><rect x="913" y="308" width="42" height="15" fill="rgb(213,189,18)"/><text x="916.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (18 samples, 3.58%)</title><rect x="913" y="324" width="42" height="15" fill="rgb(220,73,8)"/><text x="916.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (18 samples, 3.58%)</title><rect x="913" y="340" width="42" height="15" fill="rgb(244,200,43)"/><text x="916.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h:538) (18 samples, 3.58%)</title><rect x="913" y="356" width="42" height="15" fill="rgb(230,57,41)"/><text x="916.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (18 samples, 3.58%)</title><rect x="913" y="372" width="42" height="15" fill="rgb(206,137,34)"/><text x="916.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (18 samples, 3.58%)</title><rect x="913" y="388" width="42" height="15" fill="rgb(214,180,42)"/><text x="916.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (18 samples, 3.58%)</title><rect x="913" y="404" width="42" height="15" fill="rgb(222,220,15)"/><text x="916.00" y="414.50">pyb..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (18 samples, 3.58%)</title><rect x="913" y="420" width="42" height="15" fill="rgb(237,69,54)"/><text x="916.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (18 samples, 3.58%)</title><rect x="913" y="436" width="42" height="15" fill="rgb(253,72,4)"/><text x="916.00" y="446.50">pyb..</text></g><g><title>0x7ffaaeae5ab9 (libgomp.so.1.0.0) (18 samples, 3.58%)</title><rect x="913" y="452" width="42" height="15" fill="rgb(222,100,37)"/><text x="916.00" y="462.50">0x7..</text></g><g><title>0x7ffaaeae6ead (libgomp.so.1.0.0) (7 samples, 1.39%)</title><rect x="938" y="468" width="17" height="15" fill="rgb(228,65,11)"/><text x="941.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.20%)</title><rect x="960" y="212" width="2" height="15" fill="rgb(235,222,31)"/><text x="963.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (5 samples, 0.99%)</title><rect x="962" y="228" width="12" height="15" fill="rgb(207,202,49)"/><text x="965.00" y="238.50"></text></g><g><title>0x7ffae4b35e50 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="974" y="308" width="2" height="15" fill="rgb(228,110,40)"/><text x="977.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.40%)</title><rect x="974" y="244" width="4" height="15" fill="rgb(231,173,29)"/><text x="977.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.40%)</title><rect x="974" y="260" width="4" height="15" fill="rgb(232,155,14)"/><text x="977.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.40%)</title><rect x="974" y="276" width="4" height="15" fill="rgb(212,120,18)"/><text x="977.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.40%)</title><rect x="974" y="292" width="4" height="15" fill="rgb(235,52,6)"/><text x="977.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="976" y="308" width="2" height="15" fill="rgb(249,117,33)"/><text x="979.00" y="318.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.20%)</title><rect x="978" y="292" width="3" height="15" fill="rgb(208,14,4)"/><text x="981.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.20%)</title><rect x="978" y="308" width="3" height="15" fill="rgb(228,217,36)"/><text x="981.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1372) (1 samples, 0.20%)</title><rect x="978" y="324" width="3" height="15" fill="rgb(222,64,27)"/><text x="981.00" y="334.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c:1056) (1 samples, 0.20%)</title><rect x="978" y="340" width="3" height="15" fill="rgb(240,12,16)"/><text x="981.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.40%)</title><rect x="978" y="260" width="5" height="15" fill="rgb(252,190,33)"/><text x="981.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.40%)</title><rect x="978" y="276" width="5" height="15" fill="rgb(215,175,1)"/><text x="981.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1937) (1 samples, 0.20%)</title><rect x="981" y="292" width="2" height="15" fill="rgb(220,183,43)"/><text x="984.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1541) (1 samples, 0.20%)</title><rect x="983" y="324" width="2" height="15" fill="rgb(250,0,54)"/><text x="986.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.40%)</title><rect x="983" y="308" width="5" height="15" fill="rgb(251,25,25)"/><text x="986.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1672) (1 samples, 0.20%)</title><rect x="985" y="324" width="3" height="15" fill="rgb(226,12,24)"/><text x="988.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.20%)</title><rect x="988" y="308" width="2" height="15" fill="rgb(230,202,38)"/><text x="991.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2743) (1 samples, 0.20%)</title><rect x="988" y="324" width="2" height="15" fill="rgb(230,114,7)"/><text x="991.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.80%)</title><rect x="983" y="292" width="9" height="15" fill="rgb(243,51,31)"/><text x="986.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.20%)</title><rect x="990" y="308" width="2" height="15" fill="rgb(224,184,49)"/><text x="993.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3218) (1 samples, 0.20%)</title><rect x="990" y="324" width="2" height="15" fill="rgb(236,37,13)"/><text x="993.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.20%)</title><rect x="990" y="340" width="2" height="15" fill="rgb(251,215,4)"/><text x="993.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:318) (1 samples, 0.20%)</title><rect x="992" y="308" width="3" height="15" fill="rgb(221,71,40)"/><text x="995.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.59%)</title><rect x="978" y="244" width="19" height="15" fill="rgb(216,203,4)"/><text x="981.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.19%)</title><rect x="983" y="260" width="14" height="15" fill="rgb(244,150,8)"/><text x="986.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.19%)</title><rect x="983" y="276" width="14" height="15" fill="rgb(205,122,14)"/><text x="986.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.40%)</title><rect x="992" y="292" width="5" height="15" fill="rgb(221,155,19)"/><text x="995.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.20%)</title><rect x="995" y="308" width="2" height="15" fill="rgb(205,206,50)"/><text x="998.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2039) (1 samples, 0.20%)</title><rect x="995" y="324" width="2" height="15" fill="rgb(216,199,44)"/><text x="998.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (11 samples, 2.19%)</title><rect x="974" y="228" width="25" height="15" fill="rgb(222,63,16)"/><text x="977.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.20%)</title><rect x="997" y="244" width="2" height="15" fill="rgb(217,108,50)"/><text x="1000.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.20%)</title><rect x="997" y="260" width="2" height="15" fill="rgb(216,192,37)"/><text x="1000.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:527) (1 samples, 0.20%)</title><rect x="999" y="228" width="3" height="15" fill="rgb(250,75,3)"/><text x="1002.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="1002" y="260" width="2" height="15" fill="rgb(218,72,39)"/><text x="1005.00" y="270.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.20%)</title><rect x="1002" y="276" width="2" height="15" fill="rgb(249,109,16)"/><text x="1005.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.20%)</title><rect x="1002" y="292" width="2" height="15" fill="rgb(231,207,54)"/><text x="1005.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (2 samples, 0.40%)</title><rect x="1002" y="228" width="5" height="15" fill="rgb(236,194,53)"/><text x="1005.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.40%)</title><rect x="1002" y="244" width="5" height="15" fill="rgb(221,181,53)"/><text x="1005.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="1004" y="260" width="3" height="15" fill="rgb(229,203,15)"/><text x="1007.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.20%)</title><rect x="1004" y="276" width="3" height="15" fill="rgb(248,145,37)"/><text x="1007.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.20%)</title><rect x="1004" y="292" width="3" height="15" fill="rgb(244,148,46)"/><text x="1007.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.20%)</title><rect x="1004" y="308" width="3" height="15" fill="rgb(244,37,19)"/><text x="1007.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2044) (1 samples, 0.20%)</title><rect x="1004" y="324" width="3" height="15" fill="rgb(243,14,48)"/><text x="1007.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (23 samples, 4.57%)</title><rect x="955" y="196" width="54" height="15" fill="rgb(218,78,52)"/><text x="958.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (20 samples, 3.98%)</title><rect x="962" y="212" width="47" height="15" fill="rgb(230,77,41)"/><text x="965.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py:19) (1 samples, 0.20%)</title><rect x="1007" y="228" width="2" height="15" fill="rgb(216,126,12)"/><text x="1010.00" y="238.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.20%)</title><rect x="1007" y="244" width="2" height="15" fill="rgb(235,34,16)"/><text x="1010.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.20%)</title><rect x="1007" y="260" width="2" height="15" fill="rgb(205,12,34)"/><text x="1010.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.20%)</title><rect x="1007" y="276" width="2" height="15" fill="rgb(219,229,49)"/><text x="1010.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.20%)</title><rect x="1007" y="292" width="2" height="15" fill="rgb(249,126,44)"/><text x="1010.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.20%)</title><rect x="1007" y="308" width="2" height="15" fill="rgb(209,87,48)"/><text x="1010.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.20%)</title><rect x="1007" y="324" width="2" height="15" fill="rgb(254,61,31)"/><text x="1010.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.20%)</title><rect x="1007" y="340" width="2" height="15" fill="rgb(238,190,44)"/><text x="1010.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.20%)</title><rect x="1007" y="356" width="2" height="15" fill="rgb(205,79,52)"/><text x="1010.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1007" y="372" width="2" height="15" fill="rgb(220,15,41)"/><text x="1010.00" y="382.50"></text></g><g><title>0x7ffae4b21700 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1007" y="388" width="2" height="15" fill="rgb(247,119,44)"/><text x="1010.00" y="398.50"></text></g><g><title>0x7ffae4b1eacd (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1007" y="404" width="2" height="15" fill="rgb(236,43,18)"/><text x="1010.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:61) (1 samples, 0.20%)</title><rect x="1011" y="212" width="3" height="15" fill="rgb(238,220,2)"/><text x="1014.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (2 samples, 0.40%)</title><rect x="1016" y="228" width="5" height="15" fill="rgb(208,59,2)"/><text x="1019.00" y="238.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py:1971) (1 samples, 0.20%)</title><rect x="1018" y="244" width="3" height="15" fill="rgb(234,9,14)"/><text x="1021.00" y="254.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:5) (1 samples, 0.20%)</title><rect x="1021" y="228" width="2" height="15" fill="rgb(230,2,38)"/><text x="1024.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.20%)</title><rect x="1025" y="276" width="3" height="15" fill="rgb(237,132,27)"/><text x="1028.00" y="286.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (5 samples, 0.99%)</title><rect x="1028" y="340" width="11" height="15" fill="rgb(209,112,17)"/><text x="1031.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.40%)</title><rect x="1035" y="356" width="4" height="15" fill="rgb(249,208,32)"/><text x="1038.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3018) (1 samples, 0.20%)</title><rect x="1039" y="388" width="3" height="15" fill="rgb(220,164,21)"/><text x="1042.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (7 samples, 1.39%)</title><rect x="1028" y="324" width="16" height="15" fill="rgb(215,141,48)"/><text x="1031.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.40%)</title><rect x="1039" y="340" width="5" height="15" fill="rgb(239,20,46)"/><text x="1042.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.40%)</title><rect x="1039" y="356" width="5" height="15" fill="rgb(234,211,18)"/><text x="1042.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.40%)</title><rect x="1039" y="372" width="5" height="15" fill="rgb(246,153,26)"/><text x="1042.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.20%)</title><rect x="1042" y="388" width="2" height="15" fill="rgb(222,141,38)"/><text x="1045.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.20%)</title><rect x="1046" y="340" width="3" height="15" fill="rgb(234,12,20)"/><text x="1049.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.20%)</title><rect x="1046" y="356" width="3" height="15" fill="rgb(250,182,43)"/><text x="1049.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.20%)</title><rect x="1056" y="436" width="2" height="15" fill="rgb(211,177,8)"/><text x="1059.00" y="446.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.40%)</title><rect x="1056" y="404" width="4" height="15" fill="rgb(217,188,25)"/><text x="1059.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.40%)</title><rect x="1056" y="420" width="4" height="15" fill="rgb(236,21,44)"/><text x="1059.00" y="430.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.20%)</title><rect x="1058" y="436" width="2" height="15" fill="rgb(230,207,9)"/><text x="1061.00" y="446.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (7 samples, 1.39%)</title><rect x="1049" y="340" width="16" height="15" fill="rgb(232,165,17)"/><text x="1052.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (7 samples, 1.39%)</title><rect x="1049" y="356" width="16" height="15" fill="rgb(212,225,12)"/><text x="1052.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.39%)</title><rect x="1049" y="372" width="16" height="15" fill="rgb(214,112,16)"/><text x="1052.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (7 samples, 1.39%)</title><rect x="1049" y="388" width="16" height="15" fill="rgb(217,84,4)"/><text x="1052.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.40%)</title><rect x="1060" y="404" width="5" height="15" fill="rgb(216,160,29)"/><text x="1063.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.20%)</title><rect x="1063" y="420" width="2" height="15" fill="rgb(207,66,32)"/><text x="1066.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.20%)</title><rect x="1063" y="436" width="2" height="15" fill="rgb(206,149,50)"/><text x="1066.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.20%)</title><rect x="1063" y="452" width="2" height="15" fill="rgb(217,35,23)"/><text x="1066.00" y="462.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.20%)</title><rect x="1063" y="468" width="2" height="15" fill="rgb(247,99,13)"/><text x="1066.00" y="478.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.20%)</title><rect x="1063" y="484" width="2" height="15" fill="rgb(214,210,14)"/><text x="1066.00" y="494.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:67) (1 samples, 0.20%)</title><rect x="1063" y="500" width="2" height="15" fill="rgb(238,191,33)"/><text x="1066.00" y="510.50"></text></g><g><title>0x7ffae3d41c00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1063" y="516" width="2" height="15" fill="rgb(239,175,49)"/><text x="1066.00" y="526.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3136) (1 samples, 0.20%)</title><rect x="1068" y="372" width="2" height="15" fill="rgb(236,66,54)"/><text x="1071.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="1070" y="372" width="2" height="15" fill="rgb(213,58,11)"/><text x="1073.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1099) (1 samples, 0.20%)</title><rect x="1070" y="388" width="2" height="15" fill="rgb(232,181,21)"/><text x="1073.00" y="398.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:288) (1 samples, 0.20%)</title><rect x="1072" y="388" width="3" height="15" fill="rgb(213,13,44)"/><text x="1075.00" y="398.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2002) (1 samples, 0.20%)</title><rect x="1075" y="388" width="2" height="15" fill="rgb(244,146,47)"/><text x="1078.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.99%)</title><rect x="1068" y="356" width="11" height="15" fill="rgb(241,129,13)"/><text x="1071.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.60%)</title><rect x="1072" y="372" width="7" height="15" fill="rgb(218,181,3)"/><text x="1075.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.20%)</title><rect x="1077" y="388" width="2" height="15" fill="rgb(215,137,22)"/><text x="1080.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1620) (1 samples, 0.20%)</title><rect x="1077" y="404" width="2" height="15" fill="rgb(226,64,46)"/><text x="1080.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (16 samples, 3.18%)</title><rect x="1044" y="324" width="38" height="15" fill="rgb(240,79,54)"/><text x="1047.00" y="334.50">_cl..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (7 samples, 1.39%)</title><rect x="1065" y="340" width="17" height="15" fill="rgb(220,163,19)"/><text x="1068.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.20%)</title><rect x="1079" y="356" width="3" height="15" fill="rgb(214,167,49)"/><text x="1082.00" y="366.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.20%)</title><rect x="1079" y="372" width="3" height="15" fill="rgb(242,95,16)"/><text x="1082.00" y="382.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.20%)</title><rect x="1079" y="388" width="3" height="15" fill="rgb(220,26,53)"/><text x="1082.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="1098" y="356" width="2" height="15" fill="rgb(239,184,19)"/><text x="1101.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="1098" y="372" width="2" height="15" fill="rgb(225,158,9)"/><text x="1101.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.20%)</title><rect x="1098" y="388" width="2" height="15" fill="rgb(244,11,8)"/><text x="1101.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.20%)</title><rect x="1098" y="404" width="2" height="15" fill="rgb(238,26,17)"/><text x="1101.00" y="414.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="1098" y="420" width="2" height="15" fill="rgb(232,19,1)"/><text x="1101.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="1100" y="372" width="3" height="15" fill="rgb(234,173,39)"/><text x="1103.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.20%)</title><rect x="1100" y="388" width="3" height="15" fill="rgb(252,186,1)"/><text x="1103.00" y="398.50"></text></g><g><title>_set_out_array (ufunc_object.c:824) (1 samples, 0.20%)</title><rect x="1100" y="404" width="3" height="15" fill="rgb(208,5,32)"/><text x="1103.00" y="414.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:692) (1 samples, 0.20%)</title><rect x="1100" y="420" width="3" height="15" fill="rgb(244,63,50)"/><text x="1103.00" y="430.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.20%)</title><rect x="1103" y="388" width="2" height="15" fill="rgb(221,36,38)"/><text x="1106.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1907) (1 samples, 0.20%)</title><rect x="1103" y="404" width="2" height="15" fill="rgb(251,10,51)"/><text x="1106.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.40%)</title><rect x="1103" y="372" width="4" height="15" fill="rgb(209,68,30)"/><text x="1106.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:522) (1 samples, 0.20%)</title><rect x="1105" y="388" width="2" height="15" fill="rgb(247,179,7)"/><text x="1108.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.20%)</title><rect x="1107" y="372" width="3" height="15" fill="rgb(224,134,18)"/><text x="1110.00" y="382.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.20%)</title><rect x="1107" y="388" width="3" height="15" fill="rgb(244,99,2)"/><text x="1110.00" y="398.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2787) (1 samples, 0.20%)</title><rect x="1110" y="436" width="2" height="15" fill="rgb(246,74,51)"/><text x="1113.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.40%)</title><rect x="1110" y="420" width="4" height="15" fill="rgb(244,171,24)"/><text x="1113.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2983) (1 samples, 0.20%)</title><rect x="1112" y="436" width="2" height="15" fill="rgb(239,37,29)"/><text x="1115.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.60%)</title><rect x="1110" y="404" width="7" height="15" fill="rgb(249,181,5)"/><text x="1113.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.20%)</title><rect x="1114" y="420" width="3" height="15" fill="rgb(245,190,14)"/><text x="1117.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.20%)</title><rect x="1114" y="436" width="3" height="15" fill="rgb(231,82,22)"/><text x="1117.00" y="446.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.20%)</title><rect x="1114" y="452" width="3" height="15" fill="rgb(209,115,12)"/><text x="1117.00" y="462.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.20%)</title><rect x="1114" y="468" width="3" height="15" fill="rgb(254,166,35)"/><text x="1117.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.20%)</title><rect x="1117" y="404" width="2" height="15" fill="rgb(218,101,2)"/><text x="1120.00" y="414.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.20%)</title><rect x="1117" y="420" width="2" height="15" fill="rgb(232,125,11)"/><text x="1120.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.99%)</title><rect x="1110" y="372" width="11" height="15" fill="rgb(217,114,48)"/><text x="1113.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.99%)</title><rect x="1110" y="388" width="11" height="15" fill="rgb(215,188,25)"/><text x="1113.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.20%)</title><rect x="1119" y="404" width="2" height="15" fill="rgb(230,104,4)"/><text x="1122.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.20%)</title><rect x="1119" y="420" width="2" height="15" fill="rgb(240,2,9)"/><text x="1122.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1882) (1 samples, 0.20%)</title><rect x="1119" y="436" width="2" height="15" fill="rgb(245,55,12)"/><text x="1122.00" y="446.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (47 samples, 9.34%)</title><rect x="1014" y="212" width="110" height="15" fill="rgb(244,62,5)"/><text x="1017.00" y="222.50">_run (mlprodi..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (43 samples, 8.55%)</title><rect x="1023" y="228" width="101" height="15" fill="rgb(233,129,15)"/><text x="1026.00" y="238.50">clip (&lt;__arr..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (43 samples, 8.55%)</title><rect x="1023" y="244" width="101" height="15" fill="rgb(246,63,52)"/><text x="1026.00" y="254.50">array_implem..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (43 samples, 8.55%)</title><rect x="1023" y="260" width="101" height="15" fill="rgb(223,112,49)"/><text x="1026.00" y="270.50">clip (numpy/..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (41 samples, 8.15%)</title><rect x="1028" y="276" width="96" height="15" fill="rgb(217,81,47)"/><text x="1031.00" y="286.50">_wrapfunc (..</text></g><g><title>array_clip (methods.c:2381) (41 samples, 8.15%)</title><rect x="1028" y="292" width="96" height="15" fill="rgb(247,136,33)"/><text x="1031.00" y="302.50">array_clip ..</text></g><g><title>forward_ndarray_method (methods.c:108) (41 samples, 8.15%)</title><rect x="1028" y="308" width="96" height="15" fill="rgb(235,179,52)"/><text x="1031.00" y="318.50">forward_nda..</text></g><g><title>_clip (numpy/core/_methods.py:132) (18 samples, 3.58%)</title><rect x="1082" y="324" width="42" height="15" fill="rgb(238,225,51)"/><text x="1085.00" y="334.50">_cl..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (12 samples, 2.39%)</title><rect x="1096" y="340" width="28" height="15" fill="rgb(231,39,34)"/><text x="1099.00" y="350.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.99%)</title><rect x="1100" y="356" width="24" height="15" fill="rgb(221,148,22)"/><text x="1103.00" y="366.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.20%)</title><rect x="1121" y="372" width="3" height="15" fill="rgb(246,145,49)"/><text x="1124.00" y="382.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.20%)</title><rect x="1121" y="388" width="3" height="15" fill="rgb(219,69,19)"/><text x="1124.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.20%)</title><rect x="1121" y="404" width="3" height="15" fill="rgb(239,3,9)"/><text x="1124.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1121" y="420" width="3" height="15" fill="rgb(249,219,35)"/><text x="1124.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (137 samples, 27.24%)</title><rect x="805" y="180" width="321" height="15" fill="rgb(243,218,18)"/><text x="808.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (50 samples, 9.94%)</title><rect x="1009" y="196" width="117" height="15" fill="rgb(241,41,54)"/><text x="1012.00" y="206.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:67) (1 samples, 0.20%)</title><rect x="1124" y="212" width="2" height="15" fill="rgb(246,67,27)"/><text x="1127.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 0.60%)</title><rect x="1126" y="180" width="7" height="15" fill="rgb(239,8,4)"/><text x="1129.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (4 samples, 0.80%)</title><rect x="1133" y="180" width="10" height="15" fill="rgb(233,92,23)"/><text x="1136.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.20%)</title><rect x="1143" y="180" width="2" height="15" fill="rgb(253,155,6)"/><text x="1146.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.60%)</title><rect x="1145" y="180" width="7" height="15" fill="rgb(243,99,39)"/><text x="1148.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (167 samples, 33.20%)</title><rect x="765" y="164" width="392" height="15" fill="rgb(245,88,40)"/><text x="768.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.40%)</title><rect x="1152" y="180" width="5" height="15" fill="rgb(205,176,26)"/><text x="1155.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:45) (222 samples, 44.14%)</title><rect x="638" y="52" width="521" height="15" fill="rgb(205,225,41)"/><text x="641.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:45)</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:44) (222 samples, 44.14%)</title><rect x="638" y="68" width="521" height="15" fill="rgb(239,177,46)"/><text x="641.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:44)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:29) (222 samples, 44.14%)</title><rect x="638" y="84" width="521" height="15" fill="rgb(209,39,21)"/><text x="641.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:2..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:23) (170 samples, 33.80%)</title><rect x="760" y="100" width="399" height="15" fill="rgb(233,61,43)"/><text x="763.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (170 samples, 33.80%)</title><rect x="760" y="116" width="399" height="15" fill="rgb(236,144,42)"/><text x="763.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (170 samples, 33.80%)</title><rect x="760" y="132" width="399" height="15" fill="rgb(237,41,38)"/><text x="763.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:23..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (170 samples, 33.80%)</title><rect x="760" y="148" width="399" height="15" fill="rgb(229,83,0)"/><text x="763.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="1157" y="164" width="2" height="15" fill="rgb(242,109,34)"/><text x="1160.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="1157" y="180" width="2" height="15" fill="rgb(219,4,48)"/><text x="1160.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.20%)</title><rect x="1157" y="196" width="2" height="15" fill="rgb(214,103,29)"/><text x="1160.00" y="206.50"></text></g><g><title>0x7ffaa47ddff9 (?) (1 samples, 0.20%)</title><rect x="1159" y="212" width="2" height="15" fill="rgb(240,63,35)"/><text x="1162.00" y="222.50"></text></g><g><title>0x7ffaa47d8ef6 (?) (1 samples, 0.20%)</title><rect x="1159" y="228" width="2" height="15" fill="rgb(207,33,53)"/><text x="1162.00" y="238.50"></text></g><g><title>0x7ffaa47cd962 (?) (1 samples, 0.20%)</title><rect x="1159" y="244" width="2" height="15" fill="rgb(234,157,41)"/><text x="1162.00" y="254.50"></text></g><g><title>0x7ffaa48017a7 (?) (1 samples, 0.20%)</title><rect x="1159" y="260" width="2" height="15" fill="rgb(222,123,6)"/><text x="1162.00" y="270.50"></text></g><g><title>0x7ffaa4801379 (?) (1 samples, 0.20%)</title><rect x="1159" y="276" width="2" height="15" fill="rgb(241,49,32)"/><text x="1162.00" y="286.50"></text></g><g><title>0x7ffaa4c5f8b8 (?) (1 samples, 0.20%)</title><rect x="1159" y="292" width="2" height="15" fill="rgb(222,139,51)"/><text x="1162.00" y="302.50"></text></g><g><title>0x7ffaa4c5dc7f (?) (1 samples, 0.20%)</title><rect x="1159" y="308" width="2" height="15" fill="rgb(239,228,35)"/><text x="1162.00" y="318.50"></text></g><g><title>0x7ffaa4c703f7 (?) (1 samples, 0.20%)</title><rect x="1159" y="324" width="2" height="15" fill="rgb(215,74,26)"/><text x="1162.00" y="334.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:18) (2 samples, 0.40%)</title><rect x="1159" y="100" width="5" height="15" fill="rgb(240,122,47)"/><text x="1162.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.40%)</title><rect x="1159" y="116" width="5" height="15" fill="rgb(223,229,51)"/><text x="1162.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.40%)</title><rect x="1159" y="132" width="5" height="15" fill="rgb(230,45,36)"/><text x="1162.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.40%)</title><rect x="1159" y="148" width="5" height="15" fill="rgb(250,130,47)"/><text x="1162.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (2 samples, 0.40%)</title><rect x="1159" y="164" width="5" height="15" fill="rgb(244,54,25)"/><text x="1162.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (2 samples, 0.40%)</title><rect x="1159" y="180" width="5" height="15" fill="rgb(211,127,42)"/><text x="1162.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (2 samples, 0.40%)</title><rect x="1159" y="196" width="5" height="15" fill="rgb(220,107,17)"/><text x="1162.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1161" y="212" width="3" height="15" fill="rgb(233,47,53)"/><text x="1164.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1161" y="228" width="3" height="15" fill="rgb(205,61,52)"/><text x="1164.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1161" y="244" width="3" height="15" fill="rgb(223,91,54)"/><text x="1164.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1161" y="260" width="3" height="15" fill="rgb(212,100,10)"/><text x="1164.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1161" y="276" width="3" height="15" fill="rgb(244,127,20)"/><text x="1164.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1161" y="292" width="3" height="15" fill="rgb(227,54,41)"/><text x="1164.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1161" y="308" width="3" height="15" fill="rgb(245,142,45)"/><text x="1164.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1161" y="324" width="3" height="15" fill="rgb(219,76,24)"/><text x="1164.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1161" y="340" width="3" height="15" fill="rgb(253,153,14)"/><text x="1164.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1161" y="356" width="3" height="15" fill="rgb(214,99,28)"/><text x="1164.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1164" y="340" width="2" height="15" fill="rgb(220,217,42)"/><text x="1167.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1164" y="356" width="2" height="15" fill="rgb(210,14,20)"/><text x="1167.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1164" y="372" width="2" height="15" fill="rgb(209,117,36)"/><text x="1167.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1164" y="388" width="2" height="15" fill="rgb(210,184,34)"/><text x="1167.00" y="398.50"></text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1166" y="340" width="2" height="15" fill="rgb(237,185,29)"/><text x="1169.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1168" y="340" width="5" height="15" fill="rgb(218,188,0)"/><text x="1171.00" y="350.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="340" width="5" height="15" fill="rgb(222,82,27)"/><text x="1176.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="356" width="5" height="15" fill="rgb(228,13,39)"/><text x="1176.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="372" width="5" height="15" fill="rgb(221,160,0)"/><text x="1176.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="388" width="5" height="15" fill="rgb(213,180,16)"/><text x="1176.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="404" width="5" height="15" fill="rgb(232,157,29)"/><text x="1176.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="1173" y="420" width="5" height="15" fill="rgb(237,45,11)"/><text x="1176.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1175" y="436" width="3" height="15" fill="rgb(221,134,32)"/><text x="1178.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1175" y="452" width="3" height="15" fill="rgb(242,210,3)"/><text x="1178.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1175" y="468" width="3" height="15" fill="rgb(212,54,6)"/><text x="1178.00" y="478.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1178" y="372" width="2" height="15" fill="rgb(237,114,52)"/><text x="1181.00" y="382.50"></text></g><g><title>0x7ffae4b1f91e (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1178" y="388" width="2" height="15" fill="rgb(250,160,1)"/><text x="1181.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1180" y="372" width="2" height="15" fill="rgb(224,139,37)"/><text x="1183.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1180" y="388" width="2" height="15" fill="rgb(235,168,32)"/><text x="1183.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1180" y="404" width="2" height="15" fill="rgb(208,104,13)"/><text x="1183.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1180" y="420" width="2" height="15" fill="rgb(208,145,5)"/><text x="1183.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1180" y="436" width="2" height="15" fill="rgb(227,118,48)"/><text x="1183.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1180" y="452" width="2" height="15" fill="rgb(214,202,10)"/><text x="1183.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1180" y="468" width="2" height="15" fill="rgb(253,207,21)"/><text x="1183.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1180" y="484" width="2" height="15" fill="rgb(234,91,46)"/><text x="1183.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1180" y="500" width="2" height="15" fill="rgb(232,192,38)"/><text x="1183.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1180" y="516" width="2" height="15" fill="rgb(233,132,53)"/><text x="1183.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="1180" y="532" width="2" height="15" fill="rgb(216,2,48)"/><text x="1183.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1180" y="548" width="2" height="15" fill="rgb(252,171,40)"/><text x="1183.00" y="558.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.60%)</title><rect x="1178" y="340" width="7" height="15" fill="rgb(233,221,52)"/><text x="1181.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.60%)</title><rect x="1178" y="356" width="7" height="15" fill="rgb(233,226,40)"/><text x="1181.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1182" y="372" width="3" height="15" fill="rgb(224,167,27)"/><text x="1185.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1182" y="388" width="3" height="15" fill="rgb(230,12,37)"/><text x="1185.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="340" width="2" height="15" fill="rgb(253,88,15)"/><text x="1188.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="356" width="2" height="15" fill="rgb(233,44,21)"/><text x="1188.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="372" width="2" height="15" fill="rgb(234,122,43)"/><text x="1188.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="388" width="2" height="15" fill="rgb(229,35,47)"/><text x="1188.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="404" width="2" height="15" fill="rgb(251,116,29)"/><text x="1188.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="420" width="2" height="15" fill="rgb(247,121,54)"/><text x="1188.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="436" width="2" height="15" fill="rgb(220,182,7)"/><text x="1188.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="452" width="2" height="15" fill="rgb(205,130,28)"/><text x="1188.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="468" width="2" height="15" fill="rgb(206,103,24)"/><text x="1188.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="484" width="2" height="15" fill="rgb(243,196,48)"/><text x="1188.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="500" width="2" height="15" fill="rgb(220,26,33)"/><text x="1188.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="516" width="2" height="15" fill="rgb(218,64,38)"/><text x="1188.00" y="526.50"></text></g><g><title>all (503 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(246,80,3)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:52) (13 samples, 2.58%)</title><rect x="1159" y="52" width="31" height="15" fill="rgb(237,125,51)"/><text x="1162.00" y="62.50">&lt;m..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:51) (13 samples, 2.58%)</title><rect x="1159" y="68" width="31" height="15" fill="rgb(231,139,0)"/><text x="1162.00" y="78.50">pr..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:29) (13 samples, 2.58%)</title><rect x="1159" y="84" width="31" height="15" fill="rgb(243,11,23)"/><text x="1162.00" y="94.50">se..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:23) (11 samples, 2.19%)</title><rect x="1164" y="100" width="26" height="15" fill="rgb(206,68,25)"/><text x="1167.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (11 samples, 2.19%)</title><rect x="1164" y="116" width="26" height="15" fill="rgb(234,35,30)"/><text x="1167.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (11 samples, 2.19%)</title><rect x="1164" y="132" width="26" height="15" fill="rgb(240,126,43)"/><text x="1167.00" y="142.50">&lt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (11 samples, 2.19%)</title><rect x="1164" y="148" width="26" height="15" fill="rgb(251,112,18)"/><text x="1167.00" y="158.50">r..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (11 samples, 2.19%)</title><rect x="1164" y="164" width="26" height="15" fill="rgb(216,202,27)"/><text x="1167.00" y="174.50">_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (11 samples, 2.19%)</title><rect x="1164" y="180" width="26" height="15" fill="rgb(223,109,37)"/><text x="1167.00" y="190.50">r..</text></g><g><title>run (onnxruntime/capi/session.py:136) (11 samples, 2.19%)</title><rect x="1164" y="196" width="26" height="15" fill="rgb(226,110,37)"/><text x="1167.00" y="206.50">r..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.19%)</title><rect x="1164" y="212" width="26" height="15" fill="rgb(251,166,19)"/><text x="1167.00" y="222.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.19%)</title><rect x="1164" y="228" width="26" height="15" fill="rgb(224,139,40)"/><text x="1167.00" y="238.50">v..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.19%)</title><rect x="1164" y="244" width="26" height="15" fill="rgb(205,103,54)"/><text x="1167.00" y="254.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.19%)</title><rect x="1164" y="260" width="26" height="15" fill="rgb(206,67,14)"/><text x="1167.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.19%)</title><rect x="1164" y="276" width="26" height="15" fill="rgb(253,14,50)"/><text x="1167.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.19%)</title><rect x="1164" y="292" width="26" height="15" fill="rgb(213,83,30)"/><text x="1167.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.19%)</title><rect x="1164" y="308" width="26" height="15" fill="rgb(217,95,27)"/><text x="1167.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.19%)</title><rect x="1164" y="324" width="26" height="15" fill="rgb(228,204,22)"/><text x="1167.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1187" y="340" width="3" height="15" fill="rgb(223,173,19)"/><text x="1190.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(207,0,28)"/><text x="1190.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1187" y="372" width="3" height="15" fill="rgb(232,149,50)"/><text x="1190.00" y="382.50"></text></g></g></svg>