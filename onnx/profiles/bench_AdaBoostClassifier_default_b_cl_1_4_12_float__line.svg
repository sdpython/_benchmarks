<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2118" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2101.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2101.00"> </text><g id="frames"><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.18%)</title><rect x="10" y="340" width="2" height="15" fill="rgb(224,74,54)"/><text x="13.00" y="350.50"></text></g><g><title>fit (sklearn/tree/_classes.py:143) (2 samples, 0.36%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(253,160,4)"/><text x="13.00" y="206.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (2 samples, 0.36%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(244,44,6)"/><text x="13.00" y="222.50"></text></g><g><title>__init__ (mtrand.c:3210) (2 samples, 0.36%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(207,71,46)"/><text x="13.00" y="238.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (2 samples, 0.36%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(212,196,25)"/><text x="13.00" y="254.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (2 samples, 0.36%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(235,88,23)"/><text x="13.00" y="270.50"></text></g><g><title>__init__ (mt19937.c:2381) (2 samples, 0.36%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(221,123,6)"/><text x="13.00" y="286.50"></text></g><g><title>MT19937___init__ (mt19937.c:2561) (2 samples, 0.36%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(238,28,46)"/><text x="13.00" y="302.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (2 samples, 0.36%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(223,185,17)"/><text x="13.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.36%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(244,140,45)"/><text x="13.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="12" y="340" width="2" height="15" fill="rgb(252,209,11)"/><text x="15.00" y="350.50"></text></g><g><title>fit (sklearn/tree/_classes.py:149) (1 samples, 0.18%)</title><rect x="14" y="196" width="2" height="15" fill="rgb(210,163,16)"/><text x="17.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.18%)</title><rect x="14" y="212" width="2" height="15" fill="rgb(252,117,31)"/><text x="17.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:50) (1 samples, 0.18%)</title><rect x="14" y="228" width="2" height="15" fill="rgb(238,34,37)"/><text x="17.00" y="238.50"></text></g><g><title>_safe_accumulator_op (sklearn/utils/extmath.py:704) (1 samples, 0.18%)</title><rect x="14" y="244" width="2" height="15" fill="rgb(217,174,36)"/><text x="17.00" y="254.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.18%)</title><rect x="14" y="260" width="2" height="15" fill="rgb(236,23,53)"/><text x="17.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.18%)</title><rect x="14" y="276" width="2" height="15" fill="rgb(237,199,40)"/><text x="17.00" y="286.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.18%)</title><rect x="14" y="292" width="2" height="15" fill="rgb(212,31,17)"/><text x="17.00" y="302.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.18%)</title><rect x="14" y="308" width="2" height="15" fill="rgb(238,136,18)"/><text x="17.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.18%)</title><rect x="14" y="324" width="2" height="15" fill="rgb(243,174,5)"/><text x="17.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.18%)</title><rect x="14" y="340" width="2" height="15" fill="rgb(215,160,9)"/><text x="17.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.18%)</title><rect x="14" y="356" width="2" height="15" fill="rgb(205,191,12)"/><text x="17.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.18%)</title><rect x="14" y="372" width="2" height="15" fill="rgb(254,64,32)"/><text x="17.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.18%)</title><rect x="14" y="388" width="2" height="15" fill="rgb(205,205,16)"/><text x="17.00" y="398.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.18%)</title><rect x="14" y="404" width="2" height="15" fill="rgb(249,39,54)"/><text x="17.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (1 samples, 0.18%)</title><rect x="14" y="420" width="2" height="15" fill="rgb(235,200,41)"/><text x="17.00" y="430.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.18%)</title><rect x="14" y="436" width="2" height="15" fill="rgb(210,158,32)"/><text x="17.00" y="446.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (4 samples, 0.73%)</title><rect x="10" y="164" width="8" height="15" fill="rgb(238,30,18)"/><text x="13.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (4 samples, 0.73%)</title><rect x="10" y="180" width="8" height="15" fill="rgb(241,141,50)"/><text x="13.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (1 samples, 0.18%)</title><rect x="16" y="196" width="2" height="15" fill="rgb(226,89,21)"/><text x="19.00" y="206.50"></text></g><g><title>0x7febc57a7b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="16" y="212" width="2" height="15" fill="rgb(217,89,42)"/><text x="19.00" y="222.50"></text></g><g><title>0x7febc57d910a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="16" y="228" width="2" height="15" fill="rgb(215,40,30)"/><text x="19.00" y="238.50"></text></g><g><title>0x7febc5a04d8c (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="16" y="244" width="2" height="15" fill="rgb(223,195,42)"/><text x="19.00" y="254.50"></text></g><g><title>0x7febc59fdccc (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="16" y="260" width="2" height="15" fill="rgb(207,53,15)"/><text x="19.00" y="270.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (5 samples, 0.91%)</title><rect x="10" y="100" width="10" height="15" fill="rgb(221,216,54)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (5 samples, 0.91%)</title><rect x="10" y="116" width="10" height="15" fill="rgb(224,121,8)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (5 samples, 0.91%)</title><rect x="10" y="132" width="10" height="15" fill="rgb(208,150,28)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (5 samples, 0.91%)</title><rect x="10" y="148" width="10" height="15" fill="rgb(231,185,27)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:509) (1 samples, 0.18%)</title><rect x="18" y="164" width="2" height="15" fill="rgb(230,160,21)"/><text x="21.00" y="174.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (1 samples, 0.18%)</title><rect x="18" y="180" width="2" height="15" fill="rgb(238,222,32)"/><text x="21.00" y="190.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (1 samples, 0.18%)</title><rect x="18" y="196" width="2" height="15" fill="rgb(248,94,44)"/><text x="21.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.18%)</title><rect x="18" y="212" width="2" height="15" fill="rgb(206,13,49)"/><text x="21.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:50) (1 samples, 0.18%)</title><rect x="18" y="228" width="2" height="15" fill="rgb(216,145,13)"/><text x="21.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:31) (6 samples, 1.09%)</title><rect x="10" y="52" width="12" height="15" fill="rgb(242,186,7)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:11) (6 samples, 1.09%)</title><rect x="10" y="68" width="12" height="15" fill="rgb(243,137,37)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:39) (6 samples, 1.09%)</title><rect x="10" y="84" width="12" height="15" fill="rgb(244,202,35)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:156) (1 samples, 0.18%)</title><rect x="20" y="100" width="2" height="15" fill="rgb(220,88,23)"/><text x="23.00" y="110.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.18%)</title><rect x="20" y="116" width="2" height="15" fill="rgb(238,16,6)"/><text x="23.00" y="126.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.18%)</title><rect x="20" y="132" width="2" height="15" fill="rgb(226,219,26)"/><text x="23.00" y="142.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:28) (1 samples, 0.18%)</title><rect x="22" y="84" width="2" height="15" fill="rgb(212,141,1)"/><text x="25.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.18%)</title><rect x="22" y="100" width="2" height="15" fill="rgb(233,183,44)"/><text x="25.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.18%)</title><rect x="22" y="116" width="2" height="15" fill="rgb(228,34,51)"/><text x="25.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.18%)</title><rect x="22" y="132" width="2" height="15" fill="rgb(235,226,39)"/><text x="25.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.18%)</title><rect x="22" y="148" width="2" height="15" fill="rgb(247,49,0)"/><text x="25.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:135) (1 samples, 0.18%)</title><rect x="22" y="164" width="2" height="15" fill="rgb(231,94,34)"/><text x="25.00" y="174.50"></text></g><g><title>compile (skl2onnx/common/_topology.py:840) (1 samples, 0.18%)</title><rect x="22" y="180" width="2" height="15" fill="rgb(232,40,11)"/><text x="25.00" y="190.50"></text></g><g><title>_infer_all_types (skl2onnx/common/_topology.py:693) (1 samples, 0.18%)</title><rect x="22" y="196" width="2" height="15" fill="rgb(206,177,18)"/><text x="25.00" y="206.50"></text></g><g><title>infer_types (skl2onnx/common/_topology.py:210) (1 samples, 0.18%)</title><rect x="22" y="212" width="2" height="15" fill="rgb(243,143,14)"/><text x="25.00" y="222.50"></text></g><g><title>calculate_linear_classifier_output_shapes (skl2onnx/common/shape_calculator.py:60) (1 samples, 0.18%)</title><rect x="22" y="228" width="2" height="15" fill="rgb(221,49,13)"/><text x="25.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/shape_calculator.py:59) (1 samples, 0.18%)</title><rect x="22" y="244" width="2" height="15" fill="rgb(217,174,8)"/><text x="25.00" y="254.50"></text></g><g><title>array_item (mapping.c:1379) (1 samples, 0.18%)</title><rect x="22" y="260" width="2" height="15" fill="rgb(224,166,48)"/><text x="25.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.18%)</title><rect x="24" y="244" width="3" height="15" fill="rgb(217,72,31)"/><text x="27.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.36%)</title><rect x="27" y="244" width="4" height="15" fill="rgb(231,99,6)"/><text x="30.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.36%)</title><rect x="27" y="260" width="4" height="15" fill="rgb(210,131,18)"/><text x="30.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (5 samples, 0.91%)</title><rect x="24" y="212" width="11" height="15" fill="rgb(213,214,46)"/><text x="27.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 0.91%)</title><rect x="24" y="228" width="11" height="15" fill="rgb(225,196,7)"/><text x="27.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.36%)</title><rect x="31" y="244" width="4" height="15" fill="rgb(236,40,36)"/><text x="34.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.18%)</title><rect x="35" y="244" width="2" height="15" fill="rgb(236,48,30)"/><text x="38.00" y="254.50"></text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.18%)</title><rect x="35" y="260" width="2" height="15" fill="rgb(252,19,28)"/><text x="38.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.36%)</title><rect x="37" y="244" width="5" height="15" fill="rgb(216,146,5)"/><text x="40.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.36%)</title><rect x="37" y="260" width="5" height="15" fill="rgb(212,98,6)"/><text x="40.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.36%)</title><rect x="37" y="276" width="5" height="15" fill="rgb(235,164,29)"/><text x="40.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.18%)</title><rect x="42" y="244" width="2" height="15" fill="rgb(212,45,22)"/><text x="45.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.18%)</title><rect x="44" y="244" width="2" height="15" fill="rgb(248,80,0)"/><text x="47.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.18%)</title><rect x="44" y="260" width="2" height="15" fill="rgb(216,145,43)"/><text x="47.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.18%)</title><rect x="46" y="244" width="2" height="15" fill="rgb(209,38,31)"/><text x="49.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.36%)</title><rect x="50" y="276" width="4" height="15" fill="rgb(220,70,42)"/><text x="53.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.73%)</title><rect x="48" y="244" width="9" height="15" fill="rgb(249,226,23)"/><text x="51.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 0.73%)</title><rect x="48" y="260" width="9" height="15" fill="rgb(234,53,33)"/><text x="51.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.18%)</title><rect x="54" y="276" width="3" height="15" fill="rgb(238,50,4)"/><text x="57.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.18%)</title><rect x="57" y="260" width="2" height="15" fill="rgb(216,51,37)"/><text x="60.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (12 samples, 2.18%)</title><rect x="35" y="212" width="26" height="15" fill="rgb(242,152,47)"/><text x="38.00" y="222.50">p..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (12 samples, 2.18%)</title><rect x="35" y="228" width="26" height="15" fill="rgb(243,57,0)"/><text x="38.00" y="238.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.36%)</title><rect x="57" y="244" width="4" height="15" fill="rgb(224,74,32)"/><text x="60.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.18%)</title><rect x="59" y="260" width="2" height="15" fill="rgb(240,31,32)"/><text x="62.00" y="270.50"></text></g><g><title>0x7febc57b2f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="61" y="244" width="2" height="15" fill="rgb(223,18,24)"/><text x="64.00" y="254.50"></text></g><g><title>0x7febc57a2d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="61" y="260" width="2" height="15" fill="rgb(234,138,51)"/><text x="64.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1362) (1 samples, 0.18%)</title><rect x="61" y="276" width="2" height="15" fill="rgb(211,161,37)"/><text x="64.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.18%)</title><rect x="61" y="292" width="2" height="15" fill="rgb(218,81,34)"/><text x="64.00" y="302.50"></text></g><g><title>0x7febc57c14b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="63" y="276" width="2" height="15" fill="rgb(229,170,49)"/><text x="66.00" y="286.50"></text></g><g><title>0x7febc57c1592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="65" y="276" width="2" height="15" fill="rgb(219,148,16)"/><text x="68.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.18%)</title><rect x="65" y="292" width="2" height="15" fill="rgb(220,142,18)"/><text x="68.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.18%)</title><rect x="65" y="308" width="2" height="15" fill="rgb(224,11,47)"/><text x="68.00" y="318.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.18%)</title><rect x="65" y="324" width="2" height="15" fill="rgb(226,101,4)"/><text x="68.00" y="334.50"></text></g><g><title>0x7febc57b2fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.54%)</title><rect x="63" y="244" width="6" height="15" fill="rgb(230,124,0)"/><text x="66.00" y="254.50"></text></g><g><title>0x7febc57c2405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.54%)</title><rect x="63" y="260" width="6" height="15" fill="rgb(227,226,11)"/><text x="66.00" y="270.50"></text></g><g><title>0x7febc57c1c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="67" y="276" width="2" height="15" fill="rgb(252,170,26)"/><text x="70.00" y="286.50"></text></g><g><title>0x7febc5799529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="67" y="292" width="2" height="15" fill="rgb(231,85,12)"/><text x="70.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.18%)</title><rect x="67" y="308" width="2" height="15" fill="rgb(229,27,39)"/><text x="70.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.18%)</title><rect x="67" y="324" width="2" height="15" fill="rgb(234,43,26)"/><text x="70.00" y="334.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.18%)</title><rect x="69" y="260" width="3" height="15" fill="rgb(235,9,6)"/><text x="72.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.18%)</title><rect x="72" y="276" width="2" height="15" fill="rgb(214,224,43)"/><text x="75.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3890) (1 samples, 0.18%)</title><rect x="72" y="292" width="2" height="15" fill="rgb(247,168,52)"/><text x="75.00" y="302.50"></text></g><g><title>0x7febc57b305a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.54%)</title><rect x="69" y="244" width="7" height="15" fill="rgb(230,114,30)"/><text x="72.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.36%)</title><rect x="72" y="260" width="4" height="15" fill="rgb(236,141,21)"/><text x="75.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.18%)</title><rect x="74" y="276" width="2" height="15" fill="rgb(251,84,9)"/><text x="77.00" y="286.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.18%)</title><rect x="74" y="292" width="2" height="15" fill="rgb(211,40,39)"/><text x="77.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.18%)</title><rect x="74" y="308" width="2" height="15" fill="rgb(220,79,36)"/><text x="77.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.18%)</title><rect x="74" y="324" width="2" height="15" fill="rgb(219,215,15)"/><text x="77.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2217) (1 samples, 0.18%)</title><rect x="74" y="340" width="2" height="15" fill="rgb(240,121,16)"/><text x="77.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (8 samples, 1.45%)</title><rect x="61" y="212" width="17" height="15" fill="rgb(231,89,17)"/><text x="64.00" y="222.50"></text></g><g><title>0x7febc57b3d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.45%)</title><rect x="61" y="228" width="17" height="15" fill="rgb(240,34,43)"/><text x="64.00" y="238.50"></text></g><g><title>0x7febc57b3328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="76" y="244" width="2" height="15" fill="rgb(253,178,30)"/><text x="79.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.36%)</title><rect x="78" y="212" width="4" height="15" fill="rgb(218,166,11)"/><text x="81.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:481) (1 samples, 0.18%)</title><rect x="80" y="228" width="2" height="15" fill="rgb(222,53,26)"/><text x="83.00" y="238.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.18%)</title><rect x="87" y="340" width="2" height="15" fill="rgb(233,161,36)"/><text x="90.00" y="350.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:14) (1 samples, 0.18%)</title><rect x="87" y="356" width="2" height="15" fill="rgb(244,41,7)"/><text x="90.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (4 samples, 0.73%)</title><rect x="82" y="212" width="9" height="15" fill="rgb(238,218,1)"/><text x="85.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (2 samples, 0.36%)</title><rect x="87" y="228" width="4" height="15" fill="rgb(241,221,17)"/><text x="90.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (2 samples, 0.36%)</title><rect x="87" y="244" width="4" height="15" fill="rgb(240,47,8)"/><text x="90.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (2 samples, 0.36%)</title><rect x="87" y="260" width="4" height="15" fill="rgb(253,165,47)"/><text x="90.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.36%)</title><rect x="87" y="276" width="4" height="15" fill="rgb(207,212,49)"/><text x="90.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.36%)</title><rect x="87" y="292" width="4" height="15" fill="rgb(214,76,21)"/><text x="90.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.36%)</title><rect x="87" y="308" width="4" height="15" fill="rgb(242,70,30)"/><text x="90.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.36%)</title><rect x="87" y="324" width="4" height="15" fill="rgb(246,123,41)"/><text x="90.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.18%)</title><rect x="89" y="340" width="2" height="15" fill="rgb(212,107,19)"/><text x="92.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.18%)</title><rect x="89" y="356" width="2" height="15" fill="rgb(222,11,37)"/><text x="92.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.18%)</title><rect x="91" y="228" width="2" height="15" fill="rgb(236,160,4)"/><text x="94.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:564) (1 samples, 0.18%)</title><rect x="91" y="244" width="2" height="15" fill="rgb(244,69,51)"/><text x="94.00" y="254.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.18%)</title><rect x="93" y="228" width="2" height="15" fill="rgb(242,12,54)"/><text x="96.00" y="238.50"></text></g><g><title>binop_should_defer (binop_override.h:145) (1 samples, 0.18%)</title><rect x="93" y="244" width="2" height="15" fill="rgb(226,130,2)"/><text x="96.00" y="254.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c:112) (1 samples, 0.18%)</title><rect x="93" y="260" width="2" height="15" fill="rgb(220,58,16)"/><text x="96.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="95" y="260" width="2" height="15" fill="rgb(206,165,34)"/><text x="98.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.18%)</title><rect x="95" y="276" width="2" height="15" fill="rgb(241,23,24)"/><text x="98.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.18%)</title><rect x="95" y="292" width="2" height="15" fill="rgb(235,112,22)"/><text x="98.00" y="302.50"></text></g><g><title>DOUBLE_equal (loops.c.src:1773) (1 samples, 0.18%)</title><rect x="95" y="308" width="2" height="15" fill="rgb(242,114,40)"/><text x="98.00" y="318.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src:289) (1 samples, 0.18%)</title><rect x="95" y="324" width="2" height="15" fill="rgb(250,160,37)"/><text x="98.00" y="334.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (35 samples, 6.35%)</title><rect x="24" y="196" width="75" height="15" fill="rgb(234,68,30)"/><text x="27.00" y="206.50">_samme_p..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (4 samples, 0.73%)</title><rect x="91" y="212" width="8" height="15" fill="rgb(209,62,50)"/><text x="94.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.36%)</title><rect x="95" y="228" width="4" height="15" fill="rgb(241,112,42)"/><text x="98.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="95" y="244" width="4" height="15" fill="rgb(208,30,23)"/><text x="98.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.18%)</title><rect x="97" y="260" width="2" height="15" fill="rgb(224,189,49)"/><text x="100.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.18%)</title><rect x="97" y="276" width="2" height="15" fill="rgb(236,174,8)"/><text x="100.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.18%)</title><rect x="97" y="292" width="2" height="15" fill="rgb(231,169,5)"/><text x="100.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.18%)</title><rect x="97" y="308" width="2" height="15" fill="rgb(225,224,53)"/><text x="100.00" y="318.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.18%)</title><rect x="99" y="228" width="3" height="15" fill="rgb(208,29,44)"/><text x="102.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.36%)</title><rect x="102" y="228" width="4" height="15" fill="rgb(246,17,3)"/><text x="105.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.36%)</title><rect x="102" y="244" width="4" height="15" fill="rgb(220,191,39)"/><text x="105.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.36%)</title><rect x="102" y="260" width="4" height="15" fill="rgb(223,24,25)"/><text x="105.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.36%)</title><rect x="102" y="276" width="4" height="15" fill="rgb(243,28,47)"/><text x="105.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.36%)</title><rect x="102" y="292" width="4" height="15" fill="rgb(218,229,41)"/><text x="105.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.18%)</title><rect x="108" y="308" width="2" height="15" fill="rgb(242,21,27)"/><text x="111.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.18%)</title><rect x="108" y="324" width="2" height="15" fill="rgb(245,102,10)"/><text x="111.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.18%)</title><rect x="110" y="324" width="2" height="15" fill="rgb(227,86,13)"/><text x="113.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.18%)</title><rect x="110" y="340" width="2" height="15" fill="rgb(233,86,36)"/><text x="113.00" y="350.50"></text></g><g><title>0x7febebd85e54 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="110" y="356" width="2" height="15" fill="rgb(237,217,23)"/><text x="113.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.54%)</title><rect x="112" y="324" width="7" height="15" fill="rgb(231,158,9)"/><text x="115.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.54%)</title><rect x="112" y="340" width="7" height="15" fill="rgb(218,225,25)"/><text x="115.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.18%)</title><rect x="117" y="356" width="2" height="15" fill="rgb(252,156,50)"/><text x="120.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.18%)</title><rect x="117" y="372" width="2" height="15" fill="rgb(222,90,23)"/><text x="120.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="119" y="340" width="2" height="15" fill="rgb(213,184,4)"/><text x="122.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="119" y="356" width="2" height="15" fill="rgb(227,34,41)"/><text x="122.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.18%)</title><rect x="119" y="372" width="2" height="15" fill="rgb(230,1,38)"/><text x="122.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.18%)</title><rect x="119" y="388" width="2" height="15" fill="rgb(223,214,47)"/><text x="122.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.18%)</title><rect x="119" y="404" width="2" height="15" fill="rgb(233,177,43)"/><text x="122.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.18%)</title><rect x="119" y="420" width="2" height="15" fill="rgb(234,142,8)"/><text x="122.00" y="430.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (6 samples, 1.09%)</title><rect x="110" y="308" width="13" height="15" fill="rgb(242,182,22)"/><text x="113.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.36%)</title><rect x="119" y="324" width="4" height="15" fill="rgb(242,211,40)"/><text x="122.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="121" y="340" width="2" height="15" fill="rgb(218,227,13)"/><text x="124.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="121" y="356" width="2" height="15" fill="rgb(214,108,37)"/><text x="124.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.18%)</title><rect x="121" y="372" width="2" height="15" fill="rgb(210,16,8)"/><text x="124.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.18%)</title><rect x="121" y="388" width="2" height="15" fill="rgb(254,209,21)"/><text x="124.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:287) (1 samples, 0.18%)</title><rect x="121" y="404" width="2" height="15" fill="rgb(237,77,15)"/><text x="124.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:546) (1 samples, 0.18%)</title><rect x="121" y="420" width="2" height="15" fill="rgb(252,191,0)"/><text x="124.00" y="430.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.18%)</title><rect x="123" y="404" width="2" height="15" fill="rgb(209,156,3)"/><text x="126.00" y="414.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:326) (1 samples, 0.18%)</title><rect x="123" y="420" width="2" height="15" fill="rgb(219,136,30)"/><text x="126.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.36%)</title><rect x="123" y="324" width="4" height="15" fill="rgb(223,55,40)"/><text x="126.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.36%)</title><rect x="123" y="340" width="4" height="15" fill="rgb(237,4,47)"/><text x="126.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.36%)</title><rect x="123" y="356" width="4" height="15" fill="rgb(249,93,36)"/><text x="126.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.36%)</title><rect x="123" y="372" width="4" height="15" fill="rgb(228,52,6)"/><text x="126.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.36%)</title><rect x="123" y="388" width="4" height="15" fill="rgb(254,29,46)"/><text x="126.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1724) (1 samples, 0.18%)</title><rect x="125" y="404" width="2" height="15" fill="rgb(253,158,27)"/><text x="128.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="127" y="356" width="2" height="15" fill="rgb(240,25,3)"/><text x="130.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.18%)</title><rect x="127" y="372" width="2" height="15" fill="rgb(251,88,11)"/><text x="130.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.18%)</title><rect x="127" y="388" width="2" height="15" fill="rgb(253,77,36)"/><text x="130.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.18%)</title><rect x="127" y="404" width="2" height="15" fill="rgb(224,192,3)"/><text x="130.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (15 samples, 2.72%)</title><rect x="99" y="196" width="33" height="15" fill="rgb(213,182,54)"/><text x="102.00" y="206.50">_s..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (15 samples, 2.72%)</title><rect x="99" y="212" width="33" height="15" fill="rgb(251,160,52)"/><text x="102.00" y="222.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 2.18%)</title><rect x="106" y="228" width="26" height="15" fill="rgb(211,79,21)"/><text x="109.00" y="238.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (11 samples, 2.00%)</title><rect x="108" y="244" width="24" height="15" fill="rgb(218,47,2)"/><text x="111.00" y="254.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (11 samples, 2.00%)</title><rect x="108" y="260" width="24" height="15" fill="rgb(235,158,9)"/><text x="111.00" y="270.50">_..</text></g><g><title>array_clip (methods.c:2381) (11 samples, 2.00%)</title><rect x="108" y="276" width="24" height="15" fill="rgb(241,140,8)"/><text x="111.00" y="286.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 2.00%)</title><rect x="108" y="292" width="24" height="15" fill="rgb(211,95,50)"/><text x="111.00" y="302.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:109) (4 samples, 0.73%)</title><rect x="123" y="308" width="9" height="15" fill="rgb(220,37,31)"/><text x="126.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.36%)</title><rect x="127" y="324" width="5" height="15" fill="rgb(219,54,24)"/><text x="130.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="127" y="340" width="5" height="15" fill="rgb(229,173,6)"/><text x="130.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.18%)</title><rect x="129" y="356" width="3" height="15" fill="rgb(237,101,17)"/><text x="132.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.18%)</title><rect x="129" y="372" width="3" height="15" fill="rgb(249,90,45)"/><text x="132.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.18%)</title><rect x="129" y="388" width="3" height="15" fill="rgb(253,105,9)"/><text x="132.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.18%)</title><rect x="129" y="404" width="3" height="15" fill="rgb(246,146,48)"/><text x="132.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.18%)</title><rect x="134" y="244" width="2" height="15" fill="rgb(213,83,4)"/><text x="137.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.18%)</title><rect x="134" y="260" width="2" height="15" fill="rgb(250,2,6)"/><text x="137.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.18%)</title><rect x="134" y="276" width="2" height="15" fill="rgb(228,142,22)"/><text x="137.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.18%)</title><rect x="134" y="292" width="2" height="15" fill="rgb(211,195,16)"/><text x="137.00" y="302.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src:1924) (1 samples, 0.18%)</title><rect x="134" y="308" width="2" height="15" fill="rgb(225,48,38)"/><text x="137.00" y="318.50"></text></g><g><title>_basic_copy (arraytypes.c.src:1890) (1 samples, 0.18%)</title><rect x="134" y="324" width="2" height="15" fill="rgb(248,16,11)"/><text x="137.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.18%)</title><rect x="136" y="244" width="2" height="15" fill="rgb(233,191,38)"/><text x="139.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.18%)</title><rect x="136" y="260" width="2" height="15" fill="rgb(211,162,46)"/><text x="139.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.18%)</title><rect x="136" y="276" width="2" height="15" fill="rgb(215,22,45)"/><text x="139.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:443) (1 samples, 0.18%)</title><rect x="136" y="292" width="2" height="15" fill="rgb(225,51,10)"/><text x="139.00" y="302.50"></text></g><g><title>array_multiply (number.c:354) (3 samples, 0.54%)</title><rect x="134" y="212" width="6" height="15" fill="rgb(228,75,34)"/><text x="137.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.54%)</title><rect x="134" y="228" width="6" height="15" fill="rgb(211,125,5)"/><text x="137.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="138" y="244" width="2" height="15" fill="rgb(236,157,52)"/><text x="141.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.18%)</title><rect x="138" y="260" width="2" height="15" fill="rgb(209,21,36)"/><text x="141.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.18%)</title><rect x="138" y="276" width="2" height="15" fill="rgb(211,1,43)"/><text x="141.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:693) (1 samples, 0.18%)</title><rect x="138" y="292" width="2" height="15" fill="rgb(227,159,48)"/><text x="141.00" y="302.50"></text></g><g><title>array_subtract (number.c:337) (1 samples, 0.18%)</title><rect x="140" y="212" width="2" height="15" fill="rgb(237,204,15)"/><text x="143.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.18%)</title><rect x="142" y="244" width="2" height="15" fill="rgb(242,212,46)"/><text x="145.00" y="254.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.18%)</title><rect x="142" y="260" width="2" height="15" fill="rgb(208,1,21)"/><text x="145.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.18%)</title><rect x="142" y="276" width="2" height="15" fill="rgb(207,71,44)"/><text x="145.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.18%)</title><rect x="142" y="292" width="2" height="15" fill="rgb(211,149,51)"/><text x="145.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.18%)</title><rect x="142" y="308" width="2" height="15" fill="rgb(208,74,31)"/><text x="145.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1079) (1 samples, 0.18%)</title><rect x="142" y="324" width="2" height="15" fill="rgb(229,227,38)"/><text x="145.00" y="334.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (7 samples, 1.27%)</title><rect x="132" y="196" width="15" height="15" fill="rgb(219,131,36)"/><text x="135.00" y="206.50"></text></g><g><title>array_subtract (number.c:342) (2 samples, 0.36%)</title><rect x="142" y="212" width="5" height="15" fill="rgb(244,186,52)"/><text x="145.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="142" y="228" width="5" height="15" fill="rgb(212,48,10)"/><text x="145.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="144" y="244" width="3" height="15" fill="rgb(211,116,30)"/><text x="147.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.18%)</title><rect x="144" y="260" width="3" height="15" fill="rgb(247,41,10)"/><text x="147.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.18%)</title><rect x="144" y="276" width="3" height="15" fill="rgb(231,107,10)"/><text x="147.00" y="286.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:280) (1 samples, 0.18%)</title><rect x="144" y="292" width="3" height="15" fill="rgb(233,199,1)"/><text x="147.00" y="302.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (58 samples, 10.53%)</title><rect x="24" y="148" width="125" height="15" fill="rgb(253,87,48)"/><text x="27.00" y="158.50">predict_proba (..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (58 samples, 10.53%)</title><rect x="24" y="164" width="125" height="15" fill="rgb(226,31,54)"/><text x="27.00" y="174.50">decision_functi..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (58 samples, 10.53%)</title><rect x="24" y="180" width="125" height="15" fill="rgb(218,87,18)"/><text x="27.00" y="190.50">&lt;genexpr&gt; (skle..</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.18%)</title><rect x="147" y="196" width="2" height="15" fill="rgb(212,178,35)"/><text x="150.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="147" y="212" width="2" height="15" fill="rgb(226,228,48)"/><text x="150.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="147" y="228" width="2" height="15" fill="rgb(209,19,4)"/><text x="150.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.18%)</title><rect x="147" y="244" width="2" height="15" fill="rgb(246,197,25)"/><text x="150.00" y="254.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (1 samples, 0.18%)</title><rect x="149" y="180" width="2" height="15" fill="rgb(237,212,3)"/><text x="152.00" y="190.50"></text></g><g><title>array_reshape (methods.c:184) (1 samples, 0.18%)</title><rect x="149" y="196" width="2" height="15" fill="rgb(214,131,29)"/><text x="152.00" y="206.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:18) (60 samples, 10.89%)</title><rect x="24" y="100" width="129" height="15" fill="rgb(245,83,12)"/><text x="27.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (60 samples, 10.89%)</title><rect x="24" y="116" width="129" height="15" fill="rgb(218,63,41)"/><text x="27.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (60 samples, 10.89%)</title><rect x="24" y="132" width="129" height="15" fill="rgb(238,218,34)"/><text x="27.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (2 samples, 0.36%)</title><rect x="149" y="148" width="4" height="15" fill="rgb(238,223,38)"/><text x="152.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (2 samples, 0.36%)</title><rect x="149" y="164" width="4" height="15" fill="rgb(251,205,41)"/><text x="152.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (1 samples, 0.18%)</title><rect x="151" y="180" width="2" height="15" fill="rgb(237,163,49)"/><text x="154.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.18%)</title><rect x="157" y="212" width="2" height="15" fill="rgb(245,190,39)"/><text x="160.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="157" y="228" width="2" height="15" fill="rgb(253,153,29)"/><text x="160.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="157" y="244" width="2" height="15" fill="rgb(219,196,23)"/><text x="160.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="157" y="260" width="2" height="15" fill="rgb(232,148,52)"/><text x="160.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (3 samples, 0.54%)</title><rect x="159" y="244" width="7" height="15" fill="rgb(220,37,39)"/><text x="162.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.36%)</title><rect x="170" y="260" width="4" height="15" fill="rgb(211,118,47)"/><text x="173.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 1.27%)</title><rect x="166" y="244" width="15" height="15" fill="rgb(240,217,46)"/><text x="169.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.54%)</title><rect x="174" y="260" width="7" height="15" fill="rgb(249,194,6)"/><text x="177.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (12 samples, 2.18%)</title><rect x="159" y="212" width="26" height="15" fill="rgb(252,65,34)"/><text x="162.00" y="222.50">p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 2.18%)</title><rect x="159" y="228" width="26" height="15" fill="rgb(235,152,43)"/><text x="162.00" y="238.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.36%)</title><rect x="181" y="244" width="4" height="15" fill="rgb(205,32,39)"/><text x="184.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.36%)</title><rect x="181" y="260" width="4" height="15" fill="rgb(217,130,47)"/><text x="184.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.18%)</title><rect x="187" y="244" width="2" height="15" fill="rgb(233,137,40)"/><text x="190.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.18%)</title><rect x="196" y="260" width="2" height="15" fill="rgb(246,206,26)"/><text x="199.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.18%)</title><rect x="198" y="260" width="2" height="15" fill="rgb(215,131,54)"/><text x="201.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.18%)</title><rect x="200" y="260" width="2" height="15" fill="rgb(228,178,45)"/><text x="203.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (7 samples, 1.27%)</title><rect x="189" y="244" width="15" height="15" fill="rgb(205,189,23)"/><text x="192.00" y="254.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.18%)</title><rect x="202" y="260" width="2" height="15" fill="rgb(246,92,45)"/><text x="205.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.18%)</title><rect x="207" y="260" width="2" height="15" fill="rgb(214,103,41)"/><text x="210.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.36%)</title><rect x="211" y="276" width="4" height="15" fill="rgb(224,89,2)"/><text x="214.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (9 samples, 1.63%)</title><rect x="204" y="244" width="20" height="15" fill="rgb(214,170,0)"/><text x="207.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (7 samples, 1.27%)</title><rect x="209" y="260" width="15" height="15" fill="rgb(236,153,16)"/><text x="212.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:189) (4 samples, 0.73%)</title><rect x="215" y="276" width="9" height="15" fill="rgb(227,117,2)"/><text x="218.00" y="286.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.18%)</title><rect x="224" y="260" width="2" height="15" fill="rgb(236,88,31)"/><text x="227.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.36%)</title><rect x="224" y="244" width="4" height="15" fill="rgb(246,43,2)"/><text x="227.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.18%)</title><rect x="226" y="260" width="2" height="15" fill="rgb(222,169,30)"/><text x="229.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.18%)</title><rect x="226" y="276" width="2" height="15" fill="rgb(209,20,12)"/><text x="229.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (4 samples, 0.73%)</title><rect x="228" y="244" width="9" height="15" fill="rgb(227,73,30)"/><text x="231.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.54%)</title><rect x="230" y="260" width="7" height="15" fill="rgb(235,106,9)"/><text x="233.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.18%)</title><rect x="234" y="276" width="3" height="15" fill="rgb(220,186,47)"/><text x="237.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="234" y="292" width="3" height="15" fill="rgb(235,56,9)"/><text x="237.00" y="302.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.18%)</title><rect x="237" y="260" width="2" height="15" fill="rgb(244,229,13)"/><text x="240.00" y="270.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.18%)</title><rect x="239" y="260" width="2" height="15" fill="rgb(240,58,40)"/><text x="242.00" y="270.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.18%)</title><rect x="241" y="260" width="2" height="15" fill="rgb(247,227,50)"/><text x="244.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 0.73%)</title><rect x="237" y="244" width="8" height="15" fill="rgb(234,67,38)"/><text x="240.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.18%)</title><rect x="243" y="260" width="2" height="15" fill="rgb(212,50,28)"/><text x="246.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (3 samples, 0.54%)</title><rect x="245" y="260" width="6" height="15" fill="rgb(226,15,11)"/><text x="248.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (4 samples, 0.73%)</title><rect x="245" y="244" width="9" height="15" fill="rgb(207,80,3)"/><text x="248.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.18%)</title><rect x="251" y="260" width="3" height="15" fill="rgb(226,195,51)"/><text x="254.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.18%)</title><rect x="254" y="244" width="2" height="15" fill="rgb(234,210,15)"/><text x="257.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.18%)</title><rect x="256" y="244" width="2" height="15" fill="rgb(209,201,6)"/><text x="259.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.18%)</title><rect x="266" y="276" width="3" height="15" fill="rgb(242,15,28)"/><text x="269.00" y="286.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.18%)</title><rect x="269" y="276" width="2" height="15" fill="rgb(236,203,7)"/><text x="272.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 0.91%)</title><rect x="262" y="260" width="11" height="15" fill="rgb(251,186,34)"/><text x="265.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.18%)</title><rect x="271" y="276" width="2" height="15" fill="rgb(253,131,35)"/><text x="274.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (8 samples, 1.45%)</title><rect x="258" y="244" width="17" height="15" fill="rgb(206,52,1)"/><text x="261.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.18%)</title><rect x="273" y="260" width="2" height="15" fill="rgb(248,210,34)"/><text x="276.00" y="270.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.18%)</title><rect x="273" y="276" width="2" height="15" fill="rgb(237,205,42)"/><text x="276.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.36%)</title><rect x="275" y="260" width="4" height="15" fill="rgb(238,65,50)"/><text x="278.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.18%)</title><rect x="279" y="260" width="2" height="15" fill="rgb(211,33,44)"/><text x="282.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 1.09%)</title><rect x="275" y="244" width="13" height="15" fill="rgb(254,207,4)"/><text x="278.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.54%)</title><rect x="281" y="260" width="7" height="15" fill="rgb(231,177,43)"/><text x="284.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (48 samples, 8.71%)</title><rect x="187" y="228" width="103" height="15" fill="rgb(235,227,18)"/><text x="190.00" y="238.50">_validate_X_..</text></g><g><title>check_array (sklearn/utils/validation.py:566) (1 samples, 0.18%)</title><rect x="288" y="244" width="2" height="15" fill="rgb(221,29,18)"/><text x="291.00" y="254.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (1 samples, 0.18%)</title><rect x="290" y="228" width="2" height="15" fill="rgb(223,74,50)"/><text x="293.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.18%)</title><rect x="290" y="244" width="2" height="15" fill="rgb(245,149,35)"/><text x="293.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (51 samples, 9.26%)</title><rect x="185" y="212" width="109" height="15" fill="rgb(222,15,6)"/><text x="188.00" y="222.50">predict_proba..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.18%)</title><rect x="292" y="228" width="2" height="15" fill="rgb(209,21,21)"/><text x="295.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.18%)</title><rect x="294" y="292" width="2" height="15" fill="rgb(230,150,23)"/><text x="297.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.18%)</title><rect x="294" y="308" width="2" height="15" fill="rgb(251,52,12)"/><text x="297.00" y="318.50"></text></g><g><title>0x7febc57b2f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="294" y="244" width="5" height="15" fill="rgb(223,182,9)"/><text x="297.00" y="254.50"></text></g><g><title>0x7febc57a2d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="294" y="260" width="5" height="15" fill="rgb(233,204,10)"/><text x="297.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.36%)</title><rect x="294" y="276" width="5" height="15" fill="rgb(214,188,32)"/><text x="297.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.18%)</title><rect x="296" y="292" width="3" height="15" fill="rgb(218,175,12)"/><text x="299.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.18%)</title><rect x="296" y="308" width="3" height="15" fill="rgb(212,125,27)"/><text x="299.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:131) (1 samples, 0.18%)</title><rect x="296" y="324" width="3" height="15" fill="rgb(242,94,50)"/><text x="299.00" y="334.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h:1540) (1 samples, 0.18%)</title><rect x="296" y="340" width="3" height="15" fill="rgb(217,23,48)"/><text x="299.00" y="350.50"></text></g><g><title>0x7febc57c2272 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="299" y="260" width="2" height="15" fill="rgb(227,115,6)"/><text x="302.00" y="270.50"></text></g><g><title>0x7febc57c1225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="301" y="276" width="2" height="15" fill="rgb(206,124,3)"/><text x="304.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.18%)</title><rect x="303" y="356" width="2" height="15" fill="rgb(247,46,45)"/><text x="306.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.18%)</title><rect x="303" y="372" width="2" height="15" fill="rgb(244,101,34)"/><text x="306.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c:360) (1 samples, 0.18%)</title><rect x="303" y="388" width="2" height="15" fill="rgb(241,61,44)"/><text x="306.00" y="398.50"></text></g><g><title>0x7febc57c12df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="303" y="276" width="4" height="15" fill="rgb(219,39,15)"/><text x="306.00" y="286.50"></text></g><g><title>0x7febc57a5d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="303" y="292" width="4" height="15" fill="rgb(229,31,15)"/><text x="306.00" y="302.50"></text></g><g><title>0x7febc57a5666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="303" y="308" width="4" height="15" fill="rgb(242,16,39)"/><text x="306.00" y="318.50"></text></g><g><title>0x7febc579b2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="303" y="324" width="4" height="15" fill="rgb(225,11,6)"/><text x="306.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.36%)</title><rect x="303" y="340" width="4" height="15" fill="rgb(245,114,32)"/><text x="306.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.18%)</title><rect x="305" y="356" width="2" height="15" fill="rgb(220,112,48)"/><text x="308.00" y="366.50"></text></g><g><title>0x7febc57c1592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="307" y="276" width="4" height="15" fill="rgb(245,168,33)"/><text x="310.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.36%)</title><rect x="307" y="292" width="4" height="15" fill="rgb(251,149,32)"/><text x="310.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.18%)</title><rect x="309" y="308" width="2" height="15" fill="rgb(221,127,7)"/><text x="312.00" y="318.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.18%)</title><rect x="309" y="324" width="2" height="15" fill="rgb(219,134,8)"/><text x="312.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.18%)</title><rect x="309" y="340" width="2" height="15" fill="rgb(213,126,12)"/><text x="312.00" y="350.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.18%)</title><rect x="309" y="356" width="2" height="15" fill="rgb(212,156,21)"/><text x="312.00" y="366.50"></text></g><g><title>0x7febc57c18c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="311" y="276" width="3" height="15" fill="rgb(240,148,14)"/><text x="314.00" y="286.50"></text></g><g><title>0x7febc57c192f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="314" y="276" width="2" height="15" fill="rgb(247,24,12)"/><text x="317.00" y="286.50"></text></g><g><title>0x7febc57969e5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="314" y="292" width="2" height="15" fill="rgb(231,62,17)"/><text x="317.00" y="302.50"></text></g><g><title>0x7febc57b2fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.63%)</title><rect x="299" y="244" width="19" height="15" fill="rgb(233,187,11)"/><text x="302.00" y="254.50"></text></g><g><title>0x7febc57c2405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.45%)</title><rect x="301" y="260" width="17" height="15" fill="rgb(230,124,23)"/><text x="304.00" y="270.50"></text></g><g><title>0x7febc57c1c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="316" y="276" width="2" height="15" fill="rgb(240,226,26)"/><text x="319.00" y="286.50"></text></g><g><title>0x7febc5799529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="316" y="292" width="2" height="15" fill="rgb(233,73,27)"/><text x="319.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.18%)</title><rect x="316" y="308" width="2" height="15" fill="rgb(221,43,34)"/><text x="319.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:690) (1 samples, 0.18%)</title><rect x="316" y="324" width="2" height="15" fill="rgb(220,88,32)"/><text x="319.00" y="334.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.18%)</title><rect x="318" y="260" width="2" height="15" fill="rgb(253,146,35)"/><text x="321.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.18%)</title><rect x="318" y="276" width="2" height="15" fill="rgb(237,144,24)"/><text x="321.00" y="286.50"></text></g><g><title>0x7febebe4dd21 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="318" y="292" width="2" height="15" fill="rgb(205,15,27)"/><text x="321.00" y="302.50"></text></g><g><title>0x7febc57b305a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="318" y="244" width="4" height="15" fill="rgb(229,217,13)"/><text x="321.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.18%)</title><rect x="320" y="260" width="2" height="15" fill="rgb(212,164,43)"/><text x="323.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.18%)</title><rect x="320" y="276" width="2" height="15" fill="rgb(221,117,21)"/><text x="323.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="320" y="292" width="2" height="15" fill="rgb(247,193,28)"/><text x="323.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.18%)</title><rect x="320" y="308" width="2" height="15" fill="rgb(236,102,50)"/><text x="323.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.18%)</title><rect x="320" y="324" width="2" height="15" fill="rgb(225,16,31)"/><text x="323.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:160) (1 samples, 0.18%)</title><rect x="320" y="340" width="2" height="15" fill="rgb(250,73,27)"/><text x="323.00" y="350.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.18%)</title><rect x="320" y="356" width="2" height="15" fill="rgb(210,121,11)"/><text x="323.00" y="366.50"></text></g><g><title>0x7febc57b314f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="322" y="244" width="4" height="15" fill="rgb(211,44,43)"/><text x="325.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.36%)</title><rect x="322" y="260" width="4" height="15" fill="rgb(237,70,39)"/><text x="325.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.36%)</title><rect x="322" y="276" width="4" height="15" fill="rgb(253,211,45)"/><text x="325.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (2 samples, 0.36%)</title><rect x="322" y="292" width="4" height="15" fill="rgb(242,53,8)"/><text x="325.00" y="302.50"></text></g><g><title>0x7febc57b3163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="326" y="244" width="5" height="15" fill="rgb(245,86,36)"/><text x="329.00" y="254.50"></text></g><g><title>0x7febc57b3328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="331" y="244" width="2" height="15" fill="rgb(231,24,0)"/><text x="334.00" y="254.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.18%)</title><rect x="331" y="260" width="2" height="15" fill="rgb(208,17,25)"/><text x="334.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.18%)</title><rect x="331" y="276" width="2" height="15" fill="rgb(249,105,38)"/><text x="334.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.18%)</title><rect x="331" y="292" width="2" height="15" fill="rgb(217,53,38)"/><text x="334.00" y="302.50"></text></g><g><title>0x7febc57b35f2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="333" y="244" width="2" height="15" fill="rgb(237,4,0)"/><text x="336.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (20 samples, 3.63%)</title><rect x="294" y="212" width="43" height="15" fill="rgb(235,38,25)"/><text x="297.00" y="222.50">pred..</text></g><g><title>0x7febc57b3d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 3.63%)</title><rect x="294" y="228" width="43" height="15" fill="rgb(216,66,45)"/><text x="297.00" y="238.50">0x7f..</text></g><g><title>0x7febc57b38d3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="335" y="244" width="2" height="15" fill="rgb(222,37,3)"/><text x="338.00" y="254.50"></text></g><g><title>0x7febc578fb8c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="335" y="260" width="2" height="15" fill="rgb(248,218,1)"/><text x="338.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.36%)</title><rect x="337" y="212" width="4" height="15" fill="rgb(238,138,43)"/><text x="340.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.18%)</title><rect x="339" y="228" width="2" height="15" fill="rgb(207,154,48)"/><text x="342.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.18%)</title><rect x="339" y="244" width="2" height="15" fill="rgb(243,156,8)"/><text x="342.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.18%)</title><rect x="339" y="260" width="2" height="15" fill="rgb(241,208,48)"/><text x="342.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.18%)</title><rect x="339" y="276" width="2" height="15" fill="rgb(226,141,49)"/><text x="342.00" y="286.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.18%)</title><rect x="339" y="292" width="2" height="15" fill="rgb(236,70,4)"/><text x="342.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.18%)</title><rect x="346" y="228" width="2" height="15" fill="rgb(227,137,39)"/><text x="349.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:793) (1 samples, 0.18%)</title><rect x="346" y="244" width="2" height="15" fill="rgb(227,133,30)"/><text x="349.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.18%)</title><rect x="348" y="228" width="2" height="15" fill="rgb(247,127,40)"/><text x="351.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:973) (1 samples, 0.18%)</title><rect x="348" y="244" width="2" height="15" fill="rgb(246,27,42)"/><text x="351.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.18%)</title><rect x="352" y="340" width="2" height="15" fill="rgb(215,24,44)"/><text x="355.00" y="350.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:30) (1 samples, 0.18%)</title><rect x="352" y="356" width="2" height="15" fill="rgb(214,160,33)"/><text x="355.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.36%)</title><rect x="352" y="276" width="4" height="15" fill="rgb(249,92,3)"/><text x="355.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.36%)</title><rect x="352" y="292" width="4" height="15" fill="rgb(216,145,11)"/><text x="355.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.36%)</title><rect x="352" y="308" width="4" height="15" fill="rgb(223,132,14)"/><text x="355.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.36%)</title><rect x="352" y="324" width="4" height="15" fill="rgb(239,84,36)"/><text x="355.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.18%)</title><rect x="354" y="340" width="2" height="15" fill="rgb(210,56,26)"/><text x="357.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.18%)</title><rect x="354" y="356" width="2" height="15" fill="rgb(248,126,1)"/><text x="357.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.18%)</title><rect x="356" y="292" width="3" height="15" fill="rgb(216,40,1)"/><text x="359.00" y="302.50"></text></g><g><title>0x7febebd85757 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="356" y="308" width="3" height="15" fill="rgb(247,154,15)"/><text x="359.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3635) (1 samples, 0.18%)</title><rect x="359" y="308" width="2" height="15" fill="rgb(227,134,22)"/><text x="362.00" y="318.50"></text></g><g><title>_get_identity (ufunc_object.c:2487) (1 samples, 0.18%)</title><rect x="359" y="324" width="2" height="15" fill="rgb(248,1,39)"/><text x="362.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.18%)</title><rect x="361" y="308" width="2" height="15" fill="rgb(215,12,3)"/><text x="364.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.18%)</title><rect x="361" y="324" width="2" height="15" fill="rgb(216,44,43)"/><text x="364.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:503) (1 samples, 0.18%)</title><rect x="361" y="340" width="2" height="15" fill="rgb(243,21,13)"/><text x="364.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.18%)</title><rect x="363" y="324" width="2" height="15" fill="rgb(211,44,44)"/><text x="366.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.18%)</title><rect x="363" y="340" width="2" height="15" fill="rgb(228,88,24)"/><text x="366.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.18%)</title><rect x="363" y="356" width="2" height="15" fill="rgb(245,221,53)"/><text x="366.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="363" y="372" width="2" height="15" fill="rgb(219,93,46)"/><text x="366.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.18%)</title><rect x="363" y="388" width="2" height="15" fill="rgb(253,47,44)"/><text x="366.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.18%)</title><rect x="363" y="404" width="2" height="15" fill="rgb(229,154,17)"/><text x="366.00" y="414.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:133) (1 samples, 0.18%)</title><rect x="363" y="420" width="2" height="15" fill="rgb(228,31,7)"/><text x="366.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:230) (1 samples, 0.18%)</title><rect x="365" y="356" width="2" height="15" fill="rgb(236,4,24)"/><text x="368.00" y="366.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.18%)</title><rect x="365" y="372" width="2" height="15" fill="rgb(242,15,47)"/><text x="368.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.36%)</title><rect x="365" y="324" width="4" height="15" fill="rgb(222,62,19)"/><text x="368.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.36%)</title><rect x="365" y="340" width="4" height="15" fill="rgb(252,147,42)"/><text x="368.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.18%)</title><rect x="367" y="356" width="2" height="15" fill="rgb(224,8,9)"/><text x="370.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.18%)</title><rect x="367" y="372" width="2" height="15" fill="rgb(243,139,54)"/><text x="370.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.18%)</title><rect x="367" y="388" width="2" height="15" fill="rgb(227,18,44)"/><text x="370.00" y="398.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.18%)</title><rect x="367" y="404" width="2" height="15" fill="rgb(252,97,9)"/><text x="370.00" y="414.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1499) (1 samples, 0.18%)</title><rect x="367" y="420" width="2" height="15" fill="rgb(207,58,38)"/><text x="370.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.18%)</title><rect x="369" y="340" width="2" height="15" fill="rgb(223,40,37)"/><text x="372.00" y="350.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2035) (1 samples, 0.18%)</title><rect x="369" y="356" width="2" height="15" fill="rgb(244,34,46)"/><text x="372.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.36%)</title><rect x="369" y="324" width="5" height="15" fill="rgb(212,54,35)"/><text x="372.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.18%)</title><rect x="371" y="340" width="3" height="15" fill="rgb(241,190,39)"/><text x="374.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2152) (1 samples, 0.18%)</title><rect x="371" y="356" width="3" height="15" fill="rgb(211,223,9)"/><text x="374.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.18%)</title><rect x="374" y="324" width="2" height="15" fill="rgb(220,189,36)"/><text x="377.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.18%)</title><rect x="374" y="340" width="2" height="15" fill="rgb(207,187,4)"/><text x="377.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.18%)</title><rect x="374" y="356" width="2" height="15" fill="rgb(214,216,52)"/><text x="377.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.18%)</title><rect x="374" y="372" width="2" height="15" fill="rgb(240,93,8)"/><text x="377.00" y="382.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 2.36%)</title><rect x="350" y="244" width="28" height="15" fill="rgb(219,168,7)"/><text x="353.00" y="254.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 2.18%)</title><rect x="352" y="260" width="26" height="15" fill="rgb(213,221,46)"/><text x="355.00" y="270.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 1.81%)</title><rect x="356" y="276" width="22" height="15" fill="rgb(239,180,4)"/><text x="359.00" y="286.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 1.63%)</title><rect x="359" y="292" width="19" height="15" fill="rgb(210,188,51)"/><text x="362.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.27%)</title><rect x="363" y="308" width="15" height="15" fill="rgb(219,171,49)"/><text x="366.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.18%)</title><rect x="376" y="324" width="2" height="15" fill="rgb(227,72,39)"/><text x="379.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.18%)</title><rect x="376" y="340" width="2" height="15" fill="rgb(234,155,35)"/><text x="379.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (18 samples, 3.27%)</title><rect x="341" y="212" width="39" height="15" fill="rgb(226,171,39)"/><text x="344.00" y="222.50">pre..</text></g><g><title>array_sum (methods.c:2215) (14 samples, 2.54%)</title><rect x="350" y="228" width="30" height="15" fill="rgb(228,225,42)"/><text x="353.00" y="238.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:95) (1 samples, 0.18%)</title><rect x="378" y="244" width="2" height="15" fill="rgb(251,182,47)"/><text x="381.00" y="254.50"></text></g><g><title>0x7febebd901ef (libc-2.29.so) (1 samples, 0.18%)</title><rect x="378" y="260" width="2" height="15" fill="rgb(231,118,35)"/><text x="381.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="382" y="260" width="2" height="15" fill="rgb(225,95,12)"/><text x="385.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.18%)</title><rect x="382" y="276" width="2" height="15" fill="rgb(233,212,3)"/><text x="385.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.18%)</title><rect x="382" y="292" width="2" height="15" fill="rgb(233,135,10)"/><text x="385.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.18%)</title><rect x="382" y="308" width="2" height="15" fill="rgb(226,218,29)"/><text x="385.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.18%)</title><rect x="382" y="324" width="2" height="15" fill="rgb(213,52,38)"/><text x="385.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (3 samples, 0.54%)</title><rect x="380" y="212" width="6" height="15" fill="rgb(241,49,44)"/><text x="383.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (3 samples, 0.54%)</title><rect x="380" y="228" width="6" height="15" fill="rgb(215,116,2)"/><text x="383.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="382" y="244" width="4" height="15" fill="rgb(239,211,25)"/><text x="385.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="384" y="260" width="2" height="15" fill="rgb(251,33,27)"/><text x="387.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.18%)</title><rect x="384" y="276" width="2" height="15" fill="rgb(219,143,22)"/><text x="387.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="386" y="228" width="3" height="15" fill="rgb(223,144,44)"/><text x="389.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="386" y="244" width="3" height="15" fill="rgb(239,136,53)"/><text x="389.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.18%)</title><rect x="386" y="260" width="3" height="15" fill="rgb(208,68,7)"/><text x="389.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.18%)</title><rect x="386" y="276" width="3" height="15" fill="rgb(222,218,49)"/><text x="389.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.18%)</title><rect x="389" y="260" width="2" height="15" fill="rgb(254,78,0)"/><text x="392.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.18%)</title><rect x="391" y="260" width="2" height="15" fill="rgb(217,19,16)"/><text x="394.00" y="270.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.18%)</title><rect x="391" y="276" width="2" height="15" fill="rgb(219,63,20)"/><text x="394.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.18%)</title><rect x="391" y="292" width="2" height="15" fill="rgb(242,165,4)"/><text x="394.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.18%)</title><rect x="391" y="308" width="2" height="15" fill="rgb(211,115,32)"/><text x="394.00" y="318.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:461) (1 samples, 0.18%)</title><rect x="391" y="324" width="2" height="15" fill="rgb(246,121,21)"/><text x="394.00" y="334.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c:404) (1 samples, 0.18%)</title><rect x="391" y="340" width="2" height="15" fill="rgb(218,96,34)"/><text x="394.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.54%)</title><rect x="389" y="244" width="6" height="15" fill="rgb(238,163,43)"/><text x="392.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.18%)</title><rect x="393" y="260" width="2" height="15" fill="rgb(206,62,54)"/><text x="396.00" y="270.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1746) (1 samples, 0.18%)</title><rect x="393" y="276" width="2" height="15" fill="rgb(210,160,9)"/><text x="396.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.18%)</title><rect x="395" y="260" width="2" height="15" fill="rgb(212,191,17)"/><text x="398.00" y="270.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.18%)</title><rect x="395" y="276" width="2" height="15" fill="rgb(229,73,20)"/><text x="398.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.18%)</title><rect x="397" y="276" width="2" height="15" fill="rgb(244,177,25)"/><text x="400.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.18%)</title><rect x="397" y="292" width="2" height="15" fill="rgb(207,28,11)"/><text x="400.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.18%)</title><rect x="397" y="308" width="2" height="15" fill="rgb(246,114,9)"/><text x="400.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.18%)</title><rect x="397" y="324" width="2" height="15" fill="rgb(231,168,4)"/><text x="400.00" y="334.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:363) (1 samples, 0.18%)</title><rect x="397" y="340" width="2" height="15" fill="rgb(215,105,8)"/><text x="400.00" y="350.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1742) (1 samples, 0.18%)</title><rect x="399" y="292" width="2" height="15" fill="rgb(206,120,10)"/><text x="402.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.36%)</title><rect x="399" y="276" width="5" height="15" fill="rgb(221,132,22)"/><text x="402.00" y="286.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:763) (1 samples, 0.18%)</title><rect x="401" y="292" width="3" height="15" fill="rgb(233,102,13)"/><text x="404.00" y="302.50"></text></g><g><title>npy_blocked_end (lowlevel_strided_loops.h:468) (1 samples, 0.18%)</title><rect x="401" y="308" width="3" height="15" fill="rgb(232,73,37)"/><text x="404.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (9 samples, 1.63%)</title><rect x="386" y="212" width="20" height="15" fill="rgb(207,187,25)"/><text x="389.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.45%)</title><rect x="389" y="228" width="17" height="15" fill="rgb(219,46,24)"/><text x="392.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.91%)</title><rect x="395" y="244" width="11" height="15" fill="rgb(216,203,17)"/><text x="398.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.73%)</title><rect x="397" y="260" width="9" height="15" fill="rgb(220,92,16)"/><text x="400.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.18%)</title><rect x="404" y="276" width="2" height="15" fill="rgb(215,23,38)"/><text x="407.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:647) (1 samples, 0.18%)</title><rect x="404" y="292" width="2" height="15" fill="rgb(237,23,41)"/><text x="407.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (118 samples, 21.42%)</title><rect x="155" y="196" width="253" height="15" fill="rgb(227,216,15)"/><text x="158.00" y="206.50">_samme_proba (sklearn/ensemble/_w..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:916) (1 samples, 0.18%)</title><rect x="406" y="212" width="2" height="15" fill="rgb(243,93,39)"/><text x="409.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:366) (2 samples, 0.36%)</title><rect x="419" y="212" width="4" height="15" fill="rgb(232,164,20)"/><text x="422.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (3 samples, 0.54%)</title><rect x="423" y="212" width="6" height="15" fill="rgb(215,13,21)"/><text x="426.00" y="222.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py:1971) (2 samples, 0.36%)</title><rect x="425" y="228" width="4" height="15" fill="rgb(242,183,0)"/><text x="428.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.18%)</title><rect x="429" y="228" width="2" height="15" fill="rgb(211,102,7)"/><text x="432.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.18%)</title><rect x="431" y="228" width="3" height="15" fill="rgb(214,1,32)"/><text x="434.00" y="238.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.36%)</title><rect x="434" y="292" width="4" height="15" fill="rgb(216,38,34)"/><text x="437.00" y="302.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.18%)</title><rect x="436" y="308" width="2" height="15" fill="rgb(224,148,9)"/><text x="439.00" y="318.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (3 samples, 0.54%)</title><rect x="434" y="228" width="6" height="15" fill="rgb(207,138,26)"/><text x="437.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (3 samples, 0.54%)</title><rect x="434" y="244" width="6" height="15" fill="rgb(246,102,9)"/><text x="437.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (3 samples, 0.54%)</title><rect x="434" y="260" width="6" height="15" fill="rgb(207,31,29)"/><text x="437.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.54%)</title><rect x="434" y="276" width="6" height="15" fill="rgb(210,107,50)"/><text x="437.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.18%)</title><rect x="438" y="292" width="2" height="15" fill="rgb(249,13,0)"/><text x="441.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (2 samples, 0.36%)</title><rect x="442" y="260" width="4" height="15" fill="rgb(236,169,10)"/><text x="445.00" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.18%)</title><rect x="451" y="308" width="2" height="15" fill="rgb(223,63,29)"/><text x="454.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.18%)</title><rect x="451" y="324" width="2" height="15" fill="rgb(209,219,10)"/><text x="454.00" y="334.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c:2062) (1 samples, 0.18%)</title><rect x="451" y="340" width="2" height="15" fill="rgb(222,119,8)"/><text x="454.00" y="350.50"></text></g><g><title>_arraydescr_isnative (descriptor.c:2027) (1 samples, 0.18%)</title><rect x="451" y="356" width="2" height="15" fill="rgb(207,11,49)"/><text x="454.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.54%)</title><rect x="455" y="324" width="6" height="15" fill="rgb(234,128,28)"/><text x="458.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.18%)</title><rect x="459" y="340" width="2" height="15" fill="rgb(221,41,11)"/><text x="462.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (3 samples, 0.54%)</title><rect x="461" y="340" width="7" height="15" fill="rgb(206,123,26)"/><text x="464.00" y="350.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py:2983) (1 samples, 0.18%)</title><rect x="466" y="356" width="2" height="15" fill="rgb(245,70,23)"/><text x="469.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (4 samples, 0.73%)</title><rect x="461" y="324" width="9" height="15" fill="rgb(222,35,39)"/><text x="464.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.18%)</title><rect x="468" y="340" width="2" height="15" fill="rgb(232,102,13)"/><text x="471.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.18%)</title><rect x="468" y="356" width="2" height="15" fill="rgb(244,228,22)"/><text x="471.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3018) (1 samples, 0.18%)</title><rect x="468" y="372" width="2" height="15" fill="rgb(249,120,48)"/><text x="471.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="472" y="340" width="2" height="15" fill="rgb(206,138,44)"/><text x="475.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="472" y="356" width="2" height="15" fill="rgb(216,69,30)"/><text x="475.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.18%)</title><rect x="472" y="372" width="2" height="15" fill="rgb(213,66,15)"/><text x="475.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.18%)</title><rect x="472" y="388" width="2" height="15" fill="rgb(237,195,50)"/><text x="475.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.18%)</title><rect x="472" y="404" width="2" height="15" fill="rgb(224,220,35)"/><text x="475.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.18%)</title><rect x="472" y="420" width="2" height="15" fill="rgb(236,196,42)"/><text x="475.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.18%)</title><rect x="474" y="436" width="2" height="15" fill="rgb(209,2,44)"/><text x="477.00" y="446.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.18%)</title><rect x="474" y="452" width="2" height="15" fill="rgb(226,149,10)"/><text x="477.00" y="462.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.18%)</title><rect x="474" y="468" width="2" height="15" fill="rgb(221,60,30)"/><text x="477.00" y="478.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.36%)</title><rect x="474" y="388" width="5" height="15" fill="rgb(243,50,33)"/><text x="477.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (2 samples, 0.36%)</title><rect x="474" y="404" width="5" height="15" fill="rgb(253,198,44)"/><text x="477.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:566) (2 samples, 0.36%)</title><rect x="474" y="420" width="5" height="15" fill="rgb(239,180,49)"/><text x="477.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.18%)</title><rect x="476" y="436" width="3" height="15" fill="rgb(214,67,3)"/><text x="479.00" y="446.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.18%)</title><rect x="476" y="452" width="3" height="15" fill="rgb(251,75,6)"/><text x="479.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.54%)</title><rect x="474" y="356" width="7" height="15" fill="rgb(217,34,54)"/><text x="477.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (3 samples, 0.54%)</title><rect x="474" y="372" width="7" height="15" fill="rgb(221,107,32)"/><text x="477.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.18%)</title><rect x="479" y="388" width="2" height="15" fill="rgb(226,178,27)"/><text x="482.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:333) (1 samples, 0.18%)</title><rect x="479" y="404" width="2" height="15" fill="rgb(247,12,43)"/><text x="482.00" y="414.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.18%)</title><rect x="479" y="420" width="2" height="15" fill="rgb(233,130,17)"/><text x="482.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.18%)</title><rect x="481" y="356" width="2" height="15" fill="rgb(228,84,8)"/><text x="484.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.18%)</title><rect x="481" y="372" width="2" height="15" fill="rgb(250,73,5)"/><text x="484.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.18%)</title><rect x="481" y="388" width="2" height="15" fill="rgb(210,42,27)"/><text x="484.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:681) (1 samples, 0.18%)</title><rect x="481" y="404" width="2" height="15" fill="rgb(245,17,53)"/><text x="484.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.91%)</title><rect x="474" y="340" width="11" height="15" fill="rgb(227,128,29)"/><text x="477.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="483" y="356" width="2" height="15" fill="rgb(245,191,36)"/><text x="486.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.18%)</title><rect x="483" y="372" width="2" height="15" fill="rgb(231,198,50)"/><text x="486.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.18%)</title><rect x="483" y="388" width="2" height="15" fill="rgb(215,120,16)"/><text x="486.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (16 samples, 2.90%)</title><rect x="453" y="308" width="34" height="15" fill="rgb(218,8,7)"/><text x="456.00" y="318.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (8 samples, 1.45%)</title><rect x="470" y="324" width="17" height="15" fill="rgb(215,127,41)"/><text x="473.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.18%)</title><rect x="485" y="340" width="2" height="15" fill="rgb(215,36,44)"/><text x="488.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="485" y="356" width="2" height="15" fill="rgb(207,163,13)"/><text x="488.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="485" y="372" width="2" height="15" fill="rgb(252,71,46)"/><text x="488.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="485" y="388" width="2" height="15" fill="rgb(244,171,22)"/><text x="488.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.54%)</title><rect x="487" y="324" width="6" height="15" fill="rgb(229,215,2)"/><text x="490.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.36%)</title><rect x="489" y="340" width="4" height="15" fill="rgb(217,158,49)"/><text x="492.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.18%)</title><rect x="493" y="372" width="3" height="15" fill="rgb(252,174,10)"/><text x="496.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.18%)</title><rect x="496" y="388" width="2" height="15" fill="rgb(214,72,5)"/><text x="499.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="496" y="404" width="2" height="15" fill="rgb(211,107,21)"/><text x="499.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.36%)</title><rect x="498" y="404" width="4" height="15" fill="rgb(219,213,44)"/><text x="501.00" y="414.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1366) (1 samples, 0.18%)</title><rect x="500" y="420" width="2" height="15" fill="rgb(207,107,30)"/><text x="503.00" y="430.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (2 samples, 0.36%)</title><rect x="502" y="452" width="4" height="15" fill="rgb(245,213,6)"/><text x="505.00" y="462.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (7 samples, 1.27%)</title><rect x="493" y="324" width="15" height="15" fill="rgb(225,70,11)"/><text x="496.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (7 samples, 1.27%)</title><rect x="493" y="340" width="15" height="15" fill="rgb(237,114,20)"/><text x="496.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.27%)</title><rect x="493" y="356" width="15" height="15" fill="rgb(246,199,4)"/><text x="496.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (6 samples, 1.09%)</title><rect x="496" y="372" width="12" height="15" fill="rgb(205,221,54)"/><text x="499.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (5 samples, 0.91%)</title><rect x="498" y="388" width="10" height="15" fill="rgb(215,11,8)"/><text x="501.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (3 samples, 0.54%)</title><rect x="502" y="404" width="6" height="15" fill="rgb(216,217,48)"/><text x="505.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (3 samples, 0.54%)</title><rect x="502" y="420" width="6" height="15" fill="rgb(243,106,28)"/><text x="505.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (3 samples, 0.54%)</title><rect x="502" y="436" width="6" height="15" fill="rgb(235,39,1)"/><text x="505.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1664) (1 samples, 0.18%)</title><rect x="506" y="452" width="2" height="15" fill="rgb(241,101,15)"/><text x="509.00" y="462.50"></text></g><g><title>0x7febebd90124 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="511" y="340" width="2" height="15" fill="rgb(229,130,34)"/><text x="514.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1079) (1 samples, 0.18%)</title><rect x="513" y="372" width="2" height="15" fill="rgb(242,192,32)"/><text x="516.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.36%)</title><rect x="513" y="356" width="4" height="15" fill="rgb(211,13,4)"/><text x="516.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.18%)</title><rect x="515" y="372" width="2" height="15" fill="rgb(252,45,15)"/><text x="518.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.18%)</title><rect x="517" y="372" width="2" height="15" fill="rgb(215,116,52)"/><text x="520.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.18%)</title><rect x="517" y="388" width="2" height="15" fill="rgb(246,13,46)"/><text x="520.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.18%)</title><rect x="517" y="404" width="2" height="15" fill="rgb(220,187,48)"/><text x="520.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (17 samples, 3.09%)</title><rect x="487" y="308" width="36" height="15" fill="rgb(243,18,21)"/><text x="490.00" y="318.50">_cl..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (7 samples, 1.27%)</title><rect x="508" y="324" width="15" height="15" fill="rgb(251,223,42)"/><text x="511.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.91%)</title><rect x="513" y="340" width="10" height="15" fill="rgb(211,6,47)"/><text x="516.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.54%)</title><rect x="517" y="356" width="6" height="15" fill="rgb(253,229,51)"/><text x="520.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (2 samples, 0.36%)</title><rect x="519" y="372" width="4" height="15" fill="rgb(220,57,16)"/><text x="522.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.18%)</title><rect x="526" y="372" width="2" height="15" fill="rgb(252,20,45)"/><text x="529.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.18%)</title><rect x="526" y="388" width="2" height="15" fill="rgb(251,189,44)"/><text x="529.00" y="398.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.18%)</title><rect x="528" y="420" width="2" height="15" fill="rgb(226,134,43)"/><text x="531.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (4 samples, 0.73%)</title><rect x="526" y="340" width="8" height="15" fill="rgb(218,79,21)"/><text x="529.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 0.73%)</title><rect x="526" y="356" width="8" height="15" fill="rgb(208,75,47)"/><text x="529.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.54%)</title><rect x="528" y="372" width="6" height="15" fill="rgb(225,147,36)"/><text x="531.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.54%)</title><rect x="528" y="388" width="6" height="15" fill="rgb(251,114,21)"/><text x="531.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.54%)</title><rect x="528" y="404" width="6" height="15" fill="rgb(217,201,33)"/><text x="531.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.36%)</title><rect x="530" y="420" width="4" height="15" fill="rgb(206,46,14)"/><text x="533.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="534" y="356" width="2" height="15" fill="rgb(238,85,35)"/><text x="537.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.18%)</title><rect x="534" y="372" width="2" height="15" fill="rgb(239,72,47)"/><text x="537.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.18%)</title><rect x="534" y="388" width="2" height="15" fill="rgb(252,147,5)"/><text x="537.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.18%)</title><rect x="534" y="404" width="2" height="15" fill="rgb(225,38,29)"/><text x="537.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:566) (1 samples, 0.18%)</title><rect x="534" y="420" width="2" height="15" fill="rgb(224,51,4)"/><text x="537.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.18%)</title><rect x="534" y="436" width="2" height="15" fill="rgb(222,4,19)"/><text x="537.00" y="446.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.18%)</title><rect x="534" y="452" width="2" height="15" fill="rgb(246,145,38)"/><text x="537.00" y="462.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (61 samples, 11.07%)</title><rect x="408" y="196" width="130" height="15" fill="rgb(228,76,10)"/><text x="411.00" y="206.50">_samme_proba (sk..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (51 samples, 9.26%)</title><rect x="429" y="212" width="109" height="15" fill="rgb(205,132,19)"/><text x="432.00" y="222.50">clip (&lt;__arra..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (46 samples, 8.35%)</title><rect x="440" y="228" width="98" height="15" fill="rgb(212,125,16)"/><text x="443.00" y="238.50">array_imple..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (46 samples, 8.35%)</title><rect x="440" y="244" width="98" height="15" fill="rgb(235,211,19)"/><text x="443.00" y="254.50">clip (numpy..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (43 samples, 7.80%)</title><rect x="446" y="260" width="92" height="15" fill="rgb(214,83,29)"/><text x="449.00" y="270.50">_wrapfunc ..</text></g><g><title>array_clip (methods.c:2381) (42 samples, 7.62%)</title><rect x="449" y="276" width="89" height="15" fill="rgb(243,115,27)"/><text x="452.00" y="286.50">array_clip..</text></g><g><title>forward_ndarray_method (methods.c:108) (42 samples, 7.62%)</title><rect x="449" y="292" width="89" height="15" fill="rgb(237,138,17)"/><text x="452.00" y="302.50">forward_nd..</text></g><g><title>_clip (numpy/core/_methods.py:129) (7 samples, 1.27%)</title><rect x="523" y="308" width="15" height="15" fill="rgb(222,220,0)"/><text x="526.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (7 samples, 1.27%)</title><rect x="523" y="324" width="15" height="15" fill="rgb(207,212,36)"/><text x="526.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="534" y="340" width="4" height="15" fill="rgb(238,89,36)"/><text x="537.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.18%)</title><rect x="536" y="356" width="2" height="15" fill="rgb(254,216,31)"/><text x="539.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.18%)</title><rect x="536" y="372" width="2" height="15" fill="rgb(206,74,27)"/><text x="539.00" y="382.50"></text></g><g><title>0x7febebd90120 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="536" y="388" width="2" height="15" fill="rgb(235,140,40)"/><text x="539.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="541" y="212" width="2" height="15" fill="rgb(229,108,0)"/><text x="544.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="541" y="228" width="2" height="15" fill="rgb(232,222,12)"/><text x="544.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.18%)</title><rect x="541" y="244" width="2" height="15" fill="rgb(226,74,33)"/><text x="544.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:97) (1 samples, 0.18%)</title><rect x="541" y="260" width="2" height="15" fill="rgb(228,174,30)"/><text x="544.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.18%)</title><rect x="543" y="276" width="2" height="15" fill="rgb(221,219,8)"/><text x="546.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.18%)</title><rect x="543" y="292" width="2" height="15" fill="rgb(220,98,17)"/><text x="546.00" y="302.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.18%)</title><rect x="543" y="308" width="2" height="15" fill="rgb(235,158,3)"/><text x="546.00" y="318.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.18%)</title><rect x="543" y="324" width="2" height="15" fill="rgb(246,81,16)"/><text x="546.00" y="334.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (4 samples, 0.73%)</title><rect x="538" y="196" width="9" height="15" fill="rgb(230,83,32)"/><text x="541.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="543" y="212" width="4" height="15" fill="rgb(225,225,22)"/><text x="546.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.36%)</title><rect x="543" y="228" width="4" height="15" fill="rgb(232,110,36)"/><text x="546.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (2 samples, 0.36%)</title><rect x="543" y="244" width="4" height="15" fill="rgb(242,38,43)"/><text x="546.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.36%)</title><rect x="543" y="260" width="4" height="15" fill="rgb(228,228,38)"/><text x="546.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1190) (1 samples, 0.18%)</title><rect x="545" y="276" width="2" height="15" fill="rgb(214,72,30)"/><text x="548.00" y="286.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:281) (3 samples, 0.54%)</title><rect x="547" y="196" width="6" height="15" fill="rgb(234,160,43)"/><text x="550.00" y="206.50"></text></g><g><title>0x7febebd90120 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="560" y="212" width="2" height="15" fill="rgb(240,216,13)"/><text x="563.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="562" y="212" width="2" height="15" fill="rgb(220,133,41)"/><text x="565.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="562" y="228" width="2" height="15" fill="rgb(220,2,13)"/><text x="565.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.18%)</title><rect x="562" y="244" width="2" height="15" fill="rgb(222,145,39)"/><text x="565.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.18%)</title><rect x="564" y="212" width="2" height="15" fill="rgb(228,144,26)"/><text x="567.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.18%)</title><rect x="564" y="228" width="2" height="15" fill="rgb(209,37,33)"/><text x="567.00" y="238.50"></text></g><g><title>0x7febebd6f902 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="564" y="244" width="2" height="15" fill="rgb(231,65,0)"/><text x="567.00" y="254.50"></text></g><g><title>array_multiply (number.c:353) (1 samples, 0.18%)</title><rect x="566" y="212" width="2" height="15" fill="rgb(218,161,42)"/><text x="569.00" y="222.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c:286) (1 samples, 0.18%)</title><rect x="566" y="228" width="2" height="15" fill="rgb(251,12,25)"/><text x="569.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="568" y="228" width="3" height="15" fill="rgb(234,31,48)"/><text x="571.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="568" y="244" width="3" height="15" fill="rgb(221,213,36)"/><text x="571.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:38) (1 samples, 0.18%)</title><rect x="568" y="260" width="3" height="15" fill="rgb(211,56,20)"/><text x="571.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.18%)</title><rect x="571" y="260" width="2" height="15" fill="rgb(234,17,37)"/><text x="574.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.18%)</title><rect x="571" y="276" width="2" height="15" fill="rgb(232,187,25)"/><text x="574.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.18%)</title><rect x="571" y="292" width="2" height="15" fill="rgb(225,20,0)"/><text x="574.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.36%)</title><rect x="571" y="244" width="4" height="15" fill="rgb(205,106,13)"/><text x="574.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1099) (1 samples, 0.18%)</title><rect x="573" y="260" width="2" height="15" fill="rgb(233,200,46)"/><text x="576.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.18%)</title><rect x="575" y="260" width="2" height="15" fill="rgb(206,227,24)"/><text x="578.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.36%)</title><rect x="575" y="244" width="4" height="15" fill="rgb(243,96,7)"/><text x="578.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.18%)</title><rect x="577" y="260" width="2" height="15" fill="rgb(213,122,29)"/><text x="580.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.18%)</title><rect x="577" y="276" width="2" height="15" fill="rgb(224,165,0)"/><text x="580.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.18%)</title><rect x="577" y="292" width="2" height="15" fill="rgb(219,5,19)"/><text x="580.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:952) (1 samples, 0.18%)</title><rect x="577" y="308" width="2" height="15" fill="rgb(206,8,42)"/><text x="580.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.18%)</title><rect x="577" y="324" width="2" height="15" fill="rgb(238,81,5)"/><text x="580.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1520) (1 samples, 0.18%)</title><rect x="577" y="340" width="2" height="15" fill="rgb(234,208,29)"/><text x="580.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.18%)</title><rect x="579" y="244" width="2" height="15" fill="rgb(223,122,0)"/><text x="582.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.18%)</title><rect x="579" y="260" width="2" height="15" fill="rgb(206,68,50)"/><text x="582.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="579" y="276" width="2" height="15" fill="rgb(233,125,33)"/><text x="582.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="579" y="292" width="2" height="15" fill="rgb(247,220,13)"/><text x="582.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="579" y="308" width="2" height="15" fill="rgb(232,156,1)"/><text x="582.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (2 samples, 0.36%)</title><rect x="581" y="260" width="5" height="15" fill="rgb(241,139,19)"/><text x="584.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="583" y="276" width="3" height="15" fill="rgb(253,114,43)"/><text x="586.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.18%)</title><rect x="583" y="292" width="3" height="15" fill="rgb(241,143,10)"/><text x="586.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.18%)</title><rect x="583" y="308" width="3" height="15" fill="rgb(227,26,23)"/><text x="586.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.45%)</title><rect x="571" y="228" width="17" height="15" fill="rgb(220,135,46)"/><text x="574.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.54%)</title><rect x="581" y="244" width="7" height="15" fill="rgb(245,214,19)"/><text x="584.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.18%)</title><rect x="586" y="260" width="2" height="15" fill="rgb(244,18,50)"/><text x="589.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1368) (1 samples, 0.18%)</title><rect x="586" y="276" width="2" height="15" fill="rgb(228,56,9)"/><text x="589.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (2 samples, 0.36%)</title><rect x="588" y="228" width="4" height="15" fill="rgb(244,161,23)"/><text x="591.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.36%)</title><rect x="588" y="244" width="4" height="15" fill="rgb(232,87,15)"/><text x="591.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.36%)</title><rect x="588" y="260" width="4" height="15" fill="rgb(224,24,53)"/><text x="591.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.36%)</title><rect x="588" y="276" width="4" height="15" fill="rgb(225,126,28)"/><text x="591.00" y="286.50"></text></g><g><title>array_multiply (number.c:354) (13 samples, 2.36%)</title><rect x="568" y="212" width="28" height="15" fill="rgb(253,55,3)"/><text x="571.00" y="222.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (2 samples, 0.36%)</title><rect x="592" y="228" width="4" height="15" fill="rgb(235,5,3)"/><text x="595.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (2 samples, 0.36%)</title><rect x="592" y="244" width="4" height="15" fill="rgb(247,90,26)"/><text x="595.00" y="254.50"></text></g><g><title>prepare_index (mapping.c:376) (1 samples, 0.18%)</title><rect x="596" y="228" width="2" height="15" fill="rgb(208,213,23)"/><text x="599.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.36%)</title><rect x="596" y="212" width="5" height="15" fill="rgb(226,129,49)"/><text x="599.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:411) (1 samples, 0.18%)</title><rect x="598" y="228" width="3" height="15" fill="rgb(246,205,26)"/><text x="601.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1714) (1 samples, 0.18%)</title><rect x="601" y="260" width="2" height="15" fill="rgb(206,214,3)"/><text x="604.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.54%)</title><rect x="601" y="244" width="6" height="15" fill="rgb(248,183,49)"/><text x="604.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.36%)</title><rect x="603" y="260" width="4" height="15" fill="rgb(217,227,12)"/><text x="606.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.18%)</title><rect x="605" y="276" width="2" height="15" fill="rgb(227,195,43)"/><text x="608.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:454) (1 samples, 0.18%)</title><rect x="605" y="292" width="2" height="15" fill="rgb(224,118,50)"/><text x="608.00" y="302.50"></text></g><g><title>array_subtract (number.c:342) (4 samples, 0.73%)</title><rect x="601" y="212" width="8" height="15" fill="rgb(237,229,13)"/><text x="604.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.73%)</title><rect x="601" y="228" width="8" height="15" fill="rgb(237,120,40)"/><text x="604.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.18%)</title><rect x="607" y="244" width="2" height="15" fill="rgb(252,121,17)"/><text x="610.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.36%)</title><rect x="609" y="276" width="4" height="15" fill="rgb(208,201,3)"/><text x="612.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.18%)</title><rect x="613" y="276" width="3" height="15" fill="rgb(249,191,0)"/><text x="616.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1952) (1 samples, 0.18%)</title><rect x="613" y="292" width="3" height="15" fill="rgb(238,92,5)"/><text x="616.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.18%)</title><rect x="616" y="292" width="2" height="15" fill="rgb(222,202,38)"/><text x="619.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3418) (1 samples, 0.18%)</title><rect x="616" y="308" width="2" height="15" fill="rgb(240,7,43)"/><text x="619.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.18%)</title><rect x="618" y="324" width="2" height="15" fill="rgb(220,8,51)"/><text x="621.00" y="334.50"></text></g><g><title>0x7febeaf92710 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="618" y="340" width="2" height="15" fill="rgb(227,73,36)"/><text x="621.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.36%)</title><rect x="618" y="308" width="4" height="15" fill="rgb(232,96,6)"/><text x="621.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.18%)</title><rect x="620" y="324" width="2" height="15" fill="rgb(205,165,35)"/><text x="623.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.18%)</title><rect x="620" y="340" width="2" height="15" fill="rgb(220,115,52)"/><text x="623.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.18%)</title><rect x="620" y="356" width="2" height="15" fill="rgb(248,49,5)"/><text x="623.00" y="366.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.18%)</title><rect x="620" y="372" width="2" height="15" fill="rgb(222,76,20)"/><text x="623.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.18%)</title><rect x="622" y="308" width="2" height="15" fill="rgb(236,76,51)"/><text x="625.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.18%)</title><rect x="622" y="324" width="2" height="15" fill="rgb(211,161,49)"/><text x="625.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1168) (1 samples, 0.18%)</title><rect x="622" y="340" width="2" height="15" fill="rgb(250,129,14)"/><text x="625.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (221 samples, 40.11%)</title><rect x="153" y="180" width="473" height="15" fill="rgb(247,26,16)"/><text x="156.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (34 samples, 6.17%)</title><rect x="553" y="196" width="73" height="15" fill="rgb(206,54,30)"/><text x="556.00" y="206.50">_samme_p..</text></g><g><title>array_sum (methods.c:2215) (8 samples, 1.45%)</title><rect x="609" y="212" width="17" height="15" fill="rgb(209,12,28)"/><text x="612.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (8 samples, 1.45%)</title><rect x="609" y="228" width="17" height="15" fill="rgb(221,182,50)"/><text x="612.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (8 samples, 1.45%)</title><rect x="609" y="244" width="17" height="15" fill="rgb(237,152,52)"/><text x="612.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 1.45%)</title><rect x="609" y="260" width="17" height="15" fill="rgb(232,43,44)"/><text x="612.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.91%)</title><rect x="616" y="276" width="10" height="15" fill="rgb(227,184,14)"/><text x="619.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.73%)</title><rect x="618" y="292" width="8" height="15" fill="rgb(222,189,13)"/><text x="621.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.18%)</title><rect x="624" y="308" width="2" height="15" fill="rgb(217,166,20)"/><text x="627.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.18%)</title><rect x="624" y="324" width="2" height="15" fill="rgb(248,90,13)"/><text x="627.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.18%)</title><rect x="624" y="340" width="2" height="15" fill="rgb(221,50,18)"/><text x="627.00" y="350.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1837) (1 samples, 0.18%)</title><rect x="624" y="356" width="2" height="15" fill="rgb(254,40,54)"/><text x="627.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.18%)</title><rect x="626" y="212" width="2" height="15" fill="rgb(227,208,31)"/><text x="629.00" y="222.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1297) (1 samples, 0.18%)</title><rect x="626" y="228" width="2" height="15" fill="rgb(226,12,51)"/><text x="629.00" y="238.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.36%)</title><rect x="626" y="180" width="5" height="15" fill="rgb(253,141,43)"/><text x="629.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="626" y="196" width="5" height="15" fill="rgb(224,9,33)"/><text x="629.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="628" y="212" width="3" height="15" fill="rgb(250,95,24)"/><text x="631.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1621) (1 samples, 0.18%)</title><rect x="628" y="228" width="3" height="15" fill="rgb(212,62,17)"/><text x="631.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="631" y="180" width="2" height="15" fill="rgb(213,25,10)"/><text x="634.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="631" y="196" width="2" height="15" fill="rgb(252,169,45)"/><text x="634.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.18%)</title><rect x="631" y="212" width="2" height="15" fill="rgb(214,158,46)"/><text x="634.00" y="222.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (225 samples, 40.83%)</title><rect x="153" y="148" width="482" height="15" fill="rgb(217,9,48)"/><text x="156.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py:808)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (225 samples, 40.83%)</title><rect x="153" y="164" width="482" height="15" fill="rgb(232,180,31)"/><text x="156.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.18%)</title><rect x="633" y="180" width="2" height="15" fill="rgb(237,37,27)"/><text x="636.00" y="190.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.18%)</title><rect x="633" y="196" width="2" height="15" fill="rgb(252,172,46)"/><text x="636.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:38) (287 samples, 52.09%)</title><rect x="22" y="52" width="615" height="15" fill="rgb(205,187,32)"/><text x="25.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:37) (287 samples, 52.09%)</title><rect x="22" y="68" width="615" height="15" fill="rgb(240,229,11)"/><text x="25.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:29) (286 samples, 51.91%)</title><rect x="24" y="84" width="613" height="15" fill="rgb(221,106,13)"/><text x="27.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:23) (226 samples, 41.02%)</title><rect x="153" y="100" width="484" height="15" fill="rgb(228,32,23)"/><text x="156.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (226 samples, 41.02%)</title><rect x="153" y="116" width="484" height="15" fill="rgb(247,147,31)"/><text x="156.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (226 samples, 41.02%)</title><rect x="153" y="132" width="484" height="15" fill="rgb(249,59,16)"/><text x="156.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (1 samples, 0.18%)</title><rect x="635" y="148" width="2" height="15" fill="rgb(237,203,13)"/><text x="638.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (1 samples, 0.18%)</title><rect x="635" y="164" width="2" height="15" fill="rgb(209,40,9)"/><text x="638.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:612) (1 samples, 0.18%)</title><rect x="635" y="180" width="2" height="15" fill="rgb(223,8,41)"/><text x="638.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="635" y="196" width="2" height="15" fill="rgb(249,175,44)"/><text x="638.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="635" y="212" width="2" height="15" fill="rgb(251,100,43)"/><text x="638.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.18%)</title><rect x="635" y="228" width="2" height="15" fill="rgb(247,10,13)"/><text x="638.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.18%)</title><rect x="635" y="244" width="2" height="15" fill="rgb(238,13,44)"/><text x="638.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.18%)</title><rect x="635" y="260" width="2" height="15" fill="rgb(206,35,3)"/><text x="638.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1187) (1 samples, 0.18%)</title><rect x="635" y="276" width="2" height="15" fill="rgb(218,199,7)"/><text x="638.00" y="286.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.18%)</title><rect x="637" y="852" width="2" height="15" fill="rgb(216,26,38)"/><text x="640.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.18%)</title><rect x="637" y="868" width="2" height="15" fill="rgb(251,172,34)"/><text x="640.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.18%)</title><rect x="637" y="884" width="2" height="15" fill="rgb(249,133,36)"/><text x="640.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.18%)</title><rect x="637" y="900" width="2" height="15" fill="rgb(251,14,34)"/><text x="640.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.18%)</title><rect x="637" y="916" width="2" height="15" fill="rgb(221,160,25)"/><text x="640.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.18%)</title><rect x="637" y="932" width="2" height="15" fill="rgb(215,219,46)"/><text x="640.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.18%)</title><rect x="637" y="948" width="2" height="15" fill="rgb(222,3,4)"/><text x="640.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.18%)</title><rect x="637" y="964" width="2" height="15" fill="rgb(213,34,8)"/><text x="640.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.18%)</title><rect x="637" y="980" width="2" height="15" fill="rgb(228,208,49)"/><text x="640.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:2) (2 samples, 0.36%)</title><rect x="637" y="148" width="4" height="15" fill="rgb(249,136,19)"/><text x="640.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="637" y="164" width="4" height="15" fill="rgb(253,177,9)"/><text x="640.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.36%)</title><rect x="637" y="180" width="4" height="15" fill="rgb(249,78,35)"/><text x="640.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="637" y="196" width="4" height="15" fill="rgb(207,27,47)"/><text x="640.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="637" y="212" width="4" height="15" fill="rgb(223,59,47)"/><text x="640.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="637" y="228" width="4" height="15" fill="rgb(226,28,14)"/><text x="640.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="637" y="244" width="4" height="15" fill="rgb(230,47,25)"/><text x="640.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="637" y="260" width="4" height="15" fill="rgb(240,76,19)"/><text x="640.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="637" y="276" width="4" height="15" fill="rgb(213,47,12)"/><text x="640.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.36%)</title><rect x="637" y="292" width="4" height="15" fill="rgb(252,130,51)"/><text x="640.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="637" y="308" width="4" height="15" fill="rgb(232,8,8)"/><text x="640.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="637" y="324" width="4" height="15" fill="rgb(227,227,11)"/><text x="640.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="637" y="340" width="4" height="15" fill="rgb(247,3,5)"/><text x="640.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="637" y="356" width="4" height="15" fill="rgb(206,160,14)"/><text x="640.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="637" y="372" width="4" height="15" fill="rgb(227,213,47)"/><text x="640.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.36%)</title><rect x="637" y="388" width="4" height="15" fill="rgb(219,163,12)"/><text x="640.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="637" y="404" width="4" height="15" fill="rgb(207,70,14)"/><text x="640.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="637" y="420" width="4" height="15" fill="rgb(247,222,48)"/><text x="640.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="637" y="436" width="4" height="15" fill="rgb(245,162,46)"/><text x="640.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="637" y="452" width="4" height="15" fill="rgb(231,134,37)"/><text x="640.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="637" y="468" width="4" height="15" fill="rgb(228,185,21)"/><text x="640.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.36%)</title><rect x="637" y="484" width="4" height="15" fill="rgb(253,124,43)"/><text x="640.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="637" y="500" width="4" height="15" fill="rgb(245,36,49)"/><text x="640.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="637" y="516" width="4" height="15" fill="rgb(224,77,33)"/><text x="640.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="637" y="532" width="4" height="15" fill="rgb(217,143,19)"/><text x="640.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="637" y="548" width="4" height="15" fill="rgb(216,185,33)"/><text x="640.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="637" y="564" width="4" height="15" fill="rgb(212,137,18)"/><text x="640.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.36%)</title><rect x="637" y="580" width="4" height="15" fill="rgb(233,227,23)"/><text x="640.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="637" y="596" width="4" height="15" fill="rgb(210,109,40)"/><text x="640.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.36%)</title><rect x="637" y="612" width="4" height="15" fill="rgb(247,131,51)"/><text x="640.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="637" y="628" width="4" height="15" fill="rgb(205,94,25)"/><text x="640.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="637" y="644" width="4" height="15" fill="rgb(234,51,52)"/><text x="640.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="637" y="660" width="4" height="15" fill="rgb(235,84,46)"/><text x="640.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="637" y="676" width="4" height="15" fill="rgb(210,73,27)"/><text x="640.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="637" y="692" width="4" height="15" fill="rgb(222,72,21)"/><text x="640.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="637" y="708" width="4" height="15" fill="rgb(253,94,10)"/><text x="640.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.36%)</title><rect x="637" y="724" width="4" height="15" fill="rgb(252,222,13)"/><text x="640.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="637" y="740" width="4" height="15" fill="rgb(230,30,6)"/><text x="640.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="637" y="756" width="4" height="15" fill="rgb(234,32,1)"/><text x="640.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="637" y="772" width="4" height="15" fill="rgb(242,74,47)"/><text x="640.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="637" y="788" width="4" height="15" fill="rgb(254,176,40)"/><text x="640.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="637" y="804" width="4" height="15" fill="rgb(236,90,25)"/><text x="640.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.36%)</title><rect x="637" y="820" width="4" height="15" fill="rgb(212,134,39)"/><text x="640.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.36%)</title><rect x="637" y="836" width="4" height="15" fill="rgb(253,154,44)"/><text x="640.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.18%)</title><rect x="639" y="852" width="2" height="15" fill="rgb(210,193,1)"/><text x="642.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.18%)</title><rect x="639" y="868" width="2" height="15" fill="rgb(222,12,26)"/><text x="642.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.18%)</title><rect x="639" y="884" width="2" height="15" fill="rgb(220,225,48)"/><text x="642.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.18%)</title><rect x="639" y="900" width="2" height="15" fill="rgb(250,81,35)"/><text x="642.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.18%)</title><rect x="639" y="916" width="2" height="15" fill="rgb(214,178,32)"/><text x="642.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.18%)</title><rect x="639" y="932" width="2" height="15" fill="rgb(214,71,51)"/><text x="642.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.18%)</title><rect x="639" y="948" width="2" height="15" fill="rgb(212,62,36)"/><text x="642.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.18%)</title><rect x="639" y="964" width="2" height="15" fill="rgb(212,109,38)"/><text x="642.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.18%)</title><rect x="639" y="980" width="2" height="15" fill="rgb(209,163,54)"/><text x="642.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:116) (1 samples, 0.18%)</title><rect x="639" y="996" width="2" height="15" fill="rgb(250,118,43)"/><text x="642.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.18%)</title><rect x="641" y="996" width="2" height="15" fill="rgb(239,182,42)"/><text x="644.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="641" y="1012" width="2" height="15" fill="rgb(232,129,46)"/><text x="644.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="641" y="1028" width="2" height="15" fill="rgb(217,45,21)"/><text x="644.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="641" y="1044" width="2" height="15" fill="rgb(236,208,22)"/><text x="644.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="641" y="1060" width="2" height="15" fill="rgb(239,43,49)"/><text x="644.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="641" y="1076" width="2" height="15" fill="rgb(242,207,16)"/><text x="644.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="641" y="1092" width="2" height="15" fill="rgb(242,195,38)"/><text x="644.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="641" y="1108" width="2" height="15" fill="rgb(245,120,36)"/><text x="644.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.18%)</title><rect x="641" y="1124" width="2" height="15" fill="rgb(252,4,8)"/><text x="644.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="641" y="1140" width="2" height="15" fill="rgb(246,228,6)"/><text x="644.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="641" y="1156" width="2" height="15" fill="rgb(232,163,28)"/><text x="644.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="641" y="1172" width="2" height="15" fill="rgb(254,40,14)"/><text x="644.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="641" y="1188" width="2" height="15" fill="rgb(226,91,11)"/><text x="644.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="641" y="1204" width="2" height="15" fill="rgb(227,96,3)"/><text x="644.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:30) (1 samples, 0.18%)</title><rect x="641" y="1220" width="2" height="15" fill="rgb(232,206,22)"/><text x="644.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="641" y="1236" width="2" height="15" fill="rgb(228,32,18)"/><text x="644.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="641" y="1252" width="2" height="15" fill="rgb(235,8,42)"/><text x="644.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="641" y="1268" width="2" height="15" fill="rgb(222,121,19)"/><text x="644.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="641" y="1284" width="2" height="15" fill="rgb(247,60,26)"/><text x="644.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="641" y="1300" width="2" height="15" fill="rgb(213,59,49)"/><text x="644.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py:4) (1 samples, 0.18%)</title><rect x="641" y="1316" width="2" height="15" fill="rgb(209,141,36)"/><text x="644.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="641" y="1332" width="2" height="15" fill="rgb(216,207,47)"/><text x="644.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="641" y="1348" width="2" height="15" fill="rgb(227,83,8)"/><text x="644.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="641" y="1364" width="2" height="15" fill="rgb(206,0,9)"/><text x="644.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="641" y="1380" width="2" height="15" fill="rgb(237,32,33)"/><text x="644.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="641" y="1396" width="2" height="15" fill="rgb(251,58,2)"/><text x="644.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:4) (1 samples, 0.18%)</title><rect x="641" y="1412" width="2" height="15" fill="rgb(214,24,30)"/><text x="644.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="641" y="1428" width="2" height="15" fill="rgb(217,125,16)"/><text x="644.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="641" y="1444" width="2" height="15" fill="rgb(225,41,12)"/><text x="644.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="641" y="1460" width="2" height="15" fill="rgb(227,105,1)"/><text x="644.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="641" y="1476" width="2" height="15" fill="rgb(246,63,17)"/><text x="644.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="641" y="1492" width="2" height="15" fill="rgb(228,149,20)"/><text x="644.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py:120) (1 samples, 0.18%)</title><rect x="641" y="1508" width="2" height="15" fill="rgb(222,141,44)"/><text x="644.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="641" y="1524" width="2" height="15" fill="rgb(236,27,22)"/><text x="644.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="641" y="1540" width="2" height="15" fill="rgb(224,0,46)"/><text x="644.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.18%)</title><rect x="641" y="1556" width="2" height="15" fill="rgb(212,54,17)"/><text x="644.00" y="1566.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:588) (1 samples, 0.18%)</title><rect x="641" y="1572" width="2" height="15" fill="rgb(254,87,50)"/><text x="644.00" y="1582.50"></text></g><g><title>_new_module (&lt;frozen importlib._bootstrap&gt;:36) (1 samples, 0.18%)</title><rect x="641" y="1588" width="2" height="15" fill="rgb(248,213,4)"/><text x="644.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.36%)</title><rect x="641" y="180" width="5" height="15" fill="rgb(233,190,37)"/><text x="644.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="641" y="196" width="5" height="15" fill="rgb(206,126,27)"/><text x="644.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="641" y="212" width="5" height="15" fill="rgb(215,11,52)"/><text x="644.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="641" y="228" width="5" height="15" fill="rgb(224,108,53)"/><text x="644.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="641" y="244" width="5" height="15" fill="rgb(242,200,39)"/><text x="644.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="641" y="260" width="5" height="15" fill="rgb(234,68,31)"/><text x="644.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="641" y="276" width="5" height="15" fill="rgb(249,105,20)"/><text x="644.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.36%)</title><rect x="641" y="292" width="5" height="15" fill="rgb(234,210,50)"/><text x="644.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="641" y="308" width="5" height="15" fill="rgb(242,148,26)"/><text x="644.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="641" y="324" width="5" height="15" fill="rgb(218,145,30)"/><text x="644.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="641" y="340" width="5" height="15" fill="rgb(235,186,43)"/><text x="644.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="641" y="356" width="5" height="15" fill="rgb(220,113,44)"/><text x="644.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="641" y="372" width="5" height="15" fill="rgb(220,25,48)"/><text x="644.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.36%)</title><rect x="641" y="388" width="5" height="15" fill="rgb(246,211,1)"/><text x="644.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="641" y="404" width="5" height="15" fill="rgb(237,89,53)"/><text x="644.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="641" y="420" width="5" height="15" fill="rgb(218,38,2)"/><text x="644.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="641" y="436" width="5" height="15" fill="rgb(254,9,0)"/><text x="644.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="641" y="452" width="5" height="15" fill="rgb(227,153,14)"/><text x="644.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="641" y="468" width="5" height="15" fill="rgb(241,184,17)"/><text x="644.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.36%)</title><rect x="641" y="484" width="5" height="15" fill="rgb(236,47,40)"/><text x="644.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="641" y="500" width="5" height="15" fill="rgb(218,36,0)"/><text x="644.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="641" y="516" width="5" height="15" fill="rgb(223,170,18)"/><text x="644.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="641" y="532" width="5" height="15" fill="rgb(222,200,25)"/><text x="644.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="641" y="548" width="5" height="15" fill="rgb(252,90,30)"/><text x="644.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="641" y="564" width="5" height="15" fill="rgb(247,69,48)"/><text x="644.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.36%)</title><rect x="641" y="580" width="5" height="15" fill="rgb(233,191,41)"/><text x="644.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="641" y="596" width="5" height="15" fill="rgb(218,86,46)"/><text x="644.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="641" y="612" width="5" height="15" fill="rgb(227,65,49)"/><text x="644.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="641" y="628" width="5" height="15" fill="rgb(220,89,17)"/><text x="644.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="641" y="644" width="5" height="15" fill="rgb(223,207,44)"/><text x="644.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="641" y="660" width="5" height="15" fill="rgb(249,143,47)"/><text x="644.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.36%)</title><rect x="641" y="676" width="5" height="15" fill="rgb(250,127,15)"/><text x="644.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="641" y="692" width="5" height="15" fill="rgb(230,19,16)"/><text x="644.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="641" y="708" width="5" height="15" fill="rgb(212,125,2)"/><text x="644.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="641" y="724" width="5" height="15" fill="rgb(226,202,49)"/><text x="644.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="641" y="740" width="5" height="15" fill="rgb(246,4,27)"/><text x="644.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="641" y="756" width="5" height="15" fill="rgb(216,30,52)"/><text x="644.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.36%)</title><rect x="641" y="772" width="5" height="15" fill="rgb(246,169,38)"/><text x="644.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.36%)</title><rect x="641" y="788" width="5" height="15" fill="rgb(235,135,25)"/><text x="644.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="641" y="804" width="5" height="15" fill="rgb(244,207,38)"/><text x="644.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="641" y="820" width="5" height="15" fill="rgb(229,100,16)"/><text x="644.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="641" y="836" width="5" height="15" fill="rgb(209,107,3)"/><text x="644.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="641" y="852" width="5" height="15" fill="rgb(245,73,30)"/><text x="644.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="641" y="868" width="5" height="15" fill="rgb(217,111,45)"/><text x="644.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="641" y="884" width="5" height="15" fill="rgb(234,173,29)"/><text x="644.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (2 samples, 0.36%)</title><rect x="641" y="900" width="5" height="15" fill="rgb(218,8,9)"/><text x="644.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="641" y="916" width="5" height="15" fill="rgb(223,79,30)"/><text x="644.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="641" y="932" width="5" height="15" fill="rgb(219,137,21)"/><text x="644.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="641" y="948" width="5" height="15" fill="rgb(220,72,27)"/><text x="644.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="641" y="964" width="5" height="15" fill="rgb(226,203,48)"/><text x="644.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="641" y="980" width="5" height="15" fill="rgb(213,173,10)"/><text x="644.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:27) (1 samples, 0.18%)</title><rect x="643" y="996" width="3" height="15" fill="rgb(222,168,10)"/><text x="646.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="643" y="1012" width="3" height="15" fill="rgb(206,43,54)"/><text x="646.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="643" y="1028" width="3" height="15" fill="rgb(219,189,1)"/><text x="646.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="643" y="1044" width="3" height="15" fill="rgb(251,99,18)"/><text x="646.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="643" y="1060" width="3" height="15" fill="rgb(252,137,27)"/><text x="646.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="643" y="1076" width="3" height="15" fill="rgb(218,142,21)"/><text x="646.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="643" y="1092" width="3" height="15" fill="rgb(241,59,47)"/><text x="646.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="643" y="1108" width="3" height="15" fill="rgb(239,90,49)"/><text x="646.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py:93) (1 samples, 0.18%)</title><rect x="643" y="1124" width="3" height="15" fill="rgb(218,37,30)"/><text x="646.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="643" y="1140" width="3" height="15" fill="rgb(229,193,14)"/><text x="646.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.18%)</title><rect x="643" y="1156" width="3" height="15" fill="rgb(229,8,0)"/><text x="646.00" y="1166.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.18%)</title><rect x="643" y="1172" width="3" height="15" fill="rgb(221,162,40)"/><text x="646.00" y="1182.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.18%)</title><rect x="643" y="1188" width="3" height="15" fill="rgb(206,208,44)"/><text x="646.00" y="1198.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1249) (1 samples, 0.18%)</title><rect x="643" y="1204" width="3" height="15" fill="rgb(228,225,24)"/><text x="646.00" y="1214.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:4) (3 samples, 0.54%)</title><rect x="641" y="148" width="7" height="15" fill="rgb(252,45,11)"/><text x="644.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="641" y="164" width="7" height="15" fill="rgb(231,7,26)"/><text x="644.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="646" y="180" width="2" height="15" fill="rgb(216,30,51)"/><text x="649.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="646" y="196" width="2" height="15" fill="rgb(252,95,7)"/><text x="649.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="646" y="212" width="2" height="15" fill="rgb(228,154,12)"/><text x="649.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="646" y="228" width="2" height="15" fill="rgb(222,204,49)"/><text x="649.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:17) (1 samples, 0.18%)</title><rect x="646" y="244" width="2" height="15" fill="rgb(206,163,12)"/><text x="649.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="646" y="260" width="2" height="15" fill="rgb(228,54,27)"/><text x="649.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="646" y="276" width="2" height="15" fill="rgb(218,41,6)"/><text x="649.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="646" y="292" width="2" height="15" fill="rgb(210,129,54)"/><text x="649.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="646" y="308" width="2" height="15" fill="rgb(210,177,53)"/><text x="649.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="646" y="324" width="2" height="15" fill="rgb(254,158,33)"/><text x="649.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_gb.py:33) (1 samples, 0.18%)</title><rect x="646" y="340" width="2" height="15" fill="rgb(219,75,32)"/><text x="649.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="646" y="356" width="2" height="15" fill="rgb(217,63,24)"/><text x="649.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="646" y="372" width="2" height="15" fill="rgb(247,33,8)"/><text x="649.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="646" y="388" width="2" height="15" fill="rgb(212,126,17)"/><text x="649.00" y="398.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.18%)</title><rect x="648" y="628" width="2" height="15" fill="rgb(222,82,38)"/><text x="651.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="648" y="644" width="2" height="15" fill="rgb(216,39,42)"/><text x="651.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="648" y="660" width="2" height="15" fill="rgb(239,24,37)"/><text x="651.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="648" y="676" width="2" height="15" fill="rgb(210,208,54)"/><text x="651.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="648" y="692" width="2" height="15" fill="rgb(247,208,53)"/><text x="651.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="648" y="708" width="2" height="15" fill="rgb(243,93,39)"/><text x="651.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:8) (1 samples, 0.18%)</title><rect x="648" y="724" width="2" height="15" fill="rgb(240,33,33)"/><text x="651.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="648" y="740" width="2" height="15" fill="rgb(215,163,25)"/><text x="651.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="648" y="756" width="2" height="15" fill="rgb(220,30,44)"/><text x="651.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="648" y="772" width="2" height="15" fill="rgb(247,208,12)"/><text x="651.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="648" y="788" width="2" height="15" fill="rgb(248,16,49)"/><text x="651.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="648" y="804" width="2" height="15" fill="rgb(228,76,44)"/><text x="651.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py:1) (1 samples, 0.18%)</title><rect x="648" y="820" width="2" height="15" fill="rgb(223,162,22)"/><text x="651.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="648" y="836" width="2" height="15" fill="rgb(230,100,37)"/><text x="651.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="648" y="852" width="2" height="15" fill="rgb(217,197,35)"/><text x="651.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="648" y="868" width="2" height="15" fill="rgb(228,10,37)"/><text x="651.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="648" y="884" width="2" height="15" fill="rgb(222,220,44)"/><text x="651.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="648" y="900" width="2" height="15" fill="rgb(252,142,38)"/><text x="651.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py:33) (1 samples, 0.18%)</title><rect x="648" y="916" width="2" height="15" fill="rgb(213,5,34)"/><text x="651.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="648" y="932" width="2" height="15" fill="rgb(248,5,7)"/><text x="651.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="648" y="948" width="2" height="15" fill="rgb(223,92,3)"/><text x="651.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="648" y="964" width="2" height="15" fill="rgb(236,100,32)"/><text x="651.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.18%)</title><rect x="648" y="980" width="2" height="15" fill="rgb(215,87,13)"/><text x="651.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.18%)</title><rect x="648" y="996" width="2" height="15" fill="rgb(237,78,24)"/><text x="651.00" y="1006.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.18%)</title><rect x="648" y="1012" width="2" height="15" fill="rgb(229,165,19)"/><text x="651.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:141) (1 samples, 0.18%)</title><rect x="650" y="1108" width="2" height="15" fill="rgb(220,16,27)"/><text x="653.00" y="1118.50"></text></g><g><title>Series (pandas/core/series.py:4359) (1 samples, 0.18%)</title><rect x="650" y="1124" width="2" height="15" fill="rgb(235,75,45)"/><text x="653.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.18%)</title><rect x="650" y="1140" width="2" height="15" fill="rgb(205,148,54)"/><text x="653.00" y="1150.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.18%)</title><rect x="650" y="1156" width="2" height="15" fill="rgb(223,172,53)"/><text x="653.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.18%)</title><rect x="650" y="1172" width="2" height="15" fill="rgb(229,29,48)"/><text x="653.00" y="1182.50"></text></g><g><title>0x7febebd6ff71 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="650" y="1188" width="2" height="15" fill="rgb(246,184,54)"/><text x="653.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.54%)</title><rect x="648" y="436" width="6" height="15" fill="rgb(209,22,12)"/><text x="651.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="648" y="452" width="6" height="15" fill="rgb(219,207,23)"/><text x="651.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="648" y="468" width="6" height="15" fill="rgb(252,118,34)"/><text x="651.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="648" y="484" width="6" height="15" fill="rgb(245,55,4)"/><text x="651.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="648" y="500" width="6" height="15" fill="rgb(229,42,50)"/><text x="651.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="648" y="516" width="6" height="15" fill="rgb(254,72,21)"/><text x="651.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.54%)</title><rect x="648" y="532" width="6" height="15" fill="rgb(205,44,54)"/><text x="651.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="648" y="548" width="6" height="15" fill="rgb(209,16,8)"/><text x="651.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="648" y="564" width="6" height="15" fill="rgb(229,124,15)"/><text x="651.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="648" y="580" width="6" height="15" fill="rgb(253,181,5)"/><text x="651.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="648" y="596" width="6" height="15" fill="rgb(209,51,3)"/><text x="651.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="648" y="612" width="6" height="15" fill="rgb(246,7,27)"/><text x="651.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.36%)</title><rect x="650" y="628" width="4" height="15" fill="rgb(211,117,7)"/><text x="653.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="650" y="644" width="4" height="15" fill="rgb(222,18,34)"/><text x="653.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="650" y="660" width="4" height="15" fill="rgb(222,117,18)"/><text x="653.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="650" y="676" width="4" height="15" fill="rgb(225,39,40)"/><text x="653.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="650" y="692" width="4" height="15" fill="rgb(243,148,1)"/><text x="653.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="650" y="708" width="4" height="15" fill="rgb(228,31,20)"/><text x="653.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.36%)</title><rect x="650" y="724" width="4" height="15" fill="rgb(216,116,9)"/><text x="653.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="650" y="740" width="4" height="15" fill="rgb(208,67,30)"/><text x="653.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="650" y="756" width="4" height="15" fill="rgb(248,18,4)"/><text x="653.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="650" y="772" width="4" height="15" fill="rgb(236,65,31)"/><text x="653.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="650" y="788" width="4" height="15" fill="rgb(230,17,7)"/><text x="653.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="650" y="804" width="4" height="15" fill="rgb(215,90,33)"/><text x="653.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.36%)</title><rect x="650" y="820" width="4" height="15" fill="rgb(213,117,9)"/><text x="653.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="650" y="836" width="4" height="15" fill="rgb(250,3,6)"/><text x="653.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="650" y="852" width="4" height="15" fill="rgb(228,178,16)"/><text x="653.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="650" y="868" width="4" height="15" fill="rgb(254,132,39)"/><text x="653.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="650" y="884" width="4" height="15" fill="rgb(238,8,35)"/><text x="653.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="650" y="900" width="4" height="15" fill="rgb(244,52,52)"/><text x="653.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.36%)</title><rect x="650" y="916" width="4" height="15" fill="rgb(212,173,54)"/><text x="653.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="650" y="932" width="4" height="15" fill="rgb(224,22,1)"/><text x="653.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="650" y="948" width="4" height="15" fill="rgb(206,148,3)"/><text x="653.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="650" y="964" width="4" height="15" fill="rgb(217,225,11)"/><text x="653.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="650" y="980" width="4" height="15" fill="rgb(241,161,24)"/><text x="653.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="650" y="996" width="4" height="15" fill="rgb(236,204,12)"/><text x="653.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.36%)</title><rect x="650" y="1012" width="4" height="15" fill="rgb(232,129,3)"/><text x="653.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="650" y="1028" width="4" height="15" fill="rgb(253,184,44)"/><text x="653.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="650" y="1044" width="4" height="15" fill="rgb(248,228,42)"/><text x="653.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="650" y="1060" width="4" height="15" fill="rgb(213,148,6)"/><text x="653.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="650" y="1076" width="4" height="15" fill="rgb(241,103,23)"/><text x="653.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="650" y="1092" width="4" height="15" fill="rgb(233,154,4)"/><text x="653.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.18%)</title><rect x="652" y="1108" width="2" height="15" fill="rgb(236,117,16)"/><text x="655.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="652" y="1124" width="2" height="15" fill="rgb(223,92,52)"/><text x="655.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="652" y="1140" width="2" height="15" fill="rgb(246,76,0)"/><text x="655.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="652" y="1156" width="2" height="15" fill="rgb(239,201,1)"/><text x="655.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="652" y="1172" width="2" height="15" fill="rgb(217,164,30)"/><text x="655.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="652" y="1188" width="2" height="15" fill="rgb(228,83,12)"/><text x="655.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.18%)</title><rect x="652" y="1204" width="2" height="15" fill="rgb(206,218,33)"/><text x="655.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="652" y="1220" width="2" height="15" fill="rgb(253,220,27)"/><text x="655.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="652" y="1236" width="2" height="15" fill="rgb(251,223,13)"/><text x="655.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="652" y="1252" width="2" height="15" fill="rgb(253,189,41)"/><text x="655.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="652" y="1268" width="2" height="15" fill="rgb(254,74,7)"/><text x="655.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="652" y="1284" width="2" height="15" fill="rgb(233,164,18)"/><text x="655.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.18%)</title><rect x="652" y="1300" width="2" height="15" fill="rgb(231,46,16)"/><text x="655.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="652" y="1316" width="2" height="15" fill="rgb(208,123,48)"/><text x="655.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="652" y="1332" width="2" height="15" fill="rgb(234,6,40)"/><text x="655.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="652" y="1348" width="2" height="15" fill="rgb(245,56,37)"/><text x="655.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="652" y="1364" width="2" height="15" fill="rgb(242,14,17)"/><text x="655.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="652" y="1380" width="2" height="15" fill="rgb(242,82,6)"/><text x="655.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.18%)</title><rect x="652" y="1396" width="2" height="15" fill="rgb(211,101,44)"/><text x="655.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="652" y="1412" width="2" height="15" fill="rgb(254,54,53)"/><text x="655.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="652" y="1428" width="2" height="15" fill="rgb(208,193,39)"/><text x="655.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="652" y="1444" width="2" height="15" fill="rgb(215,24,26)"/><text x="655.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="652" y="1460" width="2" height="15" fill="rgb(254,7,45)"/><text x="655.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="652" y="1476" width="2" height="15" fill="rgb(225,2,28)"/><text x="655.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.18%)</title><rect x="652" y="1492" width="2" height="15" fill="rgb(216,36,11)"/><text x="655.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="652" y="1508" width="2" height="15" fill="rgb(226,115,8)"/><text x="655.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="652" y="1524" width="2" height="15" fill="rgb(224,199,4)"/><text x="655.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="652" y="1540" width="2" height="15" fill="rgb(247,83,29)"/><text x="655.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="652" y="1556" width="2" height="15" fill="rgb(212,147,44)"/><text x="655.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="652" y="1572" width="2" height="15" fill="rgb(228,126,47)"/><text x="655.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.18%)</title><rect x="652" y="1588" width="2" height="15" fill="rgb(252,82,41)"/><text x="655.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="652" y="1604" width="2" height="15" fill="rgb(247,116,42)"/><text x="655.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="652" y="1620" width="2" height="15" fill="rgb(246,18,44)"/><text x="655.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="652" y="1636" width="2" height="15" fill="rgb(246,86,8)"/><text x="655.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="652" y="1652" width="2" height="15" fill="rgb(229,146,54)"/><text x="655.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="652" y="1668" width="2" height="15" fill="rgb(241,123,28)"/><text x="655.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.18%)</title><rect x="652" y="1684" width="2" height="15" fill="rgb(245,83,39)"/><text x="655.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="652" y="1700" width="2" height="15" fill="rgb(254,225,19)"/><text x="655.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="652" y="1716" width="2" height="15" fill="rgb(230,67,26)"/><text x="655.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="652" y="1732" width="2" height="15" fill="rgb(231,220,44)"/><text x="655.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="652" y="1748" width="2" height="15" fill="rgb(227,123,15)"/><text x="655.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="652" y="1764" width="2" height="15" fill="rgb(243,150,44)"/><text x="655.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.18%)</title><rect x="652" y="1780" width="2" height="15" fill="rgb(228,63,44)"/><text x="655.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="652" y="1796" width="2" height="15" fill="rgb(237,221,34)"/><text x="655.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="652" y="1812" width="2" height="15" fill="rgb(221,65,34)"/><text x="655.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="652" y="1828" width="2" height="15" fill="rgb(235,224,24)"/><text x="655.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.18%)</title><rect x="652" y="1844" width="2" height="15" fill="rgb(205,67,47)"/><text x="655.00" y="1854.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.18%)</title><rect x="652" y="1860" width="2" height="15" fill="rgb(229,222,1)"/><text x="655.00" y="1870.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.18%)</title><rect x="652" y="1876" width="2" height="15" fill="rgb(217,175,14)"/><text x="655.00" y="1886.50"></text></g><g><title>root (&lt;template&gt;:100) (1 samples, 0.18%)</title><rect x="654" y="1572" width="2" height="15" fill="rgb(215,44,3)"/><text x="657.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.18%)</title><rect x="654" y="1588" width="2" height="15" fill="rgb(233,46,8)"/><text x="657.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:154) (1 samples, 0.18%)</title><rect x="654" y="1604" width="2" height="15" fill="rgb(243,138,11)"/><text x="657.00" y="1614.50"></text></g><g><title>0x7febdbe3007e (?) (1 samples, 0.18%)</title><rect x="654" y="1620" width="2" height="15" fill="rgb(225,153,24)"/><text x="657.00" y="1630.50"></text></g><g><title>0x7febdbe2f8b0 (?) (1 samples, 0.18%)</title><rect x="654" y="1636" width="2" height="15" fill="rgb(225,154,19)"/><text x="657.00" y="1646.50"></text></g><g><title>0x7febdbe1437f (?) (1 samples, 0.18%)</title><rect x="654" y="1652" width="2" height="15" fill="rgb(210,219,15)"/><text x="657.00" y="1662.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.36%)</title><rect x="654" y="1460" width="4" height="15" fill="rgb(248,146,51)"/><text x="657.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.36%)</title><rect x="654" y="1476" width="4" height="15" fill="rgb(249,7,42)"/><text x="657.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.36%)</title><rect x="654" y="1492" width="4" height="15" fill="rgb(246,219,0)"/><text x="657.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.36%)</title><rect x="654" y="1508" width="4" height="15" fill="rgb(222,67,4)"/><text x="657.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.36%)</title><rect x="654" y="1524" width="4" height="15" fill="rgb(247,183,8)"/><text x="657.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.36%)</title><rect x="654" y="1540" width="4" height="15" fill="rgb(238,166,27)"/><text x="657.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.36%)</title><rect x="654" y="1556" width="4" height="15" fill="rgb(212,203,54)"/><text x="657.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:67) (1 samples, 0.18%)</title><rect x="656" y="1572" width="2" height="15" fill="rgb(224,126,3)"/><text x="659.00" y="1582.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:4) (11 samples, 2.00%)</title><rect x="637" y="52" width="24" height="15" fill="rgb(213,159,10)"/><text x="640.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.00%)</title><rect x="637" y="68" width="24" height="15" fill="rgb(209,205,18)"/><text x="640.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 2.00%)</title><rect x="637" y="84" width="24" height="15" fill="rgb(210,123,7)"/><text x="640.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 2.00%)</title><rect x="637" y="100" width="24" height="15" fill="rgb(249,180,50)"/><text x="640.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 2.00%)</title><rect x="637" y="116" width="24" height="15" fill="rgb(205,102,19)"/><text x="640.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.00%)</title><rect x="637" y="132" width="24" height="15" fill="rgb(208,75,9)"/><text x="640.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:7) (6 samples, 1.09%)</title><rect x="648" y="148" width="13" height="15" fill="rgb(209,163,33)"/><text x="651.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.09%)</title><rect x="648" y="164" width="13" height="15" fill="rgb(209,74,54)"/><text x="651.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.09%)</title><rect x="648" y="180" width="13" height="15" fill="rgb(211,225,30)"/><text x="651.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.09%)</title><rect x="648" y="196" width="13" height="15" fill="rgb(234,90,16)"/><text x="651.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.09%)</title><rect x="648" y="212" width="13" height="15" fill="rgb(253,133,5)"/><text x="651.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.09%)</title><rect x="648" y="228" width="13" height="15" fill="rgb(225,64,0)"/><text x="651.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 1.09%)</title><rect x="648" y="244" width="13" height="15" fill="rgb(219,86,31)"/><text x="651.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.09%)</title><rect x="648" y="260" width="13" height="15" fill="rgb(227,1,38)"/><text x="651.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.09%)</title><rect x="648" y="276" width="13" height="15" fill="rgb(222,90,13)"/><text x="651.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.09%)</title><rect x="648" y="292" width="13" height="15" fill="rgb(219,171,11)"/><text x="651.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.09%)</title><rect x="648" y="308" width="13" height="15" fill="rgb(213,178,28)"/><text x="651.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.09%)</title><rect x="648" y="324" width="13" height="15" fill="rgb(235,120,28)"/><text x="651.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 1.09%)</title><rect x="648" y="340" width="13" height="15" fill="rgb(206,222,10)"/><text x="651.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.09%)</title><rect x="648" y="356" width="13" height="15" fill="rgb(248,32,46)"/><text x="651.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.09%)</title><rect x="648" y="372" width="13" height="15" fill="rgb(212,6,23)"/><text x="651.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.09%)</title><rect x="648" y="388" width="13" height="15" fill="rgb(242,191,27)"/><text x="651.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.09%)</title><rect x="648" y="404" width="13" height="15" fill="rgb(205,189,11)"/><text x="651.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.09%)</title><rect x="648" y="420" width="13" height="15" fill="rgb(210,13,14)"/><text x="651.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.54%)</title><rect x="654" y="436" width="7" height="15" fill="rgb(228,204,8)"/><text x="657.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="654" y="452" width="7" height="15" fill="rgb(226,140,11)"/><text x="657.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.54%)</title><rect x="654" y="468" width="7" height="15" fill="rgb(250,167,4)"/><text x="657.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="654" y="484" width="7" height="15" fill="rgb(213,136,37)"/><text x="657.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="654" y="500" width="7" height="15" fill="rgb(212,116,27)"/><text x="657.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="654" y="516" width="7" height="15" fill="rgb(213,159,50)"/><text x="657.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="654" y="532" width="7" height="15" fill="rgb(239,17,21)"/><text x="657.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="654" y="548" width="7" height="15" fill="rgb(227,218,43)"/><text x="657.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="654" y="564" width="7" height="15" fill="rgb(212,130,47)"/><text x="657.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.54%)</title><rect x="654" y="580" width="7" height="15" fill="rgb(251,2,54)"/><text x="657.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="654" y="596" width="7" height="15" fill="rgb(227,187,3)"/><text x="657.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="654" y="612" width="7" height="15" fill="rgb(252,141,23)"/><text x="657.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="654" y="628" width="7" height="15" fill="rgb(254,0,54)"/><text x="657.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="654" y="644" width="7" height="15" fill="rgb(220,85,7)"/><text x="657.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="654" y="660" width="7" height="15" fill="rgb(222,109,44)"/><text x="657.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.54%)</title><rect x="654" y="676" width="7" height="15" fill="rgb(211,218,27)"/><text x="657.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="654" y="692" width="7" height="15" fill="rgb(230,149,0)"/><text x="657.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="654" y="708" width="7" height="15" fill="rgb(226,81,29)"/><text x="657.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="654" y="724" width="7" height="15" fill="rgb(253,126,0)"/><text x="657.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="654" y="740" width="7" height="15" fill="rgb(237,3,46)"/><text x="657.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="654" y="756" width="7" height="15" fill="rgb(221,171,0)"/><text x="657.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.54%)</title><rect x="654" y="772" width="7" height="15" fill="rgb(214,143,46)"/><text x="657.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="654" y="788" width="7" height="15" fill="rgb(243,140,44)"/><text x="657.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="654" y="804" width="7" height="15" fill="rgb(236,139,25)"/><text x="657.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="654" y="820" width="7" height="15" fill="rgb(227,220,46)"/><text x="657.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="654" y="836" width="7" height="15" fill="rgb(232,208,15)"/><text x="657.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="654" y="852" width="7" height="15" fill="rgb(222,130,41)"/><text x="657.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.54%)</title><rect x="654" y="868" width="7" height="15" fill="rgb(237,36,3)"/><text x="657.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="654" y="884" width="7" height="15" fill="rgb(234,151,38)"/><text x="657.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.54%)</title><rect x="654" y="900" width="7" height="15" fill="rgb(218,229,1)"/><text x="657.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="654" y="916" width="7" height="15" fill="rgb(225,189,53)"/><text x="657.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="654" y="932" width="7" height="15" fill="rgb(207,183,20)"/><text x="657.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="654" y="948" width="7" height="15" fill="rgb(216,10,50)"/><text x="657.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="654" y="964" width="7" height="15" fill="rgb(232,168,53)"/><text x="657.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="654" y="980" width="7" height="15" fill="rgb(243,37,12)"/><text x="657.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="654" y="996" width="7" height="15" fill="rgb(247,66,8)"/><text x="657.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.54%)</title><rect x="654" y="1012" width="7" height="15" fill="rgb(250,154,15)"/><text x="657.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="654" y="1028" width="7" height="15" fill="rgb(210,196,15)"/><text x="657.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="654" y="1044" width="7" height="15" fill="rgb(240,140,54)"/><text x="657.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="654" y="1060" width="7" height="15" fill="rgb(209,142,48)"/><text x="657.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="654" y="1076" width="7" height="15" fill="rgb(253,31,20)"/><text x="657.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="654" y="1092" width="7" height="15" fill="rgb(253,120,28)"/><text x="657.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.54%)</title><rect x="654" y="1108" width="7" height="15" fill="rgb(215,202,32)"/><text x="657.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.54%)</title><rect x="654" y="1124" width="7" height="15" fill="rgb(206,105,51)"/><text x="657.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="654" y="1140" width="7" height="15" fill="rgb(226,146,50)"/><text x="657.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="654" y="1156" width="7" height="15" fill="rgb(216,162,9)"/><text x="657.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="654" y="1172" width="7" height="15" fill="rgb(242,99,47)"/><text x="657.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="654" y="1188" width="7" height="15" fill="rgb(243,208,52)"/><text x="657.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="654" y="1204" width="7" height="15" fill="rgb(225,11,13)"/><text x="657.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="654" y="1220" width="7" height="15" fill="rgb(219,71,35)"/><text x="657.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.54%)</title><rect x="654" y="1236" width="7" height="15" fill="rgb(208,44,34)"/><text x="657.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.54%)</title><rect x="654" y="1252" width="7" height="15" fill="rgb(215,39,47)"/><text x="657.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="654" y="1268" width="7" height="15" fill="rgb(216,213,36)"/><text x="657.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="654" y="1284" width="7" height="15" fill="rgb(216,221,51)"/><text x="657.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="654" y="1300" width="7" height="15" fill="rgb(210,63,10)"/><text x="657.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="654" y="1316" width="7" height="15" fill="rgb(247,124,14)"/><text x="657.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="654" y="1332" width="7" height="15" fill="rgb(252,79,38)"/><text x="657.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="654" y="1348" width="7" height="15" fill="rgb(207,118,14)"/><text x="657.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.54%)</title><rect x="654" y="1364" width="7" height="15" fill="rgb(205,169,20)"/><text x="657.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="654" y="1380" width="7" height="15" fill="rgb(249,173,18)"/><text x="657.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="654" y="1396" width="7" height="15" fill="rgb(253,120,9)"/><text x="657.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="654" y="1412" width="7" height="15" fill="rgb(220,58,10)"/><text x="657.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="654" y="1428" width="7" height="15" fill="rgb(242,110,28)"/><text x="657.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="654" y="1444" width="7" height="15" fill="rgb(238,77,18)"/><text x="657.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.18%)</title><rect x="658" y="1460" width="3" height="15" fill="rgb(241,202,47)"/><text x="661.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="658" y="1476" width="3" height="15" fill="rgb(251,119,8)"/><text x="661.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="658" y="1492" width="3" height="15" fill="rgb(205,52,42)"/><text x="661.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="658" y="1508" width="3" height="15" fill="rgb(228,129,40)"/><text x="661.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="658" y="1524" width="3" height="15" fill="rgb(253,90,39)"/><text x="661.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="658" y="1540" width="3" height="15" fill="rgb(250,126,22)"/><text x="661.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.18%)</title><rect x="658" y="1556" width="3" height="15" fill="rgb(211,15,8)"/><text x="661.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.18%)</title><rect x="658" y="1572" width="3" height="15" fill="rgb(252,115,23)"/><text x="661.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="658" y="1588" width="3" height="15" fill="rgb(235,7,24)"/><text x="661.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="658" y="1604" width="3" height="15" fill="rgb(241,142,26)"/><text x="661.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="658" y="1620" width="3" height="15" fill="rgb(205,91,44)"/><text x="661.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="658" y="1636" width="3" height="15" fill="rgb(221,180,38)"/><text x="661.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="658" y="1652" width="3" height="15" fill="rgb(215,96,26)"/><text x="661.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.18%)</title><rect x="658" y="1668" width="3" height="15" fill="rgb(209,117,28)"/><text x="661.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="658" y="1684" width="3" height="15" fill="rgb(246,185,48)"/><text x="661.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="658" y="1700" width="3" height="15" fill="rgb(228,71,52)"/><text x="661.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="658" y="1716" width="3" height="15" fill="rgb(236,6,13)"/><text x="661.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="658" y="1732" width="3" height="15" fill="rgb(225,69,22)"/><text x="661.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="658" y="1748" width="3" height="15" fill="rgb(250,224,29)"/><text x="661.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:16) (1 samples, 0.18%)</title><rect x="658" y="1764" width="3" height="15" fill="rgb(227,35,25)"/><text x="661.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="658" y="1780" width="3" height="15" fill="rgb(208,190,9)"/><text x="661.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="658" y="1796" width="3" height="15" fill="rgb(229,13,26)"/><text x="661.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="658" y="1812" width="3" height="15" fill="rgb(246,121,30)"/><text x="661.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="658" y="1828" width="3" height="15" fill="rgb(224,155,18)"/><text x="661.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="658" y="1844" width="3" height="15" fill="rgb(220,217,37)"/><text x="661.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/defaults.py:32) (1 samples, 0.18%)</title><rect x="658" y="1860" width="3" height="15" fill="rgb(225,165,16)"/><text x="661.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="658" y="1876" width="3" height="15" fill="rgb(234,68,3)"/><text x="661.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="658" y="1892" width="3" height="15" fill="rgb(217,218,27)"/><text x="661.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="658" y="1908" width="3" height="15" fill="rgb(213,149,45)"/><text x="661.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="658" y="1924" width="3" height="15" fill="rgb(251,185,17)"/><text x="661.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="658" y="1940" width="3" height="15" fill="rgb(206,134,20)"/><text x="661.00" y="1950.50"></text></g><g><title>&lt;module&gt; (jinja2/tests.py:17) (1 samples, 0.18%)</title><rect x="658" y="1956" width="3" height="15" fill="rgb(217,164,33)"/><text x="661.00" y="1966.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.18%)</title><rect x="658" y="1972" width="3" height="15" fill="rgb(208,116,54)"/><text x="661.00" y="1982.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.18%)</title><rect x="658" y="1988" width="3" height="15" fill="rgb(220,19,35)"/><text x="661.00" y="1998.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.18%)</title><rect x="658" y="2004" width="3" height="15" fill="rgb(220,216,34)"/><text x="661.00" y="2014.50"></text></g><g><title>_code (sre_compile.py:604) (1 samples, 0.18%)</title><rect x="658" y="2020" width="3" height="15" fill="rgb(236,111,20)"/><text x="661.00" y="2030.50"></text></g><g><title>_compile_info (sre_compile.py:540) (1 samples, 0.18%)</title><rect x="658" y="2036" width="3" height="15" fill="rgb(217,104,35)"/><text x="661.00" y="2046.50"></text></g><g><title>getwidth (sre_parse.py:198) (1 samples, 0.18%)</title><rect x="658" y="2052" width="3" height="15" fill="rgb(223,104,40)"/><text x="661.00" y="2062.50"></text></g><g><title>getwidth (sre_parse.py:220) (1 samples, 0.18%)</title><rect x="658" y="2068" width="3" height="15" fill="rgb(231,166,45)"/><text x="661.00" y="2078.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:404) (1 samples, 0.18%)</title><rect x="661" y="228" width="2" height="15" fill="rgb(247,136,14)"/><text x="664.00" y="238.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.36%)</title><rect x="661" y="116" width="4" height="15" fill="rgb(241,198,37)"/><text x="664.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.36%)</title><rect x="661" y="132" width="4" height="15" fill="rgb(249,58,14)"/><text x="664.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.36%)</title><rect x="661" y="148" width="4" height="15" fill="rgb(239,204,26)"/><text x="664.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.36%)</title><rect x="661" y="164" width="4" height="15" fill="rgb(225,53,52)"/><text x="664.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.36%)</title><rect x="661" y="180" width="4" height="15" fill="rgb(209,225,4)"/><text x="664.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (2 samples, 0.36%)</title><rect x="661" y="196" width="4" height="15" fill="rgb(234,77,8)"/><text x="664.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:77) (2 samples, 0.36%)</title><rect x="661" y="212" width="4" height="15" fill="rgb(227,208,39)"/><text x="664.00" y="222.50"></text></g><g><title>get_unique_operator_name (skl2onnx/common/_topology.py:328) (1 samples, 0.18%)</title><rect x="663" y="228" width="2" height="15" fill="rgb(238,172,53)"/><text x="666.00" y="238.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:509) (1 samples, 0.18%)</title><rect x="663" y="244" width="2" height="15" fill="rgb(251,25,46)"/><text x="666.00" y="254.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.18%)</title><rect x="665" y="164" width="2" height="15" fill="rgb(236,90,46)"/><text x="668.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.18%)</title><rect x="665" y="180" width="2" height="15" fill="rgb(242,21,15)"/><text x="668.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.18%)</title><rect x="665" y="196" width="2" height="15" fill="rgb(216,219,30)"/><text x="668.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="665" y="212" width="2" height="15" fill="rgb(225,137,51)"/><text x="668.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="665" y="228" width="2" height="15" fill="rgb(212,14,54)"/><text x="668.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="665" y="244" width="2" height="15" fill="rgb(251,29,14)"/><text x="668.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="665" y="260" width="2" height="15" fill="rgb(248,133,3)"/><text x="668.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="665" y="276" width="2" height="15" fill="rgb(237,200,28)"/><text x="668.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.18%)</title><rect x="665" y="292" width="2" height="15" fill="rgb(251,63,33)"/><text x="668.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="665" y="308" width="2" height="15" fill="rgb(211,147,46)"/><text x="668.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="665" y="324" width="2" height="15" fill="rgb(234,70,9)"/><text x="668.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="665" y="340" width="2" height="15" fill="rgb(226,221,16)"/><text x="668.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="665" y="356" width="2" height="15" fill="rgb(238,178,43)"/><text x="668.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="665" y="372" width="2" height="15" fill="rgb(251,151,1)"/><text x="668.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.18%)</title><rect x="665" y="388" width="2" height="15" fill="rgb(234,110,25)"/><text x="668.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="665" y="404" width="2" height="15" fill="rgb(227,82,43)"/><text x="668.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="665" y="420" width="2" height="15" fill="rgb(253,40,5)"/><text x="668.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="665" y="436" width="2" height="15" fill="rgb(236,228,54)"/><text x="668.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="665" y="452" width="2" height="15" fill="rgb(231,83,38)"/><text x="668.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="665" y="468" width="2" height="15" fill="rgb(222,194,18)"/><text x="668.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.18%)</title><rect x="665" y="484" width="2" height="15" fill="rgb(246,157,6)"/><text x="668.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.18%)</title><rect x="665" y="500" width="2" height="15" fill="rgb(223,224,3)"/><text x="668.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.18%)</title><rect x="665" y="516" width="2" height="15" fill="rgb(210,80,9)"/><text x="668.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.18%)</title><rect x="665" y="532" width="2" height="15" fill="rgb(216,174,33)"/><text x="668.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.18%)</title><rect x="665" y="548" width="2" height="15" fill="rgb(250,212,1)"/><text x="668.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.18%)</title><rect x="665" y="564" width="2" height="15" fill="rgb(248,214,47)"/><text x="668.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.18%)</title><rect x="665" y="580" width="2" height="15" fill="rgb(252,13,40)"/><text x="668.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="665" y="596" width="2" height="15" fill="rgb(211,70,33)"/><text x="668.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.18%)</title><rect x="665" y="612" width="2" height="15" fill="rgb(254,37,46)"/><text x="668.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.18%)</title><rect x="665" y="628" width="2" height="15" fill="rgb(234,135,5)"/><text x="668.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="665" y="644" width="2" height="15" fill="rgb(234,70,24)"/><text x="668.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1034) (1 samples, 0.18%)</title><rect x="665" y="660" width="2" height="15" fill="rgb(243,167,16)"/><text x="668.00" y="670.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (1 samples, 0.18%)</title><rect x="665" y="676" width="2" height="15" fill="rgb(226,87,19)"/><text x="668.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.18%)</title><rect x="665" y="692" width="2" height="15" fill="rgb(217,42,4)"/><text x="668.00" y="702.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.18%)</title><rect x="665" y="708" width="2" height="15" fill="rgb(228,169,0)"/><text x="668.00" y="718.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.18%)</title><rect x="665" y="724" width="2" height="15" fill="rgb(223,203,43)"/><text x="668.00" y="734.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.18%)</title><rect x="665" y="740" width="2" height="15" fill="rgb(231,136,6)"/><text x="668.00" y="750.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.18%)</title><rect x="665" y="756" width="2" height="15" fill="rgb(236,10,30)"/><text x="668.00" y="766.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.18%)</title><rect x="665" y="772" width="2" height="15" fill="rgb(214,225,46)"/><text x="668.00" y="782.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.18%)</title><rect x="665" y="788" width="2" height="15" fill="rgb(220,135,37)"/><text x="668.00" y="798.50"></text></g><g><title>generic_visit (jinja2/visitor.py:43) (1 samples, 0.18%)</title><rect x="665" y="804" width="2" height="15" fill="rgb(234,115,30)"/><text x="668.00" y="814.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py:170) (1 samples, 0.18%)</title><rect x="665" y="820" width="2" height="15" fill="rgb(222,226,54)"/><text x="668.00" y="830.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:264) (1 samples, 0.18%)</title><rect x="667" y="180" width="2" height="15" fill="rgb(213,224,10)"/><text x="670.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:186) (1 samples, 0.18%)</title><rect x="667" y="196" width="2" height="15" fill="rgb(251,97,32)"/><text x="670.00" y="206.50"></text></g><g><title>google::protobuf::python::cmessage::GetAttr (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="667" y="212" width="2" height="15" fill="rgb(208,143,16)"/><text x="670.00" y="222.50"></text></g><g><title>google::protobuf::python::cmessage::GetFieldValue (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="667" y="228" width="2" height="15" fill="rgb(211,32,34)"/><text x="670.00" y="238.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:28) (5 samples, 0.91%)</title><rect x="661" y="84" width="10" height="15" fill="rgb(214,210,36)"/><text x="664.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (5 samples, 0.91%)</title><rect x="661" y="100" width="10" height="15" fill="rgb(232,177,53)"/><text x="664.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (3 samples, 0.54%)</title><rect x="665" y="116" width="6" height="15" fill="rgb(215,168,40)"/><text x="668.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (3 samples, 0.54%)</title><rect x="665" y="132" width="6" height="15" fill="rgb(250,85,33)"/><text x="668.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (3 samples, 0.54%)</title><rect x="665" y="148" width="6" height="15" fill="rgb(208,86,14)"/><text x="668.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:90) (2 samples, 0.36%)</title><rect x="667" y="164" width="4" height="15" fill="rgb(237,93,38)"/><text x="670.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:310) (1 samples, 0.18%)</title><rect x="669" y="180" width="2" height="15" fill="rgb(207,125,9)"/><text x="672.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.54%)</title><rect x="676" y="180" width="6" height="15" fill="rgb(243,65,43)"/><text x="679.00" y="190.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:30) (1 samples, 0.18%)</title><rect x="684" y="212" width="2" height="15" fill="rgb(244,55,16)"/><text x="687.00" y="222.50"></text></g><g><title>array_tolist (methods.c:539) (1 samples, 0.18%)</title><rect x="684" y="228" width="2" height="15" fill="rgb(216,119,24)"/><text x="687.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (2 samples, 0.36%)</title><rect x="684" y="196" width="4" height="15" fill="rgb(226,58,53)"/><text x="687.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.18%)</title><rect x="686" y="212" width="2" height="15" fill="rgb(235,66,20)"/><text x="689.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.18%)</title><rect x="686" y="228" width="2" height="15" fill="rgb(210,72,5)"/><text x="689.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="688" y="260" width="3" height="15" fill="rgb(250,158,27)"/><text x="691.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.18%)</title><rect x="688" y="276" width="3" height="15" fill="rgb(211,99,37)"/><text x="691.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2073) (1 samples, 0.18%)</title><rect x="688" y="292" width="3" height="15" fill="rgb(224,10,47)"/><text x="691.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.18%)</title><rect x="691" y="260" width="2" height="15" fill="rgb(229,126,5)"/><text x="694.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.18%)</title><rect x="691" y="276" width="2" height="15" fill="rgb(234,75,38)"/><text x="694.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (3 samples, 0.54%)</title><rect x="688" y="228" width="7" height="15" fill="rgb(219,76,50)"/><text x="691.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.54%)</title><rect x="688" y="244" width="7" height="15" fill="rgb(211,228,54)"/><text x="691.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="693" y="260" width="2" height="15" fill="rgb(242,8,42)"/><text x="696.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.18%)</title><rect x="693" y="276" width="2" height="15" fill="rgb(253,162,27)"/><text x="696.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.18%)</title><rect x="693" y="292" width="2" height="15" fill="rgb(246,147,43)"/><text x="696.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.18%)</title><rect x="693" y="308" width="2" height="15" fill="rgb(208,149,38)"/><text x="696.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.18%)</title><rect x="693" y="324" width="2" height="15" fill="rgb(221,18,45)"/><text x="696.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:356) (1 samples, 0.18%)</title><rect x="693" y="340" width="2" height="15" fill="rgb(225,175,3)"/><text x="696.00" y="350.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2168) (1 samples, 0.18%)</title><rect x="695" y="276" width="2" height="15" fill="rgb(232,206,1)"/><text x="698.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.18%)</title><rect x="699" y="308" width="2" height="15" fill="rgb(226,56,49)"/><text x="702.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="699" y="324" width="2" height="15" fill="rgb(206,213,17)"/><text x="702.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.18%)</title><rect x="699" y="340" width="2" height="15" fill="rgb(252,61,43)"/><text x="702.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.18%)</title><rect x="699" y="356" width="2" height="15" fill="rgb(239,126,30)"/><text x="702.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.18%)</title><rect x="699" y="372" width="2" height="15" fill="rgb(232,32,46)"/><text x="702.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.18%)</title><rect x="699" y="388" width="2" height="15" fill="rgb(212,130,10)"/><text x="702.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (1 samples, 0.18%)</title><rect x="701" y="324" width="2" height="15" fill="rgb(223,131,20)"/><text x="704.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.18%)</title><rect x="701" y="340" width="2" height="15" fill="rgb(206,136,9)"/><text x="704.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.18%)</title><rect x="701" y="356" width="2" height="15" fill="rgb(253,156,15)"/><text x="704.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.18%)</title><rect x="701" y="372" width="2" height="15" fill="rgb(248,206,30)"/><text x="704.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.18%)</title><rect x="703" y="372" width="3" height="15" fill="rgb(245,206,20)"/><text x="706.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.18%)</title><rect x="703" y="388" width="3" height="15" fill="rgb(208,192,28)"/><text x="706.00" y="398.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:914) (1 samples, 0.18%)</title><rect x="703" y="404" width="3" height="15" fill="rgb(215,220,25)"/><text x="706.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (9 samples, 1.63%)</title><rect x="688" y="196" width="20" height="15" fill="rgb(252,68,46)"/><text x="691.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (9 samples, 1.63%)</title><rect x="688" y="212" width="20" height="15" fill="rgb(228,215,1)"/><text x="691.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (6 samples, 1.09%)</title><rect x="695" y="228" width="13" height="15" fill="rgb(210,206,20)"/><text x="698.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (6 samples, 1.09%)</title><rect x="695" y="244" width="13" height="15" fill="rgb(247,120,23)"/><text x="698.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.09%)</title><rect x="695" y="260" width="13" height="15" fill="rgb(214,150,24)"/><text x="698.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (5 samples, 0.91%)</title><rect x="697" y="276" width="11" height="15" fill="rgb(224,139,17)"/><text x="700.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (4 samples, 0.73%)</title><rect x="699" y="292" width="9" height="15" fill="rgb(236,53,36)"/><text x="702.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.54%)</title><rect x="701" y="308" width="7" height="15" fill="rgb(209,153,20)"/><text x="704.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.36%)</title><rect x="703" y="324" width="5" height="15" fill="rgb(227,133,9)"/><text x="706.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.36%)</title><rect x="703" y="340" width="5" height="15" fill="rgb(209,11,30)"/><text x="706.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.36%)</title><rect x="703" y="356" width="5" height="15" fill="rgb(243,91,45)"/><text x="706.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.18%)</title><rect x="706" y="372" width="2" height="15" fill="rgb(231,44,42)"/><text x="709.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.18%)</title><rect x="706" y="388" width="2" height="15" fill="rgb(238,47,36)"/><text x="709.00" y="398.50"></text></g><g><title>0x7febac8cd422 (?) (1 samples, 0.18%)</title><rect x="708" y="244" width="2" height="15" fill="rgb(215,102,43)"/><text x="711.00" y="254.50"></text></g><g><title>0x7febac8d389e (?) (1 samples, 0.18%)</title><rect x="708" y="260" width="2" height="15" fill="rgb(248,115,16)"/><text x="711.00" y="270.50"></text></g><g><title>0x7febac8d374f (?) (1 samples, 0.18%)</title><rect x="708" y="276" width="2" height="15" fill="rgb(205,117,37)"/><text x="711.00" y="286.50"></text></g><g><title>0x7febac8d9a3a (?) (1 samples, 0.18%)</title><rect x="708" y="292" width="2" height="15" fill="rgb(235,159,34)"/><text x="711.00" y="302.50"></text></g><g><title>0x7febb5d35ab9 (?) (1 samples, 0.18%)</title><rect x="708" y="308" width="2" height="15" fill="rgb(231,183,15)"/><text x="711.00" y="318.50"></text></g><g><title>0x7febb5d36ead (?) (1 samples, 0.18%)</title><rect x="708" y="324" width="2" height="15" fill="rgb(207,42,46)"/><text x="711.00" y="334.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:141) (1 samples, 0.18%)</title><rect x="710" y="276" width="2" height="15" fill="rgb(212,143,25)"/><text x="713.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h:1907) (1 samples, 0.18%)</title><rect x="710" y="292" width="2" height="15" fill="rgb(244,74,54)"/><text x="713.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1928) (1 samples, 0.18%)</title><rect x="710" y="308" width="2" height="15" fill="rgb(243,175,43)"/><text x="713.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h:987) (1 samples, 0.18%)</title><rect x="710" y="324" width="2" height="15" fill="rgb(252,171,39)"/><text x="713.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h:831) (1 samples, 0.18%)</title><rect x="710" y="340" width="2" height="15" fill="rgb(234,222,14)"/><text x="713.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h:538) (1 samples, 0.18%)</title><rect x="710" y="356" width="2" height="15" fill="rgb(246,206,54)"/><text x="713.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h:1311) (1 samples, 0.18%)</title><rect x="710" y="372" width="2" height="15" fill="rgb(229,40,23)"/><text x="713.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h:265) (1 samples, 0.18%)</title><rect x="710" y="388" width="2" height="15" fill="rgb(237,129,39)"/><text x="713.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.18%)</title><rect x="710" y="404" width="2" height="15" fill="rgb(210,93,40)"/><text x="713.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c:479) (1 samples, 0.18%)</title><rect x="710" y="420" width="2" height="15" fill="rgb(219,133,29)"/><text x="713.00" y="430.50"></text></g><g><title>0x7febb5d35ab9 (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="712" y="452" width="2" height="15" fill="rgb(222,214,28)"/><text x="715.00" y="462.50"></text></g><g><title>0x7febb5d36ea9 (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="712" y="468" width="2" height="15" fill="rgb(230,52,30)"/><text x="715.00" y="478.50"></text></g><g><title>0x7febb5d36cf9 (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="714" y="484" width="2" height="15" fill="rgb(214,121,32)"/><text x="717.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (5 samples, 0.91%)</title><rect x="708" y="196" width="10" height="15" fill="rgb(248,220,5)"/><text x="711.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (5 samples, 0.91%)</title><rect x="708" y="212" width="10" height="15" fill="rgb(254,108,16)"/><text x="711.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (5 samples, 0.91%)</title><rect x="708" y="228" width="10" height="15" fill="rgb(214,213,16)"/><text x="711.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (4 samples, 0.73%)</title><rect x="710" y="244" width="8" height="15" fill="rgb(205,113,40)"/><text x="713.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (4 samples, 0.73%)</title><rect x="710" y="260" width="8" height="15" fill="rgb(254,44,18)"/><text x="713.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (3 samples, 0.54%)</title><rect x="712" y="276" width="6" height="15" fill="rgb(206,203,23)"/><text x="715.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (3 samples, 0.54%)</title><rect x="712" y="292" width="6" height="15" fill="rgb(236,163,12)"/><text x="715.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (3 samples, 0.54%)</title><rect x="712" y="308" width="6" height="15" fill="rgb(207,80,42)"/><text x="715.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (3 samples, 0.54%)</title><rect x="712" y="324" width="6" height="15" fill="rgb(233,92,18)"/><text x="715.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (3 samples, 0.54%)</title><rect x="712" y="340" width="6" height="15" fill="rgb(212,50,45)"/><text x="715.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (3 samples, 0.54%)</title><rect x="712" y="356" width="6" height="15" fill="rgb(234,19,35)"/><text x="715.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (3 samples, 0.54%)</title><rect x="712" y="372" width="6" height="15" fill="rgb(219,14,5)"/><text x="715.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (3 samples, 0.54%)</title><rect x="712" y="388" width="6" height="15" fill="rgb(223,100,33)"/><text x="715.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (3 samples, 0.54%)</title><rect x="712" y="404" width="6" height="15" fill="rgb(246,229,23)"/><text x="715.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (3 samples, 0.54%)</title><rect x="712" y="420" width="6" height="15" fill="rgb(236,39,22)"/><text x="715.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (3 samples, 0.54%)</title><rect x="712" y="436" width="6" height="15" fill="rgb(216,34,3)"/><text x="715.00" y="446.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.36%)</title><rect x="714" y="452" width="4" height="15" fill="rgb(222,63,19)"/><text x="717.00" y="462.50"></text></g><g><title>0x7febb5d34daa (libgomp.so.1.0.0) (2 samples, 0.36%)</title><rect x="714" y="468" width="4" height="15" fill="rgb(246,128,28)"/><text x="717.00" y="478.50"></text></g><g><title>0x7febb5d36cfb (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="716" y="484" width="2" height="15" fill="rgb(252,21,44)"/><text x="719.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.18%)</title><rect x="718" y="196" width="2" height="15" fill="rgb(220,209,21)"/><text x="721.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (2 samples, 0.36%)</title><rect x="720" y="228" width="5" height="15" fill="rgb(245,159,40)"/><text x="723.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="727" y="244" width="2" height="15" fill="rgb(227,78,21)"/><text x="730.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="727" y="260" width="2" height="15" fill="rgb(212,48,27)"/><text x="730.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:34) (1 samples, 0.18%)</title><rect x="727" y="276" width="2" height="15" fill="rgb(229,5,15)"/><text x="730.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.18%)</title><rect x="729" y="260" width="2" height="15" fill="rgb(243,64,17)"/><text x="732.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:312) (1 samples, 0.18%)</title><rect x="729" y="276" width="2" height="15" fill="rgb(224,115,5)"/><text x="732.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.18%)</title><rect x="731" y="308" width="2" height="15" fill="rgb(224,85,36)"/><text x="734.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="731" y="324" width="2" height="15" fill="rgb(235,107,34)"/><text x="734.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:208) (1 samples, 0.18%)</title><rect x="733" y="308" width="2" height="15" fill="rgb(254,85,47)"/><text x="736.00" y="318.50"></text></g><g><title>0x7febebd90120 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="733" y="324" width="2" height="15" fill="rgb(234,129,22)"/><text x="736.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (2 samples, 0.36%)</title><rect x="735" y="308" width="5" height="15" fill="rgb(213,184,7)"/><text x="738.00" y="318.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2088) (1 samples, 0.18%)</title><rect x="738" y="324" width="2" height="15" fill="rgb(220,216,25)"/><text x="741.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (5 samples, 0.91%)</title><rect x="731" y="292" width="11" height="15" fill="rgb(247,59,9)"/><text x="734.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.18%)</title><rect x="740" y="308" width="2" height="15" fill="rgb(242,130,9)"/><text x="743.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.18%)</title><rect x="740" y="324" width="2" height="15" fill="rgb(230,206,30)"/><text x="743.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (9 samples, 1.63%)</title><rect x="725" y="228" width="19" height="15" fill="rgb(225,73,41)"/><text x="728.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.27%)</title><rect x="729" y="244" width="15" height="15" fill="rgb(218,87,37)"/><text x="732.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.09%)</title><rect x="731" y="260" width="13" height="15" fill="rgb(220,28,19)"/><text x="734.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.09%)</title><rect x="731" y="276" width="13" height="15" fill="rgb(238,217,0)"/><text x="734.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.18%)</title><rect x="742" y="292" width="2" height="15" fill="rgb(217,9,21)"/><text x="745.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.18%)</title><rect x="742" y="308" width="2" height="15" fill="rgb(243,192,49)"/><text x="745.00" y="318.50"></text></g><g><title>0x7febebd6f991 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="742" y="324" width="2" height="15" fill="rgb(208,174,49)"/><text x="745.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="744" y="244" width="2" height="15" fill="rgb(208,195,14)"/><text x="747.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.18%)</title><rect x="744" y="260" width="2" height="15" fill="rgb(216,34,32)"/><text x="747.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (13 samples, 2.36%)</title><rect x="720" y="196" width="28" height="15" fill="rgb(246,191,4)"/><text x="723.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (13 samples, 2.36%)</title><rect x="720" y="212" width="28" height="15" fill="rgb(244,157,11)"/><text x="723.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (2 samples, 0.36%)</title><rect x="744" y="228" width="4" height="15" fill="rgb(222,226,14)"/><text x="747.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="746" y="244" width="2" height="15" fill="rgb(250,5,38)"/><text x="749.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="746" y="260" width="2" height="15" fill="rgb(231,110,30)"/><text x="749.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.18%)</title><rect x="746" y="276" width="2" height="15" fill="rgb(211,221,26)"/><text x="749.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.18%)</title><rect x="746" y="292" width="2" height="15" fill="rgb(214,176,27)"/><text x="749.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.18%)</title><rect x="746" y="308" width="2" height="15" fill="rgb(240,42,22)"/><text x="749.00" y="318.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.36%)</title><rect x="753" y="228" width="4" height="15" fill="rgb(229,167,3)"/><text x="756.00" y="238.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (2 samples, 0.36%)</title><rect x="753" y="244" width="4" height="15" fill="rgb(209,34,19)"/><text x="756.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (2 samples, 0.36%)</title><rect x="753" y="260" width="4" height="15" fill="rgb(224,94,22)"/><text x="756.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (2 samples, 0.36%)</title><rect x="753" y="276" width="4" height="15" fill="rgb(241,90,14)"/><text x="756.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (2 samples, 0.36%)</title><rect x="753" y="292" width="4" height="15" fill="rgb(233,127,38)"/><text x="756.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.36%)</title><rect x="753" y="308" width="4" height="15" fill="rgb(239,71,39)"/><text x="756.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (2 samples, 0.36%)</title><rect x="753" y="324" width="4" height="15" fill="rgb(242,131,22)"/><text x="756.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.18%)</title><rect x="755" y="340" width="2" height="15" fill="rgb(243,176,28)"/><text x="758.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.18%)</title><rect x="761" y="340" width="2" height="15" fill="rgb(244,151,2)"/><text x="764.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.18%)</title><rect x="761" y="356" width="2" height="15" fill="rgb(235,117,41)"/><text x="764.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.73%)</title><rect x="759" y="324" width="9" height="15" fill="rgb(231,165,28)"/><text x="762.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.36%)</title><rect x="763" y="340" width="5" height="15" fill="rgb(223,2,7)"/><text x="766.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.36%)</title><rect x="763" y="356" width="5" height="15" fill="rgb(231,51,23)"/><text x="766.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.18%)</title><rect x="765" y="372" width="3" height="15" fill="rgb(254,114,28)"/><text x="768.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.18%)</title><rect x="765" y="388" width="3" height="15" fill="rgb(243,44,28)"/><text x="768.00" y="398.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.18%)</title><rect x="770" y="388" width="2" height="15" fill="rgb(211,14,14)"/><text x="773.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.54%)</title><rect x="768" y="340" width="6" height="15" fill="rgb(240,218,34)"/><text x="771.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.36%)</title><rect x="770" y="356" width="4" height="15" fill="rgb(250,221,53)"/><text x="773.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.36%)</title><rect x="770" y="372" width="4" height="15" fill="rgb(226,172,52)"/><text x="773.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.18%)</title><rect x="772" y="388" width="2" height="15" fill="rgb(243,111,23)"/><text x="775.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.18%)</title><rect x="774" y="372" width="2" height="15" fill="rgb(220,125,5)"/><text x="777.00" y="382.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.18%)</title><rect x="774" y="388" width="2" height="15" fill="rgb(251,145,14)"/><text x="777.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (5 samples, 0.91%)</title><rect x="768" y="324" width="10" height="15" fill="rgb(220,139,31)"/><text x="771.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.36%)</title><rect x="774" y="340" width="4" height="15" fill="rgb(238,182,10)"/><text x="777.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="774" y="356" width="4" height="15" fill="rgb(209,202,1)"/><text x="777.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="776" y="372" width="2" height="15" fill="rgb(224,58,2)"/><text x="779.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.18%)</title><rect x="776" y="388" width="2" height="15" fill="rgb(209,89,24)"/><text x="779.00" y="398.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.18%)</title><rect x="776" y="404" width="2" height="15" fill="rgb(223,161,40)"/><text x="779.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="778" y="356" width="2" height="15" fill="rgb(228,145,6)"/><text x="781.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="778" y="372" width="2" height="15" fill="rgb(225,41,47)"/><text x="781.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.18%)</title><rect x="778" y="388" width="2" height="15" fill="rgb(234,111,12)"/><text x="781.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.18%)</title><rect x="778" y="404" width="2" height="15" fill="rgb(233,196,31)"/><text x="781.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (15 samples, 2.72%)</title><rect x="750" y="212" width="33" height="15" fill="rgb(217,12,47)"/><text x="753.00" y="222.50">_r..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (12 samples, 2.18%)</title><rect x="757" y="228" width="26" height="15" fill="rgb(213,71,31)"/><text x="760.00" y="238.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 2.18%)</title><rect x="757" y="244" width="26" height="15" fill="rgb(230,16,14)"/><text x="760.00" y="254.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (12 samples, 2.18%)</title><rect x="757" y="260" width="26" height="15" fill="rgb(251,142,0)"/><text x="760.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (12 samples, 2.18%)</title><rect x="757" y="276" width="26" height="15" fill="rgb(226,69,14)"/><text x="760.00" y="286.50">_..</text></g><g><title>array_clip (methods.c:2381) (12 samples, 2.18%)</title><rect x="757" y="292" width="26" height="15" fill="rgb(223,42,36)"/><text x="760.00" y="302.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 2.18%)</title><rect x="757" y="308" width="26" height="15" fill="rgb(236,150,14)"/><text x="760.00" y="318.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:132) (2 samples, 0.36%)</title><rect x="778" y="324" width="5" height="15" fill="rgb(244,46,3)"/><text x="781.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (2 samples, 0.36%)</title><rect x="778" y="340" width="5" height="15" fill="rgb(222,191,9)"/><text x="781.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="780" y="356" width="3" height="15" fill="rgb(222,23,21)"/><text x="783.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.18%)</title><rect x="780" y="372" width="3" height="15" fill="rgb(207,22,35)"/><text x="783.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.18%)</title><rect x="780" y="388" width="3" height="15" fill="rgb(218,87,46)"/><text x="783.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.18%)</title><rect x="780" y="404" width="3" height="15" fill="rgb(223,142,12)"/><text x="783.00" y="414.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.18%)</title><rect x="780" y="420" width="3" height="15" fill="rgb(249,97,20)"/><text x="783.00" y="430.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1427) (1 samples, 0.18%)</title><rect x="780" y="436" width="3" height="15" fill="rgb(231,39,48)"/><text x="783.00" y="446.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (49 samples, 8.89%)</title><rect x="682" y="180" width="105" height="15" fill="rgb(208,159,21)"/><text x="685.00" y="190.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (18 samples, 3.27%)</title><rect x="748" y="196" width="39" height="15" fill="rgb(211,197,24)"/><text x="751.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:67) (2 samples, 0.36%)</title><rect x="783" y="212" width="4" height="15" fill="rgb(211,63,2)"/><text x="786.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.36%)</title><rect x="787" y="180" width="4" height="15" fill="rgb(234,38,33)"/><text x="790.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.18%)</title><rect x="791" y="180" width="2" height="15" fill="rgb(215,28,34)"/><text x="794.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.36%)</title><rect x="793" y="180" width="5" height="15" fill="rgb(218,6,12)"/><text x="796.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (61 samples, 11.07%)</title><rect x="671" y="164" width="131" height="15" fill="rgb(223,105,1)"/><text x="674.00" y="174.50">_run_sequence_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.36%)</title><rect x="798" y="180" width="4" height="15" fill="rgb(223,201,33)"/><text x="801.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:18) (62 samples, 11.25%)</title><rect x="671" y="100" width="133" height="15" fill="rgb(209,40,12)"/><text x="674.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (62 samples, 11.25%)</title><rect x="671" y="116" width="133" height="15" fill="rgb(207,123,25)"/><text x="674.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (62 samples, 11.25%)</title><rect x="671" y="132" width="133" height="15" fill="rgb(236,156,16)"/><text x="674.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (62 samples, 11.25%)</title><rect x="671" y="148" width="133" height="15" fill="rgb(231,37,22)"/><text x="674.00" y="158.50">run (mlprodict/o..</text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.18%)</title><rect x="802" y="164" width="2" height="15" fill="rgb(217,74,52)"/><text x="805.00" y="174.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.18%)</title><rect x="802" y="180" width="2" height="15" fill="rgb(220,216,48)"/><text x="805.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.18%)</title><rect x="804" y="164" width="2" height="15" fill="rgb(219,191,43)"/><text x="807.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.18%)</title><rect x="817" y="180" width="2" height="15" fill="rgb(220,197,21)"/><text x="820.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (10 samples, 1.81%)</title><rect x="819" y="180" width="21" height="15" fill="rgb(217,47,34)"/><text x="822.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.36%)</title><rect x="836" y="196" width="4" height="15" fill="rgb(245,228,25)"/><text x="839.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.18%)</title><rect x="851" y="228" width="2" height="15" fill="rgb(215,190,22)"/><text x="854.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.18%)</title><rect x="851" y="244" width="2" height="15" fill="rgb(238,7,40)"/><text x="854.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.18%)</title><rect x="851" y="260" width="2" height="15" fill="rgb(237,36,48)"/><text x="854.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1645) (1 samples, 0.18%)</title><rect x="851" y="276" width="2" height="15" fill="rgb(251,224,18)"/><text x="854.00" y="286.50"></text></g><g><title>0x7febebd70dd6 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="853" y="276" width="2" height="15" fill="rgb(219,34,22)"/><text x="856.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (3 samples, 0.54%)</title><rect x="851" y="212" width="7" height="15" fill="rgb(242,70,8)"/><text x="854.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.36%)</title><rect x="853" y="228" width="5" height="15" fill="rgb(222,189,19)"/><text x="856.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (2 samples, 0.36%)</title><rect x="853" y="244" width="5" height="15" fill="rgb(251,70,35)"/><text x="856.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.36%)</title><rect x="853" y="260" width="5" height="15" fill="rgb(217,0,33)"/><text x="856.00" y="270.50"></text></g><g><title>0x7febebd70e07 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="855" y="276" width="3" height="15" fill="rgb(214,124,50)"/><text x="858.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.18%)</title><rect x="858" y="212" width="2" height="15" fill="rgb(207,193,35)"/><text x="861.00" y="222.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.18%)</title><rect x="862" y="260" width="2" height="15" fill="rgb(244,18,25)"/><text x="865.00" y="270.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.18%)</title><rect x="862" y="276" width="2" height="15" fill="rgb(234,186,32)"/><text x="865.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:693) (1 samples, 0.18%)</title><rect x="862" y="292" width="2" height="15" fill="rgb(214,86,52)"/><text x="865.00" y="302.50"></text></g><g><title>gentype_alloc (scalartypes.c.src:121) (1 samples, 0.18%)</title><rect x="862" y="308" width="2" height="15" fill="rgb(226,83,13)"/><text x="865.00" y="318.50"></text></g><g><title>array_reshape (methods.c:195) (3 samples, 0.54%)</title><rect x="860" y="228" width="6" height="15" fill="rgb(208,2,48)"/><text x="863.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.36%)</title><rect x="862" y="244" width="4" height="15" fill="rgb(223,146,17)"/><text x="865.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (1 samples, 0.18%)</title><rect x="864" y="260" width="2" height="15" fill="rgb(211,224,37)"/><text x="867.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.18%)</title><rect x="864" y="276" width="2" height="15" fill="rgb(211,178,22)"/><text x="867.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="864" y="292" width="2" height="15" fill="rgb(250,31,25)"/><text x="867.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.18%)</title><rect x="864" y="308" width="2" height="15" fill="rgb(207,220,20)"/><text x="867.00" y="318.50"></text></g><g><title>PyArray_Newshape (shape.c:213) (1 samples, 0.18%)</title><rect x="866" y="260" width="2" height="15" fill="rgb(239,208,11)"/><text x="869.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (5 samples, 0.91%)</title><rect x="860" y="212" width="10" height="15" fill="rgb(245,130,2)"/><text x="863.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (2 samples, 0.36%)</title><rect x="866" y="228" width="4" height="15" fill="rgb(240,201,10)"/><text x="869.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.36%)</title><rect x="866" y="244" width="4" height="15" fill="rgb(222,189,2)"/><text x="869.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.18%)</title><rect x="868" y="260" width="2" height="15" fill="rgb(208,47,31)"/><text x="871.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.18%)</title><rect x="868" y="276" width="2" height="15" fill="rgb(215,30,18)"/><text x="871.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.18%)</title><rect x="868" y="292" width="2" height="15" fill="rgb(218,93,3)"/><text x="871.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.18%)</title><rect x="868" y="308" width="2" height="15" fill="rgb(230,18,35)"/><text x="871.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="868" y="324" width="2" height="15" fill="rgb(248,101,15)"/><text x="871.00" y="334.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.18%)</title><rect x="870" y="228" width="3" height="15" fill="rgb(239,136,43)"/><text x="873.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="870" y="244" width="3" height="15" fill="rgb(215,37,15)"/><text x="873.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="870" y="260" width="3" height="15" fill="rgb(231,210,22)"/><text x="873.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.18%)</title><rect x="870" y="276" width="3" height="15" fill="rgb(243,63,3)"/><text x="873.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="870" y="292" width="3" height="15" fill="rgb(215,163,11)"/><text x="873.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.18%)</title><rect x="870" y="308" width="3" height="15" fill="rgb(228,99,52)"/><text x="873.00" y="318.50"></text></g><g><title>_array_fill_strides (ctors.c:4128) (1 samples, 0.18%)</title><rect x="870" y="324" width="3" height="15" fill="rgb(212,186,26)"/><text x="873.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (12 samples, 2.18%)</title><rect x="849" y="196" width="26" height="15" fill="rgb(239,222,19)"/><text x="852.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (2 samples, 0.36%)</title><rect x="870" y="212" width="5" height="15" fill="rgb(218,128,30)"/><text x="873.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="873" y="228" width="2" height="15" fill="rgb(229,149,54)"/><text x="876.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:931) (1 samples, 0.18%)</title><rect x="873" y="244" width="2" height="15" fill="rgb(223,222,3)"/><text x="876.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:18) (1 samples, 0.18%)</title><rect x="877" y="228" width="2" height="15" fill="rgb(241,177,4)"/><text x="880.00" y="238.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.18%)</title><rect x="881" y="292" width="2" height="15" fill="rgb(205,19,5)"/><text x="884.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.36%)</title><rect x="881" y="260" width="4" height="15" fill="rgb(208,6,7)"/><text x="884.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (2 samples, 0.36%)</title><rect x="881" y="276" width="4" height="15" fill="rgb(248,126,3)"/><text x="884.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:918) (1 samples, 0.18%)</title><rect x="883" y="292" width="2" height="15" fill="rgb(223,120,34)"/><text x="886.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.18%)</title><rect x="885" y="308" width="3" height="15" fill="rgb(245,13,15)"/><text x="888.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.18%)</title><rect x="885" y="324" width="3" height="15" fill="rgb(236,188,49)"/><text x="888.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.18%)</title><rect x="885" y="340" width="3" height="15" fill="rgb(231,86,46)"/><text x="888.00" y="350.50"></text></g><g><title>0x7febebd27760 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="885" y="356" width="3" height="15" fill="rgb(229,130,5)"/><text x="888.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (5 samples, 0.91%)</title><rect x="879" y="228" width="11" height="15" fill="rgb(245,164,26)"/><text x="882.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.73%)</title><rect x="881" y="244" width="9" height="15" fill="rgb(250,149,48)"/><text x="884.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.36%)</title><rect x="885" y="260" width="5" height="15" fill="rgb(224,143,19)"/><text x="888.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.36%)</title><rect x="885" y="276" width="5" height="15" fill="rgb(252,20,44)"/><text x="888.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.36%)</title><rect x="885" y="292" width="5" height="15" fill="rgb(238,34,33)"/><text x="888.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.18%)</title><rect x="888" y="308" width="2" height="15" fill="rgb(205,204,42)"/><text x="891.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.18%)</title><rect x="888" y="324" width="2" height="15" fill="rgb(220,73,15)"/><text x="891.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:401) (1 samples, 0.18%)</title><rect x="888" y="340" width="2" height="15" fill="rgb(226,78,40)"/><text x="891.00" y="350.50"></text></g><g><title>safe_sub (npy_extint128.h:35) (1 samples, 0.18%)</title><rect x="888" y="356" width="2" height="15" fill="rgb(209,106,18)"/><text x="891.00" y="366.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2168) (1 samples, 0.18%)</title><rect x="890" y="276" width="2" height="15" fill="rgb(244,8,35)"/><text x="893.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (4 samples, 0.73%)</title><rect x="892" y="292" width="8" height="15" fill="rgb(254,214,32)"/><text x="895.00" y="302.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (2 samples, 0.36%)</title><rect x="900" y="292" width="5" height="15" fill="rgb(210,218,37)"/><text x="903.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.18%)</title><rect x="905" y="340" width="2" height="15" fill="rgb(244,186,53)"/><text x="908.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.18%)</title><rect x="905" y="356" width="2" height="15" fill="rgb(244,222,42)"/><text x="908.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.18%)</title><rect x="907" y="388" width="2" height="15" fill="rgb(221,200,53)"/><text x="910.00" y="398.50"></text></g><g><title>0x7febebe4dfa0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="907" y="404" width="2" height="15" fill="rgb(225,29,42)"/><text x="910.00" y="414.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.54%)</title><rect x="905" y="308" width="6" height="15" fill="rgb(206,10,9)"/><text x="908.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.54%)</title><rect x="905" y="324" width="6" height="15" fill="rgb(242,39,25)"/><text x="908.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.36%)</title><rect x="907" y="340" width="4" height="15" fill="rgb(211,43,9)"/><text x="910.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.36%)</title><rect x="907" y="356" width="4" height="15" fill="rgb(211,130,44)"/><text x="910.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.36%)</title><rect x="907" y="372" width="4" height="15" fill="rgb(240,132,16)"/><text x="910.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.18%)</title><rect x="909" y="388" width="2" height="15" fill="rgb(224,159,52)"/><text x="912.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.18%)</title><rect x="911" y="324" width="2" height="15" fill="rgb(249,55,48)"/><text x="914.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4513) (1 samples, 0.18%)</title><rect x="913" y="324" width="2" height="15" fill="rgb(218,154,26)"/><text x="916.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (1 samples, 0.18%)</title><rect x="915" y="324" width="3" height="15" fill="rgb(216,80,43)"/><text x="918.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.18%)</title><rect x="915" y="340" width="3" height="15" fill="rgb(219,43,52)"/><text x="918.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.18%)</title><rect x="915" y="356" width="3" height="15" fill="rgb(227,155,16)"/><text x="918.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:872) (1 samples, 0.18%)</title><rect x="915" y="372" width="3" height="15" fill="rgb(254,55,14)"/><text x="918.00" y="382.50"></text></g><g><title>0x7febeaf91600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="915" y="388" width="3" height="15" fill="rgb(233,220,21)"/><text x="918.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (1 samples, 0.18%)</title><rect x="918" y="340" width="2" height="15" fill="rgb(215,176,29)"/><text x="921.00" y="350.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.18%)</title><rect x="918" y="356" width="2" height="15" fill="rgb(215,146,10)"/><text x="921.00" y="366.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.18%)</title><rect x="918" y="372" width="2" height="15" fill="rgb(219,156,25)"/><text x="921.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.18%)</title><rect x="920" y="388" width="2" height="15" fill="rgb(230,100,35)"/><text x="923.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.18%)</title><rect x="920" y="404" width="2" height="15" fill="rgb(205,57,10)"/><text x="923.00" y="414.50"></text></g><g><title>0x7febebd8fd50 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="920" y="420" width="2" height="15" fill="rgb(206,85,12)"/><text x="923.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.36%)</title><rect x="920" y="356" width="4" height="15" fill="rgb(242,103,9)"/><text x="923.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.36%)</title><rect x="920" y="372" width="4" height="15" fill="rgb(235,209,27)"/><text x="923.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.18%)</title><rect x="922" y="388" width="2" height="15" fill="rgb(210,71,2)"/><text x="925.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="922" y="404" width="2" height="15" fill="rgb(228,130,23)"/><text x="925.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.18%)</title><rect x="922" y="420" width="2" height="15" fill="rgb(247,225,42)"/><text x="925.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.18%)</title><rect x="922" y="436" width="2" height="15" fill="rgb(222,138,54)"/><text x="925.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.18%)</title><rect x="922" y="452" width="2" height="15" fill="rgb(223,131,25)"/><text x="925.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.18%)</title><rect x="924" y="356" width="2" height="15" fill="rgb(238,110,50)"/><text x="927.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:402) (1 samples, 0.18%)</title><rect x="924" y="372" width="2" height="15" fill="rgb(222,98,1)"/><text x="927.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.18%)</title><rect x="926" y="372" width="2" height="15" fill="rgb(252,28,38)"/><text x="929.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1699) (1 samples, 0.18%)</title><rect x="926" y="388" width="2" height="15" fill="rgb(254,189,22)"/><text x="929.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.36%)</title><rect x="926" y="356" width="4" height="15" fill="rgb(239,108,38)"/><text x="929.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.18%)</title><rect x="928" y="372" width="2" height="15" fill="rgb(250,172,4)"/><text x="931.00" y="382.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3149) (1 samples, 0.18%)</title><rect x="928" y="388" width="2" height="15" fill="rgb(231,171,51)"/><text x="931.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.18%)</title><rect x="930" y="356" width="3" height="15" fill="rgb(245,216,6)"/><text x="933.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.18%)</title><rect x="930" y="372" width="3" height="15" fill="rgb(245,195,33)"/><text x="933.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.18%)</title><rect x="930" y="388" width="3" height="15" fill="rgb(239,38,45)"/><text x="933.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.18%)</title><rect x="930" y="404" width="3" height="15" fill="rgb(248,217,7)"/><text x="933.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (28 samples, 5.08%)</title><rect x="875" y="196" width="60" height="15" fill="rgb(253,117,2)"/><text x="878.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (27 samples, 4.90%)</title><rect x="877" y="212" width="58" height="15" fill="rgb(215,77,21)"/><text x="880.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (21 samples, 3.81%)</title><rect x="890" y="228" width="45" height="15" fill="rgb(218,107,52)"/><text x="893.00" y="238.50">_run..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (21 samples, 3.81%)</title><rect x="890" y="244" width="45" height="15" fill="rgb(215,182,24)"/><text x="893.00" y="254.50">sum ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (21 samples, 3.81%)</title><rect x="890" y="260" width="45" height="15" fill="rgb(240,40,2)"/><text x="893.00" y="270.50">arra..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (20 samples, 3.63%)</title><rect x="892" y="276" width="43" height="15" fill="rgb(245,43,46)"/><text x="895.00" y="286.50">sum ..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (14 samples, 2.54%)</title><rect x="905" y="292" width="30" height="15" fill="rgb(233,57,26)"/><text x="908.00" y="302.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 2.00%)</title><rect x="911" y="308" width="24" height="15" fill="rgb(220,194,34)"/><text x="914.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 1.45%)</title><rect x="918" y="324" width="17" height="15" fill="rgb(218,60,46)"/><text x="921.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.27%)</title><rect x="920" y="340" width="15" height="15" fill="rgb(220,229,33)"/><text x="923.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.18%)</title><rect x="933" y="356" width="2" height="15" fill="rgb(205,120,54)"/><text x="936.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3483) (1 samples, 0.18%)</title><rect x="933" y="372" width="2" height="15" fill="rgb(205,156,42)"/><text x="936.00" y="382.50"></text></g><g><title>NpyIter_GetDescrArray (nditer_api.c:1082) (1 samples, 0.18%)</title><rect x="933" y="388" width="2" height="15" fill="rgb(220,46,36)"/><text x="936.00" y="398.50"></text></g><g><title>0x7febb5d36ea0 (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="935" y="468" width="2" height="15" fill="rgb(210,147,36)"/><text x="938.00" y="478.50"></text></g><g><title>0x7febb5d36ea9 (libgomp.so.1.0.0) (6 samples, 1.09%)</title><rect x="937" y="468" width="13" height="15" fill="rgb(225,145,6)"/><text x="940.00" y="478.50"></text></g><g><title>0x7febb5d36eab (libgomp.so.1.0.0) (5 samples, 0.91%)</title><rect x="950" y="468" width="10" height="15" fill="rgb(213,4,22)"/><text x="953.00" y="478.50"></text></g><g><title>0x7febb5d35ab9 (libgomp.so.1.0.0) (16 samples, 2.90%)</title><rect x="935" y="452" width="34" height="15" fill="rgb(252,115,1)"/><text x="938.00" y="462.50">0x..</text></g><g><title>0x7febb5d36ead (libgomp.so.1.0.0) (4 samples, 0.73%)</title><rect x="960" y="468" width="9" height="15" fill="rgb(253,61,49)"/><text x="963.00" y="478.50"></text></g><g><title>0x7febb5d36cf0 (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="969" y="484" width="2" height="15" fill="rgb(209,26,13)"/><text x="972.00" y="494.50"></text></g><g><title>0x7febb5d36cfb (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="971" y="484" width="2" height="15" fill="rgb(224,126,14)"/><text x="974.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (19 samples, 3.45%)</title><rect x="935" y="196" width="40" height="15" fill="rgb(226,13,37)"/><text x="938.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (19 samples, 3.45%)</title><rect x="935" y="212" width="40" height="15" fill="rgb(215,184,39)"/><text x="938.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (19 samples, 3.45%)</title><rect x="935" y="228" width="40" height="15" fill="rgb(218,47,6)"/><text x="938.00" y="238.50">_ru..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (19 samples, 3.45%)</title><rect x="935" y="244" width="40" height="15" fill="rgb(224,118,20)"/><text x="938.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (19 samples, 3.45%)</title><rect x="935" y="260" width="40" height="15" fill="rgb(227,173,6)"/><text x="938.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (19 samples, 3.45%)</title><rect x="935" y="276" width="40" height="15" fill="rgb(247,198,25)"/><text x="938.00" y="286.50">voi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (19 samples, 3.45%)</title><rect x="935" y="292" width="40" height="15" fill="rgb(212,3,49)"/><text x="938.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (19 samples, 3.45%)</title><rect x="935" y="308" width="40" height="15" fill="rgb(217,197,9)"/><text x="938.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (19 samples, 3.45%)</title><rect x="935" y="324" width="40" height="15" fill="rgb(254,226,54)"/><text x="938.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (19 samples, 3.45%)</title><rect x="935" y="340" width="40" height="15" fill="rgb(205,37,37)"/><text x="938.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h:538) (19 samples, 3.45%)</title><rect x="935" y="356" width="40" height="15" fill="rgb(249,45,14)"/><text x="938.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (19 samples, 3.45%)</title><rect x="935" y="372" width="40" height="15" fill="rgb(232,8,22)"/><text x="938.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (19 samples, 3.45%)</title><rect x="935" y="388" width="40" height="15" fill="rgb(210,141,26)"/><text x="938.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (19 samples, 3.45%)</title><rect x="935" y="404" width="40" height="15" fill="rgb(231,1,9)"/><text x="938.00" y="414.50">pyb..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (19 samples, 3.45%)</title><rect x="935" y="420" width="40" height="15" fill="rgb(210,53,37)"/><text x="938.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (19 samples, 3.45%)</title><rect x="935" y="436" width="40" height="15" fill="rgb(254,200,37)"/><text x="938.00" y="446.50">pyb..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (3 samples, 0.54%)</title><rect x="969" y="452" width="6" height="15" fill="rgb(212,24,50)"/><text x="972.00" y="462.50"></text></g><g><title>0x7febb5d34daa (libgomp.so.1.0.0) (3 samples, 0.54%)</title><rect x="969" y="468" width="6" height="15" fill="rgb(213,212,2)"/><text x="972.00" y="478.50"></text></g><g><title>0x7febb5d36d6d (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="973" y="484" width="2" height="15" fill="rgb(242,173,20)"/><text x="976.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (3 samples, 0.54%)</title><rect x="975" y="212" width="7" height="15" fill="rgb(246,71,42)"/><text x="978.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.18%)</title><rect x="982" y="228" width="2" height="15" fill="rgb(231,173,37)"/><text x="985.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.36%)</title><rect x="988" y="244" width="4" height="15" fill="rgb(251,166,50)"/><text x="991.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.36%)</title><rect x="988" y="260" width="4" height="15" fill="rgb(235,197,38)"/><text x="991.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.36%)</title><rect x="988" y="276" width="4" height="15" fill="rgb(250,132,28)"/><text x="991.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.36%)</title><rect x="988" y="292" width="4" height="15" fill="rgb(210,136,12)"/><text x="991.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.36%)</title><rect x="988" y="308" width="4" height="15" fill="rgb(220,220,36)"/><text x="991.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.18%)</title><rect x="992" y="260" width="3" height="15" fill="rgb(234,199,39)"/><text x="995.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.18%)</title><rect x="992" y="276" width="3" height="15" fill="rgb(251,25,50)"/><text x="995.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.18%)</title><rect x="997" y="308" width="2" height="15" fill="rgb(221,64,43)"/><text x="1000.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.18%)</title><rect x="999" y="308" width="2" height="15" fill="rgb(252,226,11)"/><text x="1002.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="999" y="324" width="2" height="15" fill="rgb(253,17,45)"/><text x="1002.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.18%)</title><rect x="1001" y="308" width="2" height="15" fill="rgb(221,100,41)"/><text x="1004.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.18%)</title><rect x="1001" y="324" width="2" height="15" fill="rgb(205,135,5)"/><text x="1004.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.18%)</title><rect x="1001" y="340" width="2" height="15" fill="rgb(220,128,9)"/><text x="1004.00" y="350.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.18%)</title><rect x="1001" y="356" width="2" height="15" fill="rgb(208,134,6)"/><text x="1004.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.18%)</title><rect x="1003" y="308" width="2" height="15" fill="rgb(212,189,20)"/><text x="1006.00" y="318.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2047) (1 samples, 0.18%)</title><rect x="1003" y="324" width="2" height="15" fill="rgb(231,212,4)"/><text x="1006.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.18%)</title><rect x="1005" y="308" width="2" height="15" fill="rgb(209,228,2)"/><text x="1008.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.18%)</title><rect x="1007" y="308" width="3" height="15" fill="rgb(221,169,15)"/><text x="1010.00" y="318.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1285) (1 samples, 0.18%)</title><rect x="1007" y="324" width="3" height="15" fill="rgb(246,157,20)"/><text x="1010.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2783) (1 samples, 0.18%)</title><rect x="1010" y="324" width="2" height="15" fill="rgb(228,73,12)"/><text x="1013.00" y="334.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:203) (1 samples, 0.18%)</title><rect x="1010" y="340" width="2" height="15" fill="rgb(216,100,41)"/><text x="1013.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (9 samples, 1.63%)</title><rect x="995" y="292" width="19" height="15" fill="rgb(218,176,26)"/><text x="998.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.36%)</title><rect x="1010" y="308" width="4" height="15" fill="rgb(236,215,44)"/><text x="1013.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.18%)</title><rect x="1012" y="324" width="2" height="15" fill="rgb(240,172,25)"/><text x="1015.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.18%)</title><rect x="1012" y="340" width="2" height="15" fill="rgb(223,68,30)"/><text x="1015.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1574) (1 samples, 0.18%)</title><rect x="1014" y="292" width="2" height="15" fill="rgb(229,135,47)"/><text x="1017.00" y="302.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1218) (1 samples, 0.18%)</title><rect x="1014" y="308" width="2" height="15" fill="rgb(212,204,39)"/><text x="1017.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.18%)</title><rect x="1016" y="292" width="2" height="15" fill="rgb(218,71,41)"/><text x="1019.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src:759) (1 samples, 0.18%)</title><rect x="1016" y="308" width="2" height="15" fill="rgb(236,174,14)"/><text x="1019.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (17 samples, 3.09%)</title><rect x="984" y="228" width="36" height="15" fill="rgb(228,51,17)"/><text x="987.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 2.36%)</title><rect x="992" y="244" width="28" height="15" fill="rgb(252,58,12)"/><text x="995.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 2.18%)</title><rect x="995" y="260" width="25" height="15" fill="rgb(238,89,19)"/><text x="998.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (12 samples, 2.18%)</title><rect x="995" y="276" width="25" height="15" fill="rgb(219,86,38)"/><text x="998.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.18%)</title><rect x="1018" y="292" width="2" height="15" fill="rgb(218,150,54)"/><text x="1021.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.18%)</title><rect x="1018" y="308" width="2" height="15" fill="rgb(224,16,42)"/><text x="1021.00" y="318.50"></text></g><g><title>0x7febebd6f902 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1018" y="324" width="2" height="15" fill="rgb(207,143,6)"/><text x="1021.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:524) (1 samples, 0.18%)</title><rect x="1020" y="228" width="2" height="15" fill="rgb(213,184,11)"/><text x="1023.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:527) (1 samples, 0.18%)</title><rect x="1022" y="228" width="3" height="15" fill="rgb(208,189,47)"/><text x="1025.00" y="238.50"></text></g><g><title>array_size_get (getset.c:439) (1 samples, 0.18%)</title><rect x="1022" y="244" width="3" height="15" fill="rgb(215,75,8)"/><text x="1025.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.18%)</title><rect x="1027" y="276" width="2" height="15" fill="rgb(206,128,42)"/><text x="1030.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.18%)</title><rect x="1027" y="292" width="2" height="15" fill="rgb(236,128,4)"/><text x="1030.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.18%)</title><rect x="1027" y="308" width="2" height="15" fill="rgb(207,80,47)"/><text x="1030.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1642) (1 samples, 0.18%)</title><rect x="1027" y="324" width="2" height="15" fill="rgb(215,133,33)"/><text x="1030.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (26 samples, 4.72%)</title><rect x="975" y="196" width="56" height="15" fill="rgb(206,49,22)"/><text x="978.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (23 samples, 4.17%)</title><rect x="982" y="212" width="49" height="15" fill="rgb(223,112,19)"/><text x="985.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (3 samples, 0.54%)</title><rect x="1025" y="228" width="6" height="15" fill="rgb(215,14,12)"/><text x="1028.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="1027" y="244" width="4" height="15" fill="rgb(209,181,35)"/><text x="1030.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.36%)</title><rect x="1027" y="260" width="4" height="15" fill="rgb(211,19,20)"/><text x="1030.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:812) (1 samples, 0.18%)</title><rect x="1029" y="276" width="2" height="15" fill="rgb(250,88,50)"/><text x="1032.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (2 samples, 0.36%)</title><rect x="1031" y="196" width="4" height="15" fill="rgb(252,186,53)"/><text x="1034.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:61) (1 samples, 0.18%)</title><rect x="1040" y="212" width="2" height="15" fill="rgb(234,67,43)"/><text x="1043.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:63) (1 samples, 0.18%)</title><rect x="1042" y="212" width="2" height="15" fill="rgb(243,183,10)"/><text x="1045.00" y="222.50"></text></g><g><title>0x7febebe4d134 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1048" y="276" width="2" height="15" fill="rgb(241,94,52)"/><text x="1051.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:60) (1 samples, 0.18%)</title><rect x="1050" y="276" width="2" height="15" fill="rgb(218,191,24)"/><text x="1053.00" y="286.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.18%)</title><rect x="1052" y="340" width="3" height="15" fill="rgb(211,58,52)"/><text x="1055.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (2 samples, 0.36%)</title><rect x="1052" y="324" width="5" height="15" fill="rgb(226,134,49)"/><text x="1055.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.18%)</title><rect x="1055" y="340" width="2" height="15" fill="rgb(240,37,0)"/><text x="1058.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.36%)</title><rect x="1057" y="356" width="4" height="15" fill="rgb(245,69,44)"/><text x="1060.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.54%)</title><rect x="1057" y="340" width="6" height="15" fill="rgb(240,27,11)"/><text x="1060.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.18%)</title><rect x="1061" y="356" width="2" height="15" fill="rgb(223,79,35)"/><text x="1064.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.73%)</title><rect x="1057" y="324" width="8" height="15" fill="rgb(233,19,9)"/><text x="1060.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.18%)</title><rect x="1063" y="340" width="2" height="15" fill="rgb(241,154,17)"/><text x="1066.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.18%)</title><rect x="1065" y="340" width="2" height="15" fill="rgb(236,12,36)"/><text x="1068.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.18%)</title><rect x="1065" y="356" width="2" height="15" fill="rgb(216,14,22)"/><text x="1068.00" y="366.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:326) (1 samples, 0.18%)</title><rect x="1074" y="436" width="2" height="15" fill="rgb(246,55,28)"/><text x="1077.00" y="446.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.18%)</title><rect x="1076" y="436" width="2" height="15" fill="rgb(247,19,10)"/><text x="1079.00" y="446.50"></text></g><g><title>0x7febebe4dd21 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1076" y="452" width="2" height="15" fill="rgb(219,108,22)"/><text x="1079.00" y="462.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (4 samples, 0.73%)</title><rect x="1072" y="420" width="8" height="15" fill="rgb(243,165,32)"/><text x="1075.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="1078" y="436" width="2" height="15" fill="rgb(217,73,15)"/><text x="1081.00" y="446.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1724) (1 samples, 0.18%)</title><rect x="1080" y="420" width="2" height="15" fill="rgb(219,184,32)"/><text x="1083.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (8 samples, 1.45%)</title><rect x="1067" y="340" width="18" height="15" fill="rgb(252,99,36)"/><text x="1070.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (8 samples, 1.45%)</title><rect x="1067" y="356" width="18" height="15" fill="rgb(233,135,19)"/><text x="1070.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 1.45%)</title><rect x="1067" y="372" width="18" height="15" fill="rgb(236,219,30)"/><text x="1070.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (8 samples, 1.45%)</title><rect x="1067" y="388" width="18" height="15" fill="rgb(221,182,32)"/><text x="1070.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (6 samples, 1.09%)</title><rect x="1072" y="404" width="13" height="15" fill="rgb(208,6,47)"/><text x="1075.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.18%)</title><rect x="1082" y="420" width="3" height="15" fill="rgb(227,200,37)"/><text x="1085.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.18%)</title><rect x="1082" y="436" width="3" height="15" fill="rgb(220,24,41)"/><text x="1085.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.18%)</title><rect x="1082" y="452" width="3" height="15" fill="rgb(253,22,15)"/><text x="1085.00" y="462.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.18%)</title><rect x="1082" y="468" width="3" height="15" fill="rgb(254,176,29)"/><text x="1085.00" y="478.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:208) (1 samples, 0.18%)</title><rect x="1082" y="484" width="3" height="15" fill="rgb(218,214,17)"/><text x="1085.00" y="494.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="1085" y="372" width="2" height="15" fill="rgb(230,26,30)"/><text x="1088.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.18%)</title><rect x="1085" y="388" width="2" height="15" fill="rgb(220,46,48)"/><text x="1088.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.18%)</title><rect x="1085" y="404" width="2" height="15" fill="rgb(221,41,31)"/><text x="1088.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.18%)</title><rect x="1085" y="420" width="2" height="15" fill="rgb(240,112,15)"/><text x="1088.00" y="430.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:288) (1 samples, 0.18%)</title><rect x="1087" y="388" width="2" height="15" fill="rgb(253,193,54)"/><text x="1090.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (12 samples, 2.18%)</title><rect x="1065" y="324" width="26" height="15" fill="rgb(236,85,23)"/><text x="1068.00" y="334.50">_..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.54%)</title><rect x="1085" y="340" width="6" height="15" fill="rgb(246,127,17)"/><text x="1088.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.54%)</title><rect x="1085" y="356" width="6" height="15" fill="rgb(236,8,22)"/><text x="1088.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.36%)</title><rect x="1087" y="372" width="4" height="15" fill="rgb(230,99,54)"/><text x="1090.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.18%)</title><rect x="1089" y="388" width="2" height="15" fill="rgb(224,181,52)"/><text x="1092.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:112) (1 samples, 0.18%)</title><rect x="1091" y="324" width="2" height="15" fill="rgb(248,118,26)"/><text x="1094.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:124) (1 samples, 0.18%)</title><rect x="1093" y="324" width="2" height="15" fill="rgb(253,105,52)"/><text x="1096.00" y="334.50"></text></g><g><title>0x7febebd85e50 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1106" y="420" width="2" height="15" fill="rgb(207,178,17)"/><text x="1109.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.36%)</title><rect x="1106" y="356" width="4" height="15" fill="rgb(244,16,19)"/><text x="1109.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.36%)</title><rect x="1106" y="372" width="4" height="15" fill="rgb(206,107,34)"/><text x="1109.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.36%)</title><rect x="1106" y="388" width="4" height="15" fill="rgb(224,173,26)"/><text x="1109.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.36%)</title><rect x="1106" y="404" width="4" height="15" fill="rgb(248,129,21)"/><text x="1109.00" y="414.50"></text></g><g><title>0x7febebd85e6d (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1108" y="420" width="2" height="15" fill="rgb(252,17,12)"/><text x="1111.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="1110" y="372" width="2" height="15" fill="rgb(250,136,46)"/><text x="1113.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.18%)</title><rect x="1110" y="388" width="2" height="15" fill="rgb(209,60,1)"/><text x="1113.00" y="398.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:903) (1 samples, 0.18%)</title><rect x="1110" y="404" width="2" height="15" fill="rgb(254,206,51)"/><text x="1113.00" y="414.50"></text></g><g><title>iterator_loop (ufunc_object.c:1471) (1 samples, 0.18%)</title><rect x="1112" y="404" width="3" height="15" fill="rgb(215,8,10)"/><text x="1115.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.18%)</title><rect x="1115" y="420" width="2" height="15" fill="rgb(228,78,12)"/><text x="1118.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.18%)</title><rect x="1115" y="436" width="2" height="15" fill="rgb(233,162,0)"/><text x="1118.00" y="446.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.18%)</title><rect x="1115" y="452" width="2" height="15" fill="rgb(219,167,11)"/><text x="1118.00" y="462.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.18%)</title><rect x="1115" y="468" width="2" height="15" fill="rgb(207,121,7)"/><text x="1118.00" y="478.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:126) (1 samples, 0.18%)</title><rect x="1115" y="484" width="2" height="15" fill="rgb(246,135,35)"/><text x="1118.00" y="494.50"></text></g><g><title>npy_is_aligned (common.h:207) (1 samples, 0.18%)</title><rect x="1115" y="500" width="2" height="15" fill="rgb(218,132,34)"/><text x="1118.00" y="510.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.18%)</title><rect x="1117" y="420" width="2" height="15" fill="rgb(218,31,42)"/><text x="1120.00" y="430.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2035) (1 samples, 0.18%)</title><rect x="1117" y="436" width="2" height="15" fill="rgb(252,46,49)"/><text x="1120.00" y="446.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:722) (1 samples, 0.18%)</title><rect x="1119" y="452" width="2" height="15" fill="rgb(232,57,42)"/><text x="1122.00" y="462.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.73%)</title><rect x="1115" y="404" width="8" height="15" fill="rgb(238,75,16)"/><text x="1118.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (2 samples, 0.36%)</title><rect x="1119" y="420" width="4" height="15" fill="rgb(237,217,5)"/><text x="1122.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (2 samples, 0.36%)</title><rect x="1119" y="436" width="4" height="15" fill="rgb(245,73,39)"/><text x="1122.00" y="446.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.18%)</title><rect x="1121" y="452" width="2" height="15" fill="rgb(219,159,37)"/><text x="1124.00" y="462.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.18%)</title><rect x="1121" y="468" width="2" height="15" fill="rgb(254,54,7)"/><text x="1124.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.09%)</title><rect x="1112" y="372" width="13" height="15" fill="rgb(240,93,40)"/><text x="1115.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.09%)</title><rect x="1112" y="388" width="13" height="15" fill="rgb(243,29,54)"/><text x="1115.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.18%)</title><rect x="1123" y="404" width="2" height="15" fill="rgb(253,13,42)"/><text x="1126.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.18%)</title><rect x="1123" y="420" width="2" height="15" fill="rgb(253,59,35)"/><text x="1126.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1893) (1 samples, 0.18%)</title><rect x="1123" y="436" width="2" height="15" fill="rgb(233,63,30)"/><text x="1126.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src:1102) (1 samples, 0.18%)</title><rect x="1123" y="452" width="2" height="15" fill="rgb(219,197,44)"/><text x="1126.00" y="462.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (15 samples, 2.72%)</title><rect x="1095" y="324" width="32" height="15" fill="rgb(214,45,1)"/><text x="1098.00" y="334.50">_c..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (10 samples, 1.81%)</title><rect x="1106" y="340" width="21" height="15" fill="rgb(243,146,33)"/><text x="1109.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.45%)</title><rect x="1110" y="356" width="17" height="15" fill="rgb(237,161,11)"/><text x="1113.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.18%)</title><rect x="1125" y="372" width="2" height="15" fill="rgb(234,153,54)"/><text x="1128.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (135 samples, 24.50%)</title><rect x="840" y="180" width="290" height="15" fill="rgb(229,53,21)"/><text x="843.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_n..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (44 samples, 7.99%)</title><rect x="1035" y="196" width="95" height="15" fill="rgb(219,227,46)"/><text x="1038.00" y="206.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (40 samples, 7.26%)</title><rect x="1044" y="212" width="86" height="15" fill="rgb(254,215,4)"/><text x="1047.00" y="222.50">_run (mlpr..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (39 samples, 7.08%)</title><rect x="1046" y="228" width="84" height="15" fill="rgb(238,49,48)"/><text x="1049.00" y="238.50">clip (&lt;__..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (39 samples, 7.08%)</title><rect x="1046" y="244" width="84" height="15" fill="rgb(231,38,35)"/><text x="1049.00" y="254.50">array_imp..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (39 samples, 7.08%)</title><rect x="1046" y="260" width="84" height="15" fill="rgb(225,106,39)"/><text x="1049.00" y="270.50">clip (num..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (36 samples, 6.53%)</title><rect x="1052" y="276" width="78" height="15" fill="rgb(229,7,18)"/><text x="1055.00" y="286.50">_wrapfunc..</text></g><g><title>array_clip (methods.c:2381) (36 samples, 6.53%)</title><rect x="1052" y="292" width="78" height="15" fill="rgb(225,110,17)"/><text x="1055.00" y="302.50">array_cli..</text></g><g><title>forward_ndarray_method (methods.c:108) (36 samples, 6.53%)</title><rect x="1052" y="308" width="78" height="15" fill="rgb(225,16,32)"/><text x="1055.00" y="318.50">forward_n..</text></g><g><title>_clip (numpy/core/_methods.py:97) (1 samples, 0.18%)</title><rect x="1127" y="324" width="3" height="15" fill="rgb(220,20,6)"/><text x="1130.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 0.54%)</title><rect x="1130" y="180" width="6" height="15" fill="rgb(252,97,30)"/><text x="1133.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.18%)</title><rect x="1136" y="180" width="2" height="15" fill="rgb(221,66,0)"/><text x="1139.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 0.73%)</title><rect x="1138" y="180" width="9" height="15" fill="rgb(231,185,33)"/><text x="1141.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (160 samples, 29.04%)</title><rect x="806" y="164" width="343" height="15" fill="rgb(217,58,47)"/><text x="809.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.18%)</title><rect x="1147" y="180" width="2" height="15" fill="rgb(220,107,27)"/><text x="1150.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:45) (229 samples, 41.56%)</title><rect x="661" y="52" width="490" height="15" fill="rgb(237,213,28)"/><text x="664.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:45)</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:44) (229 samples, 41.56%)</title><rect x="661" y="68" width="490" height="15" fill="rgb(249,215,41)"/><text x="664.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.p..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:29) (224 samples, 40.65%)</title><rect x="671" y="84" width="480" height="15" fill="rgb(213,224,5)"/><text x="674.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:23) (162 samples, 29.40%)</title><rect x="804" y="100" width="347" height="15" fill="rgb(252,73,46)"/><text x="807.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (162 samples, 29.40%)</title><rect x="804" y="116" width="347" height="15" fill="rgb(226,36,47)"/><text x="807.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (162 samples, 29.40%)</title><rect x="804" y="132" width="347" height="15" fill="rgb(229,77,34)"/><text x="807.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (162 samples, 29.40%)</title><rect x="804" y="148" width="347" height="15" fill="rgb(215,211,53)"/><text x="807.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.18%)</title><rect x="1149" y="164" width="2" height="15" fill="rgb(231,5,7)"/><text x="1152.00" y="174.50"></text></g><g><title>0x7febebd6f9b7 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1149" y="180" width="2" height="15" fill="rgb(229,73,26)"/><text x="1152.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:191) (1 samples, 0.18%)</title><rect x="1151" y="196" width="2" height="15" fill="rgb(230,227,51)"/><text x="1154.00" y="206.50"></text></g><g><title>declare_local_variable (skl2onnx/common/_topology.py:337) (1 samples, 0.18%)</title><rect x="1151" y="212" width="2" height="15" fill="rgb(223,220,52)"/><text x="1154.00" y="222.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py:321) (1 samples, 0.18%)</title><rect x="1151" y="228" width="2" height="15" fill="rgb(236,225,41)"/><text x="1154.00" y="238.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:496) (1 samples, 0.18%)</title><rect x="1151" y="244" width="2" height="15" fill="rgb(221,204,53)"/><text x="1154.00" y="254.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.18%)</title><rect x="1151" y="260" width="2" height="15" fill="rgb(205,22,16)"/><text x="1154.00" y="270.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.18%)</title><rect x="1151" y="276" width="2" height="15" fill="rgb(247,134,53)"/><text x="1154.00" y="286.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:77) (1 samples, 0.18%)</title><rect x="1153" y="212" width="2" height="15" fill="rgb(207,207,43)"/><text x="1156.00" y="222.50"></text></g><g><title>get_unique_operator_name (skl2onnx/common/_topology.py:328) (1 samples, 0.18%)</title><rect x="1153" y="228" width="2" height="15" fill="rgb(213,121,28)"/><text x="1156.00" y="238.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:508) (1 samples, 0.18%)</title><rect x="1153" y="244" width="2" height="15" fill="rgb(211,131,35)"/><text x="1156.00" y="254.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (2 samples, 0.36%)</title><rect x="1153" y="196" width="4" height="15" fill="rgb(234,22,54)"/><text x="1156.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:87) (1 samples, 0.18%)</title><rect x="1155" y="212" width="2" height="15" fill="rgb(225,100,16)"/><text x="1158.00" y="222.50"></text></g><g><title>apply_sub (onnxconverter_common/onnx_ops.py:711) (1 samples, 0.18%)</title><rect x="1155" y="228" width="2" height="15" fill="rgb(223,33,4)"/><text x="1158.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py:55) (1 samples, 0.18%)</title><rect x="1155" y="244" width="2" height="15" fill="rgb(212,81,28)"/><text x="1158.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.18%)</title><rect x="1155" y="260" width="2" height="15" fill="rgb(217,224,13)"/><text x="1158.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py:364) (1 samples, 0.18%)</title><rect x="1155" y="276" width="2" height="15" fill="rgb(215,12,18)"/><text x="1158.00" y="286.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.18%)</title><rect x="1155" y="292" width="2" height="15" fill="rgb(221,74,43)"/><text x="1158.00" y="302.50"></text></g><g><title>extract (traceback.py:344) (1 samples, 0.18%)</title><rect x="1155" y="308" width="2" height="15" fill="rgb(243,89,11)"/><text x="1158.00" y="318.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:28) (4 samples, 0.73%)</title><rect x="1151" y="84" width="9" height="15" fill="rgb(221,42,16)"/><text x="1154.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (4 samples, 0.73%)</title><rect x="1151" y="100" width="9" height="15" fill="rgb(206,52,43)"/><text x="1154.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (4 samples, 0.73%)</title><rect x="1151" y="116" width="9" height="15" fill="rgb(248,145,22)"/><text x="1154.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (4 samples, 0.73%)</title><rect x="1151" y="132" width="9" height="15" fill="rgb(247,9,28)"/><text x="1154.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (4 samples, 0.73%)</title><rect x="1151" y="148" width="9" height="15" fill="rgb(217,168,33)"/><text x="1154.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (4 samples, 0.73%)</title><rect x="1151" y="164" width="9" height="15" fill="rgb(209,180,28)"/><text x="1154.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (4 samples, 0.73%)</title><rect x="1151" y="180" width="9" height="15" fill="rgb(230,137,45)"/><text x="1154.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (1 samples, 0.18%)</title><rect x="1157" y="196" width="3" height="15" fill="rgb(220,226,44)"/><text x="1160.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.18%)</title><rect x="1157" y="212" width="3" height="15" fill="rgb(246,112,52)"/><text x="1160.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.18%)</title><rect x="1157" y="228" width="3" height="15" fill="rgb(232,211,43)"/><text x="1160.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1157" y="244" width="3" height="15" fill="rgb(227,78,12)"/><text x="1160.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1157" y="260" width="3" height="15" fill="rgb(235,113,45)"/><text x="1160.00" y="270.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1157" y="276" width="3" height="15" fill="rgb(215,112,12)"/><text x="1160.00" y="286.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1157" y="292" width="3" height="15" fill="rgb(228,212,42)"/><text x="1160.00" y="302.50"></text></g><g><title>google::protobuf::Reflection::AddInt64 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1157" y="308" width="3" height="15" fill="rgb(249,113,30)"/><text x="1160.00" y="318.50"></text></g><g><title>google::protobuf::RepeatedField&lt;long&gt;::Reserve (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1157" y="324" width="3" height="15" fill="rgb(221,198,47)"/><text x="1160.00" y="334.50"></text></g><g><title>0x7febaba2dff9 (?) (1 samples, 0.18%)</title><rect x="1160" y="212" width="2" height="15" fill="rgb(210,103,29)"/><text x="1163.00" y="222.50"></text></g><g><title>0x7febaba28ef6 (?) (1 samples, 0.18%)</title><rect x="1160" y="228" width="2" height="15" fill="rgb(213,41,19)"/><text x="1163.00" y="238.50"></text></g><g><title>0x7febaba1d962 (?) (1 samples, 0.18%)</title><rect x="1160" y="244" width="2" height="15" fill="rgb(232,209,9)"/><text x="1163.00" y="254.50"></text></g><g><title>0x7febaba517a7 (?) (1 samples, 0.18%)</title><rect x="1160" y="260" width="2" height="15" fill="rgb(208,162,37)"/><text x="1163.00" y="270.50"></text></g><g><title>0x7febaba51379 (?) (1 samples, 0.18%)</title><rect x="1160" y="276" width="2" height="15" fill="rgb(212,207,9)"/><text x="1163.00" y="286.50"></text></g><g><title>0x7febabeaf8b8 (?) (1 samples, 0.18%)</title><rect x="1160" y="292" width="2" height="15" fill="rgb(247,38,15)"/><text x="1163.00" y="302.50"></text></g><g><title>0x7febabeadc7f (?) (1 samples, 0.18%)</title><rect x="1160" y="308" width="2" height="15" fill="rgb(215,197,30)"/><text x="1163.00" y="318.50"></text></g><g><title>0x7febabec099c (?) (1 samples, 0.18%)</title><rect x="1160" y="324" width="2" height="15" fill="rgb(207,197,19)"/><text x="1163.00" y="334.50"></text></g><g><title>0x7febabb083a8 (?) (1 samples, 0.18%)</title><rect x="1160" y="340" width="2" height="15" fill="rgb(206,103,45)"/><text x="1163.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1162" y="340" width="2" height="15" fill="rgb(212,127,5)"/><text x="1165.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1162" y="356" width="2" height="15" fill="rgb(238,222,29)"/><text x="1165.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1162" y="372" width="2" height="15" fill="rgb(207,207,11)"/><text x="1165.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1162" y="388" width="2" height="15" fill="rgb(250,196,26)"/><text x="1165.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="1162" y="404" width="2" height="15" fill="rgb(249,31,26)"/><text x="1165.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1162" y="420" width="2" height="15" fill="rgb(218,69,52)"/><text x="1165.00" y="430.50"></text></g><g><title>0x7febebd71028 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1162" y="436" width="2" height="15" fill="rgb(238,131,45)"/><text x="1165.00" y="446.50"></text></g><g><title>0x7febebd6ec4d (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1162" y="452" width="2" height="15" fill="rgb(237,144,27)"/><text x="1165.00" y="462.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:18) (4 samples, 0.73%)</title><rect x="1160" y="100" width="8" height="15" fill="rgb(245,63,7)"/><text x="1163.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.73%)</title><rect x="1160" y="116" width="8" height="15" fill="rgb(229,173,48)"/><text x="1163.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (4 samples, 0.73%)</title><rect x="1160" y="132" width="8" height="15" fill="rgb(231,100,12)"/><text x="1163.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (4 samples, 0.73%)</title><rect x="1160" y="148" width="8" height="15" fill="rgb(235,228,25)"/><text x="1163.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (4 samples, 0.73%)</title><rect x="1160" y="164" width="8" height="15" fill="rgb(218,99,3)"/><text x="1163.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (4 samples, 0.73%)</title><rect x="1160" y="180" width="8" height="15" fill="rgb(233,178,42)"/><text x="1163.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (4 samples, 0.73%)</title><rect x="1160" y="196" width="8" height="15" fill="rgb(253,20,21)"/><text x="1163.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="1162" y="212" width="6" height="15" fill="rgb(218,137,11)"/><text x="1165.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="1162" y="228" width="6" height="15" fill="rgb(247,2,43)"/><text x="1165.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="1162" y="244" width="6" height="15" fill="rgb(220,208,53)"/><text x="1165.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="1162" y="260" width="6" height="15" fill="rgb(216,83,36)"/><text x="1165.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="1162" y="276" width="6" height="15" fill="rgb(245,162,25)"/><text x="1165.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="1162" y="292" width="6" height="15" fill="rgb(252,218,31)"/><text x="1165.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="1162" y="308" width="6" height="15" fill="rgb(232,221,22)"/><text x="1165.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="1162" y="324" width="6" height="15" fill="rgb(254,35,20)"/><text x="1165.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="1164" y="340" width="4" height="15" fill="rgb(236,15,53)"/><text x="1167.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1166" y="356" width="2" height="15" fill="rgb(250,224,10)"/><text x="1169.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1166" y="372" width="2" height="15" fill="rgb(227,142,34)"/><text x="1169.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1166" y="388" width="2" height="15" fill="rgb(239,229,7)"/><text x="1169.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1166" y="404" width="2" height="15" fill="rgb(232,182,21)"/><text x="1169.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1166" y="420" width="2" height="15" fill="rgb(244,156,12)"/><text x="1169.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1166" y="436" width="2" height="15" fill="rgb(215,220,45)"/><text x="1169.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1166" y="452" width="2" height="15" fill="rgb(246,26,26)"/><text x="1169.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1166" y="468" width="2" height="15" fill="rgb(247,30,7)"/><text x="1169.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1166" y="484" width="2" height="15" fill="rgb(232,13,46)"/><text x="1169.00" y="494.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="1168" y="116" width="2" height="15" fill="rgb(240,68,1)"/><text x="1171.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="1168" y="132" width="2" height="15" fill="rgb(240,68,36)"/><text x="1171.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="1168" y="148" width="2" height="15" fill="rgb(245,20,41)"/><text x="1171.00" y="158.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="340" width="3" height="15" fill="rgb(237,200,5)"/><text x="1175.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="356" width="3" height="15" fill="rgb(220,195,22)"/><text x="1175.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="372" width="3" height="15" fill="rgb(241,199,53)"/><text x="1175.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="388" width="3" height="15" fill="rgb(209,141,43)"/><text x="1175.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="404" width="3" height="15" fill="rgb(209,226,52)"/><text x="1175.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="420" width="3" height="15" fill="rgb(222,35,8)"/><text x="1175.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="436" width="3" height="15" fill="rgb(206,62,26)"/><text x="1175.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="452" width="3" height="15" fill="rgb(217,47,43)"/><text x="1175.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="468" width="3" height="15" fill="rgb(254,5,39)"/><text x="1175.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1172" y="484" width="3" height="15" fill="rgb(234,23,49)"/><text x="1175.00" y="494.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1175" y="340" width="2" height="15" fill="rgb(216,154,45)"/><text x="1178.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1175" y="356" width="2" height="15" fill="rgb(225,111,1)"/><text x="1178.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1175" y="372" width="2" height="15" fill="rgb(243,3,31)"/><text x="1178.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1175" y="388" width="2" height="15" fill="rgb(234,69,26)"/><text x="1178.00" y="398.50"></text></g><g><title>0x7febebd6f982 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1177" y="388" width="2" height="15" fill="rgb(238,92,21)"/><text x="1180.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="1177" y="340" width="4" height="15" fill="rgb(229,141,4)"/><text x="1180.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="1177" y="356" width="4" height="15" fill="rgb(244,57,16)"/><text x="1180.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="1177" y="372" width="4" height="15" fill="rgb(248,174,50)"/><text x="1180.00" y="382.50"></text></g><g><title>0x7febebd6f991 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1179" y="388" width="2" height="15" fill="rgb(213,182,37)"/><text x="1182.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="1181" y="340" width="4" height="15" fill="rgb(250,216,14)"/><text x="1184.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1183" y="356" width="2" height="15" fill="rgb(228,89,10)"/><text x="1186.00" y="366.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1185" y="340" width="2" height="15" fill="rgb(211,29,5)"/><text x="1188.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1185" y="356" width="2" height="15" fill="rgb(231,47,17)"/><text x="1188.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1185" y="372" width="2" height="15" fill="rgb(213,220,3)"/><text x="1188.00" y="382.50"></text></g><g><title>all (551 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(241,1,30)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:52) (18 samples, 3.27%)</title><rect x="1151" y="52" width="39" height="15" fill="rgb(230,22,9)"/><text x="1154.00" y="62.50">&lt;mo..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:51) (18 samples, 3.27%)</title><rect x="1151" y="68" width="39" height="15" fill="rgb(230,211,2)"/><text x="1154.00" y="78.50">pro..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:29) (14 samples, 2.54%)</title><rect x="1160" y="84" width="30" height="15" fill="rgb(226,110,17)"/><text x="1163.00" y="94.50">se..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py:23) (10 samples, 1.81%)</title><rect x="1168" y="100" width="22" height="15" fill="rgb(211,118,47)"/><text x="1171.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (9 samples, 1.63%)</title><rect x="1170" y="116" width="20" height="15" fill="rgb(219,178,8)"/><text x="1173.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (9 samples, 1.63%)</title><rect x="1170" y="132" width="20" height="15" fill="rgb(240,121,26)"/><text x="1173.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (9 samples, 1.63%)</title><rect x="1170" y="148" width="20" height="15" fill="rgb(249,39,34)"/><text x="1173.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (9 samples, 1.63%)</title><rect x="1170" y="164" width="20" height="15" fill="rgb(249,26,6)"/><text x="1173.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (9 samples, 1.63%)</title><rect x="1170" y="180" width="20" height="15" fill="rgb(223,75,1)"/><text x="1173.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (9 samples, 1.63%)</title><rect x="1170" y="196" width="20" height="15" fill="rgb(210,28,44)"/><text x="1173.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.63%)</title><rect x="1170" y="212" width="20" height="15" fill="rgb(230,89,5)"/><text x="1173.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.63%)</title><rect x="1170" y="228" width="20" height="15" fill="rgb(251,21,5)"/><text x="1173.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.63%)</title><rect x="1170" y="244" width="20" height="15" fill="rgb(245,24,19)"/><text x="1173.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.63%)</title><rect x="1170" y="260" width="20" height="15" fill="rgb(253,96,42)"/><text x="1173.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.63%)</title><rect x="1170" y="276" width="20" height="15" fill="rgb(234,35,22)"/><text x="1173.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.63%)</title><rect x="1170" y="292" width="20" height="15" fill="rgb(222,178,49)"/><text x="1173.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.63%)</title><rect x="1170" y="308" width="20" height="15" fill="rgb(235,9,43)"/><text x="1173.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.63%)</title><rect x="1170" y="324" width="20" height="15" fill="rgb(244,152,32)"/><text x="1173.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1187" y="340" width="3" height="15" fill="rgb(235,45,28)"/><text x="1190.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(241,228,20)"/><text x="1190.00" y="366.50"></text></g></g></svg>