<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1926" onload="init(evt)" viewBox="0 0 1200 1926" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1926" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1909.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1909.00"> </text><g id="frames"><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.35%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(253,176,30)"/><text x="13.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.35%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(232,59,22)"/><text x="13.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.35%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(247,117,10)"/><text x="13.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.35%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(221,170,24)"/><text x="13.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.35%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(230,226,3)"/><text x="13.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.35%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(225,9,36)"/><text x="13.00" y="254.50"></text></g><g><title>0x7fa98c1d49dd (?) (1 samples, 0.35%)</title><rect x="14" y="244" width="4" height="15" fill="rgb(238,103,43)"/><text x="17.00" y="254.50"></text></g><g><title>0x7fa98c1f5265 (?) (1 samples, 0.35%)</title><rect x="14" y="260" width="4" height="15" fill="rgb(247,179,53)"/><text x="17.00" y="270.50"></text></g><g><title>0x7fa98c2fe9f0 (?) (1 samples, 0.35%)</title><rect x="14" y="276" width="4" height="15" fill="rgb(252,45,15)"/><text x="17.00" y="286.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (2 samples, 0.70%)</title><rect x="14" y="164" width="8" height="15" fill="rgb(208,215,3)"/><text x="17.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.70%)</title><rect x="14" y="180" width="8" height="15" fill="rgb(223,76,23)"/><text x="17.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.70%)</title><rect x="14" y="196" width="8" height="15" fill="rgb(240,143,40)"/><text x="17.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.70%)</title><rect x="14" y="212" width="8" height="15" fill="rgb(219,124,32)"/><text x="17.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.70%)</title><rect x="14" y="228" width="8" height="15" fill="rgb(228,37,49)"/><text x="17.00" y="238.50"></text></g><g><title>0x7fa98c1d49dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="18" y="244" width="4" height="15" fill="rgb(238,217,41)"/><text x="21.00" y="254.50"></text></g><g><title>0x7fa98c1f5265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="18" y="260" width="4" height="15" fill="rgb(241,31,48)"/><text x="21.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.35%)</title><rect x="18" y="276" width="4" height="15" fill="rgb(227,194,43)"/><text x="21.00" y="286.50"></text></g><g><title>0x7fa9a10bdc7b (libm-2.29.so) (1 samples, 0.35%)</title><rect x="18" y="292" width="4" height="15" fill="rgb(207,65,2)"/><text x="21.00" y="302.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:18) (4 samples, 1.41%)</title><rect x="10" y="100" width="16" height="15" fill="rgb(234,105,35)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 1.41%)</title><rect x="10" y="116" width="16" height="15" fill="rgb(251,85,45)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (4 samples, 1.41%)</title><rect x="10" y="132" width="16" height="15" fill="rgb(212,81,25)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (4 samples, 1.41%)</title><rect x="10" y="148" width="16" height="15" fill="rgb(229,140,24)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (1 samples, 0.35%)</title><rect x="22" y="164" width="4" height="15" fill="rgb(218,200,14)"/><text x="25.00" y="174.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.35%)</title><rect x="22" y="180" width="4" height="15" fill="rgb(212,115,19)"/><text x="25.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.35%)</title><rect x="22" y="196" width="4" height="15" fill="rgb(220,95,11)"/><text x="25.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.35%)</title><rect x="22" y="212" width="4" height="15" fill="rgb(244,174,22)"/><text x="25.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.35%)</title><rect x="22" y="228" width="4" height="15" fill="rgb(253,39,33)"/><text x="25.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.35%)</title><rect x="22" y="244" width="4" height="15" fill="rgb(208,198,50)"/><text x="25.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.35%)</title><rect x="26" y="164" width="4" height="15" fill="rgb(252,41,32)"/><text x="29.00" y="174.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.35%)</title><rect x="34" y="196" width="5" height="15" fill="rgb(226,198,8)"/><text x="37.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 1.06%)</title><rect x="30" y="180" width="13" height="15" fill="rgb(252,181,12)"/><text x="33.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.35%)</title><rect x="39" y="196" width="4" height="15" fill="rgb(229,33,6)"/><text x="42.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (5 samples, 1.76%)</title><rect x="26" y="148" width="21" height="15" fill="rgb(225,178,51)"/><text x="29.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 1.41%)</title><rect x="30" y="164" width="17" height="15" fill="rgb(242,30,8)"/><text x="33.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.35%)</title><rect x="43" y="180" width="4" height="15" fill="rgb(205,73,48)"/><text x="46.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.70%)</title><rect x="55" y="228" width="9" height="15" fill="rgb(213,39,44)"/><text x="58.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (4 samples, 1.41%)</title><rect x="51" y="180" width="17" height="15" fill="rgb(219,19,13)"/><text x="54.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 1.41%)</title><rect x="51" y="196" width="17" height="15" fill="rgb(227,225,40)"/><text x="54.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 1.41%)</title><rect x="51" y="212" width="17" height="15" fill="rgb(251,229,9)"/><text x="54.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.35%)</title><rect x="64" y="228" width="4" height="15" fill="rgb(210,72,9)"/><text x="67.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.35%)</title><rect x="68" y="196" width="4" height="15" fill="rgb(248,68,29)"/><text x="71.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.70%)</title><rect x="72" y="196" width="8" height="15" fill="rgb(235,96,30)"/><text x="75.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.35%)</title><rect x="76" y="212" width="4" height="15" fill="rgb(233,42,50)"/><text x="79.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.35%)</title><rect x="80" y="212" width="4" height="15" fill="rgb(217,145,0)"/><text x="83.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.35%)</title><rect x="84" y="228" width="4" height="15" fill="rgb(228,73,13)"/><text x="87.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 1.06%)</title><rect x="80" y="196" width="13" height="15" fill="rgb(237,154,29)"/><text x="83.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.70%)</title><rect x="84" y="212" width="9" height="15" fill="rgb(209,45,36)"/><text x="87.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.35%)</title><rect x="88" y="228" width="5" height="15" fill="rgb(229,164,44)"/><text x="91.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.35%)</title><rect x="93" y="196" width="4" height="15" fill="rgb(229,141,51)"/><text x="96.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.35%)</title><rect x="93" y="212" width="4" height="15" fill="rgb(211,71,30)"/><text x="96.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.70%)</title><rect x="105" y="212" width="8" height="15" fill="rgb(245,91,4)"/><text x="108.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.35%)</title><rect x="109" y="228" width="4" height="15" fill="rgb(227,123,46)"/><text x="112.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 1.76%)</title><rect x="97" y="196" width="21" height="15" fill="rgb(205,173,43)"/><text x="100.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.35%)</title><rect x="113" y="212" width="5" height="15" fill="rgb(208,92,14)"/><text x="116.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.35%)</title><rect x="113" y="228" width="5" height="15" fill="rgb(237,208,30)"/><text x="116.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.35%)</title><rect x="122" y="212" width="4" height="15" fill="rgb(238,191,51)"/><text x="125.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (15 samples, 5.28%)</title><rect x="68" y="180" width="62" height="15" fill="rgb(208,28,7)"/><text x="71.00" y="190.50">decisi..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 1.06%)</title><rect x="118" y="196" width="12" height="15" fill="rgb(236,46,34)"/><text x="121.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.35%)</title><rect x="126" y="212" width="4" height="15" fill="rgb(245,81,20)"/><text x="129.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.35%)</title><rect x="126" y="228" width="4" height="15" fill="rgb(233,97,52)"/><text x="129.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.35%)</title><rect x="130" y="260" width="4" height="15" fill="rgb(234,85,6)"/><text x="133.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.35%)</title><rect x="130" y="276" width="4" height="15" fill="rgb(217,3,12)"/><text x="133.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.35%)</title><rect x="130" y="292" width="4" height="15" fill="rgb(213,14,19)"/><text x="133.00" y="302.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.35%)</title><rect x="130" y="308" width="4" height="15" fill="rgb(210,35,13)"/><text x="133.00" y="318.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.35%)</title><rect x="130" y="324" width="4" height="15" fill="rgb(218,145,28)"/><text x="133.00" y="334.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:347) (1 samples, 0.35%)</title><rect x="130" y="340" width="4" height="15" fill="rgb(238,208,21)"/><text x="133.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.35%)</title><rect x="134" y="260" width="4" height="15" fill="rgb(219,41,17)"/><text x="137.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.35%)</title><rect x="134" y="276" width="4" height="15" fill="rgb(227,22,33)"/><text x="137.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.35%)</title><rect x="134" y="292" width="4" height="15" fill="rgb(237,1,39)"/><text x="137.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.35%)</title><rect x="134" y="308" width="4" height="15" fill="rgb(237,101,43)"/><text x="137.00" y="318.50"></text></g><g><title>0x7fa9a0f0bd67 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="134" y="324" width="4" height="15" fill="rgb(252,81,43)"/><text x="137.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.41%)</title><rect x="130" y="212" width="17" height="15" fill="rgb(242,10,4)"/><text x="133.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.41%)</title><rect x="130" y="228" width="17" height="15" fill="rgb(226,193,48)"/><text x="133.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.41%)</title><rect x="130" y="244" width="17" height="15" fill="rgb(226,222,32)"/><text x="133.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.70%)</title><rect x="138" y="260" width="9" height="15" fill="rgb(252,127,24)"/><text x="141.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (2 samples, 0.70%)</title><rect x="138" y="276" width="9" height="15" fill="rgb(246,32,12)"/><text x="141.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.35%)</title><rect x="142" y="292" width="5" height="15" fill="rgb(248,88,0)"/><text x="145.00" y="302.50"></text></g><g><title>array_add (number.c:330) (5 samples, 1.76%)</title><rect x="130" y="196" width="21" height="15" fill="rgb(254,177,13)"/><text x="133.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4757) (1 samples, 0.35%)</title><rect x="147" y="212" width="4" height="15" fill="rgb(236,225,49)"/><text x="150.00" y="222.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.41%)</title><rect x="151" y="212" width="16" height="15" fill="rgb(250,227,14)"/><text x="154.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.41%)</title><rect x="167" y="212" width="17" height="15" fill="rgb(215,132,18)"/><text x="170.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2689) (1 samples, 0.35%)</title><rect x="184" y="244" width="4" height="15" fill="rgb(225,201,8)"/><text x="187.00" y="254.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c:2381) (1 samples, 0.35%)</title><rect x="184" y="260" width="4" height="15" fill="rgb(220,133,25)"/><text x="187.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:296) (1 samples, 0.35%)</title><rect x="188" y="260" width="4" height="15" fill="rgb(221,77,44)"/><text x="191.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (2 samples, 0.70%)</title><rect x="188" y="244" width="8" height="15" fill="rgb(251,96,20)"/><text x="191.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.35%)</title><rect x="192" y="260" width="4" height="15" fill="rgb(252,229,35)"/><text x="195.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (1 samples, 0.35%)</title><rect x="192" y="276" width="4" height="15" fill="rgb(208,98,36)"/><text x="195.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:301) (1 samples, 0.35%)</title><rect x="192" y="292" width="4" height="15" fill="rgb(240,155,18)"/><text x="195.00" y="302.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.35%)</title><rect x="192" y="308" width="4" height="15" fill="rgb(233,50,2)"/><text x="195.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2925) (1 samples, 0.35%)</title><rect x="196" y="244" width="5" height="15" fill="rgb(241,59,22)"/><text x="199.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.35%)</title><rect x="201" y="244" width="4" height="15" fill="rgb(245,139,52)"/><text x="204.00" y="254.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="209" y="292" width="4" height="15" fill="rgb(246,117,52)"/><text x="212.00" y="302.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (16 samples, 5.63%)</title><rect x="151" y="196" width="66" height="15" fill="rgb(253,209,48)"/><text x="154.00" y="206.50">safe_sp..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 2.82%)</title><rect x="184" y="212" width="33" height="15" fill="rgb(222,3,45)"/><text x="187.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (8 samples, 2.82%)</title><rect x="184" y="228" width="33" height="15" fill="rgb(228,119,13)"/><text x="187.00" y="238.50">Py..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (3 samples, 1.06%)</title><rect x="205" y="244" width="12" height="15" fill="rgb(220,6,0)"/><text x="208.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (3 samples, 1.06%)</title><rect x="205" y="260" width="12" height="15" fill="rgb(250,156,7)"/><text x="208.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.06%)</title><rect x="205" y="276" width="12" height="15" fill="rgb(230,222,19)"/><text x="208.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="213" y="292" width="4" height="15" fill="rgb(226,163,0)"/><text x="216.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="213" y="308" width="4" height="15" fill="rgb(234,144,27)"/><text x="216.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (41 samples, 14.44%)</title><rect x="51" y="164" width="170" height="15" fill="rgb(222,90,19)"/><text x="54.00" y="174.50">_predict_proba_lr (skl..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (22 samples, 7.75%)</title><rect x="130" y="180" width="91" height="15" fill="rgb(229,150,52)"/><text x="133.00" y="190.50">decision_f..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.35%)</title><rect x="217" y="196" width="4" height="15" fill="rgb(246,222,15)"/><text x="220.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.35%)</title><rect x="217" y="212" width="4" height="15" fill="rgb(248,53,45)"/><text x="220.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.35%)</title><rect x="226" y="196" width="4" height="15" fill="rgb(238,127,48)"/><text x="229.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.35%)</title><rect x="226" y="212" width="4" height="15" fill="rgb(211,124,23)"/><text x="229.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.35%)</title><rect x="230" y="212" width="4" height="15" fill="rgb(210,226,31)"/><text x="233.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.35%)</title><rect x="230" y="228" width="4" height="15" fill="rgb(205,28,43)"/><text x="233.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.35%)</title><rect x="230" y="244" width="4" height="15" fill="rgb(209,96,34)"/><text x="233.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.35%)</title><rect x="230" y="260" width="4" height="15" fill="rgb(205,121,14)"/><text x="233.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:382) (1 samples, 0.35%)</title><rect x="230" y="276" width="4" height="15" fill="rgb(209,87,1)"/><text x="233.00" y="286.50"></text></g><g><title>gt_128 (npy_extint128.h:222) (1 samples, 0.35%)</title><rect x="230" y="292" width="4" height="15" fill="rgb(253,130,34)"/><text x="233.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1662) (1 samples, 0.35%)</title><rect x="234" y="212" width="4" height="15" fill="rgb(222,4,24)"/><text x="237.00" y="222.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c:1458) (1 samples, 0.35%)</title><rect x="234" y="228" width="4" height="15" fill="rgb(233,61,5)"/><text x="237.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1341) (1 samples, 0.35%)</title><rect x="238" y="228" width="4" height="15" fill="rgb(217,155,26)"/><text x="241.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.35%)</title><rect x="238" y="244" width="4" height="15" fill="rgb(251,10,50)"/><text x="241.00" y="254.50"></text></g><g><title>0x7fa98c1d49da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="242" y="244" width="4" height="15" fill="rgb(210,35,47)"/><text x="245.00" y="254.50"></text></g><g><title>0x7fa98c1f5254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.06%)</title><rect x="246" y="260" width="13" height="15" fill="rgb(243,223,2)"/><text x="249.00" y="270.50"></text></g><g><title>0x7fa98c1b2fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="267" y="276" width="4" height="15" fill="rgb(220,162,19)"/><text x="270.00" y="286.50"></text></g><g><title>0x7fa9a10bdbb4 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="284" y="292" width="4" height="15" fill="rgb(223,103,31)"/><text x="287.00" y="302.50"></text></g><g><title>0x7fa9a10bdbf9 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="288" y="292" width="4" height="15" fill="rgb(211,37,17)"/><text x="291.00" y="302.50"></text></g><g><title>0x7fa9a10bdc07 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="292" y="292" width="4" height="15" fill="rgb(219,91,45)"/><text x="295.00" y="302.50"></text></g><g><title>0x7fa9a10bdc18 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="296" y="292" width="4" height="15" fill="rgb(206,117,39)"/><text x="299.00" y="302.50"></text></g><g><title>0x7fa9a10bdc2e (libm-2.29.so) (1 samples, 0.35%)</title><rect x="300" y="292" width="5" height="15" fill="rgb(249,9,42)"/><text x="303.00" y="302.50"></text></g><g><title>0x7fa98c1f5265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 5.28%)</title><rect x="259" y="260" width="62" height="15" fill="rgb(250,112,8)"/><text x="262.00" y="270.50">0x7fa9..</text></g><g><title>exp (libm-2.29.so) (12 samples, 4.23%)</title><rect x="271" y="276" width="50" height="15" fill="rgb(213,148,40)"/><text x="274.00" y="286.50">exp (..</text></g><g><title>0x7fa9a10bdc6a (libm-2.29.so) (4 samples, 1.41%)</title><rect x="305" y="292" width="16" height="15" fill="rgb(232,118,54)"/><text x="308.00" y="302.50"></text></g><g><title>0x7fa98c1d49dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (27 samples, 9.51%)</title><rect x="246" y="244" width="113" height="15" fill="rgb(210,56,2)"/><text x="249.00" y="254.50">0x7fa98c1d49d..</text></g><g><title>0x7fa98c1f5279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 3.17%)</title><rect x="321" y="260" width="38" height="15" fill="rgb(253,47,36)"/><text x="324.00" y="270.50">0x7..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (33 samples, 11.62%)</title><rect x="226" y="180" width="137" height="15" fill="rgb(221,166,52)"/><text x="229.00" y="190.50">ufunc_generic_cal..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (32 samples, 11.27%)</title><rect x="230" y="196" width="133" height="15" fill="rgb(229,150,28)"/><text x="233.00" y="206.50">PyUFunc_GenericF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (30 samples, 10.56%)</title><rect x="238" y="212" width="125" height="15" fill="rgb(231,75,10)"/><text x="241.00" y="222.50">execute_legacy_..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (29 samples, 10.21%)</title><rect x="242" y="228" width="121" height="15" fill="rgb(227,127,37)"/><text x="245.00" y="238.50">trivial_two_ope..</text></g><g><title>0x7fa98c1d49e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="359" y="244" width="4" height="15" fill="rgb(251,18,24)"/><text x="362.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (35 samples, 12.32%)</title><rect x="221" y="164" width="146" height="15" fill="rgb(214,16,41)"/><text x="224.00" y="174.50">_predict_proba_lr ..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.35%)</title><rect x="363" y="180" width="4" height="15" fill="rgb(237,43,43)"/><text x="366.00" y="190.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.35%)</title><rect x="363" y="196" width="4" height="15" fill="rgb(246,35,27)"/><text x="366.00" y="206.50"></text></g><g><title>0x7fa9a0f0c173 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="375" y="228" width="4" height="15" fill="rgb(242,175,38)"/><text x="378.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.35%)</title><rect x="379" y="228" width="4" height="15" fill="rgb(215,197,32)"/><text x="382.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.35%)</title><rect x="379" y="244" width="4" height="15" fill="rgb(210,128,7)"/><text x="382.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.35%)</title><rect x="379" y="260" width="4" height="15" fill="rgb(236,79,0)"/><text x="382.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.35%)</title><rect x="379" y="276" width="4" height="15" fill="rgb(230,32,11)"/><text x="382.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.35%)</title><rect x="379" y="292" width="4" height="15" fill="rgb(205,63,20)"/><text x="382.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.35%)</title><rect x="379" y="308" width="4" height="15" fill="rgb(251,153,3)"/><text x="382.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3619) (1 samples, 0.35%)</title><rect x="383" y="260" width="5" height="15" fill="rgb(219,67,2)"/><text x="386.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.35%)</title><rect x="388" y="276" width="4" height="15" fill="rgb(243,83,9)"/><text x="391.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.35%)</title><rect x="388" y="292" width="4" height="15" fill="rgb(236,166,46)"/><text x="391.00" y="302.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.35%)</title><rect x="388" y="308" width="4" height="15" fill="rgb(250,11,16)"/><text x="391.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.35%)</title><rect x="392" y="292" width="4" height="15" fill="rgb(238,34,50)"/><text x="395.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.35%)</title><rect x="396" y="292" width="4" height="15" fill="rgb(217,191,0)"/><text x="399.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.35%)</title><rect x="404" y="308" width="4" height="15" fill="rgb(248,229,13)"/><text x="407.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.70%)</title><rect x="413" y="324" width="8" height="15" fill="rgb(223,44,30)"/><text x="416.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 1.41%)</title><rect x="408" y="308" width="17" height="15" fill="rgb(249,93,22)"/><text x="411.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.35%)</title><rect x="421" y="324" width="4" height="15" fill="rgb(243,198,29)"/><text x="424.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (2 samples, 0.70%)</title><rect x="425" y="308" width="8" height="15" fill="rgb(236,71,44)"/><text x="428.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (15 samples, 5.28%)</title><rect x="375" y="180" width="62" height="15" fill="rgb(232,186,0)"/><text x="378.00" y="190.50">array_..</text></g><g><title>forward_ndarray_method (methods.c:108) (15 samples, 5.28%)</title><rect x="375" y="196" width="62" height="15" fill="rgb(222,209,20)"/><text x="378.00" y="206.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py:38) (15 samples, 5.28%)</title><rect x="375" y="212" width="62" height="15" fill="rgb(213,34,35)"/><text x="378.00" y="222.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 4.58%)</title><rect x="383" y="228" width="54" height="15" fill="rgb(240,214,11)"/><text x="386.00" y="238.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (13 samples, 4.58%)</title><rect x="383" y="244" width="54" height="15" fill="rgb(219,203,53)"/><text x="386.00" y="254.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (12 samples, 4.23%)</title><rect x="388" y="260" width="49" height="15" fill="rgb(230,171,35)"/><text x="391.00" y="270.50">PyUF..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (11 samples, 3.87%)</title><rect x="392" y="276" width="45" height="15" fill="rgb(227,191,1)"/><text x="395.00" y="286.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (9 samples, 3.17%)</title><rect x="400" y="292" width="37" height="15" fill="rgb(231,213,53)"/><text x="403.00" y="302.50">red..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.35%)</title><rect x="433" y="308" width="4" height="15" fill="rgb(249,138,11)"/><text x="436.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.35%)</title><rect x="442" y="276" width="4" height="15" fill="rgb(206,125,4)"/><text x="445.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.70%)</title><rect x="446" y="292" width="8" height="15" fill="rgb(240,120,21)"/><text x="449.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 1.76%)</title><rect x="437" y="228" width="21" height="15" fill="rgb(206,94,40)"/><text x="440.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 1.76%)</title><rect x="437" y="244" width="21" height="15" fill="rgb(214,80,33)"/><text x="440.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 1.76%)</title><rect x="437" y="260" width="21" height="15" fill="rgb(222,37,2)"/><text x="440.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 1.06%)</title><rect x="446" y="276" width="12" height="15" fill="rgb(208,190,27)"/><text x="449.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.35%)</title><rect x="454" y="292" width="4" height="15" fill="rgb(214,54,5)"/><text x="457.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.35%)</title><rect x="458" y="228" width="4" height="15" fill="rgb(252,216,14)"/><text x="461.00" y="238.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:371) (1 samples, 0.35%)</title><rect x="458" y="244" width="4" height="15" fill="rgb(231,223,24)"/><text x="461.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (27 samples, 9.51%)</title><rect x="367" y="164" width="112" height="15" fill="rgb(238,228,39)"/><text x="370.00" y="174.50">_predict_prob..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 3.52%)</title><rect x="437" y="180" width="42" height="15" fill="rgb(219,171,52)"/><text x="440.00" y="190.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 3.52%)</title><rect x="437" y="196" width="42" height="15" fill="rgb(250,58,24)"/><text x="440.00" y="206.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 3.52%)</title><rect x="437" y="212" width="42" height="15" fill="rgb(223,205,12)"/><text x="440.00" y="222.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 1.41%)</title><rect x="462" y="228" width="17" height="15" fill="rgb(228,31,19)"/><text x="465.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (4 samples, 1.41%)</title><rect x="462" y="244" width="17" height="15" fill="rgb(217,130,10)"/><text x="465.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (4 samples, 1.41%)</title><rect x="462" y="260" width="17" height="15" fill="rgb(223,54,27)"/><text x="465.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (4 samples, 1.41%)</title><rect x="462" y="276" width="17" height="15" fill="rgb(230,92,49)"/><text x="465.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (4 samples, 1.41%)</title><rect x="462" y="292" width="17" height="15" fill="rgb(230,179,53)"/><text x="465.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:38) (114 samples, 40.14%)</title><rect x="10" y="52" width="473" height="15" fill="rgb(239,153,54)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinea..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:37) (114 samples, 40.14%)</title><rect x="10" y="68" width="473" height="15" fill="rgb(220,136,38)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverlibli..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:29) (114 samples, 40.14%)</title><rect x="10" y="84" width="473" height="15" fill="rgb(208,91,0)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverlib..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:23) (110 samples, 38.73%)</title><rect x="26" y="100" width="457" height="15" fill="rgb(221,101,43)"/><text x="29.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverlibline..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (110 samples, 38.73%)</title><rect x="26" y="116" width="457" height="15" fill="rgb(246,135,15)"/><text x="29.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (110 samples, 38.73%)</title><rect x="26" y="132" width="457" height="15" fill="rgb(208,179,46)"/><text x="29.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (105 samples, 36.97%)</title><rect x="47" y="148" width="436" height="15" fill="rgb(240,67,35)"/><text x="50.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:314) (1 samples, 0.35%)</title><rect x="479" y="164" width="4" height="15" fill="rgb(251,136,26)"/><text x="482.00" y="174.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:24) (1 samples, 0.35%)</title><rect x="483" y="372" width="4" height="15" fill="rgb(215,109,14)"/><text x="486.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="483" y="388" width="4" height="15" fill="rgb(251,92,33)"/><text x="486.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="483" y="404" width="4" height="15" fill="rgb(218,190,44)"/><text x="486.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="483" y="420" width="4" height="15" fill="rgb(234,84,21)"/><text x="486.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="483" y="436" width="4" height="15" fill="rgb(244,134,16)"/><text x="486.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="483" y="452" width="4" height="15" fill="rgb(254,34,31)"/><text x="486.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py:14) (1 samples, 0.35%)</title><rect x="483" y="468" width="4" height="15" fill="rgb(225,102,17)"/><text x="486.00" y="478.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="483" y="484" width="4" height="15" fill="rgb(207,150,46)"/><text x="486.00" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="483" y="500" width="4" height="15" fill="rgb(244,113,44)"/><text x="486.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="483" y="516" width="4" height="15" fill="rgb(222,8,32)"/><text x="486.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="483" y="532" width="4" height="15" fill="rgb(214,18,24)"/><text x="486.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.35%)</title><rect x="483" y="548" width="4" height="15" fill="rgb(224,187,11)"/><text x="486.00" y="558.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.35%)</title><rect x="483" y="564" width="4" height="15" fill="rgb(219,201,33)"/><text x="486.00" y="574.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:554) (1 samples, 0.35%)</title><rect x="483" y="580" width="4" height="15" fill="rgb(254,215,17)"/><text x="486.00" y="590.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (2 samples, 0.70%)</title><rect x="483" y="244" width="8" height="15" fill="rgb(248,87,50)"/><text x="486.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.70%)</title><rect x="483" y="260" width="8" height="15" fill="rgb(214,117,13)"/><text x="486.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="483" y="276" width="8" height="15" fill="rgb(220,66,49)"/><text x="486.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="483" y="292" width="8" height="15" fill="rgb(235,172,54)"/><text x="486.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="483" y="308" width="8" height="15" fill="rgb(249,11,5)"/><text x="486.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="483" y="324" width="8" height="15" fill="rgb(230,176,17)"/><text x="486.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="483" y="340" width="8" height="15" fill="rgb(219,110,44)"/><text x="486.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="483" y="356" width="8" height="15" fill="rgb(207,0,36)"/><text x="486.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:50) (1 samples, 0.35%)</title><rect x="487" y="372" width="4" height="15" fill="rgb(247,128,4)"/><text x="490.00" y="382.50"></text></g><g><title>__init__ (numpy/_pytesttester.py:73) (1 samples, 0.35%)</title><rect x="487" y="388" width="4" height="15" fill="rgb(227,26,41)"/><text x="490.00" y="398.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:1) (3 samples, 1.06%)</title><rect x="483" y="148" width="13" height="15" fill="rgb(222,119,19)"/><text x="486.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.06%)</title><rect x="483" y="164" width="13" height="15" fill="rgb(236,59,53)"/><text x="486.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.06%)</title><rect x="483" y="180" width="13" height="15" fill="rgb(254,47,29)"/><text x="486.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.06%)</title><rect x="483" y="196" width="13" height="15" fill="rgb(210,220,29)"/><text x="486.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.06%)</title><rect x="483" y="212" width="13" height="15" fill="rgb(225,164,24)"/><text x="486.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.06%)</title><rect x="483" y="228" width="13" height="15" fill="rgb(225,171,44)"/><text x="486.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.35%)</title><rect x="491" y="244" width="5" height="15" fill="rgb(221,106,10)"/><text x="494.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="491" y="260" width="5" height="15" fill="rgb(208,0,13)"/><text x="494.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="491" y="276" width="5" height="15" fill="rgb(238,46,20)"/><text x="494.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="491" y="292" width="5" height="15" fill="rgb(214,219,8)"/><text x="494.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="491" y="308" width="5" height="15" fill="rgb(242,186,17)"/><text x="494.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="491" y="324" width="5" height="15" fill="rgb(233,126,0)"/><text x="494.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.35%)</title><rect x="491" y="340" width="5" height="15" fill="rgb(241,211,4)"/><text x="494.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="491" y="356" width="5" height="15" fill="rgb(226,29,43)"/><text x="494.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="491" y="372" width="5" height="15" fill="rgb(209,22,30)"/><text x="494.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="491" y="388" width="5" height="15" fill="rgb(253,154,1)"/><text x="494.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="491" y="404" width="5" height="15" fill="rgb(247,180,4)"/><text x="494.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="491" y="420" width="5" height="15" fill="rgb(211,152,36)"/><text x="494.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:64) (1 samples, 0.35%)</title><rect x="491" y="436" width="5" height="15" fill="rgb(251,220,41)"/><text x="494.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="491" y="452" width="5" height="15" fill="rgb(249,75,22)"/><text x="494.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="491" y="468" width="5" height="15" fill="rgb(205,23,25)"/><text x="494.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="491" y="484" width="5" height="15" fill="rgb(208,40,16)"/><text x="494.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="491" y="500" width="5" height="15" fill="rgb(230,64,42)"/><text x="494.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="491" y="516" width="5" height="15" fill="rgb(217,97,36)"/><text x="494.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/main.py:7) (1 samples, 0.35%)</title><rect x="491" y="532" width="5" height="15" fill="rgb(240,186,32)"/><text x="494.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="491" y="548" width="5" height="15" fill="rgb(244,27,2)"/><text x="494.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="491" y="564" width="5" height="15" fill="rgb(230,67,26)"/><text x="494.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="491" y="580" width="5" height="15" fill="rgb(205,1,50)"/><text x="494.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="491" y="596" width="5" height="15" fill="rgb(210,178,34)"/><text x="494.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="491" y="612" width="5" height="15" fill="rgb(242,100,6)"/><text x="494.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="491" y="628" width="5" height="15" fill="rgb(227,180,7)"/><text x="494.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="491" y="644" width="5" height="15" fill="rgb(243,110,17)"/><text x="494.00" y="654.50"></text></g><g><title>&lt;module&gt; (unittest/runner.py:8) (1 samples, 0.35%)</title><rect x="491" y="660" width="5" height="15" fill="rgb(239,68,49)"/><text x="494.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="491" y="676" width="5" height="15" fill="rgb(218,209,11)"/><text x="494.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.35%)</title><rect x="491" y="692" width="5" height="15" fill="rgb(205,154,36)"/><text x="494.00" y="702.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.35%)</title><rect x="491" y="708" width="5" height="15" fill="rgb(232,154,40)"/><text x="494.00" y="718.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.35%)</title><rect x="491" y="724" width="5" height="15" fill="rgb(234,129,39)"/><text x="494.00" y="734.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.35%)</title><rect x="491" y="740" width="5" height="15" fill="rgb(235,7,19)"/><text x="494.00" y="750.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1394) (1 samples, 0.35%)</title><rect x="491" y="756" width="5" height="15" fill="rgb(220,228,15)"/><text x="494.00" y="766.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.35%)</title><rect x="491" y="772" width="5" height="15" fill="rgb(207,228,50)"/><text x="494.00" y="782.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.35%)</title><rect x="491" y="788" width="5" height="15" fill="rgb(252,187,41)"/><text x="494.00" y="798.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.35%)</title><rect x="491" y="804" width="5" height="15" fill="rgb(234,172,11)"/><text x="494.00" y="814.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.35%)</title><rect x="491" y="820" width="5" height="15" fill="rgb(224,77,19)"/><text x="494.00" y="830.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.35%)</title><rect x="491" y="836" width="5" height="15" fill="rgb(237,89,2)"/><text x="494.00" y="846.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.35%)</title><rect x="496" y="948" width="4" height="15" fill="rgb(245,215,36)"/><text x="499.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:66) (1 samples, 0.35%)</title><rect x="496" y="964" width="4" height="15" fill="rgb(239,26,51)"/><text x="499.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.70%)</title><rect x="496" y="852" width="8" height="15" fill="rgb(208,218,52)"/><text x="499.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.70%)</title><rect x="496" y="868" width="8" height="15" fill="rgb(215,91,46)"/><text x="499.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.70%)</title><rect x="496" y="884" width="8" height="15" fill="rgb(228,134,26)"/><text x="499.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.70%)</title><rect x="496" y="900" width="8" height="15" fill="rgb(241,136,28)"/><text x="499.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.70%)</title><rect x="496" y="916" width="8" height="15" fill="rgb(208,182,54)"/><text x="499.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.70%)</title><rect x="496" y="932" width="8" height="15" fill="rgb(219,86,20)"/><text x="499.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.35%)</title><rect x="500" y="948" width="4" height="15" fill="rgb(235,107,16)"/><text x="503.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.35%)</title><rect x="500" y="964" width="4" height="15" fill="rgb(219,47,48)"/><text x="503.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.35%)</title><rect x="500" y="980" width="4" height="15" fill="rgb(214,64,33)"/><text x="503.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.35%)</title><rect x="500" y="996" width="4" height="15" fill="rgb(218,229,41)"/><text x="503.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.35%)</title><rect x="500" y="1012" width="4" height="15" fill="rgb(244,184,6)"/><text x="503.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:125) (1 samples, 0.35%)</title><rect x="500" y="1028" width="4" height="15" fill="rgb(235,151,25)"/><text x="503.00" y="1038.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.35%)</title><rect x="504" y="852" width="4" height="15" fill="rgb(242,203,8)"/><text x="507.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.35%)</title><rect x="504" y="868" width="4" height="15" fill="rgb(250,116,41)"/><text x="507.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.35%)</title><rect x="504" y="884" width="4" height="15" fill="rgb(250,50,36)"/><text x="507.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.35%)</title><rect x="504" y="900" width="4" height="15" fill="rgb(228,80,16)"/><text x="507.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.35%)</title><rect x="504" y="916" width="4" height="15" fill="rgb(236,213,17)"/><text x="507.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.35%)</title><rect x="504" y="932" width="4" height="15" fill="rgb(243,22,21)"/><text x="507.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.35%)</title><rect x="504" y="948" width="4" height="15" fill="rgb(250,129,24)"/><text x="507.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.35%)</title><rect x="504" y="964" width="4" height="15" fill="rgb(239,148,24)"/><text x="507.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.35%)</title><rect x="504" y="980" width="4" height="15" fill="rgb(232,72,29)"/><text x="507.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.35%)</title><rect x="504" y="996" width="4" height="15" fill="rgb(221,45,20)"/><text x="507.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:2) (4 samples, 1.41%)</title><rect x="496" y="148" width="16" height="15" fill="rgb(246,115,48)"/><text x="499.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.41%)</title><rect x="496" y="164" width="16" height="15" fill="rgb(228,57,39)"/><text x="499.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.41%)</title><rect x="496" y="180" width="16" height="15" fill="rgb(229,160,5)"/><text x="499.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.41%)</title><rect x="496" y="196" width="16" height="15" fill="rgb(219,224,2)"/><text x="499.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.41%)</title><rect x="496" y="212" width="16" height="15" fill="rgb(253,63,11)"/><text x="499.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.41%)</title><rect x="496" y="228" width="16" height="15" fill="rgb(251,37,11)"/><text x="499.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.41%)</title><rect x="496" y="244" width="16" height="15" fill="rgb(217,57,41)"/><text x="499.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.41%)</title><rect x="496" y="260" width="16" height="15" fill="rgb(221,139,47)"/><text x="499.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.41%)</title><rect x="496" y="276" width="16" height="15" fill="rgb(209,196,41)"/><text x="499.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.41%)</title><rect x="496" y="292" width="16" height="15" fill="rgb(206,169,44)"/><text x="499.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.41%)</title><rect x="496" y="308" width="16" height="15" fill="rgb(246,225,24)"/><text x="499.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.41%)</title><rect x="496" y="324" width="16" height="15" fill="rgb(210,113,18)"/><text x="499.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.41%)</title><rect x="496" y="340" width="16" height="15" fill="rgb(215,169,53)"/><text x="499.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.41%)</title><rect x="496" y="356" width="16" height="15" fill="rgb(208,229,54)"/><text x="499.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.41%)</title><rect x="496" y="372" width="16" height="15" fill="rgb(235,127,25)"/><text x="499.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.41%)</title><rect x="496" y="388" width="16" height="15" fill="rgb(227,38,21)"/><text x="499.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.41%)</title><rect x="496" y="404" width="16" height="15" fill="rgb(221,84,11)"/><text x="499.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.41%)</title><rect x="496" y="420" width="16" height="15" fill="rgb(246,99,0)"/><text x="499.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.41%)</title><rect x="496" y="436" width="16" height="15" fill="rgb(253,98,1)"/><text x="499.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.41%)</title><rect x="496" y="452" width="16" height="15" fill="rgb(243,142,23)"/><text x="499.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.41%)</title><rect x="496" y="468" width="16" height="15" fill="rgb(228,198,36)"/><text x="499.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.41%)</title><rect x="496" y="484" width="16" height="15" fill="rgb(221,8,41)"/><text x="499.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.41%)</title><rect x="496" y="500" width="16" height="15" fill="rgb(251,94,6)"/><text x="499.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.41%)</title><rect x="496" y="516" width="16" height="15" fill="rgb(234,203,11)"/><text x="499.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.41%)</title><rect x="496" y="532" width="16" height="15" fill="rgb(244,100,39)"/><text x="499.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.41%)</title><rect x="496" y="548" width="16" height="15" fill="rgb(254,183,7)"/><text x="499.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.41%)</title><rect x="496" y="564" width="16" height="15" fill="rgb(247,12,35)"/><text x="499.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.41%)</title><rect x="496" y="580" width="16" height="15" fill="rgb(211,193,5)"/><text x="499.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.41%)</title><rect x="496" y="596" width="16" height="15" fill="rgb(212,34,31)"/><text x="499.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.41%)</title><rect x="496" y="612" width="16" height="15" fill="rgb(221,70,45)"/><text x="499.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.41%)</title><rect x="496" y="628" width="16" height="15" fill="rgb(231,178,14)"/><text x="499.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.41%)</title><rect x="496" y="644" width="16" height="15" fill="rgb(243,23,45)"/><text x="499.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.41%)</title><rect x="496" y="660" width="16" height="15" fill="rgb(223,145,24)"/><text x="499.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.41%)</title><rect x="496" y="676" width="16" height="15" fill="rgb(213,204,54)"/><text x="499.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.41%)</title><rect x="496" y="692" width="16" height="15" fill="rgb(253,13,46)"/><text x="499.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.41%)</title><rect x="496" y="708" width="16" height="15" fill="rgb(230,142,29)"/><text x="499.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.41%)</title><rect x="496" y="724" width="16" height="15" fill="rgb(253,209,29)"/><text x="499.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.41%)</title><rect x="496" y="740" width="16" height="15" fill="rgb(212,33,45)"/><text x="499.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.41%)</title><rect x="496" y="756" width="16" height="15" fill="rgb(205,227,20)"/><text x="499.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.41%)</title><rect x="496" y="772" width="16" height="15" fill="rgb(227,189,9)"/><text x="499.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.41%)</title><rect x="496" y="788" width="16" height="15" fill="rgb(217,181,54)"/><text x="499.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.41%)</title><rect x="496" y="804" width="16" height="15" fill="rgb(206,182,38)"/><text x="499.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 1.41%)</title><rect x="496" y="820" width="16" height="15" fill="rgb(248,191,37)"/><text x="499.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 1.41%)</title><rect x="496" y="836" width="16" height="15" fill="rgb(221,66,18)"/><text x="499.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.35%)</title><rect x="508" y="852" width="4" height="15" fill="rgb(216,27,18)"/><text x="511.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.35%)</title><rect x="508" y="868" width="4" height="15" fill="rgb(230,78,22)"/><text x="511.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.35%)</title><rect x="508" y="884" width="4" height="15" fill="rgb(234,140,23)"/><text x="511.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.35%)</title><rect x="508" y="900" width="4" height="15" fill="rgb(240,71,7)"/><text x="511.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.35%)</title><rect x="508" y="916" width="4" height="15" fill="rgb(236,86,14)"/><text x="511.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.35%)</title><rect x="508" y="932" width="4" height="15" fill="rgb(230,167,53)"/><text x="511.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.35%)</title><rect x="508" y="948" width="4" height="15" fill="rgb(213,97,3)"/><text x="511.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.35%)</title><rect x="508" y="964" width="4" height="15" fill="rgb(251,29,32)"/><text x="511.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:371) (1 samples, 0.35%)</title><rect x="508" y="980" width="4" height="15" fill="rgb(236,32,53)"/><text x="511.00" y="990.50"></text></g><g><title>__neg__ (pkg_resources/_vendor/packaging/_structures.py:33) (1 samples, 0.35%)</title><rect x="508" y="996" width="4" height="15" fill="rgb(215,221,27)"/><text x="511.00" y="1006.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:113) (1 samples, 0.35%)</title><rect x="512" y="772" width="4" height="15" fill="rgb(240,89,12)"/><text x="515.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="512" y="788" width="4" height="15" fill="rgb(214,156,10)"/><text x="515.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="512" y="804" width="4" height="15" fill="rgb(230,34,44)"/><text x="515.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="512" y="820" width="4" height="15" fill="rgb(238,104,38)"/><text x="515.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="512" y="836" width="4" height="15" fill="rgb(241,117,35)"/><text x="515.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="512" y="852" width="4" height="15" fill="rgb(217,23,6)"/><text x="515.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="512" y="868" width="4" height="15" fill="rgb(234,60,24)"/><text x="515.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="512" y="884" width="4" height="15" fill="rgb(222,89,1)"/><text x="515.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/packages.py:11) (1 samples, 0.35%)</title><rect x="512" y="900" width="4" height="15" fill="rgb(253,83,51)"/><text x="515.00" y="910.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.35%)</title><rect x="512" y="916" width="4" height="15" fill="rgb(205,41,16)"/><text x="515.00" y="926.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.35%)</title><rect x="516" y="772" width="5" height="15" fill="rgb(228,15,51)"/><text x="519.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="516" y="788" width="5" height="15" fill="rgb(225,21,21)"/><text x="519.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="516" y="804" width="5" height="15" fill="rgb(214,93,5)"/><text x="519.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="516" y="820" width="5" height="15" fill="rgb(232,23,39)"/><text x="519.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="516" y="836" width="5" height="15" fill="rgb(245,228,15)"/><text x="519.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="516" y="852" width="5" height="15" fill="rgb(223,76,24)"/><text x="519.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.35%)</title><rect x="516" y="868" width="5" height="15" fill="rgb(207,13,47)"/><text x="519.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="516" y="884" width="5" height="15" fill="rgb(238,24,24)"/><text x="519.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="516" y="900" width="5" height="15" fill="rgb(225,24,25)"/><text x="519.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="516" y="916" width="5" height="15" fill="rgb(239,115,6)"/><text x="519.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="516" y="932" width="5" height="15" fill="rgb(245,41,30)"/><text x="519.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="516" y="948" width="5" height="15" fill="rgb(212,152,23)"/><text x="519.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.35%)</title><rect x="516" y="964" width="5" height="15" fill="rgb(221,67,42)"/><text x="519.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="516" y="980" width="5" height="15" fill="rgb(231,35,29)"/><text x="519.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="516" y="996" width="5" height="15" fill="rgb(207,9,0)"/><text x="519.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="516" y="1012" width="5" height="15" fill="rgb(207,120,30)"/><text x="519.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="516" y="1028" width="5" height="15" fill="rgb(233,189,4)"/><text x="519.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="516" y="1044" width="5" height="15" fill="rgb(210,186,34)"/><text x="519.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.35%)</title><rect x="516" y="1060" width="5" height="15" fill="rgb(251,127,50)"/><text x="519.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="516" y="1076" width="5" height="15" fill="rgb(240,216,1)"/><text x="519.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.35%)</title><rect x="516" y="1092" width="5" height="15" fill="rgb(214,163,26)"/><text x="519.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="516" y="1108" width="5" height="15" fill="rgb(207,222,7)"/><text x="519.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="516" y="1124" width="5" height="15" fill="rgb(228,95,18)"/><text x="519.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="516" y="1140" width="5" height="15" fill="rgb(228,191,40)"/><text x="519.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="516" y="1156" width="5" height="15" fill="rgb(207,152,9)"/><text x="519.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="516" y="1172" width="5" height="15" fill="rgb(205,155,36)"/><text x="519.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="516" y="1188" width="5" height="15" fill="rgb(209,58,38)"/><text x="519.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.35%)</title><rect x="516" y="1204" width="5" height="15" fill="rgb(254,42,46)"/><text x="519.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="516" y="1220" width="5" height="15" fill="rgb(234,127,12)"/><text x="519.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="516" y="1236" width="5" height="15" fill="rgb(254,218,17)"/><text x="519.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="516" y="1252" width="5" height="15" fill="rgb(211,65,13)"/><text x="519.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="516" y="1268" width="5" height="15" fill="rgb(218,64,22)"/><text x="519.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="516" y="1284" width="5" height="15" fill="rgb(210,46,51)"/><text x="519.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.35%)</title><rect x="516" y="1300" width="5" height="15" fill="rgb(207,1,21)"/><text x="519.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="516" y="1316" width="5" height="15" fill="rgb(222,47,19)"/><text x="519.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="516" y="1332" width="5" height="15" fill="rgb(214,26,1)"/><text x="519.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="516" y="1348" width="5" height="15" fill="rgb(246,196,28)"/><text x="519.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="516" y="1364" width="5" height="15" fill="rgb(231,133,33)"/><text x="519.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="516" y="1380" width="5" height="15" fill="rgb(224,97,47)"/><text x="519.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:63) (1 samples, 0.35%)</title><rect x="516" y="1396" width="5" height="15" fill="rgb(242,96,37)"/><text x="519.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.35%)</title><rect x="516" y="1412" width="5" height="15" fill="rgb(225,225,49)"/><text x="519.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.35%)</title><rect x="516" y="1428" width="5" height="15" fill="rgb(225,147,40)"/><text x="519.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.35%)</title><rect x="516" y="1444" width="5" height="15" fill="rgb(231,2,28)"/><text x="519.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.35%)</title><rect x="516" y="1460" width="5" height="15" fill="rgb(206,127,30)"/><text x="519.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.35%)</title><rect x="516" y="1476" width="5" height="15" fill="rgb(205,196,13)"/><text x="519.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.35%)</title><rect x="516" y="1492" width="5" height="15" fill="rgb(217,157,17)"/><text x="519.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.35%)</title><rect x="516" y="1508" width="5" height="15" fill="rgb(230,130,15)"/><text x="519.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.35%)</title><rect x="516" y="1524" width="5" height="15" fill="rgb(223,208,12)"/><text x="519.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.35%)</title><rect x="516" y="1540" width="5" height="15" fill="rgb(214,179,48)"/><text x="519.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:529) (1 samples, 0.35%)</title><rect x="516" y="1556" width="5" height="15" fill="rgb(249,61,25)"/><text x="519.00" y="1566.50"></text></g><g><title>get (sre_parse.py:254) (1 samples, 0.35%)</title><rect x="516" y="1572" width="5" height="15" fill="rgb(236,190,26)"/><text x="519.00" y="1582.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/extensions.py:20) (1 samples, 0.35%)</title><rect x="521" y="1492" width="4" height="15" fill="rgb(245,187,46)"/><text x="524.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="521" y="1508" width="4" height="15" fill="rgb(205,98,25)"/><text x="524.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="521" y="1524" width="4" height="15" fill="rgb(225,195,15)"/><text x="524.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="521" y="1540" width="4" height="15" fill="rgb(253,111,22)"/><text x="524.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="521" y="1556" width="4" height="15" fill="rgb(216,56,41)"/><text x="524.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="521" y="1572" width="4" height="15" fill="rgb(216,120,35)"/><text x="524.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="521" y="1588" width="4" height="15" fill="rgb(232,214,54)"/><text x="524.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="521" y="1604" width="4" height="15" fill="rgb(209,101,27)"/><text x="524.00" y="1614.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/constant_time.py:11) (1 samples, 0.35%)</title><rect x="521" y="1620" width="4" height="15" fill="rgb(238,144,11)"/><text x="524.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="521" y="1636" width="4" height="15" fill="rgb(213,73,42)"/><text x="524.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="521" y="1652" width="4" height="15" fill="rgb(245,74,31)"/><text x="524.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.35%)</title><rect x="521" y="1668" width="4" height="15" fill="rgb(252,152,49)"/><text x="524.00" y="1678.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.35%)</title><rect x="521" y="1684" width="4" height="15" fill="rgb(213,176,41)"/><text x="524.00" y="1694.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.35%)</title><rect x="521" y="1700" width="4" height="15" fill="rgb(233,34,5)"/><text x="524.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="521" y="1716" width="4" height="15" fill="rgb(231,63,0)"/><text x="524.00" y="1726.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.35%)</title><rect x="521" y="1732" width="4" height="15" fill="rgb(248,181,44)"/><text x="524.00" y="1742.50"></text></g><g><title>0x7fa9a1173995 (libdl-2.29.so) (1 samples, 0.35%)</title><rect x="521" y="1748" width="4" height="15" fill="rgb(219,52,53)"/><text x="524.00" y="1758.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.35%)</title><rect x="521" y="1764" width="4" height="15" fill="rgb(226,129,31)"/><text x="524.00" y="1774.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.35%)</title><rect x="521" y="1780" width="4" height="15" fill="rgb(215,206,24)"/><text x="524.00" y="1790.50"></text></g><g><title>0x7fa9a1173258 (libdl-2.29.so) (1 samples, 0.35%)</title><rect x="521" y="1796" width="4" height="15" fill="rgb(251,169,19)"/><text x="524.00" y="1806.50"></text></g><g><title>0x7fa9a11c0d7a (ld-2.29.so) (1 samples, 0.35%)</title><rect x="521" y="1812" width="4" height="15" fill="rgb(236,200,49)"/><text x="524.00" y="1822.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.35%)</title><rect x="521" y="1828" width="4" height="15" fill="rgb(222,84,33)"/><text x="524.00" y="1838.50"></text></g><g><title>0x7fa9a11c118b (ld-2.29.so) (1 samples, 0.35%)</title><rect x="521" y="1844" width="4" height="15" fill="rgb(235,63,1)"/><text x="524.00" y="1854.50"></text></g><g><title>0x7fa9a11b6c1a (ld-2.29.so) (1 samples, 0.35%)</title><rect x="521" y="1860" width="4" height="15" fill="rgb(207,128,0)"/><text x="524.00" y="1870.50"></text></g><g><title>0x7fa9a11b45e1 (ld-2.29.so) (1 samples, 0.35%)</title><rect x="521" y="1876" width="4" height="15" fill="rgb(246,16,23)"/><text x="524.00" y="1886.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (4 samples, 1.41%)</title><rect x="512" y="484" width="17" height="15" fill="rgb(236,145,12)"/><text x="515.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.41%)</title><rect x="512" y="500" width="17" height="15" fill="rgb(231,142,15)"/><text x="515.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.41%)</title><rect x="512" y="516" width="17" height="15" fill="rgb(227,3,8)"/><text x="515.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.41%)</title><rect x="512" y="532" width="17" height="15" fill="rgb(205,162,38)"/><text x="515.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.41%)</title><rect x="512" y="548" width="17" height="15" fill="rgb(254,96,18)"/><text x="515.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.41%)</title><rect x="512" y="564" width="17" height="15" fill="rgb(228,101,39)"/><text x="515.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (4 samples, 1.41%)</title><rect x="512" y="580" width="17" height="15" fill="rgb(229,210,17)"/><text x="515.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.41%)</title><rect x="512" y="596" width="17" height="15" fill="rgb(205,127,54)"/><text x="515.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.41%)</title><rect x="512" y="612" width="17" height="15" fill="rgb(238,191,16)"/><text x="515.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.41%)</title><rect x="512" y="628" width="17" height="15" fill="rgb(228,133,49)"/><text x="515.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.41%)</title><rect x="512" y="644" width="17" height="15" fill="rgb(235,102,53)"/><text x="515.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.41%)</title><rect x="512" y="660" width="17" height="15" fill="rgb(248,152,49)"/><text x="515.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (4 samples, 1.41%)</title><rect x="512" y="676" width="17" height="15" fill="rgb(208,85,45)"/><text x="515.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.41%)</title><rect x="512" y="692" width="17" height="15" fill="rgb(216,50,47)"/><text x="515.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.41%)</title><rect x="512" y="708" width="17" height="15" fill="rgb(244,186,2)"/><text x="515.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.41%)</title><rect x="512" y="724" width="17" height="15" fill="rgb(222,128,42)"/><text x="515.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.41%)</title><rect x="512" y="740" width="17" height="15" fill="rgb(242,87,16)"/><text x="515.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.41%)</title><rect x="512" y="756" width="17" height="15" fill="rgb(214,222,23)"/><text x="515.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (2 samples, 0.70%)</title><rect x="521" y="772" width="8" height="15" fill="rgb(208,211,41)"/><text x="524.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.70%)</title><rect x="521" y="788" width="8" height="15" fill="rgb(233,189,9)"/><text x="524.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="521" y="804" width="8" height="15" fill="rgb(242,202,39)"/><text x="524.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="521" y="820" width="8" height="15" fill="rgb(251,154,18)"/><text x="524.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="521" y="836" width="8" height="15" fill="rgb(245,127,40)"/><text x="524.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="521" y="852" width="8" height="15" fill="rgb(214,156,49)"/><text x="524.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="521" y="868" width="8" height="15" fill="rgb(245,229,31)"/><text x="524.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="521" y="884" width="8" height="15" fill="rgb(206,64,46)"/><text x="524.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (2 samples, 0.70%)</title><rect x="521" y="900" width="8" height="15" fill="rgb(210,147,4)"/><text x="524.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="521" y="916" width="8" height="15" fill="rgb(241,216,45)"/><text x="524.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.70%)</title><rect x="521" y="932" width="8" height="15" fill="rgb(248,12,18)"/><text x="524.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="521" y="948" width="8" height="15" fill="rgb(219,84,10)"/><text x="524.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="521" y="964" width="8" height="15" fill="rgb(219,62,17)"/><text x="524.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="521" y="980" width="8" height="15" fill="rgb(226,120,1)"/><text x="524.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="521" y="996" width="8" height="15" fill="rgb(250,190,48)"/><text x="524.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="521" y="1012" width="8" height="15" fill="rgb(254,35,45)"/><text x="524.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="521" y="1028" width="8" height="15" fill="rgb(245,23,41)"/><text x="524.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (2 samples, 0.70%)</title><rect x="521" y="1044" width="8" height="15" fill="rgb(243,220,23)"/><text x="524.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.70%)</title><rect x="521" y="1060" width="8" height="15" fill="rgb(227,65,1)"/><text x="524.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="521" y="1076" width="8" height="15" fill="rgb(244,218,29)"/><text x="524.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="521" y="1092" width="8" height="15" fill="rgb(222,152,8)"/><text x="524.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="521" y="1108" width="8" height="15" fill="rgb(209,171,18)"/><text x="524.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="521" y="1124" width="8" height="15" fill="rgb(210,190,37)"/><text x="524.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="521" y="1140" width="8" height="15" fill="rgb(215,48,42)"/><text x="524.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="521" y="1156" width="8" height="15" fill="rgb(219,111,10)"/><text x="524.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (2 samples, 0.70%)</title><rect x="521" y="1172" width="8" height="15" fill="rgb(250,101,25)"/><text x="524.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.70%)</title><rect x="521" y="1188" width="8" height="15" fill="rgb(208,63,38)"/><text x="524.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="521" y="1204" width="8" height="15" fill="rgb(250,207,41)"/><text x="524.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="521" y="1220" width="8" height="15" fill="rgb(250,124,43)"/><text x="524.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="521" y="1236" width="8" height="15" fill="rgb(237,146,39)"/><text x="524.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="521" y="1252" width="8" height="15" fill="rgb(208,89,32)"/><text x="524.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="521" y="1268" width="8" height="15" fill="rgb(230,103,51)"/><text x="524.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="521" y="1284" width="8" height="15" fill="rgb(209,39,47)"/><text x="524.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (2 samples, 0.70%)</title><rect x="521" y="1300" width="8" height="15" fill="rgb(242,107,26)"/><text x="524.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="521" y="1316" width="8" height="15" fill="rgb(240,169,34)"/><text x="524.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="521" y="1332" width="8" height="15" fill="rgb(207,33,47)"/><text x="524.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="521" y="1348" width="8" height="15" fill="rgb(228,76,19)"/><text x="524.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="521" y="1364" width="8" height="15" fill="rgb(228,10,19)"/><text x="524.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="521" y="1380" width="8" height="15" fill="rgb(245,136,21)"/><text x="524.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:18) (2 samples, 0.70%)</title><rect x="521" y="1396" width="8" height="15" fill="rgb(252,202,32)"/><text x="524.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="521" y="1412" width="8" height="15" fill="rgb(246,103,22)"/><text x="524.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="521" y="1428" width="8" height="15" fill="rgb(224,10,13)"/><text x="524.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="521" y="1444" width="8" height="15" fill="rgb(223,173,47)"/><text x="524.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="521" y="1460" width="8" height="15" fill="rgb(217,27,5)"/><text x="524.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="521" y="1476" width="8" height="15" fill="rgb(213,138,18)"/><text x="524.00" y="1486.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/extensions.py:26) (1 samples, 0.35%)</title><rect x="525" y="1492" width="4" height="15" fill="rgb(232,186,18)"/><text x="528.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="525" y="1508" width="4" height="15" fill="rgb(228,180,37)"/><text x="528.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="525" y="1524" width="4" height="15" fill="rgb(253,42,30)"/><text x="528.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="525" y="1540" width="4" height="15" fill="rgb(215,115,0)"/><text x="528.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="525" y="1556" width="4" height="15" fill="rgb(230,34,23)"/><text x="528.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="525" y="1572" width="4" height="15" fill="rgb(237,206,15)"/><text x="528.00" y="1582.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/general_name.py:16) (1 samples, 0.35%)</title><rect x="525" y="1588" width="4" height="15" fill="rgb(232,155,2)"/><text x="528.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="525" y="1604" width="4" height="15" fill="rgb(224,71,21)"/><text x="528.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="525" y="1620" width="4" height="15" fill="rgb(244,46,13)"/><text x="528.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="525" y="1636" width="4" height="15" fill="rgb(214,115,9)"/><text x="528.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="525" y="1652" width="4" height="15" fill="rgb(240,107,10)"/><text x="528.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="525" y="1668" width="4" height="15" fill="rgb(249,19,43)"/><text x="528.00" y="1678.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/name.py:12) (1 samples, 0.35%)</title><rect x="525" y="1684" width="4" height="15" fill="rgb(226,157,15)"/><text x="528.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="525" y="1700" width="4" height="15" fill="rgb(217,216,25)"/><text x="528.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="525" y="1716" width="4" height="15" fill="rgb(232,146,3)"/><text x="528.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="525" y="1732" width="4" height="15" fill="rgb(237,195,1)"/><text x="528.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="525" y="1748" width="4" height="15" fill="rgb(225,217,31)"/><text x="528.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="525" y="1764" width="4" height="15" fill="rgb(250,18,5)"/><text x="528.00" y="1774.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/oid.py:52) (1 samples, 0.35%)</title><rect x="525" y="1780" width="4" height="15" fill="rgb(205,65,32)"/><text x="528.00" y="1790.50"></text></g><g><title>NameOID (cryptography/x509/oid.py:78) (1 samples, 0.35%)</title><rect x="525" y="1796" width="4" height="15" fill="rgb(219,45,18)"/><text x="528.00" y="1806.50"></text></g><g><title>__init__ (cryptography/hazmat/_oid.py:12) (1 samples, 0.35%)</title><rect x="525" y="1812" width="4" height="15" fill="rgb(249,194,33)"/><text x="528.00" y="1822.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (5 samples, 1.76%)</title><rect x="512" y="244" width="21" height="15" fill="rgb(225,140,43)"/><text x="515.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.76%)</title><rect x="512" y="260" width="21" height="15" fill="rgb(229,159,15)"/><text x="515.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.76%)</title><rect x="512" y="276" width="21" height="15" fill="rgb(217,215,12)"/><text x="515.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.76%)</title><rect x="512" y="292" width="21" height="15" fill="rgb(206,99,9)"/><text x="515.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.76%)</title><rect x="512" y="308" width="21" height="15" fill="rgb(234,13,49)"/><text x="515.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.76%)</title><rect x="512" y="324" width="21" height="15" fill="rgb(238,110,15)"/><text x="515.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (5 samples, 1.76%)</title><rect x="512" y="340" width="21" height="15" fill="rgb(229,101,49)"/><text x="515.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.76%)</title><rect x="512" y="356" width="21" height="15" fill="rgb(227,217,6)"/><text x="515.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.76%)</title><rect x="512" y="372" width="21" height="15" fill="rgb(209,98,39)"/><text x="515.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.76%)</title><rect x="512" y="388" width="21" height="15" fill="rgb(248,179,50)"/><text x="515.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.76%)</title><rect x="512" y="404" width="21" height="15" fill="rgb(251,182,20)"/><text x="515.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.76%)</title><rect x="512" y="420" width="21" height="15" fill="rgb(229,111,53)"/><text x="515.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.76%)</title><rect x="512" y="436" width="21" height="15" fill="rgb(236,143,35)"/><text x="515.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.76%)</title><rect x="512" y="452" width="21" height="15" fill="rgb(236,112,53)"/><text x="515.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.76%)</title><rect x="512" y="468" width="21" height="15" fill="rgb(248,60,3)"/><text x="515.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.35%)</title><rect x="529" y="484" width="4" height="15" fill="rgb(206,188,22)"/><text x="532.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="529" y="500" width="4" height="15" fill="rgb(226,47,51)"/><text x="532.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="529" y="516" width="4" height="15" fill="rgb(214,199,51)"/><text x="532.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="529" y="532" width="4" height="15" fill="rgb(232,24,17)"/><text x="532.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="529" y="548" width="4" height="15" fill="rgb(230,19,47)"/><text x="532.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="529" y="564" width="4" height="15" fill="rgb(237,74,50)"/><text x="532.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.35%)</title><rect x="529" y="580" width="4" height="15" fill="rgb(207,31,30)"/><text x="532.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="529" y="596" width="4" height="15" fill="rgb(236,62,8)"/><text x="532.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="529" y="612" width="4" height="15" fill="rgb(245,208,17)"/><text x="532.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="529" y="628" width="4" height="15" fill="rgb(238,115,3)"/><text x="532.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="529" y="644" width="4" height="15" fill="rgb(213,173,13)"/><text x="532.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="529" y="660" width="4" height="15" fill="rgb(235,74,30)"/><text x="532.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:395) (1 samples, 0.35%)</title><rect x="529" y="676" width="4" height="15" fill="rgb(205,17,5)"/><text x="532.00" y="686.50"></text></g><g><title>register_check (pycodestyle.py:183) (1 samples, 0.35%)</title><rect x="529" y="692" width="4" height="15" fill="rgb(224,50,16)"/><text x="532.00" y="702.50"></text></g><g><title>_get_parameters (pycodestyle.py:169) (1 samples, 0.35%)</title><rect x="529" y="708" width="4" height="15" fill="rgb(205,210,22)"/><text x="532.00" y="718.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.35%)</title><rect x="529" y="724" width="4" height="15" fill="rgb(207,178,32)"/><text x="532.00" y="734.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:11) (1 samples, 0.35%)</title><rect x="533" y="628" width="4" height="15" fill="rgb(244,187,19)"/><text x="536.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="533" y="644" width="4" height="15" fill="rgb(231,105,18)"/><text x="536.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="533" y="660" width="4" height="15" fill="rgb(221,202,42)"/><text x="536.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="533" y="676" width="4" height="15" fill="rgb(209,70,48)"/><text x="536.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="533" y="692" width="4" height="15" fill="rgb(237,159,11)"/><text x="536.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="533" y="708" width="4" height="15" fill="rgb(212,83,24)"/><text x="536.00" y="718.50"></text></g><g><title>&lt;module&gt; (pytz/__init__.py:15) (1 samples, 0.35%)</title><rect x="533" y="724" width="4" height="15" fill="rgb(225,157,44)"/><text x="536.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="533" y="740" width="4" height="15" fill="rgb(254,28,40)"/><text x="536.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.35%)</title><rect x="533" y="756" width="4" height="15" fill="rgb(227,67,19)"/><text x="536.00" y="766.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.35%)</title><rect x="533" y="772" width="4" height="15" fill="rgb(223,52,7)"/><text x="536.00" y="782.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.35%)</title><rect x="533" y="788" width="4" height="15" fill="rgb(241,27,4)"/><text x="536.00" y="798.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.35%)</title><rect x="533" y="804" width="4" height="15" fill="rgb(209,145,46)"/><text x="536.00" y="814.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1394) (1 samples, 0.35%)</title><rect x="533" y="820" width="4" height="15" fill="rgb(211,89,4)"/><text x="536.00" y="830.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.35%)</title><rect x="533" y="836" width="4" height="15" fill="rgb(236,84,49)"/><text x="536.00" y="846.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.35%)</title><rect x="533" y="852" width="4" height="15" fill="rgb(213,60,35)"/><text x="536.00" y="862.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.35%)</title><rect x="533" y="868" width="4" height="15" fill="rgb(216,66,29)"/><text x="536.00" y="878.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.35%)</title><rect x="533" y="884" width="4" height="15" fill="rgb(214,69,53)"/><text x="536.00" y="894.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.35%)</title><rect x="533" y="900" width="4" height="15" fill="rgb(208,75,26)"/><text x="536.00" y="910.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.70%)</title><rect x="533" y="436" width="8" height="15" fill="rgb(236,98,6)"/><text x="536.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="533" y="452" width="8" height="15" fill="rgb(230,99,29)"/><text x="536.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="533" y="468" width="8" height="15" fill="rgb(226,137,38)"/><text x="536.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="533" y="484" width="8" height="15" fill="rgb(231,148,5)"/><text x="536.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="533" y="500" width="8" height="15" fill="rgb(211,155,11)"/><text x="536.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="533" y="516" width="8" height="15" fill="rgb(209,162,15)"/><text x="536.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.70%)</title><rect x="533" y="532" width="8" height="15" fill="rgb(215,53,27)"/><text x="536.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="533" y="548" width="8" height="15" fill="rgb(237,35,0)"/><text x="536.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="533" y="564" width="8" height="15" fill="rgb(243,116,6)"/><text x="536.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="533" y="580" width="8" height="15" fill="rgb(245,22,19)"/><text x="536.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="533" y="596" width="8" height="15" fill="rgb(247,18,54)"/><text x="536.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="533" y="612" width="8" height="15" fill="rgb(238,10,43)"/><text x="536.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.35%)</title><rect x="537" y="628" width="4" height="15" fill="rgb(250,190,10)"/><text x="540.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="537" y="644" width="4" height="15" fill="rgb(214,42,36)"/><text x="540.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="537" y="660" width="4" height="15" fill="rgb(249,123,52)"/><text x="540.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="537" y="676" width="4" height="15" fill="rgb(228,180,36)"/><text x="540.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="537" y="692" width="4" height="15" fill="rgb(225,217,39)"/><text x="540.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="537" y="708" width="4" height="15" fill="rgb(229,186,20)"/><text x="540.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.35%)</title><rect x="537" y="724" width="4" height="15" fill="rgb(214,198,33)"/><text x="540.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="537" y="740" width="4" height="15" fill="rgb(218,25,54)"/><text x="540.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="537" y="756" width="4" height="15" fill="rgb(252,91,24)"/><text x="540.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="537" y="772" width="4" height="15" fill="rgb(235,65,30)"/><text x="540.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="537" y="788" width="4" height="15" fill="rgb(237,184,49)"/><text x="540.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="537" y="804" width="4" height="15" fill="rgb(222,176,35)"/><text x="540.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.35%)</title><rect x="537" y="820" width="4" height="15" fill="rgb(211,228,48)"/><text x="540.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="537" y="836" width="4" height="15" fill="rgb(219,123,47)"/><text x="540.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="537" y="852" width="4" height="15" fill="rgb(238,161,49)"/><text x="540.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="537" y="868" width="4" height="15" fill="rgb(209,21,35)"/><text x="540.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="537" y="884" width="4" height="15" fill="rgb(205,87,51)"/><text x="540.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="537" y="900" width="4" height="15" fill="rgb(210,194,2)"/><text x="540.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:52) (1 samples, 0.35%)</title><rect x="537" y="916" width="4" height="15" fill="rgb(229,100,20)"/><text x="540.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="537" y="932" width="4" height="15" fill="rgb(205,7,30)"/><text x="540.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="537" y="948" width="4" height="15" fill="rgb(232,210,49)"/><text x="540.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="537" y="964" width="4" height="15" fill="rgb(205,95,39)"/><text x="540.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="537" y="980" width="4" height="15" fill="rgb(243,70,36)"/><text x="540.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="537" y="996" width="4" height="15" fill="rgb(223,136,17)"/><text x="540.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py:1088) (1 samples, 0.35%)</title><rect x="537" y="1012" width="4" height="15" fill="rgb(221,7,28)"/><text x="540.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py:873) (1 samples, 0.35%)</title><rect x="537" y="1028" width="4" height="15" fill="rgb(208,135,0)"/><text x="540.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:764) (1 samples, 0.35%)</title><rect x="537" y="1044" width="4" height="15" fill="rgb(226,119,30)"/><text x="540.00" y="1054.50"></text></g><g><title>_flex_comp_method_FRAME (pandas/core/ops/__init__.py:1531) (1 samples, 0.35%)</title><rect x="537" y="1060" width="4" height="15" fill="rgb(236,151,29)"/><text x="540.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.35%)</title><rect x="537" y="1076" width="4" height="15" fill="rgb(210,88,49)"/><text x="540.00" y="1086.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.35%)</title><rect x="537" y="1092" width="4" height="15" fill="rgb(213,159,44)"/><text x="540.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.35%)</title><rect x="537" y="1108" width="4" height="15" fill="rgb(207,80,14)"/><text x="540.00" y="1118.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:4) (15 samples, 5.28%)</title><rect x="483" y="52" width="62" height="15" fill="rgb(239,187,49)"/><text x="486.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 5.28%)</title><rect x="483" y="68" width="62" height="15" fill="rgb(211,191,28)"/><text x="486.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 5.28%)</title><rect x="483" y="84" width="62" height="15" fill="rgb(215,110,2)"/><text x="486.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 5.28%)</title><rect x="483" y="100" width="62" height="15" fill="rgb(250,192,23)"/><text x="486.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 5.28%)</title><rect x="483" y="116" width="62" height="15" fill="rgb(230,10,39)"/><text x="486.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 5.28%)</title><rect x="483" y="132" width="62" height="15" fill="rgb(209,80,20)"/><text x="486.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:7) (8 samples, 2.82%)</title><rect x="512" y="148" width="33" height="15" fill="rgb(241,32,24)"/><text x="515.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.82%)</title><rect x="512" y="164" width="33" height="15" fill="rgb(209,78,45)"/><text x="515.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.82%)</title><rect x="512" y="180" width="33" height="15" fill="rgb(207,173,43)"/><text x="515.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.82%)</title><rect x="512" y="196" width="33" height="15" fill="rgb(244,78,47)"/><text x="515.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.82%)</title><rect x="512" y="212" width="33" height="15" fill="rgb(251,146,33)"/><text x="515.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.82%)</title><rect x="512" y="228" width="33" height="15" fill="rgb(249,136,6)"/><text x="515.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 1.06%)</title><rect x="533" y="244" width="12" height="15" fill="rgb(254,215,31)"/><text x="536.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.06%)</title><rect x="533" y="260" width="12" height="15" fill="rgb(228,207,26)"/><text x="536.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.06%)</title><rect x="533" y="276" width="12" height="15" fill="rgb(232,4,41)"/><text x="536.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.06%)</title><rect x="533" y="292" width="12" height="15" fill="rgb(214,221,36)"/><text x="536.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.06%)</title><rect x="533" y="308" width="12" height="15" fill="rgb(241,78,51)"/><text x="536.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.06%)</title><rect x="533" y="324" width="12" height="15" fill="rgb(211,159,29)"/><text x="536.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 1.06%)</title><rect x="533" y="340" width="12" height="15" fill="rgb(242,70,23)"/><text x="536.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.06%)</title><rect x="533" y="356" width="12" height="15" fill="rgb(225,108,6)"/><text x="536.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.06%)</title><rect x="533" y="372" width="12" height="15" fill="rgb(228,51,49)"/><text x="536.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.06%)</title><rect x="533" y="388" width="12" height="15" fill="rgb(242,184,15)"/><text x="536.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.06%)</title><rect x="533" y="404" width="12" height="15" fill="rgb(248,127,34)"/><text x="536.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.06%)</title><rect x="533" y="420" width="12" height="15" fill="rgb(245,213,52)"/><text x="536.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.35%)</title><rect x="541" y="436" width="4" height="15" fill="rgb(246,211,13)"/><text x="544.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="541" y="452" width="4" height="15" fill="rgb(226,178,42)"/><text x="544.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.35%)</title><rect x="541" y="468" width="4" height="15" fill="rgb(212,75,40)"/><text x="544.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="541" y="484" width="4" height="15" fill="rgb(211,149,8)"/><text x="544.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="541" y="500" width="4" height="15" fill="rgb(249,175,11)"/><text x="544.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="541" y="516" width="4" height="15" fill="rgb(222,222,15)"/><text x="544.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="541" y="532" width="4" height="15" fill="rgb(225,102,7)"/><text x="544.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="541" y="548" width="4" height="15" fill="rgb(218,108,22)"/><text x="544.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="541" y="564" width="4" height="15" fill="rgb(233,21,19)"/><text x="544.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.35%)</title><rect x="541" y="580" width="4" height="15" fill="rgb(246,47,20)"/><text x="544.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="541" y="596" width="4" height="15" fill="rgb(249,4,27)"/><text x="544.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="541" y="612" width="4" height="15" fill="rgb(215,70,19)"/><text x="544.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="541" y="628" width="4" height="15" fill="rgb(253,70,53)"/><text x="544.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="541" y="644" width="4" height="15" fill="rgb(231,39,47)"/><text x="544.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="541" y="660" width="4" height="15" fill="rgb(254,14,39)"/><text x="544.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.35%)</title><rect x="541" y="676" width="4" height="15" fill="rgb(211,90,27)"/><text x="544.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="541" y="692" width="4" height="15" fill="rgb(239,50,15)"/><text x="544.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="541" y="708" width="4" height="15" fill="rgb(246,181,51)"/><text x="544.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="541" y="724" width="4" height="15" fill="rgb(217,15,10)"/><text x="544.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="541" y="740" width="4" height="15" fill="rgb(233,200,18)"/><text x="544.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="541" y="756" width="4" height="15" fill="rgb(226,162,41)"/><text x="544.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.35%)</title><rect x="541" y="772" width="4" height="15" fill="rgb(213,152,33)"/><text x="544.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="541" y="788" width="4" height="15" fill="rgb(244,84,51)"/><text x="544.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="541" y="804" width="4" height="15" fill="rgb(210,212,47)"/><text x="544.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="541" y="820" width="4" height="15" fill="rgb(205,99,10)"/><text x="544.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="541" y="836" width="4" height="15" fill="rgb(205,90,3)"/><text x="544.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="541" y="852" width="4" height="15" fill="rgb(206,17,40)"/><text x="544.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.35%)</title><rect x="541" y="868" width="4" height="15" fill="rgb(232,60,21)"/><text x="544.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="541" y="884" width="4" height="15" fill="rgb(249,126,34)"/><text x="544.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.35%)</title><rect x="541" y="900" width="4" height="15" fill="rgb(220,39,15)"/><text x="544.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="541" y="916" width="4" height="15" fill="rgb(226,200,17)"/><text x="544.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="541" y="932" width="4" height="15" fill="rgb(240,128,6)"/><text x="544.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="541" y="948" width="4" height="15" fill="rgb(228,123,53)"/><text x="544.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="541" y="964" width="4" height="15" fill="rgb(246,212,12)"/><text x="544.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="541" y="980" width="4" height="15" fill="rgb(214,103,6)"/><text x="544.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="541" y="996" width="4" height="15" fill="rgb(226,55,17)"/><text x="544.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.35%)</title><rect x="541" y="1012" width="4" height="15" fill="rgb(237,99,10)"/><text x="544.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="541" y="1028" width="4" height="15" fill="rgb(249,187,39)"/><text x="544.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="541" y="1044" width="4" height="15" fill="rgb(249,27,29)"/><text x="544.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="541" y="1060" width="4" height="15" fill="rgb(228,111,24)"/><text x="544.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="541" y="1076" width="4" height="15" fill="rgb(242,139,39)"/><text x="544.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="541" y="1092" width="4" height="15" fill="rgb(252,229,42)"/><text x="544.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.35%)</title><rect x="541" y="1108" width="4" height="15" fill="rgb(245,38,5)"/><text x="544.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="541" y="1124" width="4" height="15" fill="rgb(244,205,54)"/><text x="544.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="541" y="1140" width="4" height="15" fill="rgb(212,14,49)"/><text x="544.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="541" y="1156" width="4" height="15" fill="rgb(246,23,15)"/><text x="544.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="541" y="1172" width="4" height="15" fill="rgb(238,183,6)"/><text x="544.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="541" y="1188" width="4" height="15" fill="rgb(232,141,33)"/><text x="544.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:22) (1 samples, 0.35%)</title><rect x="541" y="1204" width="4" height="15" fill="rgb(246,42,0)"/><text x="544.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="541" y="1220" width="4" height="15" fill="rgb(219,62,4)"/><text x="544.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="541" y="1236" width="4" height="15" fill="rgb(251,7,45)"/><text x="544.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="541" y="1252" width="4" height="15" fill="rgb(247,165,19)"/><text x="544.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="541" y="1268" width="4" height="15" fill="rgb(207,36,37)"/><text x="544.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="541" y="1284" width="4" height="15" fill="rgb(235,117,44)"/><text x="544.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (1 samples, 0.35%)</title><rect x="541" y="1300" width="4" height="15" fill="rgb(213,179,32)"/><text x="544.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="541" y="1316" width="4" height="15" fill="rgb(232,67,53)"/><text x="544.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="541" y="1332" width="4" height="15" fill="rgb(246,87,54)"/><text x="544.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="541" y="1348" width="4" height="15" fill="rgb(254,208,3)"/><text x="544.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="541" y="1364" width="4" height="15" fill="rgb(233,173,51)"/><text x="544.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="541" y="1380" width="4" height="15" fill="rgb(216,192,22)"/><text x="544.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (1 samples, 0.35%)</title><rect x="541" y="1396" width="4" height="15" fill="rgb(216,170,17)"/><text x="544.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="541" y="1412" width="4" height="15" fill="rgb(252,11,43)"/><text x="544.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="541" y="1428" width="4" height="15" fill="rgb(219,182,22)"/><text x="544.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="541" y="1444" width="4" height="15" fill="rgb(246,191,4)"/><text x="544.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="541" y="1460" width="4" height="15" fill="rgb(243,133,24)"/><text x="544.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="541" y="1476" width="4" height="15" fill="rgb(232,12,54)"/><text x="544.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:9) (1 samples, 0.35%)</title><rect x="541" y="1492" width="4" height="15" fill="rgb(238,8,8)"/><text x="544.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="541" y="1508" width="4" height="15" fill="rgb(216,168,9)"/><text x="544.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="541" y="1524" width="4" height="15" fill="rgb(249,13,38)"/><text x="544.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="541" y="1540" width="4" height="15" fill="rgb(224,219,16)"/><text x="544.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="541" y="1556" width="4" height="15" fill="rgb(236,97,7)"/><text x="544.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="541" y="1572" width="4" height="15" fill="rgb(223,206,11)"/><text x="544.00" y="1582.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_incremental_pca.py:7) (1 samples, 0.35%)</title><rect x="541" y="1588" width="4" height="15" fill="rgb(243,126,47)"/><text x="544.00" y="1598.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 1.41%)</title><rect x="550" y="180" width="16" height="15" fill="rgb(223,39,40)"/><text x="553.00" y="190.50"></text></g><g><title>0x7fa9a0f0c1ef (libc-2.29.so) (1 samples, 0.35%)</title><rect x="575" y="244" width="4" height="15" fill="rgb(227,43,28)"/><text x="578.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.35%)</title><rect x="583" y="324" width="4" height="15" fill="rgb(206,38,34)"/><text x="586.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.35%)</title><rect x="587" y="356" width="4" height="15" fill="rgb(243,118,15)"/><text x="590.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.35%)</title><rect x="587" y="372" width="4" height="15" fill="rgb(248,70,8)"/><text x="590.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:73) (1 samples, 0.35%)</title><rect x="587" y="388" width="4" height="15" fill="rgb(254,51,7)"/><text x="590.00" y="398.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1698) (1 samples, 0.35%)</title><rect x="591" y="388" width="4" height="15" fill="rgb(230,43,12)"/><text x="594.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.70%)</title><rect x="591" y="356" width="9" height="15" fill="rgb(240,1,48)"/><text x="594.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (2 samples, 0.70%)</title><rect x="591" y="372" width="9" height="15" fill="rgb(227,108,52)"/><text x="594.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.35%)</title><rect x="595" y="388" width="5" height="15" fill="rgb(251,213,27)"/><text x="598.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="595" y="404" width="5" height="15" fill="rgb(228,184,18)"/><text x="598.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.35%)</title><rect x="600" y="372" width="4" height="15" fill="rgb(205,193,30)"/><text x="603.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (2 samples, 0.70%)</title><rect x="604" y="372" width="8" height="15" fill="rgb(208,211,5)"/><text x="607.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.35%)</title><rect x="612" y="388" width="4" height="15" fill="rgb(251,167,54)"/><text x="615.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.35%)</title><rect x="616" y="388" width="4" height="15" fill="rgb(236,153,16)"/><text x="619.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (1 samples, 0.35%)</title><rect x="620" y="388" width="4" height="15" fill="rgb(253,37,29)"/><text x="623.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.35%)</title><rect x="620" y="404" width="4" height="15" fill="rgb(226,162,30)"/><text x="623.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 2.46%)</title><rect x="600" y="356" width="29" height="15" fill="rgb(239,4,22)"/><text x="603.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (4 samples, 1.41%)</title><rect x="612" y="372" width="17" height="15" fill="rgb(208,155,41)"/><text x="615.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.35%)</title><rect x="624" y="388" width="5" height="15" fill="rgb(246,150,54)"/><text x="627.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (12 samples, 4.23%)</title><rect x="583" y="260" width="50" height="15" fill="rgb(239,126,49)"/><text x="586.00" y="270.50">array..</text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 4.23%)</title><rect x="583" y="276" width="50" height="15" fill="rgb(253,151,20)"/><text x="586.00" y="286.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 4.23%)</title><rect x="583" y="292" width="50" height="15" fill="rgb(219,65,36)"/><text x="586.00" y="302.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (12 samples, 4.23%)</title><rect x="583" y="308" width="50" height="15" fill="rgb(209,52,14)"/><text x="586.00" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 3.87%)</title><rect x="587" y="324" width="46" height="15" fill="rgb(254,112,37)"/><text x="590.00" y="334.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 3.87%)</title><rect x="587" y="340" width="46" height="15" fill="rgb(208,189,30)"/><text x="590.00" y="350.50">PyUF..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.35%)</title><rect x="629" y="356" width="4" height="15" fill="rgb(248,154,34)"/><text x="632.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.35%)</title><rect x="629" y="372" width="4" height="15" fill="rgb(237,56,54)"/><text x="632.00" y="382.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (14 samples, 4.93%)</title><rect x="579" y="244" width="58" height="15" fill="rgb(236,198,19)"/><text x="582.00" y="254.50">norm_l..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.35%)</title><rect x="633" y="260" width="4" height="15" fill="rgb(230,121,21)"/><text x="636.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.35%)</title><rect x="633" y="276" width="4" height="15" fill="rgb(208,167,47)"/><text x="636.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.35%)</title><rect x="633" y="292" width="4" height="15" fill="rgb(215,135,34)"/><text x="636.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.35%)</title><rect x="633" y="308" width="4" height="15" fill="rgb(249,82,50)"/><text x="636.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src:1985) (1 samples, 0.35%)</title><rect x="633" y="324" width="4" height="15" fill="rgb(234,173,18)"/><text x="636.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src:195) (1 samples, 0.35%)</title><rect x="633" y="340" width="4" height="15" fill="rgb(218,62,28)"/><text x="636.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src:1057) (1 samples, 0.35%)</title><rect x="633" y="356" width="4" height="15" fill="rgb(254,31,3)"/><text x="636.00" y="366.50"></text></g><g><title>_mm_andnot_ps (xmmintrin.h:219) (1 samples, 0.35%)</title><rect x="633" y="372" width="4" height="15" fill="rgb(235,170,0)"/><text x="636.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.35%)</title><rect x="637" y="260" width="4" height="15" fill="rgb(238,224,11)"/><text x="640.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.35%)</title><rect x="637" y="276" width="4" height="15" fill="rgb(221,97,42)"/><text x="640.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.35%)</title><rect x="637" y="292" width="4" height="15" fill="rgb(225,13,12)"/><text x="640.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.35%)</title><rect x="637" y="308" width="4" height="15" fill="rgb(205,55,38)"/><text x="640.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1715) (1 samples, 0.35%)</title><rect x="641" y="292" width="4" height="15" fill="rgb(216,125,51)"/><text x="644.00" y="302.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.35%)</title><rect x="641" y="308" width="4" height="15" fill="rgb(226,17,24)"/><text x="644.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.35%)</title><rect x="645" y="308" width="4" height="15" fill="rgb(229,218,29)"/><text x="648.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.35%)</title><rect x="645" y="324" width="4" height="15" fill="rgb(248,202,27)"/><text x="648.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3131) (1 samples, 0.35%)</title><rect x="645" y="340" width="4" height="15" fill="rgb(219,188,42)"/><text x="648.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.70%)</title><rect x="649" y="356" width="9" height="15" fill="rgb(232,151,54)"/><text x="652.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.35%)</title><rect x="658" y="356" width="4" height="15" fill="rgb(244,207,47)"/><text x="661.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.35%)</title><rect x="662" y="372" width="4" height="15" fill="rgb(250,207,12)"/><text x="665.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (24 samples, 8.45%)</title><rect x="575" y="196" width="99" height="15" fill="rgb(241,164,28)"/><text x="578.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (24 samples, 8.45%)</title><rect x="575" y="212" width="99" height="15" fill="rgb(247,28,3)"/><text x="578.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (24 samples, 8.45%)</title><rect x="575" y="228" width="99" height="15" fill="rgb(224,78,13)"/><text x="578.00" y="238.50">_run (mlpro..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (9 samples, 3.17%)</title><rect x="637" y="244" width="37" height="15" fill="rgb(242,8,53)"/><text x="640.00" y="254.50">nor..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 2.82%)</title><rect x="641" y="260" width="33" height="15" fill="rgb(211,71,5)"/><text x="644.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 2.82%)</title><rect x="641" y="276" width="33" height="15" fill="rgb(254,222,29)"/><text x="644.00" y="286.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 2.46%)</title><rect x="645" y="292" width="29" height="15" fill="rgb(207,45,3)"/><text x="648.00" y="302.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 2.11%)</title><rect x="649" y="308" width="25" height="15" fill="rgb(219,180,53)"/><text x="652.00" y="318.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 2.11%)</title><rect x="649" y="324" width="25" height="15" fill="rgb(241,211,2)"/><text x="652.00" y="334.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 2.11%)</title><rect x="649" y="340" width="25" height="15" fill="rgb(214,99,6)"/><text x="652.00" y="350.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 1.06%)</title><rect x="662" y="356" width="12" height="15" fill="rgb(225,80,24)"/><text x="665.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (2 samples, 0.70%)</title><rect x="666" y="372" width="8" height="15" fill="rgb(230,160,5)"/><text x="669.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.35%)</title><rect x="674" y="196" width="4" height="15" fill="rgb(206,207,30)"/><text x="677.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3213) (1 samples, 0.35%)</title><rect x="674" y="212" width="4" height="15" fill="rgb(231,67,4)"/><text x="677.00" y="222.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.35%)</title><rect x="683" y="308" width="4" height="15" fill="rgb(227,94,31)"/><text x="686.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2095) (1 samples, 0.35%)</title><rect x="683" y="324" width="4" height="15" fill="rgb(239,186,1)"/><text x="686.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.35%)</title><rect x="683" y="340" width="4" height="15" fill="rgb(252,17,29)"/><text x="686.00" y="350.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (2 samples, 0.70%)</title><rect x="683" y="292" width="8" height="15" fill="rgb(216,30,16)"/><text x="686.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (1 samples, 0.35%)</title><rect x="687" y="308" width="4" height="15" fill="rgb(221,211,11)"/><text x="690.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (1 samples, 0.35%)</title><rect x="687" y="324" width="4" height="15" fill="rgb(218,195,17)"/><text x="690.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (1 samples, 0.35%)</title><rect x="687" y="340" width="4" height="15" fill="rgb(223,186,31)"/><text x="690.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="687" y="356" width="4" height="15" fill="rgb(252,105,43)"/><text x="690.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="687" y="372" width="4" height="15" fill="rgb(208,188,49)"/><text x="690.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="687" y="388" width="4" height="15" fill="rgb(215,153,33)"/><text x="690.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.06%)</title><rect x="683" y="276" width="12" height="15" fill="rgb(208,150,36)"/><text x="686.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2233) (1 samples, 0.35%)</title><rect x="691" y="292" width="4" height="15" fill="rgb(240,2,16)"/><text x="694.00" y="302.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="695" y="276" width="4" height="15" fill="rgb(254,55,46)"/><text x="698.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (12 samples, 4.23%)</title><rect x="678" y="228" width="50" height="15" fill="rgb(205,40,1)"/><text x="681.00" y="238.50">_run ..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (11 samples, 3.87%)</title><rect x="683" y="244" width="45" height="15" fill="rgb(210,206,52)"/><text x="686.00" y="254.50">nump..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (11 samples, 3.87%)</title><rect x="683" y="260" width="45" height="15" fill="rgb(229,8,3)"/><text x="686.00" y="270.50">dot ..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 2.46%)</title><rect x="699" y="276" width="29" height="15" fill="rgb(251,115,33)"/><text x="702.00" y="286.50">sg..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.35%)</title><rect x="728" y="260" width="4" height="15" fill="rgb(249,7,27)"/><text x="731.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1079) (1 samples, 0.35%)</title><rect x="728" y="276" width="4" height="15" fill="rgb(234,198,29)"/><text x="731.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.35%)</title><rect x="732" y="276" width="5" height="15" fill="rgb(215,155,9)"/><text x="735.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1447) (1 samples, 0.35%)</title><rect x="732" y="292" width="5" height="15" fill="rgb(216,23,28)"/><text x="735.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.35%)</title><rect x="737" y="340" width="4" height="15" fill="rgb(254,48,33)"/><text x="740.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.70%)</title><rect x="737" y="292" width="8" height="15" fill="rgb(238,139,48)"/><text x="740.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.70%)</title><rect x="737" y="308" width="8" height="15" fill="rgb(206,20,13)"/><text x="740.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.70%)</title><rect x="737" y="324" width="8" height="15" fill="rgb(235,65,38)"/><text x="740.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.35%)</title><rect x="741" y="340" width="4" height="15" fill="rgb(222,71,50)"/><text x="744.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.76%)</title><rect x="728" y="244" width="21" height="15" fill="rgb(230,225,33)"/><text x="731.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.41%)</title><rect x="732" y="260" width="17" height="15" fill="rgb(231,42,1)"/><text x="735.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.06%)</title><rect x="737" y="276" width="12" height="15" fill="rgb(206,33,9)"/><text x="740.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.35%)</title><rect x="745" y="292" width="4" height="15" fill="rgb(230,83,37)"/><text x="748.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="745" y="308" width="4" height="15" fill="rgb(219,134,34)"/><text x="748.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (6 samples, 2.11%)</title><rect x="728" y="228" width="25" height="15" fill="rgb(217,104,43)"/><text x="731.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.35%)</title><rect x="749" y="244" width="4" height="15" fill="rgb(245,155,11)"/><text x="752.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.35%)</title><rect x="753" y="244" width="4" height="15" fill="rgb(205,13,23)"/><text x="756.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.35%)</title><rect x="753" y="260" width="4" height="15" fill="rgb(241,55,21)"/><text x="756.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.35%)</title><rect x="753" y="276" width="4" height="15" fill="rgb(212,89,29)"/><text x="756.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.35%)</title><rect x="753" y="292" width="4" height="15" fill="rgb(205,126,5)"/><text x="756.00" y="302.50"></text></g><g><title>0x7fa98c1f5204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="757" y="324" width="5" height="15" fill="rgb(233,158,18)"/><text x="760.00" y="334.50"></text></g><g><title>0x7fa9a10371a0 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="770" y="356" width="4" height="15" fill="rgb(207,102,42)"/><text x="773.00" y="366.50"></text></g><g><title>0x7fa9a106ae37 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="774" y="356" width="4" height="15" fill="rgb(216,52,49)"/><text x="777.00" y="366.50"></text></g><g><title>0x7fa9a106ae4e (libm-2.29.so) (2 samples, 0.70%)</title><rect x="778" y="356" width="8" height="15" fill="rgb(243,205,16)"/><text x="781.00" y="366.50"></text></g><g><title>0x7fa9a106ae71 (libm-2.29.so) (2 samples, 0.70%)</title><rect x="786" y="356" width="9" height="15" fill="rgb(206,60,34)"/><text x="789.00" y="366.50"></text></g><g><title>0x7fa9a106ae7e (libm-2.29.so) (1 samples, 0.35%)</title><rect x="795" y="356" width="4" height="15" fill="rgb(221,169,31)"/><text x="798.00" y="366.50"></text></g><g><title>0x7fa9a106ae96 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="799" y="356" width="4" height="15" fill="rgb(211,101,26)"/><text x="802.00" y="366.50"></text></g><g><title>0x7fa98c1f5214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (12 samples, 4.23%)</title><rect x="762" y="324" width="49" height="15" fill="rgb(248,214,0)"/><text x="765.00" y="334.50">0x7f..</text></g><g><title>expf (libm-2.29.so) (12 samples, 4.23%)</title><rect x="762" y="340" width="49" height="15" fill="rgb(206,156,8)"/><text x="765.00" y="350.50">expf..</text></g><g><title>0x7fa9a106aea6 (libm-2.29.so) (2 samples, 0.70%)</title><rect x="803" y="356" width="8" height="15" fill="rgb(215,174,36)"/><text x="806.00" y="366.50"></text></g><g><title>0x7fa98c1f5224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="811" y="324" width="5" height="15" fill="rgb(220,198,16)"/><text x="814.00" y="334.50"></text></g><g><title>0x7fa98c1d333d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (19 samples, 6.69%)</title><rect x="757" y="308" width="79" height="15" fill="rgb(254,33,45)"/><text x="760.00" y="318.50">0x7fa98c1..</text></g><g><title>0x7fa98c1f5228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.76%)</title><rect x="816" y="324" width="20" height="15" fill="rgb(235,158,25)"/><text x="819.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (20 samples, 7.04%)</title><rect x="757" y="260" width="83" height="15" fill="rgb(228,162,41)"/><text x="760.00" y="270.50">PyUFunc_G..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (20 samples, 7.04%)</title><rect x="757" y="276" width="83" height="15" fill="rgb(247,2,17)"/><text x="760.00" y="286.50">execute_l..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (20 samples, 7.04%)</title><rect x="757" y="292" width="83" height="15" fill="rgb(206,24,38)"/><text x="760.00" y="302.50">trivial_t..</text></g><g><title>0x7fa98c1d3345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="836" y="308" width="4" height="15" fill="rgb(248,187,38)"/><text x="839.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (22 samples, 7.75%)</title><rect x="753" y="228" width="92" height="15" fill="rgb(232,37,25)"/><text x="756.00" y="238.50">_run (mlpr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (21 samples, 7.39%)</title><rect x="757" y="244" width="88" height="15" fill="rgb(206,21,36)"/><text x="760.00" y="254.50">ufunc_gene..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3266) (1 samples, 0.35%)</title><rect x="840" y="260" width="5" height="15" fill="rgb(243,145,28)"/><text x="843.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.35%)</title><rect x="845" y="228" width="4" height="15" fill="rgb(252,201,46)"/><text x="848.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:5) (1 samples, 0.35%)</title><rect x="849" y="244" width="4" height="15" fill="rgb(229,166,7)"/><text x="852.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.35%)</title><rect x="853" y="260" width="4" height="15" fill="rgb(225,178,49)"/><text x="856.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:60) (1 samples, 0.35%)</title><rect x="857" y="292" width="4" height="15" fill="rgb(241,109,53)"/><text x="860.00" y="302.50"></text></g><g><title>PyArray_ArgMax (calculation.c:129) (1 samples, 0.35%)</title><rect x="861" y="324" width="4" height="15" fill="rgb(213,220,53)"/><text x="864.00" y="334.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.35%)</title><rect x="861" y="340" width="4" height="15" fill="rgb(217,140,48)"/><text x="864.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3109) (1 samples, 0.35%)</title><rect x="865" y="340" width="5" height="15" fill="rgb(216,30,7)"/><text x="868.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (3 samples, 1.06%)</title><rect x="865" y="324" width="13" height="15" fill="rgb(238,26,21)"/><text x="868.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3129) (2 samples, 0.70%)</title><rect x="870" y="340" width="8" height="15" fill="rgb(254,6,20)"/><text x="873.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (49 samples, 17.25%)</title><rect x="678" y="196" width="204" height="15" fill="rgb(218,213,4)"/><text x="681.00" y="206.50">run (mlprodict/onnxrt/ops_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (49 samples, 17.25%)</title><rect x="678" y="212" width="204" height="15" fill="rgb(230,127,35)"/><text x="681.00" y="222.50">run (mlprodict/onnxrt/ops_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (8 samples, 2.82%)</title><rect x="849" y="228" width="33" height="15" fill="rgb(251,206,33)"/><text x="852.00" y="238.50">_r..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (7 samples, 2.46%)</title><rect x="853" y="244" width="29" height="15" fill="rgb(236,76,32)"/><text x="856.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 2.11%)</title><rect x="857" y="260" width="25" height="15" fill="rgb(220,221,10)"/><text x="860.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 2.11%)</title><rect x="857" y="276" width="25" height="15" fill="rgb(213,140,39)"/><text x="860.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 1.76%)</title><rect x="861" y="292" width="21" height="15" fill="rgb(231,91,47)"/><text x="864.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (5 samples, 1.76%)</title><rect x="861" y="308" width="21" height="15" fill="rgb(234,134,35)"/><text x="864.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:132) (1 samples, 0.35%)</title><rect x="878" y="324" width="4" height="15" fill="rgb(218,170,6)"/><text x="881.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (78 samples, 27.46%)</title><rect x="566" y="180" width="324" height="15" fill="rgb(206,24,33)"/><text x="569.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (2 samples, 0.70%)</title><rect x="882" y="196" width="8" height="15" fill="rgb(215,17,53)"/><text x="885.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.35%)</title><rect x="890" y="180" width="5" height="15" fill="rgb(237,7,43)"/><text x="893.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (85 samples, 29.93%)</title><rect x="550" y="164" width="353" height="15" fill="rgb(236,108,38)"/><text x="553.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.70%)</title><rect x="895" y="180" width="8" height="15" fill="rgb(230,203,4)"/><text x="898.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:45) (87 samples, 30.63%)</title><rect x="545" y="52" width="362" height="15" fill="rgb(206,130,37)"/><text x="548.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:44) (87 samples, 30.63%)</title><rect x="545" y="68" width="362" height="15" fill="rgb(231,125,0)"/><text x="548.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:29) (87 samples, 30.63%)</title><rect x="545" y="84" width="362" height="15" fill="rgb(221,100,37)"/><text x="548.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:23) (87 samples, 30.63%)</title><rect x="545" y="100" width="362" height="15" fill="rgb(219,65,35)"/><text x="548.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (87 samples, 30.63%)</title><rect x="545" y="116" width="362" height="15" fill="rgb(219,49,38)"/><text x="548.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (87 samples, 30.63%)</title><rect x="545" y="132" width="362" height="15" fill="rgb(213,160,54)"/><text x="548.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (86 samples, 30.28%)</title><rect x="550" y="148" width="357" height="15" fill="rgb(242,182,31)"/><text x="553.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:546) (1 samples, 0.35%)</title><rect x="903" y="164" width="4" height="15" fill="rgb(206,191,49)"/><text x="906.00" y="174.50"></text></g><g><title>0x7fa960f5bff9 (?) (1 samples, 0.35%)</title><rect x="907" y="212" width="4" height="15" fill="rgb(209,121,47)"/><text x="910.00" y="222.50"></text></g><g><title>0x7fa960f56ef6 (?) (1 samples, 0.35%)</title><rect x="907" y="228" width="4" height="15" fill="rgb(213,16,53)"/><text x="910.00" y="238.50"></text></g><g><title>0x7fa960f4b962 (?) (1 samples, 0.35%)</title><rect x="907" y="244" width="4" height="15" fill="rgb(239,51,54)"/><text x="910.00" y="254.50"></text></g><g><title>0x7fa960f7f7a7 (?) (1 samples, 0.35%)</title><rect x="907" y="260" width="4" height="15" fill="rgb(246,197,12)"/><text x="910.00" y="270.50"></text></g><g><title>0x7fa960f7f379 (?) (1 samples, 0.35%)</title><rect x="907" y="276" width="4" height="15" fill="rgb(221,82,12)"/><text x="910.00" y="286.50"></text></g><g><title>0x7fa9613dd8b8 (?) (1 samples, 0.35%)</title><rect x="907" y="292" width="4" height="15" fill="rgb(224,126,29)"/><text x="910.00" y="302.50"></text></g><g><title>0x7fa9613dbc7f (?) (1 samples, 0.35%)</title><rect x="907" y="308" width="4" height="15" fill="rgb(217,29,12)"/><text x="910.00" y="318.50"></text></g><g><title>0x7fa9613ee99c (?) (1 samples, 0.35%)</title><rect x="907" y="324" width="4" height="15" fill="rgb(219,6,17)"/><text x="910.00" y="334.50"></text></g><g><title>0x7fa9610ddc5b (?) (1 samples, 0.35%)</title><rect x="907" y="340" width="4" height="15" fill="rgb(253,15,35)"/><text x="910.00" y="350.50"></text></g><g><title>0x7fa9610d9bcb (?) (1 samples, 0.35%)</title><rect x="907" y="356" width="4" height="15" fill="rgb(240,72,18)"/><text x="910.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="911" y="340" width="4" height="15" fill="rgb(230,199,15)"/><text x="914.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="911" y="356" width="4" height="15" fill="rgb(240,113,3)"/><text x="914.00" y="366.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:18) (3 samples, 1.06%)</title><rect x="907" y="100" width="12" height="15" fill="rgb(241,57,51)"/><text x="910.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 1.06%)</title><rect x="907" y="116" width="12" height="15" fill="rgb(210,208,49)"/><text x="910.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (3 samples, 1.06%)</title><rect x="907" y="132" width="12" height="15" fill="rgb(207,48,24)"/><text x="910.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (3 samples, 1.06%)</title><rect x="907" y="148" width="12" height="15" fill="rgb(213,7,42)"/><text x="910.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (3 samples, 1.06%)</title><rect x="907" y="164" width="12" height="15" fill="rgb(225,112,27)"/><text x="910.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (3 samples, 1.06%)</title><rect x="907" y="180" width="12" height="15" fill="rgb(246,68,44)"/><text x="910.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (3 samples, 1.06%)</title><rect x="907" y="196" width="12" height="15" fill="rgb(210,123,23)"/><text x="910.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="911" y="212" width="8" height="15" fill="rgb(217,19,18)"/><text x="914.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="911" y="228" width="8" height="15" fill="rgb(227,210,18)"/><text x="914.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="911" y="244" width="8" height="15" fill="rgb(206,125,34)"/><text x="914.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="911" y="260" width="8" height="15" fill="rgb(249,189,39)"/><text x="914.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="911" y="276" width="8" height="15" fill="rgb(219,47,44)"/><text x="914.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="911" y="292" width="8" height="15" fill="rgb(249,134,26)"/><text x="914.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="911" y="308" width="8" height="15" fill="rgb(245,203,32)"/><text x="914.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="911" y="324" width="8" height="15" fill="rgb(217,13,38)"/><text x="914.00" y="334.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="915" y="340" width="4" height="15" fill="rgb(244,10,36)"/><text x="918.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="915" y="356" width="4" height="15" fill="rgb(221,103,31)"/><text x="918.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="915" y="372" width="4" height="15" fill="rgb(236,84,53)"/><text x="918.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="915" y="388" width="4" height="15" fill="rgb(251,213,44)"/><text x="918.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="915" y="404" width="4" height="15" fill="rgb(252,227,34)"/><text x="918.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="915" y="420" width="4" height="15" fill="rgb(224,119,54)"/><text x="918.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="915" y="436" width="4" height="15" fill="rgb(212,191,6)"/><text x="918.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="915" y="452" width="4" height="15" fill="rgb(222,0,44)"/><text x="918.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.35%)</title><rect x="919" y="148" width="5" height="15" fill="rgb(212,188,12)"/><text x="922.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.35%)</title><rect x="924" y="196" width="4" height="15" fill="rgb(243,218,0)"/><text x="927.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.35%)</title><rect x="924" y="212" width="4" height="15" fill="rgb(227,51,9)"/><text x="927.00" y="222.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="944" y="292" width="5" height="15" fill="rgb(232,188,45)"/><text x="947.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="944" y="308" width="5" height="15" fill="rgb(235,121,44)"/><text x="947.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="944" y="324" width="5" height="15" fill="rgb(209,170,14)"/><text x="947.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="949" y="292" width="4" height="15" fill="rgb(218,167,48)"/><text x="952.00" y="302.50"></text></g><g><title>0x7fa9a0eeb922 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="949" y="308" width="4" height="15" fill="rgb(248,60,21)"/><text x="952.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="953" y="292" width="4" height="15" fill="rgb(236,122,23)"/><text x="956.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.06%)</title><rect x="961" y="340" width="12" height="15" fill="rgb(228,121,27)"/><text x="964.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="969" y="356" width="4" height="15" fill="rgb(244,182,33)"/><text x="972.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1048" y="356" width="4" height="15" fill="rgb(215,31,5)"/><text x="1051.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1048" y="372" width="4" height="15" fill="rgb(239,210,0)"/><text x="1051.00" y="382.50"></text></g><g><title>0x7fa9a0f0bd50 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1102" y="372" width="4" height="15" fill="rgb(234,41,54)"/><text x="1105.00" y="382.50"></text></g><g><title>0x7fa9a0f0bd97 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1106" y="372" width="5" height="15" fill="rgb(216,221,45)"/><text x="1109.00" y="382.50"></text></g><g><title>0x7fa9a0f0bdb3 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1111" y="372" width="4" height="15" fill="rgb(254,22,46)"/><text x="1114.00" y="382.50"></text></g><g><title>0x7fa9a106ae14 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="1115" y="372" width="4" height="15" fill="rgb(238,159,5)"/><text x="1118.00" y="382.50"></text></g><g><title>0x7fa9a106ae92 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="1119" y="372" width="4" height="15" fill="rgb(248,158,32)"/><text x="1122.00" y="382.50"></text></g><g><title>0x7fa9a106ae96 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="1123" y="372" width="4" height="15" fill="rgb(247,184,40)"/><text x="1126.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 13.73%)</title><rect x="973" y="340" width="162" height="15" fill="rgb(247,14,23)"/><text x="976.00" y="350.50">onnxruntime::ml::Lin..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 7.04%)</title><rect x="1052" y="356" width="83" height="15" fill="rgb(213,189,51)"/><text x="1055.00" y="366.50">onnxrunti..</text></g><g><title>0x7fa9a106aea2 (libm-2.29.so) (2 samples, 0.70%)</title><rect x="1127" y="372" width="8" height="15" fill="rgb(238,0,40)"/><text x="1130.00" y="382.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (54 samples, 19.01%)</title><rect x="957" y="308" width="224" height="15" fill="rgb(235,134,48)"/><text x="960.00" y="318.50">onnxruntime::utils::ExecuteGr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (54 samples, 19.01%)</title><rect x="957" y="324" width="224" height="15" fill="rgb(216,150,40)"/><text x="960.00" y="334.50">onnxruntime::SequentialExecut..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.87%)</title><rect x="1135" y="340" width="46" height="15" fill="rgb(250,167,22)"/><text x="1138.00" y="350.50">onnx..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.87%)</title><rect x="1135" y="356" width="46" height="15" fill="rgb(223,94,48)"/><text x="1138.00" y="366.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 20.42%)</title><rect x="944" y="260" width="241" height="15" fill="rgb(216,179,45)"/><text x="947.00" y="270.50">onnxruntime::InferenceSession::R..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 20.42%)</title><rect x="944" y="276" width="241" height="15" fill="rgb(227,69,34)"/><text x="947.00" y="286.50">onnxruntime::InferenceSession::R..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (55 samples, 19.37%)</title><rect x="957" y="292" width="228" height="15" fill="rgb(232,172,3)"/><text x="960.00" y="302.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1181" y="308" width="4" height="15" fill="rgb(213,61,27)"/><text x="1184.00" y="318.50"></text></g><g><title>all (284 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(225,64,8)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:52) (68 samples, 23.94%)</title><rect x="907" y="52" width="283" height="15" fill="rgb(213,176,46)"/><text x="910.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_li..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:51) (68 samples, 23.94%)</title><rect x="907" y="68" width="283" height="15" fill="rgb(233,118,16)"/><text x="910.00" y="78.50">profile_ort (bench_LogisticRegression..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:29) (68 samples, 23.94%)</title><rect x="907" y="84" width="283" height="15" fill="rgb(228,108,52)"/><text x="910.00" y="94.50">setup_profile (bench_LogisticRegressi..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_nozipmap.py:23) (65 samples, 22.89%)</title><rect x="919" y="100" width="271" height="15" fill="rgb(205,157,4)"/><text x="922.00" y="110.50">profile (bench_LogisticRegression_li..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (65 samples, 22.89%)</title><rect x="919" y="116" width="271" height="15" fill="rgb(211,12,50)"/><text x="922.00" y="126.50">time_predict (mlprodict/asv_benchmar..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (65 samples, 22.89%)</title><rect x="919" y="132" width="271" height="15" fill="rgb(244,93,22)"/><text x="922.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (64 samples, 22.54%)</title><rect x="924" y="148" width="266" height="15" fill="rgb(239,30,0)"/><text x="927.00" y="158.50">run (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (64 samples, 22.54%)</title><rect x="924" y="164" width="266" height="15" fill="rgb(211,111,3)"/><text x="927.00" y="174.50">_run_whole_runtime (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (64 samples, 22.54%)</title><rect x="924" y="180" width="266" height="15" fill="rgb(213,80,6)"/><text x="927.00" y="190.50">run (mlprodict/onnxrt/ops_whole/ses..</text></g><g><title>run (onnxruntime/capi/session.py:136) (63 samples, 22.18%)</title><rect x="928" y="196" width="262" height="15" fill="rgb(239,53,11)"/><text x="931.00" y="206.50">run (onnxruntime/capi/session.py:13..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (61 samples, 21.48%)</title><rect x="936" y="212" width="254" height="15" fill="rgb(243,143,37)"/><text x="939.00" y="222.50">pybind11::cpp_function::dispatche..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (61 samples, 21.48%)</title><rect x="936" y="228" width="254" height="15" fill="rgb(207,113,43)"/><text x="939.00" y="238.50">void pybind11::cpp_function::init..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (61 samples, 21.48%)</title><rect x="936" y="244" width="254" height="15" fill="rgb(240,210,38)"/><text x="939.00" y="254.50">onnxruntime::python::addObjectMet..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1185" y="260" width="5" height="15" fill="rgb(225,10,16)"/><text x="1188.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.35%)</title><rect x="1185" y="276" width="5" height="15" fill="rgb(240,148,42)"/><text x="1188.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.35%)</title><rect x="1185" y="292" width="5" height="15" fill="rgb(253,133,15)"/><text x="1188.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.35%)</title><rect x="1185" y="308" width="5" height="15" fill="rgb(221,99,36)"/><text x="1188.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.35%)</title><rect x="1185" y="324" width="5" height="15" fill="rgb(244,123,20)"/><text x="1188.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.35%)</title><rect x="1185" y="340" width="5" height="15" fill="rgb(217,180,32)"/><text x="1188.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1185" y="356" width="5" height="15" fill="rgb(217,4,3)"/><text x="1188.00" y="366.50"></text></g><g><title>0x7fa9a0eed2a3 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1185" y="372" width="5" height="15" fill="rgb(224,197,50)"/><text x="1188.00" y="382.50"></text></g></g></svg>