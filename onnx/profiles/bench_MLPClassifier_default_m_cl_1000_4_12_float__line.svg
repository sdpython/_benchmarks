<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2182" onload="init(evt)" viewBox="0 0 1200 2182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2182" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2165.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2165.00"> </text><g id="frames"><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:515) (1 samples, 0.15%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(245,72,42)"/><text x="13.00" y="158.50"></text></g><g><title>shuffle (sklearn/utils/__init__.py:699) (1 samples, 0.15%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(215,194,17)"/><text x="13.00" y="174.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:521) (1 samples, 0.15%)</title><rect x="11" y="148" width="2" height="15" fill="rgb(213,50,21)"/><text x="14.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:230) (1 samples, 0.15%)</title><rect x="11" y="164" width="2" height="15" fill="rgb(231,100,44)"/><text x="14.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/neural_network/_multilayer_perceptron.py:230) (1 samples, 0.15%)</title><rect x="11" y="180" width="2" height="15" fill="rgb(215,44,42)"/><text x="14.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.15%)</title><rect x="11" y="196" width="2" height="15" fill="rgb(229,14,9)"/><text x="14.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.15%)</title><rect x="11" y="212" width="2" height="15" fill="rgb(217,98,38)"/><text x="14.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.15%)</title><rect x="11" y="228" width="2" height="15" fill="rgb(238,56,7)"/><text x="14.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:31) (3 samples, 0.45%)</title><rect x="10" y="52" width="5" height="15" fill="rgb(254,163,5)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:11) (3 samples, 0.45%)</title><rect x="10" y="68" width="5" height="15" fill="rgb(237,161,31)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:39) (3 samples, 0.45%)</title><rect x="10" y="84" width="5" height="15" fill="rgb(252,71,21)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 0.45%)</title><rect x="10" y="100" width="5" height="15" fill="rgb(239,20,38)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py:995) (3 samples, 0.45%)</title><rect x="10" y="116" width="5" height="15" fill="rgb(250,120,11)"/><text x="13.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py:370) (3 samples, 0.45%)</title><rect x="10" y="132" width="5" height="15" fill="rgb(240,25,27)"/><text x="13.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:533) (1 samples, 0.15%)</title><rect x="13" y="148" width="2" height="15" fill="rgb(232,136,10)"/><text x="16.00" y="158.50"></text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:18) (1 samples, 0.15%)</title><rect x="15" y="100" width="2" height="15" fill="rgb(251,175,23)"/><text x="18.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.15%)</title><rect x="15" y="116" width="2" height="15" fill="rgb(215,105,37)"/><text x="18.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (1 samples, 0.15%)</title><rect x="15" y="132" width="2" height="15" fill="rgb(247,220,4)"/><text x="18.00" y="142.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1072) (1 samples, 0.15%)</title><rect x="15" y="148" width="2" height="15" fill="rgb(252,168,20)"/><text x="18.00" y="158.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (1 samples, 0.15%)</title><rect x="15" y="164" width="2" height="15" fill="rgb(245,198,12)"/><text x="18.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (1 samples, 0.15%)</title><rect x="15" y="180" width="2" height="15" fill="rgb(229,143,54)"/><text x="18.00" y="190.50"></text></g><g><title>relu (sklearn/neural_network/_base.py:75) (1 samples, 0.15%)</title><rect x="15" y="196" width="2" height="15" fill="rgb(229,171,52)"/><text x="18.00" y="206.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.15%)</title><rect x="15" y="212" width="2" height="15" fill="rgb(247,2,28)"/><text x="18.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.15%)</title><rect x="15" y="228" width="2" height="15" fill="rgb(221,180,41)"/><text x="18.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.15%)</title><rect x="15" y="244" width="2" height="15" fill="rgb(252,66,25)"/><text x="18.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.15%)</title><rect x="15" y="260" width="2" height="15" fill="rgb(252,212,20)"/><text x="18.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.15%)</title><rect x="15" y="276" width="2" height="15" fill="rgb(226,144,15)"/><text x="18.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.15%)</title><rect x="15" y="292" width="2" height="15" fill="rgb(239,198,40)"/><text x="18.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (1 samples, 0.15%)</title><rect x="15" y="308" width="2" height="15" fill="rgb(247,138,26)"/><text x="18.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (1 samples, 0.15%)</title><rect x="15" y="324" width="2" height="15" fill="rgb(219,76,31)"/><text x="18.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.15%)</title><rect x="15" y="340" width="2" height="15" fill="rgb(234,223,14)"/><text x="18.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.15%)</title><rect x="15" y="356" width="2" height="15" fill="rgb(252,59,5)"/><text x="18.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.15%)</title><rect x="15" y="372" width="2" height="15" fill="rgb(205,122,3)"/><text x="18.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.15%)</title><rect x="15" y="388" width="2" height="15" fill="rgb(234,217,46)"/><text x="18.00" y="398.50"></text></g><g><title>DOUBLE_clip (clip.c.src:97) (1 samples, 0.15%)</title><rect x="15" y="404" width="2" height="15" fill="rgb(209,73,20)"/><text x="18.00" y="414.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.15%)</title><rect x="24" y="180" width="1" height="15" fill="rgb(217,168,49)"/><text x="27.00" y="190.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1071) (6 samples, 0.89%)</title><rect x="20" y="148" width="11" height="15" fill="rgb(217,122,26)"/><text x="23.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 0.89%)</title><rect x="20" y="164" width="11" height="15" fill="rgb(229,222,9)"/><text x="23.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.45%)</title><rect x="25" y="180" width="6" height="15" fill="rgb(212,73,9)"/><text x="28.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.15%)</title><rect x="29" y="196" width="2" height="15" fill="rgb(217,150,17)"/><text x="32.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.15%)</title><rect x="32" y="196" width="2" height="15" fill="rgb(212,106,17)"/><text x="35.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.30%)</title><rect x="32" y="180" width="4" height="15" fill="rgb(224,58,26)"/><text x="35.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.15%)</title><rect x="34" y="196" width="2" height="15" fill="rgb(245,207,40)"/><text x="37.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.15%)</title><rect x="36" y="180" width="2" height="15" fill="rgb(225,117,12)"/><text x="39.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.15%)</title><rect x="36" y="196" width="2" height="15" fill="rgb(232,218,20)"/><text x="39.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.15%)</title><rect x="36" y="212" width="2" height="15" fill="rgb(213,193,16)"/><text x="39.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.15%)</title><rect x="38" y="180" width="1" height="15" fill="rgb(239,216,33)"/><text x="41.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.15%)</title><rect x="38" y="196" width="1" height="15" fill="rgb(214,163,45)"/><text x="41.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1646) (1 samples, 0.15%)</title><rect x="38" y="212" width="1" height="15" fill="rgb(227,144,31)"/><text x="41.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.15%)</title><rect x="39" y="180" width="2" height="15" fill="rgb(219,194,11)"/><text x="42.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.15%)</title><rect x="39" y="196" width="2" height="15" fill="rgb(231,15,13)"/><text x="42.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.15%)</title><rect x="41" y="180" width="2" height="15" fill="rgb(236,192,11)"/><text x="44.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.15%)</title><rect x="41" y="196" width="2" height="15" fill="rgb(251,1,42)"/><text x="44.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.15%)</title><rect x="43" y="196" width="2" height="15" fill="rgb(249,179,16)"/><text x="46.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.15%)</title><rect x="43" y="212" width="2" height="15" fill="rgb(245,163,6)"/><text x="46.00" y="222.50"></text></g><g><title>0x7f947cee6e7a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="43" y="228" width="2" height="15" fill="rgb(239,210,9)"/><text x="46.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (2 samples, 0.30%)</title><rect x="43" y="180" width="3" height="15" fill="rgb(223,122,12)"/><text x="46.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.15%)</title><rect x="45" y="196" width="1" height="15" fill="rgb(222,64,41)"/><text x="48.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.15%)</title><rect x="45" y="212" width="1" height="15" fill="rgb(232,136,48)"/><text x="48.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.15%)</title><rect x="46" y="180" width="2" height="15" fill="rgb(237,224,31)"/><text x="49.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.15%)</title><rect x="46" y="196" width="2" height="15" fill="rgb(242,114,12)"/><text x="49.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.15%)</title><rect x="46" y="212" width="2" height="15" fill="rgb(242,37,4)"/><text x="49.00" y="222.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:667) (11 samples, 1.63%)</title><rect x="31" y="164" width="19" height="15" fill="rgb(234,89,18)"/><text x="34.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.15%)</title><rect x="48" y="180" width="2" height="15" fill="rgb(251,174,34)"/><text x="51.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.15%)</title><rect x="48" y="196" width="2" height="15" fill="rgb(218,82,50)"/><text x="51.00" y="206.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:682) (1 samples, 0.15%)</title><rect x="50" y="164" width="2" height="15" fill="rgb(219,96,21)"/><text x="53.00" y="174.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.15%)</title><rect x="50" y="180" width="2" height="15" fill="rgb(234,199,11)"/><text x="53.00" y="190.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:100) (1 samples, 0.15%)</title><rect x="52" y="180" width="1" height="15" fill="rgb(220,64,53)"/><text x="55.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.15%)</title><rect x="52" y="196" width="1" height="15" fill="rgb(216,210,4)"/><text x="55.00" y="206.50"></text></g><g><title>0x7f947cfae134 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="52" y="212" width="1" height="15" fill="rgb(251,52,24)"/><text x="55.00" y="222.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.04%)</title><rect x="55" y="212" width="12" height="15" fill="rgb(252,4,10)"/><text x="58.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (10 samples, 1.48%)</title><rect x="67" y="212" width="18" height="15" fill="rgb(228,118,12)"/><text x="70.00" y="222.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.15%)</title><rect x="85" y="276" width="2" height="15" fill="rgb(237,209,0)"/><text x="88.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (1 samples, 0.15%)</title><rect x="85" y="292" width="2" height="15" fill="rgb(242,134,51)"/><text x="88.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (2 samples, 0.30%)</title><rect x="85" y="244" width="3" height="15" fill="rgb(236,171,11)"/><text x="88.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.30%)</title><rect x="85" y="260" width="3" height="15" fill="rgb(207,212,40)"/><text x="88.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (1 samples, 0.15%)</title><rect x="87" y="276" width="1" height="15" fill="rgb(224,124,9)"/><text x="90.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.15%)</title><rect x="87" y="292" width="1" height="15" fill="rgb(219,142,40)"/><text x="90.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.15%)</title><rect x="87" y="308" width="1" height="15" fill="rgb(248,28,38)"/><text x="90.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.15%)</title><rect x="87" y="324" width="1" height="15" fill="rgb(218,158,35)"/><text x="90.00" y="334.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="88" y="292" width="2" height="15" fill="rgb(228,199,13)"/><text x="91.00" y="302.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="90" y="340" width="2" height="15" fill="rgb(223,61,51)"/><text x="93.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="90" y="356" width="2" height="15" fill="rgb(243,226,4)"/><text x="93.00" y="366.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (38 samples, 5.64%)</title><rect x="92" y="340" width="66" height="15" fill="rgb(221,100,47)"/><text x="95.00" y="350.50">exec_bl..</text></g><g><title>sched_yield (libc-2.29.so) (38 samples, 5.64%)</title><rect x="92" y="356" width="66" height="15" fill="rgb(248,80,12)"/><text x="95.00" y="366.50">sched_y..</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (64 samples, 9.50%)</title><rect x="53" y="180" width="112" height="15" fill="rgb(223,113,39)"/><text x="56.00" y="190.50">_forward_pass..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (64 samples, 9.50%)</title><rect x="53" y="196" width="112" height="15" fill="rgb(253,18,39)"/><text x="56.00" y="206.50">safe_sparse_d..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (46 samples, 6.82%)</title><rect x="85" y="212" width="80" height="15" fill="rgb(214,228,4)"/><text x="88.00" y="222.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (46 samples, 6.82%)</title><rect x="85" y="228" width="80" height="15" fill="rgb(248,33,0)"/><text x="88.00" y="238.50">PyUFunc_G..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (44 samples, 6.53%)</title><rect x="88" y="244" width="77" height="15" fill="rgb(211,137,1)"/><text x="91.00" y="254.50">PyUFunc_..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (44 samples, 6.53%)</title><rect x="88" y="260" width="77" height="15" fill="rgb(220,221,15)"/><text x="91.00" y="270.50">DOUBLE_m..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (44 samples, 6.53%)</title><rect x="88" y="276" width="77" height="15" fill="rgb(229,151,50)"/><text x="91.00" y="286.50">cblas_dg..</text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (43 samples, 6.38%)</title><rect x="90" y="292" width="75" height="15" fill="rgb(211,1,41)"/><text x="93.00" y="302.50">dgemm_th..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (43 samples, 6.38%)</title><rect x="90" y="308" width="75" height="15" fill="rgb(207,165,13)"/><text x="93.00" y="318.50">gemm_dri..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (43 samples, 6.38%)</title><rect x="90" y="324" width="75" height="15" fill="rgb(212,171,29)"/><text x="93.00" y="334.50">exec_bla..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.59%)</title><rect x="158" y="340" width="7" height="15" fill="rgb(240,183,9)"/><text x="161.00" y="350.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.45%)</title><rect x="160" y="356" width="5" height="15" fill="rgb(247,178,3)"/><text x="163.00" y="366.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (5 samples, 0.74%)</title><rect x="165" y="292" width="9" height="15" fill="rgb(205,118,35)"/><text x="168.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (5 samples, 0.74%)</title><rect x="165" y="308" width="9" height="15" fill="rgb(212,169,39)"/><text x="168.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (7 samples, 1.04%)</title><rect x="165" y="260" width="13" height="15" fill="rgb(247,109,27)"/><text x="168.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (7 samples, 1.04%)</title><rect x="165" y="276" width="13" height="15" fill="rgb(216,47,24)"/><text x="168.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (2 samples, 0.30%)</title><rect x="174" y="292" width="4" height="15" fill="rgb(234,138,26)"/><text x="177.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.30%)</title><rect x="174" y="308" width="4" height="15" fill="rgb(229,116,42)"/><text x="177.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.15%)</title><rect x="178" y="292" width="1" height="15" fill="rgb(249,42,2)"/><text x="181.00" y="302.50"></text></g><g><title>0x7f947cef0f4a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="179" y="308" width="2" height="15" fill="rgb(213,57,51)"/><text x="182.00" y="318.50"></text></g><g><title>0x7f947cef0f58 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="181" y="308" width="2" height="15" fill="rgb(219,147,0)"/><text x="184.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.45%)</title><rect x="179" y="292" width="6" height="15" fill="rgb(229,127,31)"/><text x="182.00" y="302.50"></text></g><g><title>0x7f947cef0f5d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="183" y="308" width="2" height="15" fill="rgb(221,39,23)"/><text x="186.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 1.78%)</title><rect x="165" y="212" width="21" height="15" fill="rgb(233,53,7)"/><text x="168.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (12 samples, 1.78%)</title><rect x="165" y="228" width="21" height="15" fill="rgb(231,181,43)"/><text x="168.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (12 samples, 1.78%)</title><rect x="165" y="244" width="21" height="15" fill="rgb(244,104,29)"/><text x="168.00" y="254.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:322) (5 samples, 0.74%)</title><rect x="178" y="260" width="8" height="15" fill="rgb(207,31,24)"/><text x="181.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.74%)</title><rect x="178" y="276" width="8" height="15" fill="rgb(232,40,28)"/><text x="181.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:996) (1 samples, 0.15%)</title><rect x="185" y="292" width="1" height="15" fill="rgb(238,42,32)"/><text x="188.00" y="302.50"></text></g><g><title>0x7f947cef0f36 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="185" y="308" width="1" height="15" fill="rgb(253,141,27)"/><text x="188.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 1.93%)</title><rect x="165" y="196" width="23" height="15" fill="rgb(209,185,40)"/><text x="168.00" y="206.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3266) (1 samples, 0.15%)</title><rect x="186" y="212" width="2" height="15" fill="rgb(248,207,7)"/><text x="189.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.15%)</title><rect x="188" y="196" width="2" height="15" fill="rgb(212,53,1)"/><text x="191.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.15%)</title><rect x="188" y="212" width="2" height="15" fill="rgb(217,194,5)"/><text x="191.00" y="222.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:105) (15 samples, 2.23%)</title><rect x="165" y="180" width="27" height="15" fill="rgb(242,34,30)"/><text x="168.00" y="190.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.15%)</title><rect x="190" y="196" width="2" height="15" fill="rgb(240,159,49)"/><text x="193.00" y="206.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.15%)</title><rect x="190" y="212" width="2" height="15" fill="rgb(233,205,43)"/><text x="193.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.15%)</title><rect x="193" y="212" width="2" height="15" fill="rgb(214,103,38)"/><text x="196.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2261) (1 samples, 0.15%)</title><rect x="193" y="228" width="2" height="15" fill="rgb(252,128,50)"/><text x="196.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.15%)</title><rect x="195" y="212" width="2" height="15" fill="rgb(241,200,3)"/><text x="198.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.15%)</title><rect x="195" y="228" width="2" height="15" fill="rgb(243,30,48)"/><text x="198.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.15%)</title><rect x="195" y="244" width="2" height="15" fill="rgb(217,2,48)"/><text x="198.00" y="254.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.15%)</title><rect x="195" y="260" width="2" height="15" fill="rgb(251,163,12)"/><text x="198.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.15%)</title><rect x="195" y="276" width="2" height="15" fill="rgb(242,39,34)"/><text x="198.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.15%)</title><rect x="195" y="292" width="2" height="15" fill="rgb(228,132,18)"/><text x="198.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (1 samples, 0.15%)</title><rect x="195" y="308" width="2" height="15" fill="rgb(209,40,37)"/><text x="198.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:105) (1 samples, 0.15%)</title><rect x="197" y="308" width="2" height="15" fill="rgb(236,85,24)"/><text x="200.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.15%)</title><rect x="200" y="356" width="2" height="15" fill="rgb(208,107,19)"/><text x="203.00" y="366.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.15%)</title><rect x="200" y="372" width="2" height="15" fill="rgb(215,155,11)"/><text x="203.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (3 samples, 0.45%)</title><rect x="199" y="308" width="5" height="15" fill="rgb(247,27,20)"/><text x="202.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.45%)</title><rect x="199" y="324" width="5" height="15" fill="rgb(215,126,47)"/><text x="202.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.30%)</title><rect x="200" y="340" width="4" height="15" fill="rgb(205,182,29)"/><text x="203.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3285) (1 samples, 0.15%)</title><rect x="202" y="356" width="2" height="15" fill="rgb(214,212,45)"/><text x="205.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.15%)</title><rect x="204" y="340" width="2" height="15" fill="rgb(223,48,28)"/><text x="207.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.15%)</title><rect x="204" y="356" width="2" height="15" fill="rgb(212,24,31)"/><text x="207.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.15%)</title><rect x="204" y="372" width="2" height="15" fill="rgb(249,117,31)"/><text x="207.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.15%)</title><rect x="204" y="388" width="2" height="15" fill="rgb(246,176,21)"/><text x="207.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.15%)</title><rect x="204" y="404" width="2" height="15" fill="rgb(208,7,27)"/><text x="207.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.15%)</title><rect x="204" y="420" width="2" height="15" fill="rgb(227,87,38)"/><text x="207.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.15%)</title><rect x="206" y="356" width="1" height="15" fill="rgb(226,192,10)"/><text x="209.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.15%)</title><rect x="206" y="372" width="1" height="15" fill="rgb(247,99,53)"/><text x="209.00" y="382.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:61) (1 samples, 0.15%)</title><rect x="206" y="388" width="1" height="15" fill="rgb(217,87,18)"/><text x="209.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.15%)</title><rect x="206" y="404" width="1" height="15" fill="rgb(238,212,42)"/><text x="209.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.15%)</title><rect x="206" y="420" width="1" height="15" fill="rgb(244,167,51)"/><text x="209.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.15%)</title><rect x="206" y="436" width="1" height="15" fill="rgb(253,127,34)"/><text x="209.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.15%)</title><rect x="207" y="388" width="2" height="15" fill="rgb(217,177,35)"/><text x="210.00" y="398.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.15%)</title><rect x="207" y="404" width="2" height="15" fill="rgb(205,44,4)"/><text x="210.00" y="414.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.15%)</title><rect x="207" y="420" width="2" height="15" fill="rgb(210,122,54)"/><text x="210.00" y="430.50"></text></g><g><title>DOUBLE_clip (clip.c.src:96) (12 samples, 1.78%)</title><rect x="209" y="404" width="21" height="15" fill="rgb(240,13,45)"/><text x="212.00" y="414.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (48 samples, 7.12%)</title><rect x="192" y="180" width="84" height="15" fill="rgb(241,143,7)"/><text x="195.00" y="190.50">_forward_..</text></g><g><title>relu (sklearn/neural_network/_base.py:75) (48 samples, 7.12%)</title><rect x="192" y="196" width="84" height="15" fill="rgb(212,82,34)"/><text x="195.00" y="206.50">relu (skl..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (45 samples, 6.68%)</title><rect x="197" y="212" width="79" height="15" fill="rgb(241,180,9)"/><text x="200.00" y="222.50">clip (&lt;__..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (45 samples, 6.68%)</title><rect x="197" y="228" width="79" height="15" fill="rgb(252,57,47)"/><text x="200.00" y="238.50">array_imp..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (45 samples, 6.68%)</title><rect x="197" y="244" width="79" height="15" fill="rgb(225,201,4)"/><text x="200.00" y="254.50">clip (num..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (45 samples, 6.68%)</title><rect x="197" y="260" width="79" height="15" fill="rgb(220,163,24)"/><text x="200.00" y="270.50">_wrapfunc..</text></g><g><title>array_clip (methods.c:2381) (45 samples, 6.68%)</title><rect x="197" y="276" width="79" height="15" fill="rgb(252,100,53)"/><text x="200.00" y="286.50">array_cli..</text></g><g><title>forward_ndarray_method (methods.c:108) (45 samples, 6.68%)</title><rect x="197" y="292" width="79" height="15" fill="rgb(252,148,49)"/><text x="200.00" y="302.50">forward_n..</text></g><g><title>_clip (numpy/core/_methods.py:132) (41 samples, 6.08%)</title><rect x="204" y="308" width="72" height="15" fill="rgb(242,176,49)"/><text x="207.00" y="318.50">_clip (n..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (41 samples, 6.08%)</title><rect x="204" y="324" width="72" height="15" fill="rgb(247,222,38)"/><text x="207.00" y="334.50">_clip_de..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (40 samples, 5.93%)</title><rect x="206" y="340" width="70" height="15" fill="rgb(222,30,15)"/><text x="209.00" y="350.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (39 samples, 5.79%)</title><rect x="207" y="356" width="69" height="15" fill="rgb(217,10,36)"/><text x="210.00" y="366.50">PyUFunc..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (39 samples, 5.79%)</title><rect x="207" y="372" width="69" height="15" fill="rgb(234,221,16)"/><text x="210.00" y="382.50">execute..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (38 samples, 5.64%)</title><rect x="209" y="388" width="67" height="15" fill="rgb(254,128,23)"/><text x="212.00" y="398.50">iterato..</text></g><g><title>DOUBLE_clip (clip.c.src:97) (26 samples, 3.86%)</title><rect x="230" y="404" width="46" height="15" fill="rgb(210,128,54)"/><text x="233.00" y="414.50">DOUB..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.15%)</title><rect x="276" y="244" width="1" height="15" fill="rgb(212,219,24)"/><text x="279.00" y="254.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.15%)</title><rect x="276" y="260" width="1" height="15" fill="rgb(226,4,37)"/><text x="279.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.15%)</title><rect x="276" y="276" width="1" height="15" fill="rgb(226,164,23)"/><text x="279.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.15%)</title><rect x="276" y="292" width="1" height="15" fill="rgb(227,34,31)"/><text x="279.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.15%)</title><rect x="277" y="276" width="2" height="15" fill="rgb(217,112,11)"/><text x="280.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.15%)</title><rect x="277" y="292" width="2" height="15" fill="rgb(210,90,42)"/><text x="280.00" y="302.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:92) (3 samples, 0.45%)</title><rect x="276" y="196" width="5" height="15" fill="rgb(216,140,34)"/><text x="279.00" y="206.50"></text></g><g><title>array_subtract (number.c:342) (3 samples, 0.45%)</title><rect x="276" y="212" width="5" height="15" fill="rgb(237,177,18)"/><text x="279.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.45%)</title><rect x="276" y="228" width="5" height="15" fill="rgb(205,224,48)"/><text x="279.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.30%)</title><rect x="277" y="244" width="4" height="15" fill="rgb(216,47,53)"/><text x="280.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.30%)</title><rect x="277" y="260" width="4" height="15" fill="rgb(222,227,11)"/><text x="280.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.15%)</title><rect x="279" y="276" width="2" height="15" fill="rgb(232,224,33)"/><text x="282.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.15%)</title><rect x="279" y="292" width="2" height="15" fill="rgb(252,120,0)"/><text x="282.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.15%)</title><rect x="279" y="308" width="2" height="15" fill="rgb(218,53,6)"/><text x="282.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.15%)</title><rect x="279" y="324" width="2" height="15" fill="rgb(207,103,13)"/><text x="282.00" y="334.50"></text></g><g><title>0x7f947d0a2ba0 (libm-2.29.so) (2 samples, 0.30%)</title><rect x="290" y="308" width="3" height="15" fill="rgb(250,87,44)"/><text x="293.00" y="318.50"></text></g><g><title>0x7f947d0a2c04 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="293" y="308" width="2" height="15" fill="rgb(218,140,44)"/><text x="296.00" y="318.50"></text></g><g><title>0x7f947d0a2c2e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="295" y="308" width="2" height="15" fill="rgb(245,216,12)"/><text x="298.00" y="318.50"></text></g><g><title>0x7f947d0a2c5a (libm-2.29.so) (1 samples, 0.15%)</title><rect x="297" y="308" width="1" height="15" fill="rgb(229,197,41)"/><text x="300.00" y="318.50"></text></g><g><title>exp (libm-2.29.so) (10 samples, 1.48%)</title><rect x="283" y="292" width="17" height="15" fill="rgb(243,50,42)"/><text x="286.00" y="302.50"></text></g><g><title>0x7f947d0a2c7f (libm-2.29.so) (1 samples, 0.15%)</title><rect x="298" y="308" width="2" height="15" fill="rgb(209,228,2)"/><text x="301.00" y="318.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:93) (12 samples, 1.78%)</title><rect x="281" y="196" width="21" height="15" fill="rgb(226,212,45)"/><text x="284.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 1.78%)</title><rect x="281" y="212" width="21" height="15" fill="rgb(241,97,11)"/><text x="284.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 1.78%)</title><rect x="281" y="228" width="21" height="15" fill="rgb(250,55,30)"/><text x="284.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (12 samples, 1.78%)</title><rect x="281" y="244" width="21" height="15" fill="rgb(223,206,7)"/><text x="284.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (12 samples, 1.78%)</title><rect x="281" y="260" width="21" height="15" fill="rgb(247,37,45)"/><text x="284.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (12 samples, 1.78%)</title><rect x="281" y="276" width="21" height="15" fill="rgb(226,156,24)"/><text x="284.00" y="286.50"></text></g><g><title>npy_exp (npy_math_internal.h.src:469) (1 samples, 0.15%)</title><rect x="300" y="292" width="2" height="15" fill="rgb(221,173,47)"/><text x="303.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.15%)</title><rect x="304" y="308" width="1" height="15" fill="rgb(220,182,14)"/><text x="307.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.15%)</title><rect x="304" y="324" width="1" height="15" fill="rgb(216,45,13)"/><text x="307.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:204) (1 samples, 0.15%)</title><rect x="304" y="340" width="1" height="15" fill="rgb(221,137,19)"/><text x="307.00" y="350.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:913) (1 samples, 0.15%)</title><rect x="304" y="356" width="1" height="15" fill="rgb(214,147,36)"/><text x="307.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.15%)</title><rect x="305" y="324" width="2" height="15" fill="rgb(250,143,38)"/><text x="308.00" y="334.50"></text></g><g><title>array_sum (methods.c:2215) (3 samples, 0.45%)</title><rect x="304" y="212" width="5" height="15" fill="rgb(237,94,15)"/><text x="307.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (3 samples, 0.45%)</title><rect x="304" y="228" width="5" height="15" fill="rgb(242,119,52)"/><text x="307.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (3 samples, 0.45%)</title><rect x="304" y="244" width="5" height="15" fill="rgb(244,35,42)"/><text x="307.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.45%)</title><rect x="304" y="260" width="5" height="15" fill="rgb(205,65,20)"/><text x="307.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.45%)</title><rect x="304" y="276" width="5" height="15" fill="rgb(223,18,10)"/><text x="307.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.45%)</title><rect x="304" y="292" width="5" height="15" fill="rgb(249,136,12)"/><text x="307.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.30%)</title><rect x="305" y="308" width="4" height="15" fill="rgb(220,73,10)"/><text x="308.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.15%)</title><rect x="307" y="324" width="2" height="15" fill="rgb(234,14,31)"/><text x="310.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.15%)</title><rect x="307" y="340" width="2" height="15" fill="rgb(218,113,18)"/><text x="310.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.15%)</title><rect x="309" y="260" width="2" height="15" fill="rgb(249,54,38)"/><text x="312.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.15%)</title><rect x="309" y="276" width="2" height="15" fill="rgb(226,166,25)"/><text x="312.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.15%)</title><rect x="309" y="292" width="2" height="15" fill="rgb(238,138,18)"/><text x="312.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (1 samples, 0.15%)</title><rect x="311" y="276" width="1" height="15" fill="rgb(253,210,12)"/><text x="314.00" y="286.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (1 samples, 0.15%)</title><rect x="311" y="292" width="1" height="15" fill="rgb(248,176,39)"/><text x="314.00" y="302.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (1 samples, 0.15%)</title><rect x="311" y="308" width="1" height="15" fill="rgb(211,228,46)"/><text x="314.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.15%)</title><rect x="311" y="324" width="1" height="15" fill="rgb(239,109,6)"/><text x="314.00" y="334.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:38) (171 samples, 25.37%)</title><rect x="15" y="52" width="299" height="15" fill="rgb(211,221,17)"/><text x="18.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_m_..</text></g><g><title>profile_skl (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:37) (171 samples, 25.37%)</title><rect x="15" y="68" width="299" height="15" fill="rgb(254,74,15)"/><text x="18.00" y="78.50">profile_skl (bench_MLPClassifier_default..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:29) (171 samples, 25.37%)</title><rect x="15" y="84" width="299" height="15" fill="rgb(220,165,26)"/><text x="18.00" y="94.50">setup_profile (bench_MLPClassifier_defau..</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:23) (170 samples, 25.22%)</title><rect x="17" y="100" width="297" height="15" fill="rgb(217,180,44)"/><text x="20.00" y="110.50">profile (bench_MLPClassifier_default_m_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (170 samples, 25.22%)</title><rect x="17" y="116" width="297" height="15" fill="rgb(239,220,15)"/><text x="20.00" y="126.50">time_predict (mlprodict/asv_benchmark/c..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (169 samples, 25.07%)</title><rect x="18" y="132" width="296" height="15" fill="rgb(220,113,25)"/><text x="21.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/commo..</text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1072) (162 samples, 24.04%)</title><rect x="31" y="148" width="283" height="15" fill="rgb(209,185,12)"/><text x="34.00" y="158.50">predict_proba (sklearn/neural_network..</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (150 samples, 22.26%)</title><rect x="52" y="164" width="262" height="15" fill="rgb(237,174,22)"/><text x="55.00" y="174.50">_predict (sklearn/neural_network/_m..</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:113) (22 samples, 3.26%)</title><rect x="276" y="180" width="38" height="15" fill="rgb(231,218,43)"/><text x="279.00" y="190.50">_fo..</text></g><g><title>softmax (sklearn/neural_network/_base.py:94) (7 samples, 1.04%)</title><rect x="302" y="196" width="12" height="15" fill="rgb(223,183,21)"/><text x="305.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.45%)</title><rect x="309" y="212" width="5" height="15" fill="rgb(241,28,8)"/><text x="312.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.45%)</title><rect x="309" y="228" width="5" height="15" fill="rgb(247,54,35)"/><text x="312.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.45%)</title><rect x="309" y="244" width="5" height="15" fill="rgb(208,0,24)"/><text x="312.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.30%)</title><rect x="311" y="260" width="3" height="15" fill="rgb(243,54,22)"/><text x="314.00" y="270.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.15%)</title><rect x="312" y="276" width="2" height="15" fill="rgb(218,32,54)"/><text x="315.00" y="286.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1867) (1 samples, 0.15%)</title><rect x="312" y="292" width="2" height="15" fill="rgb(206,27,5)"/><text x="315.00" y="302.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.15%)</title><rect x="314" y="372" width="2" height="15" fill="rgb(248,131,9)"/><text x="317.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="314" y="388" width="2" height="15" fill="rgb(235,92,1)"/><text x="317.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="314" y="404" width="2" height="15" fill="rgb(220,98,19)"/><text x="317.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="314" y="420" width="2" height="15" fill="rgb(246,194,8)"/><text x="317.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="314" y="436" width="2" height="15" fill="rgb(241,26,6)"/><text x="317.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="314" y="452" width="2" height="15" fill="rgb(252,174,41)"/><text x="317.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="314" y="468" width="2" height="15" fill="rgb(228,171,0)"/><text x="317.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="314" y="484" width="2" height="15" fill="rgb(222,61,29)"/><text x="317.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py:11) (1 samples, 0.15%)</title><rect x="314" y="500" width="2" height="15" fill="rgb(213,170,7)"/><text x="317.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="314" y="516" width="2" height="15" fill="rgb(251,208,25)"/><text x="317.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="314" y="532" width="2" height="15" fill="rgb(245,38,7)"/><text x="317.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="314" y="548" width="2" height="15" fill="rgb(248,198,35)"/><text x="317.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="314" y="564" width="2" height="15" fill="rgb(230,7,32)"/><text x="317.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="314" y="580" width="2" height="15" fill="rgb(227,189,33)"/><text x="317.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py:116) (1 samples, 0.15%)</title><rect x="314" y="596" width="2" height="15" fill="rgb(207,19,48)"/><text x="317.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="314" y="612" width="2" height="15" fill="rgb(244,221,51)"/><text x="317.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="314" y="628" width="2" height="15" fill="rgb(254,125,36)"/><text x="317.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="314" y="644" width="2" height="15" fill="rgb(231,176,22)"/><text x="317.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="314" y="660" width="2" height="15" fill="rgb(219,14,4)"/><text x="317.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="314" y="676" width="2" height="15" fill="rgb(226,35,47)"/><text x="317.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py:155) (1 samples, 0.15%)</title><rect x="314" y="692" width="2" height="15" fill="rgb(232,192,46)"/><text x="317.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="314" y="708" width="2" height="15" fill="rgb(230,54,30)"/><text x="317.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.15%)</title><rect x="314" y="724" width="2" height="15" fill="rgb(217,87,35)"/><text x="317.00" y="734.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.15%)</title><rect x="314" y="740" width="2" height="15" fill="rgb(242,23,13)"/><text x="317.00" y="750.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.15%)</title><rect x="314" y="756" width="2" height="15" fill="rgb(228,191,40)"/><text x="317.00" y="766.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.15%)</title><rect x="314" y="772" width="2" height="15" fill="rgb(251,16,45)"/><text x="317.00" y="782.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.15%)</title><rect x="314" y="788" width="2" height="15" fill="rgb(216,204,48)"/><text x="317.00" y="798.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.15%)</title><rect x="314" y="804" width="2" height="15" fill="rgb(231,84,23)"/><text x="317.00" y="814.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.15%)</title><rect x="314" y="820" width="2" height="15" fill="rgb(237,198,50)"/><text x="317.00" y="830.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:1) (2 samples, 0.30%)</title><rect x="314" y="148" width="4" height="15" fill="rgb(254,141,2)"/><text x="317.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="314" y="164" width="4" height="15" fill="rgb(235,43,6)"/><text x="317.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="314" y="180" width="4" height="15" fill="rgb(240,201,24)"/><text x="317.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="314" y="196" width="4" height="15" fill="rgb(229,195,8)"/><text x="317.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="314" y="212" width="4" height="15" fill="rgb(231,15,40)"/><text x="317.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="314" y="228" width="4" height="15" fill="rgb(236,42,18)"/><text x="317.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (2 samples, 0.30%)</title><rect x="314" y="244" width="4" height="15" fill="rgb(241,115,3)"/><text x="317.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.30%)</title><rect x="314" y="260" width="4" height="15" fill="rgb(216,205,41)"/><text x="317.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="314" y="276" width="4" height="15" fill="rgb(223,138,9)"/><text x="317.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="314" y="292" width="4" height="15" fill="rgb(210,176,35)"/><text x="317.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="314" y="308" width="4" height="15" fill="rgb(210,49,25)"/><text x="317.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="314" y="324" width="4" height="15" fill="rgb(242,194,51)"/><text x="317.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="314" y="340" width="4" height="15" fill="rgb(245,87,53)"/><text x="317.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="314" y="356" width="4" height="15" fill="rgb(237,220,14)"/><text x="317.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:71) (1 samples, 0.15%)</title><rect x="316" y="372" width="2" height="15" fill="rgb(206,164,54)"/><text x="319.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="316" y="388" width="2" height="15" fill="rgb(251,105,25)"/><text x="319.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="316" y="404" width="2" height="15" fill="rgb(240,93,53)"/><text x="319.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="316" y="420" width="2" height="15" fill="rgb(214,114,14)"/><text x="319.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="316" y="436" width="2" height="15" fill="rgb(221,140,17)"/><text x="319.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="316" y="452" width="2" height="15" fill="rgb(219,143,41)"/><text x="319.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="316" y="468" width="2" height="15" fill="rgb(251,167,11)"/><text x="319.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="316" y="484" width="2" height="15" fill="rgb(226,82,33)"/><text x="319.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:2410) (1 samples, 0.15%)</title><rect x="316" y="500" width="2" height="15" fill="rgb(244,46,34)"/><text x="319.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="316" y="516" width="2" height="15" fill="rgb(243,27,38)"/><text x="319.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="316" y="532" width="2" height="15" fill="rgb(215,26,52)"/><text x="319.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="316" y="548" width="2" height="15" fill="rgb(236,155,13)"/><text x="319.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="316" y="564" width="2" height="15" fill="rgb(241,52,6)"/><text x="319.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="316" y="580" width="2" height="15" fill="rgb(237,100,12)"/><text x="319.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.15%)</title><rect x="316" y="596" width="2" height="15" fill="rgb(221,139,21)"/><text x="319.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.15%)</title><rect x="316" y="612" width="2" height="15" fill="rgb(243,130,33)"/><text x="319.00" y="622.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.15%)</title><rect x="316" y="628" width="2" height="15" fill="rgb(243,29,21)"/><text x="319.00" y="638.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="316" y="644" width="2" height="15" fill="rgb(242,28,33)"/><text x="319.00" y="654.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.15%)</title><rect x="318" y="916" width="1" height="15" fill="rgb(223,154,48)"/><text x="321.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.15%)</title><rect x="318" y="932" width="1" height="15" fill="rgb(220,47,9)"/><text x="321.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.15%)</title><rect x="318" y="948" width="1" height="15" fill="rgb(254,105,1)"/><text x="321.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.15%)</title><rect x="318" y="964" width="1" height="15" fill="rgb(211,130,18)"/><text x="321.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.15%)</title><rect x="318" y="980" width="1" height="15" fill="rgb(247,194,43)"/><text x="321.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:75) (1 samples, 0.15%)</title><rect x="318" y="996" width="1" height="15" fill="rgb(247,30,42)"/><text x="321.00" y="1006.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.15%)</title><rect x="318" y="1012" width="1" height="15" fill="rgb(246,126,39)"/><text x="321.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.30%)</title><rect x="318" y="852" width="3" height="15" fill="rgb(233,34,27)"/><text x="321.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.30%)</title><rect x="318" y="868" width="3" height="15" fill="rgb(254,98,5)"/><text x="321.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.30%)</title><rect x="318" y="884" width="3" height="15" fill="rgb(213,200,49)"/><text x="321.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.30%)</title><rect x="318" y="900" width="3" height="15" fill="rgb(238,134,54)"/><text x="321.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.15%)</title><rect x="319" y="916" width="2" height="15" fill="rgb(233,0,12)"/><text x="322.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2130) (1 samples, 0.15%)</title><rect x="319" y="932" width="2" height="15" fill="rgb(232,48,44)"/><text x="322.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:2) (3 samples, 0.45%)</title><rect x="318" y="148" width="5" height="15" fill="rgb(209,125,34)"/><text x="321.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.45%)</title><rect x="318" y="164" width="5" height="15" fill="rgb(205,59,42)"/><text x="321.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.45%)</title><rect x="318" y="180" width="5" height="15" fill="rgb(243,27,47)"/><text x="321.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.45%)</title><rect x="318" y="196" width="5" height="15" fill="rgb(253,36,9)"/><text x="321.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.45%)</title><rect x="318" y="212" width="5" height="15" fill="rgb(232,128,21)"/><text x="321.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.45%)</title><rect x="318" y="228" width="5" height="15" fill="rgb(208,166,9)"/><text x="321.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.45%)</title><rect x="318" y="244" width="5" height="15" fill="rgb(251,41,16)"/><text x="321.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.45%)</title><rect x="318" y="260" width="5" height="15" fill="rgb(242,188,14)"/><text x="321.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.45%)</title><rect x="318" y="276" width="5" height="15" fill="rgb(211,188,6)"/><text x="321.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.45%)</title><rect x="318" y="292" width="5" height="15" fill="rgb(235,102,52)"/><text x="321.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.45%)</title><rect x="318" y="308" width="5" height="15" fill="rgb(234,9,35)"/><text x="321.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.45%)</title><rect x="318" y="324" width="5" height="15" fill="rgb(214,25,33)"/><text x="321.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.45%)</title><rect x="318" y="340" width="5" height="15" fill="rgb(247,218,28)"/><text x="321.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.45%)</title><rect x="318" y="356" width="5" height="15" fill="rgb(233,132,33)"/><text x="321.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.45%)</title><rect x="318" y="372" width="5" height="15" fill="rgb(252,51,38)"/><text x="321.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.45%)</title><rect x="318" y="388" width="5" height="15" fill="rgb(254,31,53)"/><text x="321.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.45%)</title><rect x="318" y="404" width="5" height="15" fill="rgb(253,177,12)"/><text x="321.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.45%)</title><rect x="318" y="420" width="5" height="15" fill="rgb(208,219,38)"/><text x="321.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.45%)</title><rect x="318" y="436" width="5" height="15" fill="rgb(241,22,5)"/><text x="321.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.45%)</title><rect x="318" y="452" width="5" height="15" fill="rgb(229,211,16)"/><text x="321.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.45%)</title><rect x="318" y="468" width="5" height="15" fill="rgb(239,140,9)"/><text x="321.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.45%)</title><rect x="318" y="484" width="5" height="15" fill="rgb(238,213,13)"/><text x="321.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.45%)</title><rect x="318" y="500" width="5" height="15" fill="rgb(224,204,9)"/><text x="321.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.45%)</title><rect x="318" y="516" width="5" height="15" fill="rgb(218,196,35)"/><text x="321.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.45%)</title><rect x="318" y="532" width="5" height="15" fill="rgb(242,126,36)"/><text x="321.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.45%)</title><rect x="318" y="548" width="5" height="15" fill="rgb(226,65,38)"/><text x="321.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.45%)</title><rect x="318" y="564" width="5" height="15" fill="rgb(231,15,38)"/><text x="321.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.45%)</title><rect x="318" y="580" width="5" height="15" fill="rgb(254,127,3)"/><text x="321.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.45%)</title><rect x="318" y="596" width="5" height="15" fill="rgb(208,17,50)"/><text x="321.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.45%)</title><rect x="318" y="612" width="5" height="15" fill="rgb(250,74,54)"/><text x="321.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.45%)</title><rect x="318" y="628" width="5" height="15" fill="rgb(235,127,27)"/><text x="321.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.45%)</title><rect x="318" y="644" width="5" height="15" fill="rgb(213,224,17)"/><text x="321.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.45%)</title><rect x="318" y="660" width="5" height="15" fill="rgb(215,172,0)"/><text x="321.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.45%)</title><rect x="318" y="676" width="5" height="15" fill="rgb(238,36,48)"/><text x="321.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.45%)</title><rect x="318" y="692" width="5" height="15" fill="rgb(218,85,0)"/><text x="321.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.45%)</title><rect x="318" y="708" width="5" height="15" fill="rgb(225,78,13)"/><text x="321.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.45%)</title><rect x="318" y="724" width="5" height="15" fill="rgb(233,133,26)"/><text x="321.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.45%)</title><rect x="318" y="740" width="5" height="15" fill="rgb(216,16,9)"/><text x="321.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.45%)</title><rect x="318" y="756" width="5" height="15" fill="rgb(227,71,36)"/><text x="321.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.45%)</title><rect x="318" y="772" width="5" height="15" fill="rgb(248,69,38)"/><text x="321.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.45%)</title><rect x="318" y="788" width="5" height="15" fill="rgb(211,94,5)"/><text x="321.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.45%)</title><rect x="318" y="804" width="5" height="15" fill="rgb(206,39,16)"/><text x="321.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.45%)</title><rect x="318" y="820" width="5" height="15" fill="rgb(214,15,27)"/><text x="321.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.45%)</title><rect x="318" y="836" width="5" height="15" fill="rgb(205,158,0)"/><text x="321.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.15%)</title><rect x="321" y="852" width="2" height="15" fill="rgb(221,165,6)"/><text x="324.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.15%)</title><rect x="321" y="868" width="2" height="15" fill="rgb(215,100,18)"/><text x="324.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (1 samples, 0.15%)</title><rect x="321" y="884" width="2" height="15" fill="rgb(250,108,21)"/><text x="324.00" y="894.50"></text></g><g><title>join (posixpath.py:81) (1 samples, 0.15%)</title><rect x="321" y="900" width="2" height="15" fill="rgb(215,124,35)"/><text x="324.00" y="910.50"></text></g><g><title>_get_sep (posixpath.py:42) (1 samples, 0.15%)</title><rect x="321" y="916" width="2" height="15" fill="rgb(219,61,10)"/><text x="324.00" y="926.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py:195) (1 samples, 0.15%)</title><rect x="323" y="1220" width="2" height="15" fill="rgb(239,203,10)"/><text x="326.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="323" y="1236" width="2" height="15" fill="rgb(205,190,5)"/><text x="326.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="323" y="1252" width="2" height="15" fill="rgb(249,92,12)"/><text x="326.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="323" y="1268" width="2" height="15" fill="rgb(231,134,3)"/><text x="326.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="323" y="1284" width="2" height="15" fill="rgb(224,34,19)"/><text x="326.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="323" y="1300" width="2" height="15" fill="rgb(227,135,32)"/><text x="326.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/misc.py:5) (1 samples, 0.15%)</title><rect x="323" y="1316" width="2" height="15" fill="rgb(248,228,50)"/><text x="326.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="323" y="1332" width="2" height="15" fill="rgb(253,168,28)"/><text x="326.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="323" y="1348" width="2" height="15" fill="rgb(245,51,46)"/><text x="326.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="323" y="1364" width="2" height="15" fill="rgb(250,124,44)"/><text x="326.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="323" y="1380" width="2" height="15" fill="rgb(251,47,7)"/><text x="326.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="323" y="1396" width="2" height="15" fill="rgb(234,50,42)"/><text x="326.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/blas.py:214) (1 samples, 0.15%)</title><rect x="323" y="1412" width="2" height="15" fill="rgb(246,97,42)"/><text x="326.00" y="1422.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="323" y="1428" width="2" height="15" fill="rgb(236,188,46)"/><text x="326.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="323" y="1444" width="2" height="15" fill="rgb(247,155,25)"/><text x="326.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="323" y="1460" width="2" height="15" fill="rgb(253,178,44)"/><text x="326.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="323" y="1476" width="2" height="15" fill="rgb(232,195,44)"/><text x="326.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="323" y="1492" width="2" height="15" fill="rgb(253,75,9)"/><text x="326.00" y="1502.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:321) (1 samples, 0.15%)</title><rect x="323" y="1508" width="2" height="15" fill="rgb(209,227,32)"/><text x="326.00" y="1518.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:4) (2 samples, 0.30%)</title><rect x="323" y="148" width="3" height="15" fill="rgb(235,4,9)"/><text x="326.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="323" y="164" width="3" height="15" fill="rgb(227,13,11)"/><text x="326.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.30%)</title><rect x="323" y="180" width="3" height="15" fill="rgb(246,111,37)"/><text x="326.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="323" y="196" width="3" height="15" fill="rgb(251,85,47)"/><text x="326.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="323" y="212" width="3" height="15" fill="rgb(238,129,27)"/><text x="326.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="323" y="228" width="3" height="15" fill="rgb(228,179,48)"/><text x="326.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="323" y="244" width="3" height="15" fill="rgb(220,229,2)"/><text x="326.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="323" y="260" width="3" height="15" fill="rgb(249,87,28)"/><text x="326.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="323" y="276" width="3" height="15" fill="rgb(217,150,2)"/><text x="326.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.30%)</title><rect x="323" y="292" width="3" height="15" fill="rgb(215,80,13)"/><text x="326.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="323" y="308" width="3" height="15" fill="rgb(237,50,45)"/><text x="326.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="323" y="324" width="3" height="15" fill="rgb(210,194,22)"/><text x="326.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="323" y="340" width="3" height="15" fill="rgb(251,21,24)"/><text x="326.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="323" y="356" width="3" height="15" fill="rgb(245,33,48)"/><text x="326.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="323" y="372" width="3" height="15" fill="rgb(226,213,14)"/><text x="326.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.30%)</title><rect x="323" y="388" width="3" height="15" fill="rgb(243,35,28)"/><text x="326.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="323" y="404" width="3" height="15" fill="rgb(215,199,3)"/><text x="326.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="323" y="420" width="3" height="15" fill="rgb(228,88,21)"/><text x="326.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="323" y="436" width="3" height="15" fill="rgb(251,109,22)"/><text x="326.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="323" y="452" width="3" height="15" fill="rgb(225,99,2)"/><text x="326.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="323" y="468" width="3" height="15" fill="rgb(234,161,50)"/><text x="326.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.30%)</title><rect x="323" y="484" width="3" height="15" fill="rgb(212,171,46)"/><text x="326.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="323" y="500" width="3" height="15" fill="rgb(227,162,41)"/><text x="326.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="323" y="516" width="3" height="15" fill="rgb(236,151,38)"/><text x="326.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="323" y="532" width="3" height="15" fill="rgb(205,73,15)"/><text x="326.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="323" y="548" width="3" height="15" fill="rgb(230,80,26)"/><text x="326.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="323" y="564" width="3" height="15" fill="rgb(209,140,52)"/><text x="326.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.30%)</title><rect x="323" y="580" width="3" height="15" fill="rgb(243,74,27)"/><text x="326.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="323" y="596" width="3" height="15" fill="rgb(209,139,44)"/><text x="326.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="323" y="612" width="3" height="15" fill="rgb(206,57,2)"/><text x="326.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="323" y="628" width="3" height="15" fill="rgb(207,209,34)"/><text x="326.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="323" y="644" width="3" height="15" fill="rgb(228,225,8)"/><text x="326.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="323" y="660" width="3" height="15" fill="rgb(246,195,1)"/><text x="326.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.30%)</title><rect x="323" y="676" width="3" height="15" fill="rgb(234,37,35)"/><text x="326.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="323" y="692" width="3" height="15" fill="rgb(254,150,40)"/><text x="326.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="323" y="708" width="3" height="15" fill="rgb(225,141,14)"/><text x="326.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="323" y="724" width="3" height="15" fill="rgb(216,198,4)"/><text x="326.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="323" y="740" width="3" height="15" fill="rgb(253,42,1)"/><text x="326.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="323" y="756" width="3" height="15" fill="rgb(217,90,9)"/><text x="326.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (2 samples, 0.30%)</title><rect x="323" y="772" width="3" height="15" fill="rgb(218,76,19)"/><text x="326.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="323" y="788" width="3" height="15" fill="rgb(209,58,0)"/><text x="326.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="323" y="804" width="3" height="15" fill="rgb(235,170,22)"/><text x="326.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="323" y="820" width="3" height="15" fill="rgb(241,148,11)"/><text x="326.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="323" y="836" width="3" height="15" fill="rgb(237,205,31)"/><text x="326.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="323" y="852" width="3" height="15" fill="rgb(248,90,21)"/><text x="326.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:643) (2 samples, 0.30%)</title><rect x="323" y="868" width="3" height="15" fill="rgb(250,73,3)"/><text x="326.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="323" y="884" width="3" height="15" fill="rgb(221,133,0)"/><text x="326.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="323" y="900" width="3" height="15" fill="rgb(236,227,3)"/><text x="326.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="323" y="916" width="3" height="15" fill="rgb(214,177,17)"/><text x="326.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="323" y="932" width="3" height="15" fill="rgb(242,193,15)"/><text x="326.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="323" y="948" width="3" height="15" fill="rgb(226,86,16)"/><text x="326.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py:19) (2 samples, 0.30%)</title><rect x="323" y="964" width="3" height="15" fill="rgb(226,169,34)"/><text x="326.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.30%)</title><rect x="323" y="980" width="3" height="15" fill="rgb(245,20,17)"/><text x="326.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="323" y="996" width="3" height="15" fill="rgb(217,22,31)"/><text x="326.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="323" y="1012" width="3" height="15" fill="rgb(241,16,4)"/><text x="326.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="323" y="1028" width="3" height="15" fill="rgb(214,93,23)"/><text x="326.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="323" y="1044" width="3" height="15" fill="rgb(208,25,22)"/><text x="326.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="323" y="1060" width="3" height="15" fill="rgb(206,113,38)"/><text x="326.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="323" y="1076" width="3" height="15" fill="rgb(216,222,29)"/><text x="326.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py:83) (2 samples, 0.30%)</title><rect x="323" y="1092" width="3" height="15" fill="rgb(240,101,36)"/><text x="326.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.30%)</title><rect x="323" y="1108" width="3" height="15" fill="rgb(206,203,46)"/><text x="326.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="323" y="1124" width="3" height="15" fill="rgb(211,76,24)"/><text x="326.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="323" y="1140" width="3" height="15" fill="rgb(234,161,40)"/><text x="326.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="323" y="1156" width="3" height="15" fill="rgb(211,216,45)"/><text x="326.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="323" y="1172" width="3" height="15" fill="rgb(220,54,51)"/><text x="326.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="323" y="1188" width="3" height="15" fill="rgb(212,28,17)"/><text x="326.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="323" y="1204" width="3" height="15" fill="rgb(230,113,41)"/><text x="326.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py:196) (1 samples, 0.15%)</title><rect x="325" y="1220" width="1" height="15" fill="rgb(250,175,1)"/><text x="328.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="325" y="1236" width="1" height="15" fill="rgb(230,87,25)"/><text x="328.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="325" y="1252" width="1" height="15" fill="rgb(221,194,29)"/><text x="328.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="325" y="1268" width="1" height="15" fill="rgb(207,125,35)"/><text x="328.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="325" y="1284" width="1" height="15" fill="rgb(232,207,5)"/><text x="328.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="325" y="1300" width="1" height="15" fill="rgb(222,147,5)"/><text x="328.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/basic.py:15) (1 samples, 0.15%)</title><rect x="325" y="1316" width="1" height="15" fill="rgb(218,193,2)"/><text x="328.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="325" y="1332" width="1" height="15" fill="rgb(241,99,51)"/><text x="328.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="325" y="1348" width="1" height="15" fill="rgb(208,105,0)"/><text x="328.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="325" y="1364" width="1" height="15" fill="rgb(220,118,18)"/><text x="328.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.15%)</title><rect x="325" y="1380" width="1" height="15" fill="rgb(222,41,9)"/><text x="328.00" y="1390.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.15%)</title><rect x="325" y="1396" width="1" height="15" fill="rgb(236,52,37)"/><text x="328.00" y="1406.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.15%)</title><rect x="325" y="1412" width="1" height="15" fill="rgb(254,29,28)"/><text x="328.00" y="1422.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.15%)</title><rect x="326" y="484" width="2" height="15" fill="rgb(220,159,0)"/><text x="329.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="326" y="500" width="2" height="15" fill="rgb(253,86,38)"/><text x="329.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="326" y="516" width="2" height="15" fill="rgb(212,173,26)"/><text x="329.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="326" y="532" width="2" height="15" fill="rgb(249,50,22)"/><text x="329.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="326" y="548" width="2" height="15" fill="rgb(251,14,32)"/><text x="329.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="326" y="564" width="2" height="15" fill="rgb(227,168,47)"/><text x="329.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:22) (1 samples, 0.15%)</title><rect x="326" y="580" width="2" height="15" fill="rgb(234,87,25)"/><text x="329.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="326" y="596" width="2" height="15" fill="rgb(245,71,4)"/><text x="329.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="326" y="612" width="2" height="15" fill="rgb(243,41,21)"/><text x="329.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="326" y="628" width="2" height="15" fill="rgb(208,48,11)"/><text x="329.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="326" y="644" width="2" height="15" fill="rgb(207,126,27)"/><text x="329.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="326" y="660" width="2" height="15" fill="rgb(233,200,12)"/><text x="329.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/utils_tests.py:15) (1 samples, 0.15%)</title><rect x="326" y="676" width="2" height="15" fill="rgb(253,61,40)"/><text x="329.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="326" y="692" width="2" height="15" fill="rgb(240,190,2)"/><text x="329.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="326" y="708" width="2" height="15" fill="rgb(214,15,41)"/><text x="329.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="326" y="724" width="2" height="15" fill="rgb(247,61,23)"/><text x="329.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.15%)</title><rect x="326" y="740" width="2" height="15" fill="rgb(206,161,44)"/><text x="329.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:848) (1 samples, 0.15%)</title><rect x="326" y="756" width="2" height="15" fill="rgb(229,218,32)"/><text x="329.00" y="766.50"></text></g><g><title>_validate_timestamp_pyc (&lt;frozen importlib._bootstrap_external&gt;:490) (1 samples, 0.15%)</title><rect x="326" y="772" width="2" height="15" fill="rgb(217,97,51)"/><text x="329.00" y="782.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.30%)</title><rect x="326" y="244" width="4" height="15" fill="rgb(213,214,29)"/><text x="329.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="326" y="260" width="4" height="15" fill="rgb(225,95,53)"/><text x="329.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="326" y="276" width="4" height="15" fill="rgb(223,203,2)"/><text x="329.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="326" y="292" width="4" height="15" fill="rgb(229,29,53)"/><text x="329.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="326" y="308" width="4" height="15" fill="rgb(232,104,12)"/><text x="329.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="326" y="324" width="4" height="15" fill="rgb(250,61,7)"/><text x="329.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.30%)</title><rect x="326" y="340" width="4" height="15" fill="rgb(242,0,25)"/><text x="329.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="326" y="356" width="4" height="15" fill="rgb(247,170,4)"/><text x="329.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.30%)</title><rect x="326" y="372" width="4" height="15" fill="rgb(245,228,43)"/><text x="329.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="326" y="388" width="4" height="15" fill="rgb(244,116,21)"/><text x="329.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="326" y="404" width="4" height="15" fill="rgb(209,158,12)"/><text x="329.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="326" y="420" width="4" height="15" fill="rgb(210,29,53)"/><text x="329.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="326" y="436" width="4" height="15" fill="rgb(209,92,24)"/><text x="329.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="326" y="452" width="4" height="15" fill="rgb(241,211,0)"/><text x="329.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="326" y="468" width="4" height="15" fill="rgb(233,144,8)"/><text x="329.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.15%)</title><rect x="328" y="484" width="2" height="15" fill="rgb(253,49,12)"/><text x="331.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="328" y="500" width="2" height="15" fill="rgb(240,17,48)"/><text x="331.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="328" y="516" width="2" height="15" fill="rgb(248,186,22)"/><text x="331.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="328" y="532" width="2" height="15" fill="rgb(209,228,22)"/><text x="331.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="328" y="548" width="2" height="15" fill="rgb(245,154,22)"/><text x="331.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="328" y="564" width="2" height="15" fill="rgb(226,183,20)"/><text x="331.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.15%)</title><rect x="328" y="580" width="2" height="15" fill="rgb(235,152,21)"/><text x="331.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="328" y="596" width="2" height="15" fill="rgb(250,41,16)"/><text x="331.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="328" y="612" width="2" height="15" fill="rgb(215,89,50)"/><text x="331.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="328" y="628" width="2" height="15" fill="rgb(244,104,19)"/><text x="331.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="328" y="644" width="2" height="15" fill="rgb(250,184,30)"/><text x="331.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="328" y="660" width="2" height="15" fill="rgb(218,115,50)"/><text x="331.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="328" y="676" width="2" height="15" fill="rgb(241,39,8)"/><text x="331.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="328" y="692" width="2" height="15" fill="rgb(238,60,20)"/><text x="331.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="328" y="708" width="2" height="15" fill="rgb(246,207,4)"/><text x="331.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.15%)</title><rect x="328" y="724" width="2" height="15" fill="rgb(242,50,45)"/><text x="331.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="328" y="740" width="2" height="15" fill="rgb(221,202,45)"/><text x="331.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="328" y="756" width="2" height="15" fill="rgb(208,36,35)"/><text x="331.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="328" y="772" width="2" height="15" fill="rgb(228,172,24)"/><text x="331.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="328" y="788" width="2" height="15" fill="rgb(236,60,1)"/><text x="331.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="328" y="804" width="2" height="15" fill="rgb(235,8,44)"/><text x="331.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.15%)</title><rect x="328" y="820" width="2" height="15" fill="rgb(237,204,32)"/><text x="331.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="328" y="836" width="2" height="15" fill="rgb(227,217,5)"/><text x="331.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="328" y="852" width="2" height="15" fill="rgb(205,184,11)"/><text x="331.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="328" y="868" width="2" height="15" fill="rgb(214,223,38)"/><text x="331.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="328" y="884" width="2" height="15" fill="rgb(211,98,11)"/><text x="331.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="328" y="900" width="2" height="15" fill="rgb(211,100,47)"/><text x="331.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.15%)</title><rect x="328" y="916" width="2" height="15" fill="rgb(211,195,25)"/><text x="331.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="328" y="932" width="2" height="15" fill="rgb(217,176,28)"/><text x="331.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="328" y="948" width="2" height="15" fill="rgb(222,145,22)"/><text x="331.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="328" y="964" width="2" height="15" fill="rgb(247,4,43)"/><text x="331.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="328" y="980" width="2" height="15" fill="rgb(209,29,29)"/><text x="331.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="328" y="996" width="2" height="15" fill="rgb(234,36,11)"/><text x="331.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="328" y="1012" width="2" height="15" fill="rgb(227,9,28)"/><text x="331.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="328" y="1028" width="2" height="15" fill="rgb(253,43,32)"/><text x="331.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="328" y="1044" width="2" height="15" fill="rgb(205,95,25)"/><text x="331.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.15%)</title><rect x="328" y="1060" width="2" height="15" fill="rgb(249,95,23)"/><text x="331.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="328" y="1076" width="2" height="15" fill="rgb(226,34,3)"/><text x="331.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="328" y="1092" width="2" height="15" fill="rgb(242,178,6)"/><text x="331.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="328" y="1108" width="2" height="15" fill="rgb(240,220,6)"/><text x="331.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.15%)</title><rect x="328" y="1124" width="2" height="15" fill="rgb(224,208,31)"/><text x="331.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.15%)</title><rect x="328" y="1140" width="2" height="15" fill="rgb(234,179,20)"/><text x="331.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.15%)</title><rect x="328" y="1156" width="2" height="15" fill="rgb(244,72,11)"/><text x="331.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.15%)</title><rect x="330" y="436" width="2" height="15" fill="rgb(219,134,30)"/><text x="333.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="452" width="2" height="15" fill="rgb(245,36,1)"/><text x="333.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="468" width="2" height="15" fill="rgb(231,34,10)"/><text x="333.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="484" width="2" height="15" fill="rgb(242,3,44)"/><text x="333.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="500" width="2" height="15" fill="rgb(239,195,6)"/><text x="333.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="516" width="2" height="15" fill="rgb(207,57,47)"/><text x="333.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.15%)</title><rect x="330" y="532" width="2" height="15" fill="rgb(220,223,44)"/><text x="333.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="548" width="2" height="15" fill="rgb(221,135,5)"/><text x="333.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="564" width="2" height="15" fill="rgb(233,217,53)"/><text x="333.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="580" width="2" height="15" fill="rgb(228,79,17)"/><text x="333.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="596" width="2" height="15" fill="rgb(246,213,18)"/><text x="333.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="612" width="2" height="15" fill="rgb(251,70,50)"/><text x="333.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.15%)</title><rect x="330" y="628" width="2" height="15" fill="rgb(240,16,39)"/><text x="333.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="644" width="2" height="15" fill="rgb(216,226,25)"/><text x="333.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="660" width="2" height="15" fill="rgb(213,169,43)"/><text x="333.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="676" width="2" height="15" fill="rgb(217,110,32)"/><text x="333.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="692" width="2" height="15" fill="rgb(242,126,48)"/><text x="333.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="708" width="2" height="15" fill="rgb(223,115,51)"/><text x="333.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.15%)</title><rect x="330" y="724" width="2" height="15" fill="rgb(251,190,18)"/><text x="333.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="740" width="2" height="15" fill="rgb(210,134,32)"/><text x="333.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="756" width="2" height="15" fill="rgb(208,81,51)"/><text x="333.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="772" width="2" height="15" fill="rgb(237,203,11)"/><text x="333.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="788" width="2" height="15" fill="rgb(239,107,8)"/><text x="333.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="804" width="2" height="15" fill="rgb(220,31,39)"/><text x="333.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.15%)</title><rect x="330" y="820" width="2" height="15" fill="rgb(242,143,7)"/><text x="333.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="836" width="2" height="15" fill="rgb(214,112,46)"/><text x="333.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="852" width="2" height="15" fill="rgb(239,100,47)"/><text x="333.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="868" width="2" height="15" fill="rgb(209,218,6)"/><text x="333.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="884" width="2" height="15" fill="rgb(221,148,37)"/><text x="333.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="900" width="2" height="15" fill="rgb(216,31,40)"/><text x="333.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.15%)</title><rect x="330" y="916" width="2" height="15" fill="rgb(211,165,16)"/><text x="333.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="932" width="2" height="15" fill="rgb(236,22,49)"/><text x="333.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="948" width="2" height="15" fill="rgb(248,6,26)"/><text x="333.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="964" width="2" height="15" fill="rgb(216,210,15)"/><text x="333.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="980" width="2" height="15" fill="rgb(249,103,44)"/><text x="333.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="996" width="2" height="15" fill="rgb(205,116,41)"/><text x="333.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.15%)</title><rect x="330" y="1012" width="2" height="15" fill="rgb(226,51,5)"/><text x="333.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="1028" width="2" height="15" fill="rgb(210,154,36)"/><text x="333.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="1044" width="2" height="15" fill="rgb(213,227,4)"/><text x="333.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="1060" width="2" height="15" fill="rgb(250,228,26)"/><text x="333.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="1076" width="2" height="15" fill="rgb(238,160,32)"/><text x="333.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="1092" width="2" height="15" fill="rgb(210,47,28)"/><text x="333.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.15%)</title><rect x="330" y="1108" width="2" height="15" fill="rgb(240,178,3)"/><text x="333.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="1124" width="2" height="15" fill="rgb(251,191,23)"/><text x="333.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="1140" width="2" height="15" fill="rgb(222,20,5)"/><text x="333.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="1156" width="2" height="15" fill="rgb(216,155,1)"/><text x="333.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="1172" width="2" height="15" fill="rgb(251,175,25)"/><text x="333.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="1188" width="2" height="15" fill="rgb(253,46,3)"/><text x="333.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.15%)</title><rect x="330" y="1204" width="2" height="15" fill="rgb(244,52,10)"/><text x="333.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="1220" width="2" height="15" fill="rgb(206,3,0)"/><text x="333.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="1236" width="2" height="15" fill="rgb(215,53,19)"/><text x="333.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="1252" width="2" height="15" fill="rgb(240,45,43)"/><text x="333.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="1268" width="2" height="15" fill="rgb(215,176,26)"/><text x="333.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="1284" width="2" height="15" fill="rgb(230,69,48)"/><text x="333.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.15%)</title><rect x="330" y="1300" width="2" height="15" fill="rgb(237,26,16)"/><text x="333.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="1316" width="2" height="15" fill="rgb(218,127,8)"/><text x="333.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="1332" width="2" height="15" fill="rgb(234,26,11)"/><text x="333.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="1348" width="2" height="15" fill="rgb(217,160,49)"/><text x="333.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="1364" width="2" height="15" fill="rgb(225,50,38)"/><text x="333.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="1380" width="2" height="15" fill="rgb(205,122,9)"/><text x="333.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.15%)</title><rect x="330" y="1396" width="2" height="15" fill="rgb(243,112,7)"/><text x="333.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="1412" width="2" height="15" fill="rgb(220,2,9)"/><text x="333.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="1428" width="2" height="15" fill="rgb(213,130,34)"/><text x="333.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="1444" width="2" height="15" fill="rgb(228,199,42)"/><text x="333.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="1460" width="2" height="15" fill="rgb(244,22,7)"/><text x="333.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="1476" width="2" height="15" fill="rgb(250,81,9)"/><text x="333.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.15%)</title><rect x="330" y="1492" width="2" height="15" fill="rgb(246,137,27)"/><text x="333.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="1508" width="2" height="15" fill="rgb(239,155,46)"/><text x="333.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="1524" width="2" height="15" fill="rgb(219,25,11)"/><text x="333.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="1540" width="2" height="15" fill="rgb(235,53,0)"/><text x="333.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="1556" width="2" height="15" fill="rgb(227,58,40)"/><text x="333.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="1572" width="2" height="15" fill="rgb(240,135,39)"/><text x="333.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.15%)</title><rect x="330" y="1588" width="2" height="15" fill="rgb(240,151,51)"/><text x="333.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="1604" width="2" height="15" fill="rgb(250,29,32)"/><text x="333.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="1620" width="2" height="15" fill="rgb(213,65,23)"/><text x="333.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="1636" width="2" height="15" fill="rgb(234,16,21)"/><text x="333.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="1652" width="2" height="15" fill="rgb(211,133,28)"/><text x="333.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="1668" width="2" height="15" fill="rgb(253,32,39)"/><text x="333.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.15%)</title><rect x="330" y="1684" width="2" height="15" fill="rgb(211,97,35)"/><text x="333.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="1700" width="2" height="15" fill="rgb(238,41,50)"/><text x="333.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="1716" width="2" height="15" fill="rgb(232,59,37)"/><text x="333.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="1732" width="2" height="15" fill="rgb(219,75,15)"/><text x="333.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="1748" width="2" height="15" fill="rgb(233,108,35)"/><text x="333.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="1764" width="2" height="15" fill="rgb(241,204,2)"/><text x="333.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.15%)</title><rect x="330" y="1780" width="2" height="15" fill="rgb(223,146,17)"/><text x="333.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="1796" width="2" height="15" fill="rgb(208,207,0)"/><text x="333.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="1812" width="2" height="15" fill="rgb(228,8,4)"/><text x="333.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="1828" width="2" height="15" fill="rgb(238,58,8)"/><text x="333.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="1844" width="2" height="15" fill="rgb(208,117,23)"/><text x="333.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="1860" width="2" height="15" fill="rgb(239,65,0)"/><text x="333.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:17) (1 samples, 0.15%)</title><rect x="330" y="1876" width="2" height="15" fill="rgb(223,109,16)"/><text x="333.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="1892" width="2" height="15" fill="rgb(253,150,15)"/><text x="333.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="1908" width="2" height="15" fill="rgb(230,91,45)"/><text x="333.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="1924" width="2" height="15" fill="rgb(247,167,21)"/><text x="333.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="1940" width="2" height="15" fill="rgb(253,30,28)"/><text x="333.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="1956" width="2" height="15" fill="rgb(214,212,36)"/><text x="333.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py:12) (1 samples, 0.15%)</title><rect x="330" y="1972" width="2" height="15" fill="rgb(220,37,32)"/><text x="333.00" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="330" y="1988" width="2" height="15" fill="rgb(237,216,2)"/><text x="333.00" y="1998.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="330" y="2004" width="2" height="15" fill="rgb(253,6,42)"/><text x="333.00" y="2014.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="330" y="2020" width="2" height="15" fill="rgb(245,27,8)"/><text x="333.00" y="2030.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="330" y="2036" width="2" height="15" fill="rgb(230,148,0)"/><text x="333.00" y="2046.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="330" y="2052" width="2" height="15" fill="rgb(253,212,34)"/><text x="333.00" y="2062.50"></text></g><g><title>&lt;module&gt; (matplotlib/mathtext.py:2254) (1 samples, 0.15%)</title><rect x="330" y="2068" width="2" height="15" fill="rgb(233,166,10)"/><text x="333.00" y="2078.50"></text></g><g><title>Parser (matplotlib/mathtext.py:2840) (1 samples, 0.15%)</title><rect x="330" y="2084" width="2" height="15" fill="rgb(228,65,33)"/><text x="333.00" y="2094.50"></text></g><g><title>&lt;lambda&gt; (matplotlib/mathtext.py:2838) (1 samples, 0.15%)</title><rect x="330" y="2100" width="2" height="15" fill="rgb(239,205,18)"/><text x="333.00" y="2110.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/mathtext.py:2839) (1 samples, 0.15%)</title><rect x="330" y="2116" width="2" height="15" fill="rgb(247,43,36)"/><text x="333.00" y="2126.50"></text></g><g><title>&lt;genexpr&gt; (matplotlib/mathtext.py:2839) (1 samples, 0.15%)</title><rect x="330" y="2132" width="2" height="15" fill="rgb(241,151,10)"/><text x="333.00" y="2142.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.15%)</title><rect x="332" y="1460" width="1" height="15" fill="rgb(250,15,0)"/><text x="335.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.15%)</title><rect x="332" y="1476" width="1" height="15" fill="rgb(254,179,8)"/><text x="335.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:119) (1 samples, 0.15%)</title><rect x="332" y="1492" width="1" height="15" fill="rgb(222,212,11)"/><text x="335.00" y="1502.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/algebra/onnx_ops.py:119) (1 samples, 0.15%)</title><rect x="332" y="1508" width="1" height="15" fill="rgb(251,192,16)"/><text x="335.00" y="1518.50"></text></g><g><title>_c (skl2onnx/algebra/onnx_ops.py:112) (1 samples, 0.15%)</title><rect x="332" y="1524" width="1" height="15" fill="rgb(205,127,25)"/><text x="335.00" y="1534.50"></text></g><g><title>0x7f946cf8b7dc (?) (1 samples, 0.15%)</title><rect x="332" y="1540" width="1" height="15" fill="rgb(241,179,43)"/><text x="335.00" y="1550.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:4) (12 samples, 1.78%)</title><rect x="314" y="52" width="21" height="15" fill="rgb(241,45,35)"/><text x="317.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 1.78%)</title><rect x="314" y="68" width="21" height="15" fill="rgb(245,131,26)"/><text x="317.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 1.78%)</title><rect x="314" y="84" width="21" height="15" fill="rgb(242,207,15)"/><text x="317.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 1.78%)</title><rect x="314" y="100" width="21" height="15" fill="rgb(223,171,53)"/><text x="317.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 1.78%)</title><rect x="314" y="116" width="21" height="15" fill="rgb(217,89,45)"/><text x="317.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 1.78%)</title><rect x="314" y="132" width="21" height="15" fill="rgb(211,157,12)"/><text x="317.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:7) (5 samples, 0.74%)</title><rect x="326" y="148" width="9" height="15" fill="rgb(207,132,37)"/><text x="329.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="326" y="164" width="9" height="15" fill="rgb(223,224,31)"/><text x="329.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.74%)</title><rect x="326" y="180" width="9" height="15" fill="rgb(220,134,48)"/><text x="329.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.74%)</title><rect x="326" y="196" width="9" height="15" fill="rgb(235,161,30)"/><text x="329.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.74%)</title><rect x="326" y="212" width="9" height="15" fill="rgb(220,3,52)"/><text x="329.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="326" y="228" width="9" height="15" fill="rgb(250,169,45)"/><text x="329.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.45%)</title><rect x="330" y="244" width="5" height="15" fill="rgb(244,21,22)"/><text x="333.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.45%)</title><rect x="330" y="260" width="5" height="15" fill="rgb(208,150,41)"/><text x="333.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.45%)</title><rect x="330" y="276" width="5" height="15" fill="rgb(216,3,53)"/><text x="333.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.45%)</title><rect x="330" y="292" width="5" height="15" fill="rgb(240,24,10)"/><text x="333.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.45%)</title><rect x="330" y="308" width="5" height="15" fill="rgb(210,93,45)"/><text x="333.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.45%)</title><rect x="330" y="324" width="5" height="15" fill="rgb(244,188,4)"/><text x="333.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.45%)</title><rect x="330" y="340" width="5" height="15" fill="rgb(233,174,2)"/><text x="333.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.45%)</title><rect x="330" y="356" width="5" height="15" fill="rgb(241,40,41)"/><text x="333.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.45%)</title><rect x="330" y="372" width="5" height="15" fill="rgb(246,226,33)"/><text x="333.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.45%)</title><rect x="330" y="388" width="5" height="15" fill="rgb(213,82,46)"/><text x="333.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.45%)</title><rect x="330" y="404" width="5" height="15" fill="rgb(215,90,28)"/><text x="333.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.45%)</title><rect x="330" y="420" width="5" height="15" fill="rgb(213,139,27)"/><text x="333.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.30%)</title><rect x="332" y="436" width="3" height="15" fill="rgb(249,94,33)"/><text x="335.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="332" y="452" width="3" height="15" fill="rgb(237,19,46)"/><text x="335.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.30%)</title><rect x="332" y="468" width="3" height="15" fill="rgb(248,97,46)"/><text x="335.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="332" y="484" width="3" height="15" fill="rgb(220,221,31)"/><text x="335.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="332" y="500" width="3" height="15" fill="rgb(250,174,44)"/><text x="335.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="332" y="516" width="3" height="15" fill="rgb(250,168,31)"/><text x="335.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="332" y="532" width="3" height="15" fill="rgb(216,42,46)"/><text x="335.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="332" y="548" width="3" height="15" fill="rgb(221,198,11)"/><text x="335.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="332" y="564" width="3" height="15" fill="rgb(234,85,45)"/><text x="335.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.30%)</title><rect x="332" y="580" width="3" height="15" fill="rgb(241,52,14)"/><text x="335.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="332" y="596" width="3" height="15" fill="rgb(227,213,50)"/><text x="335.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="332" y="612" width="3" height="15" fill="rgb(232,0,4)"/><text x="335.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="332" y="628" width="3" height="15" fill="rgb(231,119,9)"/><text x="335.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="332" y="644" width="3" height="15" fill="rgb(209,183,27)"/><text x="335.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="332" y="660" width="3" height="15" fill="rgb(238,141,49)"/><text x="335.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.30%)</title><rect x="332" y="676" width="3" height="15" fill="rgb(229,229,4)"/><text x="335.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="332" y="692" width="3" height="15" fill="rgb(207,189,52)"/><text x="335.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="332" y="708" width="3" height="15" fill="rgb(254,213,25)"/><text x="335.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="332" y="724" width="3" height="15" fill="rgb(209,182,35)"/><text x="335.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="332" y="740" width="3" height="15" fill="rgb(249,185,20)"/><text x="335.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="332" y="756" width="3" height="15" fill="rgb(222,169,29)"/><text x="335.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.30%)</title><rect x="332" y="772" width="3" height="15" fill="rgb(239,80,41)"/><text x="335.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="332" y="788" width="3" height="15" fill="rgb(231,88,19)"/><text x="335.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="332" y="804" width="3" height="15" fill="rgb(215,223,1)"/><text x="335.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="332" y="820" width="3" height="15" fill="rgb(218,115,14)"/><text x="335.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="332" y="836" width="3" height="15" fill="rgb(242,214,10)"/><text x="335.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="332" y="852" width="3" height="15" fill="rgb(245,6,47)"/><text x="335.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.30%)</title><rect x="332" y="868" width="3" height="15" fill="rgb(251,74,38)"/><text x="335.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="332" y="884" width="3" height="15" fill="rgb(243,194,24)"/><text x="335.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.30%)</title><rect x="332" y="900" width="3" height="15" fill="rgb(210,66,1)"/><text x="335.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="332" y="916" width="3" height="15" fill="rgb(244,129,35)"/><text x="335.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="332" y="932" width="3" height="15" fill="rgb(244,207,52)"/><text x="335.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="332" y="948" width="3" height="15" fill="rgb(207,114,28)"/><text x="335.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="332" y="964" width="3" height="15" fill="rgb(209,134,21)"/><text x="335.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="332" y="980" width="3" height="15" fill="rgb(236,198,20)"/><text x="335.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="332" y="996" width="3" height="15" fill="rgb(212,220,10)"/><text x="335.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.30%)</title><rect x="332" y="1012" width="3" height="15" fill="rgb(228,64,40)"/><text x="335.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="332" y="1028" width="3" height="15" fill="rgb(212,127,20)"/><text x="335.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="332" y="1044" width="3" height="15" fill="rgb(254,161,51)"/><text x="335.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="332" y="1060" width="3" height="15" fill="rgb(205,195,15)"/><text x="335.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="332" y="1076" width="3" height="15" fill="rgb(227,138,22)"/><text x="335.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="332" y="1092" width="3" height="15" fill="rgb(224,192,52)"/><text x="335.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.30%)</title><rect x="332" y="1108" width="3" height="15" fill="rgb(236,64,15)"/><text x="335.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.30%)</title><rect x="332" y="1124" width="3" height="15" fill="rgb(239,102,15)"/><text x="335.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="332" y="1140" width="3" height="15" fill="rgb(227,169,15)"/><text x="335.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="332" y="1156" width="3" height="15" fill="rgb(205,125,47)"/><text x="335.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="332" y="1172" width="3" height="15" fill="rgb(240,30,5)"/><text x="335.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="332" y="1188" width="3" height="15" fill="rgb(235,223,46)"/><text x="335.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="332" y="1204" width="3" height="15" fill="rgb(210,220,52)"/><text x="335.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="332" y="1220" width="3" height="15" fill="rgb(205,78,37)"/><text x="335.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.30%)</title><rect x="332" y="1236" width="3" height="15" fill="rgb(219,207,0)"/><text x="335.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.30%)</title><rect x="332" y="1252" width="3" height="15" fill="rgb(252,26,7)"/><text x="335.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="332" y="1268" width="3" height="15" fill="rgb(253,64,40)"/><text x="335.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="332" y="1284" width="3" height="15" fill="rgb(214,4,53)"/><text x="335.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="332" y="1300" width="3" height="15" fill="rgb(242,104,12)"/><text x="335.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="332" y="1316" width="3" height="15" fill="rgb(222,15,40)"/><text x="335.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="332" y="1332" width="3" height="15" fill="rgb(237,139,45)"/><text x="335.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="332" y="1348" width="3" height="15" fill="rgb(239,12,49)"/><text x="335.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.30%)</title><rect x="332" y="1364" width="3" height="15" fill="rgb(238,96,47)"/><text x="335.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="332" y="1380" width="3" height="15" fill="rgb(250,124,6)"/><text x="335.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="332" y="1396" width="3" height="15" fill="rgb(237,89,21)"/><text x="335.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="332" y="1412" width="3" height="15" fill="rgb(233,195,27)"/><text x="335.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="332" y="1428" width="3" height="15" fill="rgb(213,137,16)"/><text x="335.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="332" y="1444" width="3" height="15" fill="rgb(212,134,5)"/><text x="335.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.15%)</title><rect x="333" y="1460" width="2" height="15" fill="rgb(252,161,15)"/><text x="336.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="333" y="1476" width="2" height="15" fill="rgb(213,199,52)"/><text x="336.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="333" y="1492" width="2" height="15" fill="rgb(242,9,26)"/><text x="336.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="333" y="1508" width="2" height="15" fill="rgb(211,219,7)"/><text x="336.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="333" y="1524" width="2" height="15" fill="rgb(208,5,17)"/><text x="336.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="333" y="1540" width="2" height="15" fill="rgb(208,184,45)"/><text x="336.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.15%)</title><rect x="333" y="1556" width="2" height="15" fill="rgb(252,143,40)"/><text x="336.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.15%)</title><rect x="333" y="1572" width="2" height="15" fill="rgb(215,105,2)"/><text x="336.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="333" y="1588" width="2" height="15" fill="rgb(227,42,54)"/><text x="336.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="333" y="1604" width="2" height="15" fill="rgb(240,129,35)"/><text x="336.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="333" y="1620" width="2" height="15" fill="rgb(207,177,26)"/><text x="336.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="333" y="1636" width="2" height="15" fill="rgb(236,86,12)"/><text x="336.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="333" y="1652" width="2" height="15" fill="rgb(243,150,11)"/><text x="336.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (1 samples, 0.15%)</title><rect x="333" y="1668" width="2" height="15" fill="rgb(205,88,35)"/><text x="336.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py:79) (1 samples, 0.15%)</title><rect x="333" y="1684" width="2" height="15" fill="rgb(221,222,24)"/><text x="336.00" y="1694.50"></text></g><g><title>patch_all (jinja2/asyncsupport.py:172) (1 samples, 0.15%)</title><rect x="333" y="1700" width="2" height="15" fill="rgb(234,103,16)"/><text x="336.00" y="1710.50"></text></g><g><title>patch_filters (jinja2/asyncsupport.py:165) (1 samples, 0.15%)</title><rect x="333" y="1716" width="2" height="15" fill="rgb(236,62,28)"/><text x="336.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="333" y="1732" width="2" height="15" fill="rgb(226,175,51)"/><text x="336.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="333" y="1748" width="2" height="15" fill="rgb(209,90,47)"/><text x="336.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="333" y="1764" width="2" height="15" fill="rgb(234,60,42)"/><text x="336.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="333" y="1780" width="2" height="15" fill="rgb(215,27,6)"/><text x="336.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="333" y="1796" width="2" height="15" fill="rgb(230,15,5)"/><text x="336.00" y="1806.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncfilters.py:69) (1 samples, 0.15%)</title><rect x="333" y="1812" width="2" height="15" fill="rgb(240,221,54)"/><text x="336.00" y="1822.50"></text></g><g><title>decorator (jinja2/asyncfilters.py:57) (1 samples, 0.15%)</title><rect x="333" y="1828" width="2" height="15" fill="rgb(234,155,16)"/><text x="336.00" y="1838.50"></text></g><g><title>dualfilter (jinja2/asyncfilters.py:38) (1 samples, 0.15%)</title><rect x="333" y="1844" width="2" height="15" fill="rgb(212,223,22)"/><text x="336.00" y="1854.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.15%)</title><rect x="335" y="260" width="2" height="15" fill="rgb(215,31,22)"/><text x="338.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.15%)</title><rect x="335" y="276" width="2" height="15" fill="rgb(229,6,11)"/><text x="338.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.15%)</title><rect x="335" y="292" width="2" height="15" fill="rgb(219,225,35)"/><text x="338.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.15%)</title><rect x="335" y="308" width="2" height="15" fill="rgb(230,41,29)"/><text x="338.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.15%)</title><rect x="335" y="324" width="2" height="15" fill="rgb(233,83,53)"/><text x="338.00" y="334.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1867) (1 samples, 0.15%)</title><rect x="337" y="308" width="2" height="15" fill="rgb(248,80,19)"/><text x="340.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:19) (3 samples, 0.45%)</title><rect x="335" y="228" width="5" height="15" fill="rgb(206,179,50)"/><text x="338.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.45%)</title><rect x="335" y="244" width="5" height="15" fill="rgb(231,202,17)"/><text x="338.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.30%)</title><rect x="337" y="260" width="3" height="15" fill="rgb(245,159,24)"/><text x="340.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.30%)</title><rect x="337" y="276" width="3" height="15" fill="rgb(219,55,22)"/><text x="340.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.30%)</title><rect x="337" y="292" width="3" height="15" fill="rgb(220,123,21)"/><text x="340.00" y="302.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1871) (1 samples, 0.15%)</title><rect x="339" y="308" width="1" height="15" fill="rgb(244,216,1)"/><text x="342.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (4 samples, 0.59%)</title><rect x="335" y="196" width="7" height="15" fill="rgb(253,87,42)"/><text x="338.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (4 samples, 0.59%)</title><rect x="335" y="212" width="7" height="15" fill="rgb(205,54,20)"/><text x="338.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:23) (1 samples, 0.15%)</title><rect x="340" y="228" width="2" height="15" fill="rgb(251,68,11)"/><text x="343.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.15%)</title><rect x="340" y="244" width="2" height="15" fill="rgb(222,18,48)"/><text x="343.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.15%)</title><rect x="340" y="260" width="2" height="15" fill="rgb(244,137,52)"/><text x="343.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.15%)</title><rect x="340" y="276" width="2" height="15" fill="rgb(242,124,0)"/><text x="343.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.15%)</title><rect x="340" y="292" width="2" height="15" fill="rgb(239,43,43)"/><text x="343.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (1 samples, 0.15%)</title><rect x="340" y="308" width="2" height="15" fill="rgb(250,74,12)"/><text x="343.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.15%)</title><rect x="340" y="324" width="2" height="15" fill="rgb(214,196,39)"/><text x="343.00" y="334.50"></text></g><g><title>0x7f947d04fe00 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="340" y="340" width="2" height="15" fill="rgb(246,166,27)"/><text x="343.00" y="350.50"></text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:18) (6 samples, 0.89%)</title><rect x="335" y="100" width="11" height="15" fill="rgb(237,27,10)"/><text x="338.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (6 samples, 0.89%)</title><rect x="335" y="116" width="11" height="15" fill="rgb(212,130,20)"/><text x="338.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (6 samples, 0.89%)</title><rect x="335" y="132" width="11" height="15" fill="rgb(241,185,44)"/><text x="338.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (6 samples, 0.89%)</title><rect x="335" y="148" width="11" height="15" fill="rgb(237,42,22)"/><text x="338.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (6 samples, 0.89%)</title><rect x="335" y="164" width="11" height="15" fill="rgb(227,52,6)"/><text x="338.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (6 samples, 0.89%)</title><rect x="335" y="180" width="11" height="15" fill="rgb(253,169,50)"/><text x="338.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (2 samples, 0.30%)</title><rect x="342" y="196" width="4" height="15" fill="rgb(219,165,25)"/><text x="345.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (2 samples, 0.30%)</title><rect x="342" y="212" width="4" height="15" fill="rgb(247,158,25)"/><text x="345.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (2 samples, 0.30%)</title><rect x="342" y="228" width="4" height="15" fill="rgb(239,99,32)"/><text x="345.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (2 samples, 0.30%)</title><rect x="342" y="244" width="4" height="15" fill="rgb(223,120,5)"/><text x="345.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (2 samples, 0.30%)</title><rect x="342" y="260" width="4" height="15" fill="rgb(205,201,6)"/><text x="345.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.30%)</title><rect x="342" y="276" width="4" height="15" fill="rgb(223,31,36)"/><text x="345.00" y="286.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.15%)</title><rect x="346" y="164" width="1" height="15" fill="rgb(241,174,20)"/><text x="349.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (6 samples, 0.89%)</title><rect x="351" y="180" width="10" height="15" fill="rgb(236,204,38)"/><text x="354.00" y="190.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:204) (2 samples, 0.30%)</title><rect x="365" y="260" width="3" height="15" fill="rgb(207,171,18)"/><text x="368.00" y="270.50"></text></g><g><title>recursive_tolist (convert.c:83) (2 samples, 0.30%)</title><rect x="368" y="260" width="4" height="15" fill="rgb(213,60,3)"/><text x="371.00" y="270.50"></text></g><g><title>recursive_tolist (convert.c:102) (5 samples, 0.74%)</title><rect x="365" y="244" width="9" height="15" fill="rgb(234,73,33)"/><text x="368.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:89) (1 samples, 0.15%)</title><rect x="372" y="260" width="2" height="15" fill="rgb(236,57,53)"/><text x="375.00" y="270.50"></text></g><g><title>PyArray_GETITEM (ndarraytypes.h:1558) (1 samples, 0.15%)</title><rect x="372" y="276" width="2" height="15" fill="rgb(216,174,41)"/><text x="375.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (6 samples, 0.89%)</title><rect x="365" y="212" width="10" height="15" fill="rgb(217,87,40)"/><text x="368.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (6 samples, 0.89%)</title><rect x="365" y="228" width="10" height="15" fill="rgb(221,121,14)"/><text x="368.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:96) (1 samples, 0.15%)</title><rect x="374" y="244" width="1" height="15" fill="rgb(218,124,0)"/><text x="377.00" y="254.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="374" y="260" width="1" height="15" fill="rgb(249,218,5)"/><text x="377.00" y="270.50"></text></g><g><title>0x7f947cef1103 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="374" y="276" width="1" height="15" fill="rgb(243,1,47)"/><text x="377.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.15%)</title><rect x="375" y="276" width="2" height="15" fill="rgb(232,108,49)"/><text x="378.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:154) (1 samples, 0.15%)</title><rect x="377" y="324" width="2" height="15" fill="rgb(237,116,44)"/><text x="380.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (2 samples, 0.30%)</title><rect x="379" y="340" width="3" height="15" fill="rgb(240,202,27)"/><text x="382.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (3 samples, 0.45%)</title><rect x="379" y="324" width="5" height="15" fill="rgb(251,48,24)"/><text x="382.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (1 samples, 0.15%)</title><rect x="382" y="340" width="2" height="15" fill="rgb(229,148,16)"/><text x="385.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.15%)</title><rect x="382" y="356" width="2" height="15" fill="rgb(224,133,25)"/><text x="385.00" y="366.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (5 samples, 0.74%)</title><rect x="377" y="276" width="9" height="15" fill="rgb(222,148,36)"/><text x="380.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (5 samples, 0.74%)</title><rect x="377" y="292" width="9" height="15" fill="rgb(223,227,4)"/><text x="380.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (5 samples, 0.74%)</title><rect x="377" y="308" width="9" height="15" fill="rgb(242,184,34)"/><text x="380.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (1 samples, 0.15%)</title><rect x="384" y="324" width="2" height="15" fill="rgb(235,203,38)"/><text x="387.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.15%)</title><rect x="384" y="340" width="2" height="15" fill="rgb(252,110,16)"/><text x="387.00" y="350.50"></text></g><g><title>discover_dimensions (ctors.c:830) (1 samples, 0.15%)</title><rect x="386" y="292" width="2" height="15" fill="rgb(206,106,47)"/><text x="389.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:870) (1 samples, 0.15%)</title><rect x="388" y="292" width="1" height="15" fill="rgb(247,79,5)"/><text x="391.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:699) (1 samples, 0.15%)</title><rect x="388" y="308" width="1" height="15" fill="rgb(230,76,31)"/><text x="391.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:884) (2 samples, 0.30%)</title><rect x="389" y="292" width="4" height="15" fill="rgb(215,210,0)"/><text x="392.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:699) (2 samples, 0.30%)</title><rect x="389" y="308" width="4" height="15" fill="rgb(236,203,36)"/><text x="392.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (11 samples, 1.63%)</title><rect x="375" y="260" width="20" height="15" fill="rgb(220,188,21)"/><text x="378.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (5 samples, 0.74%)</title><rect x="386" y="276" width="9" height="15" fill="rgb(205,197,31)"/><text x="389.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:892) (1 samples, 0.15%)</title><rect x="393" y="292" width="2" height="15" fill="rgb(238,8,50)"/><text x="396.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (3 samples, 0.45%)</title><rect x="395" y="292" width="5" height="15" fill="rgb(249,121,0)"/><text x="398.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:537) (1 samples, 0.15%)</title><rect x="400" y="292" width="2" height="15" fill="rgb(238,2,47)"/><text x="403.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (1 samples, 0.15%)</title><rect x="402" y="324" width="1" height="15" fill="rgb(250,83,42)"/><text x="405.00" y="334.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (3 samples, 0.45%)</title><rect x="403" y="324" width="6" height="15" fill="rgb(222,219,1)"/><text x="406.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (3 samples, 0.45%)</title><rect x="403" y="340" width="6" height="15" fill="rgb(208,147,43)"/><text x="406.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1539) (22 samples, 3.26%)</title><rect x="375" y="228" width="39" height="15" fill="rgb(245,19,34)"/><text x="378.00" y="238.50">arr..</text></g><g><title>prepare_index (mapping.c:516) (22 samples, 3.26%)</title><rect x="375" y="244" width="39" height="15" fill="rgb(218,156,6)"/><text x="378.00" y="254.50">pre..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (11 samples, 1.63%)</title><rect x="395" y="260" width="19" height="15" fill="rgb(242,133,31)"/><text x="398.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (11 samples, 1.63%)</title><rect x="395" y="276" width="19" height="15" fill="rgb(239,123,19)"/><text x="398.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (7 samples, 1.04%)</title><rect x="402" y="292" width="12" height="15" fill="rgb(247,30,21)"/><text x="405.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (7 samples, 1.04%)</title><rect x="402" y="308" width="12" height="15" fill="rgb(228,71,9)"/><text x="405.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:233) (3 samples, 0.45%)</title><rect x="409" y="324" width="5" height="15" fill="rgb(248,77,48)"/><text x="412.00" y="334.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.15%)</title><rect x="412" y="340" width="2" height="15" fill="rgb(227,8,2)"/><text x="415.00" y="350.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1567) (1 samples, 0.15%)</title><rect x="414" y="244" width="2" height="15" fill="rgb(222,7,32)"/><text x="417.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.15%)</title><rect x="416" y="244" width="1" height="15" fill="rgb(253,106,27)"/><text x="419.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (26 samples, 3.86%)</title><rect x="375" y="212" width="46" height="15" fill="rgb(240,69,44)"/><text x="378.00" y="222.50">_run..</text></g><g><title>array_subscript (mapping.c:1676) (4 samples, 0.59%)</title><rect x="414" y="228" width="7" height="15" fill="rgb(225,58,14)"/><text x="417.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (2 samples, 0.30%)</title><rect x="417" y="244" width="4" height="15" fill="rgb(250,18,1)"/><text x="420.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.15%)</title><rect x="421" y="212" width="2" height="15" fill="rgb(221,137,18)"/><text x="424.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.15%)</title><rect x="421" y="228" width="2" height="15" fill="rgb(228,192,28)"/><text x="424.00" y="238.50"></text></g><g><title>array_astype (methods.c:828) (1 samples, 0.15%)</title><rect x="421" y="244" width="2" height="15" fill="rgb(252,172,13)"/><text x="424.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:969) (1 samples, 0.15%)</title><rect x="421" y="260" width="2" height="15" fill="rgb(238,37,7)"/><text x="424.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (35 samples, 5.19%)</title><rect x="363" y="196" width="61" height="15" fill="rgb(213,66,35)"/><text x="366.00" y="206.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.15%)</title><rect x="423" y="212" width="1" height="15" fill="rgb(207,217,41)"/><text x="426.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.15%)</title><rect x="423" y="228" width="1" height="15" fill="rgb(239,158,5)"/><text x="426.00" y="238.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.15%)</title><rect x="430" y="356" width="1" height="15" fill="rgb(228,40,29)"/><text x="433.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.15%)</title><rect x="430" y="372" width="1" height="15" fill="rgb(226,14,17)"/><text x="433.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.15%)</title><rect x="430" y="388" width="1" height="15" fill="rgb(213,141,0)"/><text x="433.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.15%)</title><rect x="430" y="404" width="1" height="15" fill="rgb(241,107,1)"/><text x="433.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.15%)</title><rect x="430" y="420" width="1" height="15" fill="rgb(235,35,38)"/><text x="433.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.15%)</title><rect x="430" y="436" width="1" height="15" fill="rgb(217,1,52)"/><text x="433.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="430" y="452" width="1" height="15" fill="rgb(238,57,16)"/><text x="433.00" y="462.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3094) (1 samples, 0.15%)</title><rect x="431" y="372" width="2" height="15" fill="rgb(215,63,53)"/><text x="434.00" y="382.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (5 samples, 0.74%)</title><rect x="426" y="260" width="9" height="15" fill="rgb(222,9,29)"/><text x="429.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (5 samples, 0.74%)</title><rect x="426" y="276" width="9" height="15" fill="rgb(240,101,26)"/><text x="429.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.74%)</title><rect x="426" y="292" width="9" height="15" fill="rgb(233,123,14)"/><text x="429.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (5 samples, 0.74%)</title><rect x="426" y="308" width="9" height="15" fill="rgb(249,137,52)"/><text x="429.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 0.59%)</title><rect x="428" y="324" width="7" height="15" fill="rgb(236,90,42)"/><text x="431.00" y="334.50"></text></g><g><title>array_argmax (methods.c:302) (3 samples, 0.45%)</title><rect x="430" y="340" width="5" height="15" fill="rgb(219,9,27)"/><text x="433.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (2 samples, 0.30%)</title><rect x="431" y="356" width="4" height="15" fill="rgb(227,16,48)"/><text x="434.00" y="366.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (1 samples, 0.15%)</title><rect x="433" y="372" width="2" height="15" fill="rgb(240,94,33)"/><text x="436.00" y="382.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:14) (1 samples, 0.15%)</title><rect x="435" y="260" width="2" height="15" fill="rgb(252,115,42)"/><text x="438.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.15%)</title><rect x="437" y="292" width="1" height="15" fill="rgb(232,154,34)"/><text x="440.00" y="302.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (3 samples, 0.45%)</title><rect x="437" y="260" width="5" height="15" fill="rgb(250,159,38)"/><text x="440.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (3 samples, 0.45%)</title><rect x="437" y="276" width="5" height="15" fill="rgb(210,72,44)"/><text x="440.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.30%)</title><rect x="438" y="292" width="4" height="15" fill="rgb(222,23,31)"/><text x="441.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:574) (1 samples, 0.15%)</title><rect x="440" y="308" width="2" height="15" fill="rgb(214,126,45)"/><text x="443.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (11 samples, 1.63%)</title><rect x="424" y="196" width="20" height="15" fill="rgb(222,50,54)"/><text x="427.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (10 samples, 1.48%)</title><rect x="426" y="212" width="18" height="15" fill="rgb(244,192,18)"/><text x="429.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (10 samples, 1.48%)</title><rect x="426" y="228" width="18" height="15" fill="rgb(239,30,17)"/><text x="429.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (10 samples, 1.48%)</title><rect x="426" y="244" width="18" height="15" fill="rgb(231,77,22)"/><text x="429.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:16) (1 samples, 0.15%)</title><rect x="442" y="260" width="2" height="15" fill="rgb(205,9,45)"/><text x="445.00" y="270.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.15%)</title><rect x="442" y="276" width="2" height="15" fill="rgb(217,108,1)"/><text x="445.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.15%)</title><rect x="442" y="292" width="2" height="15" fill="rgb(221,98,6)"/><text x="445.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.15%)</title><rect x="442" y="308" width="2" height="15" fill="rgb(227,210,29)"/><text x="445.00" y="318.50"></text></g><g><title>0x7f947cef0d94 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="442" y="324" width="2" height="15" fill="rgb(241,7,17)"/><text x="445.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:18) (1 samples, 0.15%)</title><rect x="447" y="228" width="2" height="15" fill="rgb(240,217,47)"/><text x="450.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.15%)</title><rect x="449" y="260" width="2" height="15" fill="rgb(233,122,23)"/><text x="452.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:557) (1 samples, 0.15%)</title><rect x="449" y="276" width="2" height="15" fill="rgb(211,211,35)"/><text x="452.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.15%)</title><rect x="451" y="276" width="1" height="15" fill="rgb(210,154,27)"/><text x="454.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.15%)</title><rect x="451" y="292" width="1" height="15" fill="rgb(233,21,44)"/><text x="454.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:811) (1 samples, 0.15%)</title><rect x="451" y="308" width="1" height="15" fill="rgb(221,72,5)"/><text x="454.00" y="318.50"></text></g><g><title>strides_to_terms (mem_overlap.c:735) (1 samples, 0.15%)</title><rect x="451" y="324" width="1" height="15" fill="rgb(232,197,50)"/><text x="454.00" y="334.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1867) (27 samples, 4.01%)</title><rect x="452" y="308" width="48" height="15" fill="rgb(214,52,22)"/><text x="455.00" y="318.50">FLOA..</text></g><g><title>FLOAT_maximum (loops.c.src:1868) (2 samples, 0.30%)</title><rect x="500" y="308" width="3" height="15" fill="rgb(253,155,13)"/><text x="503.00" y="318.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1871) (26 samples, 3.86%)</title><rect x="503" y="308" width="46" height="15" fill="rgb(205,9,50)"/><text x="506.00" y="318.50">FLOA..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:19) (59 samples, 8.75%)</title><rect x="449" y="228" width="103" height="15" fill="rgb(227,105,4)"/><text x="452.00" y="238.50">_run (mlprod..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (59 samples, 8.75%)</title><rect x="449" y="244" width="103" height="15" fill="rgb(240,167,25)"/><text x="452.00" y="254.50">ufunc_generi..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (58 samples, 8.61%)</title><rect x="451" y="260" width="101" height="15" fill="rgb(211,172,16)"/><text x="454.00" y="270.50">PyUFunc_Gene..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (57 samples, 8.46%)</title><rect x="452" y="276" width="100" height="15" fill="rgb(230,93,36)"/><text x="455.00" y="286.50">execute_lega..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (57 samples, 8.46%)</title><rect x="452" y="292" width="100" height="15" fill="rgb(232,182,54)"/><text x="455.00" y="302.50">trivial_thre..</text></g><g><title>FLOAT_maximum (loops.c.src:1872) (2 samples, 0.30%)</title><rect x="549" y="308" width="3" height="15" fill="rgb(234,171,23)"/><text x="552.00" y="318.50"></text></g><g><title>sse2_maximum_FLOAT (simd.inc.src:1085) (1 samples, 0.15%)</title><rect x="552" y="404" width="2" height="15" fill="rgb(228,25,24)"/><text x="555.00" y="414.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1857) (2 samples, 0.30%)</title><rect x="552" y="372" width="4" height="15" fill="rgb(209,136,33)"/><text x="555.00" y="382.50"></text></g><g><title>run_unary_reduce_simd_maximum_FLOAT (simd.inc.src:195) (2 samples, 0.30%)</title><rect x="552" y="388" width="4" height="15" fill="rgb(253,205,39)"/><text x="555.00" y="398.50"></text></g><g><title>sse2_maximum_FLOAT (simd.inc.src:1117) (1 samples, 0.15%)</title><rect x="554" y="404" width="2" height="15" fill="rgb(245,193,46)"/><text x="557.00" y="414.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.15%)</title><rect x="554" y="420" width="2" height="15" fill="rgb(235,59,15)"/><text x="557.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.15%)</title><rect x="554" y="436" width="2" height="15" fill="rgb(245,34,39)"/><text x="557.00" y="446.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.15%)</title><rect x="554" y="452" width="2" height="15" fill="rgb(212,162,17)"/><text x="557.00" y="462.50"></text></g><g><title>array_max (methods.c:323) (4 samples, 0.59%)</title><rect x="552" y="244" width="7" height="15" fill="rgb(225,194,20)"/><text x="555.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (4 samples, 0.59%)</title><rect x="552" y="260" width="7" height="15" fill="rgb(229,162,36)"/><text x="555.00" y="270.50"></text></g><g><title>_amax (numpy/core/_methods.py:30) (4 samples, 0.59%)</title><rect x="552" y="276" width="7" height="15" fill="rgb(238,104,51)"/><text x="555.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.59%)</title><rect x="552" y="292" width="7" height="15" fill="rgb(214,109,41)"/><text x="555.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.59%)</title><rect x="552" y="308" width="7" height="15" fill="rgb(209,172,6)"/><text x="555.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.59%)</title><rect x="552" y="324" width="7" height="15" fill="rgb(221,94,42)"/><text x="555.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (4 samples, 0.59%)</title><rect x="552" y="340" width="7" height="15" fill="rgb(246,100,32)"/><text x="555.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (4 samples, 0.59%)</title><rect x="552" y="356" width="7" height="15" fill="rgb(207,27,0)"/><text x="555.00" y="366.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1876) (2 samples, 0.30%)</title><rect x="556" y="372" width="3" height="15" fill="rgb(224,40,38)"/><text x="559.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (2 samples, 0.30%)</title><rect x="556" y="388" width="3" height="15" fill="rgb(249,179,48)"/><text x="559.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (2 samples, 0.30%)</title><rect x="556" y="404" width="3" height="15" fill="rgb(247,37,10)"/><text x="559.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (2 samples, 0.30%)</title><rect x="556" y="420" width="3" height="15" fill="rgb(254,80,19)"/><text x="559.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.15%)</title><rect x="559" y="260" width="2" height="15" fill="rgb(238,161,41)"/><text x="562.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.15%)</title><rect x="559" y="276" width="2" height="15" fill="rgb(216,90,1)"/><text x="562.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.15%)</title><rect x="559" y="292" width="2" height="15" fill="rgb(233,57,43)"/><text x="562.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.15%)</title><rect x="561" y="324" width="2" height="15" fill="rgb(226,16,5)"/><text x="564.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.15%)</title><rect x="561" y="340" width="2" height="15" fill="rgb(211,121,26)"/><text x="564.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.15%)</title><rect x="561" y="356" width="2" height="15" fill="rgb(240,221,37)"/><text x="564.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.30%)</title><rect x="561" y="292" width="3" height="15" fill="rgb(216,124,8)"/><text x="564.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.30%)</title><rect x="561" y="308" width="3" height="15" fill="rgb(218,108,29)"/><text x="564.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.15%)</title><rect x="563" y="324" width="1" height="15" fill="rgb(244,98,46)"/><text x="566.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:22) (8 samples, 1.19%)</title><rect x="552" y="228" width="14" height="15" fill="rgb(243,108,14)"/><text x="555.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.59%)</title><rect x="559" y="244" width="7" height="15" fill="rgb(228,160,7)"/><text x="562.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.45%)</title><rect x="561" y="260" width="5" height="15" fill="rgb(240,129,47)"/><text x="564.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.45%)</title><rect x="561" y="276" width="5" height="15" fill="rgb(239,218,34)"/><text x="564.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.15%)</title><rect x="564" y="292" width="2" height="15" fill="rgb(238,109,0)"/><text x="567.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.15%)</title><rect x="564" y="308" width="2" height="15" fill="rgb(236,140,43)"/><text x="567.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="564" y="324" width="2" height="15" fill="rgb(226,207,19)"/><text x="567.00" y="334.50"></text></g><g><title>0x7f947c0f32e0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="570" y="324" width="1" height="15" fill="rgb(207,190,38)"/><text x="573.00" y="334.50"></text></g><g><title>0x7f947d04fe00 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="575" y="340" width="2" height="15" fill="rgb(218,221,16)"/><text x="578.00" y="350.50"></text></g><g><title>0x7f947d04fe62 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="577" y="340" width="1" height="15" fill="rgb(218,150,5)"/><text x="580.00" y="350.50"></text></g><g><title>0x7f947d04fe71 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="578" y="340" width="2" height="15" fill="rgb(205,91,36)"/><text x="581.00" y="350.50"></text></g><g><title>0x7f947d04fea2 (libm-2.29.so) (2 samples, 0.30%)</title><rect x="580" y="340" width="4" height="15" fill="rgb(243,197,36)"/><text x="583.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:23) (11 samples, 1.63%)</title><rect x="566" y="228" width="19" height="15" fill="rgb(221,178,23)"/><text x="569.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.63%)</title><rect x="566" y="244" width="19" height="15" fill="rgb(222,39,19)"/><text x="569.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.63%)</title><rect x="566" y="260" width="19" height="15" fill="rgb(229,210,44)"/><text x="569.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (11 samples, 1.63%)</title><rect x="566" y="276" width="19" height="15" fill="rgb(237,180,54)"/><text x="569.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (11 samples, 1.63%)</title><rect x="566" y="292" width="19" height="15" fill="rgb(218,143,48)"/><text x="569.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (11 samples, 1.63%)</title><rect x="566" y="308" width="19" height="15" fill="rgb(209,205,49)"/><text x="569.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (8 samples, 1.19%)</title><rect x="571" y="324" width="14" height="15" fill="rgb(215,26,31)"/><text x="574.00" y="334.50"></text></g><g><title>0x7f947d04fea6 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="584" y="340" width="1" height="15" fill="rgb(216,130,33)"/><text x="587.00" y="350.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.15%)</title><rect x="587" y="372" width="2" height="15" fill="rgb(245,51,19)"/><text x="590.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.15%)</title><rect x="589" y="372" width="2" height="15" fill="rgb(209,7,16)"/><text x="592.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (2 samples, 0.30%)</title><rect x="591" y="372" width="3" height="15" fill="rgb(224,20,18)"/><text x="594.00" y="382.50"></text></g><g><title>array_sum (methods.c:2215) (5 samples, 0.74%)</title><rect x="587" y="244" width="9" height="15" fill="rgb(222,205,14)"/><text x="590.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (5 samples, 0.74%)</title><rect x="587" y="260" width="9" height="15" fill="rgb(253,199,49)"/><text x="590.00" y="270.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (5 samples, 0.74%)</title><rect x="587" y="276" width="9" height="15" fill="rgb(219,30,13)"/><text x="590.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 0.74%)</title><rect x="587" y="292" width="9" height="15" fill="rgb(226,119,6)"/><text x="590.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.74%)</title><rect x="587" y="308" width="9" height="15" fill="rgb(209,115,8)"/><text x="590.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 0.74%)</title><rect x="587" y="324" width="9" height="15" fill="rgb(232,74,22)"/><text x="590.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (5 samples, 0.74%)</title><rect x="587" y="340" width="9" height="15" fill="rgb(240,15,26)"/><text x="590.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (5 samples, 0.74%)</title><rect x="587" y="356" width="9" height="15" fill="rgb(221,21,17)"/><text x="590.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.15%)</title><rect x="594" y="372" width="2" height="15" fill="rgb(214,16,36)"/><text x="597.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.15%)</title><rect x="596" y="260" width="2" height="15" fill="rgb(211,223,36)"/><text x="599.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.15%)</title><rect x="596" y="276" width="2" height="15" fill="rgb(230,54,41)"/><text x="599.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.15%)</title><rect x="596" y="292" width="2" height="15" fill="rgb(229,182,33)"/><text x="599.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (89 samples, 13.20%)</title><rect x="444" y="196" width="156" height="15" fill="rgb(207,24,8)"/><text x="447.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (88 samples, 13.06%)</title><rect x="445" y="212" width="155" height="15" fill="rgb(210,92,4)"/><text x="448.00" y="222.50">run (mlprodict/onnx..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:24) (8 samples, 1.19%)</title><rect x="585" y="228" width="15" height="15" fill="rgb(229,7,15)"/><text x="588.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.30%)</title><rect x="596" y="244" width="4" height="15" fill="rgb(243,2,9)"/><text x="599.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.15%)</title><rect x="598" y="260" width="2" height="15" fill="rgb(220,102,29)"/><text x="601.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.15%)</title><rect x="598" y="276" width="2" height="15" fill="rgb(253,95,9)"/><text x="601.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.15%)</title><rect x="598" y="292" width="2" height="15" fill="rgb(210,117,51)"/><text x="601.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.15%)</title><rect x="598" y="308" width="2" height="15" fill="rgb(249,55,44)"/><text x="601.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="598" y="324" width="2" height="15" fill="rgb(244,34,25)"/><text x="601.00" y="334.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (2 samples, 0.30%)</title><rect x="600" y="308" width="3" height="15" fill="rgb(247,67,29)"/><text x="603.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (2 samples, 0.30%)</title><rect x="600" y="324" width="3" height="15" fill="rgb(247,112,15)"/><text x="603.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:603) (2 samples, 0.30%)</title><rect x="600" y="340" width="3" height="15" fill="rgb(222,205,44)"/><text x="603.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h:157) (2 samples, 0.30%)</title><rect x="600" y="356" width="3" height="15" fill="rgb(214,202,4)"/><text x="603.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.45%)</title><rect x="600" y="244" width="5" height="15" fill="rgb(218,188,8)"/><text x="603.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.45%)</title><rect x="600" y="260" width="5" height="15" fill="rgb(231,224,36)"/><text x="603.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.45%)</title><rect x="600" y="276" width="5" height="15" fill="rgb(220,167,45)"/><text x="603.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.45%)</title><rect x="600" y="292" width="5" height="15" fill="rgb(232,75,10)"/><text x="603.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:322) (1 samples, 0.15%)</title><rect x="603" y="308" width="2" height="15" fill="rgb(213,89,3)"/><text x="606.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.15%)</title><rect x="603" y="324" width="2" height="15" fill="rgb(253,142,28)"/><text x="606.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.15%)</title><rect x="603" y="340" width="2" height="15" fill="rgb(220,84,42)"/><text x="606.00" y="350.50"></text></g><g><title>0x7f947cef0f53 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="603" y="356" width="2" height="15" fill="rgb(253,185,39)"/><text x="606.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (4 samples, 0.59%)</title><rect x="600" y="228" width="7" height="15" fill="rgb(219,52,5)"/><text x="603.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4758) (1 samples, 0.15%)</title><rect x="605" y="244" width="2" height="15" fill="rgb(240,13,5)"/><text x="608.00" y="254.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (9 samples, 1.34%)</title><rect x="610" y="324" width="16" height="15" fill="rgb(245,130,23)"/><text x="613.00" y="334.50"></text></g><g><title>0x7f947cef1103 (libc-2.29.so) (9 samples, 1.34%)</title><rect x="610" y="340" width="16" height="15" fill="rgb(212,54,20)"/><text x="613.00" y="350.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (30 samples, 4.45%)</title><rect x="626" y="420" width="52" height="15" fill="rgb(228,188,38)"/><text x="629.00" y="430.50">exec_..</text></g><g><title>sched_yield (libc-2.29.so) (30 samples, 4.45%)</title><rect x="626" y="436" width="52" height="15" fill="rgb(254,165,24)"/><text x="629.00" y="446.50">sched..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (47 samples, 6.97%)</title><rect x="610" y="276" width="82" height="15" fill="rgb(211,134,43)"/><text x="613.00" y="286.50">array_imp..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (47 samples, 6.97%)</title><rect x="610" y="292" width="82" height="15" fill="rgb(209,228,17)"/><text x="613.00" y="302.50">array_mat..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (47 samples, 6.97%)</title><rect x="610" y="308" width="82" height="15" fill="rgb(213,178,19)"/><text x="613.00" y="318.50">PyArray_M..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (38 samples, 5.64%)</title><rect x="626" y="324" width="66" height="15" fill="rgb(244,226,25)"/><text x="629.00" y="334.50">cblas_m..</text></g><g><title>gemm (cblasfuncs.c:40) (38 samples, 5.64%)</title><rect x="626" y="340" width="66" height="15" fill="rgb(217,26,15)"/><text x="629.00" y="350.50">gemm (c..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (38 samples, 5.64%)</title><rect x="626" y="356" width="66" height="15" fill="rgb(224,90,4)"/><text x="629.00" y="366.50">cblas_s..</text></g><g><title>sgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (38 samples, 5.64%)</title><rect x="626" y="372" width="66" height="15" fill="rgb(226,144,36)"/><text x="629.00" y="382.50">sgemm_t..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (38 samples, 5.64%)</title><rect x="626" y="388" width="66" height="15" fill="rgb(243,149,21)"/><text x="629.00" y="398.50">gemm_dr..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (38 samples, 5.64%)</title><rect x="626" y="404" width="66" height="15" fill="rgb(237,147,18)"/><text x="629.00" y="414.50">exec_bl..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.19%)</title><rect x="678" y="420" width="14" height="15" fill="rgb(222,32,10)"/><text x="681.00" y="430.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.19%)</title><rect x="678" y="436" width="14" height="15" fill="rgb(241,17,5)"/><text x="681.00" y="446.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.74%)</title><rect x="692" y="276" width="9" height="15" fill="rgb(215,102,2)"/><text x="695.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (212 samples, 31.45%)</title><rect x="361" y="180" width="372" height="15" fill="rgb(249,32,13)"/><text x="364.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (76 samples, 11.28%)</title><rect x="600" y="196" width="133" height="15" fill="rgb(219,161,0)"/><text x="603.00" y="206.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (76 samples, 11.28%)</title><rect x="600" y="212" width="133" height="15" fill="rgb(208,119,17)"/><text x="603.00" y="222.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (72 samples, 10.68%)</title><rect x="607" y="228" width="126" height="15" fill="rgb(238,26,30)"/><text x="610.00" y="238.50">_run (mlprodict..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (72 samples, 10.68%)</title><rect x="607" y="244" width="126" height="15" fill="rgb(245,9,19)"/><text x="610.00" y="254.50">numpy_dot_inpla..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (70 samples, 10.39%)</title><rect x="610" y="260" width="123" height="15" fill="rgb(242,159,2)"/><text x="613.00" y="270.50">dot (&lt;__array_f..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 2.67%)</title><rect x="701" y="276" width="32" height="15" fill="rgb(236,229,39)"/><text x="704.00" y="286.50">sg..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.15%)</title><rect x="733" y="180" width="1" height="15" fill="rgb(234,161,19)"/><text x="736.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 0.45%)</title><rect x="734" y="180" width="6" height="15" fill="rgb(243,13,12)"/><text x="737.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.45%)</title><rect x="740" y="180" width="5" height="15" fill="rgb(231,214,9)"/><text x="743.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:45) (235 samples, 34.87%)</title><rect x="335" y="52" width="412" height="15" fill="rgb(246,104,43)"/><text x="338.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_4_12_flo..</text></g><g><title>profile_pyrt (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:44) (235 samples, 34.87%)</title><rect x="335" y="68" width="412" height="15" fill="rgb(208,116,22)"/><text x="338.00" y="78.50">profile_pyrt (bench_MLPClassifier_default_m_cl_1000_4_12..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:29) (235 samples, 34.87%)</title><rect x="335" y="84" width="412" height="15" fill="rgb(240,99,10)"/><text x="338.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_1000_4_1..</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:23) (229 samples, 33.98%)</title><rect x="346" y="100" width="401" height="15" fill="rgb(212,136,2)"/><text x="349.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1000_4_12_fl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (229 samples, 33.98%)</title><rect x="346" y="116" width="401" height="15" fill="rgb(251,162,12)"/><text x="349.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (229 samples, 33.98%)</title><rect x="346" y="132" width="401" height="15" fill="rgb(240,45,10)"/><text x="349.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:23..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (229 samples, 33.98%)</title><rect x="346" y="148" width="401" height="15" fill="rgb(228,174,43)"/><text x="349.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (228 samples, 33.83%)</title><rect x="347" y="164" width="400" height="15" fill="rgb(244,156,44)"/><text x="350.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.15%)</title><rect x="745" y="180" width="2" height="15" fill="rgb(213,224,18)"/><text x="748.00" y="190.50"></text></g><g><title>0x7f943af13ff9 (?) (1 samples, 0.15%)</title><rect x="750" y="212" width="2" height="15" fill="rgb(236,4,26)"/><text x="753.00" y="222.50"></text></g><g><title>0x7f943af0eef6 (?) (1 samples, 0.15%)</title><rect x="750" y="228" width="2" height="15" fill="rgb(246,31,42)"/><text x="753.00" y="238.50"></text></g><g><title>0x7f943af03c99 (?) (1 samples, 0.15%)</title><rect x="750" y="244" width="2" height="15" fill="rgb(240,35,41)"/><text x="753.00" y="254.50"></text></g><g><title>0x7f943af21c7b (?) (1 samples, 0.15%)</title><rect x="750" y="260" width="2" height="15" fill="rgb(212,134,13)"/><text x="753.00" y="270.50"></text></g><g><title>0x7f943aef954e (?) (1 samples, 0.15%)</title><rect x="750" y="276" width="2" height="15" fill="rgb(236,205,12)"/><text x="753.00" y="286.50"></text></g><g><title>mkl_blas_avx_sgemm_kernel_0 (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="752" y="212" width="2" height="15" fill="rgb(216,156,51)"/><text x="755.00" y="222.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="754" y="340" width="1" height="15" fill="rgb(218,56,52)"/><text x="757.00" y="350.50"></text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="754" y="356" width="1" height="15" fill="rgb(240,4,0)"/><text x="757.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="754" y="372" width="1" height="15" fill="rgb(214,124,31)"/><text x="757.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="754" y="388" width="1" height="15" fill="rgb(240,110,45)"/><text x="757.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="754" y="404" width="1" height="15" fill="rgb(212,162,2)"/><text x="757.00" y="414.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="754" y="420" width="1" height="15" fill="rgb(248,80,22)"/><text x="757.00" y="430.50"></text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="754" y="436" width="1" height="15" fill="rgb(241,75,49)"/><text x="757.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="754" y="452" width="1" height="15" fill="rgb(217,131,21)"/><text x="757.00" y="462.50"></text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="754" y="468" width="1" height="15" fill="rgb(215,141,40)"/><text x="757.00" y="478.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0 (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="754" y="484" width="1" height="15" fill="rgb(252,70,5)"/><text x="757.00" y="494.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0_pst (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="754" y="500" width="1" height="15" fill="rgb(207,5,5)"/><text x="757.00" y="510.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="754" y="260" width="3" height="15" fill="rgb(224,13,54)"/><text x="757.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="754" y="276" width="3" height="15" fill="rgb(229,177,35)"/><text x="757.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="754" y="292" width="3" height="15" fill="rgb(214,66,21)"/><text x="757.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="754" y="308" width="3" height="15" fill="rgb(215,75,37)"/><text x="757.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="754" y="324" width="3" height="15" fill="rgb(237,202,49)"/><text x="757.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="755" y="340" width="2" height="15" fill="rgb(236,63,22)"/><text x="758.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="755" y="356" width="2" height="15" fill="rgb(224,103,1)"/><text x="758.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="755" y="372" width="2" height="15" fill="rgb(214,57,19)"/><text x="758.00" y="382.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="757" y="260" width="2" height="15" fill="rgb(236,37,38)"/><text x="760.00" y="270.50"></text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:18) (8 samples, 1.19%)</title><rect x="747" y="100" width="14" height="15" fill="rgb(214,30,3)"/><text x="750.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (6 samples, 0.89%)</title><rect x="750" y="116" width="11" height="15" fill="rgb(239,153,53)"/><text x="753.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (6 samples, 0.89%)</title><rect x="750" y="132" width="11" height="15" fill="rgb(209,61,6)"/><text x="753.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (6 samples, 0.89%)</title><rect x="750" y="148" width="11" height="15" fill="rgb(251,229,29)"/><text x="753.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (6 samples, 0.89%)</title><rect x="750" y="164" width="11" height="15" fill="rgb(211,31,16)"/><text x="753.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (6 samples, 0.89%)</title><rect x="750" y="180" width="11" height="15" fill="rgb(246,221,34)"/><text x="753.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (6 samples, 0.89%)</title><rect x="750" y="196" width="11" height="15" fill="rgb(220,206,13)"/><text x="753.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.59%)</title><rect x="754" y="212" width="7" height="15" fill="rgb(208,188,16)"/><text x="757.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.59%)</title><rect x="754" y="228" width="7" height="15" fill="rgb(216,122,38)"/><text x="757.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.59%)</title><rect x="754" y="244" width="7" height="15" fill="rgb(237,177,27)"/><text x="757.00" y="254.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="759" y="260" width="2" height="15" fill="rgb(219,33,8)"/><text x="762.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="759" y="276" width="2" height="15" fill="rgb(254,6,24)"/><text x="762.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="759" y="292" width="2" height="15" fill="rgb(246,43,19)"/><text x="762.00" y="302.50"></text></g><g><title>0x7f947ced0d07 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="759" y="308" width="2" height="15" fill="rgb(247,180,2)"/><text x="762.00" y="318.50"></text></g><g><title>0x7f947cecfbc6 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="792" y="132" width="2" height="15" fill="rgb(235,119,30)"/><text x="795.00" y="142.50"></text></g><g><title>0x7f947cecfc36 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="794" y="132" width="2" height="15" fill="rgb(205,210,48)"/><text x="797.00" y="142.50"></text></g><g><title>0x7f947cecfc45 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="796" y="132" width="1" height="15" fill="rgb(252,123,1)"/><text x="799.00" y="142.50"></text></g><g><title>0x7f947cecfc49 (libc-2.29.so) (2 samples, 0.30%)</title><rect x="797" y="132" width="4" height="15" fill="rgb(210,64,31)"/><text x="800.00" y="142.50"></text></g><g><title>0x7f947cecfc4d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="801" y="132" width="2" height="15" fill="rgb(244,186,47)"/><text x="804.00" y="142.50"></text></g><g><title>0x7f947ced0eb0 (libc-2.29.so) (7 samples, 1.04%)</title><rect x="792" y="116" width="12" height="15" fill="rgb(231,150,51)"/><text x="795.00" y="126.50"></text></g><g><title>0x7f947cecfc73 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="803" y="132" width="1" height="15" fill="rgb(247,114,39)"/><text x="806.00" y="142.50"></text></g><g><title>0x7f947cecfb0a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="803" y="148" width="1" height="15" fill="rgb(238,94,2)"/><text x="806.00" y="158.50"></text></g><g><title>__munmap (libc-2.29.so) (3 samples, 0.45%)</title><rect x="804" y="116" width="6" height="15" fill="rgb(215,226,37)"/><text x="807.00" y="126.50"></text></g><g><title>mkl_blas_avx_sgemm_kernel_0 (onnxruntime/capi/libmklml_intel.so) (15 samples, 2.23%)</title><rect x="813" y="212" width="26" height="15" fill="rgb(245,34,2)"/><text x="816.00" y="222.50">m..</text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="839" y="228" width="2" height="15" fill="rgb(223,84,30)"/><text x="842.00" y="238.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="839" y="244" width="2" height="15" fill="rgb(241,70,53)"/><text x="842.00" y="254.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.59%)</title><rect x="841" y="340" width="7" height="15" fill="rgb(244,205,11)"/><text x="844.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.45%)</title><rect x="843" y="356" width="5" height="15" fill="rgb(209,120,33)"/><text x="846.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="848" y="340" width="2" height="15" fill="rgb(209,194,6)"/><text x="851.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="848" y="356" width="2" height="15" fill="rgb(229,140,3)"/><text x="851.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="848" y="372" width="2" height="15" fill="rgb(226,39,47)"/><text x="851.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="848" y="388" width="2" height="15" fill="rgb(253,126,50)"/><text x="851.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="848" y="404" width="2" height="15" fill="rgb(221,189,22)"/><text x="851.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="848" y="420" width="2" height="15" fill="rgb(254,220,41)"/><text x="851.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="848" y="436" width="2" height="15" fill="rgb(236,80,16)"/><text x="851.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="848" y="452" width="2" height="15" fill="rgb(220,76,53)"/><text x="851.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="848" y="468" width="2" height="15" fill="rgb(248,88,48)"/><text x="851.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="848" y="484" width="2" height="15" fill="rgb(234,70,50)"/><text x="851.00" y="494.50"></text></g><g><title>onnxruntime::Cast&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="850" y="340" width="2" height="15" fill="rgb(230,88,13)"/><text x="853.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="852" y="340" width="1" height="15" fill="rgb(245,121,7)"/><text x="855.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="852" y="356" width="1" height="15" fill="rgb(243,73,44)"/><text x="855.00" y="366.50"></text></g><g><title>mkl_blas_avx_sgemm_pst (onnxruntime/capi/libmklml_intel.so) (57 samples, 8.46%)</title><rect x="862" y="468" width="100" height="15" fill="rgb(224,33,8)"/><text x="865.00" y="478.50">mkl_blas_avx..</text></g><g><title>mkl_blas_avx_sgemm_copybn (onnxruntime/capi/libmklml_intel.so) (5 samples, 0.74%)</title><rect x="962" y="484" width="9" height="15" fill="rgb(232,168,31)"/><text x="965.00" y="494.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 10.09%)</title><rect x="853" y="340" width="119" height="15" fill="rgb(229,135,37)"/><text x="856.00" y="350.50">onnxruntime::G..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 9.35%)</title><rect x="862" y="356" width="110" height="15" fill="rgb(212,89,34)"/><text x="865.00" y="366.50">onnxruntime::..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (63 samples, 9.35%)</title><rect x="862" y="372" width="110" height="15" fill="rgb(239,180,2)"/><text x="865.00" y="382.50">cblas_sgemm (..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (63 samples, 9.35%)</title><rect x="862" y="388" width="110" height="15" fill="rgb(251,172,17)"/><text x="865.00" y="398.50">sgemm_ (onnxr..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (63 samples, 9.35%)</title><rect x="862" y="404" width="110" height="15" fill="rgb(240,171,33)"/><text x="865.00" y="414.50">mkl_blas_sgem..</text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (63 samples, 9.35%)</title><rect x="862" y="420" width="110" height="15" fill="rgb(208,12,41)"/><text x="865.00" y="430.50">mkl_blas_sgem..</text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (63 samples, 9.35%)</title><rect x="862" y="436" width="110" height="15" fill="rgb(242,62,3)"/><text x="865.00" y="446.50">mkl_blas_xsge..</text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (63 samples, 9.35%)</title><rect x="862" y="452" width="110" height="15" fill="rgb(223,29,21)"/><text x="865.00" y="462.50">mkl_blas_avx_..</text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (6 samples, 0.89%)</title><rect x="962" y="468" width="10" height="15" fill="rgb(235,128,23)"/><text x="965.00" y="478.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0 (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="971" y="484" width="1" height="15" fill="rgb(209,20,5)"/><text x="974.00" y="494.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0_pst (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.15%)</title><rect x="971" y="500" width="1" height="15" fill="rgb(212,161,10)"/><text x="974.00" y="510.50"></text></g><g><title>onnxruntime::Relu&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.48%)</title><rect x="972" y="340" width="18" height="15" fill="rgb(220,158,48)"/><text x="975.00" y="350.50"></text></g><g><title>Eigen::internal::TensorBlockCwiseUnaryIO&lt;Eigen::internal::scalar_exp_op&lt;float&gt;, long, float, 2, 1&gt;::Run&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="990" y="420" width="3" height="15" fill="rgb(232,16,23)"/><text x="993.00" y="430.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.04%)</title><rect x="990" y="372" width="12" height="15" fill="rgb(205,102,40)"/><text x="993.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.04%)</title><rect x="990" y="388" width="12" height="15" fill="rgb(240,75,24)"/><text x="993.00" y="398.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_18TensorCwiseUnaryOpINS2_13scalar_exp_opIfEEKNS1_19TensorCwiseBinaryOpINS2_20scalar_difference_opIKfSF_EEKNS5_INS6_ISF_Li2ELi1ElEELi16ES8_EEKNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSL_IiJSN_EEEKNS1_18TensorForcedEvalOpIKNS1_17TensorReductionOpINS2_10MaxReducerIfEEKNSL_ISN_JEEESJ_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS1C_RKS1D_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1N_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.04%)</title><rect x="990" y="404" width="12" height="15" fill="rgb(209,148,16)"/><text x="993.00" y="414.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_19TensorCwiseBinaryOpINS_8internal20scalar_difference_opIKfS4_EEKNS_9TensorMapINS_6TensorIS4_Li2ELi1ElEELi16ENS_11MakePointerEEEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS2_10MaxReducerIfEEKNSD_ISF_JEEESB_S9_EEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNS2_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.74%)</title><rect x="993" y="420" width="9" height="15" fill="rgb(227,86,10)"/><text x="996.00" y="430.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS_8internal10MaxReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIKfLi2ELi1ElEELi16ENS_11MakePointerEEESL_EEEEEEEENS_16ThreadPoolDeviceEE5blockEPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.74%)</title><rect x="993" y="436" width="9" height="15" fill="rgb(244,148,22)"/><text x="996.00" y="446.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS_8internal10MaxReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIKfLi2ELi1ElEELi16ENS_11MakePointerEEESL_EEEEEEEENS_16ThreadPoolDeviceEE14BroadcastBlockERKNS_6DSizesIlLi2EEERKNSY_IlLi4EEES14_S14_lPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.74%)</title><rect x="993" y="452" width="9" height="15" fill="rgb(205,126,20)"/><text x="996.00" y="462.50"></text></g><g><title>Eigen::internal::TensorBlockReader&lt;float, long, 4, 1&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.74%)</title><rect x="993" y="468" width="9" height="15" fill="rgb(249,157,52)"/><text x="996.00" y="478.50"></text></g><g><title>Eigen::internal::TensorBlockCopyOp&lt;float, long&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.74%)</title><rect x="993" y="484" width="9" height="15" fill="rgb(233,19,29)"/><text x="996.00" y="494.50"></text></g><g><title>Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1002" y="372" width="2" height="15" fill="rgb(217,3,40)"/><text x="1005.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1002" y="388" width="2" height="15" fill="rgb(252,224,54)"/><text x="1005.00" y="398.50"></text></g><g><title>std::_Function_handler&lt;void (long, long), Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run(Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const&amp;, Eigen::ThreadPoolDevice const&amp;)::{lambda(long, long)#1}&gt;::_M_invoke (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1002" y="404" width="2" height="15" fill="rgb(249,148,23)"/><text x="1005.00" y="414.50"></text></g><g><title>onnxruntime::Softmax&lt;float, false&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.34%)</title><rect x="990" y="340" width="16" height="15" fill="rgb(253,166,5)"/><text x="993.00" y="350.50"></text></g><g><title>onnxruntime::ComputeSoftMax&lt;Eigen::ThreadPoolDevice, float&gt; [clone .constprop.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.34%)</title><rect x="990" y="356" width="16" height="15" fill="rgb(230,53,29)"/><text x="993.00" y="366.50"></text></g><g><title>_ZN5Eigen8internal14TensorExecutorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_19TensorCwiseBinaryOpINS0_17scalar_product_opIffEEKS7_KNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS0_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS0_10SumReducerIfEEKNSD_ISF_JEEESB_S6_EEEEEEEEEEEEEENS_16ThreadPoolDeviceELb1ELb1EE3runERS17_RKS18_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1004" y="372" width="2" height="15" fill="rgb(210,202,12)"/><text x="1007.00" y="382.50"></text></g><g><title>Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_inverse_op&lt;float&gt;, Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1004" y="388" width="2" height="15" fill="rgb(210,17,38)"/><text x="1007.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1004" y="404" width="2" height="15" fill="rgb(249,225,35)"/><text x="1007.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorEvalToOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNS1_9IndexListINS1_10type2indexILl1EEEJEEEKNS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEESJ_EEEESJ_EENS1_16ThreadPoolDeviceELb1ELb0EE3runERSR_RKSS_EUlllE_E9_M_invokeERKSt9_Any_dataOlS12_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1004" y="420" width="2" height="15" fill="rgb(227,211,0)"/><text x="1007.00" y="430.50"></text></g><g><title>0x7f947ced1d48 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1034" y="388" width="1" height="15" fill="rgb(228,224,12)"/><text x="1037.00" y="398.50"></text></g><g><title>0x7f947ced1dd2 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1035" y="388" width="2" height="15" fill="rgb(254,12,27)"/><text x="1038.00" y="398.50"></text></g><g><title>0x7f947ced1f2a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1037" y="388" width="2" height="15" fill="rgb(252,55,10)"/><text x="1040.00" y="398.50"></text></g><g><title>0x7f947ced2064 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1039" y="388" width="2" height="15" fill="rgb(237,120,44)"/><text x="1042.00" y="398.50"></text></g><g><title>0x7f947ced206d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1041" y="388" width="1" height="15" fill="rgb(242,106,1)"/><text x="1044.00" y="398.50"></text></g><g><title>0x7f947ced2368 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1042" y="388" width="2" height="15" fill="rgb(233,214,45)"/><text x="1045.00" y="398.50"></text></g><g><title>0x7f947ced2395 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1044" y="388" width="2" height="15" fill="rgb(224,15,24)"/><text x="1047.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (21 samples, 3.12%)</title><rect x="1011" y="356" width="37" height="15" fill="rgb(252,104,50)"/><text x="1014.00" y="366.50">ope..</text></g><g><title>malloc (libc-2.29.so) (21 samples, 3.12%)</title><rect x="1011" y="372" width="37" height="15" fill="rgb(241,140,37)"/><text x="1014.00" y="382.50">mal..</text></g><g><title>0x7f947ced23e0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1046" y="388" width="2" height="15" fill="rgb(248,55,41)"/><text x="1049.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="1048" y="356" width="3" height="15" fill="rgb(247,30,24)"/><text x="1051.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (3 samples, 0.45%)</title><rect x="1051" y="356" width="5" height="15" fill="rgb(254,140,13)"/><text x="1054.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (124 samples, 18.40%)</title><rect x="841" y="308" width="217" height="15" fill="rgb(225,73,6)"/><text x="844.00" y="318.50">onnxruntime::utils::ExecuteG..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (124 samples, 18.40%)</title><rect x="841" y="324" width="217" height="15" fill="rgb(235,31,25)"/><text x="844.00" y="334.50">onnxruntime::SequentialExecu..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 4.45%)</title><rect x="1006" y="340" width="52" height="15" fill="rgb(239,82,42)"/><text x="1009.00" y="350.50">onnxr..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1056" y="356" width="2" height="15" fill="rgb(253,106,35)"/><text x="1059.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (125 samples, 18.55%)</title><rect x="841" y="260" width="219" height="15" fill="rgb(240,166,45)"/><text x="844.00" y="270.50">onnxruntime::InferenceSessio..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (125 samples, 18.55%)</title><rect x="841" y="276" width="219" height="15" fill="rgb(217,23,25)"/><text x="844.00" y="286.50">onnxruntime::InferenceSessio..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (125 samples, 18.55%)</title><rect x="841" y="292" width="219" height="15" fill="rgb(223,119,37)"/><text x="844.00" y="302.50">onnxruntime::utils::ExecuteG..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1058" y="308" width="2" height="15" fill="rgb(215,177,39)"/><text x="1061.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1058" y="324" width="2" height="15" fill="rgb(246,91,32)"/><text x="1061.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="1058" y="340" width="2" height="15" fill="rgb(248,6,32)"/><text x="1061.00" y="350.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (57 samples, 8.46%)</title><rect x="1060" y="260" width="100" height="15" fill="rgb(241,41,20)"/><text x="1063.00" y="270.50">pybind11::de..</text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.93%)</title><rect x="1137" y="276" width="23" height="15" fill="rgb(236,100,46)"/><text x="1140.00" y="286.50">p..</text></g><g><title>mmap64 (libc-2.29.so) (2 samples, 0.30%)</title><rect x="1156" y="292" width="4" height="15" fill="rgb(209,188,45)"/><text x="1159.00" y="302.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1160" y="260" width="1" height="15" fill="rgb(230,205,10)"/><text x="1163.00" y="270.50"></text></g><g><title>0x7f947ced09b3 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1165" y="292" width="2" height="15" fill="rgb(243,39,40)"/><text x="1168.00" y="302.50"></text></g><g><title>0x7f947ced0a33 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1167" y="292" width="1" height="15" fill="rgb(226,108,37)"/><text x="1170.00" y="302.50"></text></g><g><title>0x7f947ced0cf0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1168" y="292" width="2" height="15" fill="rgb(215,183,11)"/><text x="1171.00" y="302.50"></text></g><g><title>0x7f947ced0d07 (libc-2.29.so) (3 samples, 0.45%)</title><rect x="1170" y="292" width="5" height="15" fill="rgb(211,55,28)"/><text x="1173.00" y="302.50"></text></g><g><title>0x7f947ced0d13 (libc-2.29.so) (2 samples, 0.30%)</title><rect x="1175" y="292" width="4" height="15" fill="rgb(210,24,51)"/><text x="1178.00" y="302.50"></text></g><g><title>0x7f947ced0982 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1181" y="308" width="1" height="15" fill="rgb(223,33,51)"/><text x="1184.00" y="318.50"></text></g><g><title>0x7f947ced0a4b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1182" y="308" width="2" height="15" fill="rgb(228,11,34)"/><text x="1185.00" y="318.50"></text></g><g><title>0x7f947ced0d07 (libc-2.29.so) (2 samples, 0.30%)</title><rect x="1184" y="308" width="4" height="15" fill="rgb(224,160,25)"/><text x="1187.00" y="318.50"></text></g><g><title>all (674 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(233,133,25)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:52) (253 samples, 37.54%)</title><rect x="747" y="52" width="443" height="15" fill="rgb(206,139,9)"/><text x="750.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_4_12_float_...</text></g><g><title>profile_ort (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:51) (253 samples, 37.54%)</title><rect x="747" y="68" width="443" height="15" fill="rgb(246,140,19)"/><text x="750.00" y="78.50">profile_ort (bench_MLPClassifier_default_m_cl_1000_4_12_floa..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:29) (253 samples, 37.54%)</title><rect x="747" y="84" width="443" height="15" fill="rgb(217,121,20)"/><text x="750.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_1000_4_12_fl..</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_.py:23) (245 samples, 36.35%)</title><rect x="761" y="100" width="429" height="15" fill="rgb(212,212,7)"/><text x="764.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1000_4_12_float_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (217 samples, 32.20%)</title><rect x="810" y="116" width="380" height="15" fill="rgb(210,71,39)"/><text x="813.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (217 samples, 32.20%)</title><rect x="810" y="132" width="380" height="15" fill="rgb(253,173,7)"/><text x="813.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (216 samples, 32.05%)</title><rect x="811" y="148" width="379" height="15" fill="rgb(253,15,12)"/><text x="814.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (216 samples, 32.05%)</title><rect x="811" y="164" width="379" height="15" fill="rgb(221,202,29)"/><text x="814.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (216 samples, 32.05%)</title><rect x="811" y="180" width="379" height="15" fill="rgb(227,139,37)"/><text x="814.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (215 samples, 31.90%)</title><rect x="813" y="196" width="377" height="15" fill="rgb(213,217,16)"/><text x="816.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (200 samples, 29.67%)</title><rect x="839" y="212" width="351" height="15" fill="rgb(239,111,43)"/><text x="842.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (199 samples, 29.53%)</title><rect x="841" y="228" width="349" height="15" fill="rgb(214,170,34)"/><text x="844.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrun..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (199 samples, 29.53%)</title><rect x="841" y="244" width="349" height="15" fill="rgb(222,129,47)"/><text x="844.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.37%)</title><rect x="1161" y="260" width="29" height="15" fill="rgb(212,4,43)"/><text x="1164.00" y="270.50">st..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.37%)</title><rect x="1161" y="276" width="29" height="15" fill="rgb(227,188,39)"/><text x="1164.00" y="286.50">on..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.89%)</title><rect x="1179" y="292" width="11" height="15" fill="rgb(251,223,40)"/><text x="1182.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(230,174,31)"/><text x="1191.00" y="318.50"></text></g></g></svg>