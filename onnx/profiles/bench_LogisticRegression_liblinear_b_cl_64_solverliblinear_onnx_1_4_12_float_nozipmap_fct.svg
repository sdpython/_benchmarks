<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1478" onload="init(evt)" viewBox="0 0 1200 1478" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1478" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1461.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1461.00"> </text><g id="frames"><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.34%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(248,85,8)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="644" width="3" height="15" fill="rgb(240,37,38)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="660" width="3" height="15" fill="rgb(241,144,24)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="676" width="3" height="15" fill="rgb(254,84,8)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="692" width="3" height="15" fill="rgb(241,85,27)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="708" width="3" height="15" fill="rgb(239,211,8)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.34%)</title><rect x="10" y="724" width="3" height="15" fill="rgb(228,57,31)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="740" width="3" height="15" fill="rgb(217,146,23)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="756" width="3" height="15" fill="rgb(244,81,35)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="772" width="3" height="15" fill="rgb(240,198,7)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="788" width="3" height="15" fill="rgb(224,126,39)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="804" width="3" height="15" fill="rgb(236,201,52)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="820" width="3" height="15" fill="rgb(247,6,1)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(225,59,43)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(239,14,51)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.34%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(246,55,27)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(237,209,12)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(248,35,15)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(254,184,37)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(253,223,40)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(254,160,41)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.34%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(212,100,23)"/><text x="13.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(249,162,22)"/><text x="13.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(250,119,42)"/><text x="13.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(217,47,48)"/><text x="13.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(235,154,12)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1044" width="3" height="15" fill="rgb(252,15,52)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.34%)</title><rect x="10" y="1060" width="3" height="15" fill="rgb(236,136,0)"/><text x="13.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1076" width="3" height="15" fill="rgb(242,189,18)"/><text x="13.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1092" width="3" height="15" fill="rgb(209,104,9)"/><text x="13.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1108" width="3" height="15" fill="rgb(209,188,28)"/><text x="13.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="1124" width="3" height="15" fill="rgb(230,14,16)"/><text x="13.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1140" width="3" height="15" fill="rgb(240,203,25)"/><text x="13.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/compose/__init__.py) (1 samples, 0.34%)</title><rect x="10" y="1156" width="3" height="15" fill="rgb(238,181,34)"/><text x="13.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1172" width="3" height="15" fill="rgb(234,223,47)"/><text x="13.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1188" width="3" height="15" fill="rgb(208,14,16)"/><text x="13.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1204" width="3" height="15" fill="rgb(211,169,43)"/><text x="13.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="1220" width="3" height="15" fill="rgb(228,176,3)"/><text x="13.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="1236" width="3" height="15" fill="rgb(228,4,2)"/><text x="13.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="1252" width="3" height="15" fill="rgb(219,59,27)"/><text x="13.00" y="1262.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="10" y="1268" width="3" height="15" fill="rgb(233,150,4)"/><text x="13.00" y="1278.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_multivariate.py) (1 samples, 0.34%)</title><rect x="13" y="1108" width="4" height="15" fill="rgb(222,164,45)"/><text x="16.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="340" width="11" height="15" fill="rgb(222,203,0)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="356" width="11" height="15" fill="rgb(219,106,44)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="372" width="11" height="15" fill="rgb(241,68,24)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="388" width="11" height="15" fill="rgb(221,163,32)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="10" y="404" width="11" height="15" fill="rgb(252,70,4)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="420" width="11" height="15" fill="rgb(233,222,42)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 1.01%)</title><rect x="10" y="436" width="11" height="15" fill="rgb(227,200,27)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="452" width="11" height="15" fill="rgb(218,65,30)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="468" width="11" height="15" fill="rgb(225,33,4)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="484" width="11" height="15" fill="rgb(220,222,37)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="10" y="500" width="11" height="15" fill="rgb(251,48,13)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="516" width="11" height="15" fill="rgb(209,12,4)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 1.01%)</title><rect x="10" y="532" width="11" height="15" fill="rgb(234,96,27)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="548" width="11" height="15" fill="rgb(240,227,13)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="564" width="11" height="15" fill="rgb(247,156,45)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="580" width="11" height="15" fill="rgb(223,63,51)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="10" y="596" width="11" height="15" fill="rgb(215,202,14)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="612" width="11" height="15" fill="rgb(230,105,8)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.67%)</title><rect x="13" y="628" width="8" height="15" fill="rgb(224,18,30)"/><text x="16.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="644" width="8" height="15" fill="rgb(210,63,30)"/><text x="16.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="660" width="8" height="15" fill="rgb(246,173,18)"/><text x="16.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="676" width="8" height="15" fill="rgb(208,30,43)"/><text x="16.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="13" y="692" width="8" height="15" fill="rgb(216,48,8)"/><text x="16.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="708" width="8" height="15" fill="rgb(214,5,37)"/><text x="16.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.67%)</title><rect x="13" y="724" width="8" height="15" fill="rgb(209,89,20)"/><text x="16.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="740" width="8" height="15" fill="rgb(234,177,2)"/><text x="16.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="756" width="8" height="15" fill="rgb(215,115,34)"/><text x="16.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="772" width="8" height="15" fill="rgb(231,120,30)"/><text x="16.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="13" y="788" width="8" height="15" fill="rgb(252,70,53)"/><text x="16.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="804" width="8" height="15" fill="rgb(228,220,42)"/><text x="16.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.67%)</title><rect x="13" y="820" width="8" height="15" fill="rgb(223,149,0)"/><text x="16.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="836" width="8" height="15" fill="rgb(253,207,37)"/><text x="16.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="852" width="8" height="15" fill="rgb(208,184,44)"/><text x="16.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="868" width="8" height="15" fill="rgb(248,88,17)"/><text x="16.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="13" y="884" width="8" height="15" fill="rgb(222,152,31)"/><text x="16.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="900" width="8" height="15" fill="rgb(244,70,5)"/><text x="16.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.67%)</title><rect x="13" y="916" width="8" height="15" fill="rgb(245,51,49)"/><text x="16.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="932" width="8" height="15" fill="rgb(251,163,32)"/><text x="16.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="948" width="8" height="15" fill="rgb(220,97,35)"/><text x="16.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="964" width="8" height="15" fill="rgb(251,124,32)"/><text x="16.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="13" y="980" width="8" height="15" fill="rgb(238,13,10)"/><text x="16.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="996" width="8" height="15" fill="rgb(220,146,10)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.67%)</title><rect x="13" y="1012" width="8" height="15" fill="rgb(236,41,10)"/><text x="16.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="1028" width="8" height="15" fill="rgb(244,172,38)"/><text x="16.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="1044" width="8" height="15" fill="rgb(207,85,29)"/><text x="16.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="1060" width="8" height="15" fill="rgb(229,88,34)"/><text x="16.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="13" y="1076" width="8" height="15" fill="rgb(234,1,41)"/><text x="16.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="13" y="1092" width="8" height="15" fill="rgb(233,148,46)"/><text x="16.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.34%)</title><rect x="17" y="1108" width="4" height="15" fill="rgb(244,1,13)"/><text x="20.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1124" width="4" height="15" fill="rgb(231,162,13)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1140" width="4" height="15" fill="rgb(205,61,45)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1156" width="4" height="15" fill="rgb(237,88,37)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1172" width="4" height="15" fill="rgb(211,33,37)"/><text x="20.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1188" width="4" height="15" fill="rgb(245,215,46)"/><text x="20.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="17" y="1204" width="4" height="15" fill="rgb(247,73,41)"/><text x="20.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1220" width="4" height="15" fill="rgb(251,93,38)"/><text x="20.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.34%)</title><rect x="17" y="1236" width="4" height="15" fill="rgb(236,32,39)"/><text x="20.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1252" width="4" height="15" fill="rgb(214,188,5)"/><text x="20.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1268" width="4" height="15" fill="rgb(221,17,17)"/><text x="20.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1284" width="4" height="15" fill="rgb(216,88,30)"/><text x="20.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="17" y="1300" width="4" height="15" fill="rgb(233,88,3)"/><text x="20.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1316" width="4" height="15" fill="rgb(222,225,2)"/><text x="20.00" y="1326.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.34%)</title><rect x="17" y="1332" width="4" height="15" fill="rgb(252,217,21)"/><text x="20.00" y="1342.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1348" width="4" height="15" fill="rgb(251,118,41)"/><text x="20.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1364" width="4" height="15" fill="rgb(231,171,25)"/><text x="20.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1380" width="4" height="15" fill="rgb(228,71,48)"/><text x="20.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1396" width="4" height="15" fill="rgb(207,203,42)"/><text x="20.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1412" width="4" height="15" fill="rgb(219,176,40)"/><text x="20.00" y="1422.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="17" y="1428" width="4" height="15" fill="rgb(225,122,51)"/><text x="20.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="21" y="836" width="4" height="15" fill="rgb(216,81,21)"/><text x="24.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="21" y="852" width="4" height="15" fill="rgb(252,39,38)"/><text x="24.00" y="862.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="21" y="868" width="4" height="15" fill="rgb(241,51,6)"/><text x="24.00" y="878.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 1.68%)</title><rect x="10" y="292" width="19" height="15" fill="rgb(216,97,49)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="10" y="308" width="19" height="15" fill="rgb(241,226,5)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="10" y="324" width="19" height="15" fill="rgb(209,58,54)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="340" width="8" height="15" fill="rgb(241,159,46)"/><text x="24.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="21" y="356" width="8" height="15" fill="rgb(231,202,29)"/><text x="24.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="372" width="8" height="15" fill="rgb(221,104,39)"/><text x="24.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.67%)</title><rect x="21" y="388" width="8" height="15" fill="rgb(218,148,51)"/><text x="24.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="404" width="8" height="15" fill="rgb(227,217,54)"/><text x="24.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="420" width="8" height="15" fill="rgb(223,157,25)"/><text x="24.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="436" width="8" height="15" fill="rgb(242,26,53)"/><text x="24.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="21" y="452" width="8" height="15" fill="rgb(238,47,40)"/><text x="24.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="468" width="8" height="15" fill="rgb(213,84,22)"/><text x="24.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.67%)</title><rect x="21" y="484" width="8" height="15" fill="rgb(211,100,38)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="500" width="8" height="15" fill="rgb(234,121,33)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="516" width="8" height="15" fill="rgb(245,61,8)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="532" width="8" height="15" fill="rgb(243,44,40)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="21" y="548" width="8" height="15" fill="rgb(245,107,5)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="564" width="8" height="15" fill="rgb(235,129,10)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (2 samples, 0.67%)</title><rect x="21" y="580" width="8" height="15" fill="rgb(216,38,38)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="596" width="8" height="15" fill="rgb(237,142,40)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="612" width="8" height="15" fill="rgb(235,143,15)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="628" width="8" height="15" fill="rgb(226,170,37)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="21" y="644" width="8" height="15" fill="rgb(215,172,15)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="660" width="8" height="15" fill="rgb(236,15,13)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py) (2 samples, 0.67%)</title><rect x="21" y="676" width="8" height="15" fill="rgb(249,143,27)"/><text x="24.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="692" width="8" height="15" fill="rgb(254,18,17)"/><text x="24.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="708" width="8" height="15" fill="rgb(253,78,50)"/><text x="24.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="724" width="8" height="15" fill="rgb(205,102,53)"/><text x="24.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="21" y="740" width="8" height="15" fill="rgb(220,99,31)"/><text x="24.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="756" width="8" height="15" fill="rgb(215,165,54)"/><text x="24.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py) (2 samples, 0.67%)</title><rect x="21" y="772" width="8" height="15" fill="rgb(205,228,13)"/><text x="24.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="788" width="8" height="15" fill="rgb(244,8,32)"/><text x="24.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="804" width="8" height="15" fill="rgb(228,143,14)"/><text x="24.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="21" y="820" width="8" height="15" fill="rgb(229,16,49)"/><text x="24.00" y="830.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="836" width="4" height="15" fill="rgb(236,213,45)"/><text x="28.00" y="846.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="852" width="4" height="15" fill="rgb(209,177,42)"/><text x="28.00" y="862.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="25" y="868" width="4" height="15" fill="rgb(222,174,42)"/><text x="28.00" y="878.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="25" y="884" width="4" height="15" fill="rgb(211,194,19)"/><text x="28.00" y="894.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.34%)</title><rect x="25" y="900" width="4" height="15" fill="rgb(217,5,5)"/><text x="28.00" y="910.50"></text></g><g><title>0x7f6ec054a134 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="25" y="916" width="4" height="15" fill="rgb(228,109,41)"/><text x="28.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.01%)</title><rect x="10" y="196" width="23" height="15" fill="rgb(218,19,22)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.01%)</title><rect x="10" y="212" width="23" height="15" fill="rgb(243,78,48)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.01%)</title><rect x="10" y="228" width="23" height="15" fill="rgb(232,180,10)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.01%)</title><rect x="10" y="244" width="23" height="15" fill="rgb(251,147,48)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.01%)</title><rect x="10" y="260" width="23" height="15" fill="rgb(205,24,21)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.01%)</title><rect x="10" y="276" width="23" height="15" fill="rgb(224,223,54)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="292" width="4" height="15" fill="rgb(247,51,32)"/><text x="32.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="308" width="4" height="15" fill="rgb(253,14,20)"/><text x="32.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="324" width="4" height="15" fill="rgb(252,26,8)"/><text x="32.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="340" width="4" height="15" fill="rgb(242,4,32)"/><text x="32.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="356" width="4" height="15" fill="rgb(252,58,18)"/><text x="32.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="372" width="4" height="15" fill="rgb(227,118,12)"/><text x="32.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (1 samples, 0.34%)</title><rect x="29" y="388" width="4" height="15" fill="rgb(253,211,18)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="404" width="4" height="15" fill="rgb(216,172,42)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="420" width="4" height="15" fill="rgb(228,115,48)"/><text x="32.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="436" width="4" height="15" fill="rgb(213,185,13)"/><text x="32.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="452" width="4" height="15" fill="rgb(240,153,54)"/><text x="32.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="468" width="4" height="15" fill="rgb(237,117,12)"/><text x="32.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (1 samples, 0.34%)</title><rect x="29" y="484" width="4" height="15" fill="rgb(217,75,16)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="500" width="4" height="15" fill="rgb(226,171,50)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="516" width="4" height="15" fill="rgb(246,91,33)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="532" width="4" height="15" fill="rgb(234,157,50)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="548" width="4" height="15" fill="rgb(227,214,30)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="564" width="4" height="15" fill="rgb(220,131,52)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (1 samples, 0.34%)</title><rect x="29" y="580" width="4" height="15" fill="rgb(230,156,22)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="596" width="4" height="15" fill="rgb(214,76,14)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="612" width="4" height="15" fill="rgb(228,217,14)"/><text x="32.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="628" width="4" height="15" fill="rgb(238,165,17)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="644" width="4" height="15" fill="rgb(221,155,29)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="660" width="4" height="15" fill="rgb(246,124,48)"/><text x="32.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="676" width="4" height="15" fill="rgb(249,115,16)"/><text x="32.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="692" width="4" height="15" fill="rgb(213,44,2)"/><text x="32.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="708" width="4" height="15" fill="rgb(235,163,14)"/><text x="32.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="724" width="4" height="15" fill="rgb(236,158,45)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="740" width="4" height="15" fill="rgb(245,92,37)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="756" width="4" height="15" fill="rgb(237,5,16)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="772" width="4" height="15" fill="rgb(245,201,14)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="29" y="788" width="4" height="15" fill="rgb(242,62,17)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="29" y="804" width="4" height="15" fill="rgb(207,24,54)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="820" width="4" height="15" fill="rgb(210,114,27)"/><text x="32.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="836" width="4" height="15" fill="rgb(219,171,13)"/><text x="32.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="852" width="4" height="15" fill="rgb(230,179,46)"/><text x="32.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="868" width="4" height="15" fill="rgb(220,154,1)"/><text x="32.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="884" width="4" height="15" fill="rgb(209,71,38)"/><text x="32.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="900" width="4" height="15" fill="rgb(231,122,30)"/><text x="32.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="916" width="4" height="15" fill="rgb(216,141,35)"/><text x="32.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="932" width="4" height="15" fill="rgb(214,227,43)"/><text x="32.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="948" width="4" height="15" fill="rgb(249,213,42)"/><text x="32.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="964" width="4" height="15" fill="rgb(231,105,27)"/><text x="32.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="29" y="980" width="4" height="15" fill="rgb(209,162,42)"/><text x="32.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.34%)</title><rect x="29" y="996" width="4" height="15" fill="rgb(209,125,22)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.34%)</title><rect x="33" y="580" width="4" height="15" fill="rgb(217,204,47)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="596" width="4" height="15" fill="rgb(237,143,17)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="612" width="4" height="15" fill="rgb(235,209,8)"/><text x="36.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="628" width="4" height="15" fill="rgb(211,26,20)"/><text x="36.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="644" width="4" height="15" fill="rgb(207,43,4)"/><text x="36.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="660" width="4" height="15" fill="rgb(215,19,41)"/><text x="36.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="676" width="4" height="15" fill="rgb(224,94,19)"/><text x="36.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="33" y="692" width="4" height="15" fill="rgb(240,179,19)"/><text x="36.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="708" width="4" height="15" fill="rgb(249,7,18)"/><text x="36.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.34%)</title><rect x="33" y="724" width="4" height="15" fill="rgb(217,13,47)"/><text x="36.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="740" width="4" height="15" fill="rgb(222,82,26)"/><text x="36.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="756" width="4" height="15" fill="rgb(213,70,15)"/><text x="36.00" y="766.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="33" y="772" width="4" height="15" fill="rgb(234,170,4)"/><text x="36.00" y="782.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="33" y="788" width="4" height="15" fill="rgb(226,141,43)"/><text x="36.00" y="798.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="33" y="804" width="4" height="15" fill="rgb(234,209,37)"/><text x="36.00" y="814.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="33" y="820" width="4" height="15" fill="rgb(223,166,33)"/><text x="36.00" y="830.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="33" y="836" width="4" height="15" fill="rgb(209,164,9)"/><text x="36.00" y="846.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.34%)</title><rect x="33" y="852" width="4" height="15" fill="rgb(238,98,52)"/><text x="36.00" y="862.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="33" y="868" width="4" height="15" fill="rgb(221,128,24)"/><text x="36.00" y="878.50"></text></g><g><title>0x7f6ec04ac237 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="33" y="884" width="4" height="15" fill="rgb(253,98,11)"/><text x="36.00" y="894.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.34%)</title><rect x="37" y="580" width="4" height="15" fill="rgb(243,50,15)"/><text x="40.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="596" width="4" height="15" fill="rgb(243,205,19)"/><text x="40.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="612" width="4" height="15" fill="rgb(249,157,16)"/><text x="40.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="628" width="4" height="15" fill="rgb(243,119,21)"/><text x="40.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="644" width="4" height="15" fill="rgb(229,166,31)"/><text x="40.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="660" width="4" height="15" fill="rgb(210,65,24)"/><text x="40.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.34%)</title><rect x="37" y="676" width="4" height="15" fill="rgb(226,174,46)"/><text x="40.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="692" width="4" height="15" fill="rgb(225,70,5)"/><text x="40.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="708" width="4" height="15" fill="rgb(253,91,36)"/><text x="40.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="724" width="4" height="15" fill="rgb(243,227,10)"/><text x="40.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="740" width="4" height="15" fill="rgb(237,159,23)"/><text x="40.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="756" width="4" height="15" fill="rgb(216,181,40)"/><text x="40.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.34%)</title><rect x="37" y="772" width="4" height="15" fill="rgb(211,19,46)"/><text x="40.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="788" width="4" height="15" fill="rgb(254,58,38)"/><text x="40.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="804" width="4" height="15" fill="rgb(248,159,22)"/><text x="40.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="820" width="4" height="15" fill="rgb(211,102,50)"/><text x="40.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="836" width="4" height="15" fill="rgb(217,101,35)"/><text x="40.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="852" width="4" height="15" fill="rgb(253,191,45)"/><text x="40.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="868" width="4" height="15" fill="rgb(206,182,46)"/><text x="40.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="884" width="4" height="15" fill="rgb(221,76,45)"/><text x="40.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.34%)</title><rect x="37" y="900" width="4" height="15" fill="rgb(215,80,27)"/><text x="40.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="916" width="4" height="15" fill="rgb(227,68,16)"/><text x="40.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="932" width="4" height="15" fill="rgb(253,139,52)"/><text x="40.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="948" width="4" height="15" fill="rgb(251,31,1)"/><text x="40.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="964" width="4" height="15" fill="rgb(218,67,30)"/><text x="40.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="980" width="4" height="15" fill="rgb(227,144,15)"/><text x="40.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.34%)</title><rect x="37" y="996" width="4" height="15" fill="rgb(205,90,32)"/><text x="40.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1012" width="4" height="15" fill="rgb(212,207,34)"/><text x="40.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1028" width="4" height="15" fill="rgb(220,174,10)"/><text x="40.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1044" width="4" height="15" fill="rgb(250,218,4)"/><text x="40.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="1060" width="4" height="15" fill="rgb(246,208,2)"/><text x="40.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1076" width="4" height="15" fill="rgb(239,37,3)"/><text x="40.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.34%)</title><rect x="37" y="1092" width="4" height="15" fill="rgb(230,161,33)"/><text x="40.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1108" width="4" height="15" fill="rgb(240,146,36)"/><text x="40.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1124" width="4" height="15" fill="rgb(235,73,8)"/><text x="40.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="1140" width="4" height="15" fill="rgb(246,200,34)"/><text x="40.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="1156" width="4" height="15" fill="rgb(250,116,29)"/><text x="40.00" y="1166.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="1172" width="4" height="15" fill="rgb(222,203,22)"/><text x="40.00" y="1182.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="1188" width="4" height="15" fill="rgb(243,149,40)"/><text x="40.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="33" y="564" width="12" height="15" fill="rgb(224,229,15)"/><text x="36.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/venv_helper.py) (1 samples, 0.34%)</title><rect x="41" y="580" width="4" height="15" fill="rgb(206,192,17)"/><text x="44.00" y="590.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (4 samples, 1.34%)</title><rect x="33" y="244" width="16" height="15" fill="rgb(238,132,37)"/><text x="36.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="33" y="260" width="16" height="15" fill="rgb(208,25,10)"/><text x="36.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="33" y="276" width="16" height="15" fill="rgb(208,81,8)"/><text x="36.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="33" y="292" width="16" height="15" fill="rgb(241,194,0)"/><text x="36.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="33" y="308" width="16" height="15" fill="rgb(234,70,54)"/><text x="36.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="33" y="324" width="16" height="15" fill="rgb(249,155,25)"/><text x="36.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 1.34%)</title><rect x="33" y="340" width="16" height="15" fill="rgb(226,210,37)"/><text x="36.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="33" y="356" width="16" height="15" fill="rgb(206,89,18)"/><text x="36.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="33" y="372" width="16" height="15" fill="rgb(245,190,43)"/><text x="36.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="33" y="388" width="16" height="15" fill="rgb(237,97,13)"/><text x="36.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="33" y="404" width="16" height="15" fill="rgb(227,107,49)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="33" y="420" width="16" height="15" fill="rgb(227,90,29)"/><text x="36.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="33" y="436" width="16" height="15" fill="rgb(236,62,17)"/><text x="36.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="33" y="452" width="16" height="15" fill="rgb(221,182,0)"/><text x="36.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="33" y="468" width="16" height="15" fill="rgb(223,19,38)"/><text x="36.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (4 samples, 1.34%)</title><rect x="33" y="484" width="16" height="15" fill="rgb(211,182,20)"/><text x="36.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="33" y="500" width="16" height="15" fill="rgb(218,49,38)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="33" y="516" width="16" height="15" fill="rgb(233,149,17)"/><text x="36.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="33" y="532" width="16" height="15" fill="rgb(205,188,26)"/><text x="36.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="33" y="548" width="16" height="15" fill="rgb(243,6,44)"/><text x="36.00" y="558.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="564" width="4" height="15" fill="rgb(228,200,2)"/><text x="48.00" y="574.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="580" width="4" height="15" fill="rgb(222,206,6)"/><text x="48.00" y="590.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="45" y="596" width="4" height="15" fill="rgb(210,112,51)"/><text x="48.00" y="606.50"></text></g><g><title>0x7f6ec046e1a3 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="45" y="612" width="4" height="15" fill="rgb(219,219,54)"/><text x="48.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.03%)</title><rect x="10" y="68" width="47" height="15" fill="rgb(250,78,8)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.03%)</title><rect x="10" y="84" width="47" height="15" fill="rgb(228,125,5)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.03%)</title><rect x="10" y="100" width="47" height="15" fill="rgb(235,42,54)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 4.03%)</title><rect x="10" y="116" width="47" height="15" fill="rgb(212,20,49)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.03%)</title><rect x="10" y="132" width="47" height="15" fill="rgb(215,35,28)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py) (12 samples, 4.03%)</title><rect x="10" y="148" width="47" height="15" fill="rgb(206,177,53)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.03%)</title><rect x="10" y="164" width="47" height="15" fill="rgb(236,101,23)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.03%)</title><rect x="10" y="180" width="47" height="15" fill="rgb(205,157,37)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.01%)</title><rect x="33" y="196" width="24" height="15" fill="rgb(235,117,22)"/><text x="36.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.01%)</title><rect x="33" y="212" width="24" height="15" fill="rgb(242,209,9)"/><text x="36.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.01%)</title><rect x="33" y="228" width="24" height="15" fill="rgb(219,229,6)"/><text x="36.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.67%)</title><rect x="49" y="244" width="8" height="15" fill="rgb(226,201,26)"/><text x="52.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="260" width="8" height="15" fill="rgb(249,176,9)"/><text x="52.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="276" width="8" height="15" fill="rgb(205,93,36)"/><text x="52.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="292" width="8" height="15" fill="rgb(238,45,42)"/><text x="52.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="308" width="8" height="15" fill="rgb(217,172,26)"/><text x="52.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="324" width="8" height="15" fill="rgb(210,164,4)"/><text x="52.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="49" y="340" width="8" height="15" fill="rgb(223,94,54)"/><text x="52.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="356" width="8" height="15" fill="rgb(241,150,23)"/><text x="52.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.67%)</title><rect x="49" y="372" width="8" height="15" fill="rgb(238,224,25)"/><text x="52.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="388" width="8" height="15" fill="rgb(215,126,0)"/><text x="52.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="404" width="8" height="15" fill="rgb(213,26,7)"/><text x="52.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="420" width="8" height="15" fill="rgb(228,44,26)"/><text x="52.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="436" width="8" height="15" fill="rgb(220,115,54)"/><text x="52.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="452" width="8" height="15" fill="rgb(237,176,31)"/><text x="52.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="49" y="468" width="8" height="15" fill="rgb(250,56,9)"/><text x="52.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="484" width="8" height="15" fill="rgb(233,172,12)"/><text x="52.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (2 samples, 0.67%)</title><rect x="49" y="500" width="8" height="15" fill="rgb(227,83,4)"/><text x="52.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="516" width="8" height="15" fill="rgb(221,34,46)"/><text x="52.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="532" width="8" height="15" fill="rgb(209,45,25)"/><text x="52.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="548" width="8" height="15" fill="rgb(242,58,41)"/><text x="52.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="49" y="564" width="8" height="15" fill="rgb(209,179,54)"/><text x="52.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="580" width="8" height="15" fill="rgb(207,2,1)"/><text x="52.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (2 samples, 0.67%)</title><rect x="49" y="596" width="8" height="15" fill="rgb(212,211,21)"/><text x="52.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="612" width="8" height="15" fill="rgb(228,225,44)"/><text x="52.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="628" width="8" height="15" fill="rgb(230,129,53)"/><text x="52.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="644" width="8" height="15" fill="rgb(250,101,42)"/><text x="52.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="49" y="660" width="8" height="15" fill="rgb(234,43,37)"/><text x="52.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="676" width="8" height="15" fill="rgb(231,151,35)"/><text x="52.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (2 samples, 0.67%)</title><rect x="49" y="692" width="8" height="15" fill="rgb(254,21,32)"/><text x="52.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="708" width="4" height="15" fill="rgb(232,193,43)"/><text x="56.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="724" width="4" height="15" fill="rgb(207,43,49)"/><text x="56.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="740" width="4" height="15" fill="rgb(208,26,28)"/><text x="56.00" y="750.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="756" width="4" height="15" fill="rgb(219,67,8)"/><text x="56.00" y="766.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 1.01%)</title><rect x="57" y="116" width="12" height="15" fill="rgb(243,61,53)"/><text x="60.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 1.01%)</title><rect x="57" y="132" width="12" height="15" fill="rgb(215,213,52)"/><text x="60.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 1.01%)</title><rect x="57" y="148" width="12" height="15" fill="rgb(222,196,42)"/><text x="60.00" y="158.50"></text></g><g><title>0x7f6e80d15ff9 (?) (1 samples, 0.34%)</title><rect x="97" y="212" width="4" height="15" fill="rgb(250,226,19)"/><text x="100.00" y="222.50"></text></g><g><title>0x7f6e80d10ef6 (?) (1 samples, 0.34%)</title><rect x="97" y="228" width="4" height="15" fill="rgb(229,162,10)"/><text x="100.00" y="238.50"></text></g><g><title>0x7f6e80d05962 (?) (1 samples, 0.34%)</title><rect x="97" y="244" width="4" height="15" fill="rgb(222,160,26)"/><text x="100.00" y="254.50"></text></g><g><title>0x7f6e80d397a7 (?) (1 samples, 0.34%)</title><rect x="97" y="260" width="4" height="15" fill="rgb(242,143,33)"/><text x="100.00" y="270.50"></text></g><g><title>0x7f6e80d39379 (?) (1 samples, 0.34%)</title><rect x="97" y="276" width="4" height="15" fill="rgb(229,190,28)"/><text x="100.00" y="286.50"></text></g><g><title>0x7f6e811978b8 (?) (1 samples, 0.34%)</title><rect x="97" y="292" width="4" height="15" fill="rgb(233,127,45)"/><text x="100.00" y="302.50"></text></g><g><title>0x7f6e81195c7f (?) (1 samples, 0.34%)</title><rect x="97" y="308" width="4" height="15" fill="rgb(248,9,10)"/><text x="100.00" y="318.50"></text></g><g><title>0x7f6e811a82e5 (?) (1 samples, 0.34%)</title><rect x="97" y="324" width="4" height="15" fill="rgb(234,116,34)"/><text x="100.00" y="334.50"></text></g><g><title>0x7f6e8115052e (?) (1 samples, 0.34%)</title><rect x="97" y="340" width="4" height="15" fill="rgb(207,114,29)"/><text x="100.00" y="350.50"></text></g><g><title>0x7f6e80d1b2f0 (?) (1 samples, 0.34%)</title><rect x="97" y="356" width="4" height="15" fill="rgb(211,63,46)"/><text x="100.00" y="366.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.34%)</title><rect x="101" y="212" width="4" height="15" fill="rgb(210,52,8)"/><text x="104.00" y="222.50"></text></g><g><title>0x7ffdb4de2b25 ([vdso]) (1 samples, 0.34%)</title><rect x="101" y="228" width="4" height="15" fill="rgb(208,196,52)"/><text x="104.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="112" y="260" width="4" height="15" fill="rgb(205,169,41)"/><text x="115.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="116" y="260" width="4" height="15" fill="rgb(247,71,50)"/><text x="119.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="128" y="292" width="4" height="15" fill="rgb(211,112,26)"/><text x="131.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="128" y="308" width="4" height="15" fill="rgb(244,97,1)"/><text x="131.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="128" y="324" width="4" height="15" fill="rgb(226,196,29)"/><text x="131.00" y="334.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="144" y="340" width="4" height="15" fill="rgb(223,167,41)"/><text x="147.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="144" y="356" width="4" height="15" fill="rgb(237,94,1)"/><text x="147.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="148" y="340" width="4" height="15" fill="rgb(247,188,14)"/><text x="151.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="152" y="452" width="4" height="15" fill="rgb(253,215,11)"/><text x="155.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="152" y="468" width="4" height="15" fill="rgb(232,181,32)"/><text x="155.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="152" y="484" width="4" height="15" fill="rgb(220,16,48)"/><text x="155.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="152" y="500" width="4" height="15" fill="rgb(220,161,9)"/><text x="155.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="152" y="516" width="4" height="15" fill="rgb(235,127,48)"/><text x="155.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="152" y="532" width="4" height="15" fill="rgb(238,166,13)"/><text x="155.00" y="542.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="156" y="452" width="4" height="15" fill="rgb(239,110,25)"/><text x="159.00" y="462.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="152" y="340" width="12" height="15" fill="rgb(243,191,0)"/><text x="155.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="152" y="356" width="12" height="15" fill="rgb(241,105,18)"/><text x="155.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="152" y="372" width="12" height="15" fill="rgb(250,132,22)"/><text x="155.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="152" y="388" width="12" height="15" fill="rgb(254,127,33)"/><text x="155.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="152" y="404" width="12" height="15" fill="rgb(253,106,34)"/><text x="155.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="152" y="420" width="12" height="15" fill="rgb(237,13,18)"/><text x="155.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="152" y="436" width="12" height="15" fill="rgb(208,62,44)"/><text x="155.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="160" y="452" width="4" height="15" fill="rgb(225,52,33)"/><text x="163.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="160" y="468" width="4" height="15" fill="rgb(243,119,43)"/><text x="163.00" y="478.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.02%)</title><rect x="132" y="292" width="36" height="15" fill="rgb(233,219,8)"/><text x="135.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.02%)</title><rect x="132" y="308" width="36" height="15" fill="rgb(222,70,50)"/><text x="135.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.02%)</title><rect x="132" y="324" width="36" height="15" fill="rgb(240,26,26)"/><text x="135.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="340" width="4" height="15" fill="rgb(250,209,26)"/><text x="167.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="356" width="4" height="15" fill="rgb(234,51,0)"/><text x="167.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="372" width="4" height="15" fill="rgb(205,171,31)"/><text x="167.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="388" width="4" height="15" fill="rgb(228,40,39)"/><text x="167.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="404" width="4" height="15" fill="rgb(207,84,53)"/><text x="167.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="420" width="4" height="15" fill="rgb(254,27,0)"/><text x="167.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="436" width="4" height="15" fill="rgb(248,60,26)"/><text x="167.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="452" width="4" height="15" fill="rgb(250,12,33)"/><text x="167.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="468" width="4" height="15" fill="rgb(253,221,1)"/><text x="167.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="484" width="4" height="15" fill="rgb(243,164,49)"/><text x="167.00" y="494.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="500" width="4" height="15" fill="rgb(243,116,39)"/><text x="167.00" y="510.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="164" y="516" width="4" height="15" fill="rgb(247,38,24)"/><text x="167.00" y="526.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 4.36%)</title><rect x="120" y="260" width="52" height="15" fill="rgb(230,33,51)"/><text x="123.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.03%)</title><rect x="124" y="276" width="48" height="15" fill="rgb(228,188,24)"/><text x="127.00" y="286.50">onnx..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="168" y="292" width="4" height="15" fill="rgb(246,60,24)"/><text x="171.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="172" y="260" width="4" height="15" fill="rgb(232,197,1)"/><text x="175.00" y="270.50"></text></g><g><title>0x7f6ec048cdbb (libc-2.29.so) (1 samples, 0.34%)</title><rect x="176" y="276" width="4" height="15" fill="rgb(210,108,49)"/><text x="179.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.01%)</title><rect x="176" y="260" width="12" height="15" fill="rgb(226,168,40)"/><text x="179.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.67%)</title><rect x="180" y="276" width="8" height="15" fill="rgb(209,9,49)"/><text x="183.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.67%)</title><rect x="180" y="292" width="8" height="15" fill="rgb(227,40,41)"/><text x="183.00" y="302.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (2 samples, 0.67%)</title><rect x="188" y="260" width="8" height="15" fill="rgb(206,135,44)"/><text x="191.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 8.39%)</title><rect x="105" y="244" width="99" height="15" fill="rgb(206,83,17)"/><text x="108.00" y="254.50">onnxruntime..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="196" y="260" width="8" height="15" fill="rgb(232,193,19)"/><text x="199.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="196" y="276" width="8" height="15" fill="rgb(245,85,13)"/><text x="199.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="196" y="292" width="8" height="15" fill="rgb(221,182,5)"/><text x="199.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="196" y="308" width="8" height="15" fill="rgb(228,111,2)"/><text x="199.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="196" y="324" width="8" height="15" fill="rgb(232,201,47)"/><text x="199.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="196" y="340" width="8" height="15" fill="rgb(242,83,36)"/><text x="199.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="196" y="356" width="8" height="15" fill="rgb(217,31,44)"/><text x="199.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="196" y="372" width="8" height="15" fill="rgb(221,59,9)"/><text x="199.00" y="382.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="204" y="244" width="7" height="15" fill="rgb(222,97,50)"/><text x="207.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="204" y="260" width="7" height="15" fill="rgb(210,131,28)"/><text x="207.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="207" y="276" width="4" height="15" fill="rgb(210,59,2)"/><text x="210.00" y="286.50"></text></g><g><title>0x7f6ec048cd50 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="207" y="292" width="4" height="15" fill="rgb(237,58,48)"/><text x="210.00" y="302.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="211" y="244" width="4" height="15" fill="rgb(205,165,9)"/><text x="214.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="211" y="260" width="4" height="15" fill="rgb(209,169,39)"/><text x="214.00" y="270.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py) (41 samples, 13.76%)</title><rect x="57" y="68" width="162" height="15" fill="rgb(222,102,35)"/><text x="60.00" y="78.50">profile_ort (bench_L..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py) (41 samples, 13.76%)</title><rect x="57" y="84" width="162" height="15" fill="rgb(211,202,22)"/><text x="60.00" y="94.50">setup_profile (bench..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py) (41 samples, 13.76%)</title><rect x="57" y="100" width="162" height="15" fill="rgb(240,77,19)"/><text x="60.00" y="110.50">profile (bench_Logis..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (38 samples, 12.75%)</title><rect x="69" y="116" width="150" height="15" fill="rgb(207,159,25)"/><text x="72.00" y="126.50">time_predict (mlpro..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (38 samples, 12.75%)</title><rect x="69" y="132" width="150" height="15" fill="rgb(245,167,41)"/><text x="72.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (37 samples, 12.42%)</title><rect x="73" y="148" width="146" height="15" fill="rgb(223,78,11)"/><text x="76.00" y="158.50">run (mlprodict/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (34 samples, 11.41%)</title><rect x="85" y="164" width="134" height="15" fill="rgb(210,11,32)"/><text x="88.00" y="174.50">_run_whole_runti..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (34 samples, 11.41%)</title><rect x="85" y="180" width="134" height="15" fill="rgb(214,179,3)"/><text x="88.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py) (33 samples, 11.07%)</title><rect x="89" y="196" width="130" height="15" fill="rgb(250,170,52)"/><text x="92.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 9.73%)</title><rect x="105" y="212" width="114" height="15" fill="rgb(221,8,2)"/><text x="108.00" y="222.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 9.73%)</title><rect x="105" y="228" width="114" height="15" fill="rgb(253,156,20)"/><text x="108.00" y="238.50">void pybind11:..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="215" y="244" width="4" height="15" fill="rgb(241,80,41)"/><text x="218.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.67%)</title><rect x="334" y="196" width="8" height="15" fill="rgb(238,65,34)"/><text x="337.00" y="206.50"></text></g><g><title>0x7f6ec054b74e (libc-2.29.so) (1 samples, 0.34%)</title><rect x="413" y="292" width="4" height="15" fill="rgb(210,25,0)"/><text x="416.00" y="302.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (5 samples, 1.68%)</title><rect x="402" y="244" width="19" height="15" fill="rgb(225,69,4)"/><text x="405.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.34%)</title><rect x="405" y="260" width="16" height="15" fill="rgb(251,57,3)"/><text x="408.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (3 samples, 1.01%)</title><rect x="409" y="276" width="12" height="15" fill="rgb(235,45,22)"/><text x="412.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.34%)</title><rect x="417" y="292" width="4" height="15" fill="rgb(218,188,45)"/><text x="420.00" y="302.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.34%)</title><rect x="445" y="324" width="4" height="15" fill="rgb(254,78,37)"/><text x="448.00" y="334.50"></text></g><g><title>0x7f6ec048d1ef (libc-2.29.so) (1 samples, 0.34%)</title><rect x="449" y="340" width="4" height="15" fill="rgb(221,108,30)"/><text x="452.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (10 samples, 3.36%)</title><rect x="421" y="244" width="40" height="15" fill="rgb(213,100,28)"/><text x="424.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (8 samples, 2.68%)</title><rect x="429" y="260" width="32" height="15" fill="rgb(251,11,43)"/><text x="432.00" y="270.50">do..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 2.01%)</title><rect x="437" y="276" width="24" height="15" fill="rgb(220,93,29)"/><text x="440.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (5 samples, 1.68%)</title><rect x="441" y="292" width="20" height="15" fill="rgb(240,70,36)"/><text x="444.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (4 samples, 1.34%)</title><rect x="445" y="308" width="16" height="15" fill="rgb(205,187,15)"/><text x="448.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (3 samples, 1.01%)</title><rect x="449" y="324" width="12" height="15" fill="rgb(251,74,51)"/><text x="452.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (2 samples, 0.67%)</title><rect x="453" y="340" width="8" height="15" fill="rgb(251,25,30)"/><text x="456.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.67%)</title><rect x="453" y="356" width="8" height="15" fill="rgb(237,199,45)"/><text x="456.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.34%)</title><rect x="457" y="372" width="4" height="15" fill="rgb(215,150,51)"/><text x="460.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.34%)</title><rect x="461" y="260" width="4" height="15" fill="rgb(247,97,37)"/><text x="464.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.34%)</title><rect x="461" y="276" width="4" height="15" fill="rgb(214,128,37)"/><text x="464.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.34%)</title><rect x="461" y="292" width="4" height="15" fill="rgb(208,110,5)"/><text x="464.00" y="302.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.34%)</title><rect x="469" y="356" width="4" height="15" fill="rgb(238,106,21)"/><text x="472.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.34%)</title><rect x="469" y="372" width="4" height="15" fill="rgb(239,149,32)"/><text x="472.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.67%)</title><rect x="469" y="292" width="8" height="15" fill="rgb(218,186,49)"/><text x="472.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.67%)</title><rect x="469" y="308" width="8" height="15" fill="rgb(252,12,40)"/><text x="472.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.67%)</title><rect x="469" y="324" width="8" height="15" fill="rgb(223,0,22)"/><text x="472.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.67%)</title><rect x="469" y="340" width="8" height="15" fill="rgb(253,10,2)"/><text x="472.00" y="350.50"></text></g><g><title>to_64 (npy_extint128.h) (1 samples, 0.34%)</title><rect x="473" y="356" width="4" height="15" fill="rgb(223,43,43)"/><text x="476.00" y="366.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.34%)</title><rect x="477" y="324" width="4" height="15" fill="rgb(207,98,14)"/><text x="480.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.67%)</title><rect x="477" y="308" width="8" height="15" fill="rgb(217,50,12)"/><text x="480.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.34%)</title><rect x="481" y="324" width="4" height="15" fill="rgb(249,86,28)"/><text x="484.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.34%)</title><rect x="477" y="292" width="16" height="15" fill="rgb(212,87,22)"/><text x="480.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.67%)</title><rect x="485" y="308" width="8" height="15" fill="rgb(250,165,49)"/><text x="488.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.34%)</title><rect x="489" y="324" width="4" height="15" fill="rgb(211,1,32)"/><text x="492.00" y="334.50"></text></g><g><title>0x7f6ea287133d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="493" y="308" width="4" height="15" fill="rgb(245,209,25)"/><text x="496.00" y="318.50"></text></g><g><title>0x7f6ea2893214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="493" y="324" width="4" height="15" fill="rgb(215,117,20)"/><text x="496.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.34%)</title><rect x="493" y="340" width="4" height="15" fill="rgb(233,56,36)"/><text x="496.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (30 samples, 10.07%)</title><rect x="382" y="228" width="119" height="15" fill="rgb(217,33,35)"/><text x="385.00" y="238.50">_run (mlprodic..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 3.36%)</title><rect x="461" y="244" width="40" height="15" fill="rgb(223,14,5)"/><text x="464.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 3.02%)</title><rect x="465" y="260" width="36" height="15" fill="rgb(211,195,25)"/><text x="468.00" y="270.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 2.68%)</title><rect x="469" y="276" width="32" height="15" fill="rgb(226,120,37)"/><text x="472.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.67%)</title><rect x="493" y="292" width="8" height="15" fill="rgb(227,45,42)"/><text x="496.00" y="302.50"></text></g><g><title>0x7f6ea289313e (?) (1 samples, 0.34%)</title><rect x="497" y="308" width="4" height="15" fill="rgb(247,194,53)"/><text x="500.00" y="318.50"></text></g><g><title>0x7f6ea2892ef7 (?) (1 samples, 0.34%)</title><rect x="497" y="324" width="4" height="15" fill="rgb(241,158,22)"/><text x="500.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="520" y="260" width="4" height="15" fill="rgb(243,159,32)"/><text x="523.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="520" y="276" width="4" height="15" fill="rgb(219,208,49)"/><text x="523.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="520" y="292" width="4" height="15" fill="rgb(245,179,20)"/><text x="523.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 1.34%)</title><rect x="528" y="324" width="16" height="15" fill="rgb(250,91,5)"/><text x="531.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 1.34%)</title><rect x="528" y="340" width="16" height="15" fill="rgb(223,209,43)"/><text x="531.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (4 samples, 1.34%)</title><rect x="528" y="356" width="16" height="15" fill="rgb(247,205,13)"/><text x="531.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (4 samples, 1.34%)</title><rect x="528" y="372" width="16" height="15" fill="rgb(216,12,32)"/><text x="531.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (4 samples, 1.34%)</title><rect x="528" y="388" width="16" height="15" fill="rgb(232,110,2)"/><text x="531.00" y="398.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.34%)</title><rect x="544" y="388" width="4" height="15" fill="rgb(236,168,44)"/><text x="547.00" y="398.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.34%)</title><rect x="548" y="388" width="4" height="15" fill="rgb(252,208,42)"/><text x="551.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.01%)</title><rect x="544" y="372" width="12" height="15" fill="rgb(224,164,28)"/><text x="547.00" y="382.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.34%)</title><rect x="552" y="388" width="4" height="15" fill="rgb(220,227,12)"/><text x="555.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.34%)</title><rect x="556" y="372" width="4" height="15" fill="rgb(218,95,1)"/><text x="559.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.34%)</title><rect x="556" y="388" width="4" height="15" fill="rgb(225,117,54)"/><text x="559.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.34%)</title><rect x="556" y="404" width="4" height="15" fill="rgb(213,47,51)"/><text x="559.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="556" y="420" width="4" height="15" fill="rgb(211,163,51)"/><text x="559.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.34%)</title><rect x="556" y="436" width="4" height="15" fill="rgb(208,25,10)"/><text x="559.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.34%)</title><rect x="556" y="452" width="4" height="15" fill="rgb(243,76,3)"/><text x="559.00" y="462.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.34%)</title><rect x="560" y="372" width="4" height="15" fill="rgb(224,90,41)"/><text x="563.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.34%)</title><rect x="560" y="388" width="4" height="15" fill="rgb(217,4,11)"/><text x="563.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.34%)</title><rect x="560" y="404" width="4" height="15" fill="rgb(220,105,2)"/><text x="563.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.34%)</title><rect x="560" y="420" width="4" height="15" fill="rgb(225,142,16)"/><text x="563.00" y="430.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.34%)</title><rect x="560" y="436" width="4" height="15" fill="rgb(221,65,38)"/><text x="563.00" y="446.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c) (1 samples, 0.34%)</title><rect x="564" y="372" width="4" height="15" fill="rgb(247,53,4)"/><text x="567.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 2.35%)</title><rect x="544" y="356" width="28" height="15" fill="rgb(235,201,23)"/><text x="547.00" y="366.50">P..</text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.34%)</title><rect x="568" y="372" width="4" height="15" fill="rgb(252,146,44)"/><text x="571.00" y="382.50"></text></g><g><title>array_sum (methods.c) (13 samples, 4.36%)</title><rect x="524" y="260" width="52" height="15" fill="rgb(214,213,16)"/><text x="527.00" y="270.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (13 samples, 4.36%)</title><rect x="524" y="276" width="52" height="15" fill="rgb(218,69,40)"/><text x="527.00" y="286.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py) (12 samples, 4.03%)</title><rect x="528" y="292" width="48" height="15" fill="rgb(220,30,36)"/><text x="531.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 4.03%)</title><rect x="528" y="308" width="48" height="15" fill="rgb(210,100,40)"/><text x="531.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (8 samples, 2.68%)</title><rect x="544" y="324" width="32" height="15" fill="rgb(246,49,49)"/><text x="547.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 2.68%)</title><rect x="544" y="340" width="32" height="15" fill="rgb(242,148,28)"/><text x="547.00" y="350.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.34%)</title><rect x="572" y="356" width="4" height="15" fill="rgb(249,37,29)"/><text x="575.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="580" y="292" width="4" height="15" fill="rgb(223,211,23)"/><text x="583.00" y="302.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="580" y="308" width="4" height="15" fill="rgb(252,109,14)"/><text x="583.00" y="318.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.34%)</title><rect x="584" y="292" width="4" height="15" fill="rgb(213,170,15)"/><text x="587.00" y="302.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py) (94 samples, 31.54%)</title><rect x="219" y="100" width="373" height="15" fill="rgb(206,157,41)"/><text x="222.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_6..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (92 samples, 30.87%)</title><rect x="227" y="116" width="365" height="15" fill="rgb(228,70,25)"/><text x="230.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (91 samples, 30.54%)</title><rect x="231" y="132" width="361" height="15" fill="rgb(245,16,29)"/><text x="234.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (91 samples, 30.54%)</title><rect x="231" y="148" width="361" height="15" fill="rgb(208,15,20)"/><text x="234.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (86 samples, 28.86%)</title><rect x="251" y="164" width="341" height="15" fill="rgb(244,213,17)"/><text x="254.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (81 samples, 27.18%)</title><rect x="271" y="180" width="321" height="15" fill="rgb(243,182,20)"/><text x="274.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (63 samples, 21.14%)</title><rect x="342" y="196" width="250" height="15" fill="rgb(246,175,40)"/><text x="345.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (56 samples, 18.79%)</title><rect x="370" y="212" width="222" height="15" fill="rgb(213,202,43)"/><text x="373.00" y="222.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (23 samples, 7.72%)</title><rect x="501" y="228" width="91" height="15" fill="rgb(208,189,7)"/><text x="504.00" y="238.50">_run (mlpr..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (21 samples, 7.05%)</title><rect x="508" y="244" width="84" height="15" fill="rgb(222,38,4)"/><text x="511.00" y="254.50">norm_l1 (..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.34%)</title><rect x="576" y="260" width="16" height="15" fill="rgb(250,51,35)"/><text x="579.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 1.01%)</title><rect x="580" y="276" width="12" height="15" fill="rgb(221,107,49)"/><text x="583.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.34%)</title><rect x="588" y="292" width="4" height="15" fill="rgb(241,32,28)"/><text x="591.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.34%)</title><rect x="588" y="308" width="4" height="15" fill="rgb(219,34,46)"/><text x="591.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.34%)</title><rect x="588" y="324" width="4" height="15" fill="rgb(207,213,32)"/><text x="591.00" y="334.50"></text></g><g><title>0x7f6ec048d14e (libc-2.29.so) (1 samples, 0.34%)</title><rect x="588" y="340" width="4" height="15" fill="rgb(223,164,8)"/><text x="591.00" y="350.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py) (95 samples, 31.88%)</title><rect x="219" y="68" width="377" height="15" fill="rgb(215,0,31)"/><text x="222.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py) (95 samples, 31.88%)</title><rect x="219" y="84" width="377" height="15" fill="rgb(218,161,33)"/><text x="222.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="592" y="100" width="4" height="15" fill="rgb(248,92,2)"/><text x="595.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="592" y="116" width="4" height="15" fill="rgb(254,125,34)"/><text x="595.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="592" y="132" width="4" height="15" fill="rgb(227,84,4)"/><text x="595.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="592" y="148" width="4" height="15" fill="rgb(227,29,3)"/><text x="595.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="592" y="164" width="4" height="15" fill="rgb(219,22,24)"/><text x="595.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.34%)</title><rect x="592" y="180" width="4" height="15" fill="rgb(249,33,53)"/><text x="595.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.34%)</title><rect x="592" y="196" width="4" height="15" fill="rgb(247,196,6)"/><text x="595.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="592" y="212" width="4" height="15" fill="rgb(246,26,27)"/><text x="595.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="592" y="228" width="4" height="15" fill="rgb(210,124,44)"/><text x="595.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="592" y="244" width="4" height="15" fill="rgb(234,112,31)"/><text x="595.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="592" y="260" width="4" height="15" fill="rgb(221,48,45)"/><text x="595.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="592" y="276" width="4" height="15" fill="rgb(246,24,2)"/><text x="595.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.34%)</title><rect x="592" y="292" width="4" height="15" fill="rgb(225,22,2)"/><text x="595.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="592" y="308" width="4" height="15" fill="rgb(254,5,16)"/><text x="595.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="592" y="324" width="4" height="15" fill="rgb(244,37,9)"/><text x="595.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="592" y="340" width="4" height="15" fill="rgb(208,157,11)"/><text x="595.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="592" y="356" width="4" height="15" fill="rgb(246,79,20)"/><text x="595.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="592" y="372" width="4" height="15" fill="rgb(240,138,36)"/><text x="595.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.34%)</title><rect x="592" y="388" width="4" height="15" fill="rgb(243,29,6)"/><text x="595.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="592" y="404" width="4" height="15" fill="rgb(249,133,29)"/><text x="595.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="592" y="420" width="4" height="15" fill="rgb(224,145,30)"/><text x="595.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="592" y="436" width="4" height="15" fill="rgb(208,170,50)"/><text x="595.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="592" y="452" width="4" height="15" fill="rgb(210,164,21)"/><text x="595.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="592" y="468" width="4" height="15" fill="rgb(235,147,50)"/><text x="595.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.34%)</title><rect x="592" y="484" width="4" height="15" fill="rgb(211,110,34)"/><text x="595.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.34%)</title><rect x="592" y="500" width="4" height="15" fill="rgb(237,166,12)"/><text x="595.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.34%)</title><rect x="592" y="516" width="4" height="15" fill="rgb(225,220,48)"/><text x="595.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.34%)</title><rect x="592" y="532" width="4" height="15" fill="rgb(213,48,33)"/><text x="595.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.34%)</title><rect x="592" y="548" width="4" height="15" fill="rgb(246,32,10)"/><text x="595.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.34%)</title><rect x="592" y="564" width="4" height="15" fill="rgb(208,43,3)"/><text x="595.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.34%)</title><rect x="592" y="580" width="4" height="15" fill="rgb(219,94,42)"/><text x="595.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.34%)</title><rect x="592" y="596" width="4" height="15" fill="rgb(230,33,21)"/><text x="595.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.34%)</title><rect x="592" y="612" width="4" height="15" fill="rgb(225,60,50)"/><text x="595.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.34%)</title><rect x="592" y="628" width="4" height="15" fill="rgb(229,215,22)"/><text x="595.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.34%)</title><rect x="592" y="644" width="4" height="15" fill="rgb(241,123,10)"/><text x="595.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.34%)</title><rect x="592" y="660" width="4" height="15" fill="rgb(207,20,8)"/><text x="595.00" y="670.50"></text></g><g><title>analyze_node (jinja2/idtracking.py) (1 samples, 0.34%)</title><rect x="592" y="676" width="4" height="15" fill="rgb(250,49,26)"/><text x="595.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.34%)</title><rect x="592" y="692" width="4" height="15" fill="rgb(228,132,44)"/><text x="595.00" y="702.50"></text></g><g><title>visit_For (jinja2/idtracking.py) (1 samples, 0.34%)</title><rect x="592" y="708" width="4" height="15" fill="rgb(222,102,23)"/><text x="595.00" y="718.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.34%)</title><rect x="592" y="724" width="4" height="15" fill="rgb(206,170,53)"/><text x="595.00" y="734.50"></text></g><g><title>visit_If (jinja2/idtracking.py) (1 samples, 0.34%)</title><rect x="592" y="740" width="4" height="15" fill="rgb(231,141,27)"/><text x="595.00" y="750.50"></text></g><g><title>inner_visit (jinja2/idtracking.py) (1 samples, 0.34%)</title><rect x="592" y="756" width="4" height="15" fill="rgb(233,152,42)"/><text x="595.00" y="766.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.34%)</title><rect x="592" y="772" width="4" height="15" fill="rgb(227,221,35)"/><text x="595.00" y="782.50"></text></g><g><title>visit_If (jinja2/idtracking.py) (1 samples, 0.34%)</title><rect x="592" y="788" width="4" height="15" fill="rgb(228,134,43)"/><text x="595.00" y="798.50"></text></g><g><title>inner_visit (jinja2/idtracking.py) (1 samples, 0.34%)</title><rect x="592" y="804" width="4" height="15" fill="rgb(227,147,52)"/><text x="595.00" y="814.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.34%)</title><rect x="592" y="820" width="4" height="15" fill="rgb(216,31,51)"/><text x="595.00" y="830.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.34%)</title><rect x="592" y="836" width="4" height="15" fill="rgb(244,100,8)"/><text x="595.00" y="846.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.34%)</title><rect x="592" y="852" width="4" height="15" fill="rgb(244,154,45)"/><text x="595.00" y="862.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.34%)</title><rect x="592" y="868" width="4" height="15" fill="rgb(212,149,43)"/><text x="595.00" y="878.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.34%)</title><rect x="592" y="884" width="4" height="15" fill="rgb(244,71,43)"/><text x="595.00" y="894.50"></text></g><g><title>iter_fields (jinja2/nodes.py) (1 samples, 0.34%)</title><rect x="592" y="900" width="4" height="15" fill="rgb(234,170,34)"/><text x="595.00" y="910.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="603" y="116" width="4" height="15" fill="rgb(244,95,31)"/><text x="606.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.34%)</title><rect x="603" y="132" width="4" height="15" fill="rgb(215,209,42)"/><text x="606.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.34%)</title><rect x="603" y="148" width="4" height="15" fill="rgb(210,91,35)"/><text x="606.00" y="158.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.34%)</title><rect x="639" y="180" width="4" height="15" fill="rgb(228,103,20)"/><text x="642.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.34%)</title><rect x="639" y="196" width="4" height="15" fill="rgb(225,198,40)"/><text x="642.00" y="206.50"></text></g><g><title>0x7f6ec0482734 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="639" y="212" width="4" height="15" fill="rgb(224,198,14)"/><text x="642.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.34%)</title><rect x="643" y="244" width="4" height="15" fill="rgb(220,199,43)"/><text x="646.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.34%)</title><rect x="643" y="260" width="4" height="15" fill="rgb(208,128,41)"/><text x="646.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.34%)</title><rect x="643" y="276" width="4" height="15" fill="rgb(206,169,35)"/><text x="646.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.34%)</title><rect x="643" y="292" width="4" height="15" fill="rgb(222,89,43)"/><text x="646.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.34%)</title><rect x="643" y="308" width="4" height="15" fill="rgb(250,94,42)"/><text x="646.00" y="318.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.34%)</title><rect x="651" y="260" width="4" height="15" fill="rgb(218,103,15)"/><text x="654.00" y="270.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.34%)</title><rect x="651" y="276" width="4" height="15" fill="rgb(229,138,33)"/><text x="654.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.34%)</title><rect x="651" y="292" width="4" height="15" fill="rgb(246,85,5)"/><text x="654.00" y="302.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.34%)</title><rect x="655" y="340" width="4" height="15" fill="rgb(243,205,48)"/><text x="658.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.67%)</title><rect x="655" y="292" width="8" height="15" fill="rgb(238,193,42)"/><text x="658.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.67%)</title><rect x="655" y="308" width="8" height="15" fill="rgb(248,196,25)"/><text x="658.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (2 samples, 0.67%)</title><rect x="655" y="324" width="8" height="15" fill="rgb(225,190,9)"/><text x="658.00" y="334.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.34%)</title><rect x="659" y="340" width="4" height="15" fill="rgb(228,71,23)"/><text x="662.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 1.01%)</title><rect x="655" y="276" width="12" height="15" fill="rgb(216,65,53)"/><text x="658.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.34%)</title><rect x="663" y="292" width="4" height="15" fill="rgb(248,163,40)"/><text x="666.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.34%)</title><rect x="663" y="308" width="4" height="15" fill="rgb(247,137,44)"/><text x="666.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 1.34%)</title><rect x="655" y="260" width="16" height="15" fill="rgb(233,136,36)"/><text x="658.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.34%)</title><rect x="667" y="276" width="4" height="15" fill="rgb(242,65,51)"/><text x="670.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="667" y="292" width="4" height="15" fill="rgb(219,225,31)"/><text x="670.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="667" y="308" width="4" height="15" fill="rgb(208,61,37)"/><text x="670.00" y="318.50"></text></g><g><title>array_sum (methods.c) (8 samples, 2.68%)</title><rect x="643" y="180" width="32" height="15" fill="rgb(233,169,3)"/><text x="646.00" y="190.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (8 samples, 2.68%)</title><rect x="643" y="196" width="32" height="15" fill="rgb(248,39,16)"/><text x="646.00" y="206.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (8 samples, 2.68%)</title><rect x="643" y="212" width="32" height="15" fill="rgb(228,194,9)"/><text x="646.00" y="222.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (8 samples, 2.68%)</title><rect x="643" y="228" width="32" height="15" fill="rgb(226,223,15)"/><text x="646.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 2.35%)</title><rect x="647" y="244" width="28" height="15" fill="rgb(238,82,0)"/><text x="650.00" y="254.50">P..</text></g><g><title>_wheremask_converter (ufunc_object.c) (1 samples, 0.34%)</title><rect x="671" y="260" width="4" height="15" fill="rgb(240,1,44)"/><text x="674.00" y="270.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 0.67%)</title><rect x="702" y="196" width="8" height="15" fill="rgb(243,194,32)"/><text x="705.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.67%)</title><rect x="702" y="212" width="8" height="15" fill="rgb(238,156,9)"/><text x="705.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.67%)</title><rect x="702" y="228" width="8" height="15" fill="rgb(210,174,0)"/><text x="705.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (2 samples, 0.67%)</title><rect x="702" y="244" width="8" height="15" fill="rgb(247,209,48)"/><text x="705.00" y="254.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (2 samples, 0.67%)</title><rect x="702" y="260" width="8" height="15" fill="rgb(244,5,8)"/><text x="705.00" y="270.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.34%)</title><rect x="706" y="276" width="4" height="15" fill="rgb(213,66,4)"/><text x="709.00" y="286.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.34%)</title><rect x="722" y="276" width="4" height="15" fill="rgb(245,114,27)"/><text x="725.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.34%)</title><rect x="722" y="292" width="4" height="15" fill="rgb(252,166,28)"/><text x="725.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.34%)</title><rect x="722" y="308" width="4" height="15" fill="rgb(238,189,37)"/><text x="725.00" y="318.50"></text></g><g><title>array_add (number.c) (5 samples, 1.68%)</title><rect x="710" y="196" width="20" height="15" fill="rgb(254,173,17)"/><text x="713.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.68%)</title><rect x="710" y="212" width="20" height="15" fill="rgb(218,60,10)"/><text x="713.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.34%)</title><rect x="714" y="228" width="16" height="15" fill="rgb(209,60,38)"/><text x="717.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 1.01%)</title><rect x="718" y="244" width="12" height="15" fill="rgb(253,182,25)"/><text x="721.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.67%)</title><rect x="722" y="260" width="8" height="15" fill="rgb(248,95,26)"/><text x="725.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.34%)</title><rect x="726" y="276" width="4" height="15" fill="rgb(224,209,17)"/><text x="729.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="730" y="196" width="4" height="15" fill="rgb(211,218,39)"/><text x="733.00" y="206.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="730" y="212" width="4" height="15" fill="rgb(222,122,38)"/><text x="733.00" y="222.50"></text></g><g><title>array_transpose_get (getset.c) (1 samples, 0.34%)</title><rect x="734" y="196" width="4" height="15" fill="rgb(216,153,5)"/><text x="737.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.67%)</title><rect x="801" y="212" width="8" height="15" fill="rgb(240,163,38)"/><text x="804.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.67%)</title><rect x="809" y="212" width="8" height="15" fill="rgb(205,83,54)"/><text x="812.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 2.01%)</title><rect x="817" y="212" width="24" height="15" fill="rgb(207,105,48)"/><text x="820.00" y="222.50">_..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="829" y="228" width="12" height="15" fill="rgb(227,114,29)"/><text x="832.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (3 samples, 1.01%)</title><rect x="841" y="212" width="12" height="15" fill="rgb(209,172,41)"/><text x="844.00" y="222.50"></text></g><g><title>0x7f6ec048d120 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="865" y="228" width="4" height="15" fill="rgb(222,41,10)"/><text x="868.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 2.35%)</title><rect x="853" y="212" width="28" height="15" fill="rgb(218,206,44)"/><text x="856.00" y="222.50">_..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 1.01%)</title><rect x="869" y="228" width="12" height="15" fill="rgb(240,105,35)"/><text x="872.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.34%)</title><rect x="877" y="244" width="4" height="15" fill="rgb(206,202,27)"/><text x="880.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (5 samples, 1.68%)</title><rect x="881" y="212" width="19" height="15" fill="rgb(212,75,17)"/><text x="884.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="896" y="228" width="4" height="15" fill="rgb(228,151,7)"/><text x="899.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.67%)</title><rect x="904" y="228" width="8" height="15" fill="rgb(246,203,3)"/><text x="907.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (4 samples, 1.34%)</title><rect x="900" y="212" width="16" height="15" fill="rgb(235,104,52)"/><text x="903.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.34%)</title><rect x="912" y="228" width="4" height="15" fill="rgb(215,157,45)"/><text x="915.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (51 samples, 17.11%)</title><rect x="738" y="196" width="202" height="15" fill="rgb(224,100,40)"/><text x="741.00" y="206.50">check_array (sklearn/utils..</text></g><g><title>simplefilter (warnings.py) (6 samples, 2.01%)</title><rect x="916" y="212" width="24" height="15" fill="rgb(237,156,12)"/><text x="919.00" y="222.50">s..</text></g><g><title>_add_filter (warnings.py) (5 samples, 1.68%)</title><rect x="920" y="228" width="20" height="15" fill="rgb(209,99,43)"/><text x="923.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.67%)</title><rect x="964" y="228" width="8" height="15" fill="rgb(223,154,22)"/><text x="967.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 2.68%)</title><rect x="948" y="212" width="32" height="15" fill="rgb(245,23,27)"/><text x="951.00" y="222.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.67%)</title><rect x="972" y="228" width="8" height="15" fill="rgb(239,171,46)"/><text x="975.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (11 samples, 3.69%)</title><rect x="940" y="196" width="44" height="15" fill="rgb(208,47,48)"/><text x="943.00" y="206.50">chec..</text></g><g><title>isclass (inspect.py) (1 samples, 0.34%)</title><rect x="980" y="212" width="4" height="15" fill="rgb(208,103,2)"/><text x="983.00" y="222.50"></text></g><g><title>array_matrix_multiply (number.c) (1 samples, 0.34%)</title><rect x="988" y="212" width="4" height="15" fill="rgb(246,73,23)"/><text x="991.00" y="222.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c) (1 samples, 0.34%)</title><rect x="988" y="228" width="4" height="15" fill="rgb(205,204,52)"/><text x="991.00" y="238.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="992" y="212" width="3" height="15" fill="rgb(205,215,30)"/><text x="995.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.34%)</title><rect x="999" y="260" width="4" height="15" fill="rgb(221,130,43)"/><text x="1002.00" y="270.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.34%)</title><rect x="1003" y="356" width="4" height="15" fill="rgb(249,117,36)"/><text x="1006.00" y="366.50"></text></g><g><title>arrays_overlap (array_assign.c) (2 samples, 0.67%)</title><rect x="1003" y="308" width="8" height="15" fill="rgb(215,155,52)"/><text x="1006.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.67%)</title><rect x="1003" y="324" width="8" height="15" fill="rgb(241,117,3)"/><text x="1006.00" y="334.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (2 samples, 0.67%)</title><rect x="1003" y="340" width="8" height="15" fill="rgb(242,48,41)"/><text x="1006.00" y="350.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1007" y="356" width="4" height="15" fill="rgb(233,72,5)"/><text x="1010.00" y="366.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.67%)</title><rect x="1011" y="324" width="8" height="15" fill="rgb(252,146,8)"/><text x="1014.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1015" y="340" width="4" height="15" fill="rgb(245,115,53)"/><text x="1018.00" y="350.50"></text></g><g><title>0x7f6ec048cd50 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1015" y="356" width="4" height="15" fill="rgb(237,101,33)"/><text x="1018.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 1.68%)</title><rect x="1003" y="292" width="20" height="15" fill="rgb(221,78,50)"/><text x="1006.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 1.01%)</title><rect x="1011" y="308" width="12" height="15" fill="rgb(206,3,37)"/><text x="1014.00" y="318.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="1019" y="324" width="4" height="15" fill="rgb(211,50,40)"/><text x="1022.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (6 samples, 2.01%)</title><rect x="1003" y="276" width="24" height="15" fill="rgb(226,116,28)"/><text x="1006.00" y="286.50">n..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1023" y="292" width="4" height="15" fill="rgb(246,171,8)"/><text x="1026.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.67%)</title><rect x="1027" y="276" width="8" height="15" fill="rgb(247,79,20)"/><text x="1030.00" y="286.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1035" y="292" width="4" height="15" fill="rgb(243,187,41)"/><text x="1038.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (10 samples, 3.36%)</title><rect x="1003" y="260" width="40" height="15" fill="rgb(236,66,47)"/><text x="1006.00" y="270.50">Npy..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.67%)</title><rect x="1035" y="276" width="8" height="15" fill="rgb(217,47,18)"/><text x="1038.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1039" y="292" width="4" height="15" fill="rgb(237,117,52)"/><text x="1042.00" y="302.50"></text></g><g><title>0x7f6ebf68f9c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="1043" y="276" width="4" height="15" fill="rgb(253,114,12)"/><text x="1046.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.67%)</title><rect x="1043" y="260" width="8" height="15" fill="rgb(224,203,17)"/><text x="1046.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="1047" y="276" width="4" height="15" fill="rgb(212,218,42)"/><text x="1050.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="1047" y="292" width="4" height="15" fill="rgb(224,173,54)"/><text x="1050.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 4.70%)</title><rect x="999" y="228" width="56" height="15" fill="rgb(253,91,51)"/><text x="1002.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (14 samples, 4.70%)</title><rect x="999" y="244" width="56" height="15" fill="rgb(220,108,8)"/><text x="1002.00" y="254.50">PyUFu..</text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.34%)</title><rect x="1051" y="260" width="4" height="15" fill="rgb(244,173,47)"/><text x="1054.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (97 samples, 32.55%)</title><rect x="675" y="180" width="384" height="15" fill="rgb(219,205,12)"/><text x="678.00" y="190.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (19 samples, 6.38%)</title><rect x="984" y="196" width="75" height="15" fill="rgb(219,15,1)"/><text x="987.00" y="206.50">safe_spa..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 5.37%)</title><rect x="995" y="212" width="64" height="15" fill="rgb(215,177,13)"/><text x="998.00" y="222.50">ufunc_g..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1055" y="228" width="4" height="15" fill="rgb(253,163,7)"/><text x="1058.00" y="238.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.34%)</title><rect x="1059" y="244" width="4" height="15" fill="rgb(214,18,20)"/><text x="1062.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.67%)</title><rect x="1059" y="196" width="8" height="15" fill="rgb(253,177,5)"/><text x="1062.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.67%)</title><rect x="1059" y="212" width="8" height="15" fill="rgb(207,169,28)"/><text x="1062.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.67%)</title><rect x="1059" y="228" width="8" height="15" fill="rgb(238,46,16)"/><text x="1062.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.34%)</title><rect x="1063" y="244" width="4" height="15" fill="rgb(236,154,0)"/><text x="1066.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1067" y="260" width="4" height="15" fill="rgb(208,178,26)"/><text x="1070.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1067" y="276" width="4" height="15" fill="rgb(233,84,20)"/><text x="1070.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.67%)</title><rect x="1067" y="228" width="8" height="15" fill="rgb(224,181,16)"/><text x="1070.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.67%)</title><rect x="1067" y="244" width="8" height="15" fill="rgb(207,135,50)"/><text x="1070.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1071" y="260" width="4" height="15" fill="rgb(219,108,30)"/><text x="1074.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1071" y="276" width="4" height="15" fill="rgb(212,109,46)"/><text x="1074.00" y="286.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.34%)</title><rect x="1071" y="292" width="4" height="15" fill="rgb(224,7,12)"/><text x="1074.00" y="302.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.34%)</title><rect x="1071" y="308" width="4" height="15" fill="rgb(228,120,52)"/><text x="1074.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1079" y="260" width="4" height="15" fill="rgb(207,86,51)"/><text x="1082.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1083" y="260" width="4" height="15" fill="rgb(232,122,5)"/><text x="1086.00" y="270.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1083" y="276" width="4" height="15" fill="rgb(206,154,44)"/><text x="1086.00" y="286.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1083" y="292" width="4" height="15" fill="rgb(232,76,18)"/><text x="1086.00" y="302.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1083" y="308" width="4" height="15" fill="rgb(235,12,27)"/><text x="1086.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.34%)</title><rect x="1087" y="260" width="4" height="15" fill="rgb(212,63,54)"/><text x="1090.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.68%)</title><rect x="1075" y="244" width="19" height="15" fill="rgb(244,183,39)"/><text x="1078.00" y="254.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1091" y="260" width="3" height="15" fill="rgb(235,216,7)"/><text x="1094.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 3.02%)</title><rect x="1067" y="212" width="35" height="15" fill="rgb(215,128,12)"/><text x="1070.00" y="222.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 2.35%)</title><rect x="1075" y="228" width="27" height="15" fill="rgb(220,225,28)"/><text x="1078.00" y="238.50">i..</text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src) (2 samples, 0.67%)</title><rect x="1094" y="244" width="8" height="15" fill="rgb(226,74,41)"/><text x="1097.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1102" y="212" width="4" height="15" fill="rgb(222,86,23)"/><text x="1105.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1102" y="228" width="4" height="15" fill="rgb(235,228,14)"/><text x="1105.00" y="238.50"></text></g><g><title>0x7f6ec048d1d6 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1110" y="228" width="4" height="15" fill="rgb(240,175,4)"/><text x="1113.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (126 samples, 42.28%)</title><rect x="619" y="164" width="499" height="15" fill="rgb(235,67,44)"/><text x="622.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 5.03%)</title><rect x="1059" y="180" width="59" height="15" fill="rgb(245,31,22)"/><text x="1062.00" y="190.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 4.36%)</title><rect x="1067" y="196" width="51" height="15" fill="rgb(248,75,32)"/><text x="1070.00" y="206.50">PyUFu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (3 samples, 1.01%)</title><rect x="1106" y="212" width="12" height="15" fill="rgb(223,225,25)"/><text x="1109.00" y="222.50"></text></g><g><title>tuple_all_none (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1114" y="228" width="4" height="15" fill="rgb(207,29,34)"/><text x="1117.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.67%)</title><rect x="1166" y="196" width="8" height="15" fill="rgb(211,170,3)"/><text x="1169.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (15 samples, 5.03%)</title><rect x="1122" y="180" width="60" height="15" fill="rgb(250,147,12)"/><text x="1125.00" y="190.50">&lt;listc..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.67%)</title><rect x="1174" y="196" width="8" height="15" fill="rgb(245,14,11)"/><text x="1177.00" y="206.50"></text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py) (149 samples, 50.00%)</title><rect x="596" y="68" width="590" height="15" fill="rgb(248,159,48)"/><text x="599.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py) (149 samples, 50.00%)</title><rect x="596" y="84" width="590" height="15" fill="rgb(205,109,43)"/><text x="599.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py) (149 samples, 50.00%)</title><rect x="596" y="100" width="590" height="15" fill="rgb(251,205,7)"/><text x="599.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_f..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (146 samples, 48.99%)</title><rect x="607" y="116" width="579" height="15" fill="rgb(249,203,22)"/><text x="610.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (144 samples, 48.32%)</title><rect x="615" y="132" width="571" height="15" fill="rgb(207,189,11)"/><text x="618.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (143 samples, 47.99%)</title><rect x="619" y="148" width="567" height="15" fill="rgb(228,194,8)"/><text x="622.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (17 samples, 5.70%)</title><rect x="1118" y="164" width="68" height="15" fill="rgb(218,94,31)"/><text x="1121.00" y="174.50">check_i..</text></g><g><title>isclass (inspect.py) (1 samples, 0.34%)</title><rect x="1182" y="180" width="4" height="15" fill="rgb(210,171,39)"/><text x="1185.00" y="190.50"></text></g><g><title>all (298 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(236,36,31)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py) (298 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(206,200,53)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py)</text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py) (1 samples, 0.34%)</title><rect x="1186" y="68" width="4" height="15" fill="rgb(221,62,10)"/><text x="1189.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py) (1 samples, 0.34%)</title><rect x="1186" y="84" width="4" height="15" fill="rgb(232,168,21)"/><text x="1189.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="1186" y="100" width="4" height="15" fill="rgb(214,128,40)"/><text x="1189.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="1186" y="116" width="4" height="15" fill="rgb(238,134,16)"/><text x="1189.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py) (1 samples, 0.34%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(244,225,17)"/><text x="1189.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py) (1 samples, 0.34%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(225,224,46)"/><text x="1189.00" y="158.50"></text></g><g><title>isatty (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(234,108,33)"/><text x="1189.00" y="174.50"></text></g><g><title>tcgetattr (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(219,61,25)"/><text x="1189.00" y="190.50"></text></g></g></svg>