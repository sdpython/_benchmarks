<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1574" onload="init(evt)" viewBox="0 0 1200 1574" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1574" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1557.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1557.00"> </text><g id="frames"><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.17%)</title><rect x="10" y="1060" width="2" height="15" fill="rgb(245,43,50)"/><text x="13.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="10" y="1076" width="2" height="15" fill="rgb(241,128,33)"/><text x="13.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="10" y="1092" width="2" height="15" fill="rgb(234,228,30)"/><text x="13.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="10" y="1108" width="2" height="15" fill="rgb(251,13,19)"/><text x="13.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="10" y="1124" width="2" height="15" fill="rgb(245,100,46)"/><text x="13.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="10" y="1140" width="2" height="15" fill="rgb(254,118,11)"/><text x="13.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.17%)</title><rect x="10" y="1156" width="2" height="15" fill="rgb(222,53,40)"/><text x="13.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="10" y="1172" width="2" height="15" fill="rgb(210,11,1)"/><text x="13.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="10" y="1188" width="2" height="15" fill="rgb(212,160,45)"/><text x="13.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="10" y="1204" width="2" height="15" fill="rgb(206,107,1)"/><text x="13.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="10" y="1220" width="2" height="15" fill="rgb(242,45,22)"/><text x="13.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="10" y="1236" width="2" height="15" fill="rgb(207,201,32)"/><text x="13.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.17%)</title><rect x="10" y="1252" width="2" height="15" fill="rgb(252,85,23)"/><text x="13.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="10" y="1268" width="2" height="15" fill="rgb(222,177,32)"/><text x="13.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="10" y="1284" width="2" height="15" fill="rgb(221,165,5)"/><text x="13.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="10" y="1300" width="2" height="15" fill="rgb(214,199,54)"/><text x="13.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="10" y="1316" width="2" height="15" fill="rgb(227,145,33)"/><text x="13.00" y="1326.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="10" y="1332" width="2" height="15" fill="rgb(239,18,17)"/><text x="13.00" y="1342.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="10" y="1348" width="2" height="15" fill="rgb(234,117,23)"/><text x="13.00" y="1358.50"></text></g><g><title>__new__ (&lt;string&gt;) (1 samples, 0.17%)</title><rect x="12" y="1252" width="2" height="15" fill="rgb(212,192,13)"/><text x="15.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.52%)</title><rect x="10" y="980" width="6" height="15" fill="rgb(223,73,28)"/><text x="13.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.52%)</title><rect x="10" y="996" width="6" height="15" fill="rgb(227,221,8)"/><text x="13.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.52%)</title><rect x="10" y="1012" width="6" height="15" fill="rgb(248,125,12)"/><text x="13.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.52%)</title><rect x="10" y="1028" width="6" height="15" fill="rgb(223,135,0)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.52%)</title><rect x="10" y="1044" width="6" height="15" fill="rgb(251,79,3)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.35%)</title><rect x="12" y="1060" width="4" height="15" fill="rgb(242,29,27)"/><text x="15.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="12" y="1076" width="4" height="15" fill="rgb(221,218,46)"/><text x="15.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="12" y="1092" width="4" height="15" fill="rgb(206,61,38)"/><text x="15.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="12" y="1108" width="4" height="15" fill="rgb(233,132,43)"/><text x="15.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="12" y="1124" width="4" height="15" fill="rgb(221,7,22)"/><text x="15.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="12" y="1140" width="4" height="15" fill="rgb(250,186,47)"/><text x="15.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.35%)</title><rect x="12" y="1156" width="4" height="15" fill="rgb(248,46,39)"/><text x="15.00" y="1166.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.35%)</title><rect x="12" y="1172" width="4" height="15" fill="rgb(227,144,47)"/><text x="15.00" y="1182.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.35%)</title><rect x="12" y="1188" width="4" height="15" fill="rgb(229,150,4)"/><text x="15.00" y="1198.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.35%)</title><rect x="12" y="1204" width="4" height="15" fill="rgb(249,157,50)"/><text x="15.00" y="1214.50"></text></g><g><title>getblock (inspect.py) (2 samples, 0.35%)</title><rect x="12" y="1220" width="4" height="15" fill="rgb(226,194,31)"/><text x="15.00" y="1230.50"></text></g><g><title>_tokenize (tokenize.py) (2 samples, 0.35%)</title><rect x="12" y="1236" width="4" height="15" fill="rgb(221,149,40)"/><text x="15.00" y="1246.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.17%)</title><rect x="14" y="1252" width="2" height="15" fill="rgb(254,210,42)"/><text x="17.00" y="1262.50"></text></g><g><title>compile (re.py) (1 samples, 0.17%)</title><rect x="14" y="1268" width="2" height="15" fill="rgb(216,182,20)"/><text x="17.00" y="1278.50"></text></g><g><title>_compile (re.py) (1 samples, 0.17%)</title><rect x="14" y="1284" width="2" height="15" fill="rgb(240,29,4)"/><text x="17.00" y="1294.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 0.87%)</title><rect x="10" y="628" width="10" height="15" fill="rgb(215,117,30)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="644" width="10" height="15" fill="rgb(236,168,9)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="660" width="10" height="15" fill="rgb(213,171,50)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="676" width="10" height="15" fill="rgb(213,135,48)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.87%)</title><rect x="10" y="692" width="10" height="15" fill="rgb(222,224,47)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="708" width="10" height="15" fill="rgb(219,9,27)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 0.87%)</title><rect x="10" y="724" width="10" height="15" fill="rgb(237,180,19)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="740" width="10" height="15" fill="rgb(250,111,19)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="756" width="10" height="15" fill="rgb(219,45,5)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="772" width="10" height="15" fill="rgb(252,27,21)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="788" width="10" height="15" fill="rgb(237,199,6)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="804" width="10" height="15" fill="rgb(235,48,7)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="820" width="10" height="15" fill="rgb(215,12,41)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.87%)</title><rect x="10" y="836" width="10" height="15" fill="rgb(254,108,46)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="852" width="10" height="15" fill="rgb(240,88,18)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 0.87%)</title><rect x="10" y="868" width="10" height="15" fill="rgb(232,168,47)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="884" width="10" height="15" fill="rgb(227,99,11)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="900" width="10" height="15" fill="rgb(220,205,41)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="916" width="10" height="15" fill="rgb(229,135,34)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.87%)</title><rect x="10" y="932" width="10" height="15" fill="rgb(222,135,46)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="10" y="948" width="10" height="15" fill="rgb(210,64,45)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 0.87%)</title><rect x="10" y="964" width="10" height="15" fill="rgb(253,185,28)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="980" width="4" height="15" fill="rgb(243,144,28)"/><text x="19.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="996" width="4" height="15" fill="rgb(252,199,53)"/><text x="19.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="1012" width="4" height="15" fill="rgb(231,56,42)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="1028" width="4" height="15" fill="rgb(224,159,46)"/><text x="19.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="1044" width="4" height="15" fill="rgb(225,26,49)"/><text x="19.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="16" y="1060" width="4" height="15" fill="rgb(225,211,30)"/><text x="19.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="1076" width="4" height="15" fill="rgb(218,212,1)"/><text x="19.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.35%)</title><rect x="16" y="1092" width="4" height="15" fill="rgb(234,124,40)"/><text x="19.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="1108" width="4" height="15" fill="rgb(246,226,0)"/><text x="19.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="1124" width="4" height="15" fill="rgb(228,47,33)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="1140" width="4" height="15" fill="rgb(235,88,8)"/><text x="19.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="1156" width="4" height="15" fill="rgb(238,188,31)"/><text x="19.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="1172" width="4" height="15" fill="rgb(243,220,49)"/><text x="19.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="16" y="1188" width="4" height="15" fill="rgb(228,61,22)"/><text x="19.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="1204" width="4" height="15" fill="rgb(247,147,39)"/><text x="19.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.35%)</title><rect x="16" y="1220" width="4" height="15" fill="rgb(228,115,54)"/><text x="19.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="1236" width="4" height="15" fill="rgb(232,0,45)"/><text x="19.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="1252" width="4" height="15" fill="rgb(240,40,42)"/><text x="19.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="1268" width="4" height="15" fill="rgb(225,105,19)"/><text x="19.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="16" y="1284" width="4" height="15" fill="rgb(222,151,39)"/><text x="19.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="16" y="1300" width="4" height="15" fill="rgb(215,219,15)"/><text x="19.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.35%)</title><rect x="16" y="1316" width="4" height="15" fill="rgb(223,209,2)"/><text x="19.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.35%)</title><rect x="16" y="1332" width="4" height="15" fill="rgb(213,165,0)"/><text x="19.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.35%)</title><rect x="16" y="1348" width="4" height="15" fill="rgb(232,191,50)"/><text x="19.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.35%)</title><rect x="16" y="1364" width="4" height="15" fill="rgb(229,169,36)"/><text x="19.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.35%)</title><rect x="16" y="1380" width="4" height="15" fill="rgb(206,45,38)"/><text x="19.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.35%)</title><rect x="16" y="1396" width="4" height="15" fill="rgb(205,28,49)"/><text x="19.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.35%)</title><rect x="16" y="1412" width="4" height="15" fill="rgb(225,95,42)"/><text x="19.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.35%)</title><rect x="16" y="1428" width="4" height="15" fill="rgb(236,32,43)"/><text x="19.00" y="1438.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="18" y="1444" width="2" height="15" fill="rgb(253,4,50)"/><text x="21.00" y="1454.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#18}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#18}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="18" y="1460" width="2" height="15" fill="rgb(243,89,35)"/><text x="21.00" y="1470.50"></text></g><g><title>pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#18}::operator() const (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="18" y="1476" width="2" height="15" fill="rgb(215,224,51)"/><text x="21.00" y="1486.50"></text></g><g><title>pybind11::int_::int_ (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="18" y="1492" width="2" height="15" fill="rgb(217,123,52)"/><text x="21.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.04%)</title><rect x="10" y="612" width="12" height="15" fill="rgb(229,47,36)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.17%)</title><rect x="20" y="628" width="2" height="15" fill="rgb(251,40,46)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="644" width="2" height="15" fill="rgb(229,72,21)"/><text x="23.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="660" width="2" height="15" fill="rgb(241,224,5)"/><text x="23.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="676" width="2" height="15" fill="rgb(241,29,42)"/><text x="23.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="692" width="2" height="15" fill="rgb(245,105,43)"/><text x="23.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="708" width="2" height="15" fill="rgb(252,135,45)"/><text x="23.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.17%)</title><rect x="20" y="724" width="2" height="15" fill="rgb(249,184,28)"/><text x="23.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="740" width="2" height="15" fill="rgb(223,103,28)"/><text x="23.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="756" width="2" height="15" fill="rgb(222,201,2)"/><text x="23.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="772" width="2" height="15" fill="rgb(253,64,41)"/><text x="23.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="788" width="2" height="15" fill="rgb(235,124,7)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="804" width="2" height="15" fill="rgb(232,144,42)"/><text x="23.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.17%)</title><rect x="20" y="820" width="2" height="15" fill="rgb(229,40,7)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="836" width="2" height="15" fill="rgb(251,154,22)"/><text x="23.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="852" width="2" height="15" fill="rgb(252,60,36)"/><text x="23.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="868" width="2" height="15" fill="rgb(219,163,49)"/><text x="23.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="884" width="2" height="15" fill="rgb(229,88,4)"/><text x="23.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(220,80,40)"/><text x="23.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.17%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(226,71,12)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(217,139,43)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(245,63,20)"/><text x="23.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(217,117,41)"/><text x="23.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="980" width="2" height="15" fill="rgb(234,225,13)"/><text x="23.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="996" width="2" height="15" fill="rgb(221,182,2)"/><text x="23.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.17%)</title><rect x="20" y="1012" width="2" height="15" fill="rgb(237,2,21)"/><text x="23.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1028" width="2" height="15" fill="rgb(240,224,45)"/><text x="23.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1044" width="2" height="15" fill="rgb(229,160,6)"/><text x="23.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1060" width="2" height="15" fill="rgb(224,103,15)"/><text x="23.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="1076" width="2" height="15" fill="rgb(244,27,47)"/><text x="23.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1092" width="2" height="15" fill="rgb(208,229,9)"/><text x="23.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.17%)</title><rect x="20" y="1108" width="2" height="15" fill="rgb(233,217,18)"/><text x="23.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1124" width="2" height="15" fill="rgb(213,57,29)"/><text x="23.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1140" width="2" height="15" fill="rgb(254,117,37)"/><text x="23.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="20" y="1156" width="2" height="15" fill="rgb(206,152,40)"/><text x="23.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="1172" width="2" height="15" fill="rgb(232,196,12)"/><text x="23.00" y="1182.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="1188" width="2" height="15" fill="rgb(240,183,46)"/><text x="23.00" y="1198.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="20" y="1204" width="2" height="15" fill="rgb(217,216,27)"/><text x="23.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.22%)</title><rect x="10" y="340" width="14" height="15" fill="rgb(206,182,31)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.22%)</title><rect x="10" y="356" width="14" height="15" fill="rgb(254,166,50)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.22%)</title><rect x="10" y="372" width="14" height="15" fill="rgb(215,122,14)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.22%)</title><rect x="10" y="388" width="14" height="15" fill="rgb(245,162,18)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.22%)</title><rect x="10" y="404" width="14" height="15" fill="rgb(235,90,2)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.22%)</title><rect x="10" y="420" width="14" height="15" fill="rgb(209,24,28)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (7 samples, 1.22%)</title><rect x="10" y="436" width="14" height="15" fill="rgb(216,50,21)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.22%)</title><rect x="10" y="452" width="14" height="15" fill="rgb(207,16,8)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.22%)</title><rect x="10" y="468" width="14" height="15" fill="rgb(243,193,51)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.22%)</title><rect x="10" y="484" width="14" height="15" fill="rgb(254,188,50)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.22%)</title><rect x="10" y="500" width="14" height="15" fill="rgb(218,99,11)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.22%)</title><rect x="10" y="516" width="14" height="15" fill="rgb(241,181,44)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (7 samples, 1.22%)</title><rect x="10" y="532" width="14" height="15" fill="rgb(253,163,39)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.22%)</title><rect x="10" y="548" width="14" height="15" fill="rgb(230,77,25)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.22%)</title><rect x="10" y="564" width="14" height="15" fill="rgb(245,85,43)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.22%)</title><rect x="10" y="580" width="14" height="15" fill="rgb(244,85,23)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.22%)</title><rect x="10" y="596" width="14" height="15" fill="rgb(244,47,3)"/><text x="13.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="22" y="612" width="2" height="15" fill="rgb(241,45,15)"/><text x="25.00" y="622.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="22" y="628" width="2" height="15" fill="rgb(223,139,10)"/><text x="25.00" y="638.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.17%)</title><rect x="24" y="580" width="2" height="15" fill="rgb(237,183,53)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="596" width="2" height="15" fill="rgb(230,174,37)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="612" width="2" height="15" fill="rgb(233,173,36)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="628" width="2" height="15" fill="rgb(240,194,0)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="24" y="644" width="2" height="15" fill="rgb(211,135,41)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="660" width="2" height="15" fill="rgb(245,11,27)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.17%)</title><rect x="24" y="676" width="2" height="15" fill="rgb(240,188,10)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="692" width="2" height="15" fill="rgb(240,176,9)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="708" width="2" height="15" fill="rgb(248,59,32)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="724" width="2" height="15" fill="rgb(219,23,53)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="24" y="740" width="2" height="15" fill="rgb(232,140,8)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="756" width="2" height="15" fill="rgb(232,208,15)"/><text x="27.00" y="766.50"></text></g><g><title>0x7f3e33aa840e (?) (1 samples, 0.17%)</title><rect x="24" y="772" width="2" height="15" fill="rgb(242,201,52)"/><text x="27.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="788" width="2" height="15" fill="rgb(254,126,47)"/><text x="27.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="804" width="2" height="15" fill="rgb(205,149,53)"/><text x="27.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="820" width="2" height="15" fill="rgb(224,114,39)"/><text x="27.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(249,45,6)"/><text x="27.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(245,215,32)"/><text x="27.00" y="862.50"></text></g><g><title>0x7f3e33861cd2 (?) (1 samples, 0.17%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(225,166,7)"/><text x="27.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(249,138,27)"/><text x="27.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(208,105,46)"/><text x="27.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(237,229,11)"/><text x="27.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(254,130,2)"/><text x="27.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(206,55,27)"/><text x="27.00" y="958.50"></text></g><g><title>0x7f3e32f570e5 (?) (1 samples, 0.17%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(233,217,9)"/><text x="27.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(240,205,19)"/><text x="27.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(224,223,40)"/><text x="27.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="1012" width="2" height="15" fill="rgb(234,79,9)"/><text x="27.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="24" y="1028" width="2" height="15" fill="rgb(226,171,45)"/><text x="27.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="1044" width="2" height="15" fill="rgb(245,20,33)"/><text x="27.00" y="1054.50"></text></g><g><title>0x7f3e32cdbe68 (?) (1 samples, 0.17%)</title><rect x="24" y="1060" width="2" height="15" fill="rgb(247,46,42)"/><text x="27.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="1076" width="2" height="15" fill="rgb(250,62,31)"/><text x="27.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="1092" width="2" height="15" fill="rgb(240,109,46)"/><text x="27.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="1108" width="2" height="15" fill="rgb(246,173,39)"/><text x="27.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(206,216,44)"/><text x="27.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(247,33,36)"/><text x="27.00" y="1150.50"></text></g><g><title>0x7f3e32a6c2fb (?) (1 samples, 0.17%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(241,118,11)"/><text x="27.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="1172" width="2" height="15" fill="rgb(254,94,15)"/><text x="27.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="1188" width="2" height="15" fill="rgb(240,202,53)"/><text x="27.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="1204" width="2" height="15" fill="rgb(221,132,24)"/><text x="27.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="24" y="1220" width="2" height="15" fill="rgb(237,215,45)"/><text x="27.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="1236" width="2" height="15" fill="rgb(227,70,52)"/><text x="27.00" y="1246.50"></text></g><g><title>0x7f3e32850153 (?) (1 samples, 0.17%)</title><rect x="24" y="1252" width="2" height="15" fill="rgb(246,183,27)"/><text x="27.00" y="1262.50"></text></g><g><title>0x7f3e3284ec13 (?) (1 samples, 0.17%)</title><rect x="24" y="1268" width="2" height="15" fill="rgb(223,64,1)"/><text x="27.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="1284" width="2" height="15" fill="rgb(240,66,30)"/><text x="27.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="1300" width="2" height="15" fill="rgb(253,124,25)"/><text x="27.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="1316" width="2" height="15" fill="rgb(253,109,0)"/><text x="27.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="24" y="1332" width="2" height="15" fill="rgb(240,75,7)"/><text x="27.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="24" y="1348" width="2" height="15" fill="rgb(228,169,24)"/><text x="27.00" y="1358.50"></text></g><g><title>0x7f3e325eb181 (?) (1 samples, 0.17%)</title><rect x="24" y="1364" width="2" height="15" fill="rgb(246,120,33)"/><text x="27.00" y="1374.50"></text></g><g><title>0x7f3e325ee1c9 (?) (1 samples, 0.17%)</title><rect x="24" y="1380" width="2" height="15" fill="rgb(236,196,9)"/><text x="27.00" y="1390.50"></text></g><g><title>0x7f3e3261a167 (?) (1 samples, 0.17%)</title><rect x="24" y="1396" width="2" height="15" fill="rgb(233,55,44)"/><text x="27.00" y="1406.50"></text></g><g><title>0x7f3e32615b64 (?) (1 samples, 0.17%)</title><rect x="24" y="1412" width="2" height="15" fill="rgb(232,98,29)"/><text x="27.00" y="1422.50"></text></g><g><title>0x7f3e325f907b (?) (1 samples, 0.17%)</title><rect x="24" y="1428" width="2" height="15" fill="rgb(207,66,12)"/><text x="27.00" y="1438.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.17%)</title><rect x="24" y="1444" width="2" height="15" fill="rgb(211,73,23)"/><text x="27.00" y="1454.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.17%)</title><rect x="24" y="1460" width="2" height="15" fill="rgb(244,197,16)"/><text x="27.00" y="1470.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.17%)</title><rect x="24" y="1476" width="2" height="15" fill="rgb(245,203,32)"/><text x="27.00" y="1486.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.17%)</title><rect x="24" y="1492" width="2" height="15" fill="rgb(210,224,49)"/><text x="27.00" y="1502.50"></text></g><g><title>get (_collections_abc.py) (1 samples, 0.17%)</title><rect x="24" y="1508" width="2" height="15" fill="rgb(220,88,9)"/><text x="27.00" y="1518.50"></text></g><g><title>__getitem__ (os.py) (1 samples, 0.17%)</title><rect x="24" y="1524" width="2" height="15" fill="rgb(207,188,44)"/><text x="27.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="26" y="1220" width="2" height="15" fill="rgb(244,85,45)"/><text x="29.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="26" y="1236" width="2" height="15" fill="rgb(206,178,23)"/><text x="29.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="26" y="1252" width="2" height="15" fill="rgb(208,196,44)"/><text x="29.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.35%)</title><rect x="26" y="580" width="4" height="15" fill="rgb(227,164,37)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="596" width="4" height="15" fill="rgb(245,58,36)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="612" width="4" height="15" fill="rgb(219,11,40)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="628" width="4" height="15" fill="rgb(247,178,26)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="26" y="644" width="4" height="15" fill="rgb(254,11,31)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="660" width="4" height="15" fill="rgb(213,221,43)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.35%)</title><rect x="26" y="676" width="4" height="15" fill="rgb(248,6,2)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="692" width="4" height="15" fill="rgb(224,57,31)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="708" width="4" height="15" fill="rgb(211,124,32)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="724" width="4" height="15" fill="rgb(223,90,26)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="26" y="740" width="4" height="15" fill="rgb(221,21,19)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="756" width="4" height="15" fill="rgb(205,217,0)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.35%)</title><rect x="26" y="772" width="4" height="15" fill="rgb(236,35,27)"/><text x="29.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="788" width="4" height="15" fill="rgb(229,223,29)"/><text x="29.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="804" width="4" height="15" fill="rgb(208,46,3)"/><text x="29.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="820" width="4" height="15" fill="rgb(242,134,6)"/><text x="29.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="26" y="836" width="4" height="15" fill="rgb(232,59,27)"/><text x="29.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="852" width="4" height="15" fill="rgb(222,180,53)"/><text x="29.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.35%)</title><rect x="26" y="868" width="4" height="15" fill="rgb(210,81,48)"/><text x="29.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="884" width="4" height="15" fill="rgb(248,68,49)"/><text x="29.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="900" width="4" height="15" fill="rgb(217,151,23)"/><text x="29.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="916" width="4" height="15" fill="rgb(211,26,27)"/><text x="29.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="26" y="932" width="4" height="15" fill="rgb(229,150,7)"/><text x="29.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="948" width="4" height="15" fill="rgb(208,33,48)"/><text x="29.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (2 samples, 0.35%)</title><rect x="26" y="964" width="4" height="15" fill="rgb(229,159,44)"/><text x="29.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="980" width="4" height="15" fill="rgb(232,134,54)"/><text x="29.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="996" width="4" height="15" fill="rgb(254,192,8)"/><text x="29.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="1012" width="4" height="15" fill="rgb(242,185,45)"/><text x="29.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="26" y="1028" width="4" height="15" fill="rgb(243,200,22)"/><text x="29.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="1044" width="4" height="15" fill="rgb(216,14,3)"/><text x="29.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/io/formats/format.py) (2 samples, 0.35%)</title><rect x="26" y="1060" width="4" height="15" fill="rgb(220,118,53)"/><text x="29.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="1076" width="4" height="15" fill="rgb(212,221,28)"/><text x="29.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="1092" width="4" height="15" fill="rgb(254,145,52)"/><text x="29.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="1108" width="4" height="15" fill="rgb(207,203,13)"/><text x="29.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="26" y="1124" width="4" height="15" fill="rgb(232,171,20)"/><text x="29.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="1140" width="4" height="15" fill="rgb(223,127,38)"/><text x="29.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/io/common.py) (2 samples, 0.35%)</title><rect x="26" y="1156" width="4" height="15" fill="rgb(250,19,41)"/><text x="29.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="1172" width="4" height="15" fill="rgb(229,41,44)"/><text x="29.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="1188" width="4" height="15" fill="rgb(229,50,14)"/><text x="29.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="26" y="1204" width="4" height="15" fill="rgb(240,59,48)"/><text x="29.00" y="1214.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1220" width="2" height="15" fill="rgb(244,41,9)"/><text x="31.00" y="1230.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="28" y="1236" width="2" height="15" fill="rgb(248,56,43)"/><text x="31.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/config_init.py) (1 samples, 0.17%)</title><rect x="30" y="580" width="2" height="15" fill="rgb(208,55,22)"/><text x="33.00" y="590.50"></text></g><g><title>inner (pandas/_config/config.py) (1 samples, 0.17%)</title><rect x="30" y="596" width="2" height="15" fill="rgb(245,171,54)"/><text x="33.00" y="606.50"></text></g><g><title>register_option (pandas/_config/config.py) (1 samples, 0.17%)</title><rect x="30" y="612" width="2" height="15" fill="rgb(220,223,33)"/><text x="33.00" y="622.50"></text></g><g><title>match (re.py) (1 samples, 0.17%)</title><rect x="30" y="628" width="2" height="15" fill="rgb(244,114,39)"/><text x="33.00" y="638.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.17%)</title><rect x="30" y="644" width="2" height="15" fill="rgb(215,131,7)"/><text x="33.00" y="654.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (12 samples, 2.08%)</title><rect x="10" y="292" width="24" height="15" fill="rgb(239,204,0)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.08%)</title><rect x="10" y="308" width="24" height="15" fill="rgb(226,91,26)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.08%)</title><rect x="10" y="324" width="24" height="15" fill="rgb(205,187,44)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="24" y="340" width="10" height="15" fill="rgb(233,190,52)"/><text x="27.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.87%)</title><rect x="24" y="356" width="10" height="15" fill="rgb(251,221,3)"/><text x="27.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="24" y="372" width="10" height="15" fill="rgb(233,113,28)"/><text x="27.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 0.87%)</title><rect x="24" y="388" width="10" height="15" fill="rgb(213,5,27)"/><text x="27.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="24" y="404" width="10" height="15" fill="rgb(224,31,3)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="24" y="420" width="10" height="15" fill="rgb(236,186,35)"/><text x="27.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="24" y="436" width="10" height="15" fill="rgb(216,133,40)"/><text x="27.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.87%)</title><rect x="24" y="452" width="10" height="15" fill="rgb(248,201,25)"/><text x="27.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="24" y="468" width="10" height="15" fill="rgb(247,49,30)"/><text x="27.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 0.87%)</title><rect x="24" y="484" width="10" height="15" fill="rgb(221,171,40)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="24" y="500" width="10" height="15" fill="rgb(230,12,0)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="24" y="516" width="10" height="15" fill="rgb(212,95,37)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="24" y="532" width="10" height="15" fill="rgb(242,10,23)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.87%)</title><rect x="24" y="548" width="10" height="15" fill="rgb(218,110,0)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="24" y="564" width="10" height="15" fill="rgb(220,126,11)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.17%)</title><rect x="32" y="580" width="2" height="15" fill="rgb(214,18,48)"/><text x="35.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="596" width="2" height="15" fill="rgb(222,142,5)"/><text x="35.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="612" width="2" height="15" fill="rgb(216,195,7)"/><text x="35.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="628" width="2" height="15" fill="rgb(248,34,32)"/><text x="35.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="32" y="644" width="2" height="15" fill="rgb(237,105,5)"/><text x="35.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="660" width="2" height="15" fill="rgb(252,161,34)"/><text x="35.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/io/json/__init__.py) (1 samples, 0.17%)</title><rect x="32" y="676" width="2" height="15" fill="rgb(205,168,3)"/><text x="35.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="692" width="2" height="15" fill="rgb(254,96,21)"/><text x="35.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="708" width="2" height="15" fill="rgb(249,149,25)"/><text x="35.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="724" width="2" height="15" fill="rgb(220,108,18)"/><text x="35.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="32" y="740" width="2" height="15" fill="rgb(210,201,7)"/><text x="35.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="756" width="2" height="15" fill="rgb(250,114,4)"/><text x="35.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/io/json/_json.py) (1 samples, 0.17%)</title><rect x="32" y="772" width="2" height="15" fill="rgb(221,175,25)"/><text x="35.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="788" width="2" height="15" fill="rgb(206,67,30)"/><text x="35.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="804" width="2" height="15" fill="rgb(215,118,28)"/><text x="35.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="820" width="2" height="15" fill="rgb(233,40,43)"/><text x="35.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="32" y="836" width="2" height="15" fill="rgb(210,220,10)"/><text x="35.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="32" y="852" width="2" height="15" fill="rgb(254,193,52)"/><text x="35.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/io/json/_normalize.py) (1 samples, 0.17%)</title><rect x="32" y="868" width="2" height="15" fill="rgb(210,205,37)"/><text x="35.00" y="878.50"></text></g><g><title>inner (typing.py) (1 samples, 0.17%)</title><rect x="32" y="884" width="2" height="15" fill="rgb(219,10,31)"/><text x="35.00" y="894.50"></text></g><g><title>__hash__ (typing.py) (1 samples, 0.17%)</title><rect x="32" y="900" width="2" height="15" fill="rgb(220,180,5)"/><text x="35.00" y="910.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="34" y="836" width="2" height="15" fill="rgb(239,208,49)"/><text x="37.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="34" y="852" width="2" height="15" fill="rgb(221,97,46)"/><text x="37.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="34" y="868" width="2" height="15" fill="rgb(227,151,33)"/><text x="37.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="34" y="884" width="2" height="15" fill="rgb(224,41,14)"/><text x="37.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="34" y="900" width="2" height="15" fill="rgb(225,45,20)"/><text x="37.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="34" y="916" width="2" height="15" fill="rgb(233,221,23)"/><text x="37.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="34" y="932" width="2" height="15" fill="rgb(235,152,1)"/><text x="37.00" y="942.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.17%)</title><rect x="34" y="948" width="2" height="15" fill="rgb(214,138,27)"/><text x="37.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.17%)</title><rect x="34" y="964" width="2" height="15" fill="rgb(229,138,26)"/><text x="37.00" y="974.50"></text></g><g><title>&lt;module&gt; (email/parser.py) (1 samples, 0.17%)</title><rect x="36" y="916" width="2" height="15" fill="rgb(251,186,5)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="932" width="2" height="15" fill="rgb(228,185,4)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="948" width="2" height="15" fill="rgb(242,156,29)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="964" width="2" height="15" fill="rgb(209,63,21)"/><text x="39.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="36" y="980" width="2" height="15" fill="rgb(246,123,51)"/><text x="39.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="996" width="2" height="15" fill="rgb(210,140,38)"/><text x="39.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py) (1 samples, 0.17%)</title><rect x="36" y="1012" width="2" height="15" fill="rgb(239,178,15)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="1028" width="2" height="15" fill="rgb(209,210,24)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="1044" width="2" height="15" fill="rgb(214,8,41)"/><text x="39.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="1060" width="2" height="15" fill="rgb(219,131,16)"/><text x="39.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="36" y="1076" width="2" height="15" fill="rgb(206,87,39)"/><text x="39.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="1092" width="2" height="15" fill="rgb(244,24,50)"/><text x="39.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py) (1 samples, 0.17%)</title><rect x="36" y="1108" width="2" height="15" fill="rgb(234,128,19)"/><text x="39.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="1124" width="2" height="15" fill="rgb(208,101,4)"/><text x="39.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="1140" width="2" height="15" fill="rgb(211,39,47)"/><text x="39.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="1156" width="2" height="15" fill="rgb(238,93,2)"/><text x="39.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="36" y="1172" width="2" height="15" fill="rgb(243,133,32)"/><text x="39.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="1188" width="2" height="15" fill="rgb(250,50,53)"/><text x="39.00" y="1198.50"></text></g><g><title>&lt;module&gt; (email/utils.py) (1 samples, 0.17%)</title><rect x="36" y="1204" width="2" height="15" fill="rgb(212,83,39)"/><text x="39.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="1220" width="2" height="15" fill="rgb(217,168,2)"/><text x="39.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="1236" width="2" height="15" fill="rgb(224,172,32)"/><text x="39.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="1252" width="2" height="15" fill="rgb(232,215,29)"/><text x="39.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="36" y="1268" width="2" height="15" fill="rgb(246,26,9)"/><text x="39.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="36" y="1284" width="2" height="15" fill="rgb(231,167,46)"/><text x="39.00" y="1294.50"></text></g><g><title>&lt;module&gt; (socket.py) (1 samples, 0.17%)</title><rect x="36" y="1300" width="2" height="15" fill="rgb(215,58,28)"/><text x="39.00" y="1310.50"></text></g><g><title>_convert (enum.py) (1 samples, 0.17%)</title><rect x="36" y="1316" width="2" height="15" fill="rgb(240,67,9)"/><text x="39.00" y="1326.50"></text></g><g><title>__call__ (enum.py) (1 samples, 0.17%)</title><rect x="36" y="1332" width="2" height="15" fill="rgb(254,185,47)"/><text x="39.00" y="1342.50"></text></g><g><title>_create_ (enum.py) (1 samples, 0.17%)</title><rect x="36" y="1348" width="2" height="15" fill="rgb(239,150,0)"/><text x="39.00" y="1358.50"></text></g><g><title>__setitem__ (enum.py) (1 samples, 0.17%)</title><rect x="36" y="1364" width="2" height="15" fill="rgb(246,25,49)"/><text x="39.00" y="1374.50"></text></g><g><title>0x7f3e47283124 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="36" y="1380" width="2" height="15" fill="rgb(236,12,33)"/><text x="39.00" y="1390.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.17%)</title><rect x="38" y="932" width="2" height="15" fill="rgb(209,143,36)"/><text x="41.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.17%)</title><rect x="38" y="948" width="2" height="15" fill="rgb(253,40,48)"/><text x="41.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.17%)</title><rect x="38" y="964" width="2" height="15" fill="rgb(216,154,2)"/><text x="41.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="38" y="980" width="2" height="15" fill="rgb(243,64,1)"/><text x="41.00" y="990.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.17%)</title><rect x="38" y="996" width="2" height="15" fill="rgb(221,36,20)"/><text x="41.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="38" y="1012" width="2" height="15" fill="rgb(236,105,25)"/><text x="41.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="38" y="1028" width="2" height="15" fill="rgb(253,173,8)"/><text x="41.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="38" y="1044" width="2" height="15" fill="rgb(226,6,5)"/><text x="41.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="38" y="1060" width="2" height="15" fill="rgb(217,55,0)"/><text x="41.00" y="1070.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="38" y="1076" width="2" height="15" fill="rgb(225,133,47)"/><text x="41.00" y="1086.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.17%)</title><rect x="38" y="1092" width="2" height="15" fill="rgb(245,181,22)"/><text x="41.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.69%)</title><rect x="34" y="356" width="8" height="15" fill="rgb(225,64,8)"/><text x="37.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="372" width="8" height="15" fill="rgb(214,166,45)"/><text x="37.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.69%)</title><rect x="34" y="388" width="8" height="15" fill="rgb(248,226,44)"/><text x="37.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="404" width="8" height="15" fill="rgb(249,141,3)"/><text x="37.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="420" width="8" height="15" fill="rgb(246,12,54)"/><text x="37.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="436" width="8" height="15" fill="rgb(249,86,20)"/><text x="37.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.69%)</title><rect x="34" y="452" width="8" height="15" fill="rgb(237,55,4)"/><text x="37.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="468" width="8" height="15" fill="rgb(220,205,26)"/><text x="37.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 0.69%)</title><rect x="34" y="484" width="8" height="15" fill="rgb(249,31,13)"/><text x="37.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="500" width="8" height="15" fill="rgb(210,218,5)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="516" width="8" height="15" fill="rgb(252,43,18)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="532" width="8" height="15" fill="rgb(233,197,21)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.69%)</title><rect x="34" y="548" width="8" height="15" fill="rgb(232,36,3)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="564" width="8" height="15" fill="rgb(207,196,50)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 0.69%)</title><rect x="34" y="580" width="8" height="15" fill="rgb(254,59,54)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="596" width="8" height="15" fill="rgb(220,156,29)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="612" width="8" height="15" fill="rgb(232,163,9)"/><text x="37.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="628" width="8" height="15" fill="rgb(205,47,39)"/><text x="37.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="644" width="8" height="15" fill="rgb(212,119,14)"/><text x="37.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="660" width="8" height="15" fill="rgb(240,97,12)"/><text x="37.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="676" width="8" height="15" fill="rgb(237,165,0)"/><text x="37.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.69%)</title><rect x="34" y="692" width="8" height="15" fill="rgb(226,175,24)"/><text x="37.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="708" width="8" height="15" fill="rgb(242,118,43)"/><text x="37.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.69%)</title><rect x="34" y="724" width="8" height="15" fill="rgb(211,129,39)"/><text x="37.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="740" width="8" height="15" fill="rgb(206,177,6)"/><text x="37.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="756" width="8" height="15" fill="rgb(235,183,41)"/><text x="37.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="772" width="8" height="15" fill="rgb(205,215,29)"/><text x="37.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.69%)</title><rect x="34" y="788" width="8" height="15" fill="rgb(209,139,45)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="34" y="804" width="8" height="15" fill="rgb(219,102,15)"/><text x="37.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.69%)</title><rect x="34" y="820" width="8" height="15" fill="rgb(231,62,25)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.52%)</title><rect x="36" y="836" width="6" height="15" fill="rgb(248,216,47)"/><text x="39.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.52%)</title><rect x="36" y="852" width="6" height="15" fill="rgb(241,76,12)"/><text x="39.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.52%)</title><rect x="36" y="868" width="6" height="15" fill="rgb(228,199,32)"/><text x="39.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.52%)</title><rect x="36" y="884" width="6" height="15" fill="rgb(252,176,42)"/><text x="39.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.52%)</title><rect x="36" y="900" width="6" height="15" fill="rgb(235,9,53)"/><text x="39.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (2 samples, 0.35%)</title><rect x="38" y="916" width="4" height="15" fill="rgb(238,196,24)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="932" width="2" height="15" fill="rgb(242,212,19)"/><text x="43.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="948" width="2" height="15" fill="rgb(248,130,53)"/><text x="43.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="964" width="2" height="15" fill="rgb(237,190,16)"/><text x="43.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="980" width="2" height="15" fill="rgb(238,28,18)"/><text x="43.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.17%)</title><rect x="40" y="996" width="2" height="15" fill="rgb(238,31,8)"/><text x="43.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1012" width="2" height="15" fill="rgb(240,31,22)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1028" width="2" height="15" fill="rgb(214,190,16)"/><text x="43.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1044" width="2" height="15" fill="rgb(208,126,2)"/><text x="43.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="40" y="1060" width="2" height="15" fill="rgb(236,115,39)"/><text x="43.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="40" y="1076" width="2" height="15" fill="rgb(247,222,40)"/><text x="43.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.17%)</title><rect x="40" y="1092" width="2" height="15" fill="rgb(235,194,17)"/><text x="43.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.17%)</title><rect x="40" y="1108" width="2" height="15" fill="rgb(250,205,20)"/><text x="43.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.17%)</title><rect x="40" y="1124" width="2" height="15" fill="rgb(246,55,26)"/><text x="43.00" y="1134.50"></text></g><g><title>compile (re.py) (1 samples, 0.17%)</title><rect x="40" y="1140" width="2" height="15" fill="rgb(206,94,5)"/><text x="43.00" y="1150.50"></text></g><g><title>_compile (re.py) (1 samples, 0.17%)</title><rect x="40" y="1156" width="2" height="15" fill="rgb(245,110,44)"/><text x="43.00" y="1166.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="40" y="1172" width="2" height="15" fill="rgb(237,187,33)"/><text x="43.00" y="1182.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.17%)</title><rect x="40" y="1188" width="2" height="15" fill="rgb(206,67,6)"/><text x="43.00" y="1198.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="40" y="1204" width="2" height="15" fill="rgb(235,97,50)"/><text x="43.00" y="1214.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="40" y="1220" width="2" height="15" fill="rgb(218,142,9)"/><text x="43.00" y="1230.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="40" y="1236" width="2" height="15" fill="rgb(250,50,32)"/><text x="43.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.95%)</title><rect x="10" y="68" width="34" height="15" fill="rgb(245,130,20)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.95%)</title><rect x="10" y="84" width="34" height="15" fill="rgb(225,132,30)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.95%)</title><rect x="10" y="100" width="34" height="15" fill="rgb(248,144,45)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 2.95%)</title><rect x="10" y="116" width="34" height="15" fill="rgb(211,208,13)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.95%)</title><rect x="10" y="132" width="34" height="15" fill="rgb(205,45,1)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py) (17 samples, 2.95%)</title><rect x="10" y="148" width="34" height="15" fill="rgb(212,82,16)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.95%)</title><rect x="10" y="164" width="34" height="15" fill="rgb(222,46,31)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.95%)</title><rect x="10" y="180" width="34" height="15" fill="rgb(233,5,51)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.95%)</title><rect x="10" y="196" width="34" height="15" fill="rgb(237,0,36)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.95%)</title><rect x="10" y="212" width="34" height="15" fill="rgb(248,14,39)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.95%)</title><rect x="10" y="228" width="34" height="15" fill="rgb(209,73,36)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.95%)</title><rect x="10" y="244" width="34" height="15" fill="rgb(207,223,19)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 2.95%)</title><rect x="10" y="260" width="34" height="15" fill="rgb(205,72,12)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.95%)</title><rect x="10" y="276" width="34" height="15" fill="rgb(231,155,30)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 0.87%)</title><rect x="34" y="292" width="10" height="15" fill="rgb(209,90,25)"/><text x="37.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="34" y="308" width="10" height="15" fill="rgb(241,161,1)"/><text x="37.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="34" y="324" width="10" height="15" fill="rgb(250,208,39)"/><text x="37.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.87%)</title><rect x="34" y="340" width="10" height="15" fill="rgb(248,151,52)"/><text x="37.00" y="350.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="42" y="356" width="2" height="15" fill="rgb(249,56,8)"/><text x="45.00" y="366.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="42" y="372" width="2" height="15" fill="rgb(225,211,5)"/><text x="45.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="42" y="388" width="2" height="15" fill="rgb(239,191,43)"/><text x="45.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.17%)</title><rect x="42" y="404" width="2" height="15" fill="rgb(241,219,6)"/><text x="45.00" y="414.50"></text></g><g><title>0x7f3e474ea995 (libdl-2.29.so) (1 samples, 0.17%)</title><rect x="42" y="420" width="2" height="15" fill="rgb(219,140,30)"/><text x="45.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.17%)</title><rect x="42" y="436" width="2" height="15" fill="rgb(250,12,2)"/><text x="45.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.17%)</title><rect x="42" y="452" width="2" height="15" fill="rgb(209,5,48)"/><text x="45.00" y="462.50"></text></g><g><title>0x7f3e474ea258 (libdl-2.29.so) (1 samples, 0.17%)</title><rect x="42" y="468" width="2" height="15" fill="rgb(224,115,32)"/><text x="45.00" y="478.50"></text></g><g><title>0x7f3e47537d7a (ld-2.29.so) (1 samples, 0.17%)</title><rect x="42" y="484" width="2" height="15" fill="rgb(214,149,54)"/><text x="45.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.17%)</title><rect x="42" y="500" width="2" height="15" fill="rgb(238,47,5)"/><text x="45.00" y="510.50"></text></g><g><title>0x7f3e47538345 (ld-2.29.so) (1 samples, 0.17%)</title><rect x="42" y="516" width="2" height="15" fill="rgb(217,92,37)"/><text x="45.00" y="526.50"></text></g><g><title>0x7f3e47530fec (ld-2.29.so) (1 samples, 0.17%)</title><rect x="42" y="532" width="2" height="15" fill="rgb(211,24,32)"/><text x="45.00" y="542.50"></text></g><g><title>0x7f3e4752f56b (ld-2.29.so) (1 samples, 0.17%)</title><rect x="42" y="548" width="2" height="15" fill="rgb(208,109,20)"/><text x="45.00" y="558.50"></text></g><g><title>0x7f3e4752ebed (ld-2.29.so) (1 samples, 0.17%)</title><rect x="42" y="564" width="2" height="15" fill="rgb(212,222,10)"/><text x="45.00" y="574.50"></text></g><g><title>0x7f3e47283120 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="57" y="180" width="2" height="15" fill="rgb(220,122,9)"/><text x="60.00" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.17%)</title><rect x="59" y="180" width="2" height="15" fill="rgb(223,185,23)"/><text x="62.00" y="190.50"></text></g><g><title>0x7f3e07b0bff9 (?) (1 samples, 0.17%)</title><rect x="67" y="212" width="2" height="15" fill="rgb(235,175,19)"/><text x="70.00" y="222.50"></text></g><g><title>0x7f3e07b06ef6 (?) (1 samples, 0.17%)</title><rect x="67" y="228" width="2" height="15" fill="rgb(230,166,53)"/><text x="70.00" y="238.50"></text></g><g><title>0x7f3e07afb962 (?) (1 samples, 0.17%)</title><rect x="67" y="244" width="2" height="15" fill="rgb(239,92,52)"/><text x="70.00" y="254.50"></text></g><g><title>0x7f3e07b2f7a7 (?) (1 samples, 0.17%)</title><rect x="67" y="260" width="2" height="15" fill="rgb(228,217,18)"/><text x="70.00" y="270.50"></text></g><g><title>0x7f3e07b2f379 (?) (1 samples, 0.17%)</title><rect x="67" y="276" width="2" height="15" fill="rgb(210,100,51)"/><text x="70.00" y="286.50"></text></g><g><title>0x7f3e07f8d8b8 (?) (1 samples, 0.17%)</title><rect x="67" y="292" width="2" height="15" fill="rgb(251,88,45)"/><text x="70.00" y="302.50"></text></g><g><title>0x7f3e07f8bc7f (?) (1 samples, 0.17%)</title><rect x="67" y="308" width="2" height="15" fill="rgb(241,28,39)"/><text x="70.00" y="318.50"></text></g><g><title>0x7f3e07f9e99c (?) (1 samples, 0.17%)</title><rect x="67" y="324" width="2" height="15" fill="rgb(252,1,43)"/><text x="70.00" y="334.50"></text></g><g><title>0x7f3e07c83aef (?) (1 samples, 0.17%)</title><rect x="67" y="340" width="2" height="15" fill="rgb(241,105,16)"/><text x="70.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.17%)</title><rect x="69" y="212" width="2" height="15" fill="rgb(239,134,36)"/><text x="72.00" y="222.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="75" y="260" width="2" height="15" fill="rgb(249,176,7)"/><text x="78.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.17%)</title><rect x="77" y="276" width="2" height="15" fill="rgb(250,30,41)"/><text x="80.00" y="286.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="79" y="340" width="2" height="15" fill="rgb(241,27,27)"/><text x="82.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="81" y="340" width="2" height="15" fill="rgb(235,40,9)"/><text x="84.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="81" y="356" width="2" height="15" fill="rgb(213,148,9)"/><text x="84.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="81" y="372" width="2" height="15" fill="rgb(252,30,16)"/><text x="84.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="81" y="388" width="2" height="15" fill="rgb(226,89,28)"/><text x="84.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="81" y="404" width="2" height="15" fill="rgb(213,148,41)"/><text x="84.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="81" y="420" width="2" height="15" fill="rgb(229,101,10)"/><text x="84.00" y="430.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="81" y="436" width="2" height="15" fill="rgb(210,2,14)"/><text x="84.00" y="446.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="329" y="356" width="2" height="15" fill="rgb(237,175,36)"/><text x="332.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="329" y="372" width="2" height="15" fill="rgb(239,227,11)"/><text x="332.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="329" y="388" width="2" height="15" fill="rgb(233,40,32)"/><text x="332.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="329" y="404" width="2" height="15" fill="rgb(227,185,8)"/><text x="332.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="329" y="420" width="2" height="15" fill="rgb(226,37,53)"/><text x="332.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="329" y="436" width="2" height="15" fill="rgb(240,159,28)"/><text x="332.00" y="446.50"></text></g><g><title>0x7f3e47282d97 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="370" y="372" width="2" height="15" fill="rgb(232,62,26)"/><text x="373.00" y="382.50"></text></g><g><title>0x7f3e47282db3 (libc-2.29.so) (2 samples, 0.35%)</title><rect x="372" y="372" width="4" height="15" fill="rgb(242,29,27)"/><text x="375.00" y="382.50"></text></g><g><title>0x7f3e47282dbb (libc-2.29.so) (1 samples, 0.17%)</title><rect x="376" y="372" width="2" height="15" fill="rgb(206,77,5)"/><text x="379.00" y="382.50"></text></g><g><title>0x7f3e473e1e0e (libm-2.29.so) (1 samples, 0.17%)</title><rect x="378" y="372" width="2" height="15" fill="rgb(244,155,50)"/><text x="381.00" y="382.50"></text></g><g><title>0x7f3e473e1e14 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="380" y="372" width="2" height="15" fill="rgb(253,64,30)"/><text x="383.00" y="382.50"></text></g><g><title>0x7f3e473e1e17 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="382" y="372" width="2" height="15" fill="rgb(248,150,20)"/><text x="385.00" y="382.50"></text></g><g><title>0x7f3e473e1e2f (libm-2.29.so) (1 samples, 0.17%)</title><rect x="384" y="372" width="2" height="15" fill="rgb(249,153,26)"/><text x="387.00" y="382.50"></text></g><g><title>0x7f3e473e1e5f (libm-2.29.so) (2 samples, 0.35%)</title><rect x="386" y="372" width="5" height="15" fill="rgb(254,179,28)"/><text x="389.00" y="382.50"></text></g><g><title>0x7f3e473e1e71 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="391" y="372" width="2" height="15" fill="rgb(217,124,19)"/><text x="394.00" y="382.50"></text></g><g><title>0x7f3e473e1e86 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="393" y="372" width="2" height="15" fill="rgb(245,196,53)"/><text x="396.00" y="382.50"></text></g><g><title>0x7f3e473e1e92 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="395" y="372" width="2" height="15" fill="rgb(219,20,40)"/><text x="398.00" y="382.50"></text></g><g><title>0x7f3e473e1e96 (libm-2.29.so) (2 samples, 0.35%)</title><rect x="397" y="372" width="4" height="15" fill="rgb(206,111,48)"/><text x="400.00" y="382.50"></text></g><g><title>0x7f3e473e1e9e (libm-2.29.so) (1 samples, 0.17%)</title><rect x="401" y="372" width="2" height="15" fill="rgb(232,29,52)"/><text x="404.00" y="382.50"></text></g><g><title>0x7f3e473e1ea2 (libm-2.29.so) (3 samples, 0.52%)</title><rect x="403" y="372" width="6" height="15" fill="rgb(247,192,15)"/><text x="406.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 27.78%)</title><rect x="83" y="340" width="328" height="15" fill="rgb(212,2,35)"/><text x="86.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;::Co..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 6.77%)</title><rect x="331" y="356" width="80" height="15" fill="rgb(251,5,38)"/><text x="334.00" y="366.50">onnxrunti..</text></g><g><title>0x7f3e473e1ea6 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="409" y="372" width="2" height="15" fill="rgb(226,30,0)"/><text x="412.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (183 samples, 31.77%)</title><rect x="77" y="260" width="375" height="15" fill="rgb(220,105,52)"/><text x="80.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (182 samples, 31.60%)</title><rect x="79" y="276" width="373" height="15" fill="rgb(216,101,6)"/><text x="82.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (182 samples, 31.60%)</title><rect x="79" y="292" width="373" height="15" fill="rgb(214,13,40)"/><text x="82.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (182 samples, 31.60%)</title><rect x="79" y="308" width="373" height="15" fill="rgb(242,155,9)"/><text x="82.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (182 samples, 31.60%)</title><rect x="79" y="324" width="373" height="15" fill="rgb(216,33,38)"/><text x="82.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrunt..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.47%)</title><rect x="411" y="340" width="41" height="15" fill="rgb(223,132,3)"/><text x="414.00" y="350.50">onn..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.47%)</title><rect x="411" y="356" width="41" height="15" fill="rgb(246,49,48)"/><text x="414.00" y="366.50">onn..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (200 samples, 34.72%)</title><rect x="44" y="68" width="410" height="15" fill="rgb(248,172,53)"/><text x="47.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_so..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (200 samples, 34.72%)</title><rect x="44" y="84" width="410" height="15" fill="rgb(234,9,43)"/><text x="47.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (200 samples, 34.72%)</title><rect x="44" y="100" width="410" height="15" fill="rgb(236,54,27)"/><text x="47.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solver..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (200 samples, 34.72%)</title><rect x="44" y="116" width="410" height="15" fill="rgb(252,206,40)"/><text x="47.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (200 samples, 34.72%)</title><rect x="44" y="132" width="410" height="15" fill="rgb(241,162,11)"/><text x="47.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (199 samples, 34.55%)</title><rect x="46" y="148" width="408" height="15" fill="rgb(211,17,17)"/><text x="49.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (197 samples, 34.20%)</title><rect x="50" y="164" width="404" height="15" fill="rgb(207,203,3)"/><text x="53.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (192 samples, 33.33%)</title><rect x="61" y="180" width="393" height="15" fill="rgb(228,171,5)"/><text x="64.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (191 samples, 33.16%)</title><rect x="63" y="196" width="391" height="15" fill="rgb(234,0,28)"/><text x="66.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (187 samples, 32.47%)</title><rect x="71" y="212" width="383" height="15" fill="rgb(208,185,18)"/><text x="74.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (187 samples, 32.47%)</title><rect x="71" y="228" width="383" height="15" fill="rgb(205,152,15)"/><text x="74.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime:..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (185 samples, 32.12%)</title><rect x="75" y="244" width="379" height="15" fill="rgb(251,197,41)"/><text x="78.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::mod..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="452" y="260" width="2" height="15" fill="rgb(248,185,45)"/><text x="455.00" y="270.50"></text></g><g><title>0x7f3e47282d94 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="452" y="276" width="2" height="15" fill="rgb(218,117,9)"/><text x="455.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.17%)</title><rect x="470" y="196" width="2" height="15" fill="rgb(230,35,27)"/><text x="473.00" y="206.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.17%)</title><rect x="485" y="324" width="2" height="15" fill="rgb(229,110,26)"/><text x="488.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (1 samples, 0.17%)</title><rect x="485" y="340" width="2" height="15" fill="rgb(248,192,47)"/><text x="488.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (3 samples, 0.52%)</title><rect x="483" y="244" width="6" height="15" fill="rgb(228,133,33)"/><text x="486.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.52%)</title><rect x="483" y="260" width="6" height="15" fill="rgb(229,185,5)"/><text x="486.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (3 samples, 0.52%)</title><rect x="483" y="276" width="6" height="15" fill="rgb(248,196,6)"/><text x="486.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.35%)</title><rect x="485" y="292" width="4" height="15" fill="rgb(212,120,20)"/><text x="488.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.35%)</title><rect x="485" y="308" width="4" height="15" fill="rgb(224,198,46)"/><text x="488.00" y="318.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.17%)</title><rect x="487" y="324" width="2" height="15" fill="rgb(244,208,43)"/><text x="490.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.17%)</title><rect x="493" y="324" width="2" height="15" fill="rgb(215,191,49)"/><text x="496.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.17%)</title><rect x="493" y="340" width="2" height="15" fill="rgb(209,193,12)"/><text x="496.00" y="350.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.17%)</title><rect x="493" y="356" width="2" height="15" fill="rgb(249,44,40)"/><text x="496.00" y="366.50"></text></g><g><title>0x7f3e47283103 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="497" y="340" width="2" height="15" fill="rgb(238,65,35)"/><text x="500.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="499" y="340" width="2" height="15" fill="rgb(241,44,25)"/><text x="502.00" y="350.50"></text></g><g><title>sgemm_incopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="503" y="388" width="2" height="15" fill="rgb(212,177,16)"/><text x="506.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (23 samples, 3.99%)</title><rect x="491" y="276" width="47" height="15" fill="rgb(206,165,20)"/><text x="494.00" y="286.50">arra..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (23 samples, 3.99%)</title><rect x="491" y="292" width="47" height="15" fill="rgb(253,71,44)"/><text x="494.00" y="302.50">arra..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (22 samples, 3.82%)</title><rect x="493" y="308" width="45" height="15" fill="rgb(219,115,19)"/><text x="496.00" y="318.50">PyAr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (21 samples, 3.65%)</title><rect x="495" y="324" width="43" height="15" fill="rgb(205,185,2)"/><text x="498.00" y="334.50">cbla..</text></g><g><title>gemm (cblasfuncs.c) (18 samples, 3.12%)</title><rect x="501" y="340" width="37" height="15" fill="rgb(233,41,24)"/><text x="504.00" y="350.50">gem..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 3.12%)</title><rect x="501" y="356" width="37" height="15" fill="rgb(252,161,5)"/><text x="504.00" y="366.50">cbl..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 3.12%)</title><rect x="501" y="372" width="37" height="15" fill="rgb(239,35,49)"/><text x="504.00" y="382.50">sge..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.78%)</title><rect x="505" y="388" width="33" height="15" fill="rgb(231,188,47)"/><text x="508.00" y="398.50">sg..</text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.35%)</title><rect x="538" y="276" width="4" height="15" fill="rgb(233,156,16)"/><text x="541.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (79 samples, 13.72%)</title><rect x="489" y="244" width="162" height="15" fill="rgb(224,218,43)"/><text x="492.00" y="254.50">numpy_dot_inplace (m..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (78 samples, 13.54%)</title><rect x="491" y="260" width="160" height="15" fill="rgb(241,202,35)"/><text x="494.00" y="270.50">dot (&lt;__array_functi..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (53 samples, 9.20%)</title><rect x="542" y="276" width="109" height="15" fill="rgb(244,175,5)"/><text x="545.00" y="286.50">sgemm_kernel_..</text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="651" y="276" width="2" height="15" fill="rgb(240,220,16)"/><text x="654.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.17%)</title><rect x="651" y="292" width="2" height="15" fill="rgb(221,217,24)"/><text x="654.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.17%)</title><rect x="651" y="308" width="2" height="15" fill="rgb(225,151,38)"/><text x="654.00" y="318.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.17%)</title><rect x="651" y="324" width="2" height="15" fill="rgb(252,185,15)"/><text x="654.00" y="334.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.17%)</title><rect x="653" y="276" width="2" height="15" fill="rgb(222,216,23)"/><text x="656.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.17%)</title><rect x="655" y="292" width="2" height="15" fill="rgb(224,122,18)"/><text x="658.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.17%)</title><rect x="655" y="308" width="2" height="15" fill="rgb(220,161,25)"/><text x="658.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.17%)</title><rect x="655" y="324" width="2" height="15" fill="rgb(214,187,46)"/><text x="658.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.17%)</title><rect x="655" y="340" width="2" height="15" fill="rgb(208,136,53)"/><text x="658.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.17%)</title><rect x="655" y="356" width="2" height="15" fill="rgb(235,184,31)"/><text x="658.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.17%)</title><rect x="655" y="372" width="2" height="15" fill="rgb(215,151,7)"/><text x="658.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="657" y="292" width="2" height="15" fill="rgb(243,63,2)"/><text x="660.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.17%)</title><rect x="659" y="308" width="2" height="15" fill="rgb(246,60,49)"/><text x="662.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="659" y="324" width="2" height="15" fill="rgb(210,34,11)"/><text x="662.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="659" y="340" width="2" height="15" fill="rgb(229,126,16)"/><text x="662.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (1 samples, 0.17%)</title><rect x="659" y="356" width="2" height="15" fill="rgb(218,220,31)"/><text x="662.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.17%)</title><rect x="661" y="308" width="2" height="15" fill="rgb(242,32,44)"/><text x="664.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.17%)</title><rect x="661" y="324" width="2" height="15" fill="rgb(228,152,24)"/><text x="664.00" y="334.50"></text></g><g><title>0x7f3e47282d97 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="673" y="356" width="2" height="15" fill="rgb(218,124,34)"/><text x="676.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 1.56%)</title><rect x="659" y="292" width="18" height="15" fill="rgb(244,133,22)"/><text x="662.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 1.22%)</title><rect x="663" y="308" width="14" height="15" fill="rgb(254,151,6)"/><text x="666.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 1.22%)</title><rect x="663" y="324" width="14" height="15" fill="rgb(214,117,38)"/><text x="666.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 1.22%)</title><rect x="663" y="340" width="14" height="15" fill="rgb(254,169,3)"/><text x="666.00" y="350.50"></text></g><g><title>0x7f3e47282dbb (libc-2.29.so) (1 samples, 0.17%)</title><rect x="675" y="356" width="2" height="15" fill="rgb(222,74,39)"/><text x="678.00" y="366.50"></text></g><g><title>0x7f3e29689204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="677" y="324" width="2" height="15" fill="rgb(212,208,30)"/><text x="680.00" y="334.50"></text></g><g><title>0x7f3e29647890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="679" y="340" width="2" height="15" fill="rgb(234,195,33)"/><text x="682.00" y="350.50"></text></g><g><title>0x7f3e473ae1a0 (libm-2.29.so) (3 samples, 0.52%)</title><rect x="692" y="356" width="6" height="15" fill="rgb(210,200,42)"/><text x="695.00" y="366.50"></text></g><g><title>0x7f3e473e1e0e (libm-2.29.so) (1 samples, 0.17%)</title><rect x="698" y="356" width="2" height="15" fill="rgb(254,140,47)"/><text x="701.00" y="366.50"></text></g><g><title>0x7f3e473e1e4e (libm-2.29.so) (1 samples, 0.17%)</title><rect x="700" y="356" width="2" height="15" fill="rgb(211,156,9)"/><text x="703.00" y="366.50"></text></g><g><title>0x7f3e473e1e62 (libm-2.29.so) (3 samples, 0.52%)</title><rect x="702" y="356" width="6" height="15" fill="rgb(222,76,48)"/><text x="705.00" y="366.50"></text></g><g><title>0x7f3e473e1ea2 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="708" y="356" width="2" height="15" fill="rgb(213,186,47)"/><text x="711.00" y="366.50"></text></g><g><title>0x7f3e29689214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (17 samples, 2.95%)</title><rect x="679" y="324" width="35" height="15" fill="rgb(227,72,19)"/><text x="682.00" y="334.50">0x..</text></g><g><title>expf (libm-2.29.so) (16 samples, 2.78%)</title><rect x="681" y="340" width="33" height="15" fill="rgb(226,76,7)"/><text x="684.00" y="350.50">ex..</text></g><g><title>0x7f3e473e1ea6 (libm-2.29.so) (2 samples, 0.35%)</title><rect x="710" y="356" width="4" height="15" fill="rgb(237,152,10)"/><text x="713.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (121 samples, 21.01%)</title><rect x="481" y="228" width="248" height="15" fill="rgb(235,137,41)"/><text x="484.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (38 samples, 6.60%)</title><rect x="651" y="244" width="78" height="15" fill="rgb(208,103,7)"/><text x="654.00" y="254.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (38 samples, 6.60%)</title><rect x="651" y="260" width="78" height="15" fill="rgb(215,189,14)"/><text x="654.00" y="270.50">PyUFunc_G..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (36 samples, 6.25%)</title><rect x="655" y="276" width="74" height="15" fill="rgb(241,214,30)"/><text x="658.00" y="286.50">execute_..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (25 samples, 4.34%)</title><rect x="677" y="292" width="52" height="15" fill="rgb(232,42,9)"/><text x="680.00" y="302.50">trivi..</text></g><g><title>0x7f3e2966733d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (25 samples, 4.34%)</title><rect x="677" y="308" width="52" height="15" fill="rgb(207,126,53)"/><text x="680.00" y="318.50">0x7f3..</text></g><g><title>0x7f3e29689228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.22%)</title><rect x="714" y="324" width="15" height="15" fill="rgb(207,88,44)"/><text x="717.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.17%)</title><rect x="731" y="260" width="2" height="15" fill="rgb(242,128,10)"/><text x="734.00" y="270.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.17%)</title><rect x="733" y="260" width="2" height="15" fill="rgb(227,104,39)"/><text x="736.00" y="270.50"></text></g><g><title>0x7f3e46484140 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="733" y="276" width="2" height="15" fill="rgb(243,75,47)"/><text x="736.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.17%)</title><rect x="735" y="340" width="2" height="15" fill="rgb(228,50,23)"/><text x="738.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.17%)</title><rect x="737" y="372" width="2" height="15" fill="rgb(220,56,36)"/><text x="740.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.17%)</title><rect x="737" y="388" width="2" height="15" fill="rgb(211,225,13)"/><text x="740.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.35%)</title><rect x="739" y="372" width="4" height="15" fill="rgb(241,129,44)"/><text x="742.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.35%)</title><rect x="739" y="388" width="4" height="15" fill="rgb(213,25,9)"/><text x="742.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.17%)</title><rect x="741" y="404" width="2" height="15" fill="rgb(232,165,34)"/><text x="744.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="741" y="420" width="2" height="15" fill="rgb(210,199,16)"/><text x="744.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="741" y="436" width="2" height="15" fill="rgb(221,174,54)"/><text x="744.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="741" y="452" width="2" height="15" fill="rgb(252,12,53)"/><text x="744.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.17%)</title><rect x="741" y="468" width="2" height="15" fill="rgb(238,60,17)"/><text x="744.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="741" y="484" width="2" height="15" fill="rgb(209,208,15)"/><text x="744.00" y="494.50"></text></g><g><title>0x7f3e472641bd (libc-2.29.so) (1 samples, 0.17%)</title><rect x="741" y="500" width="2" height="15" fill="rgb(211,99,4)"/><text x="744.00" y="510.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.17%)</title><rect x="743" y="404" width="2" height="15" fill="rgb(226,48,43)"/><text x="746.00" y="414.50"></text></g><g><title>_aligned_cast_longlong_to_float (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="743" y="420" width="2" height="15" fill="rgb(234,73,19)"/><text x="746.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.35%)</title><rect x="743" y="388" width="4" height="15" fill="rgb(213,63,11)"/><text x="746.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.17%)</title><rect x="745" y="404" width="2" height="15" fill="rgb(252,136,46)"/><text x="748.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.52%)</title><rect x="743" y="372" width="6" height="15" fill="rgb(205,202,52)"/><text x="746.00" y="382.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.17%)</title><rect x="747" y="388" width="2" height="15" fill="rgb(219,141,41)"/><text x="750.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src) (8 samples, 1.39%)</title><rect x="755" y="388" width="17" height="15" fill="rgb(232,85,24)"/><text x="758.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (4 samples, 0.69%)</title><rect x="763" y="404" width="9" height="15" fill="rgb(214,99,42)"/><text x="766.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (20 samples, 3.47%)</title><rect x="737" y="356" width="41" height="15" fill="rgb(239,182,28)"/><text x="740.00" y="366.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (14 samples, 2.43%)</title><rect x="749" y="372" width="29" height="15" fill="rgb(211,118,41)"/><text x="752.00" y="382.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.52%)</title><rect x="772" y="388" width="6" height="15" fill="rgb(209,38,20)"/><text x="775.00" y="398.50"></text></g><g><title>array_sum (methods.c) (22 samples, 3.82%)</title><rect x="735" y="260" width="45" height="15" fill="rgb(246,135,34)"/><text x="738.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (22 samples, 3.82%)</title><rect x="735" y="276" width="45" height="15" fill="rgb(236,202,12)"/><text x="738.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (22 samples, 3.82%)</title><rect x="735" y="292" width="45" height="15" fill="rgb(241,145,40)"/><text x="738.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (22 samples, 3.82%)</title><rect x="735" y="308" width="45" height="15" fill="rgb(212,22,48)"/><text x="738.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (22 samples, 3.82%)</title><rect x="735" y="324" width="45" height="15" fill="rgb(223,126,5)"/><text x="738.00" y="334.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (21 samples, 3.65%)</title><rect x="737" y="340" width="43" height="15" fill="rgb(249,119,37)"/><text x="740.00" y="350.50">PyUF..</text></g><g><title>_get_identity (ufunc_object.c) (1 samples, 0.17%)</title><rect x="778" y="356" width="2" height="15" fill="rgb(214,2,32)"/><text x="781.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.17%)</title><rect x="780" y="292" width="2" height="15" fill="rgb(232,25,15)"/><text x="783.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.17%)</title><rect x="782" y="292" width="2" height="15" fill="rgb(238,202,28)"/><text x="785.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.17%)</title><rect x="784" y="324" width="2" height="15" fill="rgb(246,39,16)"/><text x="787.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.17%)</title><rect x="784" y="340" width="2" height="15" fill="rgb(247,203,34)"/><text x="787.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.17%)</title><rect x="784" y="356" width="2" height="15" fill="rgb(231,104,53)"/><text x="787.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.17%)</title><rect x="784" y="372" width="2" height="15" fill="rgb(237,10,48)"/><text x="787.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.17%)</title><rect x="786" y="324" width="2" height="15" fill="rgb(208,141,29)"/><text x="789.00" y="334.50"></text></g><g><title>0x7f3e47262ab6 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="786" y="340" width="2" height="15" fill="rgb(242,164,29)"/><text x="789.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.17%)</title><rect x="788" y="324" width="2" height="15" fill="rgb(235,22,17)"/><text x="791.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.17%)</title><rect x="788" y="340" width="2" height="15" fill="rgb(251,171,7)"/><text x="791.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="788" y="356" width="2" height="15" fill="rgb(245,132,30)"/><text x="791.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="788" y="372" width="2" height="15" fill="rgb(218,41,6)"/><text x="791.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.69%)</title><rect x="784" y="308" width="8" height="15" fill="rgb(216,143,20)"/><text x="787.00" y="318.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="790" y="324" width="2" height="15" fill="rgb(242,67,35)"/><text x="793.00" y="334.50"></text></g><g><title>_mm_andnot_ps (xmmintrin.h) (1 samples, 0.17%)</title><rect x="792" y="372" width="2" height="15" fill="rgb(227,224,53)"/><text x="795.00" y="382.50"></text></g><g><title>FLOAT_absolute (loops.c.src) (2 samples, 0.35%)</title><rect x="792" y="324" width="4" height="15" fill="rgb(212,139,51)"/><text x="795.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src) (2 samples, 0.35%)</title><rect x="792" y="340" width="4" height="15" fill="rgb(217,17,13)"/><text x="795.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src) (2 samples, 0.35%)</title><rect x="792" y="356" width="4" height="15" fill="rgb(205,68,37)"/><text x="795.00" y="366.50"></text></g><g><title>npy_aligned_block_offset (lowlevel_strided_loops.h) (1 samples, 0.17%)</title><rect x="794" y="372" width="2" height="15" fill="rgb(228,150,40)"/><text x="797.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 1.22%)</title><rect x="784" y="292" width="14" height="15" fill="rgb(248,25,41)"/><text x="787.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (3 samples, 0.52%)</title><rect x="792" y="308" width="6" height="15" fill="rgb(209,179,40)"/><text x="795.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.17%)</title><rect x="796" y="324" width="2" height="15" fill="rgb(212,30,43)"/><text x="799.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.17%)</title><rect x="796" y="340" width="2" height="15" fill="rgb(250,125,15)"/><text x="799.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (170 samples, 29.51%)</title><rect x="454" y="100" width="348" height="15" fill="rgb(232,225,15)"/><text x="457.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (169 samples, 29.34%)</title><rect x="456" y="116" width="346" height="15" fill="rgb(205,12,11)"/><text x="459.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (169 samples, 29.34%)</title><rect x="456" y="132" width="346" height="15" fill="rgb(206,16,43)"/><text x="459.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (169 samples, 29.34%)</title><rect x="456" y="148" width="346" height="15" fill="rgb(233,87,22)"/><text x="459.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (169 samples, 29.34%)</title><rect x="456" y="164" width="346" height="15" fill="rgb(236,131,9)"/><text x="459.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (167 samples, 28.99%)</title><rect x="460" y="180" width="342" height="15" fill="rgb(223,198,49)"/><text x="463.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (161 samples, 27.95%)</title><rect x="472" y="196" width="330" height="15" fill="rgb(234,127,49)"/><text x="475.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (158 samples, 27.43%)</title><rect x="479" y="212" width="323" height="15" fill="rgb(246,195,24)"/><text x="482.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (36 samples, 6.25%)</title><rect x="729" y="228" width="73" height="15" fill="rgb(210,61,16)"/><text x="732.00" y="238.50">_run (ml..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (36 samples, 6.25%)</title><rect x="729" y="244" width="73" height="15" fill="rgb(248,116,8)"/><text x="732.00" y="254.50">norm_l1 ..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 1.91%)</title><rect x="780" y="260" width="22" height="15" fill="rgb(213,183,48)"/><text x="783.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.91%)</title><rect x="780" y="276" width="22" height="15" fill="rgb(206,89,14)"/><text x="783.00" y="286.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.35%)</title><rect x="798" y="292" width="4" height="15" fill="rgb(210,107,17)"/><text x="801.00" y="302.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.17%)</title><rect x="800" y="308" width="2" height="15" fill="rgb(215,51,42)"/><text x="803.00" y="318.50"></text></g><g><title>__and__ (enum.py) (1 samples, 0.17%)</title><rect x="802" y="548" width="2" height="15" fill="rgb(207,141,36)"/><text x="805.00" y="558.50"></text></g><g><title>__call__ (enum.py) (1 samples, 0.17%)</title><rect x="802" y="564" width="2" height="15" fill="rgb(244,173,20)"/><text x="805.00" y="574.50"></text></g><g><title>__new__ (enum.py) (1 samples, 0.17%)</title><rect x="802" y="580" width="2" height="15" fill="rgb(211,103,20)"/><text x="805.00" y="590.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.17%)</title><rect x="806" y="564" width="2" height="15" fill="rgb(230,151,30)"/><text x="809.00" y="574.50"></text></g><g><title>_compile_info (sre_compile.py) (1 samples, 0.17%)</title><rect x="806" y="580" width="2" height="15" fill="rgb(215,176,50)"/><text x="809.00" y="590.50"></text></g><g><title>_get_charset_prefix (sre_compile.py) (1 samples, 0.17%)</title><rect x="806" y="596" width="2" height="15" fill="rgb(231,177,10)"/><text x="809.00" y="606.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (174 samples, 30.21%)</title><rect x="454" y="68" width="357" height="15" fill="rgb(233,206,12)"/><text x="457.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (174 samples, 30.21%)</title><rect x="454" y="84" width="357" height="15" fill="rgb(254,163,12)"/><text x="457.00" y="94.50">setup_profile (bench_LogisticRegression_liblinea..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.69%)</title><rect x="802" y="100" width="9" height="15" fill="rgb(240,78,15)"/><text x="805.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.69%)</title><rect x="802" y="116" width="9" height="15" fill="rgb(245,76,33)"/><text x="805.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.69%)</title><rect x="802" y="132" width="9" height="15" fill="rgb(248,14,7)"/><text x="805.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.69%)</title><rect x="802" y="148" width="9" height="15" fill="rgb(226,59,29)"/><text x="805.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.69%)</title><rect x="802" y="164" width="9" height="15" fill="rgb(215,14,33)"/><text x="805.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (4 samples, 0.69%)</title><rect x="802" y="180" width="9" height="15" fill="rgb(242,153,14)"/><text x="805.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (4 samples, 0.69%)</title><rect x="802" y="196" width="9" height="15" fill="rgb(213,222,12)"/><text x="805.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="802" y="212" width="9" height="15" fill="rgb(210,0,46)"/><text x="805.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="802" y="228" width="9" height="15" fill="rgb(205,194,48)"/><text x="805.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="802" y="244" width="9" height="15" fill="rgb(207,134,43)"/><text x="805.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.69%)</title><rect x="802" y="260" width="9" height="15" fill="rgb(213,159,44)"/><text x="805.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="802" y="276" width="9" height="15" fill="rgb(235,108,27)"/><text x="805.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (4 samples, 0.69%)</title><rect x="802" y="292" width="9" height="15" fill="rgb(250,201,7)"/><text x="805.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="802" y="308" width="9" height="15" fill="rgb(247,189,37)"/><text x="805.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="802" y="324" width="9" height="15" fill="rgb(243,76,46)"/><text x="805.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="802" y="340" width="9" height="15" fill="rgb(227,131,8)"/><text x="805.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.69%)</title><rect x="802" y="356" width="9" height="15" fill="rgb(250,27,41)"/><text x="805.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.69%)</title><rect x="802" y="372" width="9" height="15" fill="rgb(221,126,39)"/><text x="805.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (4 samples, 0.69%)</title><rect x="802" y="388" width="9" height="15" fill="rgb(252,158,8)"/><text x="805.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (4 samples, 0.69%)</title><rect x="802" y="404" width="9" height="15" fill="rgb(235,195,14)"/><text x="805.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (4 samples, 0.69%)</title><rect x="802" y="420" width="9" height="15" fill="rgb(219,207,8)"/><text x="805.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (4 samples, 0.69%)</title><rect x="802" y="436" width="9" height="15" fill="rgb(235,197,3)"/><text x="805.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (4 samples, 0.69%)</title><rect x="802" y="452" width="9" height="15" fill="rgb(207,24,51)"/><text x="805.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (4 samples, 0.69%)</title><rect x="802" y="468" width="9" height="15" fill="rgb(210,37,24)"/><text x="805.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (4 samples, 0.69%)</title><rect x="802" y="484" width="9" height="15" fill="rgb(240,17,13)"/><text x="805.00" y="494.50"></text></g><g><title>change_style (mlprodict/tools/code_helper.py) (4 samples, 0.69%)</title><rect x="802" y="500" width="9" height="15" fill="rgb(242,197,44)"/><text x="805.00" y="510.50"></text></g><g><title>sub (re.py) (4 samples, 0.69%)</title><rect x="802" y="516" width="9" height="15" fill="rgb(239,110,23)"/><text x="805.00" y="526.50"></text></g><g><title>_compile (re.py) (4 samples, 0.69%)</title><rect x="802" y="532" width="9" height="15" fill="rgb(233,10,13)"/><text x="805.00" y="542.50"></text></g><g><title>compile (sre_compile.py) (3 samples, 0.52%)</title><rect x="804" y="548" width="7" height="15" fill="rgb(225,85,14)"/><text x="807.00" y="558.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="808" y="564" width="3" height="15" fill="rgb(214,150,30)"/><text x="811.00" y="574.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.17%)</title><rect x="808" y="580" width="3" height="15" fill="rgb(240,48,19)"/><text x="811.00" y="590.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="808" y="596" width="3" height="15" fill="rgb(247,84,18)"/><text x="811.00" y="606.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.17%)</title><rect x="808" y="612" width="3" height="15" fill="rgb(231,180,20)"/><text x="811.00" y="622.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.17%)</title><rect x="808" y="628" width="3" height="15" fill="rgb(210,65,30)"/><text x="811.00" y="638.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.35%)</title><rect x="821" y="244" width="4" height="15" fill="rgb(210,151,33)"/><text x="824.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.35%)</title><rect x="821" y="260" width="4" height="15" fill="rgb(246,8,51)"/><text x="824.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.35%)</title><rect x="821" y="276" width="4" height="15" fill="rgb(212,163,11)"/><text x="824.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.35%)</title><rect x="821" y="292" width="4" height="15" fill="rgb(206,137,12)"/><text x="824.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.35%)</title><rect x="821" y="308" width="4" height="15" fill="rgb(224,218,14)"/><text x="824.00" y="318.50"></text></g><g><title>0x7f3e4728314a (libc-2.29.so) (1 samples, 0.17%)</title><rect x="825" y="308" width="2" height="15" fill="rgb(214,227,45)"/><text x="828.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.35%)</title><rect x="825" y="292" width="4" height="15" fill="rgb(226,92,7)"/><text x="828.00" y="302.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c) (1 samples, 0.17%)</title><rect x="827" y="308" width="2" height="15" fill="rgb(251,0,41)"/><text x="830.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.17%)</title><rect x="829" y="292" width="2" height="15" fill="rgb(212,155,38)"/><text x="832.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.17%)</title><rect x="829" y="308" width="2" height="15" fill="rgb(207,198,31)"/><text x="832.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (10 samples, 1.74%)</title><rect x="825" y="276" width="20" height="15" fill="rgb(250,226,22)"/><text x="828.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c) (7 samples, 1.22%)</title><rect x="831" y="292" width="14" height="15" fill="rgb(205,158,47)"/><text x="834.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src) (6 samples, 1.04%)</title><rect x="833" y="308" width="12" height="15" fill="rgb(210,101,53)"/><text x="836.00" y="318.50"></text></g><g><title>array_sum (methods.c) (15 samples, 2.60%)</title><rect x="817" y="180" width="30" height="15" fill="rgb(243,7,37)"/><text x="820.00" y="190.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (15 samples, 2.60%)</title><rect x="817" y="196" width="30" height="15" fill="rgb(251,212,38)"/><text x="820.00" y="206.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 2.43%)</title><rect x="819" y="212" width="28" height="15" fill="rgb(221,48,13)"/><text x="822.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 2.26%)</title><rect x="821" y="228" width="26" height="15" fill="rgb(210,111,43)"/><text x="824.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 1.91%)</title><rect x="825" y="244" width="22" height="15" fill="rgb(239,159,23)"/><text x="828.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (11 samples, 1.91%)</title><rect x="825" y="260" width="22" height="15" fill="rgb(232,146,38)"/><text x="828.00" y="270.50">P..</text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 0.17%)</title><rect x="845" y="276" width="2" height="15" fill="rgb(252,49,13)"/><text x="848.00" y="286.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.17%)</title><rect x="849" y="276" width="2" height="15" fill="rgb(234,78,1)"/><text x="852.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.17%)</title><rect x="849" y="292" width="2" height="15" fill="rgb(244,139,10)"/><text x="852.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.17%)</title><rect x="849" y="308" width="2" height="15" fill="rgb(251,153,47)"/><text x="852.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.17%)</title><rect x="849" y="324" width="2" height="15" fill="rgb(231,107,29)"/><text x="852.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.17%)</title><rect x="851" y="276" width="3" height="15" fill="rgb(250,16,37)"/><text x="854.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.17%)</title><rect x="851" y="292" width="3" height="15" fill="rgb(239,87,15)"/><text x="854.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.17%)</title><rect x="851" y="308" width="3" height="15" fill="rgb(238,211,42)"/><text x="854.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.17%)</title><rect x="851" y="324" width="3" height="15" fill="rgb(219,62,36)"/><text x="854.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="851" y="340" width="3" height="15" fill="rgb(216,196,46)"/><text x="854.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="851" y="356" width="3" height="15" fill="rgb(205,5,0)"/><text x="854.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="851" y="372" width="3" height="15" fill="rgb(241,200,21)"/><text x="854.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.17%)</title><rect x="851" y="388" width="3" height="15" fill="rgb(205,210,18)"/><text x="854.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="851" y="404" width="3" height="15" fill="rgb(220,202,26)"/><text x="854.00" y="414.50"></text></g><g><title>0x7f3e47264787 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="851" y="420" width="3" height="15" fill="rgb(239,90,29)"/><text x="854.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.17%)</title><rect x="854" y="292" width="2" height="15" fill="rgb(205,64,39)"/><text x="857.00" y="302.50"></text></g><g><title>0x7f3e47282d67 (libc-2.29.so) (2 samples, 0.35%)</title><rect x="860" y="324" width="4" height="15" fill="rgb(250,110,28)"/><text x="863.00" y="334.50"></text></g><g><title>array_add (number.c) (9 samples, 1.56%)</title><rect x="849" y="196" width="19" height="15" fill="rgb(237,220,29)"/><text x="852.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.56%)</title><rect x="849" y="212" width="19" height="15" fill="rgb(250,171,15)"/><text x="852.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.56%)</title><rect x="849" y="228" width="19" height="15" fill="rgb(227,190,4)"/><text x="852.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 1.56%)</title><rect x="849" y="244" width="19" height="15" fill="rgb(240,4,16)"/><text x="852.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 1.56%)</title><rect x="849" y="260" width="19" height="15" fill="rgb(244,163,25)"/><text x="852.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 1.22%)</title><rect x="854" y="276" width="14" height="15" fill="rgb(241,110,31)"/><text x="857.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 1.04%)</title><rect x="856" y="292" width="12" height="15" fill="rgb(248,33,43)"/><text x="859.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (6 samples, 1.04%)</title><rect x="856" y="308" width="12" height="15" fill="rgb(230,57,13)"/><text x="859.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (2 samples, 0.35%)</title><rect x="864" y="324" width="4" height="15" fill="rgb(238,143,10)"/><text x="867.00" y="334.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.17%)</title><rect x="882" y="212" width="2" height="15" fill="rgb(221,121,2)"/><text x="885.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.17%)</title><rect x="886" y="228" width="2" height="15" fill="rgb(230,33,0)"/><text x="889.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="888" y="228" width="2" height="15" fill="rgb(239,215,6)"/><text x="891.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (4 samples, 0.69%)</title><rect x="884" y="212" width="8" height="15" fill="rgb(215,226,23)"/><text x="887.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.17%)</title><rect x="890" y="228" width="2" height="15" fill="rgb(216,1,29)"/><text x="893.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.35%)</title><rect x="892" y="212" width="5" height="15" fill="rgb(209,181,45)"/><text x="895.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 1.22%)</title><rect x="897" y="212" width="14" height="15" fill="rgb(249,117,32)"/><text x="900.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.17%)</title><rect x="909" y="228" width="2" height="15" fill="rgb(239,151,32)"/><text x="912.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.35%)</title><rect x="911" y="212" width="4" height="15" fill="rgb(228,105,53)"/><text x="914.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.17%)</title><rect x="913" y="228" width="2" height="15" fill="rgb(246,119,39)"/><text x="916.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (28 samples, 4.86%)</title><rect x="868" y="196" width="57" height="15" fill="rgb(210,101,29)"/><text x="871.00" y="206.50">check_..</text></g><g><title>simplefilter (warnings.py) (5 samples, 0.87%)</title><rect x="915" y="212" width="10" height="15" fill="rgb(231,229,48)"/><text x="918.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (5 samples, 0.87%)</title><rect x="915" y="228" width="10" height="15" fill="rgb(246,145,43)"/><text x="918.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (4 samples, 0.69%)</title><rect x="925" y="196" width="8" height="15" fill="rgb(251,181,31)"/><text x="928.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.52%)</title><rect x="927" y="212" width="6" height="15" fill="rgb(247,193,5)"/><text x="930.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.17%)</title><rect x="931" y="228" width="2" height="15" fill="rgb(228,74,13)"/><text x="934.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.35%)</title><rect x="933" y="212" width="5" height="15" fill="rgb(246,91,26)"/><text x="936.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 3.99%)</title><rect x="938" y="212" width="47" height="15" fill="rgb(243,130,11)"/><text x="941.00" y="222.50">dgem..</text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="987" y="292" width="2" height="15" fill="rgb(212,116,32)"/><text x="990.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="987" y="308" width="2" height="15" fill="rgb(208,120,38)"/><text x="990.00" y="318.50"></text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.17%)</title><rect x="989" y="308" width="2" height="15" fill="rgb(213,180,42)"/><text x="992.00" y="318.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (14 samples, 2.43%)</title><rect x="985" y="260" width="28" height="15" fill="rgb(246,168,38)"/><text x="988.00" y="270.50">D..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 2.26%)</title><rect x="987" y="276" width="26" height="15" fill="rgb(214,136,21)"/><text x="990.00" y="286.50">c..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.08%)</title><rect x="989" y="292" width="24" height="15" fill="rgb(251,21,3)"/><text x="992.00" y="302.50">d..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.91%)</title><rect x="991" y="308" width="22" height="15" fill="rgb(249,30,16)"/><text x="994.00" y="318.50">d..</text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.17%)</title><rect x="1013" y="292" width="2" height="15" fill="rgb(207,68,8)"/><text x="1016.00" y="302.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.17%)</title><rect x="1013" y="308" width="2" height="15" fill="rgb(224,131,4)"/><text x="1016.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (34 samples, 5.90%)</title><rect x="1013" y="260" width="70" height="15" fill="rgb(242,129,8)"/><text x="1016.00" y="270.50">NpyIter..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (34 samples, 5.90%)</title><rect x="1013" y="276" width="70" height="15" fill="rgb(228,54,7)"/><text x="1016.00" y="286.50">npyiter..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (33 samples, 5.73%)</title><rect x="1015" y="292" width="68" height="15" fill="rgb(240,55,11)"/><text x="1018.00" y="302.50">PyArray..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (32 samples, 5.56%)</title><rect x="1017" y="308" width="66" height="15" fill="rgb(220,188,44)"/><text x="1020.00" y="318.50">raw_arr..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (32 samples, 5.56%)</title><rect x="1017" y="324" width="66" height="15" fill="rgb(212,155,36)"/><text x="1020.00" y="334.50">_aligne..</text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.17%)</title><rect x="1083" y="260" width="2" height="15" fill="rgb(213,206,2)"/><text x="1086.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (117 samples, 20.31%)</title><rect x="847" y="180" width="240" height="15" fill="rgb(215,12,1)"/><text x="850.00" y="190.50">decision_function (sklearn/line..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (75 samples, 13.02%)</title><rect x="933" y="196" width="154" height="15" fill="rgb(231,78,19)"/><text x="936.00" y="206.50">safe_sparse_dot (sk..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (50 samples, 8.68%)</title><rect x="985" y="212" width="102" height="15" fill="rgb(235,10,37)"/><text x="988.00" y="222.50">ufunc_generi..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (50 samples, 8.68%)</title><rect x="985" y="228" width="102" height="15" fill="rgb(220,136,14)"/><text x="988.00" y="238.50">PyUFunc_Gene..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (50 samples, 8.68%)</title><rect x="985" y="244" width="102" height="15" fill="rgb(250,97,15)"/><text x="988.00" y="254.50">PyUFunc_Gene..</text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.17%)</title><rect x="1085" y="260" width="2" height="15" fill="rgb(209,99,22)"/><text x="1088.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.17%)</title><rect x="1085" y="276" width="2" height="15" fill="rgb(205,179,52)"/><text x="1088.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1085" y="292" width="2" height="15" fill="rgb(206,49,27)"/><text x="1088.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.17%)</title><rect x="1087" y="196" width="2" height="15" fill="rgb(206,9,24)"/><text x="1090.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.17%)</title><rect x="1087" y="212" width="2" height="15" fill="rgb(241,193,18)"/><text x="1090.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.17%)</title><rect x="1087" y="228" width="2" height="15" fill="rgb(221,59,49)"/><text x="1090.00" y="238.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.17%)</title><rect x="1089" y="228" width="2" height="15" fill="rgb(220,225,41)"/><text x="1092.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.17%)</title><rect x="1089" y="244" width="2" height="15" fill="rgb(232,135,27)"/><text x="1092.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.17%)</title><rect x="1089" y="260" width="2" height="15" fill="rgb(226,17,15)"/><text x="1092.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1089" y="276" width="2" height="15" fill="rgb(231,180,26)"/><text x="1092.00" y="286.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.17%)</title><rect x="1091" y="292" width="2" height="15" fill="rgb(205,107,11)"/><text x="1094.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (5 samples, 0.87%)</title><rect x="1091" y="244" width="10" height="15" fill="rgb(241,214,39)"/><text x="1094.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (5 samples, 0.87%)</title><rect x="1091" y="260" width="10" height="15" fill="rgb(221,102,18)"/><text x="1094.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (5 samples, 0.87%)</title><rect x="1091" y="276" width="10" height="15" fill="rgb(205,97,28)"/><text x="1094.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (4 samples, 0.69%)</title><rect x="1093" y="292" width="8" height="15" fill="rgb(253,154,3)"/><text x="1096.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.35%)</title><rect x="1101" y="260" width="5" height="15" fill="rgb(252,138,45)"/><text x="1104.00" y="270.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.17%)</title><rect x="1103" y="276" width="3" height="15" fill="rgb(235,148,10)"/><text x="1106.00" y="286.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.17%)</title><rect x="1103" y="292" width="3" height="15" fill="rgb(215,139,34)"/><text x="1106.00" y="302.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.17%)</title><rect x="1103" y="308" width="3" height="15" fill="rgb(212,109,6)"/><text x="1106.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.17%)</title><rect x="1106" y="260" width="2" height="15" fill="rgb(244,152,40)"/><text x="1109.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.69%)</title><rect x="1101" y="244" width="9" height="15" fill="rgb(224,46,37)"/><text x="1104.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.17%)</title><rect x="1108" y="260" width="2" height="15" fill="rgb(216,133,45)"/><text x="1111.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (11 samples, 1.91%)</title><rect x="1091" y="228" width="23" height="15" fill="rgb(219,80,29)"/><text x="1094.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.35%)</title><rect x="1110" y="244" width="4" height="15" fill="rgb(236,180,30)"/><text x="1113.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.35%)</title><rect x="1110" y="260" width="4" height="15" fill="rgb(219,35,30)"/><text x="1113.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.35%)</title><rect x="1110" y="276" width="4" height="15" fill="rgb(248,162,36)"/><text x="1113.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="1112" y="292" width="2" height="15" fill="rgb(223,202,1)"/><text x="1115.00" y="302.50"></text></g><g><title>0x7f3e296689da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1114" y="244" width="2" height="15" fill="rgb(227,109,5)"/><text x="1117.00" y="254.50"></text></g><g><title>0x7f3e296689dd (?) (1 samples, 0.17%)</title><rect x="1116" y="244" width="2" height="15" fill="rgb(232,23,25)"/><text x="1119.00" y="254.50"></text></g><g><title>0x7f3e29689254 (?) (1 samples, 0.17%)</title><rect x="1116" y="260" width="2" height="15" fill="rgb(233,224,12)"/><text x="1119.00" y="270.50"></text></g><g><title>0x7f3e29646fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1118" y="276" width="2" height="15" fill="rgb(244,48,40)"/><text x="1121.00" y="286.50"></text></g><g><title>0x7f3e297929f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1120" y="276" width="2" height="15" fill="rgb(239,108,0)"/><text x="1123.00" y="286.50"></text></g><g><title>0x7f3e47434bb4 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1124" y="292" width="2" height="15" fill="rgb(247,84,6)"/><text x="1127.00" y="302.50"></text></g><g><title>0x7f3e47434bd3 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1126" y="292" width="2" height="15" fill="rgb(214,162,21)"/><text x="1129.00" y="302.50"></text></g><g><title>0x7f3e47434bde (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1128" y="292" width="2" height="15" fill="rgb(217,190,28)"/><text x="1131.00" y="302.50"></text></g><g><title>0x7f3e47434c2e (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1130" y="292" width="2" height="15" fill="rgb(218,153,20)"/><text x="1133.00" y="302.50"></text></g><g><title>0x7f3e47434c3e (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1132" y="292" width="2" height="15" fill="rgb(230,192,12)"/><text x="1135.00" y="302.50"></text></g><g><title>0x7f3e47434c56 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1134" y="292" width="2" height="15" fill="rgb(224,17,23)"/><text x="1137.00" y="302.50"></text></g><g><title>0x7f3e29689265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.91%)</title><rect x="1118" y="260" width="22" height="15" fill="rgb(224,46,52)"/><text x="1121.00" y="270.50">0..</text></g><g><title>exp (libm-2.29.so) (9 samples, 1.56%)</title><rect x="1122" y="276" width="18" height="15" fill="rgb(221,162,24)"/><text x="1125.00" y="286.50"></text></g><g><title>0x7f3e47434c6a (libm-2.29.so) (2 samples, 0.35%)</title><rect x="1136" y="292" width="4" height="15" fill="rgb(221,127,32)"/><text x="1139.00" y="302.50"></text></g><g><title>0x7f3e29689275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.52%)</title><rect x="1140" y="260" width="6" height="15" fill="rgb(217,229,8)"/><text x="1143.00" y="270.50"></text></g><g><title>0x7f3e296689dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (26 samples, 4.51%)</title><rect x="1118" y="244" width="53" height="15" fill="rgb(247,110,42)"/><text x="1121.00" y="254.50">0x7f3..</text></g><g><title>0x7f3e29689279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (12 samples, 2.08%)</title><rect x="1146" y="260" width="25" height="15" fill="rgb(223,117,35)"/><text x="1149.00" y="270.50">0..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (42 samples, 7.29%)</title><rect x="1089" y="212" width="86" height="15" fill="rgb(234,207,47)"/><text x="1092.00" y="222.50">execute_le..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (30 samples, 5.21%)</title><rect x="1114" y="228" width="61" height="15" fill="rgb(249,65,34)"/><text x="1117.00" y="238.50">trivia..</text></g><g><title>0x7f3e296689e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="1171" y="244" width="4" height="15" fill="rgb(237,106,54)"/><text x="1174.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (43 samples, 7.47%)</title><rect x="1089" y="196" width="88" height="15" fill="rgb(245,30,36)"/><text x="1092.00" y="206.50">PyUFunc_Ge..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1175" y="212" width="2" height="15" fill="rgb(208,37,30)"/><text x="1178.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1175" y="228" width="2" height="15" fill="rgb(242,183,51)"/><text x="1178.00" y="238.50"></text></g><g><title>_borrowed_reference (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1175" y="244" width="2" height="15" fill="rgb(211,39,25)"/><text x="1178.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (178 samples, 30.90%)</title><rect x="815" y="164" width="364" height="15" fill="rgb(237,80,5)"/><text x="818.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (45 samples, 7.81%)</title><rect x="1087" y="180" width="92" height="15" fill="rgb(239,64,31)"/><text x="1090.00" y="190.50">ufunc_gene..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.17%)</title><rect x="1177" y="196" width="2" height="15" fill="rgb(247,201,2)"/><text x="1180.00" y="206.50"></text></g><g><title>0x7f3e47283120 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1177" y="212" width="2" height="15" fill="rgb(236,4,25)"/><text x="1180.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (4 samples, 0.69%)</title><rect x="1179" y="180" width="8" height="15" fill="rgb(230,148,30)"/><text x="1182.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.17%)</title><rect x="1185" y="196" width="2" height="15" fill="rgb(212,158,12)"/><text x="1188.00" y="206.50"></text></g><g><title>all (576 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(244,47,21)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (576 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(213,50,15)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (185 samples, 32.12%)</title><rect x="811" y="68" width="379" height="15" fill="rgb(240,187,24)"/><text x="814.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (185 samples, 32.12%)</title><rect x="811" y="84" width="379" height="15" fill="rgb(222,15,7)"/><text x="814.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (185 samples, 32.12%)</title><rect x="811" y="100" width="379" height="15" fill="rgb(243,220,52)"/><text x="814.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_so..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (184 samples, 31.94%)</title><rect x="813" y="116" width="377" height="15" fill="rgb(211,65,16)"/><text x="816.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (184 samples, 31.94%)</title><rect x="813" y="132" width="377" height="15" fill="rgb(242,130,49)"/><text x="816.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (184 samples, 31.94%)</title><rect x="813" y="148" width="377" height="15" fill="rgb(244,112,2)"/><text x="816.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (5 samples, 0.87%)</title><rect x="1179" y="164" width="11" height="15" fill="rgb(252,60,16)"/><text x="1182.00" y="174.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.17%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(210,117,13)"/><text x="1190.00" y="190.50"></text></g></g></svg>