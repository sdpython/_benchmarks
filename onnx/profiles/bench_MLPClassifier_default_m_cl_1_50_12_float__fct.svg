<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1542" onload="init(evt)" viewBox="0 0 1200 1542" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1542" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1525.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1525.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(237,169,12)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(253,184,26)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(231,49,23)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(253,96,50)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(208,84,45)"/><text x="13.00" y="942.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="868" width="3" height="15" fill="rgb(239,26,34)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="884" width="3" height="15" fill="rgb(234,200,15)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="900" width="3" height="15" fill="rgb(249,68,54)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(219,170,48)"/><text x="15.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="932" width="3" height="15" fill="rgb(235,101,49)"/><text x="15.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(216,77,13)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="964" width="3" height="15" fill="rgb(234,50,54)"/><text x="15.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.22%)</title><rect x="12" y="980" width="3" height="15" fill="rgb(227,201,23)"/><text x="15.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.22%)</title><rect x="12" y="996" width="3" height="15" fill="rgb(235,132,40)"/><text x="15.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.22%)</title><rect x="12" y="1012" width="3" height="15" fill="rgb(228,13,3)"/><text x="15.00" y="1022.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(234,189,12)"/><text x="18.00" y="894.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(219,45,32)"/><text x="18.00" y="910.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 0.89%)</title><rect x="10" y="292" width="10" height="15" fill="rgb(209,122,22)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="308" width="10" height="15" fill="rgb(230,117,29)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="324" width="10" height="15" fill="rgb(229,31,44)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="340" width="10" height="15" fill="rgb(251,175,23)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="10" y="356" width="10" height="15" fill="rgb(233,26,44)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="372" width="10" height="15" fill="rgb(206,89,19)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.89%)</title><rect x="10" y="388" width="10" height="15" fill="rgb(242,118,11)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="404" width="10" height="15" fill="rgb(249,81,17)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="420" width="10" height="15" fill="rgb(236,223,25)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="436" width="10" height="15" fill="rgb(216,209,11)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="10" y="452" width="10" height="15" fill="rgb(213,190,7)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="468" width="10" height="15" fill="rgb(254,5,54)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 0.89%)</title><rect x="10" y="484" width="10" height="15" fill="rgb(212,55,32)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="500" width="10" height="15" fill="rgb(224,166,24)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="516" width="10" height="15" fill="rgb(226,165,44)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="532" width="10" height="15" fill="rgb(212,114,24)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="10" y="548" width="10" height="15" fill="rgb(219,195,24)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="564" width="10" height="15" fill="rgb(211,41,7)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 0.89%)</title><rect x="10" y="580" width="10" height="15" fill="rgb(248,227,28)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="596" width="10" height="15" fill="rgb(230,183,26)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="612" width="10" height="15" fill="rgb(252,54,47)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="628" width="10" height="15" fill="rgb(234,228,15)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="644" width="10" height="15" fill="rgb(242,178,16)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="660" width="10" height="15" fill="rgb(242,58,35)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="676" width="10" height="15" fill="rgb(224,39,19)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="10" y="692" width="10" height="15" fill="rgb(212,220,12)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="708" width="10" height="15" fill="rgb(254,196,30)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.89%)</title><rect x="10" y="724" width="10" height="15" fill="rgb(206,82,4)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="740" width="10" height="15" fill="rgb(235,69,31)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="756" width="10" height="15" fill="rgb(240,206,34)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="772" width="10" height="15" fill="rgb(221,90,15)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="10" y="788" width="10" height="15" fill="rgb(230,51,13)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="10" y="804" width="10" height="15" fill="rgb(243,229,36)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.89%)</title><rect x="10" y="820" width="10" height="15" fill="rgb(223,136,46)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.89%)</title><rect x="10" y="836" width="10" height="15" fill="rgb(234,53,28)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.89%)</title><rect x="10" y="852" width="10" height="15" fill="rgb(232,159,46)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.45%)</title><rect x="15" y="868" width="5" height="15" fill="rgb(247,22,47)"/><text x="18.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="17" y="884" width="3" height="15" fill="rgb(250,96,15)"/><text x="20.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="17" y="900" width="3" height="15" fill="rgb(208,220,26)"/><text x="20.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.22%)</title><rect x="17" y="916" width="3" height="15" fill="rgb(216,224,44)"/><text x="20.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="17" y="932" width="3" height="15" fill="rgb(216,25,27)"/><text x="20.00" y="942.50"></text></g><g><title>0x7fd3e17fa237 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="17" y="948" width="3" height="15" fill="rgb(228,216,12)"/><text x="20.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.11%)</title><rect x="10" y="196" width="13" height="15" fill="rgb(251,55,47)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.11%)</title><rect x="10" y="212" width="13" height="15" fill="rgb(231,159,9)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.11%)</title><rect x="10" y="228" width="13" height="15" fill="rgb(229,156,49)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.11%)</title><rect x="10" y="244" width="13" height="15" fill="rgb(211,50,39)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.11%)</title><rect x="10" y="260" width="13" height="15" fill="rgb(209,141,30)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.11%)</title><rect x="10" y="276" width="13" height="15" fill="rgb(210,216,47)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.22%)</title><rect x="20" y="292" width="3" height="15" fill="rgb(246,174,12)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="308" width="3" height="15" fill="rgb(235,67,11)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="324" width="3" height="15" fill="rgb(225,73,50)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="340" width="3" height="15" fill="rgb(227,191,11)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="356" width="3" height="15" fill="rgb(248,112,48)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="372" width="3" height="15" fill="rgb(238,22,52)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.22%)</title><rect x="20" y="388" width="3" height="15" fill="rgb(213,59,15)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="404" width="3" height="15" fill="rgb(231,27,12)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="420" width="3" height="15" fill="rgb(230,228,38)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="436" width="3" height="15" fill="rgb(208,55,27)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="452" width="3" height="15" fill="rgb(208,214,37)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="468" width="3" height="15" fill="rgb(241,138,34)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.22%)</title><rect x="20" y="484" width="3" height="15" fill="rgb(237,219,54)"/><text x="23.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="500" width="3" height="15" fill="rgb(241,172,52)"/><text x="23.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="516" width="3" height="15" fill="rgb(234,33,31)"/><text x="23.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="532" width="3" height="15" fill="rgb(212,216,44)"/><text x="23.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="548" width="3" height="15" fill="rgb(227,65,27)"/><text x="23.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="564" width="3" height="15" fill="rgb(217,67,1)"/><text x="23.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="580" width="3" height="15" fill="rgb(238,48,41)"/><text x="23.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="596" width="3" height="15" fill="rgb(216,84,33)"/><text x="23.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.22%)</title><rect x="20" y="612" width="3" height="15" fill="rgb(245,184,11)"/><text x="23.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="628" width="3" height="15" fill="rgb(224,89,44)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="644" width="3" height="15" fill="rgb(218,29,32)"/><text x="23.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="660" width="3" height="15" fill="rgb(205,3,50)"/><text x="23.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="676" width="3" height="15" fill="rgb(227,135,33)"/><text x="23.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="692" width="3" height="15" fill="rgb(237,84,35)"/><text x="23.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.22%)</title><rect x="20" y="708" width="3" height="15" fill="rgb(205,163,43)"/><text x="23.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="724" width="3" height="15" fill="rgb(235,224,49)"/><text x="23.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="740" width="3" height="15" fill="rgb(234,146,45)"/><text x="23.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="756" width="3" height="15" fill="rgb(228,181,4)"/><text x="23.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="772" width="3" height="15" fill="rgb(211,217,43)"/><text x="23.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="788" width="3" height="15" fill="rgb(241,59,3)"/><text x="23.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.22%)</title><rect x="20" y="804" width="3" height="15" fill="rgb(246,40,2)"/><text x="23.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="820" width="3" height="15" fill="rgb(253,125,10)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="836" width="3" height="15" fill="rgb(218,200,0)"/><text x="23.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="852" width="3" height="15" fill="rgb(243,107,27)"/><text x="23.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="868" width="3" height="15" fill="rgb(208,104,8)"/><text x="23.00" y="878.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="884" width="3" height="15" fill="rgb(208,108,13)"/><text x="23.00" y="894.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="900" width="3" height="15" fill="rgb(243,211,8)"/><text x="23.00" y="910.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.22%)</title><rect x="23" y="1204" width="2" height="15" fill="rgb(223,23,31)"/><text x="26.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1220" width="2" height="15" fill="rgb(237,44,48)"/><text x="26.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1236" width="2" height="15" fill="rgb(245,78,40)"/><text x="26.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1252" width="2" height="15" fill="rgb(238,114,8)"/><text x="26.00" y="1262.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1268" width="2" height="15" fill="rgb(215,227,41)"/><text x="26.00" y="1278.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1284" width="2" height="15" fill="rgb(243,183,14)"/><text x="26.00" y="1294.50"></text></g><g><title>findsource (inspect.py) (1 samples, 0.22%)</title><rect x="25" y="1364" width="3" height="15" fill="rgb(228,98,15)"/><text x="28.00" y="1374.50"></text></g><g><title>getlines (linecache.py) (1 samples, 0.22%)</title><rect x="25" y="1380" width="3" height="15" fill="rgb(216,188,23)"/><text x="28.00" y="1390.50"></text></g><g><title>updatecache (linecache.py) (1 samples, 0.22%)</title><rect x="25" y="1396" width="3" height="15" fill="rgb(227,121,21)"/><text x="28.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="23" y="1124" width="8" height="15" fill="rgb(247,148,28)"/><text x="26.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="23" y="1140" width="8" height="15" fill="rgb(209,84,41)"/><text x="26.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="23" y="1156" width="8" height="15" fill="rgb(220,140,20)"/><text x="26.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="23" y="1172" width="8" height="15" fill="rgb(216,213,28)"/><text x="26.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="23" y="1188" width="8" height="15" fill="rgb(212,36,48)"/><text x="26.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.45%)</title><rect x="25" y="1204" width="6" height="15" fill="rgb(224,128,12)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="25" y="1220" width="6" height="15" fill="rgb(242,124,3)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="25" y="1236" width="6" height="15" fill="rgb(210,6,40)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="25" y="1252" width="6" height="15" fill="rgb(210,34,28)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="25" y="1268" width="6" height="15" fill="rgb(224,99,29)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="25" y="1284" width="6" height="15" fill="rgb(209,95,0)"/><text x="28.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.45%)</title><rect x="25" y="1300" width="6" height="15" fill="rgb(248,114,18)"/><text x="28.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.45%)</title><rect x="25" y="1316" width="6" height="15" fill="rgb(208,161,7)"/><text x="28.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.45%)</title><rect x="25" y="1332" width="6" height="15" fill="rgb(238,15,16)"/><text x="28.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.45%)</title><rect x="25" y="1348" width="6" height="15" fill="rgb(228,81,40)"/><text x="28.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.22%)</title><rect x="28" y="1364" width="3" height="15" fill="rgb(211,57,21)"/><text x="31.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.22%)</title><rect x="28" y="1380" width="3" height="15" fill="rgb(254,77,32)"/><text x="31.00" y="1390.50"></text></g><g><title>0x7fd3e17db167 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="28" y="1396" width="3" height="15" fill="rgb(249,213,46)"/><text x="31.00" y="1406.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.89%)</title><rect x="23" y="340" width="10" height="15" fill="rgb(234,129,21)"/><text x="26.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="356" width="10" height="15" fill="rgb(243,179,9)"/><text x="26.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="372" width="10" height="15" fill="rgb(244,191,32)"/><text x="26.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="388" width="10" height="15" fill="rgb(241,28,0)"/><text x="26.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="23" y="404" width="10" height="15" fill="rgb(232,124,38)"/><text x="26.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="420" width="10" height="15" fill="rgb(247,57,8)"/><text x="26.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 0.89%)</title><rect x="23" y="436" width="10" height="15" fill="rgb(236,47,38)"/><text x="26.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="452" width="10" height="15" fill="rgb(254,39,47)"/><text x="26.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="468" width="10" height="15" fill="rgb(208,77,4)"/><text x="26.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="484" width="10" height="15" fill="rgb(225,77,28)"/><text x="26.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="500" width="10" height="15" fill="rgb(218,155,23)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="516" width="10" height="15" fill="rgb(224,132,28)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="532" width="10" height="15" fill="rgb(233,76,53)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="23" y="548" width="10" height="15" fill="rgb(241,209,31)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="564" width="10" height="15" fill="rgb(215,157,47)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 0.89%)</title><rect x="23" y="580" width="10" height="15" fill="rgb(225,130,54)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="596" width="10" height="15" fill="rgb(230,79,13)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="612" width="10" height="15" fill="rgb(247,16,31)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="628" width="10" height="15" fill="rgb(238,187,14)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="23" y="644" width="10" height="15" fill="rgb(208,65,34)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="660" width="10" height="15" fill="rgb(211,42,0)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 0.89%)</title><rect x="23" y="676" width="10" height="15" fill="rgb(251,63,27)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="692" width="10" height="15" fill="rgb(215,132,22)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="708" width="10" height="15" fill="rgb(234,18,37)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="724" width="10" height="15" fill="rgb(232,127,47)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="23" y="740" width="10" height="15" fill="rgb(234,226,12)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="756" width="10" height="15" fill="rgb(253,139,11)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 0.89%)</title><rect x="23" y="772" width="10" height="15" fill="rgb(217,178,48)"/><text x="26.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="788" width="10" height="15" fill="rgb(241,101,5)"/><text x="26.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="804" width="10" height="15" fill="rgb(234,154,33)"/><text x="26.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="820" width="10" height="15" fill="rgb(237,223,36)"/><text x="26.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="23" y="836" width="10" height="15" fill="rgb(234,78,0)"/><text x="26.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="852" width="10" height="15" fill="rgb(210,3,33)"/><text x="26.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 0.89%)</title><rect x="23" y="868" width="10" height="15" fill="rgb(236,158,1)"/><text x="26.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="884" width="10" height="15" fill="rgb(206,217,31)"/><text x="26.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="900" width="10" height="15" fill="rgb(249,206,17)"/><text x="26.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="916" width="10" height="15" fill="rgb(225,29,8)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="932" width="10" height="15" fill="rgb(212,154,32)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="948" width="10" height="15" fill="rgb(208,82,12)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="964" width="10" height="15" fill="rgb(230,220,17)"/><text x="26.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="23" y="980" width="10" height="15" fill="rgb(210,200,45)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="996" width="10" height="15" fill="rgb(232,126,13)"/><text x="26.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 0.89%)</title><rect x="23" y="1012" width="10" height="15" fill="rgb(226,37,35)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="1028" width="10" height="15" fill="rgb(243,34,42)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="1044" width="10" height="15" fill="rgb(214,41,36)"/><text x="26.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="1060" width="10" height="15" fill="rgb(233,20,33)"/><text x="26.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="23" y="1076" width="10" height="15" fill="rgb(221,147,4)"/><text x="26.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="23" y="1092" width="10" height="15" fill="rgb(215,22,27)"/><text x="26.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 0.89%)</title><rect x="23" y="1108" width="10" height="15" fill="rgb(235,212,42)"/><text x="26.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1124" width="2" height="15" fill="rgb(253,3,11)"/><text x="34.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1140" width="2" height="15" fill="rgb(247,104,9)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1156" width="2" height="15" fill="rgb(235,14,51)"/><text x="34.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1172" width="2" height="15" fill="rgb(241,221,34)"/><text x="34.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1188" width="2" height="15" fill="rgb(238,21,36)"/><text x="34.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="31" y="1204" width="2" height="15" fill="rgb(245,78,31)"/><text x="34.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1220" width="2" height="15" fill="rgb(229,116,14)"/><text x="34.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.22%)</title><rect x="31" y="1236" width="2" height="15" fill="rgb(247,107,22)"/><text x="34.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1252" width="2" height="15" fill="rgb(246,118,8)"/><text x="34.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1268" width="2" height="15" fill="rgb(241,186,9)"/><text x="34.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1284" width="2" height="15" fill="rgb(216,20,4)"/><text x="34.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1300" width="2" height="15" fill="rgb(212,39,20)"/><text x="34.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1316" width="2" height="15" fill="rgb(213,16,35)"/><text x="34.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="31" y="1332" width="2" height="15" fill="rgb(215,52,11)"/><text x="34.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1348" width="2" height="15" fill="rgb(215,110,39)"/><text x="34.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.22%)</title><rect x="31" y="1364" width="2" height="15" fill="rgb(230,3,42)"/><text x="34.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1380" width="2" height="15" fill="rgb(252,185,17)"/><text x="34.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1396" width="2" height="15" fill="rgb(205,158,38)"/><text x="34.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1412" width="2" height="15" fill="rgb(221,0,48)"/><text x="34.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="31" y="1428" width="2" height="15" fill="rgb(214,9,53)"/><text x="34.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1444" width="2" height="15" fill="rgb(220,113,14)"/><text x="34.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.22%)</title><rect x="31" y="1460" width="2" height="15" fill="rgb(250,105,25)"/><text x="34.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.22%)</title><rect x="31" y="1476" width="2" height="15" fill="rgb(245,95,26)"/><text x="34.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.22%)</title><rect x="31" y="1492" width="2" height="15" fill="rgb(214,8,27)"/><text x="34.00" y="1502.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.22%)</title><rect x="33" y="580" width="3" height="15" fill="rgb(225,27,28)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="596" width="3" height="15" fill="rgb(245,36,11)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="612" width="3" height="15" fill="rgb(239,10,14)"/><text x="36.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="628" width="3" height="15" fill="rgb(252,119,29)"/><text x="36.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="644" width="3" height="15" fill="rgb(216,103,1)"/><text x="36.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="660" width="3" height="15" fill="rgb(219,173,20)"/><text x="36.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="676" width="3" height="15" fill="rgb(221,163,37)"/><text x="36.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="692" width="3" height="15" fill="rgb(209,131,2)"/><text x="36.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="708" width="3" height="15" fill="rgb(215,30,16)"/><text x="36.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.22%)</title><rect x="33" y="724" width="3" height="15" fill="rgb(238,72,12)"/><text x="36.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="740" width="3" height="15" fill="rgb(221,176,46)"/><text x="36.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="756" width="3" height="15" fill="rgb(212,164,33)"/><text x="36.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="772" width="3" height="15" fill="rgb(246,86,4)"/><text x="36.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="788" width="3" height="15" fill="rgb(219,165,2)"/><text x="36.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="804" width="3" height="15" fill="rgb(208,158,17)"/><text x="36.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.22%)</title><rect x="33" y="820" width="3" height="15" fill="rgb(228,146,37)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="836" width="3" height="15" fill="rgb(213,146,17)"/><text x="36.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="852" width="3" height="15" fill="rgb(210,126,32)"/><text x="36.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="868" width="3" height="15" fill="rgb(247,188,16)"/><text x="36.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="884" width="3" height="15" fill="rgb(228,77,11)"/><text x="36.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="900" width="3" height="15" fill="rgb(238,205,6)"/><text x="36.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.22%)</title><rect x="33" y="916" width="3" height="15" fill="rgb(230,182,53)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="932" width="3" height="15" fill="rgb(215,66,45)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="948" width="3" height="15" fill="rgb(241,151,49)"/><text x="36.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="964" width="3" height="15" fill="rgb(246,97,51)"/><text x="36.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="980" width="3" height="15" fill="rgb(214,168,54)"/><text x="36.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="996" width="3" height="15" fill="rgb(212,132,45)"/><text x="36.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1012" width="3" height="15" fill="rgb(246,116,43)"/><text x="36.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="1028" width="3" height="15" fill="rgb(214,33,1)"/><text x="36.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1044" width="3" height="15" fill="rgb(236,22,30)"/><text x="36.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.22%)</title><rect x="33" y="1060" width="3" height="15" fill="rgb(227,81,32)"/><text x="36.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1076" width="3" height="15" fill="rgb(218,91,41)"/><text x="36.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1092" width="3" height="15" fill="rgb(237,206,41)"/><text x="36.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1108" width="3" height="15" fill="rgb(220,47,31)"/><text x="36.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="1124" width="3" height="15" fill="rgb(241,36,6)"/><text x="36.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="1140" width="3" height="15" fill="rgb(217,78,42)"/><text x="36.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="1156" width="3" height="15" fill="rgb(206,40,43)"/><text x="36.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="788" width="2" height="15" fill="rgb(228,130,12)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="804" width="2" height="15" fill="rgb(250,98,17)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="820" width="2" height="15" fill="rgb(233,154,37)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="36" y="836" width="2" height="15" fill="rgb(250,43,15)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="852" width="2" height="15" fill="rgb(215,76,15)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py) (1 samples, 0.22%)</title><rect x="36" y="868" width="2" height="15" fill="rgb(210,42,44)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="884" width="2" height="15" fill="rgb(220,43,49)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="900" width="2" height="15" fill="rgb(252,154,18)"/><text x="39.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="916" width="2" height="15" fill="rgb(230,90,50)"/><text x="39.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="36" y="932" width="2" height="15" fill="rgb(218,155,34)"/><text x="39.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="948" width="2" height="15" fill="rgb(218,4,17)"/><text x="39.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py) (1 samples, 0.22%)</title><rect x="36" y="964" width="2" height="15" fill="rgb(250,192,8)"/><text x="39.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="980" width="2" height="15" fill="rgb(218,204,24)"/><text x="39.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="996" width="2" height="15" fill="rgb(227,144,45)"/><text x="39.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1012" width="2" height="15" fill="rgb(215,116,3)"/><text x="39.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="36" y="1028" width="2" height="15" fill="rgb(212,191,10)"/><text x="39.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1044" width="2" height="15" fill="rgb(213,49,4)"/><text x="39.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/charsetgroupprober.py) (1 samples, 0.22%)</title><rect x="36" y="1060" width="2" height="15" fill="rgb(246,206,28)"/><text x="39.00" y="1070.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 1.56%)</title><rect x="23" y="244" width="18" height="15" fill="rgb(250,27,13)"/><text x="26.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.56%)</title><rect x="23" y="260" width="18" height="15" fill="rgb(222,71,1)"/><text x="26.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.56%)</title><rect x="23" y="276" width="18" height="15" fill="rgb(245,44,8)"/><text x="26.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.56%)</title><rect x="23" y="292" width="18" height="15" fill="rgb(249,9,50)"/><text x="26.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.56%)</title><rect x="23" y="308" width="18" height="15" fill="rgb(231,90,16)"/><text x="26.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.56%)</title><rect x="23" y="324" width="18" height="15" fill="rgb(244,71,46)"/><text x="26.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.67%)</title><rect x="33" y="340" width="8" height="15" fill="rgb(232,86,26)"/><text x="36.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="33" y="356" width="8" height="15" fill="rgb(216,41,29)"/><text x="36.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="33" y="372" width="8" height="15" fill="rgb(244,163,21)"/><text x="36.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="33" y="388" width="8" height="15" fill="rgb(208,106,22)"/><text x="36.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="33" y="404" width="8" height="15" fill="rgb(237,148,10)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="33" y="420" width="8" height="15" fill="rgb(207,163,34)"/><text x="36.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="33" y="436" width="8" height="15" fill="rgb(228,117,16)"/><text x="36.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="33" y="452" width="8" height="15" fill="rgb(239,49,6)"/><text x="36.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="33" y="468" width="8" height="15" fill="rgb(238,28,28)"/><text x="36.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.67%)</title><rect x="33" y="484" width="8" height="15" fill="rgb(216,177,48)"/><text x="36.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="33" y="500" width="8" height="15" fill="rgb(243,117,44)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="33" y="516" width="8" height="15" fill="rgb(226,179,47)"/><text x="36.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="33" y="532" width="8" height="15" fill="rgb(224,156,6)"/><text x="36.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="33" y="548" width="8" height="15" fill="rgb(236,122,20)"/><text x="36.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="33" y="564" width="8" height="15" fill="rgb(230,118,39)"/><text x="36.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.45%)</title><rect x="36" y="580" width="5" height="15" fill="rgb(205,9,36)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="36" y="596" width="5" height="15" fill="rgb(222,33,1)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="36" y="612" width="5" height="15" fill="rgb(254,23,40)"/><text x="39.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="36" y="628" width="5" height="15" fill="rgb(231,54,54)"/><text x="39.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="36" y="644" width="5" height="15" fill="rgb(228,61,9)"/><text x="39.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="36" y="660" width="5" height="15" fill="rgb(216,183,6)"/><text x="39.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.45%)</title><rect x="36" y="676" width="5" height="15" fill="rgb(226,60,43)"/><text x="39.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="36" y="692" width="5" height="15" fill="rgb(213,84,46)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="36" y="708" width="5" height="15" fill="rgb(236,22,34)"/><text x="39.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="36" y="724" width="5" height="15" fill="rgb(213,41,8)"/><text x="39.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="36" y="740" width="5" height="15" fill="rgb(222,62,39)"/><text x="39.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="36" y="756" width="5" height="15" fill="rgb(248,198,36)"/><text x="39.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.45%)</title><rect x="36" y="772" width="5" height="15" fill="rgb(212,179,52)"/><text x="39.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="788" width="3" height="15" fill="rgb(206,151,5)"/><text x="41.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="804" width="3" height="15" fill="rgb(250,116,18)"/><text x="41.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="820" width="3" height="15" fill="rgb(211,104,40)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="836" width="3" height="15" fill="rgb(244,57,49)"/><text x="41.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="852" width="3" height="15" fill="rgb(227,11,2)"/><text x="41.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="868" width="3" height="15" fill="rgb(222,46,54)"/><text x="41.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="884" width="3" height="15" fill="rgb(229,16,2)"/><text x="41.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.22%)</title><rect x="38" y="900" width="3" height="15" fill="rgb(205,82,37)"/><text x="41.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="916" width="3" height="15" fill="rgb(221,44,40)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="932" width="3" height="15" fill="rgb(237,40,17)"/><text x="41.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="948" width="3" height="15" fill="rgb(229,55,8)"/><text x="41.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="964" width="3" height="15" fill="rgb(244,143,33)"/><text x="41.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="980" width="3" height="15" fill="rgb(217,111,36)"/><text x="41.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="996" width="3" height="15" fill="rgb(214,83,32)"/><text x="41.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1012" width="3" height="15" fill="rgb(222,226,24)"/><text x="41.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1028" width="3" height="15" fill="rgb(232,8,38)"/><text x="41.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.22%)</title><rect x="38" y="1044" width="3" height="15" fill="rgb(212,20,41)"/><text x="41.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1060" width="3" height="15" fill="rgb(240,97,2)"/><text x="41.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1076" width="3" height="15" fill="rgb(231,120,9)"/><text x="41.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1092" width="3" height="15" fill="rgb(212,144,36)"/><text x="41.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1108" width="3" height="15" fill="rgb(222,166,36)"/><text x="41.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1124" width="3" height="15" fill="rgb(224,28,41)"/><text x="41.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1140" width="3" height="15" fill="rgb(218,200,30)"/><text x="41.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1156" width="3" height="15" fill="rgb(223,5,15)"/><text x="41.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.22%)</title><rect x="38" y="1172" width="3" height="15" fill="rgb(252,14,29)"/><text x="41.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1188" width="3" height="15" fill="rgb(216,148,13)"/><text x="41.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1204" width="3" height="15" fill="rgb(218,229,39)"/><text x="41.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1220" width="3" height="15" fill="rgb(222,73,15)"/><text x="41.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1236" width="3" height="15" fill="rgb(213,175,13)"/><text x="41.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1252" width="3" height="15" fill="rgb(237,128,44)"/><text x="41.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py) (1 samples, 0.22%)</title><rect x="38" y="1268" width="3" height="15" fill="rgb(231,76,23)"/><text x="41.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1284" width="3" height="15" fill="rgb(215,207,43)"/><text x="41.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1300" width="3" height="15" fill="rgb(235,0,17)"/><text x="41.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1316" width="3" height="15" fill="rgb(223,228,31)"/><text x="41.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1332" width="3" height="15" fill="rgb(253,125,6)"/><text x="41.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1348" width="3" height="15" fill="rgb(241,167,1)"/><text x="41.00" y="1358.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1364" width="3" height="15" fill="rgb(249,88,44)"/><text x="41.00" y="1374.50"></text></g><g><title>&lt;module&gt; (numpy/core/_dtype_ctypes.py) (1 samples, 0.22%)</title><rect x="41" y="500" width="3" height="15" fill="rgb(249,188,27)"/><text x="44.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="516" width="3" height="15" fill="rgb(213,71,8)"/><text x="44.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="532" width="3" height="15" fill="rgb(221,152,27)"/><text x="44.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="548" width="3" height="15" fill="rgb(249,148,36)"/><text x="44.00" y="558.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="564" width="3" height="15" fill="rgb(250,29,24)"/><text x="44.00" y="574.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="580" width="3" height="15" fill="rgb(212,144,37)"/><text x="44.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="596" width="3" height="15" fill="rgb(253,74,4)"/><text x="44.00" y="606.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="41" y="612" width="3" height="15" fill="rgb(205,145,26)"/><text x="44.00" y="622.50"></text></g><g><title>0x7fd3e1a42995 (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="41" y="628" width="3" height="15" fill="rgb(221,137,2)"/><text x="44.00" y="638.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.22%)</title><rect x="41" y="644" width="3" height="15" fill="rgb(221,39,39)"/><text x="44.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.22%)</title><rect x="41" y="660" width="3" height="15" fill="rgb(249,201,21)"/><text x="44.00" y="670.50"></text></g><g><title>0x7fd3e1a42258 (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="41" y="676" width="3" height="15" fill="rgb(248,55,11)"/><text x="44.00" y="686.50"></text></g><g><title>0x7fd3e1a8fd7a (ld-2.29.so) (1 samples, 0.22%)</title><rect x="41" y="692" width="3" height="15" fill="rgb(217,152,41)"/><text x="44.00" y="702.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.22%)</title><rect x="41" y="708" width="3" height="15" fill="rgb(221,189,22)"/><text x="44.00" y="718.50"></text></g><g><title>0x7fd3e1a90345 (ld-2.29.so) (1 samples, 0.22%)</title><rect x="41" y="724" width="3" height="15" fill="rgb(218,173,11)"/><text x="44.00" y="734.50"></text></g><g><title>0x7fd3e1a88fec (ld-2.29.so) (1 samples, 0.22%)</title><rect x="41" y="740" width="3" height="15" fill="rgb(241,37,48)"/><text x="44.00" y="750.50"></text></g><g><title>0x7fd3e1a8756b (ld-2.29.so) (1 samples, 0.22%)</title><rect x="41" y="756" width="3" height="15" fill="rgb(205,72,30)"/><text x="44.00" y="766.50"></text></g><g><title>0x7fd3e1a86952 (ld-2.29.so) (1 samples, 0.22%)</title><rect x="41" y="772" width="3" height="15" fill="rgb(209,13,37)"/><text x="44.00" y="782.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.67%)</title><rect x="41" y="244" width="8" height="15" fill="rgb(215,197,28)"/><text x="44.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="41" y="260" width="8" height="15" fill="rgb(216,160,16)"/><text x="44.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="41" y="276" width="8" height="15" fill="rgb(236,52,36)"/><text x="44.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="41" y="292" width="8" height="15" fill="rgb(251,188,26)"/><text x="44.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="41" y="308" width="8" height="15" fill="rgb(233,203,51)"/><text x="44.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="41" y="324" width="8" height="15" fill="rgb(209,51,5)"/><text x="44.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="41" y="340" width="8" height="15" fill="rgb(219,130,32)"/><text x="44.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="41" y="356" width="8" height="15" fill="rgb(207,167,21)"/><text x="44.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (3 samples, 0.67%)</title><rect x="41" y="372" width="8" height="15" fill="rgb(235,18,1)"/><text x="44.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="41" y="388" width="8" height="15" fill="rgb(211,201,10)"/><text x="44.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="41" y="404" width="8" height="15" fill="rgb(242,72,11)"/><text x="44.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="41" y="420" width="8" height="15" fill="rgb(209,10,28)"/><text x="44.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="41" y="436" width="8" height="15" fill="rgb(217,216,17)"/><text x="44.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="41" y="452" width="8" height="15" fill="rgb(221,90,27)"/><text x="44.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="41" y="468" width="8" height="15" fill="rgb(221,131,11)"/><text x="44.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="41" y="484" width="8" height="15" fill="rgb(218,139,41)"/><text x="44.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (2 samples, 0.45%)</title><rect x="44" y="500" width="5" height="15" fill="rgb(216,78,9)"/><text x="47.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (2 samples, 0.45%)</title><rect x="44" y="516" width="5" height="15" fill="rgb(232,225,1)"/><text x="47.00" y="526.50"></text></g><g><title>decorator (numpy/core/overrides.py) (2 samples, 0.45%)</title><rect x="44" y="532" width="5" height="15" fill="rgb(223,202,13)"/><text x="47.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.56%)</title><rect x="10" y="68" width="42" height="15" fill="rgb(254,220,9)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.56%)</title><rect x="10" y="84" width="42" height="15" fill="rgb(228,20,19)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.56%)</title><rect x="10" y="100" width="42" height="15" fill="rgb(208,188,0)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 3.56%)</title><rect x="10" y="116" width="42" height="15" fill="rgb(224,96,52)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.56%)</title><rect x="10" y="132" width="42" height="15" fill="rgb(254,48,40)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py) (16 samples, 3.56%)</title><rect x="10" y="148" width="42" height="15" fill="rgb(224,175,28)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.56%)</title><rect x="10" y="164" width="42" height="15" fill="rgb(224,70,19)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.56%)</title><rect x="10" y="180" width="42" height="15" fill="rgb(207,220,28)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.45%)</title><rect x="23" y="196" width="29" height="15" fill="rgb(213,25,53)"/><text x="26.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 2.45%)</title><rect x="23" y="212" width="29" height="15" fill="rgb(220,126,42)"/><text x="26.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.45%)</title><rect x="23" y="228" width="29" height="15" fill="rgb(249,145,52)"/><text x="26.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/neural_network/__init__.py) (1 samples, 0.22%)</title><rect x="49" y="244" width="3" height="15" fill="rgb(205,24,54)"/><text x="52.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="260" width="3" height="15" fill="rgb(234,121,7)"/><text x="52.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="276" width="3" height="15" fill="rgb(228,77,54)"/><text x="52.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="292" width="3" height="15" fill="rgb(219,183,25)"/><text x="52.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="49" y="308" width="3" height="15" fill="rgb(247,11,12)"/><text x="52.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="324" width="3" height="15" fill="rgb(209,124,49)"/><text x="52.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.22%)</title><rect x="49" y="340" width="3" height="15" fill="rgb(241,52,48)"/><text x="52.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="356" width="3" height="15" fill="rgb(205,100,51)"/><text x="52.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="372" width="3" height="15" fill="rgb(216,85,36)"/><text x="52.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="388" width="3" height="15" fill="rgb(246,111,26)"/><text x="52.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="49" y="404" width="3" height="15" fill="rgb(217,83,43)"/><text x="52.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="420" width="3" height="15" fill="rgb(227,53,36)"/><text x="52.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py) (1 samples, 0.22%)</title><rect x="49" y="436" width="3" height="15" fill="rgb(240,4,21)"/><text x="52.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="452" width="3" height="15" fill="rgb(232,183,2)"/><text x="52.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="468" width="3" height="15" fill="rgb(210,159,30)"/><text x="52.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="484" width="3" height="15" fill="rgb(242,18,29)"/><text x="52.00" y="494.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="500" width="3" height="15" fill="rgb(210,200,21)"/><text x="52.00" y="510.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="516" width="3" height="15" fill="rgb(213,17,31)"/><text x="52.00" y="526.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.22%)</title><rect x="62" y="180" width="3" height="15" fill="rgb(211,152,6)"/><text x="65.00" y="190.50"></text></g><g><title>0x7fd39f7fdff9 (?) (1 samples, 0.22%)</title><rect x="70" y="212" width="3" height="15" fill="rgb(207,156,38)"/><text x="73.00" y="222.50"></text></g><g><title>0x7fd39f7f8ef6 (?) (1 samples, 0.22%)</title><rect x="70" y="228" width="3" height="15" fill="rgb(228,174,23)"/><text x="73.00" y="238.50"></text></g><g><title>0x7fd39f7ed458 (?) (1 samples, 0.22%)</title><rect x="70" y="244" width="3" height="15" fill="rgb(224,165,31)"/><text x="73.00" y="254.50"></text></g><g><title>0x7fd39f7de081 (?) (1 samples, 0.22%)</title><rect x="70" y="260" width="3" height="15" fill="rgb(232,48,19)"/><text x="73.00" y="270.50"></text></g><g><title>0x7fd39f7dcfd6 (?) (1 samples, 0.22%)</title><rect x="70" y="276" width="3" height="15" fill="rgb(209,164,15)"/><text x="73.00" y="286.50"></text></g><g><title>0x7fd3d12966f5 (?) (1 samples, 0.22%)</title><rect x="70" y="292" width="3" height="15" fill="rgb(243,218,6)"/><text x="73.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="70" y="308" width="3" height="15" fill="rgb(227,90,28)"/><text x="73.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 0.67%)</title><rect x="73" y="212" width="7" height="15" fill="rgb(251,184,31)"/><text x="76.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="73" y="228" width="7" height="15" fill="rgb(246,72,27)"/><text x="76.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="73" y="244" width="7" height="15" fill="rgb(213,10,44)"/><text x="76.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="73" y="260" width="7" height="15" fill="rgb(239,154,3)"/><text x="76.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="73" y="276" width="7" height="15" fill="rgb(206,68,40)"/><text x="76.00" y="286.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="80" y="228" width="3" height="15" fill="rgb(233,170,18)"/><text x="83.00" y="238.50"></text></g><g><title>0x7fd3e17ba9d9 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="80" y="244" width="3" height="15" fill="rgb(230,195,1)"/><text x="83.00" y="254.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="83" y="292" width="3" height="15" fill="rgb(250,9,30)"/><text x="86.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="83" y="308" width="3" height="15" fill="rgb(206,26,40)"/><text x="86.00" y="318.50"></text></g><g><title>0x7fd3e17baa33 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="83" y="324" width="3" height="15" fill="rgb(212,67,8)"/><text x="86.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="86" y="292" width="2" height="15" fill="rgb(224,56,18)"/><text x="89.00" y="302.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="86" y="308" width="2" height="15" fill="rgb(207,187,17)"/><text x="89.00" y="318.50"></text></g><g><title>0x7fd3e17ba998 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="91" y="356" width="3" height="15" fill="rgb(220,197,39)"/><text x="94.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="88" y="340" width="8" height="15" fill="rgb(206,223,50)"/><text x="91.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="94" y="356" width="2" height="15" fill="rgb(232,115,54)"/><text x="97.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="94" y="372" width="2" height="15" fill="rgb(230,6,53)"/><text x="97.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="94" y="388" width="2" height="15" fill="rgb(212,120,16)"/><text x="97.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="94" y="404" width="2" height="15" fill="rgb(241,182,35)"/><text x="97.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="94" y="420" width="2" height="15" fill="rgb(251,38,34)"/><text x="97.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="94" y="436" width="2" height="15" fill="rgb(235,47,6)"/><text x="97.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="94" y="452" width="2" height="15" fill="rgb(205,158,13)"/><text x="97.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="94" y="468" width="2" height="15" fill="rgb(215,188,23)"/><text x="97.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="94" y="484" width="2" height="15" fill="rgb(228,14,35)"/><text x="97.00" y="494.50"></text></g><g><title>onnxruntime::Cast&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="96" y="340" width="5" height="15" fill="rgb(207,129,0)"/><text x="99.00" y="350.50"></text></g><g><title>0x7fd3e17ba906 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="99" y="356" width="2" height="15" fill="rgb(209,86,45)"/><text x="102.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="101" y="340" width="3" height="15" fill="rgb(210,71,39)"/><text x="104.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="101" y="356" width="3" height="15" fill="rgb(222,120,53)"/><text x="104.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="101" y="372" width="3" height="15" fill="rgb(223,147,24)"/><text x="104.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="101" y="388" width="3" height="15" fill="rgb(231,25,36)"/><text x="104.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="101" y="404" width="3" height="15" fill="rgb(236,69,44)"/><text x="104.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="101" y="420" width="3" height="15" fill="rgb(249,188,5)"/><text x="104.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="101" y="436" width="3" height="15" fill="rgb(205,99,30)"/><text x="104.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="101" y="452" width="3" height="15" fill="rgb(217,57,50)"/><text x="104.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="101" y="468" width="3" height="15" fill="rgb(238,87,31)"/><text x="104.00" y="478.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="101" y="484" width="3" height="15" fill="rgb(216,11,36)"/><text x="104.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="104" y="388" width="3" height="15" fill="rgb(245,215,26)"/><text x="107.00" y="398.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="104" y="404" width="3" height="15" fill="rgb(239,118,18)"/><text x="107.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="104" y="340" width="5" height="15" fill="rgb(235,78,47)"/><text x="107.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="104" y="356" width="5" height="15" fill="rgb(221,83,46)"/><text x="107.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="104" y="372" width="5" height="15" fill="rgb(240,26,11)"/><text x="107.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="107" y="388" width="2" height="15" fill="rgb(219,25,17)"/><text x="110.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="107" y="404" width="2" height="15" fill="rgb(218,168,22)"/><text x="110.00" y="414.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="107" y="420" width="2" height="15" fill="rgb(226,47,52)"/><text x="110.00" y="430.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="112" y="356" width="3" height="15" fill="rgb(235,84,45)"/><text x="115.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="112" y="372" width="3" height="15" fill="rgb(212,158,43)"/><text x="115.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="112" y="388" width="3" height="15" fill="rgb(221,109,41)"/><text x="115.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="112" y="404" width="3" height="15" fill="rgb(241,92,48)"/><text x="115.00" y="414.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.89%)</title><rect x="109" y="340" width="11" height="15" fill="rgb(217,125,25)"/><text x="112.00" y="350.50"></text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="115" y="356" width="5" height="15" fill="rgb(250,25,17)"/><text x="118.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.45%)</title><rect x="115" y="372" width="5" height="15" fill="rgb(252,181,22)"/><text x="118.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.45%)</title><rect x="115" y="388" width="5" height="15" fill="rgb(252,76,36)"/><text x="118.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.45%)</title><rect x="115" y="404" width="5" height="15" fill="rgb(221,127,22)"/><text x="118.00" y="414.50"></text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.45%)</title><rect x="115" y="420" width="5" height="15" fill="rgb(208,2,49)"/><text x="118.00" y="430.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.45%)</title><rect x="115" y="436" width="5" height="15" fill="rgb(218,49,29)"/><text x="118.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.45%)</title><rect x="115" y="452" width="5" height="15" fill="rgb(209,67,5)"/><text x="118.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="120" y="340" width="3" height="15" fill="rgb(238,75,37)"/><text x="123.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="120" y="356" width="3" height="15" fill="rgb(239,91,47)"/><text x="123.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="120" y="372" width="3" height="15" fill="rgb(206,34,53)"/><text x="123.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="120" y="388" width="3" height="15" fill="rgb(233,226,52)"/><text x="123.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolTempl&lt;Eigen::StlThreadEnvironment&gt;::CurrentThreadId (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="123" y="420" width="2" height="15" fill="rgb(225,160,15)"/><text x="126.00" y="430.50"></text></g><g><title>0x7fd3e1939e06 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="125" y="436" width="3" height="15" fill="rgb(244,103,32)"/><text x="128.00" y="446.50"></text></g><g><title>0x7fd3e1939e3e (libm-2.29.so) (1 samples, 0.22%)</title><rect x="128" y="436" width="2" height="15" fill="rgb(253,123,24)"/><text x="131.00" y="446.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.89%)</title><rect x="123" y="372" width="10" height="15" fill="rgb(227,82,6)"/><text x="126.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.89%)</title><rect x="123" y="388" width="10" height="15" fill="rgb(225,13,15)"/><text x="126.00" y="398.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_18TensorCwiseUnaryOpINS2_13scalar_exp_opIfEEKNS1_19TensorCwiseBinaryOpINS2_20scalar_difference_opIKfSF_EEKNS5_INS6_ISF_Li2ELi1ElEELi16ES8_EEKNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSL_IiJSN_EEEKNS1_18TensorForcedEvalOpIKNS1_17TensorReductionOpINS2_10MaxReducerIfEEKNSL_ISN_JEEESJ_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS1C_RKS1D_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1N_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.89%)</title><rect x="123" y="404" width="10" height="15" fill="rgb(245,136,26)"/><text x="126.00" y="414.50"></text></g><g><title>Eigen::internal::TensorBlockCwiseUnaryIO&lt;Eigen::internal::scalar_exp_op&lt;float&gt;, long, float, 2, 1&gt;::Run&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="125" y="420" width="8" height="15" fill="rgb(249,191,38)"/><text x="128.00" y="430.50"></text></g><g><title>0x7fd3e1939e71 (libm-2.29.so) (1 samples, 0.22%)</title><rect x="130" y="436" width="3" height="15" fill="rgb(230,156,14)"/><text x="133.00" y="446.50"></text></g><g><title>Eigen::internal::aligned_malloc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="133" y="372" width="3" height="15" fill="rgb(211,100,19)"/><text x="136.00" y="382.50"></text></g><g><title>onnxruntime::Softmax&lt;float, false&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.34%)</title><rect x="123" y="340" width="15" height="15" fill="rgb(217,202,3)"/><text x="126.00" y="350.50"></text></g><g><title>onnxruntime::ComputeSoftMax&lt;Eigen::ThreadPoolDevice, float&gt; [clone .constprop.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.34%)</title><rect x="123" y="356" width="15" height="15" fill="rgb(210,38,34)"/><text x="126.00" y="366.50"></text></g><g><title>_ZN5Eigen8internal14TensorExecutorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_19TensorCwiseBinaryOpINS0_17scalar_product_opIffEEKS7_KNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS0_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS0_10SumReducerIfEEKNSD_ISF_JEEESB_S6_EEEEEEEEEEEEEENS_16ThreadPoolDeviceELb1ELb1EE3runERS17_RKS18_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="136" y="372" width="2" height="15" fill="rgb(224,102,17)"/><text x="139.00" y="382.50"></text></g><g><title>Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_inverse_op&lt;float&gt;, Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="136" y="388" width="2" height="15" fill="rgb(252,108,36)"/><text x="139.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="136" y="404" width="2" height="15" fill="rgb(213,23,40)"/><text x="139.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorEvalToOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNS1_9IndexListINS1_10type2indexILl1EEEJEEEKNS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEESJ_EEEESJ_EENS1_16ThreadPoolDeviceELb1ELb0EE3runERSR_RKSS_EUlllE_E9_M_invokeERKSt9_Any_dataOlS12_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="136" y="420" width="2" height="15" fill="rgb(226,134,40)"/><text x="139.00" y="430.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 4.45%)</title><rect x="88" y="308" width="53" height="15" fill="rgb(207,181,17)"/><text x="91.00" y="318.50">onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 4.45%)</title><rect x="88" y="324" width="53" height="15" fill="rgb(233,44,8)"/><text x="91.00" y="334.50">onnxr..</text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="138" y="340" width="3" height="15" fill="rgb(237,118,5)"/><text x="141.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="138" y="356" width="3" height="15" fill="rgb(205,110,35)"/><text x="141.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="138" y="372" width="3" height="15" fill="rgb(226,121,19)"/><text x="141.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="138" y="388" width="3" height="15" fill="rgb(238,99,23)"/><text x="141.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="138" y="404" width="3" height="15" fill="rgb(254,50,54)"/><text x="141.00" y="414.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 5.12%)</title><rect x="83" y="260" width="61" height="15" fill="rgb(218,110,46)"/><text x="86.00" y="270.50">onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 5.12%)</title><rect x="83" y="276" width="61" height="15" fill="rgb(225,189,28)"/><text x="86.00" y="286.50">onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 4.68%)</title><rect x="88" y="292" width="56" height="15" fill="rgb(216,189,33)"/><text x="91.00" y="302.50">onnxr..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="141" y="308" width="3" height="15" fill="rgb(219,98,25)"/><text x="144.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="141" y="324" width="3" height="15" fill="rgb(216,104,41)"/><text x="144.00" y="334.50"></text></g><g><title>0x7fd39f7c5840 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="141" y="340" width="3" height="15" fill="rgb(244,2,43)"/><text x="144.00" y="350.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="144" y="260" width="5" height="15" fill="rgb(252,140,8)"/><text x="147.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="146" y="276" width="3" height="15" fill="rgb(224,137,3)"/><text x="149.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="146" y="292" width="3" height="15" fill="rgb(213,58,5)"/><text x="149.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="146" y="308" width="3" height="15" fill="rgb(207,85,15)"/><text x="149.00" y="318.50"></text></g><g><title>onnxruntime::PrimitiveDataTypeBase::AsPrimitiveDataType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="146" y="324" width="3" height="15" fill="rgb(250,55,42)"/><text x="149.00" y="334.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="149" y="260" width="2" height="15" fill="rgb(213,83,27)"/><text x="152.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.22%)</title><rect x="149" y="276" width="2" height="15" fill="rgb(254,20,44)"/><text x="152.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="149" y="292" width="2" height="15" fill="rgb(216,219,8)"/><text x="152.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="149" y="308" width="2" height="15" fill="rgb(237,84,7)"/><text x="152.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 6.01%)</title><rect x="83" y="244" width="71" height="15" fill="rgb(221,76,7)"/><text x="86.00" y="254.50">onnxrunt..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="151" y="260" width="3" height="15" fill="rgb(242,5,4)"/><text x="154.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="151" y="276" width="3" height="15" fill="rgb(215,67,37)"/><text x="154.00" y="286.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="154" y="244" width="3" height="15" fill="rgb(217,69,31)"/><text x="157.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="154" y="260" width="3" height="15" fill="rgb(211,36,18)"/><text x="157.00" y="270.50"></text></g><g><title>profile_ort (bench_MLPClassifier_default_m_cl_1_50_12_float_.py) (41 samples, 9.13%)</title><rect x="52" y="68" width="107" height="15" fill="rgb(241,12,12)"/><text x="55.00" y="78.50">profile_ort (..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py) (41 samples, 9.13%)</title><rect x="52" y="84" width="107" height="15" fill="rgb(249,32,39)"/><text x="55.00" y="94.50">setup_profile..</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py) (41 samples, 9.13%)</title><rect x="52" y="100" width="107" height="15" fill="rgb(225,61,11)"/><text x="55.00" y="110.50">profile (benc..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (41 samples, 9.13%)</title><rect x="52" y="116" width="107" height="15" fill="rgb(232,208,12)"/><text x="55.00" y="126.50">time_predict ..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (40 samples, 8.91%)</title><rect x="54" y="132" width="105" height="15" fill="rgb(226,229,14)"/><text x="57.00" y="142.50">&lt;lambda&gt; (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (40 samples, 8.91%)</title><rect x="54" y="148" width="105" height="15" fill="rgb(209,41,47)"/><text x="57.00" y="158.50">run (mlprodi..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (39 samples, 8.69%)</title><rect x="57" y="164" width="102" height="15" fill="rgb(231,221,32)"/><text x="60.00" y="174.50">_run_whole_r..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (36 samples, 8.02%)</title><rect x="65" y="180" width="94" height="15" fill="rgb(229,157,27)"/><text x="68.00" y="190.50">run (mlprod..</text></g><g><title>run (onnxruntime/capi/session.py) (35 samples, 7.80%)</title><rect x="67" y="196" width="92" height="15" fill="rgb(206,46,25)"/><text x="70.00" y="206.50">run (onnxr..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 6.68%)</title><rect x="80" y="212" width="79" height="15" fill="rgb(252,208,7)"/><text x="83.00" y="222.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 6.46%)</title><rect x="83" y="228" width="76" height="15" fill="rgb(224,190,17)"/><text x="86.00" y="238.50">void pyb..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="157" y="244" width="2" height="15" fill="rgb(223,60,27)"/><text x="160.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (4 samples, 0.89%)</title><rect x="359" y="196" width="11" height="15" fill="rgb(221,20,34)"/><text x="362.00" y="206.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.45%)</title><rect x="383" y="244" width="5" height="15" fill="rgb(213,137,52)"/><text x="386.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.22%)</title><rect x="385" y="260" width="3" height="15" fill="rgb(242,143,42)"/><text x="388.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="388" y="244" width="3" height="15" fill="rgb(245,64,12)"/><text x="391.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="388" y="260" width="3" height="15" fill="rgb(209,135,0)"/><text x="391.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.22%)</title><rect x="388" y="276" width="3" height="15" fill="rgb(210,174,36)"/><text x="391.00" y="286.50"></text></g><g><title>arraymapiter_dealloc (mapping.c) (1 samples, 0.22%)</title><rect x="391" y="244" width="2" height="15" fill="rgb(210,15,48)"/><text x="394.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.22%)</title><rect x="391" y="260" width="2" height="15" fill="rgb(221,222,27)"/><text x="394.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="391" y="276" width="2" height="15" fill="rgb(246,39,8)"/><text x="394.00" y="286.50"></text></g><g><title>0x7fd3e09dc7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="393" y="260" width="3" height="15" fill="rgb(223,69,3)"/><text x="396.00" y="270.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (2 samples, 0.45%)</title><rect x="398" y="292" width="6" height="15" fill="rgb(244,30,30)"/><text x="401.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (2 samples, 0.45%)</title><rect x="398" y="308" width="6" height="15" fill="rgb(209,78,15)"/><text x="401.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.22%)</title><rect x="401" y="324" width="3" height="15" fill="rgb(234,200,33)"/><text x="404.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.22%)</title><rect x="401" y="340" width="3" height="15" fill="rgb(234,134,47)"/><text x="404.00" y="350.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (4 samples, 0.89%)</title><rect x="396" y="276" width="10" height="15" fill="rgb(247,215,46)"/><text x="399.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.22%)</title><rect x="404" y="292" width="2" height="15" fill="rgb(249,190,38)"/><text x="407.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c) (5 samples, 1.11%)</title><rect x="396" y="260" width="13" height="15" fill="rgb(251,85,6)"/><text x="399.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="406" y="276" width="3" height="15" fill="rgb(236,42,0)"/><text x="409.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (13 samples, 2.90%)</title><rect x="383" y="212" width="34" height="15" fill="rgb(244,196,41)"/><text x="386.00" y="222.50">_r..</text></g><g><title>array_subscript (mapping.c) (13 samples, 2.90%)</title><rect x="383" y="228" width="34" height="15" fill="rgb(234,65,3)"/><text x="386.00" y="238.50">ar..</text></g><g><title>prepare_index (mapping.c) (9 samples, 2.00%)</title><rect x="393" y="244" width="24" height="15" fill="rgb(205,138,14)"/><text x="396.00" y="254.50">p..</text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (3 samples, 0.67%)</title><rect x="409" y="260" width="8" height="15" fill="rgb(222,11,22)"/><text x="412.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (3 samples, 0.67%)</title><rect x="409" y="276" width="8" height="15" fill="rgb(220,214,23)"/><text x="412.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="425" y="292" width="2" height="15" fill="rgb(223,64,25)"/><text x="428.00" y="302.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.22%)</title><rect x="427" y="292" width="3" height="15" fill="rgb(213,105,22)"/><text x="430.00" y="302.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.22%)</title><rect x="427" y="308" width="3" height="15" fill="rgb(216,196,12)"/><text x="430.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.67%)</title><rect x="425" y="260" width="8" height="15" fill="rgb(244,168,8)"/><text x="428.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.67%)</title><rect x="425" y="276" width="8" height="15" fill="rgb(252,111,36)"/><text x="428.00" y="286.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.22%)</title><rect x="430" y="292" width="3" height="15" fill="rgb(240,37,21)"/><text x="433.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (7 samples, 1.56%)</title><rect x="417" y="212" width="18" height="15" fill="rgb(226,81,4)"/><text x="420.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (5 samples, 1.11%)</title><rect x="422" y="228" width="13" height="15" fill="rgb(253,168,43)"/><text x="425.00" y="238.50"></text></g><g><title>array_astype (methods.c) (4 samples, 0.89%)</title><rect x="425" y="244" width="10" height="15" fill="rgb(244,11,35)"/><text x="428.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.22%)</title><rect x="433" y="260" width="2" height="15" fill="rgb(220,121,3)"/><text x="436.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.22%)</title><rect x="433" y="276" width="2" height="15" fill="rgb(206,162,52)"/><text x="436.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.22%)</title><rect x="433" y="292" width="2" height="15" fill="rgb(246,174,12)"/><text x="436.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="433" y="308" width="2" height="15" fill="rgb(252,129,44)"/><text x="436.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.22%)</title><rect x="433" y="324" width="2" height="15" fill="rgb(216,134,11)"/><text x="436.00" y="334.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.22%)</title><rect x="438" y="276" width="3" height="15" fill="rgb(218,85,2)"/><text x="441.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.22%)</title><rect x="438" y="292" width="3" height="15" fill="rgb(217,117,49)"/><text x="441.00" y="302.50"></text></g><g><title>gentype_alloc (scalartypes.c.src) (1 samples, 0.22%)</title><rect x="438" y="308" width="3" height="15" fill="rgb(207,219,8)"/><text x="441.00" y="318.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.45%)</title><rect x="438" y="244" width="5" height="15" fill="rgb(228,228,33)"/><text x="441.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.45%)</title><rect x="438" y="260" width="5" height="15" fill="rgb(230,23,38)"/><text x="441.00" y="270.50"></text></g><g><title>array_length (mapping.c) (1 samples, 0.22%)</title><rect x="441" y="276" width="2" height="15" fill="rgb(245,183,0)"/><text x="444.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (4 samples, 0.89%)</title><rect x="435" y="212" width="11" height="15" fill="rgb(253,205,37)"/><text x="438.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 0.89%)</title><rect x="435" y="228" width="11" height="15" fill="rgb(246,5,33)"/><text x="438.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.22%)</title><rect x="443" y="244" width="3" height="15" fill="rgb(230,4,11)"/><text x="446.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.22%)</title><rect x="443" y="260" width="3" height="15" fill="rgb(241,66,37)"/><text x="446.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="443" y="276" width="3" height="15" fill="rgb(230,197,25)"/><text x="446.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.22%)</title><rect x="443" y="292" width="3" height="15" fill="rgb(226,16,48)"/><text x="446.00" y="302.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.22%)</title><rect x="443" y="308" width="3" height="15" fill="rgb(208,30,45)"/><text x="446.00" y="318.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.22%)</title><rect x="443" y="324" width="3" height="15" fill="rgb(224,96,37)"/><text x="446.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.22%)</title><rect x="446" y="212" width="2" height="15" fill="rgb(216,204,44)"/><text x="449.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.22%)</title><rect x="446" y="228" width="2" height="15" fill="rgb(221,58,8)"/><text x="449.00" y="238.50"></text></g><g><title>array_shape_get (getset.c) (1 samples, 0.22%)</title><rect x="477" y="244" width="3" height="15" fill="rgb(249,87,18)"/><text x="480.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.22%)</title><rect x="480" y="260" width="3" height="15" fill="rgb(209,37,2)"/><text x="483.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.22%)</title><rect x="480" y="276" width="3" height="15" fill="rgb(234,98,35)"/><text x="483.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.22%)</title><rect x="480" y="292" width="3" height="15" fill="rgb(237,97,11)"/><text x="483.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="480" y="308" width="3" height="15" fill="rgb(250,114,12)"/><text x="483.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="483" y="276" width="2" height="15" fill="rgb(254,19,26)"/><text x="486.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.22%)</title><rect x="483" y="292" width="2" height="15" fill="rgb(238,11,20)"/><text x="486.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.22%)</title><rect x="483" y="308" width="2" height="15" fill="rgb(213,157,30)"/><text x="486.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.22%)</title><rect x="483" y="324" width="2" height="15" fill="rgb(232,29,46)"/><text x="486.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="483" y="340" width="2" height="15" fill="rgb(248,36,35)"/><text x="486.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (10 samples, 2.23%)</title><rect x="462" y="228" width="26" height="15" fill="rgb(245,218,21)"/><text x="465.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.67%)</title><rect x="480" y="244" width="8" height="15" fill="rgb(254,157,7)"/><text x="483.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.45%)</title><rect x="483" y="260" width="5" height="15" fill="rgb(206,204,49)"/><text x="486.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.22%)</title><rect x="485" y="276" width="3" height="15" fill="rgb(220,75,35)"/><text x="488.00" y="286.50"></text></g><g><title>0x7fd3e09ddc90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="485" y="292" width="3" height="15" fill="rgb(230,116,29)"/><text x="488.00" y="302.50"></text></g><g><title>0x7fd3e1898df3 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="490" y="276" width="3" height="15" fill="rgb(206,80,5)"/><text x="493.00" y="286.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.22%)</title><rect x="493" y="292" width="3" height="15" fill="rgb(239,60,27)"/><text x="496.00" y="302.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (1 samples, 0.22%)</title><rect x="496" y="372" width="2" height="15" fill="rgb(233,109,25)"/><text x="499.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.22%)</title><rect x="498" y="372" width="3" height="15" fill="rgb(220,227,16)"/><text x="501.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="498" y="388" width="3" height="15" fill="rgb(227,62,39)"/><text x="501.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.22%)</title><rect x="498" y="404" width="3" height="15" fill="rgb(207,215,18)"/><text x="501.00" y="414.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (4 samples, 0.89%)</title><rect x="493" y="276" width="11" height="15" fill="rgb(234,183,31)"/><text x="496.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.67%)</title><rect x="496" y="292" width="8" height="15" fill="rgb(211,195,30)"/><text x="499.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (3 samples, 0.67%)</title><rect x="496" y="308" width="8" height="15" fill="rgb(248,217,32)"/><text x="499.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 0.67%)</title><rect x="496" y="324" width="8" height="15" fill="rgb(232,54,9)"/><text x="499.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (3 samples, 0.67%)</title><rect x="496" y="340" width="8" height="15" fill="rgb(220,96,8)"/><text x="499.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (3 samples, 0.67%)</title><rect x="496" y="356" width="8" height="15" fill="rgb(207,27,44)"/><text x="499.00" y="366.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="501" y="372" width="3" height="15" fill="rgb(234,112,29)"/><text x="504.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.22%)</title><rect x="504" y="292" width="2" height="15" fill="rgb(245,141,45)"/><text x="507.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.22%)</title><rect x="504" y="308" width="2" height="15" fill="rgb(222,64,14)"/><text x="507.00" y="318.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.45%)</title><rect x="504" y="276" width="5" height="15" fill="rgb(229,56,25)"/><text x="507.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.22%)</title><rect x="506" y="292" width="3" height="15" fill="rgb(219,184,41)"/><text x="509.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.22%)</title><rect x="506" y="308" width="3" height="15" fill="rgb(233,40,40)"/><text x="509.00" y="318.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.22%)</title><rect x="506" y="324" width="3" height="15" fill="rgb(238,165,34)"/><text x="509.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.22%)</title><rect x="519" y="324" width="3" height="15" fill="rgb(206,101,39)"/><text x="522.00" y="334.50"></text></g><g><title>0x7fd3e09dd9d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="519" y="340" width="3" height="15" fill="rgb(205,108,31)"/><text x="522.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (14 samples, 3.12%)</title><rect x="488" y="228" width="37" height="15" fill="rgb(247,119,0)"/><text x="491.00" y="238.50">_ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (14 samples, 3.12%)</title><rect x="488" y="244" width="37" height="15" fill="rgb(217,48,23)"/><text x="491.00" y="254.50">_ru..</text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (14 samples, 3.12%)</title><rect x="488" y="260" width="37" height="15" fill="rgb(216,24,7)"/><text x="491.00" y="270.50">_ar..</text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (6 samples, 1.34%)</title><rect x="509" y="276" width="16" height="15" fill="rgb(215,144,12)"/><text x="512.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.11%)</title><rect x="511" y="292" width="14" height="15" fill="rgb(253,83,36)"/><text x="514.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (5 samples, 1.11%)</title><rect x="511" y="308" width="14" height="15" fill="rgb(244,139,28)"/><text x="514.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.22%)</title><rect x="522" y="324" width="3" height="15" fill="rgb(227,116,34)"/><text x="525.00" y="334.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="522" y="340" width="3" height="15" fill="rgb(220,177,1)"/><text x="525.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_identity.py) (2 samples, 0.45%)</title><rect x="525" y="228" width="5" height="15" fill="rgb(232,165,48)"/><text x="528.00" y="238.50"></text></g><g><title>0x7fd3e17db1d6 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="527" y="244" width="3" height="15" fill="rgb(219,109,43)"/><text x="530.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="546" y="260" width="2" height="15" fill="rgb(253,198,10)"/><text x="549.00" y="270.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.22%)</title><rect x="548" y="260" width="3" height="15" fill="rgb(222,36,9)"/><text x="551.00" y="270.50"></text></g><g><title>arrayflags_getitem (flagsobject.c) (1 samples, 0.22%)</title><rect x="551" y="260" width="3" height="15" fill="rgb(248,209,10)"/><text x="554.00" y="270.50"></text></g><g><title>PyArray_ResolveWritebackIfCopy (arrayobject.c) (1 samples, 0.22%)</title><rect x="561" y="340" width="3" height="15" fill="rgb(232,142,42)"/><text x="564.00" y="350.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c) (1 samples, 0.22%)</title><rect x="561" y="356" width="3" height="15" fill="rgb(213,161,41)"/><text x="564.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.22%)</title><rect x="561" y="372" width="3" height="15" fill="rgb(250,100,9)"/><text x="564.00" y="382.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="561" y="388" width="3" height="15" fill="rgb(231,126,41)"/><text x="564.00" y="398.50"></text></g><g><title>gemv (cblasfuncs.c) (2 samples, 0.45%)</title><rect x="564" y="340" width="5" height="15" fill="rgb(207,121,17)"/><text x="567.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.45%)</title><rect x="564" y="356" width="5" height="15" fill="rgb(207,51,22)"/><text x="567.00" y="366.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.45%)</title><rect x="564" y="372" width="5" height="15" fill="rgb(225,11,37)"/><text x="567.00" y="382.50"></text></g><g><title>sgemv_kernel_4x8 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="567" y="388" width="2" height="15" fill="rgb(209,50,30)"/><text x="570.00" y="398.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.22%)</title><rect x="569" y="356" width="3" height="15" fill="rgb(207,78,0)"/><text x="572.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="569" y="372" width="3" height="15" fill="rgb(229,166,0)"/><text x="572.00" y="382.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (7 samples, 1.56%)</title><rect x="556" y="292" width="19" height="15" fill="rgb(250,38,20)"/><text x="559.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (6 samples, 1.34%)</title><rect x="559" y="308" width="16" height="15" fill="rgb(225,61,9)"/><text x="562.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (6 samples, 1.34%)</title><rect x="559" y="324" width="16" height="15" fill="rgb(249,8,28)"/><text x="562.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (2 samples, 0.45%)</title><rect x="569" y="340" width="6" height="15" fill="rgb(230,108,16)"/><text x="572.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.22%)</title><rect x="572" y="356" width="3" height="15" fill="rgb(206,98,42)"/><text x="575.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.22%)</title><rect x="572" y="372" width="3" height="15" fill="rgb(226,121,52)"/><text x="575.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="572" y="388" width="3" height="15" fill="rgb(228,150,52)"/><text x="575.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (18 samples, 4.01%)</title><rect x="530" y="228" width="47" height="15" fill="rgb(250,1,16)"/><text x="533.00" y="238.50">_run..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (16 samples, 3.56%)</title><rect x="535" y="244" width="42" height="15" fill="rgb(243,45,15)"/><text x="538.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (9 samples, 2.00%)</title><rect x="554" y="260" width="23" height="15" fill="rgb(205,33,47)"/><text x="557.00" y="270.50">d..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 1.78%)</title><rect x="556" y="276" width="21" height="15" fill="rgb(226,67,52)"/><text x="559.00" y="286.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.22%)</title><rect x="575" y="292" width="2" height="15" fill="rgb(206,111,26)"/><text x="578.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="580" y="276" width="2" height="15" fill="rgb(234,190,6)"/><text x="583.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="582" y="276" width="3" height="15" fill="rgb(221,28,0)"/><text x="585.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="582" y="292" width="3" height="15" fill="rgb(228,55,33)"/><text x="585.00" y="302.50"></text></g><g><title>FLOAT_maximum (loops.c.src) (1 samples, 0.22%)</title><rect x="582" y="308" width="3" height="15" fill="rgb(238,189,27)"/><text x="585.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.22%)</title><rect x="582" y="324" width="3" height="15" fill="rgb(226,210,22)"/><text x="585.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.22%)</title><rect x="582" y="340" width="3" height="15" fill="rgb(235,190,41)"/><text x="585.00" y="350.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.22%)</title><rect x="582" y="356" width="3" height="15" fill="rgb(216,21,21)"/><text x="585.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.22%)</title><rect x="585" y="276" width="3" height="15" fill="rgb(212,91,54)"/><text x="588.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.22%)</title><rect x="585" y="292" width="3" height="15" fill="rgb(215,46,7)"/><text x="588.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.22%)</title><rect x="585" y="308" width="3" height="15" fill="rgb(210,189,44)"/><text x="588.00" y="318.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.22%)</title><rect x="585" y="324" width="3" height="15" fill="rgb(214,124,49)"/><text x="588.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.22%)</title><rect x="585" y="340" width="3" height="15" fill="rgb(218,213,52)"/><text x="588.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py) (5 samples, 1.11%)</title><rect x="577" y="228" width="13" height="15" fill="rgb(243,66,3)"/><text x="580.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.11%)</title><rect x="577" y="244" width="13" height="15" fill="rgb(231,157,6)"/><text x="580.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.89%)</title><rect x="580" y="260" width="10" height="15" fill="rgb(210,97,32)"/><text x="583.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.22%)</title><rect x="588" y="276" width="2" height="15" fill="rgb(210,74,17)"/><text x="591.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.67%)</title><rect x="596" y="308" width="7" height="15" fill="rgb(248,37,0)"/><text x="599.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.67%)</title><rect x="596" y="324" width="7" height="15" fill="rgb(245,18,21)"/><text x="599.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.67%)</title><rect x="596" y="340" width="7" height="15" fill="rgb(225,126,12)"/><text x="599.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.45%)</title><rect x="598" y="356" width="5" height="15" fill="rgb(209,170,21)"/><text x="601.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.45%)</title><rect x="598" y="372" width="5" height="15" fill="rgb(253,15,49)"/><text x="601.00" y="382.50"></text></g><g><title>0x7fd3e1898fbc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="601" y="388" width="2" height="15" fill="rgb(251,48,7)"/><text x="604.00" y="398.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="606" y="404" width="3" height="15" fill="rgb(243,29,52)"/><text x="609.00" y="414.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c) (2 samples, 0.45%)</title><rect x="606" y="356" width="5" height="15" fill="rgb(251,88,4)"/><text x="609.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.45%)</title><rect x="606" y="372" width="5" height="15" fill="rgb(207,96,37)"/><text x="609.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.45%)</title><rect x="606" y="388" width="5" height="15" fill="rgb(214,217,32)"/><text x="609.00" y="398.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.22%)</title><rect x="609" y="404" width="2" height="15" fill="rgb(228,24,39)"/><text x="612.00" y="414.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c) (1 samples, 0.22%)</title><rect x="611" y="356" width="3" height="15" fill="rgb(226,200,52)"/><text x="614.00" y="366.50"></text></g><g><title>array_max (methods.c) (8 samples, 1.78%)</title><rect x="596" y="244" width="21" height="15" fill="rgb(220,108,45)"/><text x="599.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c) (8 samples, 1.78%)</title><rect x="596" y="260" width="21" height="15" fill="rgb(214,168,0)"/><text x="599.00" y="270.50"></text></g><g><title>_amax (numpy/core/_methods.py) (8 samples, 1.78%)</title><rect x="596" y="276" width="21" height="15" fill="rgb(226,176,16)"/><text x="599.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (8 samples, 1.78%)</title><rect x="596" y="292" width="21" height="15" fill="rgb(219,178,39)"/><text x="599.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 1.11%)</title><rect x="603" y="308" width="14" height="15" fill="rgb(237,183,0)"/><text x="606.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.11%)</title><rect x="603" y="324" width="14" height="15" fill="rgb(212,104,46)"/><text x="606.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (5 samples, 1.11%)</title><rect x="603" y="340" width="14" height="15" fill="rgb(250,58,15)"/><text x="606.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.22%)</title><rect x="614" y="356" width="3" height="15" fill="rgb(209,95,10)"/><text x="617.00" y="366.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.22%)</title><rect x="614" y="372" width="3" height="15" fill="rgb(205,129,10)"/><text x="617.00" y="382.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.22%)</title><rect x="617" y="244" width="2" height="15" fill="rgb(235,14,41)"/><text x="620.00" y="254.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.22%)</title><rect x="617" y="260" width="2" height="15" fill="rgb(210,223,27)"/><text x="620.00" y="270.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.22%)</title><rect x="617" y="276" width="2" height="15" fill="rgb(238,51,27)"/><text x="620.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="617" y="292" width="2" height="15" fill="rgb(243,0,2)"/><text x="620.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.22%)</title><rect x="624" y="308" width="3" height="15" fill="rgb(252,72,41)"/><text x="627.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.22%)</title><rect x="624" y="324" width="3" height="15" fill="rgb(228,184,0)"/><text x="627.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.22%)</title><rect x="624" y="340" width="3" height="15" fill="rgb(235,67,49)"/><text x="627.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.22%)</title><rect x="624" y="356" width="3" height="15" fill="rgb(219,81,2)"/><text x="627.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.22%)</title><rect x="624" y="372" width="3" height="15" fill="rgb(211,31,13)"/><text x="627.00" y="382.50"></text></g><g><title>array_sum (methods.c) (4 samples, 0.89%)</title><rect x="619" y="244" width="11" height="15" fill="rgb(215,208,48)"/><text x="622.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c) (4 samples, 0.89%)</title><rect x="619" y="260" width="11" height="15" fill="rgb(218,189,46)"/><text x="622.00" y="270.50"></text></g><g><title>_sum (numpy/core/_methods.py) (4 samples, 0.89%)</title><rect x="619" y="276" width="11" height="15" fill="rgb(249,192,8)"/><text x="622.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.45%)</title><rect x="624" y="292" width="6" height="15" fill="rgb(233,12,45)"/><text x="627.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.22%)</title><rect x="627" y="308" width="3" height="15" fill="rgb(251,163,32)"/><text x="630.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.22%)</title><rect x="627" y="324" width="3" height="15" fill="rgb(233,12,5)"/><text x="630.00" y="334.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.22%)</title><rect x="627" y="340" width="3" height="15" fill="rgb(246,158,15)"/><text x="630.00" y="350.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="627" y="356" width="3" height="15" fill="rgb(227,35,46)"/><text x="630.00" y="366.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="627" y="372" width="3" height="15" fill="rgb(211,66,11)"/><text x="630.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.22%)</title><rect x="627" y="388" width="3" height="15" fill="rgb(232,154,17)"/><text x="630.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.22%)</title><rect x="630" y="260" width="2" height="15" fill="rgb(225,13,39)"/><text x="633.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.22%)</title><rect x="630" y="276" width="2" height="15" fill="rgb(214,101,49)"/><text x="633.00" y="286.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (3 samples, 0.67%)</title><rect x="632" y="276" width="8" height="15" fill="rgb(208,215,30)"/><text x="635.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.67%)</title><rect x="632" y="292" width="8" height="15" fill="rgb(205,170,1)"/><text x="635.00" y="302.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (3 samples, 0.67%)</title><rect x="632" y="308" width="8" height="15" fill="rgb(230,133,2)"/><text x="635.00" y="318.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (3 samples, 0.67%)</title><rect x="640" y="292" width="8" height="15" fill="rgb(238,204,43)"/><text x="643.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.22%)</title><rect x="648" y="308" width="3" height="15" fill="rgb(224,105,31)"/><text x="651.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.22%)</title><rect x="648" y="324" width="3" height="15" fill="rgb(234,155,37)"/><text x="651.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.11%)</title><rect x="640" y="276" width="13" height="15" fill="rgb(233,76,18)"/><text x="643.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.45%)</title><rect x="648" y="292" width="5" height="15" fill="rgb(231,209,15)"/><text x="651.00" y="302.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c) (1 samples, 0.22%)</title><rect x="651" y="308" width="2" height="15" fill="rgb(233,158,28)"/><text x="654.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.45%)</title><rect x="653" y="276" width="6" height="15" fill="rgb(222,19,4)"/><text x="656.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.22%)</title><rect x="656" y="292" width="3" height="15" fill="rgb(213,154,3)"/><text x="659.00" y="302.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (186 samples, 41.43%)</title><rect x="175" y="164" width="489" height="15" fill="rgb(237,31,41)"/><text x="178.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (177 samples, 39.42%)</title><rect x="199" y="180" width="465" height="15" fill="rgb(231,92,25)"/><text x="202.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (112 samples, 24.94%)</title><rect x="370" y="196" width="294" height="15" fill="rgb(214,199,22)"/><text x="373.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (82 samples, 18.26%)</title><rect x="448" y="212" width="216" height="15" fill="rgb(206,136,13)"/><text x="451.00" y="222.50">run (mlprodict/onnxrt/ops_cp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py) (28 samples, 6.24%)</title><rect x="590" y="228" width="74" height="15" fill="rgb(238,78,10)"/><text x="593.00" y="238.50">_run (ml..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 2.90%)</title><rect x="630" y="244" width="34" height="15" fill="rgb(230,173,48)"/><text x="633.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 2.67%)</title><rect x="632" y="260" width="32" height="15" fill="rgb(234,161,8)"/><text x="635.00" y="270.50">Py..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.45%)</title><rect x="659" y="276" width="5" height="15" fill="rgb(216,33,9)"/><text x="662.00" y="286.50"></text></g><g><title>profile_pyrt (bench_MLPClassifier_default_m_cl_1_50_12_float_.py) (195 samples, 43.43%)</title><rect x="159" y="68" width="513" height="15" fill="rgb(235,129,48)"/><text x="162.00" y="78.50">profile_pyrt (bench_MLPClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py) (195 samples, 43.43%)</title><rect x="159" y="84" width="513" height="15" fill="rgb(242,170,23)"/><text x="162.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py) (195 samples, 43.43%)</title><rect x="159" y="100" width="513" height="15" fill="rgb(215,2,53)"/><text x="162.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (194 samples, 43.21%)</title><rect x="162" y="116" width="510" height="15" fill="rgb(232,121,2)"/><text x="165.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (192 samples, 42.76%)</title><rect x="167" y="132" width="505" height="15" fill="rgb(247,131,51)"/><text x="170.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (192 samples, 42.76%)</title><rect x="167" y="148" width="505" height="15" fill="rgb(247,146,0)"/><text x="170.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.67%)</title><rect x="664" y="164" width="8" height="15" fill="rgb(225,203,32)"/><text x="667.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 0.67%)</title><rect x="664" y="180" width="8" height="15" fill="rgb(226,148,2)"/><text x="667.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 0.67%)</title><rect x="664" y="196" width="8" height="15" fill="rgb(226,163,48)"/><text x="667.00" y="206.50"></text></g><g><title>0x7fd3e09dcf10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="669" y="212" width="3" height="15" fill="rgb(217,193,8)"/><text x="672.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="672" y="116" width="2" height="15" fill="rgb(212,216,50)"/><text x="675.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="672" y="132" width="2" height="15" fill="rgb(248,63,53)"/><text x="675.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.22%)</title><rect x="672" y="148" width="2" height="15" fill="rgb(234,130,35)"/><text x="675.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="727" y="196" width="3" height="15" fill="rgb(254,179,28)"/><text x="730.00" y="206.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="727" y="212" width="3" height="15" fill="rgb(224,147,17)"/><text x="730.00" y="222.50"></text></g><g><title>array_inplace_add (number.c) (1 samples, 0.22%)</title><rect x="730" y="196" width="2" height="15" fill="rgb(229,228,44)"/><text x="733.00" y="206.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (2 samples, 0.45%)</title><rect x="735" y="212" width="5" height="15" fill="rgb(244,67,47)"/><text x="738.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.22%)</title><rect x="737" y="228" width="3" height="15" fill="rgb(229,61,25)"/><text x="740.00" y="238.50"></text></g><g><title>0x7fd3e17db12f (libc-2.29.so) (1 samples, 0.22%)</title><rect x="743" y="228" width="2" height="15" fill="rgb(216,29,49)"/><text x="746.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.45%)</title><rect x="764" y="356" width="5" height="15" fill="rgb(218,77,24)"/><text x="767.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.45%)</title><rect x="764" y="372" width="5" height="15" fill="rgb(224,6,38)"/><text x="767.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.45%)</title><rect x="764" y="388" width="5" height="15" fill="rgb(237,48,49)"/><text x="767.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.45%)</title><rect x="764" y="404" width="5" height="15" fill="rgb(205,6,37)"/><text x="767.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.45%)</title><rect x="764" y="420" width="5" height="15" fill="rgb(225,163,9)"/><text x="767.00" y="430.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.22%)</title><rect x="769" y="372" width="3" height="15" fill="rgb(248,137,29)"/><text x="772.00" y="382.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.22%)</title><rect x="769" y="388" width="3" height="15" fill="rgb(249,121,9)"/><text x="772.00" y="398.50"></text></g><g><title>0x7fd3e09dd0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="769" y="404" width="3" height="15" fill="rgb(218,16,36)"/><text x="772.00" y="414.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.45%)</title><rect x="772" y="372" width="5" height="15" fill="rgb(244,12,37)"/><text x="775.00" y="382.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.22%)</title><rect x="774" y="388" width="3" height="15" fill="rgb(232,83,8)"/><text x="777.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.22%)</title><rect x="774" y="404" width="3" height="15" fill="rgb(213,206,29)"/><text x="777.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="774" y="420" width="3" height="15" fill="rgb(229,23,50)"/><text x="777.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="777" y="372" width="3" height="15" fill="rgb(234,11,47)"/><text x="780.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="777" y="388" width="3" height="15" fill="rgb(215,182,32)"/><text x="780.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.22%)</title><rect x="777" y="404" width="3" height="15" fill="rgb(218,136,4)"/><text x="780.00" y="414.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.22%)</title><rect x="777" y="420" width="3" height="15" fill="rgb(232,35,47)"/><text x="780.00" y="430.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (10 samples, 2.23%)</title><rect x="764" y="324" width="26" height="15" fill="rgb(231,66,13)"/><text x="767.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.23%)</title><rect x="764" y="340" width="26" height="15" fill="rgb(236,77,44)"/><text x="767.00" y="350.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 1.78%)</title><rect x="769" y="356" width="21" height="15" fill="rgb(221,23,39)"/><text x="772.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 0.89%)</title><rect x="780" y="372" width="10" height="15" fill="rgb(236,195,45)"/><text x="783.00" y="382.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (2 samples, 0.45%)</title><rect x="790" y="324" width="5" height="15" fill="rgb(215,1,51)"/><text x="793.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="808" y="340" width="6" height="15" fill="rgb(208,44,16)"/><text x="811.00" y="350.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.22%)</title><rect x="814" y="356" width="2" height="15" fill="rgb(219,205,28)"/><text x="817.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.45%)</title><rect x="816" y="372" width="6" height="15" fill="rgb(220,178,34)"/><text x="819.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.45%)</title><rect x="816" y="388" width="6" height="15" fill="rgb(254,89,25)"/><text x="819.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.45%)</title><rect x="816" y="404" width="6" height="15" fill="rgb(249,21,32)"/><text x="819.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.45%)</title><rect x="816" y="420" width="6" height="15" fill="rgb(254,129,47)"/><text x="819.00" y="430.50"></text></g><g><title>0x7fd3e17d0e60 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="819" y="436" width="3" height="15" fill="rgb(222,81,18)"/><text x="822.00" y="446.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.22%)</title><rect x="835" y="420" width="2" height="15" fill="rgb(254,79,17)"/><text x="838.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.22%)</title><rect x="835" y="436" width="2" height="15" fill="rgb(242,66,9)"/><text x="838.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="835" y="452" width="2" height="15" fill="rgb(205,52,47)"/><text x="838.00" y="462.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (10 samples, 2.23%)</title><rect x="814" y="340" width="26" height="15" fill="rgb(222,181,33)"/><text x="817.00" y="350.50">n..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 2.00%)</title><rect x="816" y="356" width="24" height="15" fill="rgb(223,149,5)"/><text x="819.00" y="366.50">a..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (7 samples, 1.56%)</title><rect x="822" y="372" width="18" height="15" fill="rgb(227,0,39)"/><text x="825.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.67%)</title><rect x="832" y="388" width="8" height="15" fill="rgb(227,23,5)"/><text x="835.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.67%)</title><rect x="832" y="404" width="8" height="15" fill="rgb(222,170,24)"/><text x="835.00" y="414.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="837" y="420" width="3" height="15" fill="rgb(213,46,9)"/><text x="840.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (5 samples, 1.11%)</title><rect x="840" y="356" width="13" height="15" fill="rgb(249,82,15)"/><text x="843.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 0.89%)</title><rect x="843" y="372" width="10" height="15" fill="rgb(244,130,13)"/><text x="846.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (4 samples, 0.89%)</title><rect x="843" y="388" width="10" height="15" fill="rgb(208,109,9)"/><text x="846.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (4 samples, 0.89%)</title><rect x="843" y="404" width="10" height="15" fill="rgb(252,112,5)"/><text x="846.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (4 samples, 0.89%)</title><rect x="843" y="420" width="10" height="15" fill="rgb(221,58,33)"/><text x="846.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="850" y="436" width="3" height="15" fill="rgb(222,196,22)"/><text x="853.00" y="446.50"></text></g><g><title>LONG_isnan (loops.c.src) (1 samples, 0.22%)</title><rect x="858" y="404" width="3" height="15" fill="rgb(230,27,48)"/><text x="861.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.89%)</title><rect x="853" y="372" width="11" height="15" fill="rgb(223,86,3)"/><text x="856.00" y="382.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (3 samples, 0.67%)</title><rect x="856" y="388" width="8" height="15" fill="rgb(236,188,54)"/><text x="859.00" y="398.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="861" y="404" width="3" height="15" fill="rgb(229,173,42)"/><text x="864.00" y="414.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.22%)</title><rect x="864" y="372" width="2" height="15" fill="rgb(230,201,6)"/><text x="867.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.56%)</title><rect x="853" y="356" width="19" height="15" fill="rgb(225,12,48)"/><text x="856.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.45%)</title><rect x="866" y="372" width="6" height="15" fill="rgb(211,212,30)"/><text x="869.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (2 samples, 0.45%)</title><rect x="866" y="388" width="6" height="15" fill="rgb(223,61,17)"/><text x="869.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.22%)</title><rect x="869" y="404" width="3" height="15" fill="rgb(238,25,46)"/><text x="872.00" y="414.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (49 samples, 10.91%)</title><rect x="745" y="244" width="129" height="15" fill="rgb(234,182,26)"/><text x="748.00" y="254.50">clip (numpy/core..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (48 samples, 10.69%)</title><rect x="748" y="260" width="126" height="15" fill="rgb(222,195,38)"/><text x="751.00" y="270.50">_wrapfunc (nump..</text></g><g><title>array_clip (methods.c) (48 samples, 10.69%)</title><rect x="748" y="276" width="126" height="15" fill="rgb(209,0,18)"/><text x="751.00" y="286.50">array_clip (met..</text></g><g><title>forward_ndarray_method (methods.c) (48 samples, 10.69%)</title><rect x="748" y="292" width="126" height="15" fill="rgb(216,18,29)"/><text x="751.00" y="302.50">forward_ndarray..</text></g><g><title>_clip (numpy/core/_methods.py) (46 samples, 10.24%)</title><rect x="753" y="308" width="121" height="15" fill="rgb(233,172,54)"/><text x="756.00" y="318.50">_clip (numpy/co..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (30 samples, 6.68%)</title><rect x="795" y="324" width="79" height="15" fill="rgb(207,186,31)"/><text x="798.00" y="334.50">_clip_dep..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 2.90%)</title><rect x="840" y="340" width="34" height="15" fill="rgb(219,59,5)"/><text x="843.00" y="350.50">uf..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="872" y="356" width="2" height="15" fill="rgb(212,14,48)"/><text x="875.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="872" y="372" width="2" height="15" fill="rgb(247,35,26)"/><text x="875.00" y="382.50"></text></g><g><title>relu (sklearn/neural_network/_base.py) (55 samples, 12.25%)</title><rect x="732" y="196" width="145" height="15" fill="rgb(226,203,20)"/><text x="735.00" y="206.50">relu (sklearn/neur..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (52 samples, 11.58%)</title><rect x="740" y="212" width="137" height="15" fill="rgb(211,145,13)"/><text x="743.00" y="222.50">clip (&lt;__array_fu..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (50 samples, 11.14%)</title><rect x="745" y="228" width="132" height="15" fill="rgb(221,111,34)"/><text x="748.00" y="238.50">array_implement_..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.22%)</title><rect x="874" y="244" width="3" height="15" fill="rgb(228,12,7)"/><text x="877.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.22%)</title><rect x="874" y="260" width="3" height="15" fill="rgb(246,158,22)"/><text x="877.00" y="270.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.67%)</title><rect x="885" y="212" width="8" height="15" fill="rgb(247,105,12)"/><text x="888.00" y="222.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.22%)</title><rect x="893" y="228" width="2" height="15" fill="rgb(238,160,8)"/><text x="896.00" y="238.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.22%)</title><rect x="900" y="276" width="3" height="15" fill="rgb(227,130,0)"/><text x="903.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="900" y="292" width="3" height="15" fill="rgb(220,221,19)"/><text x="903.00" y="302.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (2 samples, 0.45%)</title><rect x="900" y="260" width="6" height="15" fill="rgb(235,144,47)"/><text x="903.00" y="270.50"></text></g><g><title>DOUBLE_matmul_inner_noblas (matmul.c.src) (1 samples, 0.22%)</title><rect x="903" y="276" width="3" height="15" fill="rgb(239,157,48)"/><text x="906.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.22%)</title><rect x="906" y="292" width="2" height="15" fill="rgb(254,168,54)"/><text x="909.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.22%)</title><rect x="906" y="308" width="2" height="15" fill="rgb(225,133,19)"/><text x="909.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.22%)</title><rect x="906" y="324" width="2" height="15" fill="rgb(218,152,39)"/><text x="909.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="906" y="340" width="2" height="15" fill="rgb(213,184,24)"/><text x="909.00" y="350.50"></text></g><g><title>0x7fd3e17dad50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="906" y="356" width="2" height="15" fill="rgb(254,120,37)"/><text x="909.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 0.89%)</title><rect x="906" y="276" width="10" height="15" fill="rgb(215,91,21)"/><text x="909.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (3 samples, 0.67%)</title><rect x="908" y="292" width="8" height="15" fill="rgb(222,165,48)"/><text x="911.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.11%)</title><rect x="906" y="260" width="13" height="15" fill="rgb(218,20,51)"/><text x="909.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.22%)</title><rect x="916" y="276" width="3" height="15" fill="rgb(250,210,29)"/><text x="919.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.22%)</title><rect x="919" y="260" width="2" height="15" fill="rgb(232,178,2)"/><text x="922.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 2.45%)</title><rect x="895" y="228" width="29" height="15" fill="rgb(229,31,36)"/><text x="898.00" y="238.50">Py..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (9 samples, 2.00%)</title><rect x="900" y="244" width="24" height="15" fill="rgb(240,210,51)"/><text x="903.00" y="254.50">P..</text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="921" y="260" width="3" height="15" fill="rgb(214,174,38)"/><text x="924.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (19 samples, 4.23%)</title><rect x="877" y="196" width="50" height="15" fill="rgb(219,159,46)"/><text x="880.00" y="206.50">safe_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 2.90%)</title><rect x="893" y="212" width="34" height="15" fill="rgb(233,131,6)"/><text x="896.00" y="222.50">uf..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.22%)</title><rect x="924" y="228" width="3" height="15" fill="rgb(211,9,6)"/><text x="927.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.45%)</title><rect x="935" y="276" width="5" height="15" fill="rgb(221,99,38)"/><text x="938.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.45%)</title><rect x="935" y="292" width="5" height="15" fill="rgb(205,128,39)"/><text x="938.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.45%)</title><rect x="935" y="308" width="5" height="15" fill="rgb(234,53,34)"/><text x="938.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.45%)</title><rect x="935" y="324" width="5" height="15" fill="rgb(250,99,48)"/><text x="938.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.45%)</title><rect x="935" y="340" width="5" height="15" fill="rgb(236,138,42)"/><text x="938.00" y="350.50"></text></g><g><title>0x7fd3e17d0e7a (libc-2.29.so) (1 samples, 0.22%)</title><rect x="937" y="356" width="3" height="15" fill="rgb(228,41,50)"/><text x="940.00" y="366.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.22%)</title><rect x="940" y="292" width="2" height="15" fill="rgb(207,49,1)"/><text x="943.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="942" y="340" width="3" height="15" fill="rgb(242,91,50)"/><text x="945.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.45%)</title><rect x="942" y="324" width="6" height="15" fill="rgb(220,7,20)"/><text x="945.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.22%)</title><rect x="945" y="340" width="3" height="15" fill="rgb(240,111,18)"/><text x="948.00" y="350.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.22%)</title><rect x="948" y="356" width="2" height="15" fill="rgb(208,185,27)"/><text x="951.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.22%)</title><rect x="950" y="356" width="3" height="15" fill="rgb(235,87,39)"/><text x="953.00" y="366.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.22%)</title><rect x="950" y="372" width="3" height="15" fill="rgb(213,132,7)"/><text x="953.00" y="382.50"></text></g><g><title>0x7fd3e17728bd (libc-2.29.so) (1 samples, 0.22%)</title><rect x="953" y="372" width="3" height="15" fill="rgb(208,217,18)"/><text x="956.00" y="382.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (4 samples, 0.89%)</title><rect x="948" y="324" width="10" height="15" fill="rgb(223,187,46)"/><text x="951.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (4 samples, 0.89%)</title><rect x="948" y="340" width="10" height="15" fill="rgb(228,204,43)"/><text x="951.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.45%)</title><rect x="953" y="356" width="5" height="15" fill="rgb(224,133,19)"/><text x="956.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="956" y="372" width="2" height="15" fill="rgb(251,212,0)"/><text x="959.00" y="382.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.45%)</title><rect x="958" y="372" width="5" height="15" fill="rgb(246,80,22)"/><text x="961.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="961" y="388" width="2" height="15" fill="rgb(245,122,6)"/><text x="964.00" y="398.50"></text></g><g><title>0x7fd3e17dad6a (libc-2.29.so) (1 samples, 0.22%)</title><rect x="961" y="404" width="2" height="15" fill="rgb(236,57,47)"/><text x="964.00" y="414.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.67%)</title><rect x="958" y="340" width="8" height="15" fill="rgb(210,141,42)"/><text x="961.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.67%)</title><rect x="958" y="356" width="8" height="15" fill="rgb(221,150,52)"/><text x="961.00" y="366.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.22%)</title><rect x="963" y="372" width="3" height="15" fill="rgb(254,80,49)"/><text x="966.00" y="382.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.22%)</title><rect x="963" y="388" width="3" height="15" fill="rgb(234,76,41)"/><text x="966.00" y="398.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c) (4 samples, 0.89%)</title><rect x="958" y="324" width="11" height="15" fill="rgb(219,174,44)"/><text x="961.00" y="334.50"></text></g><g><title>PyArray_View (convert.c) (1 samples, 0.22%)</title><rect x="966" y="340" width="3" height="15" fill="rgb(232,157,25)"/><text x="969.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="966" y="356" width="3" height="15" fill="rgb(253,128,22)"/><text x="969.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.22%)</title><rect x="966" y="372" width="3" height="15" fill="rgb(251,219,3)"/><text x="969.00" y="382.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.22%)</title><rect x="966" y="388" width="3" height="15" fill="rgb(205,58,40)"/><text x="969.00" y="398.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.22%)</title><rect x="966" y="404" width="3" height="15" fill="rgb(248,217,45)"/><text x="969.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (11 samples, 2.45%)</title><rect x="942" y="308" width="29" height="15" fill="rgb(224,201,33)"/><text x="945.00" y="318.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="969" y="324" width="2" height="15" fill="rgb(214,107,23)"/><text x="972.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (1 samples, 0.22%)</title><rect x="969" y="340" width="2" height="15" fill="rgb(227,228,33)"/><text x="972.00" y="350.50"></text></g><g><title>array_max (methods.c) (15 samples, 3.34%)</title><rect x="935" y="212" width="39" height="15" fill="rgb(230,45,29)"/><text x="938.00" y="222.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (15 samples, 3.34%)</title><rect x="935" y="228" width="39" height="15" fill="rgb(228,123,16)"/><text x="938.00" y="238.50">for..</text></g><g><title>_amax (numpy/core/_methods.py) (15 samples, 3.34%)</title><rect x="935" y="244" width="39" height="15" fill="rgb(252,38,13)"/><text x="938.00" y="254.50">_am..</text></g><g><title>ufunc_reduce (ufunc_object.c) (15 samples, 3.34%)</title><rect x="935" y="260" width="39" height="15" fill="rgb(220,201,33)"/><text x="938.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (13 samples, 2.90%)</title><rect x="940" y="276" width="34" height="15" fill="rgb(214,100,2)"/><text x="943.00" y="286.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (12 samples, 2.67%)</title><rect x="942" y="292" width="32" height="15" fill="rgb(225,165,18)"/><text x="945.00" y="302.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.22%)</title><rect x="971" y="308" width="3" height="15" fill="rgb(247,69,29)"/><text x="974.00" y="318.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.67%)</title><rect x="974" y="212" width="8" height="15" fill="rgb(209,50,31)"/><text x="977.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (3 samples, 0.67%)</title><rect x="974" y="228" width="8" height="15" fill="rgb(210,144,46)"/><text x="977.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.22%)</title><rect x="979" y="244" width="3" height="15" fill="rgb(235,161,49)"/><text x="982.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="979" y="260" width="3" height="15" fill="rgb(210,53,44)"/><text x="982.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="982" y="260" width="3" height="15" fill="rgb(211,163,29)"/><text x="985.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="982" y="276" width="3" height="15" fill="rgb(229,128,7)"/><text x="985.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.22%)</title><rect x="982" y="292" width="3" height="15" fill="rgb(223,115,30)"/><text x="985.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.22%)</title><rect x="982" y="308" width="3" height="15" fill="rgb(252,217,32)"/><text x="985.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.22%)</title><rect x="985" y="260" width="2" height="15" fill="rgb(230,75,27)"/><text x="988.00" y="270.50"></text></g><g><title>array_subtract (number.c) (3 samples, 0.67%)</title><rect x="982" y="212" width="8" height="15" fill="rgb(227,20,1)"/><text x="985.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.67%)</title><rect x="982" y="228" width="8" height="15" fill="rgb(224,180,1)"/><text x="985.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.67%)</title><rect x="982" y="244" width="8" height="15" fill="rgb(249,95,42)"/><text x="985.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.22%)</title><rect x="987" y="260" width="3" height="15" fill="rgb(231,43,41)"/><text x="990.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.22%)</title><rect x="987" y="276" width="3" height="15" fill="rgb(206,145,17)"/><text x="990.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.22%)</title><rect x="995" y="324" width="3" height="15" fill="rgb(236,202,48)"/><text x="998.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.22%)</title><rect x="995" y="340" width="3" height="15" fill="rgb(244,187,25)"/><text x="998.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.22%)</title><rect x="998" y="388" width="2" height="15" fill="rgb(212,210,17)"/><text x="1001.00" y="398.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="1000" y="388" width="3" height="15" fill="rgb(206,42,52)"/><text x="1003.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 0.67%)</title><rect x="998" y="324" width="8" height="15" fill="rgb(241,132,17)"/><text x="1001.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 0.67%)</title><rect x="998" y="340" width="8" height="15" fill="rgb(222,50,19)"/><text x="1001.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (3 samples, 0.67%)</title><rect x="998" y="356" width="8" height="15" fill="rgb(230,191,17)"/><text x="1001.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.67%)</title><rect x="998" y="372" width="8" height="15" fill="rgb(250,177,37)"/><text x="1001.00" y="382.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1003" y="388" width="3" height="15" fill="rgb(226,119,31)"/><text x="1006.00" y="398.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c) (1 samples, 0.22%)</title><rect x="1006" y="324" width="2" height="15" fill="rgb(222,45,6)"/><text x="1009.00" y="334.50"></text></g><g><title>array_sum (methods.c) (8 samples, 1.78%)</title><rect x="990" y="212" width="21" height="15" fill="rgb(214,79,6)"/><text x="993.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c) (8 samples, 1.78%)</title><rect x="990" y="228" width="21" height="15" fill="rgb(224,105,41)"/><text x="993.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py) (7 samples, 1.56%)</title><rect x="992" y="244" width="19" height="15" fill="rgb(207,29,35)"/><text x="995.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (7 samples, 1.56%)</title><rect x="992" y="260" width="19" height="15" fill="rgb(208,95,51)"/><text x="995.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 1.56%)</title><rect x="992" y="276" width="19" height="15" fill="rgb(238,224,45)"/><text x="995.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (6 samples, 1.34%)</title><rect x="995" y="292" width="16" height="15" fill="rgb(214,62,53)"/><text x="998.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (6 samples, 1.34%)</title><rect x="995" y="308" width="16" height="15" fill="rgb(224,164,37)"/><text x="998.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1008" y="324" width="3" height="15" fill="rgb(213,192,25)"/><text x="1011.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.22%)</title><rect x="1008" y="340" width="3" height="15" fill="rgb(218,49,22)"/><text x="1011.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.22%)</title><rect x="1008" y="356" width="3" height="15" fill="rgb(234,57,36)"/><text x="1011.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1011" y="244" width="2" height="15" fill="rgb(233,213,14)"/><text x="1014.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1011" y="260" width="2" height="15" fill="rgb(221,181,4)"/><text x="1014.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1011" y="276" width="2" height="15" fill="rgb(239,42,39)"/><text x="1014.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1011" y="292" width="2" height="15" fill="rgb(211,174,19)"/><text x="1014.00" y="302.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1011" y="308" width="2" height="15" fill="rgb(249,163,14)"/><text x="1014.00" y="318.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.22%)</title><rect x="1011" y="324" width="2" height="15" fill="rgb(225,106,21)"/><text x="1014.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1013" y="244" width="3" height="15" fill="rgb(214,162,26)"/><text x="1016.00" y="254.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1013" y="260" width="3" height="15" fill="rgb(235,221,47)"/><text x="1016.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="1016" y="244" width="3" height="15" fill="rgb(212,101,13)"/><text x="1019.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="1016" y="260" width="3" height="15" fill="rgb(221,29,38)"/><text x="1019.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="1016" y="276" width="3" height="15" fill="rgb(222,131,3)"/><text x="1019.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="1016" y="292" width="3" height="15" fill="rgb(249,160,1)"/><text x="1019.00" y="302.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1019" y="244" width="2" height="15" fill="rgb(216,224,28)"/><text x="1022.00" y="254.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py) (37 samples, 8.24%)</title><rect x="927" y="196" width="97" height="15" fill="rgb(225,193,46)"/><text x="930.00" y="206.50">softmax (sk..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.11%)</title><rect x="1011" y="212" width="13" height="15" fill="rgb(213,26,34)"/><text x="1014.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.11%)</title><rect x="1011" y="228" width="13" height="15" fill="rgb(210,206,25)"/><text x="1014.00" y="238.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.22%)</title><rect x="1021" y="244" width="3" height="15" fill="rgb(225,55,43)"/><text x="1024.00" y="254.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.22%)</title><rect x="1021" y="260" width="3" height="15" fill="rgb(212,25,45)"/><text x="1024.00" y="270.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.22%)</title><rect x="1021" y="276" width="3" height="15" fill="rgb(205,90,16)"/><text x="1024.00" y="286.50"></text></g><g><title>0x7fd3e09dbf00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="1024" y="228" width="3" height="15" fill="rgb(213,140,2)"/><text x="1027.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1029" y="276" width="3" height="15" fill="rgb(217,200,5)"/><text x="1032.00" y="286.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1032" y="276" width="2" height="15" fill="rgb(218,111,27)"/><text x="1035.00" y="286.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.22%)</title><rect x="1034" y="276" width="3" height="15" fill="rgb(217,8,49)"/><text x="1037.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.11%)</title><rect x="1027" y="228" width="13" height="15" fill="rgb(234,34,28)"/><text x="1030.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.11%)</title><rect x="1027" y="244" width="13" height="15" fill="rgb(254,137,16)"/><text x="1030.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.11%)</title><rect x="1027" y="260" width="13" height="15" fill="rgb(230,207,2)"/><text x="1030.00" y="270.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1037" y="276" width="3" height="15" fill="rgb(214,62,33)"/><text x="1040.00" y="286.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (129 samples, 28.73%)</title><rect x="703" y="180" width="339" height="15" fill="rgb(249,224,8)"/><text x="706.00" y="190.50">_forward_pass (sklearn/neural_network/_multil..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.56%)</title><rect x="1024" y="196" width="18" height="15" fill="rgb(254,111,0)"/><text x="1027.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.56%)</title><rect x="1024" y="212" width="18" height="15" fill="rgb(218,6,21)"/><text x="1027.00" y="222.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.22%)</title><rect x="1040" y="228" width="2" height="15" fill="rgb(237,70,4)"/><text x="1043.00" y="238.50"></text></g><g><title>0x7fd3e17d0757 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1042" y="196" width="3" height="15" fill="rgb(235,83,45)"/><text x="1045.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c) (2 samples, 0.45%)</title><rect x="1042" y="180" width="6" height="15" fill="rgb(248,45,53)"/><text x="1045.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.22%)</title><rect x="1045" y="196" width="3" height="15" fill="rgb(251,103,5)"/><text x="1048.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.22%)</title><rect x="1045" y="212" width="3" height="15" fill="rgb(230,39,1)"/><text x="1048.00" y="222.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.22%)</title><rect x="1045" y="228" width="3" height="15" fill="rgb(253,28,24)"/><text x="1048.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.22%)</title><rect x="1045" y="244" width="3" height="15" fill="rgb(249,108,15)"/><text x="1048.00" y="254.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 0.89%)</title><rect x="1063" y="196" width="11" height="15" fill="rgb(226,7,4)"/><text x="1066.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.22%)</title><rect x="1074" y="196" width="2" height="15" fill="rgb(236,125,43)"/><text x="1077.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="1090" y="212" width="2" height="15" fill="rgb(234,104,13)"/><text x="1093.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (7 samples, 1.56%)</title><rect x="1076" y="196" width="19" height="15" fill="rgb(208,164,14)"/><text x="1079.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.22%)</title><rect x="1092" y="212" width="3" height="15" fill="rgb(250,143,43)"/><text x="1095.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.22%)</title><rect x="1095" y="196" width="3" height="15" fill="rgb(253,95,12)"/><text x="1098.00" y="206.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.22%)</title><rect x="1095" y="212" width="3" height="15" fill="rgb(249,71,41)"/><text x="1098.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (4 samples, 0.89%)</title><rect x="1098" y="196" width="10" height="15" fill="rgb(246,170,52)"/><text x="1101.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.22%)</title><rect x="1105" y="212" width="3" height="15" fill="rgb(225,226,46)"/><text x="1108.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.22%)</title><rect x="1105" y="228" width="3" height="15" fill="rgb(236,197,48)"/><text x="1108.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.22%)</title><rect x="1108" y="196" width="3" height="15" fill="rgb(217,218,54)"/><text x="1111.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.22%)</title><rect x="1116" y="212" width="3" height="15" fill="rgb(216,43,52)"/><text x="1119.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (7 samples, 1.56%)</title><rect x="1111" y="196" width="18" height="15" fill="rgb(250,69,35)"/><text x="1114.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (4 samples, 0.89%)</title><rect x="1119" y="212" width="10" height="15" fill="rgb(206,8,9)"/><text x="1122.00" y="222.50"></text></g><g><title>0x7fd3e17d0e7a (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1126" y="228" width="3" height="15" fill="rgb(211,203,11)"/><text x="1129.00" y="238.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py) (174 samples, 38.75%)</title><rect x="680" y="164" width="457" height="15" fill="rgb(212,174,27)"/><text x="683.00" y="174.50">_predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>check_array (sklearn/utils/validation.py) (34 samples, 7.57%)</title><rect x="1048" y="180" width="89" height="15" fill="rgb(243,29,23)"/><text x="1051.00" y="190.50">check_arra..</text></g><g><title>simplefilter (warnings.py) (3 samples, 0.67%)</title><rect x="1129" y="196" width="8" height="15" fill="rgb(253,9,48)"/><text x="1132.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 0.67%)</title><rect x="1129" y="212" width="8" height="15" fill="rgb(236,195,12)"/><text x="1132.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.22%)</title><rect x="1134" y="228" width="3" height="15" fill="rgb(253,120,16)"/><text x="1137.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 0.89%)</title><rect x="1153" y="196" width="10" height="15" fill="rgb(248,57,17)"/><text x="1156.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (9 samples, 2.00%)</title><rect x="1145" y="180" width="23" height="15" fill="rgb(212,47,8)"/><text x="1148.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.45%)</title><rect x="1163" y="196" width="5" height="15" fill="rgb(219,207,16)"/><text x="1166.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (189 samples, 42.09%)</title><rect x="677" y="132" width="497" height="15" fill="rgb(208,66,36)"/><text x="680.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py) (188 samples, 41.87%)</title><rect x="680" y="148" width="494" height="15" fill="rgb(240,109,44)"/><text x="683.00" y="158.50">predict_proba (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (14 samples, 3.12%)</title><rect x="1137" y="164" width="37" height="15" fill="rgb(222,29,35)"/><text x="1140.00" y="174.50">che..</text></g><g><title>isclass (inspect.py) (2 samples, 0.45%)</title><rect x="1168" y="180" width="6" height="15" fill="rgb(223,14,5)"/><text x="1171.00" y="190.50"></text></g><g><title>profile_skl (bench_MLPClassifier_default_m_cl_1_50_12_float_.py) (192 samples, 42.76%)</title><rect x="672" y="68" width="504" height="15" fill="rgb(242,78,8)"/><text x="675.00" y="78.50">profile_skl (bench_MLPClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py) (192 samples, 42.76%)</title><rect x="672" y="84" width="504" height="15" fill="rgb(224,175,49)"/><text x="675.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py) (192 samples, 42.76%)</title><rect x="672" y="100" width="504" height="15" fill="rgb(228,190,42)"/><text x="675.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (191 samples, 42.54%)</title><rect x="674" y="116" width="502" height="15" fill="rgb(222,65,17)"/><text x="677.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.22%)</title><rect x="1174" y="132" width="2" height="15" fill="rgb(247,190,51)"/><text x="1177.00" y="142.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.22%)</title><rect x="1176" y="116" width="3" height="15" fill="rgb(231,167,41)"/><text x="1179.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py) (1 samples, 0.22%)</title><rect x="1176" y="132" width="3" height="15" fill="rgb(220,46,21)"/><text x="1179.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py) (1 samples, 0.22%)</title><rect x="1176" y="148" width="3" height="15" fill="rgb(240,124,33)"/><text x="1179.00" y="158.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.22%)</title><rect x="1176" y="164" width="3" height="15" fill="rgb(242,120,4)"/><text x="1179.00" y="174.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="1176" y="180" width="3" height="15" fill="rgb(252,187,48)"/><text x="1179.00" y="190.50"></text></g><g><title>0x7fd3e17d0e50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1176" y="196" width="3" height="15" fill="rgb(236,37,42)"/><text x="1179.00" y="206.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.22%)</title><rect x="1179" y="180" width="3" height="15" fill="rgb(228,65,13)"/><text x="1182.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (1 samples, 0.22%)</title><rect x="1179" y="196" width="3" height="15" fill="rgb(215,67,3)"/><text x="1182.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1179" y="212" width="3" height="15" fill="rgb(249,63,20)"/><text x="1182.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1179" y="228" width="3" height="15" fill="rgb(242,10,0)"/><text x="1182.00" y="238.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py) (2 samples, 0.45%)</title><rect x="1179" y="164" width="5" height="15" fill="rgb(216,184,16)"/><text x="1182.00" y="174.50"></text></g><g><title>log_loss (sklearn/neural_network/_base.py) (1 samples, 0.22%)</title><rect x="1182" y="180" width="2" height="15" fill="rgb(231,178,24)"/><text x="1185.00" y="190.50"></text></g><g><title>array_sum (methods.c) (1 samples, 0.22%)</title><rect x="1182" y="196" width="2" height="15" fill="rgb(218,1,26)"/><text x="1185.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.22%)</title><rect x="1182" y="212" width="2" height="15" fill="rgb(248,32,2)"/><text x="1185.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py) (1 samples, 0.22%)</title><rect x="1182" y="228" width="2" height="15" fill="rgb(213,221,9)"/><text x="1185.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1182" y="244" width="2" height="15" fill="rgb(227,31,28)"/><text x="1185.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1182" y="260" width="2" height="15" fill="rgb(222,117,23)"/><text x="1185.00" y="270.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.22%)</title><rect x="1182" y="276" width="2" height="15" fill="rgb(236,182,33)"/><text x="1185.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.22%)</title><rect x="1182" y="292" width="2" height="15" fill="rgb(226,84,25)"/><text x="1185.00" y="302.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src) (1 samples, 0.22%)</title><rect x="1182" y="308" width="2" height="15" fill="rgb(243,98,42)"/><text x="1185.00" y="318.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.22%)</title><rect x="1182" y="324" width="2" height="15" fill="rgb(247,80,19)"/><text x="1185.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="1184" y="164" width="3" height="15" fill="rgb(230,138,40)"/><text x="1187.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="1184" y="180" width="3" height="15" fill="rgb(225,75,3)"/><text x="1187.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.22%)</title><rect x="1184" y="196" width="3" height="15" fill="rgb(214,192,45)"/><text x="1187.00" y="206.50"></text></g><g><title>all (449 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(213,181,42)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_50_12_float_.py) (449 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(252,201,35)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>start (bench_MLPClassifier_default_m_cl_1_50_12_float_.py) (5 samples, 1.11%)</title><rect x="1176" y="68" width="14" height="15" fill="rgb(222,16,50)"/><text x="1179.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py) (5 samples, 1.11%)</title><rect x="1176" y="84" width="14" height="15" fill="rgb(225,59,10)"/><text x="1179.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.11%)</title><rect x="1176" y="100" width="14" height="15" fill="rgb(225,169,48)"/><text x="1179.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py) (4 samples, 0.89%)</title><rect x="1179" y="116" width="11" height="15" fill="rgb(207,54,8)"/><text x="1182.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py) (4 samples, 0.89%)</title><rect x="1179" y="132" width="11" height="15" fill="rgb(223,60,54)"/><text x="1182.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py) (4 samples, 0.89%)</title><rect x="1179" y="148" width="11" height="15" fill="rgb(206,130,44)"/><text x="1182.00" y="158.50"></text></g><g><title>update_params (sklearn/neural_network/_stochastic_optimizers.py) (1 samples, 0.22%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(249,92,32)"/><text x="1190.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(234,33,47)"/><text x="1190.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(253,205,21)"/><text x="1190.00" y="206.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(229,218,10)"/><text x="1190.00" y="222.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(209,31,49)"/><text x="1190.00" y="238.50"></text></g></g></svg>