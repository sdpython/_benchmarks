<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2054" onload="init(evt)" viewBox="0 0 1200 2054" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2054" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2037.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2037.00"> </text><g id="frames"><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(235,153,7)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(241,41,22)"/><text x="13.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(253,82,29)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(241,107,21)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(234,187,33)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(216,133,34)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(250,118,7)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(212,212,16)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(238,222,3)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(208,18,29)"/><text x="14.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="11" y="996" width="1" height="15" fill="rgb(251,62,21)"/><text x="14.00" y="1006.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="948" width="1" height="15" fill="rgb(242,198,48)"/><text x="15.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="964" width="1" height="15" fill="rgb(219,87,38)"/><text x="15.00" y="974.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="980" width="1" height="15" fill="rgb(244,113,23)"/><text x="15.00" y="990.50"></text></g><g><title>sub (re.py) (1 samples, 0.11%)</title><rect x="12" y="996" width="1" height="15" fill="rgb(244,39,46)"/><text x="15.00" y="1006.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="12" y="1012" width="1" height="15" fill="rgb(228,150,34)"/><text x="15.00" y="1022.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.43%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(245,106,16)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.43%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(221,45,26)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="12" y="868" width="3" height="15" fill="rgb(250,118,39)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="12" y="884" width="3" height="15" fill="rgb(215,112,40)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="12" y="900" width="3" height="15" fill="rgb(238,68,39)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(225,96,26)"/><text x="15.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="12" y="932" width="3" height="15" fill="rgb(205,10,53)"/><text x="15.00" y="942.50"></text></g><g><title>isdir (genericpath.py) (1 samples, 0.11%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(205,157,20)"/><text x="16.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="13" y="964" width="2" height="15" fill="rgb(222,34,37)"/><text x="16.00" y="974.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.11%)</title><rect x="13" y="980" width="2" height="15" fill="rgb(224,173,36)"/><text x="16.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 0.54%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(247,193,17)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(243,37,45)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(236,98,11)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(219,177,10)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(249,77,3)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(212,166,46)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 0.54%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(252,202,38)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(228,171,53)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(248,210,0)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(242,158,44)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(244,169,38)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(232,17,24)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 0.54%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(211,55,33)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(242,205,19)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(234,147,27)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(237,168,8)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(218,102,6)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(227,127,1)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 0.54%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(216,93,42)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(232,223,36)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(211,77,37)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(253,170,5)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(230,193,1)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(216,76,16)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(251,63,16)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(224,52,54)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(213,51,43)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 0.54%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(215,13,46)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(205,137,8)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(239,134,10)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(215,133,15)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(245,171,15)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(227,8,31)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 0.54%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(247,197,32)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="836" width="1" height="15" fill="rgb(241,133,22)"/><text x="18.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="852" width="1" height="15" fill="rgb(209,47,8)"/><text x="18.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="868" width="1" height="15" fill="rgb(225,2,34)"/><text x="18.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="884" width="1" height="15" fill="rgb(222,19,9)"/><text x="18.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="900" width="1" height="15" fill="rgb(246,26,47)"/><text x="18.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.11%)</title><rect x="15" y="916" width="1" height="15" fill="rgb(237,42,36)"/><text x="18.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="932" width="1" height="15" fill="rgb(206,188,4)"/><text x="18.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="948" width="1" height="15" fill="rgb(207,216,29)"/><text x="18.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="964" width="1" height="15" fill="rgb(247,173,12)"/><text x="18.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="980" width="1" height="15" fill="rgb(247,36,7)"/><text x="18.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.11%)</title><rect x="15" y="996" width="1" height="15" fill="rgb(245,123,32)"/><text x="18.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1012" width="1" height="15" fill="rgb(245,161,25)"/><text x="18.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1028" width="1" height="15" fill="rgb(233,145,49)"/><text x="18.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1044" width="1" height="15" fill="rgb(253,34,42)"/><text x="18.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="1060" width="1" height="15" fill="rgb(220,24,38)"/><text x="18.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1076" width="1" height="15" fill="rgb(237,60,4)"/><text x="18.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="15" y="1092" width="1" height="15" fill="rgb(254,201,40)"/><text x="18.00" y="1102.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="15" y="1108" width="1" height="15" fill="rgb(238,61,14)"/><text x="18.00" y="1118.50"></text></g><g><title>compile (re.py) (1 samples, 0.11%)</title><rect x="15" y="1124" width="1" height="15" fill="rgb(212,80,30)"/><text x="18.00" y="1134.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="15" y="1140" width="1" height="15" fill="rgb(235,72,8)"/><text x="18.00" y="1150.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="15" y="1156" width="1" height="15" fill="rgb(238,27,42)"/><text x="18.00" y="1166.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="15" y="1172" width="1" height="15" fill="rgb(223,123,34)"/><text x="18.00" y="1182.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="15" y="1188" width="1" height="15" fill="rgb(221,134,51)"/><text x="18.00" y="1198.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="15" y="1204" width="1" height="15" fill="rgb(222,127,37)"/><text x="18.00" y="1214.50"></text></g><g><title>match (sre_parse.py) (1 samples, 0.11%)</title><rect x="15" y="1220" width="1" height="15" fill="rgb(210,97,41)"/><text x="18.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1204" width="1" height="15" fill="rgb(243,32,49)"/><text x="19.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.11%)</title><rect x="16" y="1220" width="1" height="15" fill="rgb(236,184,44)"/><text x="19.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1236" width="1" height="15" fill="rgb(250,31,17)"/><text x="19.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1252" width="1" height="15" fill="rgb(225,153,17)"/><text x="19.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1268" width="1" height="15" fill="rgb(227,123,43)"/><text x="19.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="1284" width="1" height="15" fill="rgb(210,66,38)"/><text x="19.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1300" width="1" height="15" fill="rgb(218,111,23)"/><text x="19.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.11%)</title><rect x="16" y="1316" width="1" height="15" fill="rgb(244,225,44)"/><text x="19.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1332" width="1" height="15" fill="rgb(232,126,41)"/><text x="19.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1348" width="1" height="15" fill="rgb(217,84,30)"/><text x="19.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1364" width="1" height="15" fill="rgb(223,98,22)"/><text x="19.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="1380" width="1" height="15" fill="rgb(222,65,53)"/><text x="19.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1396" width="1" height="15" fill="rgb(243,165,11)"/><text x="19.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.11%)</title><rect x="16" y="1412" width="1" height="15" fill="rgb(229,117,1)"/><text x="19.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1428" width="1" height="15" fill="rgb(220,63,11)"/><text x="19.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1444" width="1" height="15" fill="rgb(240,224,17)"/><text x="19.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1460" width="1" height="15" fill="rgb(225,81,39)"/><text x="19.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="1476" width="1" height="15" fill="rgb(237,45,48)"/><text x="19.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1492" width="1" height="15" fill="rgb(214,20,31)"/><text x="19.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.11%)</title><rect x="16" y="1508" width="1" height="15" fill="rgb(241,46,54)"/><text x="19.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1524" width="1" height="15" fill="rgb(247,57,25)"/><text x="19.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1540" width="1" height="15" fill="rgb(248,34,33)"/><text x="19.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1556" width="1" height="15" fill="rgb(206,97,39)"/><text x="19.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="1572" width="1" height="15" fill="rgb(207,45,40)"/><text x="19.00" y="1582.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="1588" width="1" height="15" fill="rgb(216,206,38)"/><text x="19.00" y="1598.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="16" y="1604" width="1" height="15" fill="rgb(218,126,6)"/><text x="19.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(214,126,24)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(232,215,42)"/><text x="19.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(246,113,0)"/><text x="19.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(238,81,3)"/><text x="19.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="980" width="2" height="15" fill="rgb(207,98,54)"/><text x="19.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (2 samples, 0.21%)</title><rect x="16" y="996" width="2" height="15" fill="rgb(211,62,48)"/><text x="19.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="1012" width="2" height="15" fill="rgb(236,159,33)"/><text x="19.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="1028" width="2" height="15" fill="rgb(232,206,36)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="1044" width="2" height="15" fill="rgb(209,136,16)"/><text x="19.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="1060" width="2" height="15" fill="rgb(224,223,12)"/><text x="19.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="1076" width="2" height="15" fill="rgb(248,127,16)"/><text x="19.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="16" y="1092" width="2" height="15" fill="rgb(232,160,47)"/><text x="19.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="1108" width="2" height="15" fill="rgb(235,205,46)"/><text x="19.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (2 samples, 0.21%)</title><rect x="16" y="1124" width="2" height="15" fill="rgb(226,18,46)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="1140" width="2" height="15" fill="rgb(237,73,15)"/><text x="19.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="1156" width="2" height="15" fill="rgb(223,91,32)"/><text x="19.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="16" y="1172" width="2" height="15" fill="rgb(215,57,51)"/><text x="19.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="16" y="1188" width="2" height="15" fill="rgb(231,188,47)"/><text x="19.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="1204" width="1" height="15" fill="rgb(216,178,31)"/><text x="20.00" y="1214.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="1220" width="1" height="15" fill="rgb(215,46,47)"/><text x="20.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.86%)</title><rect x="10" y="196" width="10" height="15" fill="rgb(230,75,24)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.86%)</title><rect x="10" y="212" width="10" height="15" fill="rgb(249,65,34)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.86%)</title><rect x="10" y="228" width="10" height="15" fill="rgb(208,210,24)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.86%)</title><rect x="10" y="244" width="10" height="15" fill="rgb(225,95,16)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.86%)</title><rect x="10" y="260" width="10" height="15" fill="rgb(230,55,40)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.86%)</title><rect x="10" y="276" width="10" height="15" fill="rgb(225,213,46)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.32%)</title><rect x="16" y="292" width="4" height="15" fill="rgb(219,215,28)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="308" width="4" height="15" fill="rgb(241,229,50)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="324" width="4" height="15" fill="rgb(224,74,4)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="340" width="4" height="15" fill="rgb(233,7,19)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="16" y="356" width="4" height="15" fill="rgb(217,203,19)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="372" width="4" height="15" fill="rgb(222,119,1)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.32%)</title><rect x="16" y="388" width="4" height="15" fill="rgb(243,176,31)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="404" width="4" height="15" fill="rgb(205,51,46)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="420" width="4" height="15" fill="rgb(236,125,6)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="436" width="4" height="15" fill="rgb(222,55,5)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="16" y="452" width="4" height="15" fill="rgb(234,82,41)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="468" width="4" height="15" fill="rgb(242,119,51)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.32%)</title><rect x="16" y="484" width="4" height="15" fill="rgb(208,188,46)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="500" width="4" height="15" fill="rgb(222,86,35)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="516" width="4" height="15" fill="rgb(229,120,45)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="532" width="4" height="15" fill="rgb(239,79,27)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="16" y="548" width="4" height="15" fill="rgb(214,93,47)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="564" width="4" height="15" fill="rgb(242,172,3)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 0.32%)</title><rect x="16" y="580" width="4" height="15" fill="rgb(243,132,28)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="596" width="4" height="15" fill="rgb(252,182,2)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="612" width="4" height="15" fill="rgb(246,65,10)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="628" width="4" height="15" fill="rgb(206,150,33)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="16" y="644" width="4" height="15" fill="rgb(247,174,47)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="660" width="4" height="15" fill="rgb(239,15,50)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 0.32%)</title><rect x="16" y="676" width="4" height="15" fill="rgb(209,197,29)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="692" width="4" height="15" fill="rgb(206,170,45)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="708" width="4" height="15" fill="rgb(219,121,25)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="724" width="4" height="15" fill="rgb(227,201,4)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="16" y="740" width="4" height="15" fill="rgb(242,108,38)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="756" width="4" height="15" fill="rgb(222,119,47)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 0.32%)</title><rect x="16" y="772" width="4" height="15" fill="rgb(221,195,38)"/><text x="19.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="788" width="4" height="15" fill="rgb(228,87,44)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="804" width="4" height="15" fill="rgb(211,207,15)"/><text x="19.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="820" width="4" height="15" fill="rgb(208,194,32)"/><text x="19.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="836" width="4" height="15" fill="rgb(252,203,32)"/><text x="19.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="852" width="4" height="15" fill="rgb(211,10,17)"/><text x="19.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="16" y="868" width="4" height="15" fill="rgb(247,76,30)"/><text x="19.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="16" y="884" width="4" height="15" fill="rgb(213,143,1)"/><text x="19.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 0.32%)</title><rect x="16" y="900" width="4" height="15" fill="rgb(223,28,23)"/><text x="19.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="916" width="2" height="15" fill="rgb(244,135,43)"/><text x="21.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="932" width="2" height="15" fill="rgb(252,219,31)"/><text x="21.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="948" width="2" height="15" fill="rgb(221,52,31)"/><text x="21.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="964" width="2" height="15" fill="rgb(205,208,32)"/><text x="21.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="980" width="2" height="15" fill="rgb(238,169,42)"/><text x="21.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="996" width="2" height="15" fill="rgb(249,32,10)"/><text x="21.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1012" width="2" height="15" fill="rgb(251,201,7)"/><text x="21.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.11%)</title><rect x="18" y="1028" width="2" height="15" fill="rgb(224,223,48)"/><text x="21.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.11%)</title><rect x="18" y="1044" width="2" height="15" fill="rgb(228,60,22)"/><text x="21.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.11%)</title><rect x="18" y="1060" width="2" height="15" fill="rgb(237,193,45)"/><text x="21.00" y="1070.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.11%)</title><rect x="20" y="1508" width="1" height="15" fill="rgb(214,71,36)"/><text x="23.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="484" width="2" height="15" fill="rgb(239,186,16)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="500" width="2" height="15" fill="rgb(233,109,26)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="516" width="2" height="15" fill="rgb(247,171,7)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="532" width="2" height="15" fill="rgb(210,126,27)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="20" y="548" width="2" height="15" fill="rgb(206,168,24)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="564" width="2" height="15" fill="rgb(231,142,17)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.21%)</title><rect x="20" y="580" width="2" height="15" fill="rgb(214,203,50)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="596" width="2" height="15" fill="rgb(224,187,16)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="612" width="2" height="15" fill="rgb(215,157,38)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="628" width="2" height="15" fill="rgb(221,126,21)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="20" y="644" width="2" height="15" fill="rgb(227,140,48)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="660" width="2" height="15" fill="rgb(223,173,31)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.21%)</title><rect x="20" y="676" width="2" height="15" fill="rgb(254,12,48)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="692" width="2" height="15" fill="rgb(208,209,28)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="708" width="2" height="15" fill="rgb(207,201,28)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="724" width="2" height="15" fill="rgb(241,214,33)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="20" y="740" width="2" height="15" fill="rgb(247,120,2)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="756" width="2" height="15" fill="rgb(243,79,14)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.21%)</title><rect x="20" y="772" width="2" height="15" fill="rgb(243,224,12)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="788" width="2" height="15" fill="rgb(235,72,50)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="804" width="2" height="15" fill="rgb(218,145,41)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="820" width="2" height="15" fill="rgb(217,0,42)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="20" y="836" width="2" height="15" fill="rgb(252,68,25)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="852" width="2" height="15" fill="rgb(222,87,38)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.21%)</title><rect x="20" y="868" width="2" height="15" fill="rgb(240,126,12)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="884" width="2" height="15" fill="rgb(246,93,13)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(254,118,53)"/><text x="23.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(224,209,47)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(206,216,47)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(215,17,28)"/><text x="23.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(242,70,45)"/><text x="23.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="20" y="980" width="2" height="15" fill="rgb(218,113,35)"/><text x="23.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="996" width="2" height="15" fill="rgb(205,104,44)"/><text x="23.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.21%)</title><rect x="20" y="1012" width="2" height="15" fill="rgb(237,226,17)"/><text x="23.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1028" width="2" height="15" fill="rgb(226,112,43)"/><text x="23.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1044" width="2" height="15" fill="rgb(244,221,7)"/><text x="23.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1060" width="2" height="15" fill="rgb(246,135,3)"/><text x="23.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="20" y="1076" width="2" height="15" fill="rgb(249,177,13)"/><text x="23.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1092" width="2" height="15" fill="rgb(225,224,54)"/><text x="23.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.21%)</title><rect x="20" y="1108" width="2" height="15" fill="rgb(218,165,20)"/><text x="23.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1124" width="2" height="15" fill="rgb(240,0,32)"/><text x="23.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1140" width="2" height="15" fill="rgb(219,212,29)"/><text x="23.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1156" width="2" height="15" fill="rgb(212,185,14)"/><text x="23.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1172" width="2" height="15" fill="rgb(219,112,53)"/><text x="23.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1188" width="2" height="15" fill="rgb(240,93,21)"/><text x="23.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="20" y="1204" width="2" height="15" fill="rgb(252,77,16)"/><text x="23.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1220" width="2" height="15" fill="rgb(223,88,42)"/><text x="23.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.21%)</title><rect x="20" y="1236" width="2" height="15" fill="rgb(239,34,42)"/><text x="23.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1252" width="2" height="15" fill="rgb(205,28,53)"/><text x="23.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1268" width="2" height="15" fill="rgb(248,95,23)"/><text x="23.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1284" width="2" height="15" fill="rgb(245,179,50)"/><text x="23.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1300" width="2" height="15" fill="rgb(248,14,53)"/><text x="23.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1316" width="2" height="15" fill="rgb(207,97,24)"/><text x="23.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="20" y="1332" width="2" height="15" fill="rgb(235,67,28)"/><text x="23.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1348" width="2" height="15" fill="rgb(222,178,36)"/><text x="23.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.21%)</title><rect x="20" y="1364" width="2" height="15" fill="rgb(244,94,23)"/><text x="23.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1380" width="2" height="15" fill="rgb(234,22,0)"/><text x="23.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1396" width="2" height="15" fill="rgb(217,73,1)"/><text x="23.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1412" width="2" height="15" fill="rgb(220,221,19)"/><text x="23.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="20" y="1428" width="2" height="15" fill="rgb(232,142,1)"/><text x="23.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="20" y="1444" width="2" height="15" fill="rgb(243,17,17)"/><text x="23.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.21%)</title><rect x="20" y="1460" width="2" height="15" fill="rgb(240,13,25)"/><text x="23.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.21%)</title><rect x="20" y="1476" width="2" height="15" fill="rgb(230,48,47)"/><text x="23.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.21%)</title><rect x="20" y="1492" width="2" height="15" fill="rgb(212,105,51)"/><text x="23.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.11%)</title><rect x="21" y="1508" width="1" height="15" fill="rgb(215,129,5)"/><text x="24.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.11%)</title><rect x="21" y="1524" width="1" height="15" fill="rgb(225,98,44)"/><text x="24.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="21" y="1540" width="1" height="15" fill="rgb(233,182,0)"/><text x="24.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="21" y="1556" width="1" height="15" fill="rgb(253,203,9)"/><text x="24.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.11%)</title><rect x="21" y="1572" width="1" height="15" fill="rgb(222,57,19)"/><text x="24.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="21" y="1588" width="1" height="15" fill="rgb(229,61,45)"/><text x="24.00" y="1598.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (3 samples, 0.32%)</title><rect x="20" y="436" width="3" height="15" fill="rgb(242,17,26)"/><text x="23.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="20" y="452" width="3" height="15" fill="rgb(243,95,15)"/><text x="23.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="20" y="468" width="3" height="15" fill="rgb(212,92,2)"/><text x="23.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="484" width="1" height="15" fill="rgb(236,216,16)"/><text x="25.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="500" width="1" height="15" fill="rgb(215,108,20)"/><text x="25.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="516" width="1" height="15" fill="rgb(219,49,21)"/><text x="25.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.11%)</title><rect x="22" y="532" width="1" height="15" fill="rgb(207,112,29)"/><text x="25.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="548" width="1" height="15" fill="rgb(251,65,8)"/><text x="25.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="564" width="1" height="15" fill="rgb(226,78,12)"/><text x="25.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="580" width="1" height="15" fill="rgb(206,199,6)"/><text x="25.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="596" width="1" height="15" fill="rgb(230,123,5)"/><text x="25.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="612" width="1" height="15" fill="rgb(217,216,46)"/><text x="25.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="628" width="1" height="15" fill="rgb(209,96,25)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="644" width="1" height="15" fill="rgb(248,141,14)"/><text x="25.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="660" width="1" height="15" fill="rgb(214,144,21)"/><text x="25.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="676" width="1" height="15" fill="rgb(230,119,53)"/><text x="25.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="692" width="1" height="15" fill="rgb(211,115,40)"/><text x="25.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="708" width="1" height="15" fill="rgb(249,213,43)"/><text x="25.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.11%)</title><rect x="22" y="724" width="1" height="15" fill="rgb(226,208,29)"/><text x="25.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="740" width="1" height="15" fill="rgb(245,158,44)"/><text x="25.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="756" width="1" height="15" fill="rgb(238,103,37)"/><text x="25.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="772" width="1" height="15" fill="rgb(205,206,44)"/><text x="25.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="788" width="1" height="15" fill="rgb(234,221,22)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="804" width="1" height="15" fill="rgb(228,112,26)"/><text x="25.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="820" width="1" height="15" fill="rgb(219,204,47)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="836" width="1" height="15" fill="rgb(213,118,30)"/><text x="25.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="852" width="1" height="15" fill="rgb(221,200,26)"/><text x="25.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="868" width="1" height="15" fill="rgb(217,0,25)"/><text x="25.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="884" width="1" height="15" fill="rgb(239,97,19)"/><text x="25.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="900" width="1" height="15" fill="rgb(240,36,9)"/><text x="25.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.11%)</title><rect x="22" y="916" width="1" height="15" fill="rgb(229,20,22)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="932" width="1" height="15" fill="rgb(244,87,18)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="948" width="1" height="15" fill="rgb(227,120,16)"/><text x="25.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="964" width="1" height="15" fill="rgb(227,135,41)"/><text x="25.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="980" width="1" height="15" fill="rgb(246,165,37)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="996" width="1" height="15" fill="rgb(244,221,19)"/><text x="25.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.11%)</title><rect x="22" y="1012" width="1" height="15" fill="rgb(226,168,29)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1028" width="1" height="15" fill="rgb(220,85,40)"/><text x="25.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1044" width="1" height="15" fill="rgb(250,135,27)"/><text x="25.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1060" width="1" height="15" fill="rgb(205,88,43)"/><text x="25.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1076" width="1" height="15" fill="rgb(227,167,20)"/><text x="25.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1092" width="1" height="15" fill="rgb(216,49,34)"/><text x="25.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.11%)</title><rect x="22" y="1108" width="1" height="15" fill="rgb(218,192,19)"/><text x="25.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1124" width="1" height="15" fill="rgb(207,21,13)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1140" width="1" height="15" fill="rgb(243,68,51)"/><text x="25.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1156" width="1" height="15" fill="rgb(225,221,5)"/><text x="25.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1172" width="1" height="15" fill="rgb(250,129,49)"/><text x="25.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1188" width="1" height="15" fill="rgb(213,56,15)"/><text x="25.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="1204" width="1" height="15" fill="rgb(236,97,25)"/><text x="25.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1220" width="1" height="15" fill="rgb(226,116,3)"/><text x="25.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1236" width="1" height="15" fill="rgb(220,62,12)"/><text x="25.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1252" width="1" height="15" fill="rgb(224,191,52)"/><text x="25.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1268" width="1" height="15" fill="rgb(248,126,46)"/><text x="25.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1284" width="1" height="15" fill="rgb(219,27,9)"/><text x="25.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.11%)</title><rect x="22" y="1300" width="1" height="15" fill="rgb(232,113,0)"/><text x="25.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1316" width="1" height="15" fill="rgb(243,174,29)"/><text x="25.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1332" width="1" height="15" fill="rgb(251,4,44)"/><text x="25.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1348" width="1" height="15" fill="rgb(217,165,21)"/><text x="25.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1364" width="1" height="15" fill="rgb(207,192,8)"/><text x="25.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1380" width="1" height="15" fill="rgb(251,225,38)"/><text x="25.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="1396" width="1" height="15" fill="rgb(249,169,9)"/><text x="25.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1412" width="1" height="15" fill="rgb(226,195,16)"/><text x="25.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1428" width="1" height="15" fill="rgb(214,143,32)"/><text x="25.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1444" width="1" height="15" fill="rgb(206,97,24)"/><text x="25.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1460" width="1" height="15" fill="rgb(243,99,11)"/><text x="25.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1476" width="1" height="15" fill="rgb(221,170,16)"/><text x="25.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.11%)</title><rect x="22" y="1492" width="1" height="15" fill="rgb(242,188,44)"/><text x="25.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1508" width="1" height="15" fill="rgb(250,185,29)"/><text x="25.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1524" width="1" height="15" fill="rgb(207,162,23)"/><text x="25.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1540" width="1" height="15" fill="rgb(249,42,0)"/><text x="25.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1556" width="1" height="15" fill="rgb(249,172,21)"/><text x="25.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1572" width="1" height="15" fill="rgb(208,210,28)"/><text x="25.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1588" width="1" height="15" fill="rgb(232,161,42)"/><text x="25.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1604" width="1" height="15" fill="rgb(225,138,5)"/><text x="25.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1620" width="1" height="15" fill="rgb(239,219,47)"/><text x="25.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="1636" width="1" height="15" fill="rgb(207,0,9)"/><text x="25.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1652" width="1" height="15" fill="rgb(237,7,2)"/><text x="25.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1668" width="1" height="15" fill="rgb(227,161,50)"/><text x="25.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1684" width="1" height="15" fill="rgb(210,102,39)"/><text x="25.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1700" width="1" height="15" fill="rgb(241,117,23)"/><text x="25.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1716" width="1" height="15" fill="rgb(209,70,44)"/><text x="25.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1732" width="1" height="15" fill="rgb(208,214,8)"/><text x="25.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1748" width="1" height="15" fill="rgb(223,97,34)"/><text x="25.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.11%)</title><rect x="22" y="1764" width="1" height="15" fill="rgb(240,162,36)"/><text x="25.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1780" width="1" height="15" fill="rgb(234,222,30)"/><text x="25.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1796" width="1" height="15" fill="rgb(211,203,29)"/><text x="25.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1812" width="1" height="15" fill="rgb(222,135,39)"/><text x="25.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1828" width="1" height="15" fill="rgb(223,58,21)"/><text x="25.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1844" width="1" height="15" fill="rgb(230,82,2)"/><text x="25.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.11%)</title><rect x="22" y="1860" width="1" height="15" fill="rgb(205,75,37)"/><text x="25.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1876" width="1" height="15" fill="rgb(233,28,22)"/><text x="25.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1892" width="1" height="15" fill="rgb(223,219,34)"/><text x="25.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1908" width="1" height="15" fill="rgb(227,166,27)"/><text x="25.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1924" width="1" height="15" fill="rgb(242,198,5)"/><text x="25.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1940" width="1" height="15" fill="rgb(221,150,47)"/><text x="25.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.11%)</title><rect x="22" y="1956" width="1" height="15" fill="rgb(208,118,50)"/><text x="25.00" y="1966.50"></text></g><g><title>register (abc.py) (1 samples, 0.11%)</title><rect x="22" y="1972" width="1" height="15" fill="rgb(232,48,10)"/><text x="25.00" y="1982.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.11%)</title><rect x="22" y="1988" width="1" height="15" fill="rgb(243,32,44)"/><text x="25.00" y="1998.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.11%)</title><rect x="22" y="2004" width="1" height="15" fill="rgb(238,165,52)"/><text x="25.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="548" width="2" height="15" fill="rgb(245,177,36)"/><text x="26.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="564" width="2" height="15" fill="rgb(206,55,47)"/><text x="26.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="580" width="2" height="15" fill="rgb(217,65,19)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="596" width="2" height="15" fill="rgb(211,9,1)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="612" width="2" height="15" fill="rgb(231,57,38)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="628" width="2" height="15" fill="rgb(227,10,18)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="23" y="644" width="2" height="15" fill="rgb(211,140,34)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="660" width="2" height="15" fill="rgb(226,34,18)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_extraction/__init__.py) (1 samples, 0.11%)</title><rect x="23" y="676" width="2" height="15" fill="rgb(214,19,45)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="692" width="2" height="15" fill="rgb(211,57,35)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="708" width="2" height="15" fill="rgb(221,48,49)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="724" width="2" height="15" fill="rgb(224,49,5)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="23" y="740" width="2" height="15" fill="rgb(236,62,26)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="756" width="2" height="15" fill="rgb(252,10,9)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_extraction/_hashing.py) (1 samples, 0.11%)</title><rect x="23" y="772" width="2" height="15" fill="rgb(221,170,42)"/><text x="26.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="788" width="2" height="15" fill="rgb(226,41,48)"/><text x="26.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="804" width="2" height="15" fill="rgb(224,76,41)"/><text x="26.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="820" width="2" height="15" fill="rgb(244,30,28)"/><text x="26.00" y="830.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="836" width="2" height="15" fill="rgb(254,213,26)"/><text x="26.00" y="846.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="23" y="852" width="2" height="15" fill="rgb(213,186,19)"/><text x="26.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="868" width="2" height="15" fill="rgb(215,175,1)"/><text x="26.00" y="878.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.54%)</title><rect x="20" y="340" width="6" height="15" fill="rgb(235,51,34)"/><text x="23.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="20" y="356" width="6" height="15" fill="rgb(206,178,35)"/><text x="23.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="20" y="372" width="6" height="15" fill="rgb(221,136,6)"/><text x="23.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="20" y="388" width="6" height="15" fill="rgb(210,132,21)"/><text x="23.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="20" y="404" width="6" height="15" fill="rgb(220,45,20)"/><text x="23.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="20" y="420" width="6" height="15" fill="rgb(247,150,31)"/><text x="23.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (2 samples, 0.21%)</title><rect x="23" y="436" width="3" height="15" fill="rgb(214,34,20)"/><text x="26.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="452" width="3" height="15" fill="rgb(237,73,10)"/><text x="26.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="468" width="3" height="15" fill="rgb(217,206,42)"/><text x="26.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="484" width="3" height="15" fill="rgb(217,216,22)"/><text x="26.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="23" y="500" width="3" height="15" fill="rgb(246,186,15)"/><text x="26.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="23" y="516" width="3" height="15" fill="rgb(235,29,27)"/><text x="26.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_twenty_newsgroups.py) (2 samples, 0.21%)</title><rect x="23" y="532" width="3" height="15" fill="rgb(211,47,41)"/><text x="26.00" y="542.50"></text></g><g><title>compile (re.py) (1 samples, 0.11%)</title><rect x="25" y="548" width="1" height="15" fill="rgb(248,34,22)"/><text x="28.00" y="558.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="25" y="564" width="1" height="15" fill="rgb(225,192,0)"/><text x="28.00" y="574.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="25" y="580" width="1" height="15" fill="rgb(223,41,50)"/><text x="28.00" y="590.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="25" y="596" width="1" height="15" fill="rgb(243,216,17)"/><text x="28.00" y="606.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="25" y="612" width="1" height="15" fill="rgb(233,193,2)"/><text x="28.00" y="622.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="25" y="628" width="1" height="15" fill="rgb(208,184,21)"/><text x="28.00" y="638.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="25" y="644" width="1" height="15" fill="rgb(215,71,11)"/><text x="28.00" y="654.50"></text></g><g><title>match (sre_parse.py) (1 samples, 0.11%)</title><rect x="25" y="660" width="1" height="15" fill="rgb(205,16,5)"/><text x="28.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="900" width="1" height="15" fill="rgb(207,32,39)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.11%)</title><rect x="26" y="916" width="1" height="15" fill="rgb(214,207,33)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="932" width="1" height="15" fill="rgb(243,44,3)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="948" width="1" height="15" fill="rgb(218,75,4)"/><text x="29.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="964" width="1" height="15" fill="rgb(221,81,25)"/><text x="29.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="980" width="1" height="15" fill="rgb(212,134,40)"/><text x="29.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="996" width="1" height="15" fill="rgb(232,114,28)"/><text x="29.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1012" width="1" height="15" fill="rgb(232,3,48)"/><text x="29.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1028" width="1" height="15" fill="rgb(246,142,54)"/><text x="29.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1044" width="1" height="15" fill="rgb(209,191,14)"/><text x="29.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.11%)</title><rect x="26" y="1060" width="1" height="15" fill="rgb(240,197,34)"/><text x="29.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1076" width="1" height="15" fill="rgb(222,141,16)"/><text x="29.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1092" width="1" height="15" fill="rgb(216,130,48)"/><text x="29.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1108" width="1" height="15" fill="rgb(241,48,31)"/><text x="29.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1124" width="1" height="15" fill="rgb(220,6,41)"/><text x="29.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1140" width="1" height="15" fill="rgb(242,37,20)"/><text x="29.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1156" width="1" height="15" fill="rgb(218,63,11)"/><text x="29.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="628" width="2" height="15" fill="rgb(235,55,25)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="644" width="2" height="15" fill="rgb(221,15,41)"/><text x="29.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="660" width="2" height="15" fill="rgb(235,207,43)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="676" width="2" height="15" fill="rgb(227,112,45)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="26" y="692" width="2" height="15" fill="rgb(226,6,14)"/><text x="29.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="708" width="2" height="15" fill="rgb(241,107,48)"/><text x="29.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (2 samples, 0.21%)</title><rect x="26" y="724" width="2" height="15" fill="rgb(227,75,35)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="740" width="2" height="15" fill="rgb(206,202,4)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="756" width="2" height="15" fill="rgb(216,177,39)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="772" width="2" height="15" fill="rgb(227,152,39)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="26" y="788" width="2" height="15" fill="rgb(235,186,52)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="804" width="2" height="15" fill="rgb(218,19,34)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (2 samples, 0.21%)</title><rect x="26" y="820" width="2" height="15" fill="rgb(206,57,15)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="836" width="2" height="15" fill="rgb(225,227,30)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="852" width="2" height="15" fill="rgb(220,11,42)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(232,138,26)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(226,179,32)"/><text x="29.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="900" width="1" height="15" fill="rgb(209,53,5)"/><text x="30.00" y="910.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="916" width="1" height="15" fill="rgb(209,82,39)"/><text x="30.00" y="926.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="27" y="932" width="1" height="15" fill="rgb(222,224,40)"/><text x="30.00" y="942.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (3 samples, 0.32%)</title><rect x="26" y="580" width="4" height="15" fill="rgb(205,216,4)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="26" y="596" width="4" height="15" fill="rgb(220,59,40)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="26" y="612" width="4" height="15" fill="rgb(215,55,29)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="628" width="2" height="15" fill="rgb(249,200,25)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="644" width="2" height="15" fill="rgb(212,136,18)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="660" width="2" height="15" fill="rgb(236,197,21)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.11%)</title><rect x="28" y="676" width="2" height="15" fill="rgb(253,141,19)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="692" width="2" height="15" fill="rgb(218,132,27)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="708" width="2" height="15" fill="rgb(212,35,31)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="724" width="2" height="15" fill="rgb(212,142,5)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="740" width="2" height="15" fill="rgb(208,37,38)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="756" width="2" height="15" fill="rgb(234,215,23)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.11%)</title><rect x="28" y="772" width="2" height="15" fill="rgb(246,66,19)"/><text x="31.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.11%)</title><rect x="28" y="788" width="2" height="15" fill="rgb(248,57,27)"/><text x="31.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="28" y="804" width="2" height="15" fill="rgb(233,117,13)"/><text x="31.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="28" y="820" width="2" height="15" fill="rgb(206,106,8)"/><text x="31.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="28" y="836" width="2" height="15" fill="rgb(215,92,53)"/><text x="31.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="28" y="852" width="2" height="15" fill="rgb(252,36,49)"/><text x="31.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="28" y="868" width="2" height="15" fill="rgb(206,62,51)"/><text x="31.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="28" y="884" width="2" height="15" fill="rgb(231,181,3)"/><text x="31.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="28" y="900" width="2" height="15" fill="rgb(218,161,38)"/><text x="31.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.11%)</title><rect x="28" y="916" width="2" height="15" fill="rgb(244,226,9)"/><text x="31.00" y="926.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 0.96%)</title><rect x="20" y="244" width="11" height="15" fill="rgb(247,101,51)"/><text x="23.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.96%)</title><rect x="20" y="260" width="11" height="15" fill="rgb(206,119,6)"/><text x="23.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.96%)</title><rect x="20" y="276" width="11" height="15" fill="rgb(213,100,18)"/><text x="23.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.96%)</title><rect x="20" y="292" width="11" height="15" fill="rgb(237,130,22)"/><text x="23.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 0.96%)</title><rect x="20" y="308" width="11" height="15" fill="rgb(238,167,46)"/><text x="23.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.96%)</title><rect x="20" y="324" width="11" height="15" fill="rgb(206,24,35)"/><text x="23.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 0.43%)</title><rect x="26" y="340" width="5" height="15" fill="rgb(227,45,11)"/><text x="29.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="26" y="356" width="5" height="15" fill="rgb(244,167,47)"/><text x="29.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="26" y="372" width="5" height="15" fill="rgb(219,176,49)"/><text x="29.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="26" y="388" width="5" height="15" fill="rgb(250,11,14)"/><text x="29.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="26" y="404" width="5" height="15" fill="rgb(225,47,36)"/><text x="29.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="26" y="420" width="5" height="15" fill="rgb(223,87,27)"/><text x="29.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="26" y="436" width="5" height="15" fill="rgb(205,201,14)"/><text x="29.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.43%)</title><rect x="26" y="452" width="5" height="15" fill="rgb(220,70,54)"/><text x="29.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="26" y="468" width="5" height="15" fill="rgb(246,150,20)"/><text x="29.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (4 samples, 0.43%)</title><rect x="26" y="484" width="5" height="15" fill="rgb(249,175,46)"/><text x="29.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="26" y="500" width="5" height="15" fill="rgb(237,211,13)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="26" y="516" width="5" height="15" fill="rgb(231,219,38)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="26" y="532" width="5" height="15" fill="rgb(240,126,0)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.43%)</title><rect x="26" y="548" width="5" height="15" fill="rgb(229,62,0)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="26" y="564" width="5" height="15" fill="rgb(210,52,14)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.11%)</title><rect x="30" y="580" width="1" height="15" fill="rgb(243,95,49)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="596" width="1" height="15" fill="rgb(212,70,45)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="612" width="1" height="15" fill="rgb(252,42,31)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="628" width="1" height="15" fill="rgb(227,164,21)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="644" width="1" height="15" fill="rgb(237,141,44)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="660" width="1" height="15" fill="rgb(250,65,51)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.11%)</title><rect x="30" y="676" width="1" height="15" fill="rgb(205,195,35)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="692" width="1" height="15" fill="rgb(237,65,6)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="708" width="1" height="15" fill="rgb(215,33,9)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="724" width="1" height="15" fill="rgb(207,102,7)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="740" width="1" height="15" fill="rgb(230,89,39)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="756" width="1" height="15" fill="rgb(253,221,4)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.11%)</title><rect x="30" y="772" width="1" height="15" fill="rgb(254,206,34)"/><text x="33.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="788" width="1" height="15" fill="rgb(253,107,9)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="804" width="1" height="15" fill="rgb(252,218,42)"/><text x="33.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="820" width="1" height="15" fill="rgb(239,166,39)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="836" width="1" height="15" fill="rgb(225,172,25)"/><text x="33.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="852" width="1" height="15" fill="rgb(236,213,48)"/><text x="33.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="868" width="1" height="15" fill="rgb(206,69,42)"/><text x="33.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="884" width="1" height="15" fill="rgb(209,123,50)"/><text x="33.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.11%)</title><rect x="30" y="900" width="1" height="15" fill="rgb(206,150,28)"/><text x="33.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="916" width="1" height="15" fill="rgb(243,154,12)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="932" width="1" height="15" fill="rgb(211,185,48)"/><text x="33.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="948" width="1" height="15" fill="rgb(213,50,20)"/><text x="33.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="964" width="1" height="15" fill="rgb(222,8,29)"/><text x="33.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="980" width="1" height="15" fill="rgb(226,202,26)"/><text x="33.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py) (1 samples, 0.11%)</title><rect x="30" y="996" width="1" height="15" fill="rgb(231,94,47)"/><text x="33.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1012" width="1" height="15" fill="rgb(205,49,7)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1028" width="1" height="15" fill="rgb(235,174,6)"/><text x="33.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1044" width="1" height="15" fill="rgb(248,55,6)"/><text x="33.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1060" width="1" height="15" fill="rgb(238,86,14)"/><text x="33.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1076" width="1" height="15" fill="rgb(218,160,20)"/><text x="33.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py) (1 samples, 0.11%)</title><rect x="30" y="1092" width="1" height="15" fill="rgb(240,35,54)"/><text x="33.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1108" width="1" height="15" fill="rgb(218,168,51)"/><text x="33.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1124" width="1" height="15" fill="rgb(247,152,21)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1140" width="1" height="15" fill="rgb(220,224,45)"/><text x="33.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1156" width="1" height="15" fill="rgb(223,126,7)"/><text x="33.00" y="1166.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1172" width="1" height="15" fill="rgb(228,179,10)"/><text x="33.00" y="1182.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1188" width="1" height="15" fill="rgb(214,161,23)"/><text x="33.00" y="1198.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.11%)</title><rect x="30" y="1204" width="1" height="15" fill="rgb(220,106,34)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="516" width="1" height="15" fill="rgb(233,94,7)"/><text x="34.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="532" width="1" height="15" fill="rgb(211,77,7)"/><text x="34.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="548" width="1" height="15" fill="rgb(211,154,24)"/><text x="34.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="564" width="1" height="15" fill="rgb(216,156,50)"/><text x="34.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="580" width="1" height="15" fill="rgb(224,11,32)"/><text x="34.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.11%)</title><rect x="31" y="596" width="1" height="15" fill="rgb(210,213,1)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="612" width="1" height="15" fill="rgb(249,91,31)"/><text x="34.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="628" width="1" height="15" fill="rgb(230,132,27)"/><text x="34.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="644" width="1" height="15" fill="rgb(206,133,22)"/><text x="34.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="660" width="1" height="15" fill="rgb(235,218,32)"/><text x="34.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="676" width="1" height="15" fill="rgb(250,127,6)"/><text x="34.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (1 samples, 0.11%)</title><rect x="31" y="692" width="1" height="15" fill="rgb(234,136,42)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="708" width="1" height="15" fill="rgb(235,212,0)"/><text x="34.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="724" width="1" height="15" fill="rgb(229,208,31)"/><text x="34.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="740" width="1" height="15" fill="rgb(233,110,11)"/><text x="34.00" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="756" width="1" height="15" fill="rgb(229,130,30)"/><text x="34.00" y="766.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="772" width="1" height="15" fill="rgb(214,175,53)"/><text x="34.00" y="782.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="788" width="1" height="15" fill="rgb(217,44,53)"/><text x="34.00" y="798.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (2 samples, 0.21%)</title><rect x="31" y="500" width="3" height="15" fill="rgb(213,190,14)"/><text x="34.00" y="510.50"></text></g><g><title>_missing_ctypes (numpy/core/_internal.py) (1 samples, 0.11%)</title><rect x="32" y="516" width="2" height="15" fill="rgb(244,137,17)"/><text x="35.00" y="526.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.32%)</title><rect x="31" y="244" width="4" height="15" fill="rgb(226,109,26)"/><text x="34.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="31" y="260" width="4" height="15" fill="rgb(234,10,20)"/><text x="34.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="31" y="276" width="4" height="15" fill="rgb(254,135,3)"/><text x="34.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="31" y="292" width="4" height="15" fill="rgb(233,132,12)"/><text x="34.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="31" y="308" width="4" height="15" fill="rgb(208,155,17)"/><text x="34.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="31" y="324" width="4" height="15" fill="rgb(212,155,50)"/><text x="34.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="31" y="340" width="4" height="15" fill="rgb(235,161,15)"/><text x="34.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="31" y="356" width="4" height="15" fill="rgb(226,5,46)"/><text x="34.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (3 samples, 0.32%)</title><rect x="31" y="372" width="4" height="15" fill="rgb(214,219,10)"/><text x="34.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="31" y="388" width="4" height="15" fill="rgb(207,121,40)"/><text x="34.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="31" y="404" width="4" height="15" fill="rgb(243,177,26)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="31" y="420" width="4" height="15" fill="rgb(225,133,48)"/><text x="34.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="31" y="436" width="4" height="15" fill="rgb(250,218,19)"/><text x="34.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="31" y="452" width="4" height="15" fill="rgb(225,7,2)"/><text x="34.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="31" y="468" width="4" height="15" fill="rgb(234,144,52)"/><text x="34.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="31" y="484" width="4" height="15" fill="rgb(238,69,19)"/><text x="34.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/shape_base.py) (1 samples, 0.11%)</title><rect x="34" y="500" width="1" height="15" fill="rgb(222,108,19)"/><text x="37.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.11%)</title><rect x="34" y="516" width="1" height="15" fill="rgb(230,216,4)"/><text x="37.00" y="526.50"></text></g><g><title>verify_matching_signatures (numpy/core/overrides.py) (1 samples, 0.11%)</title><rect x="34" y="532" width="1" height="15" fill="rgb(254,93,16)"/><text x="37.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.25%)</title><rect x="10" y="68" width="26" height="15" fill="rgb(219,139,6)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.25%)</title><rect x="10" y="84" width="26" height="15" fill="rgb(245,121,16)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.25%)</title><rect x="10" y="100" width="26" height="15" fill="rgb(232,119,1)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 2.25%)</title><rect x="10" y="116" width="26" height="15" fill="rgb(210,207,30)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.25%)</title><rect x="10" y="132" width="26" height="15" fill="rgb(246,130,45)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_m_cl_probabilityTrue_kernelpoly.py) (21 samples, 2.25%)</title><rect x="10" y="148" width="26" height="15" fill="rgb(247,73,26)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.25%)</title><rect x="10" y="164" width="26" height="15" fill="rgb(235,72,43)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.25%)</title><rect x="10" y="180" width="26" height="15" fill="rgb(236,28,7)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.39%)</title><rect x="20" y="196" width="16" height="15" fill="rgb(240,115,44)"/><text x="23.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 1.39%)</title><rect x="20" y="212" width="16" height="15" fill="rgb(219,68,38)"/><text x="23.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.39%)</title><rect x="20" y="228" width="16" height="15" fill="rgb(236,3,6)"/><text x="23.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/__init__.py) (1 samples, 0.11%)</title><rect x="35" y="244" width="1" height="15" fill="rgb(220,119,54)"/><text x="38.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="260" width="1" height="15" fill="rgb(240,38,9)"/><text x="38.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="276" width="1" height="15" fill="rgb(214,89,7)"/><text x="38.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="292" width="1" height="15" fill="rgb(208,76,16)"/><text x="38.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="308" width="1" height="15" fill="rgb(216,14,37)"/><text x="38.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="324" width="1" height="15" fill="rgb(212,117,45)"/><text x="38.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/_classes.py) (1 samples, 0.11%)</title><rect x="35" y="340" width="1" height="15" fill="rgb(230,203,1)"/><text x="38.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="356" width="1" height="15" fill="rgb(239,197,5)"/><text x="38.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="372" width="1" height="15" fill="rgb(230,175,13)"/><text x="38.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="388" width="1" height="15" fill="rgb(247,144,46)"/><text x="38.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="404" width="1" height="15" fill="rgb(252,117,30)"/><text x="38.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="420" width="1" height="15" fill="rgb(253,196,11)"/><text x="38.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="436" width="1" height="15" fill="rgb(218,221,12)"/><text x="38.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="452" width="1" height="15" fill="rgb(250,102,23)"/><text x="38.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="468" width="1" height="15" fill="rgb(253,6,29)"/><text x="38.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.11%)</title><rect x="35" y="484" width="1" height="15" fill="rgb(210,155,1)"/><text x="38.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="500" width="1" height="15" fill="rgb(216,173,32)"/><text x="38.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="516" width="1" height="15" fill="rgb(244,191,50)"/><text x="38.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="532" width="1" height="15" fill="rgb(251,43,14)"/><text x="38.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="548" width="1" height="15" fill="rgb(211,136,8)"/><text x="38.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="564" width="1" height="15" fill="rgb(253,102,17)"/><text x="38.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py) (1 samples, 0.11%)</title><rect x="35" y="580" width="1" height="15" fill="rgb(206,175,23)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="596" width="1" height="15" fill="rgb(226,129,29)"/><text x="38.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="612" width="1" height="15" fill="rgb(252,82,51)"/><text x="38.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="628" width="1" height="15" fill="rgb(249,109,35)"/><text x="38.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="644" width="1" height="15" fill="rgb(223,65,34)"/><text x="38.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="660" width="1" height="15" fill="rgb(240,133,43)"/><text x="38.00" y="670.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py) (1 samples, 0.11%)</title><rect x="35" y="676" width="1" height="15" fill="rgb(238,168,30)"/><text x="38.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="692" width="1" height="15" fill="rgb(217,80,31)"/><text x="38.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="708" width="1" height="15" fill="rgb(252,75,16)"/><text x="38.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="724" width="1" height="15" fill="rgb(228,129,1)"/><text x="38.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="740" width="1" height="15" fill="rgb(209,151,40)"/><text x="38.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="756" width="1" height="15" fill="rgb(230,212,50)"/><text x="38.00" y="766.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/_validation.py) (1 samples, 0.11%)</title><rect x="35" y="772" width="1" height="15" fill="rgb(230,202,20)"/><text x="38.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="788" width="1" height="15" fill="rgb(220,37,34)"/><text x="38.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="804" width="1" height="15" fill="rgb(225,44,51)"/><text x="38.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="820" width="1" height="15" fill="rgb(254,90,8)"/><text x="38.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="836" width="1" height="15" fill="rgb(237,91,49)"/><text x="38.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="852" width="1" height="15" fill="rgb(222,174,7)"/><text x="38.00" y="862.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py) (1 samples, 0.11%)</title><rect x="35" y="868" width="1" height="15" fill="rgb(227,157,5)"/><text x="38.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="884" width="1" height="15" fill="rgb(252,47,6)"/><text x="38.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="900" width="1" height="15" fill="rgb(237,183,36)"/><text x="38.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="916" width="1" height="15" fill="rgb(245,168,42)"/><text x="38.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="932" width="1" height="15" fill="rgb(223,215,18)"/><text x="38.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="948" width="1" height="15" fill="rgb(227,126,27)"/><text x="38.00" y="958.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="964" width="1" height="15" fill="rgb(226,17,14)"/><text x="38.00" y="974.50"></text></g><g><title>0x7f9b2d3e7bc6 (libc-2.29.so) (3 samples, 0.32%)</title><rect x="44" y="132" width="3" height="15" fill="rgb(243,12,17)"/><text x="47.00" y="142.50"></text></g><g><title>0x7f9b2d3e8eb0 (libc-2.29.so) (4 samples, 0.43%)</title><rect x="44" y="116" width="5" height="15" fill="rgb(233,188,49)"/><text x="47.00" y="126.50"></text></g><g><title>0x7f9b2d3e7c2d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="47" y="132" width="2" height="15" fill="rgb(222,119,0)"/><text x="50.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="49" y="116" width="1" height="15" fill="rgb(229,194,23)"/><text x="52.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="49" y="132" width="1" height="15" fill="rgb(226,134,1)"/><text x="52.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="49" y="148" width="1" height="15" fill="rgb(238,81,54)"/><text x="52.00" y="158.50"></text></g><g><title>0x7f9b2c60af10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="49" y="164" width="1" height="15" fill="rgb(218,153,53)"/><text x="52.00" y="174.50"></text></g><g><title>0x7f9aed458ff9 (?) (1 samples, 0.11%)</title><rect x="50" y="212" width="1" height="15" fill="rgb(249,139,38)"/><text x="53.00" y="222.50"></text></g><g><title>0x7f9aed453ef6 (?) (1 samples, 0.11%)</title><rect x="50" y="228" width="1" height="15" fill="rgb(220,206,40)"/><text x="53.00" y="238.50"></text></g><g><title>0x7f9aed448962 (?) (1 samples, 0.11%)</title><rect x="50" y="244" width="1" height="15" fill="rgb(249,93,11)"/><text x="53.00" y="254.50"></text></g><g><title>0x7f9aed47c7a7 (?) (1 samples, 0.11%)</title><rect x="50" y="260" width="1" height="15" fill="rgb(253,57,7)"/><text x="53.00" y="270.50"></text></g><g><title>0x7f9aed47c379 (?) (1 samples, 0.11%)</title><rect x="50" y="276" width="1" height="15" fill="rgb(250,104,30)"/><text x="53.00" y="286.50"></text></g><g><title>0x7f9aed8da8b8 (?) (1 samples, 0.11%)</title><rect x="50" y="292" width="1" height="15" fill="rgb(231,49,4)"/><text x="53.00" y="302.50"></text></g><g><title>0x7f9aed8d8c7f (?) (1 samples, 0.11%)</title><rect x="50" y="308" width="1" height="15" fill="rgb(248,24,36)"/><text x="53.00" y="318.50"></text></g><g><title>0x7f9aed8eb99c (?) (1 samples, 0.11%)</title><rect x="50" y="324" width="1" height="15" fill="rgb(215,91,8)"/><text x="53.00" y="334.50"></text></g><g><title>0x7f9aed5f1052 (?) (1 samples, 0.11%)</title><rect x="50" y="340" width="1" height="15" fill="rgb(240,181,35)"/><text x="53.00" y="350.50"></text></g><g><title>0x7f9aed5f0073 (?) (1 samples, 0.11%)</title><rect x="50" y="356" width="1" height="15" fill="rgb(245,187,6)"/><text x="53.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="51" y="292" width="2" height="15" fill="rgb(249,187,6)"/><text x="54.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="51" y="308" width="2" height="15" fill="rgb(226,121,23)"/><text x="54.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="51" y="324" width="2" height="15" fill="rgb(229,37,5)"/><text x="54.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="53" y="292" width="1" height="15" fill="rgb(241,61,47)"/><text x="56.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CheckShapes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="53" y="308" width="1" height="15" fill="rgb(218,112,29)"/><text x="56.00" y="318.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="54" y="340" width="1" height="15" fill="rgb(207,32,27)"/><text x="57.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="54" y="356" width="1" height="15" fill="rgb(210,3,28)"/><text x="57.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="54" y="372" width="1" height="15" fill="rgb(207,30,52)"/><text x="57.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="54" y="388" width="1" height="15" fill="rgb(247,196,19)"/><text x="57.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="54" y="404" width="1" height="15" fill="rgb(227,137,49)"/><text x="57.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="54" y="420" width="1" height="15" fill="rgb(243,145,26)"/><text x="57.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="54" y="436" width="1" height="15" fill="rgb(229,127,39)"/><text x="57.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="54" y="452" width="1" height="15" fill="rgb(224,23,35)"/><text x="57.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="54" y="468" width="1" height="15" fill="rgb(236,0,11)"/><text x="57.00" y="478.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="54" y="484" width="1" height="15" fill="rgb(212,223,39)"/><text x="57.00" y="494.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="55" y="340" width="1" height="15" fill="rgb(247,187,45)"/><text x="58.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="55" y="356" width="1" height="15" fill="rgb(233,183,10)"/><text x="58.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="55" y="372" width="1" height="15" fill="rgb(240,199,22)"/><text x="58.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="55" y="388" width="1" height="15" fill="rgb(233,3,54)"/><text x="58.00" y="398.50"></text></g><g><title>0x7f9aed41f930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="127" y="356" width="1" height="15" fill="rgb(247,179,12)"/><text x="130.00" y="366.50"></text></g><g><title>0x7f9aed41f960 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="128" y="356" width="2" height="15" fill="rgb(222,199,38)"/><text x="131.00" y="366.50"></text></g><g><title>0x7f9aed41fed0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="130" y="356" width="1" height="15" fill="rgb(236,125,19)"/><text x="133.00" y="366.50"></text></g><g><title>0x7f9aed4200f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="131" y="356" width="1" height="15" fill="rgb(220,157,7)"/><text x="134.00" y="366.50"></text></g><g><title>0x7f9b2d3e890e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="132" y="356" width="1" height="15" fill="rgb(238,83,47)"/><text x="135.00" y="366.50"></text></g><g><title>0x7f9b2d3e8922 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="133" y="356" width="2" height="15" fill="rgb(242,199,13)"/><text x="136.00" y="366.50"></text></g><g><title>0x7f9b2d3e8945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="135" y="356" width="1" height="15" fill="rgb(250,201,22)"/><text x="138.00" y="366.50"></text></g><g><title>0x7f9b2d3e8991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="136" y="356" width="1" height="15" fill="rgb(228,43,31)"/><text x="139.00" y="366.50"></text></g><g><title>0x7f9b2d3e8a4c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="137" y="356" width="2" height="15" fill="rgb(243,143,18)"/><text x="140.00" y="366.50"></text></g><g><title>0x7f9b2d3e8bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="139" y="356" width="1" height="15" fill="rgb(205,198,7)"/><text x="142.00" y="366.50"></text></g><g><title>0x7f9b2d3e8be4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="140" y="356" width="1" height="15" fill="rgb(227,59,5)"/><text x="143.00" y="366.50"></text></g><g><title>0x7f9b2d567e46 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="141" y="356" width="1" height="15" fill="rgb(212,138,39)"/><text x="144.00" y="366.50"></text></g><g><title>0x7f9b2d567e4e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="142" y="356" width="2" height="15" fill="rgb(214,103,49)"/><text x="145.00" y="366.50"></text></g><g><title>0x7f9b2d567e57 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="144" y="356" width="1" height="15" fill="rgb(223,3,39)"/><text x="147.00" y="366.50"></text></g><g><title>0x7f9b2d567e7a (libm-2.29.so) (1 samples, 0.11%)</title><rect x="145" y="356" width="1" height="15" fill="rgb(248,140,49)"/><text x="148.00" y="366.50"></text></g><g><title>0x7f9b2d567e86 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="146" y="356" width="1" height="15" fill="rgb(231,209,44)"/><text x="149.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="147" y="356" width="2" height="15" fill="rgb(230,222,8)"/><text x="150.00" y="366.50"></text></g><g><title>0x7f9b2d3e8906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="204" y="372" width="2" height="15" fill="rgb(215,5,18)"/><text x="207.00" y="382.50"></text></g><g><title>0x7f9b2d3e890e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="206" y="372" width="1" height="15" fill="rgb(238,97,45)"/><text x="209.00" y="382.50"></text></g><g><title>0x7f9b2d3e891e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="207" y="372" width="1" height="15" fill="rgb(218,209,16)"/><text x="210.00" y="382.50"></text></g><g><title>0x7f9b2d3e8929 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="208" y="372" width="1" height="15" fill="rgb(241,100,46)"/><text x="211.00" y="382.50"></text></g><g><title>0x7f9b2d3e8971 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="209" y="372" width="2" height="15" fill="rgb(210,196,48)"/><text x="212.00" y="382.50"></text></g><g><title>0x7f9b2d3e8a4c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="211" y="372" width="1" height="15" fill="rgb(222,68,5)"/><text x="214.00" y="382.50"></text></g><g><title>0x7f9b1ceb57a0 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="228" y="388" width="2" height="15" fill="rgb(232,219,31)"/><text x="231.00" y="398.50"></text></g><g><title>0x7f9b2d3e8957 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="230" y="388" width="1" height="15" fill="rgb(225,213,22)"/><text x="233.00" y="398.50"></text></g><g><title>0x7f9b2d3e896a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="231" y="388" width="1" height="15" fill="rgb(227,73,25)"/><text x="234.00" y="398.50"></text></g><g><title>0x7f9b2d3e8971 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="232" y="388" width="1" height="15" fill="rgb(220,18,53)"/><text x="235.00" y="398.50"></text></g><g><title>0x7f9b2d3e8a41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="233" y="388" width="2" height="15" fill="rgb(220,98,3)"/><text x="236.00" y="398.50"></text></g><g><title>0x7f9b2d3e8a53 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="235" y="388" width="1" height="15" fill="rgb(216,201,49)"/><text x="238.00" y="398.50"></text></g><g><title>0x7f9b2d3e8a55 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="236" y="388" width="1" height="15" fill="rgb(250,135,12)"/><text x="239.00" y="398.50"></text></g><g><title>0x7f9b2d3e8be8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="237" y="388" width="1" height="15" fill="rgb(225,77,31)"/><text x="240.00" y="398.50"></text></g><g><title>0x7f9b2d408dbf (libc-2.29.so) (1 samples, 0.11%)</title><rect x="238" y="388" width="2" height="15" fill="rgb(234,12,32)"/><text x="241.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.21%)</title><rect x="240" y="388" width="2" height="15" fill="rgb(233,90,39)"/><text x="243.00" y="398.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="242" y="388" width="1" height="15" fill="rgb(232,112,43)"/><text x="245.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (90 samples, 9.65%)</title><rect x="149" y="356" width="113" height="15" fill="rgb(209,168,7)"/><text x="152.00" y="366.50">onnxruntime::..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (40 samples, 4.29%)</title><rect x="212" y="372" width="50" height="15" fill="rgb(232,95,42)"/><text x="215.00" y="382.50">std::..</text></g><g><title>operator new (libstdc++.so.6.0.28) (15 samples, 1.61%)</title><rect x="243" y="388" width="19" height="15" fill="rgb(212,106,10)"/><text x="246.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (13 samples, 1.39%)</title><rect x="246" y="404" width="16" height="15" fill="rgb(212,113,15)"/><text x="249.00" y="414.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="262" y="356" width="3" height="15" fill="rgb(254,90,8)"/><text x="265.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.43%)</title><rect x="265" y="356" width="5" height="15" fill="rgb(205,115,24)"/><text x="268.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.32%)</title><rect x="266" y="372" width="4" height="15" fill="rgb(215,49,8)"/><text x="269.00" y="382.50"></text></g><g><title>0x7f9b2d552b20 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="290" y="372" width="4" height="15" fill="rgb(213,47,16)"/><text x="293.00" y="382.50"></text></g><g><title>0x7f9b2d552b32 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="294" y="372" width="4" height="15" fill="rgb(227,156,49)"/><text x="297.00" y="382.50"></text></g><g><title>0x7f9b2d552b40 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="298" y="372" width="1" height="15" fill="rgb(215,99,4)"/><text x="301.00" y="382.50"></text></g><g><title>0x7f9b2d552b44 (libm-2.29.so) (4 samples, 0.43%)</title><rect x="299" y="372" width="5" height="15" fill="rgb(249,30,52)"/><text x="302.00" y="382.50"></text></g><g><title>0x7f9b2d552b59 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="304" y="372" width="1" height="15" fill="rgb(248,175,43)"/><text x="307.00" y="382.50"></text></g><g><title>0x7f9b2d552b78 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="305" y="372" width="2" height="15" fill="rgb(211,148,46)"/><text x="308.00" y="382.50"></text></g><g><title>0x7f9b2d552b90 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="307" y="372" width="1" height="15" fill="rgb(223,148,38)"/><text x="310.00" y="382.50"></text></g><g><title>0x7f9b2d552b93 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="308" y="372" width="3" height="15" fill="rgb(241,64,20)"/><text x="311.00" y="382.50"></text></g><g><title>0x7f9b2d552baf (libm-2.29.so) (6 samples, 0.64%)</title><rect x="311" y="372" width="7" height="15" fill="rgb(229,191,24)"/><text x="314.00" y="382.50"></text></g><g><title>0x7f9b2d552bba (libm-2.29.so) (1 samples, 0.11%)</title><rect x="318" y="372" width="1" height="15" fill="rgb(232,53,54)"/><text x="321.00" y="382.50"></text></g><g><title>0x7f9b2d552bbe (libm-2.29.so) (1 samples, 0.11%)</title><rect x="319" y="372" width="2" height="15" fill="rgb(210,170,25)"/><text x="322.00" y="382.50"></text></g><g><title>0x7f9b2d552bc4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="321" y="372" width="1" height="15" fill="rgb(227,120,0)"/><text x="324.00" y="382.50"></text></g><g><title>0x7f9b2d552bcb (libm-2.29.so) (1 samples, 0.11%)</title><rect x="322" y="372" width="1" height="15" fill="rgb(215,89,41)"/><text x="325.00" y="382.50"></text></g><g><title>0x7f9b2d552bd7 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="323" y="372" width="1" height="15" fill="rgb(251,30,3)"/><text x="326.00" y="382.50"></text></g><g><title>0x7f9b2d552bdd (libm-2.29.so) (2 samples, 0.21%)</title><rect x="324" y="372" width="3" height="15" fill="rgb(233,79,31)"/><text x="327.00" y="382.50"></text></g><g><title>0x7f9b2d552bec (libm-2.29.so) (1 samples, 0.11%)</title><rect x="327" y="372" width="1" height="15" fill="rgb(217,206,23)"/><text x="330.00" y="382.50"></text></g><g><title>0x7f9b2d552bfc (libm-2.29.so) (1 samples, 0.11%)</title><rect x="328" y="372" width="1" height="15" fill="rgb(246,64,40)"/><text x="331.00" y="382.50"></text></g><g><title>0x7f9b2d552c00 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="329" y="372" width="2" height="15" fill="rgb(228,85,3)"/><text x="332.00" y="382.50"></text></g><g><title>0x7f9b2d552c10 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="331" y="372" width="1" height="15" fill="rgb(230,138,52)"/><text x="334.00" y="382.50"></text></g><g><title>0x7f9b2d552c25 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="332" y="372" width="1" height="15" fill="rgb(245,65,53)"/><text x="335.00" y="382.50"></text></g><g><title>0x7f9b2d552c2d (libm-2.29.so) (2 samples, 0.21%)</title><rect x="333" y="372" width="3" height="15" fill="rgb(218,18,4)"/><text x="336.00" y="382.50"></text></g><g><title>0x7f9b2d552c3c (libm-2.29.so) (3 samples, 0.32%)</title><rect x="336" y="372" width="4" height="15" fill="rgb(247,177,18)"/><text x="339.00" y="382.50"></text></g><g><title>0x7f9b2d552c50 (libm-2.29.so) (5 samples, 0.54%)</title><rect x="340" y="372" width="6" height="15" fill="rgb(222,152,14)"/><text x="343.00" y="382.50"></text></g><g><title>0x7f9b2d552c73 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="346" y="372" width="4" height="15" fill="rgb(243,98,24)"/><text x="349.00" y="382.50"></text></g><g><title>0x7f9b2d552c90 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="350" y="372" width="1" height="15" fill="rgb(248,125,8)"/><text x="353.00" y="382.50"></text></g><g><title>0x7f9b2d552c9e (libm-2.29.so) (5 samples, 0.54%)</title><rect x="351" y="372" width="6" height="15" fill="rgb(251,54,30)"/><text x="354.00" y="382.50"></text></g><g><title>0x7f9b2d552cb5 (libm-2.29.so) (4 samples, 0.43%)</title><rect x="357" y="372" width="5" height="15" fill="rgb(237,57,34)"/><text x="360.00" y="382.50"></text></g><g><title>0x7f9b2d552ccc (libm-2.29.so) (3 samples, 0.32%)</title><rect x="362" y="372" width="4" height="15" fill="rgb(241,19,44)"/><text x="365.00" y="382.50"></text></g><g><title>0x7f9b2d552cd6 (libm-2.29.so) (5 samples, 0.54%)</title><rect x="366" y="372" width="6" height="15" fill="rgb(222,217,30)"/><text x="369.00" y="382.50"></text></g><g><title>0x7f9b2d552ce4 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="372" y="372" width="4" height="15" fill="rgb(218,228,53)"/><text x="375.00" y="382.50"></text></g><g><title>0x7f9b2d552cf0 (libm-2.29.so) (4 samples, 0.43%)</title><rect x="376" y="372" width="5" height="15" fill="rgb(208,17,3)"/><text x="379.00" y="382.50"></text></g><g><title>0x7f9b2d552cf4 (libm-2.29.so) (7 samples, 0.75%)</title><rect x="381" y="372" width="9" height="15" fill="rgb(251,151,32)"/><text x="384.00" y="382.50"></text></g><g><title>0x7f9b2d552cf8 (libm-2.29.so) (5 samples, 0.54%)</title><rect x="390" y="372" width="7" height="15" fill="rgb(243,36,26)"/><text x="393.00" y="382.50"></text></g><g><title>0x7f9b2d552d11 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="397" y="372" width="1" height="15" fill="rgb(239,48,9)"/><text x="400.00" y="382.50"></text></g><g><title>0x7f9b2d552d19 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="398" y="372" width="4" height="15" fill="rgb(240,26,36)"/><text x="401.00" y="382.50"></text></g><g><title>0x7f9b2d552d1d (libm-2.29.so) (2 samples, 0.21%)</title><rect x="402" y="372" width="2" height="15" fill="rgb(224,135,15)"/><text x="405.00" y="382.50"></text></g><g><title>0x7f9b2d552d2b (libm-2.29.so) (5 samples, 0.54%)</title><rect x="404" y="372" width="6" height="15" fill="rgb(218,52,25)"/><text x="407.00" y="382.50"></text></g><g><title>0x7f9b2d552d3f (libm-2.29.so) (2 samples, 0.21%)</title><rect x="410" y="372" width="3" height="15" fill="rgb(249,147,45)"/><text x="413.00" y="382.50"></text></g><g><title>0x7f9b2d552d47 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="413" y="372" width="4" height="15" fill="rgb(209,206,19)"/><text x="416.00" y="382.50"></text></g><g><title>0x7f9b2d552d67 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="417" y="372" width="2" height="15" fill="rgb(223,181,17)"/><text x="420.00" y="382.50"></text></g><g><title>0x7f9b2d552d6f (libm-2.29.so) (2 samples, 0.21%)</title><rect x="419" y="372" width="3" height="15" fill="rgb(235,108,3)"/><text x="422.00" y="382.50"></text></g><g><title>0x7f9b2d552d74 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="422" y="372" width="2" height="15" fill="rgb(251,133,16)"/><text x="425.00" y="382.50"></text></g><g><title>0x7f9b2d552d78 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="424" y="372" width="4" height="15" fill="rgb(207,16,50)"/><text x="427.00" y="382.50"></text></g><g><title>0x7f9b2d552d8a (libm-2.29.so) (3 samples, 0.32%)</title><rect x="428" y="372" width="4" height="15" fill="rgb(239,35,23)"/><text x="431.00" y="382.50"></text></g><g><title>0x7f9b2d552d92 (libm-2.29.so) (8 samples, 0.86%)</title><rect x="432" y="372" width="10" height="15" fill="rgb(227,159,30)"/><text x="435.00" y="382.50"></text></g><g><title>0x7f9b2d552da2 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="442" y="372" width="3" height="15" fill="rgb(223,29,28)"/><text x="445.00" y="382.50"></text></g><g><title>0x7f9b2d552daa (libm-2.29.so) (5 samples, 0.54%)</title><rect x="445" y="372" width="6" height="15" fill="rgb(222,135,54)"/><text x="448.00" y="382.50"></text></g><g><title>0x7f9b2d552db6 (libm-2.29.so) (4 samples, 0.43%)</title><rect x="451" y="372" width="5" height="15" fill="rgb(210,208,14)"/><text x="454.00" y="382.50"></text></g><g><title>0x7f9b2d552dc4 (libm-2.29.so) (9 samples, 0.96%)</title><rect x="456" y="372" width="11" height="15" fill="rgb(213,103,37)"/><text x="459.00" y="382.50"></text></g><g><title>0x7f9b2d552dcc (libm-2.29.so) (5 samples, 0.54%)</title><rect x="467" y="372" width="7" height="15" fill="rgb(253,90,16)"/><text x="470.00" y="382.50"></text></g><g><title>0x7f9b2d552dd4 (libm-2.29.so) (7 samples, 0.75%)</title><rect x="474" y="372" width="9" height="15" fill="rgb(243,193,43)"/><text x="477.00" y="382.50"></text></g><g><title>0x7f9b2d552de8 (libm-2.29.so) (7 samples, 0.75%)</title><rect x="483" y="372" width="8" height="15" fill="rgb(226,55,41)"/><text x="486.00" y="382.50"></text></g><g><title>0x7f9b2d552df0 (libm-2.29.so) (5 samples, 0.54%)</title><rect x="491" y="372" width="7" height="15" fill="rgb(248,188,51)"/><text x="494.00" y="382.50"></text></g><g><title>0x7f9b2d552df8 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="498" y="372" width="3" height="15" fill="rgb(244,220,23)"/><text x="501.00" y="382.50"></text></g><g><title>0x7f9b2d552e09 (libm-2.29.so) (12 samples, 1.29%)</title><rect x="501" y="372" width="16" height="15" fill="rgb(207,44,50)"/><text x="504.00" y="382.50"></text></g><g><title>powf32x (libm-2.29.so) (199 samples, 21.33%)</title><rect x="270" y="356" width="252" height="15" fill="rgb(240,199,45)"/><text x="273.00" y="366.50">powf32x (libm-2.29.so)</text></g><g><title>0x7f9b2d552e0d (libm-2.29.so) (4 samples, 0.43%)</title><rect x="517" y="372" width="5" height="15" fill="rgb(206,89,31)"/><text x="520.00" y="382.50"></text></g><g><title>0x7f9aed41f930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="532" y="372" width="1" height="15" fill="rgb(208,21,42)"/><text x="535.00" y="382.50"></text></g><g><title>0x7f9aed41f960 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="533" y="372" width="1" height="15" fill="rgb(240,138,0)"/><text x="536.00" y="382.50"></text></g><g><title>0x7f9b2d3e8945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="534" y="372" width="2" height="15" fill="rgb(246,105,6)"/><text x="537.00" y="382.50"></text></g><g><title>0x7f9b2d3e897c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="536" y="372" width="1" height="15" fill="rgb(252,60,2)"/><text x="539.00" y="382.50"></text></g><g><title>0x7f9b2d3e8991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="537" y="372" width="1" height="15" fill="rgb(246,102,41)"/><text x="540.00" y="382.50"></text></g><g><title>0x7f9b2d3e8998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="538" y="372" width="1" height="15" fill="rgb(213,146,11)"/><text x="541.00" y="382.50"></text></g><g><title>0x7f9b2d3e8bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="539" y="372" width="2" height="15" fill="rgb(230,130,10)"/><text x="542.00" y="382.50"></text></g><g><title>0x7f9b2d3e8bd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="541" y="372" width="1" height="15" fill="rgb(227,154,15)"/><text x="544.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="542" y="372" width="1" height="15" fill="rgb(231,18,38)"/><text x="545.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 2.79%)</title><rect x="522" y="356" width="33" height="15" fill="rgb(212,229,52)"/><text x="525.00" y="366.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 0.96%)</title><rect x="543" y="372" width="12" height="15" fill="rgb(243,121,18)"/><text x="546.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (8 samples, 0.86%)</title><rect x="544" y="388" width="11" height="15" fill="rgb(243,123,53)"/><text x="547.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (399 samples, 42.77%)</title><rect x="56" y="340" width="505" height="15" fill="rgb(209,16,44)"/><text x="59.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnx..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.54%)</title><rect x="555" y="356" width="6" height="15" fill="rgb(217,33,37)"/><text x="558.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.32%)</title><rect x="557" y="372" width="4" height="15" fill="rgb(222,137,1)"/><text x="560.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.21%)</title><rect x="558" y="388" width="3" height="15" fill="rgb(252,199,41)"/><text x="561.00" y="398.50"></text></g><g><title>0x7f9b1ceb4d50 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="566" y="372" width="1" height="15" fill="rgb(241,51,28)"/><text x="569.00" y="382.50"></text></g><g><title>0x7f9b2d3e9b12 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="585" y="388" width="1" height="15" fill="rgb(214,23,13)"/><text x="588.00" y="398.50"></text></g><g><title>0x7f9b2d3e9b1c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="586" y="388" width="1" height="15" fill="rgb(219,38,19)"/><text x="589.00" y="398.50"></text></g><g><title>0x7f9b2d3e9d48 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="587" y="388" width="2" height="15" fill="rgb(223,189,11)"/><text x="590.00" y="398.50"></text></g><g><title>0x7f9b2d3e9e19 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="589" y="388" width="1" height="15" fill="rgb(223,106,5)"/><text x="592.00" y="398.50"></text></g><g><title>0x7f9b2d3ea08c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="590" y="388" width="1" height="15" fill="rgb(230,147,19)"/><text x="593.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (22 samples, 2.36%)</title><rect x="566" y="356" width="28" height="15" fill="rgb(210,31,4)"/><text x="569.00" y="366.50">o..</text></g><g><title>malloc (libc-2.29.so) (21 samples, 2.25%)</title><rect x="567" y="372" width="27" height="15" fill="rgb(210,223,29)"/><text x="570.00" y="382.50">m..</text></g><g><title>0x7f9b2d3ea3d1 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="591" y="388" width="3" height="15" fill="rgb(207,205,50)"/><text x="594.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="594" y="356" width="1" height="15" fill="rgb(207,101,24)"/><text x="597.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="594" y="372" width="1" height="15" fill="rgb(227,30,9)"/><text x="597.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (431 samples, 46.20%)</title><rect x="51" y="260" width="545" height="15" fill="rgb(232,79,47)"/><text x="54.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (431 samples, 46.20%)</title><rect x="51" y="276" width="545" height="15" fill="rgb(211,31,28)"/><text x="54.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (429 samples, 45.98%)</title><rect x="54" y="292" width="542" height="15" fill="rgb(249,3,30)"/><text x="57.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_st..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (429 samples, 45.98%)</title><rect x="54" y="308" width="542" height="15" fill="rgb(214,120,18)"/><text x="57.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind1..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (429 samples, 45.98%)</title><rect x="54" y="324" width="542" height="15" fill="rgb(243,53,50)"/><text x="57.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pyb..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 3.00%)</title><rect x="561" y="340" width="35" height="15" fill="rgb(227,202,30)"/><text x="564.00" y="350.50">on..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="595" y="356" width="1" height="15" fill="rgb(229,37,4)"/><text x="598.00" y="366.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="619" y="276" width="3" height="15" fill="rgb(247,88,16)"/><text x="622.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 2.25%)</title><rect x="596" y="260" width="27" height="15" fill="rgb(245,198,54)"/><text x="599.00" y="270.50">p..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="622" y="276" width="1" height="15" fill="rgb(228,179,45)"/><text x="625.00" y="286.50"></text></g><g><title>0x7f9b2d3e8945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="623" y="292" width="1" height="15" fill="rgb(209,31,24)"/><text x="626.00" y="302.50"></text></g><g><title>0x7f9b2d3e8a33 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="624" y="292" width="3" height="15" fill="rgb(253,159,12)"/><text x="627.00" y="302.50"></text></g><g><title>0x7f9b2d3e8d07 (libc-2.29.so) (3 samples, 0.32%)</title><rect x="627" y="292" width="3" height="15" fill="rgb(234,44,29)"/><text x="630.00" y="302.50"></text></g><g><title>profile_ort (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (472 samples, 50.59%)</title><rect x="36" y="68" width="597" height="15" fill="rgb(228,29,0)"/><text x="39.00" y="78.50">profile_ort (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (472 samples, 50.59%)</title><rect x="36" y="84" width="597" height="15" fill="rgb(216,127,47)"/><text x="39.00" y="94.50">setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py)</text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (472 samples, 50.59%)</title><rect x="36" y="100" width="597" height="15" fill="rgb(234,149,44)"/><text x="39.00" y="110.50">profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (461 samples, 49.41%)</title><rect x="50" y="116" width="583" height="15" fill="rgb(239,168,23)"/><text x="53.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (461 samples, 49.41%)</title><rect x="50" y="132" width="583" height="15" fill="rgb(222,224,38)"/><text x="53.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (461 samples, 49.41%)</title><rect x="50" y="148" width="583" height="15" fill="rgb(206,204,52)"/><text x="53.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (461 samples, 49.41%)</title><rect x="50" y="164" width="583" height="15" fill="rgb(234,16,39)"/><text x="53.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (461 samples, 49.41%)</title><rect x="50" y="180" width="583" height="15" fill="rgb(240,222,23)"/><text x="53.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (461 samples, 49.41%)</title><rect x="50" y="196" width="583" height="15" fill="rgb(232,24,29)"/><text x="53.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (460 samples, 49.30%)</title><rect x="51" y="212" width="582" height="15" fill="rgb(246,96,5)"/><text x="54.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state...</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (460 samples, 49.30%)</title><rect x="51" y="228" width="582" height="15" fill="rgb(234,131,35)"/><text x="54.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(py..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (460 samples, 49.30%)</title><rect x="51" y="244" width="582" height="15" fill="rgb(230,108,15)"/><text x="54.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::I..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.86%)</title><rect x="623" y="260" width="10" height="15" fill="rgb(213,41,0)"/><text x="626.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.86%)</title><rect x="623" y="276" width="10" height="15" fill="rgb(240,229,54)"/><text x="626.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="630" y="292" width="3" height="15" fill="rgb(246,175,7)"/><text x="633.00" y="302.50"></text></g><g><title>0x7f9b2d3e8d07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="632" y="308" width="1" height="15" fill="rgb(210,155,23)"/><text x="635.00" y="318.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.21%)</title><rect x="634" y="196" width="3" height="15" fill="rgb(251,144,27)"/><text x="637.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.11%)</title><rect x="637" y="212" width="1" height="15" fill="rgb(248,150,1)"/><text x="640.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.11%)</title><rect x="637" y="228" width="1" height="15" fill="rgb(248,190,31)"/><text x="640.00" y="238.50"></text></g><g><title>0x7f9aee557c29 (?) (1 samples, 0.11%)</title><rect x="639" y="244" width="2" height="15" fill="rgb(236,50,16)"/><text x="642.00" y="254.50"></text></g><g><title>0x7f9aee55ed9e (?) (1 samples, 0.11%)</title><rect x="639" y="260" width="2" height="15" fill="rgb(237,168,36)"/><text x="642.00" y="270.50"></text></g><g><title>0x7f9aee55ec56 (?) (1 samples, 0.11%)</title><rect x="639" y="276" width="2" height="15" fill="rgb(234,25,54)"/><text x="642.00" y="286.50"></text></g><g><title>0x7f9aee564ac7 (?) (1 samples, 0.11%)</title><rect x="639" y="292" width="2" height="15" fill="rgb(246,8,34)"/><text x="642.00" y="302.50"></text></g><g><title>0x7f9aee563c5c (?) (1 samples, 0.11%)</title><rect x="639" y="308" width="2" height="15" fill="rgb(241,42,1)"/><text x="642.00" y="318.50"></text></g><g><title>0x7f9aee54d348 (?) (1 samples, 0.11%)</title><rect x="639" y="324" width="2" height="15" fill="rgb(207,178,40)"/><text x="642.00" y="334.50"></text></g><g><title>0x7f9aee546e60 (?) (1 samples, 0.11%)</title><rect x="639" y="340" width="2" height="15" fill="rgb(249,67,25)"/><text x="642.00" y="350.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.11%)</title><rect x="641" y="244" width="1" height="15" fill="rgb(233,29,34)"/><text x="644.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.11%)</title><rect x="641" y="260" width="1" height="15" fill="rgb(214,184,53)"/><text x="644.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.11%)</title><rect x="641" y="276" width="1" height="15" fill="rgb(205,216,10)"/><text x="644.00" y="286.50"></text></g><g><title>0x7f9aee547440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.32%)</title><rect x="672" y="468" width="4" height="15" fill="rgb(222,174,10)"/><text x="675.00" y="478.50"></text></g><g><title>0x7f9b2d3e8991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="676" y="468" width="1" height="15" fill="rgb(234,108,7)"/><text x="679.00" y="478.50"></text></g><g><title>0x7f9b2d3e8a41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="677" y="468" width="2" height="15" fill="rgb(226,151,53)"/><text x="680.00" y="478.50"></text></g><g><title>0x7f9b2d3e8be4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="679" y="468" width="1" height="15" fill="rgb(218,82,39)"/><text x="682.00" y="478.50"></text></g><g><title>0x7f9aee546e60 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="727" y="484" width="2" height="15" fill="rgb(247,38,32)"/><text x="730.00" y="494.50"></text></g><g><title>0x7f9aee5472b0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="729" y="484" width="3" height="15" fill="rgb(219,16,21)"/><text x="732.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (70 samples, 7.50%)</title><rect x="680" y="468" width="88" height="15" fill="rgb(237,119,51)"/><text x="683.00" y="478.50">RuntimeSVM..</text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (29 samples, 3.11%)</title><rect x="732" y="484" width="36" height="15" fill="rgb(207,180,16)"/><text x="735.00" y="494.50">vec..</text></g><g><title>0x7f9b2d567e4e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="771" y="500" width="1" height="15" fill="rgb(242,100,46)"/><text x="774.00" y="510.50"></text></g><g><title>0x7f9b2d567e7e (libm-2.29.so) (4 samples, 0.43%)</title><rect x="772" y="500" width="5" height="15" fill="rgb(247,227,48)"/><text x="775.00" y="510.50"></text></g><g><title>0x7f9b2d567e86 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="777" y="500" width="1" height="15" fill="rgb(212,18,26)"/><text x="780.00" y="510.50"></text></g><g><title>0x7f9b2d567e96 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="778" y="500" width="2" height="15" fill="rgb(220,37,38)"/><text x="781.00" y="510.50"></text></g><g><title>0x7f9b2d567ea2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="780" y="500" width="1" height="15" fill="rgb(238,175,28)"/><text x="783.00" y="510.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (12 samples, 1.29%)</title><rect x="768" y="468" width="16" height="15" fill="rgb(211,169,40)"/><text x="771.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (12 samples, 1.29%)</title><rect x="768" y="484" width="16" height="15" fill="rgb(213,99,50)"/><text x="771.00" y="494.50"></text></g><g><title>0x7f9b2d567ea6 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="781" y="500" width="3" height="15" fill="rgb(237,81,45)"/><text x="784.00" y="510.50"></text></g><g><title>std::max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt; &gt; (stl_algo.h) (1 samples, 0.11%)</title><rect x="784" y="468" width="1" height="15" fill="rgb(217,40,36)"/><text x="787.00" y="478.50"></text></g><g><title>std::__max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (stl_algo.h) (1 samples, 0.11%)</title><rect x="784" y="484" width="1" height="15" fill="rgb(209,170,51)"/><text x="787.00" y="494.50"></text></g><g><title>std::min&lt;float&gt; (stl_algobase.h) (1 samples, 0.11%)</title><rect x="785" y="468" width="1" height="15" fill="rgb(252,92,29)"/><text x="788.00" y="478.50"></text></g><g><title>0x7f9aee5472a0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="789" y="484" width="1" height="15" fill="rgb(216,15,25)"/><text x="792.00" y="494.50"></text></g><g><title>0x7f9b2d3e8982 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="790" y="484" width="1" height="15" fill="rgb(210,134,4)"/><text x="793.00" y="494.50"></text></g><g><title>0x7f9b2d3e8991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="791" y="484" width="1" height="15" fill="rgb(214,160,47)"/><text x="794.00" y="494.50"></text></g><g><title>0x7f9b2d3e8a53 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="792" y="484" width="2" height="15" fill="rgb(250,76,42)"/><text x="795.00" y="494.50"></text></g><g><title>0x7f9b2d3e8bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="794" y="484" width="1" height="15" fill="rgb(224,193,52)"/><text x="797.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.43%)</title><rect x="795" y="484" width="5" height="15" fill="rgb(225,219,12)"/><text x="798.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (16 samples, 1.71%)</title><rect x="786" y="468" width="20" height="15" fill="rgb(229,88,9)"/><text x="789.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (5 samples, 0.54%)</title><rect x="800" y="484" width="6" height="15" fill="rgb(237,160,37)"/><text x="803.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (5 samples, 0.54%)</title><rect x="800" y="500" width="6" height="15" fill="rgb(226,114,22)"/><text x="803.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (5 samples, 0.54%)</title><rect x="800" y="516" width="6" height="15" fill="rgb(223,175,19)"/><text x="803.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.54%)</title><rect x="800" y="532" width="6" height="15" fill="rgb(243,162,9)"/><text x="803.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.54%)</title><rect x="800" y="548" width="6" height="15" fill="rgb(238,136,43)"/><text x="803.00" y="558.50"></text></g><g><title>0x7f9b2d3e891e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="810" y="516" width="1" height="15" fill="rgb(251,22,25)"/><text x="813.00" y="526.50"></text></g><g><title>0x7f9b2d3e8998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="811" y="516" width="2" height="15" fill="rgb(217,75,37)"/><text x="814.00" y="526.50"></text></g><g><title>0x7f9b2d3e8bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="813" y="516" width="1" height="15" fill="rgb(220,145,34)"/><text x="816.00" y="526.50"></text></g><g><title>0x7f9b2d408d97 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="814" y="516" width="1" height="15" fill="rgb(238,183,30)"/><text x="817.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.21%)</title><rect x="815" y="516" width="3" height="15" fill="rgb(239,224,30)"/><text x="818.00" y="526.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.11%)</title><rect x="818" y="516" width="1" height="15" fill="rgb(225,26,54)"/><text x="821.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.11%)</title><rect x="818" y="532" width="1" height="15" fill="rgb(244,37,7)"/><text x="821.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (1 samples, 0.11%)</title><rect x="818" y="548" width="1" height="15" fill="rgb(240,172,14)"/><text x="821.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="818" y="564" width="1" height="15" fill="rgb(209,215,13)"/><text x="821.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="818" y="580" width="1" height="15" fill="rgb(245,71,16)"/><text x="821.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (12 samples, 1.29%)</title><rect x="806" y="468" width="15" height="15" fill="rgb(211,204,28)"/><text x="809.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (12 samples, 1.29%)</title><rect x="806" y="484" width="15" height="15" fill="rgb(251,56,46)"/><text x="809.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (11 samples, 1.18%)</title><rect x="808" y="500" width="13" height="15" fill="rgb(207,117,36)"/><text x="811.00" y="510.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h) (2 samples, 0.21%)</title><rect x="819" y="516" width="2" height="15" fill="rgb(241,64,26)"/><text x="822.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h) (2 samples, 0.21%)</title><rect x="819" y="532" width="2" height="15" fill="rgb(252,205,23)"/><text x="822.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (2 samples, 0.21%)</title><rect x="819" y="548" width="2" height="15" fill="rgb(216,69,15)"/><text x="822.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (2 samples, 0.21%)</title><rect x="819" y="564" width="2" height="15" fill="rgb(212,145,41)"/><text x="822.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h) (2 samples, 0.21%)</title><rect x="819" y="580" width="2" height="15" fill="rgb(235,176,37)"/><text x="822.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h) (2 samples, 0.21%)</title><rect x="819" y="596" width="2" height="15" fill="rgb(214,45,21)"/><text x="822.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h) (2 samples, 0.21%)</title><rect x="819" y="612" width="2" height="15" fill="rgb(224,182,16)"/><text x="822.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h) (2 samples, 0.21%)</title><rect x="819" y="628" width="2" height="15" fill="rgb(218,95,46)"/><text x="822.00" y="638.50"></text></g><g><title>0x7f9b2d3e8bd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="861" y="500" width="1" height="15" fill="rgb(235,5,6)"/><text x="864.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="862" y="500" width="1" height="15" fill="rgb(241,195,26)"/><text x="865.00" y="510.50"></text></g><g><title>0x7f9b2d3e8906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="867" y="516" width="1" height="15" fill="rgb(248,4,11)"/><text x="870.00" y="526.50"></text></g><g><title>0x7f9b2d3e891c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="868" y="516" width="2" height="15" fill="rgb(231,183,17)"/><text x="871.00" y="526.50"></text></g><g><title>0x7f9b2d3e8929 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="870" y="516" width="1" height="15" fill="rgb(216,68,42)"/><text x="873.00" y="526.50"></text></g><g><title>0x7f9b2d3e895e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="871" y="516" width="1" height="15" fill="rgb(220,91,20)"/><text x="874.00" y="526.50"></text></g><g><title>0x7f9b2d3e897c (libc-2.29.so) (2 samples, 0.21%)</title><rect x="872" y="516" width="3" height="15" fill="rgb(208,193,1)"/><text x="875.00" y="526.50"></text></g><g><title>0x7f9b2d3e8998 (libc-2.29.so) (3 samples, 0.32%)</title><rect x="875" y="516" width="3" height="15" fill="rgb(226,132,14)"/><text x="878.00" y="526.50"></text></g><g><title>0x7f9b2d3e8a41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="878" y="516" width="2" height="15" fill="rgb(230,60,23)"/><text x="881.00" y="526.50"></text></g><g><title>0x7f9b2d3e8a53 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="880" y="516" width="1" height="15" fill="rgb(254,177,37)"/><text x="883.00" y="526.50"></text></g><g><title>0x7f9b2d3e8a55 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="881" y="516" width="2" height="15" fill="rgb(240,51,30)"/><text x="884.00" y="526.50"></text></g><g><title>0x7f9b2d3e8bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="883" y="516" width="2" height="15" fill="rgb(231,163,23)"/><text x="886.00" y="526.50"></text></g><g><title>0x7f9b2d408d50 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="885" y="516" width="2" height="15" fill="rgb(252,10,41)"/><text x="888.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (6 samples, 0.64%)</title><rect x="887" y="516" width="8" height="15" fill="rgb(221,209,39)"/><text x="890.00" y="526.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="895" y="516" width="1" height="15" fill="rgb(251,144,54)"/><text x="898.00" y="526.50"></text></g><g><title>0x7f9b1ceb4d50 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="900" y="580" width="1" height="15" fill="rgb(239,54,11)"/><text x="903.00" y="590.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (10 samples, 1.07%)</title><rect x="896" y="516" width="13" height="15" fill="rgb(233,195,28)"/><text x="899.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (8 samples, 0.86%)</title><rect x="899" y="532" width="10" height="15" fill="rgb(250,114,50)"/><text x="902.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (8 samples, 0.86%)</title><rect x="899" y="548" width="10" height="15" fill="rgb(242,195,26)"/><text x="902.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 0.86%)</title><rect x="899" y="564" width="10" height="15" fill="rgb(211,184,33)"/><text x="902.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.64%)</title><rect x="901" y="580" width="8" height="15" fill="rgb(238,30,24)"/><text x="904.00" y="590.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h) (2 samples, 0.21%)</title><rect x="909" y="516" width="2" height="15" fill="rgb(240,205,4)"/><text x="912.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h) (2 samples, 0.21%)</title><rect x="909" y="532" width="2" height="15" fill="rgb(207,128,15)"/><text x="912.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (2 samples, 0.21%)</title><rect x="909" y="548" width="2" height="15" fill="rgb(223,172,0)"/><text x="912.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (2 samples, 0.21%)</title><rect x="909" y="564" width="2" height="15" fill="rgb(251,98,4)"/><text x="912.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h) (2 samples, 0.21%)</title><rect x="909" y="580" width="2" height="15" fill="rgb(233,107,46)"/><text x="912.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h) (2 samples, 0.21%)</title><rect x="909" y="596" width="2" height="15" fill="rgb(238,190,32)"/><text x="912.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h) (2 samples, 0.21%)</title><rect x="909" y="612" width="2" height="15" fill="rgb(228,45,5)"/><text x="912.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h) (2 samples, 0.21%)</title><rect x="909" y="628" width="2" height="15" fill="rgb(246,171,12)"/><text x="912.00" y="638.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (40 samples, 4.29%)</title><rect x="863" y="500" width="51" height="15" fill="rgb(206,218,24)"/><text x="866.00" y="510.50">std::..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h) (2 samples, 0.21%)</title><rect x="911" y="516" width="3" height="15" fill="rgb(239,14,9)"/><text x="914.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (2 samples, 0.21%)</title><rect x="911" y="532" width="3" height="15" fill="rgb(238,219,7)"/><text x="914.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (1 samples, 0.11%)</title><rect x="914" y="500" width="1" height="15" fill="rgb(210,56,19)"/><text x="917.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (1 samples, 0.11%)</title><rect x="914" y="516" width="1" height="15" fill="rgb(233,11,39)"/><text x="917.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (75 samples, 8.04%)</title><rect x="821" y="484" width="95" height="15" fill="rgb(213,42,33)"/><text x="824.00" y="494.50">multiclass_..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.11%)</title><rect x="915" y="500" width="1" height="15" fill="rgb(211,112,45)"/><text x="918.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="915" y="516" width="1" height="15" fill="rgb(220,144,18)"/><text x="918.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (76 samples, 8.15%)</title><rect x="821" y="468" width="97" height="15" fill="rgb(240,227,32)"/><text x="824.00" y="478.50">std::vector..</text></g><g><title>write_scores&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (1 samples, 0.11%)</title><rect x="916" y="484" width="2" height="15" fill="rgb(241,35,2)"/><text x="919.00" y="494.50"></text></g><g><title>0x7f9b2d409173 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="918" y="516" width="1" height="15" fill="rgb(208,39,22)"/><text x="921.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h) (4 samples, 0.43%)</title><rect x="918" y="468" width="5" height="15" fill="rgb(216,192,5)"/><text x="921.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h) (4 samples, 0.43%)</title><rect x="918" y="484" width="5" height="15" fill="rgb(228,175,34)"/><text x="921.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h) (4 samples, 0.43%)</title><rect x="918" y="500" width="5" height="15" fill="rgb(209,197,36)"/><text x="921.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.32%)</title><rect x="919" y="516" width="4" height="15" fill="rgb(237,122,20)"/><text x="922.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.32%)</title><rect x="919" y="532" width="4" height="15" fill="rgb(251,54,25)"/><text x="922.00" y="542.50"></text></g><g><title>0x7f9b2d3e8904 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="923" y="484" width="1" height="15" fill="rgb(216,169,5)"/><text x="926.00" y="494.50"></text></g><g><title>0x7f9b2d3e8906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="924" y="484" width="1" height="15" fill="rgb(231,54,0)"/><text x="927.00" y="494.50"></text></g><g><title>0x7f9b2d3e8be4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="925" y="484" width="1" height="15" fill="rgb(222,130,36)"/><text x="928.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="926" y="484" width="2" height="15" fill="rgb(212,130,53)"/><text x="929.00" y="494.50"></text></g><g><title>0x7f9b2d3e895e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="928" y="548" width="1" height="15" fill="rgb(228,221,3)"/><text x="931.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (6 samples, 0.64%)</title><rect x="923" y="468" width="7" height="15" fill="rgb(219,8,17)"/><text x="926.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::~_Vector_base (stl_vector.h) (2 samples, 0.21%)</title><rect x="928" y="484" width="2" height="15" fill="rgb(235,3,10)"/><text x="931.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h) (2 samples, 0.21%)</title><rect x="928" y="500" width="2" height="15" fill="rgb(246,66,5)"/><text x="931.00" y="510.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h) (2 samples, 0.21%)</title><rect x="928" y="516" width="2" height="15" fill="rgb(253,177,3)"/><text x="931.00" y="526.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h) (2 samples, 0.21%)</title><rect x="928" y="532" width="2" height="15" fill="rgb(210,34,30)"/><text x="931.00" y="542.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="929" y="548" width="1" height="15" fill="rgb(253,197,0)"/><text x="932.00" y="558.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (231 samples, 24.76%)</title><rect x="642" y="452" width="292" height="15" fill="rgb(244,224,27)"/><text x="645.00" y="462.50">RuntimeSVMClassifier&lt;float&gt;::compute_gi..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h) (3 samples, 0.32%)</title><rect x="930" y="468" width="4" height="15" fill="rgb(220,211,3)"/><text x="933.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h) (2 samples, 0.21%)</title><rect x="931" y="484" width="3" height="15" fill="rgb(212,19,18)"/><text x="934.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc) (2 samples, 0.21%)</title><rect x="931" y="500" width="3" height="15" fill="rgb(221,88,52)"/><text x="934.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h) (2 samples, 0.21%)</title><rect x="931" y="516" width="3" height="15" fill="rgb(243,19,49)"/><text x="934.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h) (2 samples, 0.21%)</title><rect x="931" y="532" width="3" height="15" fill="rgb(212,24,29)"/><text x="934.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h) (2 samples, 0.21%)</title><rect x="931" y="548" width="3" height="15" fill="rgb(253,122,26)"/><text x="934.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="933" y="564" width="1" height="15" fill="rgb(245,218,15)"/><text x="936.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="933" y="580" width="1" height="15" fill="rgb(240,212,45)"/><text x="936.00" y="590.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (232 samples, 24.87%)</title><rect x="642" y="244" width="293" height="15" fill="rgb(238,4,1)"/><text x="645.00" y="254.50">pybind11::cpp_function::dispatcher (pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (232 samples, 24.87%)</title><rect x="642" y="260" width="293" height="15" fill="rgb(229,22,19)"/><text x="645.00" y="270.50">void pybind11::cpp_function::initialize..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (232 samples, 24.87%)</title><rect x="642" y="276" width="293" height="15" fill="rgb(205,153,23)"/><text x="645.00" y="286.50">void pybind11::cpp_function::initialize..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (232 samples, 24.87%)</title><rect x="642" y="292" width="293" height="15" fill="rgb(234,81,40)"/><text x="645.00" y="302.50">pybind11::detail::argument_loader&lt;Runti..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (232 samples, 24.87%)</title><rect x="642" y="308" width="293" height="15" fill="rgb(243,41,24)"/><text x="645.00" y="318.50">pybind11::detail::argument_loader&lt;Runti..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (232 samples, 24.87%)</title><rect x="642" y="324" width="293" height="15" fill="rgb(239,85,11)"/><text x="645.00" y="334.50">pybind11::cpp_function::cpp_function&lt;py..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (232 samples, 24.87%)</title><rect x="642" y="340" width="293" height="15" fill="rgb(213,105,0)"/><text x="645.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t ..</text></g><g><title>pybind11::array::~array (numpy.h) (232 samples, 24.87%)</title><rect x="642" y="356" width="293" height="15" fill="rgb(212,38,24)"/><text x="645.00" y="366.50">pybind11::array::~array (numpy.h)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (232 samples, 24.87%)</title><rect x="642" y="372" width="293" height="15" fill="rgb(231,37,35)"/><text x="645.00" y="382.50">pybind11::buffer::~buffer (pytypes.h)</text></g><g><title>pybind11::object::~object (pytypes.h) (232 samples, 24.87%)</title><rect x="642" y="388" width="293" height="15" fill="rgb(252,96,26)"/><text x="645.00" y="398.50">pybind11::object::~object (pytypes.h)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (232 samples, 24.87%)</title><rect x="642" y="404" width="293" height="15" fill="rgb(205,33,15)"/><text x="645.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (232 samples, 24.87%)</title><rect x="642" y="420" width="293" height="15" fill="rgb(216,186,47)"/><text x="645.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (m..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (232 samples, 24.87%)</title><rect x="642" y="436" width="293" height="15" fill="rgb(208,180,27)"/><text x="645.00" y="446.50">pybind11::gil_scoped_release::~gil_scop..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (vector.tcc) (1 samples, 0.11%)</title><rect x="934" y="452" width="1" height="15" fill="rgb(214,137,34)"/><text x="937.00" y="462.50"></text></g><g><title>profile_pyrt (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (240 samples, 25.72%)</title><rect x="633" y="68" width="304" height="15" fill="rgb(209,132,1)"/><text x="636.00" y="78.50">profile_pyrt (bench_SVC_poly_m_cl_probab..</text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (240 samples, 25.72%)</title><rect x="633" y="84" width="304" height="15" fill="rgb(210,110,39)"/><text x="636.00" y="94.50">setup_profile (bench_SVC_poly_m_cl_proba..</text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (240 samples, 25.72%)</title><rect x="633" y="100" width="304" height="15" fill="rgb(206,227,30)"/><text x="636.00" y="110.50">profile (bench_SVC_poly_m_cl_probability..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (240 samples, 25.72%)</title><rect x="633" y="116" width="304" height="15" fill="rgb(214,206,23)"/><text x="636.00" y="126.50">time_predict (mlprodict/asv_benchmark/co..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (240 samples, 25.72%)</title><rect x="633" y="132" width="304" height="15" fill="rgb(222,199,27)"/><text x="636.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (240 samples, 25.72%)</title><rect x="633" y="148" width="304" height="15" fill="rgb(229,176,36)"/><text x="636.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (240 samples, 25.72%)</title><rect x="633" y="164" width="304" height="15" fill="rgb(217,166,19)"/><text x="636.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (240 samples, 25.72%)</title><rect x="633" y="180" width="304" height="15" fill="rgb(240,47,2)"/><text x="636.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_nod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (237 samples, 25.40%)</title><rect x="637" y="196" width="300" height="15" fill="rgb(217,103,31)"/><text x="640.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (236 samples, 25.29%)</title><rect x="638" y="212" width="299" height="15" fill="rgb(251,140,33)"/><text x="641.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (236 samples, 25.29%)</title><rect x="638" y="228" width="299" height="15" fill="rgb(231,28,15)"/><text x="641.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_cl..</text></g><g><title>pybind11::cpp_function::dispatcher (stl_bvector.h) (1 samples, 0.11%)</title><rect x="935" y="244" width="2" height="15" fill="rgb(209,125,44)"/><text x="938.00" y="254.50"></text></g><g><title>0x7f9b07ed93fd (?) (1 samples, 0.11%)</title><rect x="938" y="180" width="1" height="15" fill="rgb(246,10,36)"/><text x="941.00" y="190.50"></text></g><g><title>0x7f9b07ed7553 (?) (1 samples, 0.11%)</title><rect x="938" y="196" width="1" height="15" fill="rgb(236,167,48)"/><text x="941.00" y="206.50"></text></g><g><title>0x7f9b07ed2a09 (?) (1 samples, 0.11%)</title><rect x="938" y="212" width="1" height="15" fill="rgb(243,104,17)"/><text x="941.00" y="222.50"></text></g><g><title>0x7f9b07ee57e0 (?) (1 samples, 0.11%)</title><rect x="938" y="228" width="1" height="15" fill="rgb(208,149,43)"/><text x="941.00" y="238.50"></text></g><g><title>0x7f9b07ed72b8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="939" y="196" width="1" height="15" fill="rgb(225,39,48)"/><text x="942.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="939" y="212" width="1" height="15" fill="rgb(254,94,12)"/><text x="942.00" y="222.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="939" y="228" width="1" height="15" fill="rgb(233,118,40)"/><text x="942.00" y="238.50"></text></g><g><title>0x7f9b2d3e9fb2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="939" y="244" width="1" height="15" fill="rgb(209,203,38)"/><text x="942.00" y="254.50"></text></g><g><title>0x7f9b2d3e8902 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1023" y="244" width="1" height="15" fill="rgb(218,172,35)"/><text x="1026.00" y="254.50"></text></g><g><title>0x7f9b2d3e8906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1024" y="244" width="1" height="15" fill="rgb(233,170,1)"/><text x="1027.00" y="254.50"></text></g><g><title>0x7f9b2d3e8945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1025" y="244" width="1" height="15" fill="rgb(212,193,46)"/><text x="1028.00" y="254.50"></text></g><g><title>0x7f9b2d3e8971 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1026" y="244" width="2" height="15" fill="rgb(251,144,52)"/><text x="1029.00" y="254.50"></text></g><g><title>0x7f9b2d3e8991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1028" y="244" width="1" height="15" fill="rgb(224,151,12)"/><text x="1031.00" y="254.50"></text></g><g><title>0x7f9b2d3e8998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1029" y="244" width="1" height="15" fill="rgb(223,155,35)"/><text x="1032.00" y="254.50"></text></g><g><title>0x7f9b2d3e899b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1030" y="244" width="1" height="15" fill="rgb(249,24,11)"/><text x="1033.00" y="254.50"></text></g><g><title>0x7f9b2d3e8a33 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1031" y="244" width="2" height="15" fill="rgb(224,76,54)"/><text x="1034.00" y="254.50"></text></g><g><title>0x7f9b2d3e8a4c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1033" y="244" width="1" height="15" fill="rgb(227,213,28)"/><text x="1036.00" y="254.50"></text></g><g><title>0x7f9b2d3e8a53 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1034" y="244" width="1" height="15" fill="rgb(208,6,47)"/><text x="1037.00" y="254.50"></text></g><g><title>0x7f9b2d3e8a55 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1035" y="244" width="1" height="15" fill="rgb(234,65,36)"/><text x="1038.00" y="254.50"></text></g><g><title>0x7f9b2d3e8d07 (libc-2.29.so) (3 samples, 0.32%)</title><rect x="1036" y="244" width="4" height="15" fill="rgb(254,90,45)"/><text x="1039.00" y="254.50"></text></g><g><title>0x7f9b2d5babe2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1044" y="260" width="1" height="15" fill="rgb(208,90,52)"/><text x="1047.00" y="270.50"></text></g><g><title>0x7f9b2d5babf9 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1045" y="260" width="2" height="15" fill="rgb(238,168,29)"/><text x="1048.00" y="270.50"></text></g><g><title>0x7f9b2d5bac0c (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1047" y="260" width="1" height="15" fill="rgb(245,13,11)"/><text x="1050.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (7 samples, 0.75%)</title><rect x="1040" y="244" width="9" height="15" fill="rgb(251,181,13)"/><text x="1043.00" y="254.50"></text></g><g><title>0x7f9b2d5bac10 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1048" y="260" width="1" height="15" fill="rgb(229,119,1)"/><text x="1051.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.54%)</title><rect x="1049" y="244" width="6" height="15" fill="rgb(205,228,25)"/><text x="1052.00" y="254.50"></text></g><g><title>0x7f9b2d3e9c04 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1069" y="260" width="2" height="15" fill="rgb(250,205,5)"/><text x="1072.00" y="270.50"></text></g><g><title>0x7f9b2d3e9c34 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1071" y="260" width="1" height="15" fill="rgb(251,189,32)"/><text x="1074.00" y="270.50"></text></g><g><title>0x7f9b2d3e9c38 (libc-2.29.so) (4 samples, 0.43%)</title><rect x="1072" y="260" width="5" height="15" fill="rgb(236,216,14)"/><text x="1075.00" y="270.50"></text></g><g><title>0x7f9b2d3e9f0a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1077" y="260" width="1" height="15" fill="rgb(249,170,12)"/><text x="1080.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (20 samples, 2.14%)</title><rect x="1055" y="244" width="26" height="15" fill="rgb(253,221,9)"/><text x="1058.00" y="254.50">m..</text></g><g><title>0x7f9b2d3ea00a (libc-2.29.so) (2 samples, 0.21%)</title><rect x="1078" y="260" width="3" height="15" fill="rgb(215,180,8)"/><text x="1081.00" y="270.50"></text></g><g><title>0x7f9b2d3e8982 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1101" y="260" width="1" height="15" fill="rgb(237,195,41)"/><text x="1104.00" y="270.50"></text></g><g><title>0x7f9b2d3e8a41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1102" y="260" width="1" height="15" fill="rgb(223,24,47)"/><text x="1105.00" y="270.50"></text></g><g><title>0x7f9b2d3e8a55 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1103" y="260" width="2" height="15" fill="rgb(206,179,54)"/><text x="1106.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.21%)</title><rect x="1105" y="260" width="2" height="15" fill="rgb(235,5,22)"/><text x="1108.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.54%)</title><rect x="1107" y="260" width="7" height="15" fill="rgb(208,43,30)"/><text x="1110.00" y="270.50"></text></g><g><title>0x7f9b07eba6b0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1153" y="276" width="1" height="15" fill="rgb(224,110,23)"/><text x="1156.00" y="286.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (191 samples, 20.47%)</title><rect x="938" y="164" width="241" height="15" fill="rgb(225,135,43)"/><text x="941.00" y="174.50">_dense_predict_proba (sklearn/sv..</text></g><g><title>0x7f9b07ed93fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (190 samples, 20.36%)</title><rect x="939" y="180" width="240" height="15" fill="rgb(251,176,36)"/><text x="942.00" y="190.50">0x7f9b07ed93fd (sklearn/svm/_li..</text></g><g><title>0x7f9b07ed7553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (189 samples, 20.26%)</title><rect x="940" y="196" width="239" height="15" fill="rgb(232,152,39)"/><text x="943.00" y="206.50">0x7f9b07ed7553 (sklearn/svm/_li..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (189 samples, 20.26%)</title><rect x="940" y="212" width="239" height="15" fill="rgb(253,184,8)"/><text x="943.00" y="222.50">copy_predict_proba (sklearn/svm..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (189 samples, 20.26%)</title><rect x="940" y="228" width="239" height="15" fill="rgb(240,224,28)"/><text x="943.00" y="238.50">svm_predict_probability (sklear..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (78 samples, 8.36%)</title><rect x="1081" y="244" width="98" height="15" fill="rgb(244,48,30)"/><text x="1084.00" y="254.50">svm_predict..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (52 samples, 5.57%)</title><rect x="1114" y="260" width="65" height="15" fill="rgb(218,201,39)"/><text x="1117.00" y="270.50">svm::Ke..</text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (20 samples, 2.14%)</title><rect x="1154" y="276" width="25" height="15" fill="rgb(237,79,51)"/><text x="1157.00" y="286.50">s..</text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.21%)</title><rect x="1181" y="196" width="2" height="15" fill="rgb(218,152,28)"/><text x="1184.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.11%)</title><rect x="1182" y="212" width="1" height="15" fill="rgb(245,226,36)"/><text x="1185.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (3 samples, 0.32%)</title><rect x="1181" y="180" width="3" height="15" fill="rgb(233,95,4)"/><text x="1184.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.11%)</title><rect x="1183" y="196" width="1" height="15" fill="rgb(250,224,20)"/><text x="1186.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="1183" y="212" width="1" height="15" fill="rgb(240,214,5)"/><text x="1186.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.11%)</title><rect x="1183" y="228" width="1" height="15" fill="rgb(221,31,29)"/><text x="1186.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="1183" y="244" width="1" height="15" fill="rgb(218,2,33)"/><text x="1186.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.11%)</title><rect x="1183" y="260" width="1" height="15" fill="rgb(222,1,44)"/><text x="1186.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.11%)</title><rect x="1183" y="276" width="1" height="15" fill="rgb(242,134,49)"/><text x="1186.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.11%)</title><rect x="1183" y="292" width="1" height="15" fill="rgb(205,166,40)"/><text x="1186.00" y="302.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="1183" y="308" width="1" height="15" fill="rgb(241,229,44)"/><text x="1186.00" y="318.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.11%)</title><rect x="1186" y="212" width="1" height="15" fill="rgb(207,193,23)"/><text x="1189.00" y="222.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py) (198 samples, 21.22%)</title><rect x="938" y="148" width="250" height="15" fill="rgb(240,2,51)"/><text x="941.00" y="158.50">_predict_proba (sklearn/svm/_base..</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (7 samples, 0.75%)</title><rect x="1179" y="164" width="9" height="15" fill="rgb(241,54,48)"/><text x="1182.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 0.32%)</title><rect x="1184" y="180" width="4" height="15" fill="rgb(243,9,43)"/><text x="1187.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.32%)</title><rect x="1184" y="196" width="4" height="15" fill="rgb(245,149,47)"/><text x="1187.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="1187" y="212" width="1" height="15" fill="rgb(215,56,3)"/><text x="1190.00" y="222.50"></text></g><g><title>all (933 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(246,66,30)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (933 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(206,201,25)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (200 samples, 21.44%)</title><rect x="937" y="68" width="253" height="15" fill="rgb(237,41,40)"/><text x="940.00" y="78.50">profile_skl (bench_SVC_poly_m_cl_..</text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (200 samples, 21.44%)</title><rect x="937" y="84" width="253" height="15" fill="rgb(252,32,13)"/><text x="940.00" y="94.50">setup_profile (bench_SVC_poly_m_c..</text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py) (200 samples, 21.44%)</title><rect x="937" y="100" width="253" height="15" fill="rgb(244,204,28)"/><text x="940.00" y="110.50">profile (bench_SVC_poly_m_cl_prob..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (199 samples, 21.33%)</title><rect x="938" y="116" width="252" height="15" fill="rgb(227,44,2)"/><text x="941.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (199 samples, 21.33%)</title><rect x="938" y="132" width="252" height="15" fill="rgb(230,52,17)"/><text x="941.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>predict_proba (sklearn/svm/_base.py) (1 samples, 0.11%)</title><rect x="1188" y="148" width="2" height="15" fill="rgb(219,165,19)"/><text x="1191.00" y="158.50"></text></g></g></svg>