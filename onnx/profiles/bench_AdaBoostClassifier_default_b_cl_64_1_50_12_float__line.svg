<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2070" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2053.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2053.00"> </text><g id="frames"><g><title>fit (sklearn/tree/_classes.py:149) (2 samples, 0.41%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(211,202,54)"/><text x="13.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.41%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(241,170,35)"/><text x="13.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:50) (2 samples, 0.41%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(247,35,52)"/><text x="13.00" y="238.50"></text></g><g><title>_safe_accumulator_op (sklearn/utils/extmath.py:704) (2 samples, 0.41%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(233,59,48)"/><text x="13.00" y="254.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (2 samples, 0.41%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(223,103,19)"/><text x="13.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.41%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(227,222,37)"/><text x="13.00" y="286.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (2 samples, 0.41%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(242,44,3)"/><text x="13.00" y="302.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.20%)</title><rect x="12" y="308" width="2" height="15" fill="rgb(239,125,32)"/><text x="15.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.20%)</title><rect x="12" y="324" width="2" height="15" fill="rgb(208,157,51)"/><text x="15.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.20%)</title><rect x="12" y="340" width="2" height="15" fill="rgb(220,95,51)"/><text x="15.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.20%)</title><rect x="12" y="356" width="2" height="15" fill="rgb(234,197,20)"/><text x="15.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.20%)</title><rect x="12" y="372" width="2" height="15" fill="rgb(238,52,51)"/><text x="15.00" y="382.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.20%)</title><rect x="12" y="388" width="2" height="15" fill="rgb(219,108,34)"/><text x="15.00" y="398.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:31) (3 samples, 0.61%)</title><rect x="10" y="52" width="7" height="15" fill="rgb(244,105,51)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:11) (3 samples, 0.61%)</title><rect x="10" y="68" width="7" height="15" fill="rgb(223,6,44)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:39) (3 samples, 0.61%)</title><rect x="10" y="84" width="7" height="15" fill="rgb(230,210,10)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 0.61%)</title><rect x="10" y="100" width="7" height="15" fill="rgb(209,123,8)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (3 samples, 0.61%)</title><rect x="10" y="116" width="7" height="15" fill="rgb(222,2,48)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (3 samples, 0.61%)</title><rect x="10" y="132" width="7" height="15" fill="rgb(212,19,49)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (3 samples, 0.61%)</title><rect x="10" y="148" width="7" height="15" fill="rgb(231,155,34)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (3 samples, 0.61%)</title><rect x="10" y="164" width="7" height="15" fill="rgb(207,34,4)"/><text x="13.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (3 samples, 0.61%)</title><rect x="10" y="180" width="7" height="15" fill="rgb(233,195,52)"/><text x="13.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:205) (1 samples, 0.20%)</title><rect x="14" y="196" width="3" height="15" fill="rgb(235,180,49)"/><text x="17.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.20%)</title><rect x="14" y="212" width="3" height="15" fill="rgb(252,72,51)"/><text x="17.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.20%)</title><rect x="14" y="228" width="3" height="15" fill="rgb(251,121,34)"/><text x="17.00" y="238.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.20%)</title><rect x="17" y="100" width="2" height="15" fill="rgb(220,179,49)"/><text x="20.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.20%)</title><rect x="17" y="116" width="2" height="15" fill="rgb(238,178,51)"/><text x="20.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (1 samples, 0.20%)</title><rect x="17" y="132" width="2" height="15" fill="rgb(237,100,3)"/><text x="20.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="17" y="148" width="2" height="15" fill="rgb(245,166,25)"/><text x="20.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="17" y="164" width="2" height="15" fill="rgb(249,137,4)"/><text x="20.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="17" y="180" width="2" height="15" fill="rgb(245,94,14)"/><text x="20.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="17" y="196" width="2" height="15" fill="rgb(240,177,28)"/><text x="20.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="17" y="212" width="2" height="15" fill="rgb(252,144,51)"/><text x="20.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:8) (1 samples, 0.20%)</title><rect x="17" y="228" width="2" height="15" fill="rgb(243,74,43)"/><text x="20.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="17" y="244" width="2" height="15" fill="rgb(226,204,23)"/><text x="20.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="17" y="260" width="2" height="15" fill="rgb(219,186,35)"/><text x="20.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="17" y="276" width="2" height="15" fill="rgb(242,94,6)"/><text x="20.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="17" y="292" width="2" height="15" fill="rgb(237,201,29)"/><text x="20.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="17" y="308" width="2" height="15" fill="rgb(224,117,9)"/><text x="20.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py:14) (1 samples, 0.20%)</title><rect x="17" y="324" width="2" height="15" fill="rgb(227,148,32)"/><text x="20.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="17" y="340" width="2" height="15" fill="rgb(223,81,47)"/><text x="20.00" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="17" y="356" width="2" height="15" fill="rgb(232,162,9)"/><text x="20.00" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="17" y="372" width="2" height="15" fill="rgb(240,161,46)"/><text x="20.00" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="17" y="388" width="2" height="15" fill="rgb(212,110,15)"/><text x="20.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="17" y="404" width="2" height="15" fill="rgb(234,77,27)"/><text x="20.00" y="414.50"></text></g><g><title>&lt;module&gt; (lightgbm/compat.py:90) (1 samples, 0.20%)</title><rect x="17" y="420" width="2" height="15" fill="rgb(250,212,38)"/><text x="20.00" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="17" y="436" width="2" height="15" fill="rgb(241,123,31)"/><text x="20.00" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="17" y="452" width="2" height="15" fill="rgb(248,112,29)"/><text x="20.00" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="17" y="468" width="2" height="15" fill="rgb(254,155,40)"/><text x="20.00" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="17" y="484" width="2" height="15" fill="rgb(218,89,0)"/><text x="20.00" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="17" y="500" width="2" height="15" fill="rgb(240,95,22)"/><text x="20.00" y="510.50"></text></g><g><title>&lt;module&gt; (graphviz/__init__.py:27) (1 samples, 0.20%)</title><rect x="17" y="516" width="2" height="15" fill="rgb(249,62,35)"/><text x="20.00" y="526.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:28) (2 samples, 0.41%)</title><rect x="17" y="84" width="5" height="15" fill="rgb(251,6,33)"/><text x="20.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.20%)</title><rect x="19" y="100" width="3" height="15" fill="rgb(235,184,14)"/><text x="22.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.20%)</title><rect x="19" y="116" width="3" height="15" fill="rgb(205,34,20)"/><text x="22.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.20%)</title><rect x="19" y="132" width="3" height="15" fill="rgb(242,165,17)"/><text x="22.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.20%)</title><rect x="19" y="148" width="3" height="15" fill="rgb(244,225,51)"/><text x="22.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.20%)</title><rect x="19" y="164" width="3" height="15" fill="rgb(251,139,36)"/><text x="22.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.20%)</title><rect x="19" y="180" width="3" height="15" fill="rgb(228,168,12)"/><text x="22.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (1 samples, 0.20%)</title><rect x="19" y="196" width="3" height="15" fill="rgb(252,82,4)"/><text x="22.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.20%)</title><rect x="22" y="228" width="2" height="15" fill="rgb(242,34,18)"/><text x="25.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.20%)</title><rect x="22" y="244" width="2" height="15" fill="rgb(218,21,50)"/><text x="25.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.20%)</title><rect x="24" y="228" width="2" height="15" fill="rgb(205,123,17)"/><text x="27.00" y="238.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (3 samples, 0.61%)</title><rect x="22" y="212" width="7" height="15" fill="rgb(236,108,27)"/><text x="25.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.20%)</title><rect x="26" y="228" width="3" height="15" fill="rgb(252,0,8)"/><text x="29.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.20%)</title><rect x="26" y="244" width="3" height="15" fill="rgb(234,38,8)"/><text x="29.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (2 samples, 0.41%)</title><rect x="29" y="244" width="5" height="15" fill="rgb(219,171,53)"/><text x="32.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.20%)</title><rect x="34" y="244" width="2" height="15" fill="rgb(213,45,6)"/><text x="37.00" y="254.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.20%)</title><rect x="34" y="260" width="2" height="15" fill="rgb(224,181,29)"/><text x="37.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.41%)</title><rect x="36" y="244" width="5" height="15" fill="rgb(211,93,19)"/><text x="39.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.20%)</title><rect x="38" y="260" width="3" height="15" fill="rgb(217,211,39)"/><text x="41.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.20%)</title><rect x="41" y="244" width="2" height="15" fill="rgb(206,151,43)"/><text x="44.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.20%)</title><rect x="41" y="260" width="2" height="15" fill="rgb(244,57,42)"/><text x="44.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.20%)</title><rect x="43" y="244" width="3" height="15" fill="rgb(218,39,23)"/><text x="46.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.20%)</title><rect x="43" y="260" width="3" height="15" fill="rgb(207,202,40)"/><text x="46.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.20%)</title><rect x="46" y="244" width="2" height="15" fill="rgb(211,141,13)"/><text x="49.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.20%)</title><rect x="46" y="260" width="2" height="15" fill="rgb(246,47,52)"/><text x="49.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.61%)</title><rect x="48" y="260" width="7" height="15" fill="rgb(207,115,33)"/><text x="51.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (13 samples, 2.65%)</title><rect x="29" y="212" width="31" height="15" fill="rgb(206,128,44)"/><text x="32.00" y="222.50">pr..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (13 samples, 2.65%)</title><rect x="29" y="228" width="31" height="15" fill="rgb(243,166,24)"/><text x="32.00" y="238.50">_v..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (5 samples, 1.02%)</title><rect x="48" y="244" width="12" height="15" fill="rgb(253,69,9)"/><text x="51.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.41%)</title><rect x="55" y="260" width="5" height="15" fill="rgb(208,197,20)"/><text x="58.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.20%)</title><rect x="58" y="276" width="2" height="15" fill="rgb(240,15,1)"/><text x="61.00" y="286.50"></text></g><g><title>0x7f911ef79592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.41%)</title><rect x="60" y="276" width="5" height="15" fill="rgb(224,150,44)"/><text x="63.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.20%)</title><rect x="62" y="292" width="3" height="15" fill="rgb(248,209,51)"/><text x="65.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.20%)</title><rect x="62" y="308" width="3" height="15" fill="rgb(251,92,13)"/><text x="65.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.20%)</title><rect x="62" y="324" width="3" height="15" fill="rgb(239,105,3)"/><text x="65.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.20%)</title><rect x="62" y="340" width="3" height="15" fill="rgb(235,78,35)"/><text x="65.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (1 samples, 0.20%)</title><rect x="62" y="356" width="3" height="15" fill="rgb(210,88,21)"/><text x="65.00" y="366.50"></text></g><g><title>0x7f91455481ef (libc-2.29.so) (1 samples, 0.20%)</title><rect x="62" y="372" width="3" height="15" fill="rgb(224,63,22)"/><text x="65.00" y="382.50"></text></g><g><title>0x7f911ef7a405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.61%)</title><rect x="60" y="260" width="7" height="15" fill="rgb(206,138,39)"/><text x="63.00" y="270.50"></text></g><g><title>0x7f911ef79c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="65" y="276" width="2" height="15" fill="rgb(231,167,3)"/><text x="68.00" y="286.50"></text></g><g><title>0x7f911ef515f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="65" y="292" width="2" height="15" fill="rgb(248,136,5)"/><text x="68.00" y="302.50"></text></g><g><title>0x7f911ef50f4c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="65" y="308" width="2" height="15" fill="rgb(221,93,36)"/><text x="68.00" y="318.50"></text></g><g><title>0x7f911ef6afa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.82%)</title><rect x="60" y="244" width="10" height="15" fill="rgb(239,60,29)"/><text x="63.00" y="254.50"></text></g><g><title>0x7f911ef7a540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="67" y="260" width="3" height="15" fill="rgb(247,215,42)"/><text x="70.00" y="270.50"></text></g><g><title>0x7f911ef4f178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="67" y="276" width="3" height="15" fill="rgb(238,136,8)"/><text x="70.00" y="286.50"></text></g><g><title>0x7f911ef6b05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="70" y="244" width="2" height="15" fill="rgb(219,69,50)"/><text x="73.00" y="254.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.20%)</title><rect x="70" y="260" width="2" height="15" fill="rgb(209,9,11)"/><text x="73.00" y="270.50"></text></g><g><title>0x7f914553de6d (libc-2.29.so) (1 samples, 0.20%)</title><rect x="70" y="276" width="2" height="15" fill="rgb(215,135,51)"/><text x="73.00" y="286.50"></text></g><g><title>0x7f911ef6b13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="72" y="244" width="3" height="15" fill="rgb(223,126,49)"/><text x="75.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="72" y="260" width="3" height="15" fill="rgb(232,167,7)"/><text x="75.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="72" y="276" width="3" height="15" fill="rgb(227,58,26)"/><text x="75.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.20%)</title><rect x="72" y="292" width="3" height="15" fill="rgb(246,79,33)"/><text x="75.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (7 samples, 1.43%)</title><rect x="60" y="212" width="17" height="15" fill="rgb(216,53,7)"/><text x="63.00" y="222.50"></text></g><g><title>0x7f911ef6bd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.43%)</title><rect x="60" y="228" width="17" height="15" fill="rgb(236,159,25)"/><text x="63.00" y="238.50"></text></g><g><title>0x7f911ef6b8c2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="75" y="244" width="2" height="15" fill="rgb(222,175,27)"/><text x="78.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (2 samples, 0.41%)</title><rect x="77" y="212" width="5" height="15" fill="rgb(212,12,16)"/><text x="80.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (2 samples, 0.41%)</title><rect x="77" y="228" width="5" height="15" fill="rgb(230,228,34)"/><text x="80.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (2 samples, 0.41%)</title><rect x="77" y="244" width="5" height="15" fill="rgb(242,187,32)"/><text x="80.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (2 samples, 0.41%)</title><rect x="77" y="260" width="5" height="15" fill="rgb(248,136,30)"/><text x="80.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.20%)</title><rect x="79" y="276" width="3" height="15" fill="rgb(231,202,25)"/><text x="82.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.20%)</title><rect x="79" y="292" width="3" height="15" fill="rgb(226,21,41)"/><text x="82.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (26 samples, 5.31%)</title><rect x="22" y="196" width="62" height="15" fill="rgb(237,196,41)"/><text x="25.00" y="206.50">_samme..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (1 samples, 0.20%)</title><rect x="82" y="212" width="2" height="15" fill="rgb(244,220,22)"/><text x="85.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.20%)</title><rect x="82" y="228" width="2" height="15" fill="rgb(253,91,52)"/><text x="85.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="82" y="244" width="2" height="15" fill="rgb(211,1,36)"/><text x="85.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="82" y="260" width="2" height="15" fill="rgb(244,208,49)"/><text x="85.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.20%)</title><rect x="82" y="276" width="2" height="15" fill="rgb(230,167,31)"/><text x="85.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1368) (1 samples, 0.20%)</title><rect x="82" y="292" width="2" height="15" fill="rgb(230,28,24)"/><text x="85.00" y="302.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (2 samples, 0.41%)</title><rect x="84" y="212" width="5" height="15" fill="rgb(224,50,8)"/><text x="87.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.20%)</title><rect x="87" y="228" width="2" height="15" fill="rgb(239,90,28)"/><text x="90.00" y="238.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.20%)</title><rect x="89" y="212" width="2" height="15" fill="rgb(207,69,18)"/><text x="92.00" y="222.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.20%)</title><rect x="91" y="324" width="3" height="15" fill="rgb(210,105,30)"/><text x="94.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.20%)</title><rect x="91" y="340" width="3" height="15" fill="rgb(215,154,31)"/><text x="94.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.20%)</title><rect x="94" y="324" width="2" height="15" fill="rgb(249,129,22)"/><text x="97.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="94" y="340" width="2" height="15" fill="rgb(245,99,19)"/><text x="97.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.20%)</title><rect x="94" y="356" width="2" height="15" fill="rgb(226,59,16)"/><text x="97.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.20%)</title><rect x="94" y="372" width="2" height="15" fill="rgb(239,56,43)"/><text x="97.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.20%)</title><rect x="94" y="388" width="2" height="15" fill="rgb(239,156,8)"/><text x="97.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.20%)</title><rect x="94" y="404" width="2" height="15" fill="rgb(215,27,14)"/><text x="97.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.20%)</title><rect x="94" y="420" width="2" height="15" fill="rgb(240,170,8)"/><text x="97.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="96" y="340" width="3" height="15" fill="rgb(245,168,2)"/><text x="99.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="96" y="356" width="3" height="15" fill="rgb(224,94,37)"/><text x="99.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.20%)</title><rect x="96" y="372" width="3" height="15" fill="rgb(248,64,5)"/><text x="99.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.20%)</title><rect x="96" y="388" width="3" height="15" fill="rgb(221,51,12)"/><text x="99.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.20%)</title><rect x="96" y="404" width="3" height="15" fill="rgb(254,33,10)"/><text x="99.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.20%)</title><rect x="96" y="420" width="3" height="15" fill="rgb(205,135,8)"/><text x="99.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="99" y="356" width="2" height="15" fill="rgb(222,82,43)"/><text x="102.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.20%)</title><rect x="99" y="372" width="2" height="15" fill="rgb(210,51,37)"/><text x="102.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.20%)</title><rect x="99" y="388" width="2" height="15" fill="rgb(243,111,40)"/><text x="102.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:287) (1 samples, 0.20%)</title><rect x="99" y="404" width="2" height="15" fill="rgb(239,92,14)"/><text x="102.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:566) (1 samples, 0.20%)</title><rect x="99" y="420" width="2" height="15" fill="rgb(233,220,29)"/><text x="102.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.20%)</title><rect x="99" y="436" width="2" height="15" fill="rgb(205,116,26)"/><text x="102.00" y="446.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.20%)</title><rect x="99" y="452" width="2" height="15" fill="rgb(218,167,12)"/><text x="102.00" y="462.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4556) (1 samples, 0.20%)</title><rect x="99" y="468" width="2" height="15" fill="rgb(227,73,7)"/><text x="102.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="101" y="356" width="2" height="15" fill="rgb(226,148,24)"/><text x="104.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.20%)</title><rect x="101" y="372" width="2" height="15" fill="rgb(232,12,46)"/><text x="104.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (6 samples, 1.22%)</title><rect x="91" y="308" width="15" height="15" fill="rgb(222,25,3)"/><text x="94.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.82%)</title><rect x="96" y="324" width="10" height="15" fill="rgb(245,129,47)"/><text x="99.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.61%)</title><rect x="99" y="340" width="7" height="15" fill="rgb(211,91,31)"/><text x="102.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="103" y="356" width="3" height="15" fill="rgb(253,50,21)"/><text x="106.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.20%)</title><rect x="103" y="372" width="3" height="15" fill="rgb(251,139,5)"/><text x="106.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.20%)</title><rect x="103" y="388" width="3" height="15" fill="rgb(252,218,32)"/><text x="106.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.41%)</title><rect x="106" y="324" width="5" height="15" fill="rgb(222,221,17)"/><text x="109.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.20%)</title><rect x="108" y="340" width="3" height="15" fill="rgb(225,53,19)"/><text x="111.00" y="350.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.20%)</title><rect x="111" y="404" width="2" height="15" fill="rgb(244,118,4)"/><text x="114.00" y="414.50"></text></g><g><title>0x7f914553d76f (libc-2.29.so) (1 samples, 0.20%)</title><rect x="111" y="420" width="2" height="15" fill="rgb(251,34,54)"/><text x="114.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.41%)</title><rect x="111" y="324" width="4" height="15" fill="rgb(241,152,51)"/><text x="114.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.41%)</title><rect x="111" y="340" width="4" height="15" fill="rgb(246,221,53)"/><text x="114.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.41%)</title><rect x="111" y="356" width="4" height="15" fill="rgb(224,160,22)"/><text x="114.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.41%)</title><rect x="111" y="372" width="4" height="15" fill="rgb(224,9,49)"/><text x="114.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.41%)</title><rect x="111" y="388" width="4" height="15" fill="rgb(223,179,47)"/><text x="114.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.20%)</title><rect x="113" y="404" width="2" height="15" fill="rgb(221,205,41)"/><text x="116.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.20%)</title><rect x="113" y="420" width="2" height="15" fill="rgb(245,205,15)"/><text x="116.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.20%)</title><rect x="113" y="436" width="2" height="15" fill="rgb(214,76,48)"/><text x="116.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1824) (1 samples, 0.20%)</title><rect x="113" y="452" width="2" height="15" fill="rgb(253,108,5)"/><text x="116.00" y="462.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4414) (1 samples, 0.20%)</title><rect x="113" y="468" width="2" height="15" fill="rgb(223,42,43)"/><text x="116.00" y="478.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (5 samples, 1.02%)</title><rect x="106" y="308" width="12" height="15" fill="rgb(238,161,28)"/><text x="109.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.20%)</title><rect x="115" y="324" width="3" height="15" fill="rgb(231,136,15)"/><text x="118.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="115" y="340" width="3" height="15" fill="rgb(230,114,42)"/><text x="118.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3296) (1 samples, 0.20%)</title><rect x="115" y="356" width="3" height="15" fill="rgb(234,76,26)"/><text x="118.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="115" y="372" width="3" height="15" fill="rgb(244,194,14)"/><text x="118.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="115" y="388" width="3" height="15" fill="rgb(213,184,4)"/><text x="118.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.20%)</title><rect x="115" y="404" width="3" height="15" fill="rgb(246,30,50)"/><text x="118.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:129) (2 samples, 0.41%)</title><rect x="118" y="308" width="5" height="15" fill="rgb(224,223,53)"/><text x="121.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (1 samples, 0.20%)</title><rect x="120" y="324" width="3" height="15" fill="rgb(233,111,45)"/><text x="123.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="120" y="340" width="3" height="15" fill="rgb(251,130,52)"/><text x="123.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="120" y="356" width="3" height="15" fill="rgb(233,85,35)"/><text x="123.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.20%)</title><rect x="120" y="372" width="3" height="15" fill="rgb(222,74,44)"/><text x="123.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.20%)</title><rect x="120" y="388" width="3" height="15" fill="rgb(205,45,30)"/><text x="123.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.20%)</title><rect x="120" y="404" width="3" height="15" fill="rgb(251,227,50)"/><text x="123.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.20%)</title><rect x="120" y="420" width="3" height="15" fill="rgb(214,9,52)"/><text x="123.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="120" y="436" width="3" height="15" fill="rgb(206,110,31)"/><text x="123.00" y="446.50"></text></g><g><title>0x7f91454df7a5 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="120" y="452" width="3" height="15" fill="rgb(226,167,9)"/><text x="123.00" y="462.50"></text></g><g><title>0x7f91454df8c4 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="120" y="468" width="3" height="15" fill="rgb(231,94,37)"/><text x="123.00" y="478.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (17 samples, 3.47%)</title><rect x="84" y="196" width="41" height="15" fill="rgb(221,166,2)"/><text x="87.00" y="206.50">_sa..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (14 samples, 2.86%)</title><rect x="91" y="212" width="34" height="15" fill="rgb(238,105,50)"/><text x="94.00" y="222.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 2.86%)</title><rect x="91" y="228" width="34" height="15" fill="rgb(250,204,44)"/><text x="94.00" y="238.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (14 samples, 2.86%)</title><rect x="91" y="244" width="34" height="15" fill="rgb(243,202,17)"/><text x="94.00" y="254.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (14 samples, 2.86%)</title><rect x="91" y="260" width="34" height="15" fill="rgb(207,110,20)"/><text x="94.00" y="270.50">_w..</text></g><g><title>array_clip (methods.c:2381) (14 samples, 2.86%)</title><rect x="91" y="276" width="34" height="15" fill="rgb(220,83,35)"/><text x="94.00" y="286.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 2.86%)</title><rect x="91" y="292" width="34" height="15" fill="rgb(217,23,36)"/><text x="94.00" y="302.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:98) (1 samples, 0.20%)</title><rect x="123" y="308" width="2" height="15" fill="rgb(238,146,50)"/><text x="126.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="125" y="212" width="3" height="15" fill="rgb(214,158,25)"/><text x="128.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="125" y="228" width="3" height="15" fill="rgb(227,68,11)"/><text x="128.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.20%)</title><rect x="125" y="244" width="3" height="15" fill="rgb(228,150,40)"/><text x="128.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.20%)</title><rect x="125" y="260" width="3" height="15" fill="rgb(221,93,28)"/><text x="128.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.20%)</title><rect x="125" y="276" width="3" height="15" fill="rgb(244,146,45)"/><text x="128.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.20%)</title><rect x="125" y="292" width="3" height="15" fill="rgb(231,130,46)"/><text x="128.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (2 samples, 0.41%)</title><rect x="125" y="196" width="5" height="15" fill="rgb(225,85,11)"/><text x="128.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.20%)</title><rect x="128" y="212" width="2" height="15" fill="rgb(220,203,24)"/><text x="131.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.20%)</title><rect x="128" y="228" width="2" height="15" fill="rgb(233,58,1)"/><text x="131.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="135" y="212" width="2" height="15" fill="rgb(249,63,3)"/><text x="138.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="135" y="228" width="2" height="15" fill="rgb(220,133,30)"/><text x="138.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.20%)</title><rect x="135" y="244" width="2" height="15" fill="rgb(236,183,49)"/><text x="138.00" y="254.50"></text></g><g><title>array_multiply (number.c:354) (2 samples, 0.41%)</title><rect x="137" y="212" width="5" height="15" fill="rgb(231,122,43)"/><text x="140.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.41%)</title><rect x="137" y="228" width="5" height="15" fill="rgb(215,124,4)"/><text x="140.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.41%)</title><rect x="137" y="244" width="5" height="15" fill="rgb(239,142,54)"/><text x="140.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (2 samples, 0.41%)</title><rect x="137" y="260" width="5" height="15" fill="rgb(241,214,46)"/><text x="140.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.20%)</title><rect x="144" y="260" width="3" height="15" fill="rgb(210,223,19)"/><text x="147.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="144" y="276" width="3" height="15" fill="rgb(234,203,49)"/><text x="147.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.20%)</title><rect x="144" y="292" width="3" height="15" fill="rgb(241,221,3)"/><text x="147.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.20%)</title><rect x="144" y="308" width="3" height="15" fill="rgb(245,146,40)"/><text x="147.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.20%)</title><rect x="144" y="324" width="3" height="15" fill="rgb(211,152,40)"/><text x="147.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.20%)</title><rect x="144" y="340" width="3" height="15" fill="rgb(253,182,4)"/><text x="147.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4513) (1 samples, 0.20%)</title><rect x="147" y="276" width="2" height="15" fill="rgb(251,24,42)"/><text x="150.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (54 samples, 11.02%)</title><rect x="22" y="180" width="130" height="15" fill="rgb(254,159,13)"/><text x="25.00" y="190.50">&lt;genexpr&gt; (sklea..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (9 samples, 1.84%)</title><rect x="130" y="196" width="22" height="15" fill="rgb(208,69,41)"/><text x="133.00" y="206.50">_..</text></g><g><title>array_sum (methods.c:2215) (4 samples, 0.82%)</title><rect x="142" y="212" width="10" height="15" fill="rgb(225,221,45)"/><text x="145.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (4 samples, 0.82%)</title><rect x="142" y="228" width="10" height="15" fill="rgb(237,2,42)"/><text x="145.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (3 samples, 0.61%)</title><rect x="144" y="244" width="8" height="15" fill="rgb(244,178,6)"/><text x="147.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.41%)</title><rect x="147" y="260" width="5" height="15" fill="rgb(219,117,32)"/><text x="150.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.20%)</title><rect x="149" y="276" width="3" height="15" fill="rgb(219,93,46)"/><text x="152.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.20%)</title><rect x="149" y="292" width="3" height="15" fill="rgb(208,194,18)"/><text x="152.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.20%)</title><rect x="149" y="308" width="3" height="15" fill="rgb(231,68,26)"/><text x="152.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.20%)</title><rect x="149" y="324" width="3" height="15" fill="rgb(229,135,9)"/><text x="152.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.20%)</title><rect x="149" y="340" width="3" height="15" fill="rgb(232,181,35)"/><text x="152.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.20%)</title><rect x="149" y="356" width="3" height="15" fill="rgb(208,198,1)"/><text x="152.00" y="366.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.20%)</title><rect x="149" y="372" width="3" height="15" fill="rgb(207,213,3)"/><text x="152.00" y="382.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:18) (55 samples, 11.22%)</title><rect x="22" y="100" width="132" height="15" fill="rgb(249,104,46)"/><text x="25.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (55 samples, 11.22%)</title><rect x="22" y="116" width="132" height="15" fill="rgb(207,57,38)"/><text x="25.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (55 samples, 11.22%)</title><rect x="22" y="132" width="132" height="15" fill="rgb(243,166,8)"/><text x="25.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (55 samples, 11.22%)</title><rect x="22" y="148" width="132" height="15" fill="rgb(228,76,48)"/><text x="25.00" y="158.50">predict_proba (s..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (55 samples, 11.22%)</title><rect x="22" y="164" width="132" height="15" fill="rgb(220,130,20)"/><text x="25.00" y="174.50">decision_functio..</text></g><g><title>array_add (number.c:330) (1 samples, 0.20%)</title><rect x="152" y="180" width="2" height="15" fill="rgb(219,20,35)"/><text x="155.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="152" y="196" width="2" height="15" fill="rgb(216,42,49)"/><text x="155.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="152" y="212" width="2" height="15" fill="rgb(241,200,52)"/><text x="155.00" y="222.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c:702) (1 samples, 0.20%)</title><rect x="152" y="228" width="2" height="15" fill="rgb(246,24,28)"/><text x="155.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (4 samples, 0.82%)</title><rect x="164" y="228" width="9" height="15" fill="rgb(231,103,12)"/><text x="167.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (3 samples, 0.61%)</title><rect x="166" y="244" width="7" height="15" fill="rgb(247,32,13)"/><text x="169.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.41%)</title><rect x="183" y="260" width="5" height="15" fill="rgb(220,205,27)"/><text x="186.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (13 samples, 2.65%)</title><rect x="161" y="212" width="32" height="15" fill="rgb(231,207,43)"/><text x="164.00" y="222.50">pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 1.63%)</title><rect x="173" y="228" width="20" height="15" fill="rgb(222,48,14)"/><text x="176.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 1.02%)</title><rect x="180" y="244" width="13" height="15" fill="rgb(248,144,44)"/><text x="183.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.41%)</title><rect x="188" y="260" width="5" height="15" fill="rgb(243,229,50)"/><text x="191.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.20%)</title><rect x="193" y="244" width="2" height="15" fill="rgb(224,208,32)"/><text x="196.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.20%)</title><rect x="195" y="244" width="2" height="15" fill="rgb(209,187,24)"/><text x="198.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.41%)</title><rect x="197" y="244" width="5" height="15" fill="rgb(238,86,34)"/><text x="200.00" y="254.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.20%)</title><rect x="200" y="260" width="2" height="15" fill="rgb(218,23,22)"/><text x="203.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.20%)</title><rect x="205" y="260" width="2" height="15" fill="rgb(216,53,7)"/><text x="208.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.61%)</title><rect x="202" y="244" width="7" height="15" fill="rgb(221,138,44)"/><text x="205.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.20%)</title><rect x="207" y="260" width="2" height="15" fill="rgb(214,158,50)"/><text x="210.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.20%)</title><rect x="214" y="260" width="3" height="15" fill="rgb(233,93,5)"/><text x="217.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.20%)</title><rect x="217" y="276" width="2" height="15" fill="rgb(227,102,40)"/><text x="220.00" y="286.50"></text></g><g><title>0x7f914553de9d (libc-2.29.so) (1 samples, 0.20%)</title><rect x="217" y="292" width="2" height="15" fill="rgb(239,210,26)"/><text x="220.00" y="302.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.20%)</title><rect x="219" y="276" width="2" height="15" fill="rgb(223,49,24)"/><text x="222.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 1.22%)</title><rect x="209" y="244" width="15" height="15" fill="rgb(246,161,4)"/><text x="212.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.61%)</title><rect x="217" y="260" width="7" height="15" fill="rgb(206,11,20)"/><text x="220.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.20%)</title><rect x="221" y="276" width="3" height="15" fill="rgb(248,47,44)"/><text x="224.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.41%)</title><rect x="224" y="244" width="5" height="15" fill="rgb(215,218,22)"/><text x="227.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.20%)</title><rect x="229" y="260" width="2" height="15" fill="rgb(251,53,53)"/><text x="232.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.41%)</title><rect x="229" y="244" width="4" height="15" fill="rgb(216,44,16)"/><text x="232.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.20%)</title><rect x="231" y="260" width="2" height="15" fill="rgb(238,75,19)"/><text x="234.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.20%)</title><rect x="233" y="244" width="3" height="15" fill="rgb(213,48,40)"/><text x="236.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.20%)</title><rect x="236" y="276" width="2" height="15" fill="rgb(237,210,21)"/><text x="239.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.61%)</title><rect x="236" y="260" width="7" height="15" fill="rgb(242,194,51)"/><text x="239.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.41%)</title><rect x="238" y="276" width="5" height="15" fill="rgb(216,8,12)"/><text x="241.00" y="286.50"></text></g><g><title>0x7f91455386d0 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="241" y="292" width="2" height="15" fill="rgb(238,52,41)"/><text x="244.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (6 samples, 1.22%)</title><rect x="236" y="244" width="14" height="15" fill="rgb(216,100,20)"/><text x="239.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (3 samples, 0.61%)</title><rect x="243" y="260" width="7" height="15" fill="rgb(245,107,50)"/><text x="246.00" y="270.50"></text></g><g><title>get_config (sklearn/_config.py:26) (2 samples, 0.41%)</title><rect x="246" y="276" width="4" height="15" fill="rgb(234,164,24)"/><text x="249.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (4 samples, 0.82%)</title><rect x="250" y="260" width="10" height="15" fill="rgb(252,89,15)"/><text x="253.00" y="270.50"></text></g><g><title>0x7f9145605df0 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="258" y="276" width="2" height="15" fill="rgb(236,49,3)"/><text x="261.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.20%)</title><rect x="260" y="260" width="2" height="15" fill="rgb(246,18,54)"/><text x="263.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (33 samples, 6.73%)</title><rect x="193" y="228" width="79" height="15" fill="rgb(221,40,2)"/><text x="196.00" y="238.50">_validate..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (9 samples, 1.84%)</title><rect x="250" y="244" width="22" height="15" fill="rgb(216,185,20)"/><text x="253.00" y="254.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.82%)</title><rect x="262" y="260" width="10" height="15" fill="rgb(237,147,1)"/><text x="265.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.20%)</title><rect x="270" y="276" width="2" height="15" fill="rgb(244,90,21)"/><text x="273.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.20%)</title><rect x="270" y="292" width="2" height="15" fill="rgb(222,116,54)"/><text x="273.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (34 samples, 6.94%)</title><rect x="193" y="212" width="81" height="15" fill="rgb(245,221,8)"/><text x="196.00" y="222.50">predict_p..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.20%)</title><rect x="272" y="228" width="2" height="15" fill="rgb(225,47,1)"/><text x="275.00" y="238.50"></text></g><g><title>0x7f911ef6af55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="274" y="244" width="3" height="15" fill="rgb(243,54,27)"/><text x="277.00" y="254.50"></text></g><g><title>0x7f911ef5ad4c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="274" y="260" width="3" height="15" fill="rgb(234,61,22)"/><text x="277.00" y="270.50"></text></g><g><title>0x7f911ef78f32 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="277" y="276" width="2" height="15" fill="rgb(217,66,38)"/><text x="280.00" y="286.50"></text></g><g><title>0x7f911ef791dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="279" y="276" width="3" height="15" fill="rgb(252,128,2)"/><text x="282.00" y="286.50"></text></g><g><title>0x7f911ef5dd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="282" y="292" width="2" height="15" fill="rgb(245,92,31)"/><text x="285.00" y="302.50"></text></g><g><title>0x7f911ef5d666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="282" y="308" width="2" height="15" fill="rgb(236,58,30)"/><text x="285.00" y="318.50"></text></g><g><title>0x7f911ef532fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="282" y="324" width="2" height="15" fill="rgb(211,177,46)"/><text x="285.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.20%)</title><rect x="282" y="340" width="2" height="15" fill="rgb(225,26,51)"/><text x="285.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.20%)</title><rect x="282" y="356" width="2" height="15" fill="rgb(211,213,40)"/><text x="285.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.20%)</title><rect x="282" y="372" width="2" height="15" fill="rgb(247,86,33)"/><text x="285.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (1 samples, 0.20%)</title><rect x="282" y="388" width="2" height="15" fill="rgb(246,79,17)"/><text x="285.00" y="398.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.20%)</title><rect x="282" y="404" width="2" height="15" fill="rgb(253,207,35)"/><text x="285.00" y="414.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="282" y="420" width="2" height="15" fill="rgb(227,218,42)"/><text x="285.00" y="430.50"></text></g><g><title>0x7f911ef51020 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="284" y="308" width="2" height="15" fill="rgb(208,43,54)"/><text x="287.00" y="318.50"></text></g><g><title>0x7f911ef792df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.61%)</title><rect x="282" y="276" width="7" height="15" fill="rgb(250,191,2)"/><text x="285.00" y="286.50"></text></g><g><title>0x7f911ef5de72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.41%)</title><rect x="284" y="292" width="5" height="15" fill="rgb(226,203,5)"/><text x="287.00" y="302.50"></text></g><g><title>0x7f911ef512a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="286" y="308" width="3" height="15" fill="rgb(213,57,29)"/><text x="289.00" y="318.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.20%)</title><rect x="289" y="308" width="2" height="15" fill="rgb(239,64,35)"/><text x="292.00" y="318.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.41%)</title><rect x="289" y="292" width="5" height="15" fill="rgb(241,44,43)"/><text x="292.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="291" y="308" width="3" height="15" fill="rgb(247,75,44)"/><text x="294.00" y="318.50"></text></g><g><title>array_zeros (multiarraymodule.c:1980) (1 samples, 0.20%)</title><rect x="294" y="292" width="2" height="15" fill="rgb(209,193,41)"/><text x="297.00" y="302.50"></text></g><g><title>0x7f911ef79592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.82%)</title><rect x="289" y="276" width="9" height="15" fill="rgb(242,65,18)"/><text x="292.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.20%)</title><rect x="296" y="292" width="2" height="15" fill="rgb(205,153,23)"/><text x="299.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.20%)</title><rect x="296" y="308" width="2" height="15" fill="rgb(205,165,38)"/><text x="299.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.20%)</title><rect x="296" y="324" width="2" height="15" fill="rgb(235,6,19)"/><text x="299.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.20%)</title><rect x="296" y="340" width="2" height="15" fill="rgb(217,201,29)"/><text x="299.00" y="350.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:33) (1 samples, 0.20%)</title><rect x="296" y="356" width="2" height="15" fill="rgb(253,84,4)"/><text x="299.00" y="366.50"></text></g><g><title>0x7f911ef6afa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.04%)</title><rect x="277" y="244" width="24" height="15" fill="rgb(236,25,20)"/><text x="280.00" y="254.50">0..</text></g><g><title>0x7f911ef7a405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.04%)</title><rect x="277" y="260" width="24" height="15" fill="rgb(243,36,39)"/><text x="280.00" y="270.50">0..</text></g><g><title>0x7f911ef798c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="298" y="276" width="3" height="15" fill="rgb(229,47,41)"/><text x="301.00" y="286.50"></text></g><g><title>0x7f911ef6b05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="301" y="244" width="2" height="15" fill="rgb(246,47,39)"/><text x="304.00" y="254.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.20%)</title><rect x="301" y="260" width="2" height="15" fill="rgb(210,162,41)"/><text x="304.00" y="270.50"></text></g><g><title>0x7f911ef6b13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="303" y="244" width="3" height="15" fill="rgb(207,76,8)"/><text x="306.00" y="254.50"></text></g><g><title>0x7f911ef6b14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="306" y="244" width="2" height="15" fill="rgb(212,110,41)"/><text x="309.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="306" y="260" width="2" height="15" fill="rgb(220,100,50)"/><text x="309.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="306" y="276" width="2" height="15" fill="rgb(234,151,46)"/><text x="309.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.20%)</title><rect x="306" y="292" width="2" height="15" fill="rgb(246,108,18)"/><text x="309.00" y="302.50"></text></g><g><title>0x7f911ef6b2b5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="308" y="244" width="3" height="15" fill="rgb(226,41,41)"/><text x="311.00" y="254.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.20%)</title><rect x="311" y="260" width="2" height="15" fill="rgb(206,136,39)"/><text x="314.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.20%)</title><rect x="311" y="276" width="2" height="15" fill="rgb(221,32,46)"/><text x="314.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.20%)</title><rect x="311" y="292" width="2" height="15" fill="rgb(240,40,46)"/><text x="314.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.20%)</title><rect x="311" y="308" width="2" height="15" fill="rgb(245,101,29)"/><text x="314.00" y="318.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.20%)</title><rect x="311" y="324" width="2" height="15" fill="rgb(221,17,19)"/><text x="314.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (17 samples, 3.47%)</title><rect x="274" y="212" width="41" height="15" fill="rgb(241,147,50)"/><text x="277.00" y="222.50">pre..</text></g><g><title>0x7f911ef6bd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 3.47%)</title><rect x="274" y="228" width="41" height="15" fill="rgb(222,139,3)"/><text x="277.00" y="238.50">0x7..</text></g><g><title>0x7f911ef6b328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.41%)</title><rect x="311" y="244" width="4" height="15" fill="rgb(224,161,30)"/><text x="314.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.20%)</title><rect x="313" y="260" width="2" height="15" fill="rgb(225,3,24)"/><text x="316.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.20%)</title><rect x="313" y="276" width="2" height="15" fill="rgb(241,27,1)"/><text x="316.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.20%)</title><rect x="313" y="292" width="2" height="15" fill="rgb(252,37,5)"/><text x="316.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.20%)</title><rect x="313" y="308" width="2" height="15" fill="rgb(221,36,47)"/><text x="316.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:191) (1 samples, 0.20%)</title><rect x="313" y="324" width="2" height="15" fill="rgb(225,147,54)"/><text x="316.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.20%)</title><rect x="315" y="212" width="3" height="15" fill="rgb(254,93,47)"/><text x="318.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.20%)</title><rect x="315" y="228" width="3" height="15" fill="rgb(219,152,3)"/><text x="318.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.20%)</title><rect x="315" y="244" width="3" height="15" fill="rgb(222,8,37)"/><text x="318.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.20%)</title><rect x="332" y="292" width="3" height="15" fill="rgb(215,64,23)"/><text x="335.00" y="302.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.20%)</title><rect x="332" y="308" width="3" height="15" fill="rgb(240,15,29)"/><text x="335.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.20%)</title><rect x="335" y="324" width="2" height="15" fill="rgb(239,73,35)"/><text x="338.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.20%)</title><rect x="335" y="340" width="2" height="15" fill="rgb(246,190,39)"/><text x="338.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.20%)</title><rect x="335" y="356" width="2" height="15" fill="rgb(236,185,43)"/><text x="338.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:51) (1 samples, 0.20%)</title><rect x="335" y="372" width="2" height="15" fill="rgb(252,36,34)"/><text x="338.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (9 samples, 1.84%)</title><rect x="318" y="212" width="21" height="15" fill="rgb(230,45,50)"/><text x="321.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (5 samples, 1.02%)</title><rect x="327" y="228" width="12" height="15" fill="rgb(220,87,14)"/><text x="330.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (5 samples, 1.02%)</title><rect x="327" y="244" width="12" height="15" fill="rgb(216,186,26)"/><text x="330.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (3 samples, 0.61%)</title><rect x="332" y="260" width="7" height="15" fill="rgb(239,21,21)"/><text x="335.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.61%)</title><rect x="332" y="276" width="7" height="15" fill="rgb(224,147,10)"/><text x="335.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.41%)</title><rect x="335" y="292" width="4" height="15" fill="rgb(231,43,48)"/><text x="338.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.41%)</title><rect x="335" y="308" width="4" height="15" fill="rgb(247,93,37)"/><text x="338.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.20%)</title><rect x="337" y="324" width="2" height="15" fill="rgb(243,219,30)"/><text x="340.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.20%)</title><rect x="337" y="340" width="2" height="15" fill="rgb(207,2,13)"/><text x="340.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.20%)</title><rect x="337" y="356" width="2" height="15" fill="rgb(224,204,4)"/><text x="340.00" y="366.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1837) (1 samples, 0.20%)</title><rect x="337" y="372" width="2" height="15" fill="rgb(216,185,14)"/><text x="340.00" y="382.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.20%)</title><rect x="342" y="228" width="2" height="15" fill="rgb(214,220,48)"/><text x="345.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:476) (1 samples, 0.20%)</title><rect x="342" y="244" width="2" height="15" fill="rgb(247,38,51)"/><text x="345.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="344" y="260" width="3" height="15" fill="rgb(218,9,7)"/><text x="347.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.20%)</title><rect x="344" y="276" width="3" height="15" fill="rgb(234,193,30)"/><text x="347.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.20%)</title><rect x="344" y="292" width="3" height="15" fill="rgb(222,87,26)"/><text x="347.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (4 samples, 0.82%)</title><rect x="339" y="212" width="10" height="15" fill="rgb(251,138,13)"/><text x="342.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.41%)</title><rect x="344" y="228" width="5" height="15" fill="rgb(254,190,41)"/><text x="347.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.41%)</title><rect x="344" y="244" width="5" height="15" fill="rgb(239,29,23)"/><text x="347.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="347" y="260" width="2" height="15" fill="rgb(237,8,10)"/><text x="350.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.20%)</title><rect x="349" y="292" width="2" height="15" fill="rgb(253,27,43)"/><text x="352.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1176) (1 samples, 0.20%)</title><rect x="349" y="308" width="2" height="15" fill="rgb(225,129,21)"/><text x="352.00" y="318.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (80 samples, 16.33%)</title><rect x="161" y="196" width="193" height="15" fill="rgb(220,49,11)"/><text x="164.00" y="206.50">_samme_proba (sklearn/ens..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (2 samples, 0.41%)</title><rect x="349" y="212" width="5" height="15" fill="rgb(221,34,32)"/><text x="352.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.41%)</title><rect x="349" y="228" width="5" height="15" fill="rgb(248,43,22)"/><text x="352.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.41%)</title><rect x="349" y="244" width="5" height="15" fill="rgb(212,189,18)"/><text x="352.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.41%)</title><rect x="349" y="260" width="5" height="15" fill="rgb(208,167,45)"/><text x="352.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.41%)</title><rect x="349" y="276" width="5" height="15" fill="rgb(243,176,18)"/><text x="352.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:301) (1 samples, 0.20%)</title><rect x="351" y="292" width="3" height="15" fill="rgb(205,98,35)"/><text x="354.00" y="302.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (2 samples, 0.41%)</title><rect x="359" y="212" width="5" height="15" fill="rgb(233,209,11)"/><text x="362.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2261) (1 samples, 0.20%)</title><rect x="361" y="228" width="3" height="15" fill="rgb(254,35,27)"/><text x="364.00" y="238.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (2 samples, 0.41%)</title><rect x="364" y="212" width="4" height="15" fill="rgb(229,59,17)"/><text x="367.00" y="222.50"></text></g><g><title>get_array_function (arrayfunction_override.c:36) (1 samples, 0.20%)</title><rect x="368" y="260" width="3" height="15" fill="rgb(248,166,36)"/><text x="371.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (3 samples, 0.61%)</title><rect x="368" y="228" width="8" height="15" fill="rgb(225,138,28)"/><text x="371.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (3 samples, 0.61%)</title><rect x="368" y="244" width="8" height="15" fill="rgb(212,205,20)"/><text x="371.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.41%)</title><rect x="371" y="260" width="5" height="15" fill="rgb(244,127,31)"/><text x="374.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.41%)</title><rect x="371" y="276" width="5" height="15" fill="rgb(210,191,47)"/><text x="374.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.41%)</title><rect x="371" y="292" width="5" height="15" fill="rgb(235,145,54)"/><text x="374.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.20%)</title><rect x="385" y="260" width="3" height="15" fill="rgb(251,42,3)"/><text x="388.00" y="270.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:73) (1 samples, 0.20%)</title><rect x="392" y="324" width="3" height="15" fill="rgb(249,184,6)"/><text x="395.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (3 samples, 0.61%)</title><rect x="390" y="308" width="7" height="15" fill="rgb(237,178,18)"/><text x="393.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.20%)</title><rect x="395" y="324" width="2" height="15" fill="rgb(234,160,43)"/><text x="398.00" y="334.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c:2061) (1 samples, 0.20%)</title><rect x="395" y="340" width="2" height="15" fill="rgb(214,188,27)"/><text x="398.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.20%)</title><rect x="397" y="324" width="3" height="15" fill="rgb(253,139,8)"/><text x="400.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.61%)</title><rect x="400" y="324" width="7" height="15" fill="rgb(209,203,16)"/><text x="403.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.41%)</title><rect x="402" y="340" width="5" height="15" fill="rgb(247,166,5)"/><text x="405.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (1 samples, 0.20%)</title><rect x="404" y="356" width="3" height="15" fill="rgb(219,50,12)"/><text x="407.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.20%)</title><rect x="407" y="372" width="2" height="15" fill="rgb(245,73,49)"/><text x="410.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.41%)</title><rect x="407" y="356" width="5" height="15" fill="rgb(221,101,11)"/><text x="410.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.20%)</title><rect x="409" y="372" width="3" height="15" fill="rgb(237,224,50)"/><text x="412.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.20%)</title><rect x="409" y="388" width="3" height="15" fill="rgb(234,165,39)"/><text x="412.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.61%)</title><rect x="407" y="340" width="7" height="15" fill="rgb(229,103,50)"/><text x="410.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="412" y="356" width="2" height="15" fill="rgb(231,136,36)"/><text x="415.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.20%)</title><rect x="412" y="372" width="2" height="15" fill="rgb(245,79,41)"/><text x="415.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (8 samples, 1.63%)</title><rect x="397" y="308" width="19" height="15" fill="rgb(225,183,29)"/><text x="400.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.82%)</title><rect x="407" y="324" width="9" height="15" fill="rgb(215,184,47)"/><text x="410.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.20%)</title><rect x="414" y="340" width="2" height="15" fill="rgb(211,51,32)"/><text x="417.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="414" y="356" width="2" height="15" fill="rgb(218,110,47)"/><text x="417.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="414" y="372" width="2" height="15" fill="rgb(218,57,27)"/><text x="417.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.20%)</title><rect x="414" y="388" width="2" height="15" fill="rgb(206,96,31)"/><text x="417.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.41%)</title><rect x="416" y="324" width="5" height="15" fill="rgb(222,161,15)"/><text x="419.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.41%)</title><rect x="416" y="340" width="5" height="15" fill="rgb(246,79,7)"/><text x="419.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (3 samples, 0.61%)</title><rect x="424" y="372" width="7" height="15" fill="rgb(207,137,5)"/><text x="427.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="431" y="388" width="2" height="15" fill="rgb(227,9,38)"/><text x="434.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="431" y="404" width="2" height="15" fill="rgb(214,192,51)"/><text x="434.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.20%)</title><rect x="431" y="420" width="2" height="15" fill="rgb(241,33,36)"/><text x="434.00" y="430.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.41%)</title><rect x="433" y="404" width="5" height="15" fill="rgb(253,36,46)"/><text x="436.00" y="414.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.20%)</title><rect x="436" y="420" width="2" height="15" fill="rgb(253,95,27)"/><text x="439.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (8 samples, 1.63%)</title><rect x="421" y="324" width="20" height="15" fill="rgb(222,108,24)"/><text x="424.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (7 samples, 1.43%)</title><rect x="424" y="340" width="17" height="15" fill="rgb(232,131,48)"/><text x="427.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.43%)</title><rect x="424" y="356" width="17" height="15" fill="rgb(238,38,27)"/><text x="427.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (4 samples, 0.82%)</title><rect x="431" y="372" width="10" height="15" fill="rgb(244,200,33)"/><text x="434.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.61%)</title><rect x="433" y="388" width="8" height="15" fill="rgb(209,211,27)"/><text x="436.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.20%)</title><rect x="438" y="404" width="3" height="15" fill="rgb(228,175,45)"/><text x="441.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.20%)</title><rect x="438" y="420" width="3" height="15" fill="rgb(208,98,45)"/><text x="441.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.20%)</title><rect x="438" y="436" width="3" height="15" fill="rgb(216,2,4)"/><text x="441.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1823) (1 samples, 0.20%)</title><rect x="438" y="452" width="3" height="15" fill="rgb(231,129,20)"/><text x="441.00" y="462.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.20%)</title><rect x="441" y="372" width="2" height="15" fill="rgb(242,182,2)"/><text x="444.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.41%)</title><rect x="441" y="356" width="4" height="15" fill="rgb(247,227,47)"/><text x="444.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.20%)</title><rect x="443" y="372" width="2" height="15" fill="rgb(249,91,46)"/><text x="446.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.20%)</title><rect x="443" y="388" width="2" height="15" fill="rgb(210,83,23)"/><text x="446.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (14 samples, 2.86%)</title><rect x="416" y="308" width="34" height="15" fill="rgb(220,176,32)"/><text x="419.00" y="318.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.82%)</title><rect x="441" y="324" width="9" height="15" fill="rgb(226,86,13)"/><text x="444.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.82%)</title><rect x="441" y="340" width="9" height="15" fill="rgb(250,106,43)"/><text x="444.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.41%)</title><rect x="445" y="356" width="5" height="15" fill="rgb(254,217,48)"/><text x="448.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (2 samples, 0.41%)</title><rect x="445" y="372" width="5" height="15" fill="rgb(212,100,0)"/><text x="448.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:112) (1 samples, 0.20%)</title><rect x="450" y="308" width="3" height="15" fill="rgb(219,121,0)"/><text x="453.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="462" y="340" width="3" height="15" fill="rgb(211,226,1)"/><text x="465.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="462" y="356" width="3" height="15" fill="rgb(239,186,9)"/><text x="465.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.20%)</title><rect x="462" y="372" width="3" height="15" fill="rgb(205,116,49)"/><text x="465.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.20%)</title><rect x="462" y="388" width="3" height="15" fill="rgb(247,176,49)"/><text x="465.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.20%)</title><rect x="462" y="404" width="3" height="15" fill="rgb(243,161,28)"/><text x="465.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.20%)</title><rect x="462" y="420" width="3" height="15" fill="rgb(206,63,37)"/><text x="465.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.20%)</title><rect x="465" y="372" width="2" height="15" fill="rgb(207,94,53)"/><text x="468.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.20%)</title><rect x="465" y="388" width="2" height="15" fill="rgb(210,69,16)"/><text x="468.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.20%)</title><rect x="465" y="404" width="2" height="15" fill="rgb(237,82,50)"/><text x="468.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="465" y="420" width="2" height="15" fill="rgb(244,88,16)"/><text x="468.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.20%)</title><rect x="465" y="436" width="2" height="15" fill="rgb(218,158,5)"/><text x="468.00" y="446.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.20%)</title><rect x="465" y="452" width="2" height="15" fill="rgb(224,127,9)"/><text x="468.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.41%)</title><rect x="465" y="356" width="4" height="15" fill="rgb(230,219,9)"/><text x="468.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.20%)</title><rect x="467" y="372" width="2" height="15" fill="rgb(247,154,34)"/><text x="470.00" y="382.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.20%)</title><rect x="467" y="388" width="2" height="15" fill="rgb(220,64,52)"/><text x="470.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.20%)</title><rect x="469" y="356" width="3" height="15" fill="rgb(245,91,35)"/><text x="472.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.20%)</title><rect x="469" y="372" width="3" height="15" fill="rgb(205,22,27)"/><text x="472.00" y="382.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (50 samples, 10.20%)</title><rect x="354" y="196" width="120" height="15" fill="rgb(237,105,12)"/><text x="357.00" y="206.50">_samme_proba (..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (44 samples, 8.98%)</title><rect x="368" y="212" width="106" height="15" fill="rgb(228,45,18)"/><text x="371.00" y="222.50">clip (&lt;__arr..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (41 samples, 8.37%)</title><rect x="376" y="228" width="98" height="15" fill="rgb(249,180,17)"/><text x="379.00" y="238.50">array_imple..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (40 samples, 8.16%)</title><rect x="378" y="244" width="96" height="15" fill="rgb(231,102,0)"/><text x="381.00" y="254.50">clip (numpy..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (36 samples, 7.35%)</title><rect x="388" y="260" width="86" height="15" fill="rgb(236,112,48)"/><text x="391.00" y="270.50">_wrapfunc ..</text></g><g><title>array_clip (methods.c:2381) (35 samples, 7.14%)</title><rect x="390" y="276" width="84" height="15" fill="rgb(238,130,42)"/><text x="393.00" y="286.50">array_cli..</text></g><g><title>forward_ndarray_method (methods.c:108) (35 samples, 7.14%)</title><rect x="390" y="292" width="84" height="15" fill="rgb(217,106,16)"/><text x="393.00" y="302.50">forward_n..</text></g><g><title>_clip (numpy/core/_methods.py:129) (9 samples, 1.84%)</title><rect x="453" y="308" width="21" height="15" fill="rgb(229,79,34)"/><text x="456.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (5 samples, 1.02%)</title><rect x="462" y="324" width="12" height="15" fill="rgb(244,1,21)"/><text x="465.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.82%)</title><rect x="465" y="340" width="9" height="15" fill="rgb(214,94,0)"/><text x="468.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="472" y="356" width="2" height="15" fill="rgb(233,74,9)"/><text x="475.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.20%)</title><rect x="472" y="372" width="2" height="15" fill="rgb(253,208,39)"/><text x="475.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.20%)</title><rect x="472" y="388" width="2" height="15" fill="rgb(217,45,13)"/><text x="475.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.20%)</title><rect x="472" y="404" width="2" height="15" fill="rgb(252,93,22)"/><text x="475.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.20%)</title><rect x="472" y="420" width="2" height="15" fill="rgb(246,101,49)"/><text x="475.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="472" y="436" width="2" height="15" fill="rgb(251,85,4)"/><text x="475.00" y="446.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (1 samples, 0.20%)</title><rect x="474" y="196" width="3" height="15" fill="rgb(220,215,3)"/><text x="477.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="474" y="212" width="3" height="15" fill="rgb(238,134,43)"/><text x="477.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="474" y="228" width="3" height="15" fill="rgb(208,82,24)"/><text x="477.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.20%)</title><rect x="474" y="244" width="3" height="15" fill="rgb(247,88,37)"/><text x="477.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.20%)</title><rect x="474" y="260" width="3" height="15" fill="rgb(236,15,33)"/><text x="477.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (1 samples, 0.20%)</title><rect x="474" y="276" width="3" height="15" fill="rgb(238,124,19)"/><text x="477.00" y="286.50"></text></g><g><title>0x7f91456f9dd5 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="474" y="292" width="3" height="15" fill="rgb(232,21,4)"/><text x="477.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="489" y="244" width="2" height="15" fill="rgb(225,83,23)"/><text x="492.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.20%)</title><rect x="489" y="260" width="2" height="15" fill="rgb(211,162,35)"/><text x="492.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.20%)</title><rect x="489" y="276" width="2" height="15" fill="rgb(211,12,38)"/><text x="492.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.20%)</title><rect x="489" y="292" width="2" height="15" fill="rgb(215,47,33)"/><text x="492.00" y="302.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.20%)</title><rect x="489" y="308" width="2" height="15" fill="rgb(214,111,4)"/><text x="492.00" y="318.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:67) (1 samples, 0.20%)</title><rect x="489" y="324" width="2" height="15" fill="rgb(208,40,51)"/><text x="492.00" y="334.50"></text></g><g><title>0x7f9144749c00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="489" y="340" width="2" height="15" fill="rgb(254,180,25)"/><text x="492.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="491" y="244" width="3" height="15" fill="rgb(236,98,25)"/><text x="494.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.20%)</title><rect x="491" y="260" width="3" height="15" fill="rgb(224,148,34)"/><text x="494.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.20%)</title><rect x="494" y="292" width="2" height="15" fill="rgb(208,193,53)"/><text x="497.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.20%)</title><rect x="494" y="308" width="2" height="15" fill="rgb(223,188,8)"/><text x="497.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (2 samples, 0.41%)</title><rect x="494" y="260" width="4" height="15" fill="rgb(229,212,13)"/><text x="497.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.41%)</title><rect x="494" y="276" width="4" height="15" fill="rgb(225,194,30)"/><text x="497.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.20%)</title><rect x="496" y="292" width="2" height="15" fill="rgb(225,114,19)"/><text x="499.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.20%)</title><rect x="496" y="308" width="2" height="15" fill="rgb(208,48,14)"/><text x="499.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.20%)</title><rect x="496" y="324" width="2" height="15" fill="rgb(241,39,35)"/><text x="499.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="496" y="340" width="2" height="15" fill="rgb(252,213,26)"/><text x="499.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.02%)</title><rect x="489" y="228" width="12" height="15" fill="rgb(229,32,42)"/><text x="492.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.61%)</title><rect x="494" y="244" width="7" height="15" fill="rgb(235,205,47)"/><text x="497.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1729) (1 samples, 0.20%)</title><rect x="498" y="260" width="3" height="15" fill="rgb(250,169,41)"/><text x="501.00" y="270.50"></text></g><g><title>array_multiply (number.c:354) (7 samples, 1.43%)</title><rect x="486" y="212" width="17" height="15" fill="rgb(210,88,16)"/><text x="489.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.20%)</title><rect x="501" y="228" width="2" height="15" fill="rgb(243,75,21)"/><text x="504.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.20%)</title><rect x="501" y="244" width="2" height="15" fill="rgb(205,52,35)"/><text x="504.00" y="254.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.20%)</title><rect x="503" y="228" width="3" height="15" fill="rgb(214,91,34)"/><text x="506.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.41%)</title><rect x="503" y="212" width="5" height="15" fill="rgb(231,163,47)"/><text x="506.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.20%)</title><rect x="506" y="228" width="2" height="15" fill="rgb(231,50,52)"/><text x="509.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.20%)</title><rect x="506" y="244" width="2" height="15" fill="rgb(229,122,42)"/><text x="509.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.20%)</title><rect x="506" y="260" width="2" height="15" fill="rgb(208,217,50)"/><text x="509.00" y="270.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:165) (1 samples, 0.20%)</title><rect x="506" y="276" width="2" height="15" fill="rgb(237,175,50)"/><text x="509.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="508" y="244" width="2" height="15" fill="rgb(214,132,27)"/><text x="511.00" y="254.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:871) (1 samples, 0.20%)</title><rect x="508" y="260" width="2" height="15" fill="rgb(223,190,27)"/><text x="511.00" y="270.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.20%)</title><rect x="508" y="276" width="2" height="15" fill="rgb(241,227,17)"/><text x="511.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.20%)</title><rect x="510" y="260" width="3" height="15" fill="rgb(239,203,33)"/><text x="513.00" y="270.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.20%)</title><rect x="510" y="276" width="3" height="15" fill="rgb(221,227,44)"/><text x="513.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.20%)</title><rect x="513" y="292" width="2" height="15" fill="rgb(237,10,1)"/><text x="516.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.20%)</title><rect x="513" y="308" width="2" height="15" fill="rgb(247,12,25)"/><text x="516.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1071) (1 samples, 0.20%)</title><rect x="513" y="324" width="2" height="15" fill="rgb(225,151,20)"/><text x="516.00" y="334.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.20%)</title><rect x="513" y="340" width="2" height="15" fill="rgb(209,86,27)"/><text x="516.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1443) (1 samples, 0.20%)</title><rect x="515" y="308" width="3" height="15" fill="rgb(248,19,19)"/><text x="518.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.41%)</title><rect x="515" y="292" width="5" height="15" fill="rgb(222,172,33)"/><text x="518.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1699) (1 samples, 0.20%)</title><rect x="518" y="308" width="2" height="15" fill="rgb(217,161,11)"/><text x="521.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:289) (1 samples, 0.20%)</title><rect x="520" y="292" width="2" height="15" fill="rgb(225,167,13)"/><text x="523.00" y="302.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c:2102) (1 samples, 0.20%)</title><rect x="520" y="308" width="2" height="15" fill="rgb(216,52,50)"/><text x="523.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.20%)</title><rect x="522" y="292" width="3" height="15" fill="rgb(243,112,34)"/><text x="525.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.20%)</title><rect x="522" y="308" width="3" height="15" fill="rgb(211,158,51)"/><text x="525.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.20%)</title><rect x="522" y="324" width="3" height="15" fill="rgb(226,41,28)"/><text x="525.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="522" y="340" width="3" height="15" fill="rgb(209,229,41)"/><text x="525.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.20%)</title><rect x="522" y="356" width="3" height="15" fill="rgb(215,14,53)"/><text x="525.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.20%)</title><rect x="522" y="372" width="3" height="15" fill="rgb(240,201,48)"/><text x="525.00" y="382.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:160) (1 samples, 0.20%)</title><rect x="522" y="388" width="3" height="15" fill="rgb(223,160,39)"/><text x="525.00" y="398.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.20%)</title><rect x="522" y="404" width="3" height="15" fill="rgb(220,216,35)"/><text x="525.00" y="414.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (6 samples, 1.22%)</title><rect x="513" y="276" width="14" height="15" fill="rgb(227,158,8)"/><text x="516.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.20%)</title><rect x="525" y="292" width="2" height="15" fill="rgb(222,106,2)"/><text x="528.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3152) (1 samples, 0.20%)</title><rect x="525" y="308" width="2" height="15" fill="rgb(223,120,14)"/><text x="528.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1556) (1 samples, 0.20%)</title><rect x="527" y="276" width="3" height="15" fill="rgb(223,137,12)"/><text x="530.00" y="286.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:855) (1 samples, 0.20%)</title><rect x="527" y="292" width="3" height="15" fill="rgb(213,46,5)"/><text x="530.00" y="302.50"></text></g><g><title>array_subtract (number.c:342) (10 samples, 2.04%)</title><rect x="508" y="212" width="24" height="15" fill="rgb(223,214,49)"/><text x="511.00" y="222.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 2.04%)</title><rect x="508" y="228" width="24" height="15" fill="rgb(254,32,28)"/><text x="511.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 1.84%)</title><rect x="510" y="244" width="22" height="15" fill="rgb(220,140,7)"/><text x="513.00" y="254.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 1.63%)</title><rect x="513" y="260" width="19" height="15" fill="rgb(229,3,25)"/><text x="516.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.20%)</title><rect x="530" y="276" width="2" height="15" fill="rgb(243,27,2)"/><text x="533.00" y="286.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:345) (1 samples, 0.20%)</title><rect x="530" y="292" width="2" height="15" fill="rgb(245,54,6)"/><text x="533.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.20%)</title><rect x="532" y="260" width="2" height="15" fill="rgb(207,125,38)"/><text x="535.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="532" y="276" width="2" height="15" fill="rgb(242,40,14)"/><text x="535.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.20%)</title><rect x="532" y="292" width="2" height="15" fill="rgb(238,219,38)"/><text x="535.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.20%)</title><rect x="532" y="308" width="2" height="15" fill="rgb(245,104,32)"/><text x="535.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.20%)</title><rect x="532" y="324" width="2" height="15" fill="rgb(246,216,16)"/><text x="535.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.20%)</title><rect x="532" y="340" width="2" height="15" fill="rgb(234,134,46)"/><text x="535.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.20%)</title><rect x="537" y="276" width="2" height="15" fill="rgb(247,126,19)"/><text x="540.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (1 samples, 0.20%)</title><rect x="539" y="292" width="3" height="15" fill="rgb(217,42,3)"/><text x="542.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.20%)</title><rect x="539" y="308" width="3" height="15" fill="rgb(212,167,5)"/><text x="542.00" y="318.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.20%)</title><rect x="539" y="324" width="3" height="15" fill="rgb(210,18,6)"/><text x="542.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.20%)</title><rect x="542" y="356" width="2" height="15" fill="rgb(236,162,20)"/><text x="545.00" y="366.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.20%)</title><rect x="542" y="372" width="2" height="15" fill="rgb(231,150,45)"/><text x="545.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.41%)</title><rect x="542" y="308" width="5" height="15" fill="rgb(234,78,51)"/><text x="545.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.41%)</title><rect x="542" y="324" width="5" height="15" fill="rgb(206,160,33)"/><text x="545.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.41%)</title><rect x="542" y="340" width="5" height="15" fill="rgb(209,165,33)"/><text x="545.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.20%)</title><rect x="544" y="356" width="3" height="15" fill="rgb(208,104,40)"/><text x="547.00" y="366.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.20%)</title><rect x="544" y="372" width="3" height="15" fill="rgb(223,197,9)"/><text x="547.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.20%)</title><rect x="547" y="324" width="2" height="15" fill="rgb(240,52,34)"/><text x="550.00" y="334.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (165 samples, 33.67%)</title><rect x="156" y="180" width="398" height="15" fill="rgb(247,189,0)"/><text x="159.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (32 samples, 6.53%)</title><rect x="477" y="196" width="77" height="15" fill="rgb(237,150,26)"/><text x="480.00" y="206.50">_samme_p..</text></g><g><title>array_sum (methods.c:2215) (9 samples, 1.84%)</title><rect x="532" y="212" width="22" height="15" fill="rgb(234,157,6)"/><text x="535.00" y="222.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 1.84%)</title><rect x="532" y="228" width="22" height="15" fill="rgb(205,176,38)"/><text x="535.00" y="238.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (9 samples, 1.84%)</title><rect x="532" y="244" width="22" height="15" fill="rgb(228,172,24)"/><text x="535.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 1.63%)</title><rect x="534" y="260" width="20" height="15" fill="rgb(254,118,48)"/><text x="537.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 1.22%)</title><rect x="539" y="276" width="15" height="15" fill="rgb(214,220,24)"/><text x="542.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.02%)</title><rect x="542" y="292" width="12" height="15" fill="rgb(205,85,49)"/><text x="545.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.61%)</title><rect x="547" y="308" width="7" height="15" fill="rgb(227,43,16)"/><text x="550.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.41%)</title><rect x="549" y="324" width="5" height="15" fill="rgb(225,112,9)"/><text x="552.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1485) (2 samples, 0.41%)</title><rect x="549" y="340" width="5" height="15" fill="rgb(207,40,42)"/><text x="552.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="554" y="212" width="2" height="15" fill="rgb(235,148,26)"/><text x="557.00" y="222.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c:698) (1 samples, 0.20%)</title><rect x="554" y="228" width="2" height="15" fill="rgb(212,120,26)"/><text x="557.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:38) (225 samples, 45.92%)</title><rect x="17" y="52" width="542" height="15" fill="rgb(240,23,25)"/><text x="20.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:37) (225 samples, 45.92%)</title><rect x="17" y="68" width="542" height="15" fill="rgb(231,52,26)"/><text x="20.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:37)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:29) (223 samples, 45.51%)</title><rect x="22" y="84" width="537" height="15" fill="rgb(206,162,20)"/><text x="25.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:23) (168 samples, 34.29%)</title><rect x="154" y="100" width="405" height="15" fill="rgb(249,57,44)"/><text x="157.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (168 samples, 34.29%)</title><rect x="154" y="116" width="405" height="15" fill="rgb(249,20,23)"/><text x="157.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (168 samples, 34.29%)</title><rect x="154" y="132" width="405" height="15" fill="rgb(215,1,12)"/><text x="157.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (168 samples, 34.29%)</title><rect x="154" y="148" width="405" height="15" fill="rgb(221,27,18)"/><text x="157.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py:808)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (168 samples, 34.29%)</title><rect x="154" y="164" width="405" height="15" fill="rgb(237,98,3)"/><text x="157.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py..</text></g><g><title>array_add (number.c:330) (2 samples, 0.41%)</title><rect x="554" y="180" width="5" height="15" fill="rgb(249,128,44)"/><text x="557.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.41%)</title><rect x="554" y="196" width="5" height="15" fill="rgb(253,169,38)"/><text x="557.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.20%)</title><rect x="556" y="212" width="3" height="15" fill="rgb(216,33,33)"/><text x="559.00" y="222.50"></text></g><g><title>0x7f91447497c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="556" y="228" width="3" height="15" fill="rgb(248,10,54)"/><text x="559.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.20%)</title><rect x="559" y="244" width="2" height="15" fill="rgb(246,217,13)"/><text x="562.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="559" y="260" width="2" height="15" fill="rgb(214,16,29)"/><text x="562.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="559" y="276" width="2" height="15" fill="rgb(240,172,21)"/><text x="562.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="559" y="292" width="2" height="15" fill="rgb(228,48,51)"/><text x="562.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="559" y="308" width="2" height="15" fill="rgb(251,53,19)"/><text x="562.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="559" y="324" width="2" height="15" fill="rgb(251,147,8)"/><text x="562.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="559" y="340" width="2" height="15" fill="rgb(247,131,45)"/><text x="562.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="559" y="356" width="2" height="15" fill="rgb(242,141,42)"/><text x="562.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.20%)</title><rect x="559" y="372" width="2" height="15" fill="rgb(206,108,47)"/><text x="562.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="559" y="388" width="2" height="15" fill="rgb(205,211,41)"/><text x="562.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="559" y="404" width="2" height="15" fill="rgb(232,116,5)"/><text x="562.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="559" y="420" width="2" height="15" fill="rgb(220,225,2)"/><text x="562.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="559" y="436" width="2" height="15" fill="rgb(234,224,39)"/><text x="562.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="559" y="452" width="2" height="15" fill="rgb(244,8,52)"/><text x="562.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="559" y="468" width="2" height="15" fill="rgb(254,129,1)"/><text x="562.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="559" y="484" width="2" height="15" fill="rgb(206,82,50)"/><text x="562.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py:11) (1 samples, 0.20%)</title><rect x="559" y="500" width="2" height="15" fill="rgb(250,214,12)"/><text x="562.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="559" y="516" width="2" height="15" fill="rgb(247,199,26)"/><text x="562.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="559" y="532" width="2" height="15" fill="rgb(205,83,27)"/><text x="562.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="559" y="548" width="2" height="15" fill="rgb(221,78,4)"/><text x="562.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="559" y="564" width="2" height="15" fill="rgb(247,102,20)"/><text x="562.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="559" y="580" width="2" height="15" fill="rgb(238,121,11)"/><text x="562.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py:919) (1 samples, 0.20%)</title><rect x="559" y="596" width="2" height="15" fill="rgb(240,43,14)"/><text x="562.00" y="606.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.20%)</title><rect x="559" y="612" width="2" height="15" fill="rgb(242,50,41)"/><text x="562.00" y="622.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:1) (2 samples, 0.41%)</title><rect x="559" y="148" width="4" height="15" fill="rgb(213,208,23)"/><text x="562.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="559" y="164" width="4" height="15" fill="rgb(234,129,39)"/><text x="562.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="559" y="180" width="4" height="15" fill="rgb(222,163,20)"/><text x="562.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="559" y="196" width="4" height="15" fill="rgb(233,178,0)"/><text x="562.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="559" y="212" width="4" height="15" fill="rgb(216,218,43)"/><text x="562.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="559" y="228" width="4" height="15" fill="rgb(205,69,2)"/><text x="562.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:149) (1 samples, 0.20%)</title><rect x="561" y="244" width="2" height="15" fill="rgb(241,139,19)"/><text x="564.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="561" y="260" width="2" height="15" fill="rgb(211,130,10)"/><text x="564.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="561" y="276" width="2" height="15" fill="rgb(222,222,14)"/><text x="564.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="561" y="292" width="2" height="15" fill="rgb(249,164,6)"/><text x="564.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="561" y="308" width="2" height="15" fill="rgb(249,183,51)"/><text x="564.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="561" y="324" width="2" height="15" fill="rgb(249,82,0)"/><text x="564.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="561" y="340" width="2" height="15" fill="rgb(225,163,36)"/><text x="564.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="561" y="356" width="2" height="15" fill="rgb(243,71,29)"/><text x="564.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py:21) (1 samples, 0.20%)</title><rect x="561" y="372" width="2" height="15" fill="rgb(219,187,34)"/><text x="564.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="561" y="388" width="2" height="15" fill="rgb(233,98,15)"/><text x="564.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="561" y="404" width="2" height="15" fill="rgb(213,201,12)"/><text x="564.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="561" y="420" width="2" height="15" fill="rgb(205,224,12)"/><text x="564.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="561" y="436" width="2" height="15" fill="rgb(216,213,12)"/><text x="564.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="561" y="452" width="2" height="15" fill="rgb(228,94,24)"/><text x="564.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/hermite.py:658) (1 samples, 0.20%)</title><rect x="561" y="468" width="2" height="15" fill="rgb(225,169,32)"/><text x="564.00" y="478.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.20%)</title><rect x="563" y="1044" width="3" height="15" fill="rgb(210,68,38)"/><text x="566.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.41%)</title><rect x="563" y="852" width="5" height="15" fill="rgb(215,137,24)"/><text x="566.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.41%)</title><rect x="563" y="868" width="5" height="15" fill="rgb(231,107,25)"/><text x="566.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.41%)</title><rect x="563" y="884" width="5" height="15" fill="rgb(215,181,34)"/><text x="566.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.41%)</title><rect x="563" y="900" width="5" height="15" fill="rgb(240,32,12)"/><text x="566.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.41%)</title><rect x="563" y="916" width="5" height="15" fill="rgb(225,145,53)"/><text x="566.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.41%)</title><rect x="563" y="932" width="5" height="15" fill="rgb(245,5,49)"/><text x="566.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.41%)</title><rect x="563" y="948" width="5" height="15" fill="rgb(217,116,37)"/><text x="566.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (2 samples, 0.41%)</title><rect x="563" y="964" width="5" height="15" fill="rgb(218,171,27)"/><text x="566.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (2 samples, 0.41%)</title><rect x="563" y="980" width="5" height="15" fill="rgb(231,89,5)"/><text x="566.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (2 samples, 0.41%)</title><rect x="563" y="996" width="5" height="15" fill="rgb(244,110,16)"/><text x="566.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (2 samples, 0.41%)</title><rect x="563" y="1012" width="5" height="15" fill="rgb(218,119,5)"/><text x="566.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.41%)</title><rect x="563" y="1028" width="5" height="15" fill="rgb(236,131,25)"/><text x="566.00" y="1038.50"></text></g><g><title>strerror (libc-2.29.so) (1 samples, 0.20%)</title><rect x="566" y="1044" width="2" height="15" fill="rgb(229,28,9)"/><text x="569.00" y="1054.50"></text></g><g><title>__strerror_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="566" y="1060" width="2" height="15" fill="rgb(206,36,15)"/><text x="569.00" y="1070.50"></text></g><g><title>0x7f91454d86c2 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="566" y="1076" width="2" height="15" fill="rgb(235,72,13)"/><text x="569.00" y="1086.50"></text></g><g><title>0x7f9145544627 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="566" y="1092" width="2" height="15" fill="rgb(236,148,49)"/><text x="569.00" y="1102.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.20%)</title><rect x="571" y="980" width="2" height="15" fill="rgb(219,35,24)"/><text x="574.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.20%)</title><rect x="571" y="996" width="2" height="15" fill="rgb(208,89,36)"/><text x="574.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.20%)</title><rect x="571" y="1012" width="2" height="15" fill="rgb(230,7,21)"/><text x="574.00" y="1022.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.20%)</title><rect x="571" y="1028" width="2" height="15" fill="rgb(251,121,21)"/><text x="574.00" y="1038.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="571" y="1044" width="2" height="15" fill="rgb(232,0,0)"/><text x="574.00" y="1054.50"></text></g><g><title>0x7f914552921f (libc-2.29.so) (1 samples, 0.20%)</title><rect x="571" y="1060" width="2" height="15" fill="rgb(237,22,42)"/><text x="574.00" y="1070.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (3 samples, 0.61%)</title><rect x="568" y="884" width="7" height="15" fill="rgb(244,86,42)"/><text x="571.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (3 samples, 0.61%)</title><rect x="568" y="900" width="7" height="15" fill="rgb(236,8,45)"/><text x="571.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (3 samples, 0.61%)</title><rect x="568" y="916" width="7" height="15" fill="rgb(252,199,38)"/><text x="571.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (3 samples, 0.61%)</title><rect x="568" y="932" width="7" height="15" fill="rgb(234,46,27)"/><text x="571.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (2 samples, 0.41%)</title><rect x="571" y="948" width="4" height="15" fill="rgb(205,41,12)"/><text x="574.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (2 samples, 0.41%)</title><rect x="571" y="964" width="4" height="15" fill="rgb(250,100,50)"/><text x="574.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:142) (1 samples, 0.20%)</title><rect x="573" y="980" width="2" height="15" fill="rgb(216,38,10)"/><text x="576.00" y="990.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.20%)</title><rect x="573" y="996" width="2" height="15" fill="rgb(250,40,15)"/><text x="576.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:2) (6 samples, 1.22%)</title><rect x="563" y="148" width="15" height="15" fill="rgb(219,35,3)"/><text x="566.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.22%)</title><rect x="563" y="164" width="15" height="15" fill="rgb(244,168,22)"/><text x="566.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.22%)</title><rect x="563" y="180" width="15" height="15" fill="rgb(224,222,19)"/><text x="566.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.22%)</title><rect x="563" y="196" width="15" height="15" fill="rgb(240,64,21)"/><text x="566.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.22%)</title><rect x="563" y="212" width="15" height="15" fill="rgb(210,221,33)"/><text x="566.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.22%)</title><rect x="563" y="228" width="15" height="15" fill="rgb(232,195,36)"/><text x="566.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.22%)</title><rect x="563" y="244" width="15" height="15" fill="rgb(252,29,0)"/><text x="566.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.22%)</title><rect x="563" y="260" width="15" height="15" fill="rgb(238,68,2)"/><text x="566.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.22%)</title><rect x="563" y="276" width="15" height="15" fill="rgb(248,170,19)"/><text x="566.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 1.22%)</title><rect x="563" y="292" width="15" height="15" fill="rgb(225,28,6)"/><text x="566.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.22%)</title><rect x="563" y="308" width="15" height="15" fill="rgb(235,214,32)"/><text x="566.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.22%)</title><rect x="563" y="324" width="15" height="15" fill="rgb(220,80,18)"/><text x="566.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.22%)</title><rect x="563" y="340" width="15" height="15" fill="rgb(214,197,27)"/><text x="566.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.22%)</title><rect x="563" y="356" width="15" height="15" fill="rgb(236,88,21)"/><text x="566.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.22%)</title><rect x="563" y="372" width="15" height="15" fill="rgb(211,143,8)"/><text x="566.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 1.22%)</title><rect x="563" y="388" width="15" height="15" fill="rgb(217,139,47)"/><text x="566.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.22%)</title><rect x="563" y="404" width="15" height="15" fill="rgb(228,83,8)"/><text x="566.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.22%)</title><rect x="563" y="420" width="15" height="15" fill="rgb(225,40,35)"/><text x="566.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.22%)</title><rect x="563" y="436" width="15" height="15" fill="rgb(240,73,22)"/><text x="566.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.22%)</title><rect x="563" y="452" width="15" height="15" fill="rgb(237,7,28)"/><text x="566.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.22%)</title><rect x="563" y="468" width="15" height="15" fill="rgb(234,134,17)"/><text x="566.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 1.22%)</title><rect x="563" y="484" width="15" height="15" fill="rgb(250,220,42)"/><text x="566.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.22%)</title><rect x="563" y="500" width="15" height="15" fill="rgb(219,7,42)"/><text x="566.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.22%)</title><rect x="563" y="516" width="15" height="15" fill="rgb(254,122,29)"/><text x="566.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.22%)</title><rect x="563" y="532" width="15" height="15" fill="rgb(207,90,0)"/><text x="566.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.22%)</title><rect x="563" y="548" width="15" height="15" fill="rgb(254,130,14)"/><text x="566.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.22%)</title><rect x="563" y="564" width="15" height="15" fill="rgb(248,164,46)"/><text x="566.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 1.22%)</title><rect x="563" y="580" width="15" height="15" fill="rgb(222,83,23)"/><text x="566.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.22%)</title><rect x="563" y="596" width="15" height="15" fill="rgb(240,176,38)"/><text x="566.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.22%)</title><rect x="563" y="612" width="15" height="15" fill="rgb(212,48,0)"/><text x="566.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.22%)</title><rect x="563" y="628" width="15" height="15" fill="rgb(207,88,29)"/><text x="566.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.22%)</title><rect x="563" y="644" width="15" height="15" fill="rgb(236,82,39)"/><text x="566.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.22%)</title><rect x="563" y="660" width="15" height="15" fill="rgb(249,199,2)"/><text x="566.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.22%)</title><rect x="563" y="676" width="15" height="15" fill="rgb(246,208,28)"/><text x="566.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.22%)</title><rect x="563" y="692" width="15" height="15" fill="rgb(252,93,45)"/><text x="566.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.22%)</title><rect x="563" y="708" width="15" height="15" fill="rgb(219,180,48)"/><text x="566.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 1.22%)</title><rect x="563" y="724" width="15" height="15" fill="rgb(238,179,15)"/><text x="566.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.22%)</title><rect x="563" y="740" width="15" height="15" fill="rgb(253,156,25)"/><text x="566.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.22%)</title><rect x="563" y="756" width="15" height="15" fill="rgb(246,226,12)"/><text x="566.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.22%)</title><rect x="563" y="772" width="15" height="15" fill="rgb(233,119,6)"/><text x="566.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.22%)</title><rect x="563" y="788" width="15" height="15" fill="rgb(209,160,28)"/><text x="566.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.22%)</title><rect x="563" y="804" width="15" height="15" fill="rgb(226,39,2)"/><text x="566.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 1.22%)</title><rect x="563" y="820" width="15" height="15" fill="rgb(240,152,39)"/><text x="566.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 1.22%)</title><rect x="563" y="836" width="15" height="15" fill="rgb(254,179,48)"/><text x="566.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (4 samples, 0.82%)</title><rect x="568" y="852" width="10" height="15" fill="rgb(233,117,52)"/><text x="571.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (4 samples, 0.82%)</title><rect x="568" y="868" width="10" height="15" fill="rgb(238,6,22)"/><text x="571.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.20%)</title><rect x="575" y="884" width="3" height="15" fill="rgb(227,219,10)"/><text x="578.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.20%)</title><rect x="575" y="900" width="3" height="15" fill="rgb(253,209,50)"/><text x="578.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.20%)</title><rect x="575" y="916" width="3" height="15" fill="rgb(231,208,38)"/><text x="578.00" y="926.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="575" y="932" width="3" height="15" fill="rgb(223,161,46)"/><text x="578.00" y="942.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py:114) (1 samples, 0.20%)</title><rect x="578" y="1508" width="2" height="15" fill="rgb(216,201,16)"/><text x="581.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="578" y="1524" width="2" height="15" fill="rgb(242,194,9)"/><text x="581.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.20%)</title><rect x="578" y="1540" width="2" height="15" fill="rgb(242,193,37)"/><text x="581.00" y="1550.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.20%)</title><rect x="578" y="1556" width="2" height="15" fill="rgb(217,124,46)"/><text x="581.00" y="1566.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.20%)</title><rect x="578" y="1572" width="2" height="15" fill="rgb(247,101,36)"/><text x="581.00" y="1582.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.20%)</title><rect x="578" y="1588" width="2" height="15" fill="rgb(244,136,16)"/><text x="581.00" y="1598.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1378) (1 samples, 0.20%)</title><rect x="578" y="1604" width="2" height="15" fill="rgb(226,43,42)"/><text x="581.00" y="1614.50"></text></g><g><title>0x7f9145605ee0 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="578" y="1620" width="2" height="15" fill="rgb(210,191,3)"/><text x="581.00" y="1630.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (2 samples, 0.41%)</title><rect x="578" y="900" width="5" height="15" fill="rgb(223,207,18)"/><text x="581.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="578" y="916" width="5" height="15" fill="rgb(249,35,5)"/><text x="581.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="578" y="932" width="5" height="15" fill="rgb(223,130,36)"/><text x="581.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="578" y="948" width="5" height="15" fill="rgb(218,91,14)"/><text x="581.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="578" y="964" width="5" height="15" fill="rgb(218,130,37)"/><text x="581.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="578" y="980" width="5" height="15" fill="rgb(245,182,4)"/><text x="581.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (2 samples, 0.41%)</title><rect x="578" y="996" width="5" height="15" fill="rgb(209,181,23)"/><text x="581.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.41%)</title><rect x="578" y="1012" width="5" height="15" fill="rgb(236,63,40)"/><text x="581.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="578" y="1028" width="5" height="15" fill="rgb(242,97,6)"/><text x="581.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="578" y="1044" width="5" height="15" fill="rgb(215,203,44)"/><text x="581.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="578" y="1060" width="5" height="15" fill="rgb(226,73,32)"/><text x="581.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="578" y="1076" width="5" height="15" fill="rgb(229,103,5)"/><text x="581.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="578" y="1092" width="5" height="15" fill="rgb(223,162,2)"/><text x="581.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="578" y="1108" width="5" height="15" fill="rgb(254,121,31)"/><text x="581.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (2 samples, 0.41%)</title><rect x="578" y="1124" width="5" height="15" fill="rgb(248,187,34)"/><text x="581.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="578" y="1140" width="5" height="15" fill="rgb(209,129,42)"/><text x="581.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="578" y="1156" width="5" height="15" fill="rgb(217,205,54)"/><text x="581.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="578" y="1172" width="5" height="15" fill="rgb(226,67,18)"/><text x="581.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="578" y="1188" width="5" height="15" fill="rgb(249,203,25)"/><text x="581.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="578" y="1204" width="5" height="15" fill="rgb(244,90,14)"/><text x="581.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:30) (2 samples, 0.41%)</title><rect x="578" y="1220" width="5" height="15" fill="rgb(247,53,14)"/><text x="581.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="578" y="1236" width="5" height="15" fill="rgb(207,200,5)"/><text x="581.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="578" y="1252" width="5" height="15" fill="rgb(248,123,32)"/><text x="581.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="578" y="1268" width="5" height="15" fill="rgb(213,106,1)"/><text x="581.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="578" y="1284" width="5" height="15" fill="rgb(214,98,49)"/><text x="581.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="578" y="1300" width="5" height="15" fill="rgb(219,226,15)"/><text x="581.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py:4) (2 samples, 0.41%)</title><rect x="578" y="1316" width="5" height="15" fill="rgb(212,206,44)"/><text x="581.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="578" y="1332" width="5" height="15" fill="rgb(208,10,20)"/><text x="581.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="578" y="1348" width="5" height="15" fill="rgb(212,150,19)"/><text x="581.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="578" y="1364" width="5" height="15" fill="rgb(241,28,13)"/><text x="581.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="578" y="1380" width="5" height="15" fill="rgb(214,67,40)"/><text x="581.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="578" y="1396" width="5" height="15" fill="rgb(240,25,4)"/><text x="581.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:4) (2 samples, 0.41%)</title><rect x="578" y="1412" width="5" height="15" fill="rgb(238,98,1)"/><text x="581.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="578" y="1428" width="5" height="15" fill="rgb(246,148,17)"/><text x="581.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="578" y="1444" width="5" height="15" fill="rgb(230,217,20)"/><text x="581.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="578" y="1460" width="5" height="15" fill="rgb(233,222,15)"/><text x="581.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="578" y="1476" width="5" height="15" fill="rgb(247,41,5)"/><text x="581.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="578" y="1492" width="5" height="15" fill="rgb(229,153,15)"/><text x="581.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py:120) (1 samples, 0.20%)</title><rect x="580" y="1508" width="3" height="15" fill="rgb(231,131,48)"/><text x="583.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="580" y="1524" width="3" height="15" fill="rgb(250,192,22)"/><text x="583.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.20%)</title><rect x="580" y="1540" width="3" height="15" fill="rgb(228,223,16)"/><text x="583.00" y="1550.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.20%)</title><rect x="580" y="1556" width="3" height="15" fill="rgb(244,94,11)"/><text x="583.00" y="1566.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.20%)</title><rect x="580" y="1572" width="3" height="15" fill="rgb(206,227,34)"/><text x="583.00" y="1582.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.20%)</title><rect x="580" y="1588" width="3" height="15" fill="rgb(239,172,54)"/><text x="583.00" y="1598.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.20%)</title><rect x="580" y="1604" width="3" height="15" fill="rgb(246,25,27)"/><text x="583.00" y="1614.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:4) (3 samples, 0.61%)</title><rect x="578" y="148" width="7" height="15" fill="rgb(205,153,21)"/><text x="581.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="578" y="164" width="7" height="15" fill="rgb(205,45,15)"/><text x="581.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.61%)</title><rect x="578" y="180" width="7" height="15" fill="rgb(213,192,32)"/><text x="581.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="578" y="196" width="7" height="15" fill="rgb(223,193,51)"/><text x="581.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="578" y="212" width="7" height="15" fill="rgb(214,50,26)"/><text x="581.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="578" y="228" width="7" height="15" fill="rgb(243,127,15)"/><text x="581.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="578" y="244" width="7" height="15" fill="rgb(209,27,30)"/><text x="581.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="578" y="260" width="7" height="15" fill="rgb(222,148,6)"/><text x="581.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="578" y="276" width="7" height="15" fill="rgb(241,8,53)"/><text x="581.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.61%)</title><rect x="578" y="292" width="7" height="15" fill="rgb(248,131,27)"/><text x="581.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="578" y="308" width="7" height="15" fill="rgb(235,89,5)"/><text x="581.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="578" y="324" width="7" height="15" fill="rgb(248,137,4)"/><text x="581.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="578" y="340" width="7" height="15" fill="rgb(244,33,4)"/><text x="581.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="578" y="356" width="7" height="15" fill="rgb(249,166,25)"/><text x="581.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="578" y="372" width="7" height="15" fill="rgb(249,142,25)"/><text x="581.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.61%)</title><rect x="578" y="388" width="7" height="15" fill="rgb(210,126,39)"/><text x="581.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="578" y="404" width="7" height="15" fill="rgb(252,26,51)"/><text x="581.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="578" y="420" width="7" height="15" fill="rgb(211,110,17)"/><text x="581.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="578" y="436" width="7" height="15" fill="rgb(239,42,36)"/><text x="581.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="578" y="452" width="7" height="15" fill="rgb(253,185,42)"/><text x="581.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="578" y="468" width="7" height="15" fill="rgb(229,102,27)"/><text x="581.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 0.61%)</title><rect x="578" y="484" width="7" height="15" fill="rgb(236,171,23)"/><text x="581.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="578" y="500" width="7" height="15" fill="rgb(217,125,48)"/><text x="581.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="578" y="516" width="7" height="15" fill="rgb(234,117,43)"/><text x="581.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="578" y="532" width="7" height="15" fill="rgb(251,54,26)"/><text x="581.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="578" y="548" width="7" height="15" fill="rgb(207,90,20)"/><text x="581.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="578" y="564" width="7" height="15" fill="rgb(240,16,49)"/><text x="581.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.61%)</title><rect x="578" y="580" width="7" height="15" fill="rgb(230,185,2)"/><text x="581.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="578" y="596" width="7" height="15" fill="rgb(225,189,30)"/><text x="581.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="578" y="612" width="7" height="15" fill="rgb(214,104,9)"/><text x="581.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="578" y="628" width="7" height="15" fill="rgb(229,165,53)"/><text x="581.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="578" y="644" width="7" height="15" fill="rgb(244,41,22)"/><text x="581.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="578" y="660" width="7" height="15" fill="rgb(235,44,3)"/><text x="581.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 0.61%)</title><rect x="578" y="676" width="7" height="15" fill="rgb(246,147,33)"/><text x="581.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="578" y="692" width="7" height="15" fill="rgb(253,202,31)"/><text x="581.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="578" y="708" width="7" height="15" fill="rgb(220,99,3)"/><text x="581.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="578" y="724" width="7" height="15" fill="rgb(252,153,31)"/><text x="581.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="578" y="740" width="7" height="15" fill="rgb(234,135,53)"/><text x="581.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="578" y="756" width="7" height="15" fill="rgb(224,97,10)"/><text x="581.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (3 samples, 0.61%)</title><rect x="578" y="772" width="7" height="15" fill="rgb(247,41,29)"/><text x="581.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.61%)</title><rect x="578" y="788" width="7" height="15" fill="rgb(235,87,52)"/><text x="581.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="578" y="804" width="7" height="15" fill="rgb(206,199,53)"/><text x="581.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="578" y="820" width="7" height="15" fill="rgb(247,75,15)"/><text x="581.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="578" y="836" width="7" height="15" fill="rgb(227,1,30)"/><text x="581.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="578" y="852" width="7" height="15" fill="rgb(234,151,34)"/><text x="581.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="578" y="868" width="7" height="15" fill="rgb(251,137,40)"/><text x="581.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="578" y="884" width="7" height="15" fill="rgb(233,122,35)"/><text x="581.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.20%)</title><rect x="583" y="900" width="2" height="15" fill="rgb(216,227,48)"/><text x="586.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="583" y="916" width="2" height="15" fill="rgb(240,39,3)"/><text x="586.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="583" y="932" width="2" height="15" fill="rgb(251,172,40)"/><text x="586.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="583" y="948" width="2" height="15" fill="rgb(240,162,23)"/><text x="586.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="583" y="964" width="2" height="15" fill="rgb(210,172,47)"/><text x="586.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="583" y="980" width="2" height="15" fill="rgb(222,16,22)"/><text x="586.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="583" y="996" width="2" height="15" fill="rgb(209,101,3)"/><text x="586.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="583" y="1012" width="2" height="15" fill="rgb(254,83,9)"/><text x="586.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:92) (1 samples, 0.20%)</title><rect x="583" y="1028" width="2" height="15" fill="rgb(243,105,44)"/><text x="586.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2824) (1 samples, 0.20%)</title><rect x="583" y="1044" width="2" height="15" fill="rgb(208,62,46)"/><text x="586.00" y="1054.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py:2849) (1 samples, 0.20%)</title><rect x="583" y="1060" width="2" height="15" fill="rgb(206,109,24)"/><text x="586.00" y="1070.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.20%)</title><rect x="583" y="1076" width="2" height="15" fill="rgb(217,62,30)"/><text x="586.00" y="1086.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:55) (1 samples, 0.20%)</title><rect x="583" y="1092" width="2" height="15" fill="rgb(208,167,13)"/><text x="586.00" y="1102.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py:196) (1 samples, 0.20%)</title><rect x="583" y="1108" width="2" height="15" fill="rgb(205,16,35)"/><text x="586.00" y="1118.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:112) (1 samples, 0.20%)</title><rect x="585" y="772" width="2" height="15" fill="rgb(240,86,19)"/><text x="588.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="585" y="788" width="2" height="15" fill="rgb(213,133,52)"/><text x="588.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="585" y="804" width="2" height="15" fill="rgb(208,153,9)"/><text x="588.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="585" y="820" width="2" height="15" fill="rgb(219,149,36)"/><text x="588.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="585" y="836" width="2" height="15" fill="rgb(205,49,31)"/><text x="588.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="585" y="852" width="2" height="15" fill="rgb(242,195,23)"/><text x="588.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="585" y="868" width="2" height="15" fill="rgb(237,20,33)"/><text x="588.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="585" y="884" width="2" height="15" fill="rgb(248,17,22)"/><text x="588.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py:26) (1 samples, 0.20%)</title><rect x="585" y="900" width="2" height="15" fill="rgb(238,125,45)"/><text x="588.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="585" y="916" width="2" height="15" fill="rgb(222,75,5)"/><text x="588.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="585" y="932" width="2" height="15" fill="rgb(247,25,52)"/><text x="588.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="585" y="948" width="2" height="15" fill="rgb(206,54,16)"/><text x="588.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="585" y="964" width="2" height="15" fill="rgb(234,27,47)"/><text x="588.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="585" y="980" width="2" height="15" fill="rgb(210,102,4)"/><text x="588.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py:11) (1 samples, 0.20%)</title><rect x="585" y="996" width="2" height="15" fill="rgb(241,184,5)"/><text x="588.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="585" y="1012" width="2" height="15" fill="rgb(217,191,39)"/><text x="588.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="585" y="1028" width="2" height="15" fill="rgb(237,18,51)"/><text x="588.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="585" y="1044" width="2" height="15" fill="rgb(206,184,36)"/><text x="588.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="585" y="1060" width="2" height="15" fill="rgb(209,133,23)"/><text x="588.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="585" y="1076" width="2" height="15" fill="rgb(248,137,37)"/><text x="588.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py:59) (1 samples, 0.20%)</title><rect x="585" y="1092" width="2" height="15" fill="rgb(205,164,5)"/><text x="588.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="585" y="1108" width="2" height="15" fill="rgb(207,208,6)"/><text x="588.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="585" y="1124" width="2" height="15" fill="rgb(218,71,31)"/><text x="588.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="585" y="1140" width="2" height="15" fill="rgb(222,91,0)"/><text x="588.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="585" y="1156" width="2" height="15" fill="rgb(231,143,42)"/><text x="588.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="585" y="1172" width="2" height="15" fill="rgb(229,51,30)"/><text x="588.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="585" y="1188" width="2" height="15" fill="rgb(215,143,23)"/><text x="588.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="585" y="1204" width="2" height="15" fill="rgb(237,32,51)"/><text x="588.00" y="1214.50"></text></g><g><title>&lt;module&gt; (http/cookiejar.py:1221) (1 samples, 0.20%)</title><rect x="585" y="1220" width="2" height="15" fill="rgb(229,2,45)"/><text x="588.00" y="1230.50"></text></g><g><title>CookieJar (http/cookiejar.py:1228) (1 samples, 0.20%)</title><rect x="585" y="1236" width="2" height="15" fill="rgb(210,163,47)"/><text x="588.00" y="1246.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.20%)</title><rect x="585" y="1252" width="2" height="15" fill="rgb(240,144,6)"/><text x="588.00" y="1262.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.20%)</title><rect x="585" y="1268" width="2" height="15" fill="rgb(233,221,11)"/><text x="588.00" y="1278.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.20%)</title><rect x="585" y="1284" width="2" height="15" fill="rgb(209,50,37)"/><text x="588.00" y="1294.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.20%)</title><rect x="585" y="1300" width="2" height="15" fill="rgb(213,204,31)"/><text x="588.00" y="1310.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.20%)</title><rect x="585" y="1316" width="2" height="15" fill="rgb(225,1,50)"/><text x="588.00" y="1326.50"></text></g><g><title>_parse (sre_parse.py:508) (1 samples, 0.20%)</title><rect x="585" y="1332" width="2" height="15" fill="rgb(239,28,46)"/><text x="588.00" y="1342.50"></text></g><g><title>append (sre_parse.py:173) (1 samples, 0.20%)</title><rect x="585" y="1348" width="2" height="15" fill="rgb(243,32,19)"/><text x="588.00" y="1358.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.41%)</title><rect x="585" y="484" width="5" height="15" fill="rgb(225,19,39)"/><text x="588.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="585" y="500" width="5" height="15" fill="rgb(249,117,41)"/><text x="588.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="585" y="516" width="5" height="15" fill="rgb(247,76,12)"/><text x="588.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="585" y="532" width="5" height="15" fill="rgb(254,91,44)"/><text x="588.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="585" y="548" width="5" height="15" fill="rgb(236,53,28)"/><text x="588.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="585" y="564" width="5" height="15" fill="rgb(229,141,46)"/><text x="588.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.41%)</title><rect x="585" y="580" width="5" height="15" fill="rgb(221,201,16)"/><text x="588.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="585" y="596" width="5" height="15" fill="rgb(238,193,8)"/><text x="588.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="585" y="612" width="5" height="15" fill="rgb(224,54,21)"/><text x="588.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="585" y="628" width="5" height="15" fill="rgb(250,63,22)"/><text x="588.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="585" y="644" width="5" height="15" fill="rgb(215,173,18)"/><text x="588.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="585" y="660" width="5" height="15" fill="rgb(243,56,47)"/><text x="588.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.41%)</title><rect x="585" y="676" width="5" height="15" fill="rgb(243,57,11)"/><text x="588.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="585" y="692" width="5" height="15" fill="rgb(224,33,32)"/><text x="588.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="585" y="708" width="5" height="15" fill="rgb(205,196,45)"/><text x="588.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="585" y="724" width="5" height="15" fill="rgb(216,165,47)"/><text x="588.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="585" y="740" width="5" height="15" fill="rgb(248,65,24)"/><text x="588.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="585" y="756" width="5" height="15" fill="rgb(227,73,19)"/><text x="588.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:115) (1 samples, 0.20%)</title><rect x="587" y="772" width="3" height="15" fill="rgb(231,90,40)"/><text x="590.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="587" y="788" width="3" height="15" fill="rgb(253,43,7)"/><text x="590.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.20%)</title><rect x="587" y="804" width="3" height="15" fill="rgb(250,132,43)"/><text x="590.00" y="814.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.20%)</title><rect x="587" y="820" width="3" height="15" fill="rgb(234,49,29)"/><text x="590.00" y="830.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.20%)</title><rect x="587" y="836" width="3" height="15" fill="rgb(236,195,20)"/><text x="590.00" y="846.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.20%)</title><rect x="587" y="852" width="3" height="15" fill="rgb(206,106,21)"/><text x="590.00" y="862.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1394) (1 samples, 0.20%)</title><rect x="587" y="868" width="3" height="15" fill="rgb(210,25,23)"/><text x="590.00" y="878.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.20%)</title><rect x="587" y="884" width="3" height="15" fill="rgb(237,164,28)"/><text x="590.00" y="894.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.20%)</title><rect x="587" y="900" width="3" height="15" fill="rgb(207,86,8)"/><text x="590.00" y="910.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.20%)</title><rect x="587" y="916" width="3" height="15" fill="rgb(254,104,11)"/><text x="590.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.20%)</title><rect x="587" y="932" width="3" height="15" fill="rgb(221,43,43)"/><text x="590.00" y="942.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.20%)</title><rect x="587" y="948" width="3" height="15" fill="rgb(231,10,47)"/><text x="590.00" y="958.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.61%)</title><rect x="585" y="244" width="7" height="15" fill="rgb(237,110,12)"/><text x="588.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="585" y="260" width="7" height="15" fill="rgb(241,77,28)"/><text x="588.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="585" y="276" width="7" height="15" fill="rgb(249,10,15)"/><text x="588.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="585" y="292" width="7" height="15" fill="rgb(206,103,51)"/><text x="588.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="585" y="308" width="7" height="15" fill="rgb(234,177,22)"/><text x="588.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="585" y="324" width="7" height="15" fill="rgb(234,11,41)"/><text x="588.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.61%)</title><rect x="585" y="340" width="7" height="15" fill="rgb(224,6,50)"/><text x="588.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="585" y="356" width="7" height="15" fill="rgb(239,223,28)"/><text x="588.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.61%)</title><rect x="585" y="372" width="7" height="15" fill="rgb(211,200,28)"/><text x="588.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="585" y="388" width="7" height="15" fill="rgb(217,227,24)"/><text x="588.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="585" y="404" width="7" height="15" fill="rgb(244,17,25)"/><text x="588.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="585" y="420" width="7" height="15" fill="rgb(252,27,33)"/><text x="588.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="585" y="436" width="7" height="15" fill="rgb(213,11,47)"/><text x="588.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="585" y="452" width="7" height="15" fill="rgb(210,162,7)"/><text x="588.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="585" y="468" width="7" height="15" fill="rgb(247,19,14)"/><text x="588.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.20%)</title><rect x="590" y="484" width="2" height="15" fill="rgb(217,71,32)"/><text x="593.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="590" y="500" width="2" height="15" fill="rgb(221,200,39)"/><text x="593.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="590" y="516" width="2" height="15" fill="rgb(225,105,6)"/><text x="593.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="590" y="532" width="2" height="15" fill="rgb(210,215,43)"/><text x="593.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="590" y="548" width="2" height="15" fill="rgb(227,206,52)"/><text x="593.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="590" y="564" width="2" height="15" fill="rgb(208,5,32)"/><text x="593.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.20%)</title><rect x="590" y="580" width="2" height="15" fill="rgb(227,216,52)"/><text x="593.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="590" y="596" width="2" height="15" fill="rgb(206,190,31)"/><text x="593.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="590" y="612" width="2" height="15" fill="rgb(219,29,15)"/><text x="593.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="590" y="628" width="2" height="15" fill="rgb(235,144,41)"/><text x="593.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="590" y="644" width="2" height="15" fill="rgb(224,36,0)"/><text x="593.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="590" y="660" width="2" height="15" fill="rgb(217,46,16)"/><text x="593.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.20%)</title><rect x="590" y="676" width="2" height="15" fill="rgb(224,57,8)"/><text x="593.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="590" y="692" width="2" height="15" fill="rgb(234,83,48)"/><text x="593.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="590" y="708" width="2" height="15" fill="rgb(213,188,24)"/><text x="593.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="590" y="724" width="2" height="15" fill="rgb(241,12,30)"/><text x="593.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="590" y="740" width="2" height="15" fill="rgb(226,101,0)"/><text x="593.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="590" y="756" width="2" height="15" fill="rgb(236,213,54)"/><text x="593.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:76) (1 samples, 0.20%)</title><rect x="590" y="772" width="2" height="15" fill="rgb(221,8,34)"/><text x="593.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="590" y="788" width="2" height="15" fill="rgb(227,87,33)"/><text x="593.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="590" y="804" width="2" height="15" fill="rgb(250,9,20)"/><text x="593.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="590" y="820" width="2" height="15" fill="rgb(239,161,8)"/><text x="593.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="590" y="836" width="2" height="15" fill="rgb(249,174,5)"/><text x="593.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="590" y="852" width="2" height="15" fill="rgb(249,154,20)"/><text x="593.00" y="862.50"></text></g><g><title>&lt;module&gt; (configparser.py:180) (1 samples, 0.20%)</title><rect x="590" y="868" width="2" height="15" fill="rgb(223,156,45)"/><text x="593.00" y="878.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.20%)</title><rect x="592" y="1012" width="3" height="15" fill="rgb(237,32,30)"/><text x="595.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="592" y="1028" width="3" height="15" fill="rgb(251,51,22)"/><text x="595.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="592" y="1044" width="3" height="15" fill="rgb(220,86,42)"/><text x="595.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="592" y="1060" width="3" height="15" fill="rgb(254,140,54)"/><text x="595.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="592" y="1076" width="3" height="15" fill="rgb(222,118,36)"/><text x="595.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="592" y="1092" width="3" height="15" fill="rgb(248,39,49)"/><text x="595.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.20%)</title><rect x="592" y="1108" width="3" height="15" fill="rgb(220,170,41)"/><text x="595.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="592" y="1124" width="3" height="15" fill="rgb(209,190,0)"/><text x="595.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="592" y="1140" width="3" height="15" fill="rgb(242,48,27)"/><text x="595.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="592" y="1156" width="3" height="15" fill="rgb(239,126,33)"/><text x="595.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="592" y="1172" width="3" height="15" fill="rgb(217,80,16)"/><text x="595.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="592" y="1188" width="3" height="15" fill="rgb(248,83,18)"/><text x="595.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.20%)</title><rect x="592" y="1204" width="3" height="15" fill="rgb(230,169,21)"/><text x="595.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="592" y="1220" width="3" height="15" fill="rgb(232,24,45)"/><text x="595.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="592" y="1236" width="3" height="15" fill="rgb(252,65,50)"/><text x="595.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="592" y="1252" width="3" height="15" fill="rgb(220,73,17)"/><text x="595.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="592" y="1268" width="3" height="15" fill="rgb(218,103,40)"/><text x="595.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="592" y="1284" width="3" height="15" fill="rgb(223,63,10)"/><text x="595.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.20%)</title><rect x="592" y="1300" width="3" height="15" fill="rgb(209,20,51)"/><text x="595.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="592" y="1316" width="3" height="15" fill="rgb(231,210,8)"/><text x="595.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="592" y="1332" width="3" height="15" fill="rgb(217,166,50)"/><text x="595.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="592" y="1348" width="3" height="15" fill="rgb(230,13,11)"/><text x="595.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="592" y="1364" width="3" height="15" fill="rgb(214,140,44)"/><text x="595.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="592" y="1380" width="3" height="15" fill="rgb(222,130,46)"/><text x="595.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.20%)</title><rect x="592" y="1396" width="3" height="15" fill="rgb(231,87,9)"/><text x="595.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="592" y="1412" width="3" height="15" fill="rgb(214,182,35)"/><text x="595.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="592" y="1428" width="3" height="15" fill="rgb(234,204,16)"/><text x="595.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="592" y="1444" width="3" height="15" fill="rgb(245,159,34)"/><text x="595.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="592" y="1460" width="3" height="15" fill="rgb(251,206,53)"/><text x="595.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="592" y="1476" width="3" height="15" fill="rgb(251,120,47)"/><text x="595.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.20%)</title><rect x="592" y="1492" width="3" height="15" fill="rgb(213,220,42)"/><text x="595.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="592" y="1508" width="3" height="15" fill="rgb(205,157,40)"/><text x="595.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="592" y="1524" width="3" height="15" fill="rgb(238,21,4)"/><text x="595.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="592" y="1540" width="3" height="15" fill="rgb(240,5,7)"/><text x="595.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="592" y="1556" width="3" height="15" fill="rgb(213,3,49)"/><text x="595.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="592" y="1572" width="3" height="15" fill="rgb(227,115,42)"/><text x="595.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.20%)</title><rect x="592" y="1588" width="3" height="15" fill="rgb(207,32,41)"/><text x="595.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="592" y="1604" width="3" height="15" fill="rgb(215,176,35)"/><text x="595.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="592" y="1620" width="3" height="15" fill="rgb(206,38,40)"/><text x="595.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="592" y="1636" width="3" height="15" fill="rgb(222,215,23)"/><text x="595.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="592" y="1652" width="3" height="15" fill="rgb(205,191,37)"/><text x="595.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="592" y="1668" width="3" height="15" fill="rgb(250,144,38)"/><text x="595.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.20%)</title><rect x="592" y="1684" width="3" height="15" fill="rgb(242,44,42)"/><text x="595.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="592" y="1700" width="3" height="15" fill="rgb(227,184,30)"/><text x="595.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="592" y="1716" width="3" height="15" fill="rgb(218,126,6)"/><text x="595.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="592" y="1732" width="3" height="15" fill="rgb(206,75,15)"/><text x="595.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="592" y="1748" width="3" height="15" fill="rgb(208,47,40)"/><text x="595.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="592" y="1764" width="3" height="15" fill="rgb(248,129,28)"/><text x="595.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.20%)</title><rect x="592" y="1780" width="3" height="15" fill="rgb(224,5,16)"/><text x="595.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="592" y="1796" width="3" height="15" fill="rgb(239,38,27)"/><text x="595.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="592" y="1812" width="3" height="15" fill="rgb(220,31,29)"/><text x="595.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="592" y="1828" width="3" height="15" fill="rgb(223,172,2)"/><text x="595.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="592" y="1844" width="3" height="15" fill="rgb(238,56,27)"/><text x="595.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="592" y="1860" width="3" height="15" fill="rgb(239,63,6)"/><text x="595.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:14) (1 samples, 0.20%)</title><rect x="592" y="1876" width="3" height="15" fill="rgb(234,16,48)"/><text x="595.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="592" y="1892" width="3" height="15" fill="rgb(222,163,42)"/><text x="595.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="592" y="1908" width="3" height="15" fill="rgb(207,71,3)"/><text x="595.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="592" y="1924" width="3" height="15" fill="rgb(219,178,3)"/><text x="595.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="592" y="1940" width="3" height="15" fill="rgb(208,200,28)"/><text x="595.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="592" y="1956" width="3" height="15" fill="rgb(208,42,21)"/><text x="595.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py:1353) (1 samples, 0.20%)</title><rect x="592" y="1972" width="3" height="15" fill="rgb(230,88,17)"/><text x="595.00" y="1982.50"></text></g><g><title>json_load (matplotlib/font_manager.py:925) (1 samples, 0.20%)</title><rect x="592" y="1988" width="3" height="15" fill="rgb(232,188,18)"/><text x="595.00" y="1998.50"></text></g><g><title>load (json/__init__.py:293) (1 samples, 0.20%)</title><rect x="592" y="2004" width="3" height="15" fill="rgb(209,62,21)"/><text x="595.00" y="2014.50"></text></g><g><title>lseek64 (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="592" y="2020" width="3" height="15" fill="rgb(218,64,16)"/><text x="595.00" y="2030.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.41%)</title><rect x="592" y="724" width="5" height="15" fill="rgb(247,23,8)"/><text x="595.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="592" y="740" width="5" height="15" fill="rgb(234,115,51)"/><text x="595.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="592" y="756" width="5" height="15" fill="rgb(209,122,37)"/><text x="595.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="592" y="772" width="5" height="15" fill="rgb(207,220,41)"/><text x="595.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="592" y="788" width="5" height="15" fill="rgb(248,161,2)"/><text x="595.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="592" y="804" width="5" height="15" fill="rgb(226,228,13)"/><text x="595.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.41%)</title><rect x="592" y="820" width="5" height="15" fill="rgb(240,190,50)"/><text x="595.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="592" y="836" width="5" height="15" fill="rgb(221,44,0)"/><text x="595.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="592" y="852" width="5" height="15" fill="rgb(239,39,38)"/><text x="595.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="592" y="868" width="5" height="15" fill="rgb(211,74,16)"/><text x="595.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="592" y="884" width="5" height="15" fill="rgb(231,158,39)"/><text x="595.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="592" y="900" width="5" height="15" fill="rgb(238,51,11)"/><text x="595.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.41%)</title><rect x="592" y="916" width="5" height="15" fill="rgb(233,9,50)"/><text x="595.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.41%)</title><rect x="592" y="932" width="5" height="15" fill="rgb(213,128,9)"/><text x="595.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.41%)</title><rect x="592" y="948" width="5" height="15" fill="rgb(213,80,1)"/><text x="595.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.41%)</title><rect x="592" y="964" width="5" height="15" fill="rgb(246,112,48)"/><text x="595.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.41%)</title><rect x="592" y="980" width="5" height="15" fill="rgb(226,131,33)"/><text x="595.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.41%)</title><rect x="592" y="996" width="5" height="15" fill="rgb(221,127,10)"/><text x="595.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.20%)</title><rect x="595" y="1012" width="2" height="15" fill="rgb(207,216,35)"/><text x="598.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="595" y="1028" width="2" height="15" fill="rgb(206,129,22)"/><text x="598.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="595" y="1044" width="2" height="15" fill="rgb(224,90,36)"/><text x="598.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="595" y="1060" width="2" height="15" fill="rgb(233,7,4)"/><text x="598.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="595" y="1076" width="2" height="15" fill="rgb(236,58,2)"/><text x="598.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="595" y="1092" width="2" height="15" fill="rgb(215,63,44)"/><text x="598.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.20%)</title><rect x="595" y="1108" width="2" height="15" fill="rgb(251,59,35)"/><text x="598.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="595" y="1124" width="2" height="15" fill="rgb(209,36,33)"/><text x="598.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="595" y="1140" width="2" height="15" fill="rgb(227,199,13)"/><text x="598.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="595" y="1156" width="2" height="15" fill="rgb(211,159,21)"/><text x="598.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="595" y="1172" width="2" height="15" fill="rgb(250,103,7)"/><text x="598.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="595" y="1188" width="2" height="15" fill="rgb(225,211,54)"/><text x="598.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.20%)</title><rect x="595" y="1204" width="2" height="15" fill="rgb(246,8,29)"/><text x="598.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="595" y="1220" width="2" height="15" fill="rgb(206,26,37)"/><text x="598.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="595" y="1236" width="2" height="15" fill="rgb(230,186,43)"/><text x="598.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="595" y="1252" width="2" height="15" fill="rgb(206,176,53)"/><text x="598.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="595" y="1268" width="2" height="15" fill="rgb(229,160,9)"/><text x="598.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="595" y="1284" width="2" height="15" fill="rgb(237,72,25)"/><text x="598.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:24) (1 samples, 0.20%)</title><rect x="595" y="1300" width="2" height="15" fill="rgb(210,2,33)"/><text x="598.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="595" y="1316" width="2" height="15" fill="rgb(249,168,3)"/><text x="598.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="595" y="1332" width="2" height="15" fill="rgb(233,155,50)"/><text x="598.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="595" y="1348" width="2" height="15" fill="rgb(233,134,23)"/><text x="598.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.20%)</title><rect x="595" y="1364" width="2" height="15" fill="rgb(214,54,4)"/><text x="598.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.20%)</title><rect x="595" y="1380" width="2" height="15" fill="rgb(207,16,4)"/><text x="598.00" y="1390.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.20%)</title><rect x="595" y="1396" width="2" height="15" fill="rgb(220,55,26)"/><text x="598.00" y="1406.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.61%)</title><rect x="592" y="436" width="8" height="15" fill="rgb(223,104,29)"/><text x="595.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="592" y="452" width="8" height="15" fill="rgb(240,34,33)"/><text x="595.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="592" y="468" width="8" height="15" fill="rgb(225,133,10)"/><text x="595.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="592" y="484" width="8" height="15" fill="rgb(243,70,14)"/><text x="595.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="592" y="500" width="8" height="15" fill="rgb(251,81,32)"/><text x="595.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="592" y="516" width="8" height="15" fill="rgb(250,192,40)"/><text x="595.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.61%)</title><rect x="592" y="532" width="8" height="15" fill="rgb(236,10,32)"/><text x="595.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="592" y="548" width="8" height="15" fill="rgb(212,204,13)"/><text x="595.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="592" y="564" width="8" height="15" fill="rgb(229,14,7)"/><text x="595.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="592" y="580" width="8" height="15" fill="rgb(252,55,11)"/><text x="595.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="592" y="596" width="8" height="15" fill="rgb(215,24,17)"/><text x="595.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="592" y="612" width="8" height="15" fill="rgb(219,214,14)"/><text x="595.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.61%)</title><rect x="592" y="628" width="8" height="15" fill="rgb(234,36,48)"/><text x="595.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.61%)</title><rect x="592" y="644" width="8" height="15" fill="rgb(254,135,43)"/><text x="595.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.61%)</title><rect x="592" y="660" width="8" height="15" fill="rgb(235,211,54)"/><text x="595.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.61%)</title><rect x="592" y="676" width="8" height="15" fill="rgb(241,50,40)"/><text x="595.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.61%)</title><rect x="592" y="692" width="8" height="15" fill="rgb(244,84,17)"/><text x="595.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.61%)</title><rect x="592" y="708" width="8" height="15" fill="rgb(228,129,41)"/><text x="595.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:49) (1 samples, 0.20%)</title><rect x="597" y="724" width="3" height="15" fill="rgb(239,196,38)"/><text x="600.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="597" y="740" width="3" height="15" fill="rgb(229,193,6)"/><text x="600.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="597" y="756" width="3" height="15" fill="rgb(211,16,36)"/><text x="600.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.20%)</title><rect x="597" y="772" width="3" height="15" fill="rgb(230,184,46)"/><text x="600.00" y="782.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.20%)</title><rect x="597" y="788" width="3" height="15" fill="rgb(218,43,43)"/><text x="600.00" y="798.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:553) (1 samples, 0.20%)</title><rect x="597" y="804" width="3" height="15" fill="rgb(229,81,24)"/><text x="600.00" y="814.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:128) (1 samples, 0.20%)</title><rect x="600" y="1508" width="2" height="15" fill="rgb(236,9,48)"/><text x="603.00" y="1518.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.41%)</title><rect x="600" y="1492" width="4" height="15" fill="rgb(225,4,46)"/><text x="603.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.20%)</title><rect x="602" y="1508" width="2" height="15" fill="rgb(249,199,32)"/><text x="605.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.20%)</title><rect x="602" y="1524" width="2" height="15" fill="rgb(254,199,7)"/><text x="605.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.20%)</title><rect x="602" y="1540" width="2" height="15" fill="rgb(241,103,39)"/><text x="605.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.20%)</title><rect x="602" y="1556" width="2" height="15" fill="rgb(247,129,11)"/><text x="605.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:122) (1 samples, 0.20%)</title><rect x="602" y="1572" width="2" height="15" fill="rgb(233,225,36)"/><text x="605.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.20%)</title><rect x="602" y="1588" width="2" height="15" fill="rgb(221,64,16)"/><text x="605.00" y="1598.50"></text></g><g><title>getname (skl2onnx/algebra/automation.py:173) (1 samples, 0.20%)</title><rect x="602" y="1604" width="2" height="15" fill="rgb(238,167,0)"/><text x="605.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="602" y="1620" width="2" height="15" fill="rgb(220,201,4)"/><text x="605.00" y="1630.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="602" y="1636" width="2" height="15" fill="rgb(235,79,30)"/><text x="605.00" y="1646.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="602" y="1652" width="2" height="15" fill="rgb(221,18,7)"/><text x="605.00" y="1662.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.20%)</title><rect x="604" y="1492" width="3" height="15" fill="rgb(215,228,54)"/><text x="607.00" y="1502.50"></text></g><g><title>0x7f91355e30e9 (?) (1 samples, 0.20%)</title><rect x="604" y="1508" width="3" height="15" fill="rgb(246,189,11)"/><text x="607.00" y="1518.50"></text></g><g><title>0x7f91355c9bc1 (?) (1 samples, 0.20%)</title><rect x="604" y="1524" width="3" height="15" fill="rgb(245,141,8)"/><text x="607.00" y="1534.50"></text></g><g><title>0x7f91356a7c9c (?) (1 samples, 0.20%)</title><rect x="604" y="1540" width="3" height="15" fill="rgb(236,33,40)"/><text x="607.00" y="1550.50"></text></g><g><title>0x7f91356ac03b (?) (1 samples, 0.20%)</title><rect x="604" y="1556" width="3" height="15" fill="rgb(225,115,34)"/><text x="607.00" y="1566.50"></text></g><g><title>0x7f913566edb1 (?) (1 samples, 0.20%)</title><rect x="604" y="1572" width="3" height="15" fill="rgb(233,95,12)"/><text x="607.00" y="1582.50"></text></g><g><title>0x7f91356a5452 (?) (1 samples, 0.20%)</title><rect x="604" y="1588" width="3" height="15" fill="rgb(219,66,4)"/><text x="607.00" y="1598.50"></text></g><g><title>0x7f91356a5210 (?) (1 samples, 0.20%)</title><rect x="604" y="1604" width="3" height="15" fill="rgb(230,93,19)"/><text x="607.00" y="1614.50"></text></g><g><title>0x7f91356a4da9 (?) (1 samples, 0.20%)</title><rect x="604" y="1620" width="3" height="15" fill="rgb(234,58,16)"/><text x="607.00" y="1630.50"></text></g><g><title>0x7f9135723e6e (?) (1 samples, 0.20%)</title><rect x="604" y="1636" width="3" height="15" fill="rgb(207,223,45)"/><text x="607.00" y="1646.50"></text></g><g><title>0x7f9135723cb3 (?) (1 samples, 0.20%)</title><rect x="604" y="1652" width="3" height="15" fill="rgb(223,118,8)"/><text x="607.00" y="1662.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:4) (21 samples, 4.29%)</title><rect x="559" y="52" width="50" height="15" fill="rgb(254,184,45)"/><text x="562.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (21 samples, 4.29%)</title><rect x="559" y="68" width="50" height="15" fill="rgb(231,191,4)"/><text x="562.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (21 samples, 4.29%)</title><rect x="559" y="84" width="50" height="15" fill="rgb(217,117,47)"/><text x="562.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (21 samples, 4.29%)</title><rect x="559" y="100" width="50" height="15" fill="rgb(213,46,18)"/><text x="562.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (21 samples, 4.29%)</title><rect x="559" y="116" width="50" height="15" fill="rgb(232,90,10)"/><text x="562.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 4.29%)</title><rect x="559" y="132" width="50" height="15" fill="rgb(251,20,46)"/><text x="562.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:7) (10 samples, 2.04%)</title><rect x="585" y="148" width="24" height="15" fill="rgb(222,35,48)"/><text x="588.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.04%)</title><rect x="585" y="164" width="24" height="15" fill="rgb(206,122,36)"/><text x="588.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.04%)</title><rect x="585" y="180" width="24" height="15" fill="rgb(210,32,53)"/><text x="588.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.04%)</title><rect x="585" y="196" width="24" height="15" fill="rgb(216,2,11)"/><text x="588.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.04%)</title><rect x="585" y="212" width="24" height="15" fill="rgb(246,42,24)"/><text x="588.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.04%)</title><rect x="585" y="228" width="24" height="15" fill="rgb(222,127,13)"/><text x="588.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 1.43%)</title><rect x="592" y="244" width="17" height="15" fill="rgb(240,104,48)"/><text x="595.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.43%)</title><rect x="592" y="260" width="17" height="15" fill="rgb(237,11,20)"/><text x="595.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.43%)</title><rect x="592" y="276" width="17" height="15" fill="rgb(210,23,9)"/><text x="595.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.43%)</title><rect x="592" y="292" width="17" height="15" fill="rgb(246,27,42)"/><text x="595.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.43%)</title><rect x="592" y="308" width="17" height="15" fill="rgb(249,59,10)"/><text x="595.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.43%)</title><rect x="592" y="324" width="17" height="15" fill="rgb(211,205,0)"/><text x="595.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 1.43%)</title><rect x="592" y="340" width="17" height="15" fill="rgb(229,180,25)"/><text x="595.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.43%)</title><rect x="592" y="356" width="17" height="15" fill="rgb(208,0,40)"/><text x="595.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.43%)</title><rect x="592" y="372" width="17" height="15" fill="rgb(212,213,42)"/><text x="595.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.43%)</title><rect x="592" y="388" width="17" height="15" fill="rgb(208,59,0)"/><text x="595.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.43%)</title><rect x="592" y="404" width="17" height="15" fill="rgb(231,79,50)"/><text x="595.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.43%)</title><rect x="592" y="420" width="17" height="15" fill="rgb(216,217,12)"/><text x="595.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.82%)</title><rect x="600" y="436" width="9" height="15" fill="rgb(222,156,52)"/><text x="603.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.82%)</title><rect x="600" y="452" width="9" height="15" fill="rgb(241,150,26)"/><text x="603.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.82%)</title><rect x="600" y="468" width="9" height="15" fill="rgb(205,17,1)"/><text x="603.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.82%)</title><rect x="600" y="484" width="9" height="15" fill="rgb(215,35,53)"/><text x="603.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.82%)</title><rect x="600" y="500" width="9" height="15" fill="rgb(231,85,44)"/><text x="603.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.82%)</title><rect x="600" y="516" width="9" height="15" fill="rgb(230,154,51)"/><text x="603.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.82%)</title><rect x="600" y="532" width="9" height="15" fill="rgb(249,174,24)"/><text x="603.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.82%)</title><rect x="600" y="548" width="9" height="15" fill="rgb(240,27,19)"/><text x="603.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.82%)</title><rect x="600" y="564" width="9" height="15" fill="rgb(242,161,36)"/><text x="603.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.82%)</title><rect x="600" y="580" width="9" height="15" fill="rgb(211,212,12)"/><text x="603.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.82%)</title><rect x="600" y="596" width="9" height="15" fill="rgb(251,43,40)"/><text x="603.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.82%)</title><rect x="600" y="612" width="9" height="15" fill="rgb(227,137,12)"/><text x="603.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.82%)</title><rect x="600" y="628" width="9" height="15" fill="rgb(225,177,6)"/><text x="603.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.82%)</title><rect x="600" y="644" width="9" height="15" fill="rgb(252,108,16)"/><text x="603.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.82%)</title><rect x="600" y="660" width="9" height="15" fill="rgb(212,151,47)"/><text x="603.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.82%)</title><rect x="600" y="676" width="9" height="15" fill="rgb(206,207,17)"/><text x="603.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.82%)</title><rect x="600" y="692" width="9" height="15" fill="rgb(205,183,36)"/><text x="603.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.82%)</title><rect x="600" y="708" width="9" height="15" fill="rgb(211,8,21)"/><text x="603.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.82%)</title><rect x="600" y="724" width="9" height="15" fill="rgb(214,197,42)"/><text x="603.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.82%)</title><rect x="600" y="740" width="9" height="15" fill="rgb(237,181,34)"/><text x="603.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.82%)</title><rect x="600" y="756" width="9" height="15" fill="rgb(220,223,15)"/><text x="603.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.82%)</title><rect x="600" y="772" width="9" height="15" fill="rgb(221,57,17)"/><text x="603.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.82%)</title><rect x="600" y="788" width="9" height="15" fill="rgb(220,43,26)"/><text x="603.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.82%)</title><rect x="600" y="804" width="9" height="15" fill="rgb(208,160,12)"/><text x="603.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.82%)</title><rect x="600" y="820" width="9" height="15" fill="rgb(217,206,25)"/><text x="603.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.82%)</title><rect x="600" y="836" width="9" height="15" fill="rgb(220,189,38)"/><text x="603.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.82%)</title><rect x="600" y="852" width="9" height="15" fill="rgb(235,102,31)"/><text x="603.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.82%)</title><rect x="600" y="868" width="9" height="15" fill="rgb(238,220,40)"/><text x="603.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.82%)</title><rect x="600" y="884" width="9" height="15" fill="rgb(237,26,27)"/><text x="603.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.82%)</title><rect x="600" y="900" width="9" height="15" fill="rgb(220,190,12)"/><text x="603.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.82%)</title><rect x="600" y="916" width="9" height="15" fill="rgb(206,52,54)"/><text x="603.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.82%)</title><rect x="600" y="932" width="9" height="15" fill="rgb(234,125,38)"/><text x="603.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.82%)</title><rect x="600" y="948" width="9" height="15" fill="rgb(206,95,40)"/><text x="603.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.82%)</title><rect x="600" y="964" width="9" height="15" fill="rgb(235,90,4)"/><text x="603.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.82%)</title><rect x="600" y="980" width="9" height="15" fill="rgb(251,187,47)"/><text x="603.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.82%)</title><rect x="600" y="996" width="9" height="15" fill="rgb(244,204,44)"/><text x="603.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.82%)</title><rect x="600" y="1012" width="9" height="15" fill="rgb(215,19,39)"/><text x="603.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.82%)</title><rect x="600" y="1028" width="9" height="15" fill="rgb(216,130,43)"/><text x="603.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.82%)</title><rect x="600" y="1044" width="9" height="15" fill="rgb(206,187,49)"/><text x="603.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.82%)</title><rect x="600" y="1060" width="9" height="15" fill="rgb(240,84,39)"/><text x="603.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.82%)</title><rect x="600" y="1076" width="9" height="15" fill="rgb(216,108,14)"/><text x="603.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.82%)</title><rect x="600" y="1092" width="9" height="15" fill="rgb(244,52,52)"/><text x="603.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 0.82%)</title><rect x="600" y="1108" width="9" height="15" fill="rgb(213,221,7)"/><text x="603.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.82%)</title><rect x="600" y="1124" width="9" height="15" fill="rgb(208,47,20)"/><text x="603.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.82%)</title><rect x="600" y="1140" width="9" height="15" fill="rgb(230,116,48)"/><text x="603.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.82%)</title><rect x="600" y="1156" width="9" height="15" fill="rgb(238,108,21)"/><text x="603.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.82%)</title><rect x="600" y="1172" width="9" height="15" fill="rgb(224,33,27)"/><text x="603.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.82%)</title><rect x="600" y="1188" width="9" height="15" fill="rgb(254,101,46)"/><text x="603.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.82%)</title><rect x="600" y="1204" width="9" height="15" fill="rgb(249,14,39)"/><text x="603.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.82%)</title><rect x="600" y="1220" width="9" height="15" fill="rgb(212,140,51)"/><text x="603.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 0.82%)</title><rect x="600" y="1236" width="9" height="15" fill="rgb(244,11,3)"/><text x="603.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.82%)</title><rect x="600" y="1252" width="9" height="15" fill="rgb(228,110,31)"/><text x="603.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.82%)</title><rect x="600" y="1268" width="9" height="15" fill="rgb(233,26,51)"/><text x="603.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.82%)</title><rect x="600" y="1284" width="9" height="15" fill="rgb(225,225,35)"/><text x="603.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.82%)</title><rect x="600" y="1300" width="9" height="15" fill="rgb(224,129,6)"/><text x="603.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.82%)</title><rect x="600" y="1316" width="9" height="15" fill="rgb(254,77,30)"/><text x="603.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.82%)</title><rect x="600" y="1332" width="9" height="15" fill="rgb(213,46,6)"/><text x="603.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.82%)</title><rect x="600" y="1348" width="9" height="15" fill="rgb(213,29,47)"/><text x="603.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 0.82%)</title><rect x="600" y="1364" width="9" height="15" fill="rgb(208,38,32)"/><text x="603.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.82%)</title><rect x="600" y="1380" width="9" height="15" fill="rgb(218,25,12)"/><text x="603.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.82%)</title><rect x="600" y="1396" width="9" height="15" fill="rgb(241,54,31)"/><text x="603.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.82%)</title><rect x="600" y="1412" width="9" height="15" fill="rgb(247,91,36)"/><text x="603.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.82%)</title><rect x="600" y="1428" width="9" height="15" fill="rgb(250,16,25)"/><text x="603.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.82%)</title><rect x="600" y="1444" width="9" height="15" fill="rgb(210,217,15)"/><text x="603.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (4 samples, 0.82%)</title><rect x="600" y="1460" width="9" height="15" fill="rgb(220,130,16)"/><text x="603.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (4 samples, 0.82%)</title><rect x="600" y="1476" width="9" height="15" fill="rgb(221,152,42)"/><text x="603.00" y="1486.50"></text></g><g><title>pybind11_object_dealloc (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="607" y="1492" width="2" height="15" fill="rgb(221,63,31)"/><text x="610.00" y="1502.50"></text></g><g><title>pybind11::detail::clear_instance (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="607" y="1508" width="2" height="15" fill="rgb(235,194,53)"/><text x="610.00" y="1518.50"></text></g><g><title>0x7f91355c2da0 (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="607" y="1524" width="2" height="15" fill="rgb(234,56,46)"/><text x="610.00" y="1534.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.20%)</title><rect x="609" y="196" width="3" height="15" fill="rgb(233,158,50)"/><text x="612.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:74) (1 samples, 0.20%)</title><rect x="609" y="212" width="3" height="15" fill="rgb(223,161,31)"/><text x="612.00" y="222.50"></text></g><g><title>apply_clip (onnxconverter_common/onnx_ops.py:246) (1 samples, 0.20%)</title><rect x="609" y="228" width="3" height="15" fill="rgb(235,9,47)"/><text x="612.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.20%)</title><rect x="609" y="244" width="3" height="15" fill="rgb(234,213,12)"/><text x="612.00" y="254.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py:364) (1 samples, 0.20%)</title><rect x="609" y="260" width="3" height="15" fill="rgb(243,110,17)"/><text x="612.00" y="270.50"></text></g><g><title>extract_stack (traceback.py:210) (1 samples, 0.20%)</title><rect x="609" y="276" width="3" height="15" fill="rgb(245,189,4)"/><text x="612.00" y="286.50"></text></g><g><title>sys_getframe (python3.7) (1 samples, 0.20%)</title><rect x="609" y="292" width="3" height="15" fill="rgb(243,77,36)"/><text x="612.00" y="302.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:28) (2 samples, 0.41%)</title><rect x="609" y="84" width="5" height="15" fill="rgb(222,15,40)"/><text x="612.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.41%)</title><rect x="609" y="100" width="5" height="15" fill="rgb(229,35,40)"/><text x="612.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.41%)</title><rect x="609" y="116" width="5" height="15" fill="rgb(225,93,40)"/><text x="612.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.41%)</title><rect x="609" y="132" width="5" height="15" fill="rgb(237,205,4)"/><text x="612.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.41%)</title><rect x="609" y="148" width="5" height="15" fill="rgb(205,164,36)"/><text x="612.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.41%)</title><rect x="609" y="164" width="5" height="15" fill="rgb(241,84,11)"/><text x="612.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.41%)</title><rect x="609" y="180" width="5" height="15" fill="rgb(215,155,13)"/><text x="612.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (1 samples, 0.20%)</title><rect x="612" y="196" width="2" height="15" fill="rgb(254,32,49)"/><text x="615.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.20%)</title><rect x="612" y="212" width="2" height="15" fill="rgb(228,13,16)"/><text x="615.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.20%)</title><rect x="612" y="228" width="2" height="15" fill="rgb(230,88,23)"/><text x="615.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.20%)</title><rect x="616" y="180" width="3" height="15" fill="rgb(231,82,4)"/><text x="619.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.82%)</title><rect x="619" y="180" width="9" height="15" fill="rgb(254,119,31)"/><text x="622.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (1 samples, 0.20%)</title><rect x="631" y="196" width="2" height="15" fill="rgb(205,118,39)"/><text x="634.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.20%)</title><rect x="631" y="212" width="2" height="15" fill="rgb(241,182,23)"/><text x="634.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.20%)</title><rect x="631" y="228" width="2" height="15" fill="rgb(213,116,27)"/><text x="634.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.20%)</title><rect x="631" y="244" width="2" height="15" fill="rgb(211,161,20)"/><text x="634.00" y="254.50"></text></g><g><title>array_length (mapping.c:55) (1 samples, 0.20%)</title><rect x="631" y="260" width="2" height="15" fill="rgb(218,179,34)"/><text x="634.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (1 samples, 0.20%)</title><rect x="636" y="228" width="2" height="15" fill="rgb(216,207,34)"/><text x="639.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="636" y="244" width="2" height="15" fill="rgb(217,73,1)"/><text x="639.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="636" y="260" width="2" height="15" fill="rgb(218,46,39)"/><text x="639.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.20%)</title><rect x="636" y="276" width="2" height="15" fill="rgb(219,62,53)"/><text x="639.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.20%)</title><rect x="636" y="292" width="2" height="15" fill="rgb(227,114,13)"/><text x="639.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:27) (1 samples, 0.20%)</title><rect x="638" y="228" width="2" height="15" fill="rgb(221,132,0)"/><text x="641.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (3 samples, 0.61%)</title><rect x="645" y="292" width="7" height="15" fill="rgb(230,203,6)"/><text x="648.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.20%)</title><rect x="650" y="308" width="2" height="15" fill="rgb(248,59,44)"/><text x="653.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.20%)</title><rect x="652" y="308" width="3" height="15" fill="rgb(243,216,45)"/><text x="655.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="652" y="324" width="3" height="15" fill="rgb(211,92,53)"/><text x="655.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.20%)</title><rect x="652" y="340" width="3" height="15" fill="rgb(239,209,40)"/><text x="655.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.20%)</title><rect x="652" y="356" width="3" height="15" fill="rgb(212,50,4)"/><text x="655.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.20%)</title><rect x="652" y="372" width="3" height="15" fill="rgb(248,126,45)"/><text x="655.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.20%)</title><rect x="652" y="388" width="3" height="15" fill="rgb(234,49,50)"/><text x="655.00" y="398.50"></text></g><g><title>0x7f9145605fc2 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="652" y="404" width="3" height="15" fill="rgb(252,188,17)"/><text x="655.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.20%)</title><rect x="655" y="356" width="2" height="15" fill="rgb(242,75,48)"/><text x="658.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.20%)</title><rect x="655" y="372" width="2" height="15" fill="rgb(248,54,13)"/><text x="658.00" y="382.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1679) (1 samples, 0.20%)</title><rect x="655" y="388" width="2" height="15" fill="rgb(244,44,33)"/><text x="658.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:562) (1 samples, 0.20%)</title><rect x="657" y="356" width="3" height="15" fill="rgb(232,136,18)"/><text x="660.00" y="366.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1039) (1 samples, 0.20%)</title><rect x="657" y="372" width="3" height="15" fill="rgb(231,132,50)"/><text x="660.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (12 samples, 2.45%)</title><rect x="633" y="196" width="29" height="15" fill="rgb(254,64,24)"/><text x="636.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (12 samples, 2.45%)</title><rect x="633" y="212" width="29" height="15" fill="rgb(249,35,28)"/><text x="636.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (9 samples, 1.84%)</title><rect x="640" y="228" width="22" height="15" fill="rgb(225,41,6)"/><text x="643.00" y="238.50">_..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (8 samples, 1.63%)</title><rect x="643" y="244" width="19" height="15" fill="rgb(210,140,41)"/><text x="646.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 1.63%)</title><rect x="643" y="260" width="19" height="15" fill="rgb(252,17,10)"/><text x="646.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (8 samples, 1.63%)</title><rect x="643" y="276" width="19" height="15" fill="rgb(214,158,17)"/><text x="646.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (4 samples, 0.82%)</title><rect x="652" y="292" width="10" height="15" fill="rgb(212,197,26)"/><text x="655.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.61%)</title><rect x="655" y="308" width="7" height="15" fill="rgb(236,15,48)"/><text x="658.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.61%)</title><rect x="655" y="324" width="7" height="15" fill="rgb(237,10,18)"/><text x="658.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.61%)</title><rect x="655" y="340" width="7" height="15" fill="rgb(215,35,18)"/><text x="658.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.20%)</title><rect x="660" y="356" width="2" height="15" fill="rgb(230,4,33)"/><text x="663.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.20%)</title><rect x="660" y="372" width="2" height="15" fill="rgb(238,118,16)"/><text x="663.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.20%)</title><rect x="660" y="388" width="2" height="15" fill="rgb(252,121,48)"/><text x="663.00" y="398.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:2023) (1 samples, 0.20%)</title><rect x="660" y="404" width="2" height="15" fill="rgb(232,56,13)"/><text x="663.00" y="414.50"></text></g><g><title>0x7f9106085422 (?) (1 samples, 0.20%)</title><rect x="662" y="244" width="3" height="15" fill="rgb(209,153,15)"/><text x="665.00" y="254.50"></text></g><g><title>0x7f910608b89e (?) (1 samples, 0.20%)</title><rect x="662" y="260" width="3" height="15" fill="rgb(240,73,24)"/><text x="665.00" y="270.50"></text></g><g><title>0x7f910608b74f (?) (1 samples, 0.20%)</title><rect x="662" y="276" width="3" height="15" fill="rgb(218,29,24)"/><text x="665.00" y="286.50"></text></g><g><title>0x7f9106091a3a (?) (1 samples, 0.20%)</title><rect x="662" y="292" width="3" height="15" fill="rgb(219,112,1)"/><text x="665.00" y="302.50"></text></g><g><title>0x7f910f4edab9 (?) (1 samples, 0.20%)</title><rect x="662" y="308" width="3" height="15" fill="rgb(222,1,32)"/><text x="665.00" y="318.50"></text></g><g><title>0x7f910f4eeead (?) (1 samples, 0.20%)</title><rect x="662" y="324" width="3" height="15" fill="rgb(212,68,22)"/><text x="665.00" y="334.50"></text></g><g><title>0x7f910f4eeea9 (libgomp.so.1.0.0) (2 samples, 0.41%)</title><rect x="665" y="468" width="4" height="15" fill="rgb(217,73,36)"/><text x="668.00" y="478.50"></text></g><g><title>0x7f910f4eeeab (libgomp.so.1.0.0) (4 samples, 0.82%)</title><rect x="669" y="468" width="10" height="15" fill="rgb(228,179,31)"/><text x="672.00" y="478.50"></text></g><g><title>0x7f910f4edab9 (libgomp.so.1.0.0) (7 samples, 1.43%)</title><rect x="665" y="452" width="16" height="15" fill="rgb(253,136,7)"/><text x="668.00" y="462.50"></text></g><g><title>0x7f910f4eeead (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="679" y="468" width="2" height="15" fill="rgb(214,50,31)"/><text x="682.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (9 samples, 1.84%)</title><rect x="662" y="196" width="22" height="15" fill="rgb(225,201,42)"/><text x="665.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (9 samples, 1.84%)</title><rect x="662" y="212" width="22" height="15" fill="rgb(237,100,32)"/><text x="665.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (9 samples, 1.84%)</title><rect x="662" y="228" width="22" height="15" fill="rgb(234,107,30)"/><text x="665.00" y="238.50">_..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (8 samples, 1.63%)</title><rect x="665" y="244" width="19" height="15" fill="rgb(210,112,22)"/><text x="668.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (8 samples, 1.63%)</title><rect x="665" y="260" width="19" height="15" fill="rgb(219,8,41)"/><text x="668.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (8 samples, 1.63%)</title><rect x="665" y="276" width="19" height="15" fill="rgb(217,162,54)"/><text x="668.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (8 samples, 1.63%)</title><rect x="665" y="292" width="19" height="15" fill="rgb(253,8,14)"/><text x="668.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (8 samples, 1.63%)</title><rect x="665" y="308" width="19" height="15" fill="rgb(212,206,39)"/><text x="668.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (8 samples, 1.63%)</title><rect x="665" y="324" width="19" height="15" fill="rgb(222,15,37)"/><text x="668.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (8 samples, 1.63%)</title><rect x="665" y="340" width="19" height="15" fill="rgb(233,122,21)"/><text x="668.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (8 samples, 1.63%)</title><rect x="665" y="356" width="19" height="15" fill="rgb(213,55,39)"/><text x="668.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (8 samples, 1.63%)</title><rect x="665" y="372" width="19" height="15" fill="rgb(227,137,10)"/><text x="668.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (8 samples, 1.63%)</title><rect x="665" y="388" width="19" height="15" fill="rgb(237,193,11)"/><text x="668.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (8 samples, 1.63%)</title><rect x="665" y="404" width="19" height="15" fill="rgb(232,219,36)"/><text x="668.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (8 samples, 1.63%)</title><rect x="665" y="420" width="19" height="15" fill="rgb(220,202,6)"/><text x="668.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (8 samples, 1.63%)</title><rect x="665" y="436" width="19" height="15" fill="rgb(248,12,7)"/><text x="668.00" y="446.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="681" y="452" width="3" height="15" fill="rgb(207,193,40)"/><text x="684.00" y="462.50"></text></g><g><title>0x7f910f4ec6e2 (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="681" y="468" width="3" height="15" fill="rgb(229,225,4)"/><text x="684.00" y="478.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.20%)</title><rect x="684" y="228" width="2" height="15" fill="rgb(231,199,13)"/><text x="687.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.20%)</title><rect x="689" y="292" width="2" height="15" fill="rgb(239,54,52)"/><text x="692.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.20%)</title><rect x="689" y="308" width="2" height="15" fill="rgb(253,172,35)"/><text x="692.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.20%)</title><rect x="689" y="324" width="2" height="15" fill="rgb(233,156,19)"/><text x="692.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.20%)</title><rect x="689" y="340" width="2" height="15" fill="rgb(229,139,49)"/><text x="692.00" y="350.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.20%)</title><rect x="689" y="356" width="2" height="15" fill="rgb(222,110,25)"/><text x="692.00" y="366.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:347) (1 samples, 0.20%)</title><rect x="689" y="372" width="2" height="15" fill="rgb(219,91,33)"/><text x="692.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.20%)</title><rect x="691" y="292" width="2" height="15" fill="rgb(237,161,18)"/><text x="694.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.20%)</title><rect x="691" y="308" width="2" height="15" fill="rgb(250,75,12)"/><text x="694.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.20%)</title><rect x="691" y="324" width="2" height="15" fill="rgb(228,161,48)"/><text x="694.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="691" y="340" width="2" height="15" fill="rgb(224,34,25)"/><text x="694.00" y="350.50"></text></g><g><title>0x7f9145529700 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="691" y="356" width="2" height="15" fill="rgb(217,79,31)"/><text x="694.00" y="366.50"></text></g><g><title>0x7f9145526ab9 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="691" y="372" width="2" height="15" fill="rgb(215,51,50)"/><text x="694.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (4 samples, 0.82%)</title><rect x="686" y="228" width="10" height="15" fill="rgb(245,140,9)"/><text x="689.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.61%)</title><rect x="689" y="244" width="7" height="15" fill="rgb(221,227,47)"/><text x="692.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.61%)</title><rect x="689" y="260" width="7" height="15" fill="rgb(215,41,32)"/><text x="692.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.61%)</title><rect x="689" y="276" width="7" height="15" fill="rgb(253,170,30)"/><text x="692.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.20%)</title><rect x="693" y="292" width="3" height="15" fill="rgb(221,14,19)"/><text x="696.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src:759) (1 samples, 0.20%)</title><rect x="693" y="308" width="3" height="15" fill="rgb(213,43,29)"/><text x="696.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:527) (1 samples, 0.20%)</title><rect x="696" y="228" width="2" height="15" fill="rgb(224,39,21)"/><text x="699.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:531) (1 samples, 0.20%)</title><rect x="698" y="228" width="3" height="15" fill="rgb(219,12,34)"/><text x="701.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="698" y="244" width="3" height="15" fill="rgb(240,115,41)"/><text x="701.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="698" y="260" width="3" height="15" fill="rgb(224,172,42)"/><text x="701.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.20%)</title><rect x="698" y="276" width="3" height="15" fill="rgb(215,43,29)"/><text x="701.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.20%)</title><rect x="701" y="292" width="2" height="15" fill="rgb(218,78,24)"/><text x="704.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.20%)</title><rect x="701" y="308" width="2" height="15" fill="rgb(226,28,2)"/><text x="704.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.20%)</title><rect x="701" y="324" width="2" height="15" fill="rgb(238,185,42)"/><text x="704.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.20%)</title><rect x="701" y="340" width="2" height="15" fill="rgb(230,162,19)"/><text x="704.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="701" y="356" width="2" height="15" fill="rgb(211,139,21)"/><text x="704.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1190) (1 samples, 0.20%)</title><rect x="701" y="372" width="2" height="15" fill="rgb(240,217,32)"/><text x="704.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (9 samples, 1.84%)</title><rect x="684" y="196" width="21" height="15" fill="rgb(230,153,21)"/><text x="687.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (9 samples, 1.84%)</title><rect x="684" y="212" width="21" height="15" fill="rgb(216,3,1)"/><text x="687.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (2 samples, 0.41%)</title><rect x="701" y="228" width="4" height="15" fill="rgb(250,186,6)"/><text x="704.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.41%)</title><rect x="701" y="244" width="4" height="15" fill="rgb(226,119,40)"/><text x="704.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.41%)</title><rect x="701" y="260" width="4" height="15" fill="rgb(243,121,18)"/><text x="704.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.41%)</title><rect x="701" y="276" width="4" height="15" fill="rgb(218,211,10)"/><text x="704.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.20%)</title><rect x="703" y="292" width="2" height="15" fill="rgb(218,188,30)"/><text x="706.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.20%)</title><rect x="703" y="308" width="2" height="15" fill="rgb(222,208,15)"/><text x="706.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="703" y="324" width="2" height="15" fill="rgb(245,200,5)"/><text x="706.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (2 samples, 0.41%)</title><rect x="710" y="324" width="5" height="15" fill="rgb(221,168,1)"/><text x="713.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (2 samples, 0.41%)</title><rect x="710" y="340" width="5" height="15" fill="rgb(214,160,5)"/><text x="713.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (1 samples, 0.20%)</title><rect x="715" y="324" width="3" height="15" fill="rgb(222,41,23)"/><text x="718.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.20%)</title><rect x="715" y="340" width="3" height="15" fill="rgb(248,9,44)"/><text x="718.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.20%)</title><rect x="715" y="356" width="3" height="15" fill="rgb(226,19,24)"/><text x="718.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.41%)</title><rect x="718" y="340" width="4" height="15" fill="rgb(235,133,17)"/><text x="721.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.20%)</title><rect x="720" y="356" width="2" height="15" fill="rgb(211,149,36)"/><text x="723.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (4 samples, 0.82%)</title><rect x="718" y="324" width="9" height="15" fill="rgb(210,45,9)"/><text x="721.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.41%)</title><rect x="722" y="340" width="5" height="15" fill="rgb(245,131,31)"/><text x="725.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="725" y="356" width="2" height="15" fill="rgb(222,5,34)"/><text x="728.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="725" y="372" width="2" height="15" fill="rgb(218,187,28)"/><text x="728.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.20%)</title><rect x="725" y="388" width="2" height="15" fill="rgb(209,70,23)"/><text x="728.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.20%)</title><rect x="725" y="404" width="2" height="15" fill="rgb(232,196,11)"/><text x="728.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.20%)</title><rect x="725" y="420" width="2" height="15" fill="rgb(226,201,43)"/><text x="728.00" y="430.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:462) (1 samples, 0.20%)</title><rect x="725" y="436" width="2" height="15" fill="rgb(223,89,14)"/><text x="728.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="730" y="356" width="2" height="15" fill="rgb(253,21,23)"/><text x="733.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="730" y="372" width="2" height="15" fill="rgb(254,167,30)"/><text x="733.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.20%)</title><rect x="730" y="388" width="2" height="15" fill="rgb(219,59,18)"/><text x="733.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.20%)</title><rect x="730" y="404" width="2" height="15" fill="rgb(250,110,26)"/><text x="733.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (44 samples, 8.98%)</title><rect x="628" y="180" width="106" height="15" fill="rgb(254,51,10)"/><text x="631.00" y="190.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (12 samples, 2.45%)</title><rect x="705" y="196" width="29" height="15" fill="rgb(224,124,41)"/><text x="708.00" y="206.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (11 samples, 2.24%)</title><rect x="708" y="212" width="26" height="15" fill="rgb(207,169,32)"/><text x="711.00" y="222.50">_..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (11 samples, 2.24%)</title><rect x="708" y="228" width="26" height="15" fill="rgb(249,139,15)"/><text x="711.00" y="238.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 2.24%)</title><rect x="708" y="244" width="26" height="15" fill="rgb(221,214,13)"/><text x="711.00" y="254.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (11 samples, 2.24%)</title><rect x="708" y="260" width="26" height="15" fill="rgb(244,169,53)"/><text x="711.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (10 samples, 2.04%)</title><rect x="710" y="276" width="24" height="15" fill="rgb(243,3,47)"/><text x="713.00" y="286.50">_..</text></g><g><title>array_clip (methods.c:2381) (10 samples, 2.04%)</title><rect x="710" y="292" width="24" height="15" fill="rgb(227,66,12)"/><text x="713.00" y="302.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 2.04%)</title><rect x="710" y="308" width="24" height="15" fill="rgb(215,75,20)"/><text x="713.00" y="318.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:132) (3 samples, 0.61%)</title><rect x="727" y="324" width="7" height="15" fill="rgb(208,109,42)"/><text x="730.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (2 samples, 0.41%)</title><rect x="730" y="340" width="4" height="15" fill="rgb(251,218,9)"/><text x="733.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="732" y="356" width="2" height="15" fill="rgb(249,12,50)"/><text x="735.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="732" y="372" width="2" height="15" fill="rgb(222,25,1)"/><text x="735.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.20%)</title><rect x="732" y="388" width="2" height="15" fill="rgb(240,67,54)"/><text x="735.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.20%)</title><rect x="732" y="404" width="2" height="15" fill="rgb(236,47,46)"/><text x="735.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.20%)</title><rect x="732" y="420" width="2" height="15" fill="rgb(225,126,17)"/><text x="735.00" y="430.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:726) (1 samples, 0.20%)</title><rect x="732" y="436" width="2" height="15" fill="rgb(241,224,47)"/><text x="735.00" y="446.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.20%)</title><rect x="734" y="180" width="3" height="15" fill="rgb(245,26,54)"/><text x="737.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:18) (53 samples, 10.82%)</title><rect x="614" y="100" width="128" height="15" fill="rgb(252,211,46)"/><text x="617.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (53 samples, 10.82%)</title><rect x="614" y="116" width="128" height="15" fill="rgb(231,12,6)"/><text x="617.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (53 samples, 10.82%)</title><rect x="614" y="132" width="128" height="15" fill="rgb(230,120,21)"/><text x="617.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (53 samples, 10.82%)</title><rect x="614" y="148" width="128" height="15" fill="rgb(221,106,31)"/><text x="617.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (53 samples, 10.82%)</title><rect x="614" y="164" width="128" height="15" fill="rgb(238,28,38)"/><text x="617.00" y="174.50">_run_sequence_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.41%)</title><rect x="737" y="180" width="5" height="15" fill="rgb(222,196,13)"/><text x="740.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.20%)</title><rect x="742" y="164" width="2" height="15" fill="rgb(240,179,3)"/><text x="745.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.20%)</title><rect x="758" y="180" width="3" height="15" fill="rgb(219,7,29)"/><text x="761.00" y="190.50"></text></g><g><title>0x7f914554812b (libc-2.29.so) (1 samples, 0.20%)</title><rect x="785" y="196" width="2" height="15" fill="rgb(208,52,6)"/><text x="788.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (13 samples, 2.65%)</title><rect x="761" y="180" width="31" height="15" fill="rgb(249,41,5)"/><text x="764.00" y="190.50">ru..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.41%)</title><rect x="787" y="196" width="5" height="15" fill="rgb(223,133,2)"/><text x="790.00" y="206.50"></text></g><g><title>0x7f9145528e72 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="807" y="276" width="2" height="15" fill="rgb(225,37,25)"/><text x="810.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (2 samples, 0.41%)</title><rect x="807" y="212" width="4" height="15" fill="rgb(211,62,17)"/><text x="810.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.41%)</title><rect x="807" y="228" width="4" height="15" fill="rgb(205,217,33)"/><text x="810.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (2 samples, 0.41%)</title><rect x="807" y="244" width="4" height="15" fill="rgb(248,49,2)"/><text x="810.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.41%)</title><rect x="807" y="260" width="4" height="15" fill="rgb(232,167,24)"/><text x="810.00" y="270.50"></text></g><g><title>0x7f9145529028 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="809" y="276" width="2" height="15" fill="rgb(222,126,26)"/><text x="812.00" y="286.50"></text></g><g><title>0x7f9145526bc6 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="809" y="292" width="2" height="15" fill="rgb(207,127,47)"/><text x="812.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.20%)</title><rect x="811" y="212" width="3" height="15" fill="rgb(228,92,52)"/><text x="814.00" y="222.50"></text></g><g><title>array_reshape (methods.c:179) (1 samples, 0.20%)</title><rect x="814" y="228" width="2" height="15" fill="rgb(214,152,54)"/><text x="817.00" y="238.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.20%)</title><rect x="816" y="260" width="3" height="15" fill="rgb(212,12,24)"/><text x="819.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (3 samples, 0.61%)</title><rect x="814" y="212" width="7" height="15" fill="rgb(239,115,5)"/><text x="817.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.41%)</title><rect x="816" y="228" width="5" height="15" fill="rgb(240,108,11)"/><text x="819.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.41%)</title><rect x="816" y="244" width="5" height="15" fill="rgb(222,175,15)"/><text x="819.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (1 samples, 0.20%)</title><rect x="819" y="260" width="2" height="15" fill="rgb(215,23,2)"/><text x="822.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.20%)</title><rect x="819" y="276" width="2" height="15" fill="rgb(250,31,3)"/><text x="822.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="819" y="292" width="2" height="15" fill="rgb(222,1,27)"/><text x="822.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.20%)</title><rect x="819" y="308" width="2" height="15" fill="rgb(228,86,31)"/><text x="822.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (7 samples, 1.43%)</title><rect x="807" y="196" width="16" height="15" fill="rgb(248,189,31)"/><text x="810.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.20%)</title><rect x="821" y="212" width="2" height="15" fill="rgb(214,208,22)"/><text x="824.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (1 samples, 0.20%)</title><rect x="823" y="196" width="3" height="15" fill="rgb(209,24,31)"/><text x="826.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.20%)</title><rect x="823" y="212" width="3" height="15" fill="rgb(234,75,18)"/><text x="826.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (1 samples, 0.20%)</title><rect x="823" y="228" width="3" height="15" fill="rgb(247,134,7)"/><text x="826.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (1 samples, 0.20%)</title><rect x="823" y="244" width="3" height="15" fill="rgb(206,175,30)"/><text x="826.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (1 samples, 0.20%)</title><rect x="823" y="260" width="3" height="15" fill="rgb(226,106,47)"/><text x="826.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.20%)</title><rect x="823" y="276" width="3" height="15" fill="rgb(211,78,39)"/><text x="826.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.20%)</title><rect x="823" y="292" width="3" height="15" fill="rgb(247,108,45)"/><text x="826.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.20%)</title><rect x="823" y="308" width="3" height="15" fill="rgb(225,102,23)"/><text x="826.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.20%)</title><rect x="823" y="324" width="3" height="15" fill="rgb(206,157,33)"/><text x="826.00" y="334.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.20%)</title><rect x="823" y="340" width="3" height="15" fill="rgb(232,33,36)"/><text x="826.00" y="350.50"></text></g><g><title>0x7f914553de7a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="823" y="356" width="3" height="15" fill="rgb(251,88,6)"/><text x="826.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="826" y="244" width="2" height="15" fill="rgb(242,86,45)"/><text x="829.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="826" y="260" width="2" height="15" fill="rgb(212,156,20)"/><text x="829.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.20%)</title><rect x="826" y="276" width="2" height="15" fill="rgb(254,44,2)"/><text x="829.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.20%)</title><rect x="826" y="292" width="2" height="15" fill="rgb(244,128,18)"/><text x="829.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.20%)</title><rect x="828" y="308" width="3" height="15" fill="rgb(237,13,49)"/><text x="831.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.20%)</title><rect x="828" y="324" width="3" height="15" fill="rgb(252,96,25)"/><text x="831.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="828" y="340" width="3" height="15" fill="rgb(246,49,5)"/><text x="831.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="828" y="356" width="3" height="15" fill="rgb(237,161,10)"/><text x="831.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:546) (1 samples, 0.20%)</title><rect x="831" y="324" width="2" height="15" fill="rgb(249,25,26)"/><text x="834.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="831" y="340" width="2" height="15" fill="rgb(254,22,53)"/><text x="834.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (4 samples, 0.82%)</title><rect x="826" y="228" width="10" height="15" fill="rgb(228,98,18)"/><text x="829.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.61%)</title><rect x="828" y="244" width="8" height="15" fill="rgb(243,47,48)"/><text x="831.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.61%)</title><rect x="828" y="260" width="8" height="15" fill="rgb(210,159,14)"/><text x="831.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (3 samples, 0.61%)</title><rect x="828" y="276" width="8" height="15" fill="rgb(214,1,28)"/><text x="831.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 0.61%)</title><rect x="828" y="292" width="8" height="15" fill="rgb(228,179,22)"/><text x="831.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.41%)</title><rect x="831" y="308" width="5" height="15" fill="rgb(224,115,10)"/><text x="834.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:548) (1 samples, 0.20%)</title><rect x="833" y="324" width="3" height="15" fill="rgb(235,167,21)"/><text x="836.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="833" y="340" width="3" height="15" fill="rgb(224,90,4)"/><text x="836.00" y="350.50"></text></g><g><title>0x7f9145528fdc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="833" y="356" width="3" height="15" fill="rgb(232,98,28)"/><text x="836.00" y="366.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.20%)</title><rect x="840" y="244" width="3" height="15" fill="rgb(209,199,16)"/><text x="843.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.20%)</title><rect x="855" y="308" width="2" height="15" fill="rgb(232,122,42)"/><text x="858.00" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (4 samples, 0.82%)</title><rect x="852" y="292" width="10" height="15" fill="rgb(249,194,32)"/><text x="855.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (2 samples, 0.41%)</title><rect x="857" y="308" width="5" height="15" fill="rgb(244,205,25)"/><text x="860.00" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.20%)</title><rect x="862" y="292" width="2" height="15" fill="rgb(209,53,37)"/><text x="865.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.20%)</title><rect x="864" y="308" width="3" height="15" fill="rgb(226,226,10)"/><text x="867.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="864" y="324" width="3" height="15" fill="rgb(235,53,19)"/><text x="867.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.20%)</title><rect x="864" y="340" width="3" height="15" fill="rgb(249,125,20)"/><text x="867.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.20%)</title><rect x="864" y="356" width="3" height="15" fill="rgb(246,189,13)"/><text x="867.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="864" y="372" width="3" height="15" fill="rgb(223,104,43)"/><text x="867.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:41) (1 samples, 0.20%)</title><rect x="867" y="388" width="2" height="15" fill="rgb(209,227,30)"/><text x="870.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.41%)</title><rect x="867" y="356" width="5" height="15" fill="rgb(234,19,3)"/><text x="870.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.41%)</title><rect x="867" y="372" width="5" height="15" fill="rgb(212,204,20)"/><text x="870.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.20%)</title><rect x="869" y="388" width="3" height="15" fill="rgb(231,63,25)"/><text x="872.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="869" y="404" width="3" height="15" fill="rgb(208,103,38)"/><text x="872.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.20%)</title><rect x="869" y="420" width="3" height="15" fill="rgb(249,12,33)"/><text x="872.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.20%)</title><rect x="869" y="436" width="3" height="15" fill="rgb(234,11,53)"/><text x="872.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.20%)</title><rect x="869" y="452" width="3" height="15" fill="rgb(221,143,42)"/><text x="872.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="869" y="468" width="3" height="15" fill="rgb(214,17,32)"/><text x="872.00" y="478.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:390) (1 samples, 0.20%)</title><rect x="872" y="372" width="2" height="15" fill="rgb(235,134,3)"/><text x="875.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.41%)</title><rect x="872" y="356" width="4" height="15" fill="rgb(222,109,48)"/><text x="875.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.20%)</title><rect x="874" y="372" width="2" height="15" fill="rgb(220,196,8)"/><text x="877.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.20%)</title><rect x="874" y="388" width="2" height="15" fill="rgb(227,95,17)"/><text x="877.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.20%)</title><rect x="874" y="404" width="2" height="15" fill="rgb(249,176,26)"/><text x="877.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:722) (1 samples, 0.20%)</title><rect x="874" y="420" width="2" height="15" fill="rgb(228,30,30)"/><text x="877.00" y="430.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1071) (1 samples, 0.20%)</title><rect x="876" y="404" width="3" height="15" fill="rgb(228,37,31)"/><text x="879.00" y="414.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.20%)</title><rect x="876" y="420" width="3" height="15" fill="rgb(221,106,43)"/><text x="879.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.41%)</title><rect x="876" y="372" width="5" height="15" fill="rgb(228,9,7)"/><text x="879.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (2 samples, 0.41%)</title><rect x="876" y="388" width="5" height="15" fill="rgb(241,31,44)"/><text x="879.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.20%)</title><rect x="879" y="404" width="2" height="15" fill="rgb(234,113,0)"/><text x="882.00" y="414.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.20%)</title><rect x="879" y="420" width="2" height="15" fill="rgb(224,135,36)"/><text x="882.00" y="430.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.20%)</title><rect x="879" y="436" width="2" height="15" fill="rgb(215,57,35)"/><text x="882.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.20%)</title><rect x="881" y="372" width="3" height="15" fill="rgb(244,191,5)"/><text x="884.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.20%)</title><rect x="881" y="388" width="3" height="15" fill="rgb(240,38,32)"/><text x="884.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.20%)</title><rect x="884" y="372" width="2" height="15" fill="rgb(249,40,20)"/><text x="887.00" y="382.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2269) (1 samples, 0.20%)</title><rect x="884" y="388" width="2" height="15" fill="rgb(237,187,1)"/><text x="887.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (26 samples, 5.31%)</title><rect x="826" y="196" width="62" height="15" fill="rgb(215,40,21)"/><text x="829.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (26 samples, 5.31%)</title><rect x="826" y="212" width="62" height="15" fill="rgb(209,4,1)"/><text x="829.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (22 samples, 4.49%)</title><rect x="836" y="228" width="52" height="15" fill="rgb(238,68,18)"/><text x="839.00" y="238.50">_run ..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (19 samples, 3.88%)</title><rect x="843" y="244" width="45" height="15" fill="rgb(218,134,11)"/><text x="846.00" y="254.50">sum ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (19 samples, 3.88%)</title><rect x="843" y="260" width="45" height="15" fill="rgb(230,5,44)"/><text x="846.00" y="270.50">arra..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (19 samples, 3.88%)</title><rect x="843" y="276" width="45" height="15" fill="rgb(248,143,45)"/><text x="846.00" y="286.50">sum ..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (10 samples, 2.04%)</title><rect x="864" y="292" width="24" height="15" fill="rgb(237,12,21)"/><text x="867.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 1.84%)</title><rect x="867" y="308" width="21" height="15" fill="rgb(216,2,9)"/><text x="870.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 1.84%)</title><rect x="867" y="324" width="21" height="15" fill="rgb(241,108,41)"/><text x="870.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (9 samples, 1.84%)</title><rect x="867" y="340" width="21" height="15" fill="rgb(246,152,14)"/><text x="870.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (5 samples, 1.02%)</title><rect x="876" y="356" width="12" height="15" fill="rgb(221,81,30)"/><text x="879.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.20%)</title><rect x="886" y="372" width="2" height="15" fill="rgb(253,194,49)"/><text x="889.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2558) (1 samples, 0.20%)</title><rect x="886" y="388" width="2" height="15" fill="rgb(247,224,32)"/><text x="889.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.20%)</title><rect x="888" y="196" width="3" height="15" fill="rgb(226,10,9)"/><text x="891.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3275) (1 samples, 0.20%)</title><rect x="888" y="212" width="3" height="15" fill="rgb(235,112,51)"/><text x="891.00" y="222.50"></text></g><g><title>0x7f910f4eeea0 (libgomp.so.1.0.0) (2 samples, 0.41%)</title><rect x="891" y="468" width="5" height="15" fill="rgb(229,181,32)"/><text x="894.00" y="478.50"></text></g><g><title>0x7f910f4eeea9 (libgomp.so.1.0.0) (4 samples, 0.82%)</title><rect x="896" y="468" width="9" height="15" fill="rgb(205,0,37)"/><text x="899.00" y="478.50"></text></g><g><title>0x7f910f4eeeab (libgomp.so.1.0.0) (2 samples, 0.41%)</title><rect x="905" y="468" width="5" height="15" fill="rgb(239,3,48)"/><text x="908.00" y="478.50"></text></g><g><title>0x7f910f4edab9 (libgomp.so.1.0.0) (16 samples, 3.27%)</title><rect x="891" y="452" width="38" height="15" fill="rgb(235,83,46)"/><text x="894.00" y="462.50">0x7..</text></g><g><title>0x7f910f4eeead (libgomp.so.1.0.0) (8 samples, 1.63%)</title><rect x="910" y="468" width="19" height="15" fill="rgb(210,141,22)"/><text x="913.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (17 samples, 3.47%)</title><rect x="891" y="196" width="41" height="15" fill="rgb(246,201,22)"/><text x="894.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (17 samples, 3.47%)</title><rect x="891" y="212" width="41" height="15" fill="rgb(211,113,52)"/><text x="894.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (17 samples, 3.47%)</title><rect x="891" y="228" width="41" height="15" fill="rgb(248,185,51)"/><text x="894.00" y="238.50">_ru..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (17 samples, 3.47%)</title><rect x="891" y="244" width="41" height="15" fill="rgb(205,216,24)"/><text x="894.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (17 samples, 3.47%)</title><rect x="891" y="260" width="41" height="15" fill="rgb(211,78,16)"/><text x="894.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (17 samples, 3.47%)</title><rect x="891" y="276" width="41" height="15" fill="rgb(229,36,20)"/><text x="894.00" y="286.50">voi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (17 samples, 3.47%)</title><rect x="891" y="292" width="41" height="15" fill="rgb(216,85,50)"/><text x="894.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (17 samples, 3.47%)</title><rect x="891" y="308" width="41" height="15" fill="rgb(241,33,10)"/><text x="894.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (17 samples, 3.47%)</title><rect x="891" y="324" width="41" height="15" fill="rgb(233,140,51)"/><text x="894.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (17 samples, 3.47%)</title><rect x="891" y="340" width="41" height="15" fill="rgb(248,26,18)"/><text x="894.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h:538) (17 samples, 3.47%)</title><rect x="891" y="356" width="41" height="15" fill="rgb(208,206,51)"/><text x="894.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (17 samples, 3.47%)</title><rect x="891" y="372" width="41" height="15" fill="rgb(209,132,36)"/><text x="894.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (17 samples, 3.47%)</title><rect x="891" y="388" width="41" height="15" fill="rgb(232,210,45)"/><text x="894.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (17 samples, 3.47%)</title><rect x="891" y="404" width="41" height="15" fill="rgb(222,116,14)"/><text x="894.00" y="414.50">pyb..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (17 samples, 3.47%)</title><rect x="891" y="420" width="41" height="15" fill="rgb(233,60,22)"/><text x="894.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (17 samples, 3.47%)</title><rect x="891" y="436" width="41" height="15" fill="rgb(211,26,2)"/><text x="894.00" y="446.50">pyb..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="929" y="452" width="3" height="15" fill="rgb(221,84,48)"/><text x="932.00" y="462.50"></text></g><g><title>0x7f910f4ecdaa (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="929" y="468" width="3" height="15" fill="rgb(212,208,15)"/><text x="932.00" y="478.50"></text></g><g><title>0x7f910f4eecfb (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="929" y="484" width="3" height="15" fill="rgb(222,173,31)"/><text x="932.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.20%)</title><rect x="932" y="212" width="2" height="15" fill="rgb(231,100,11)"/><text x="935.00" y="222.50"></text></g><g><title>array_size_get (getset.c:439) (1 samples, 0.20%)</title><rect x="941" y="244" width="3" height="15" fill="rgb(236,93,44)"/><text x="944.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (4 samples, 0.82%)</title><rect x="937" y="228" width="9" height="15" fill="rgb(232,98,16)"/><text x="940.00" y="238.50"></text></g><g><title>array_size_get (getset.c:450) (1 samples, 0.20%)</title><rect x="944" y="244" width="2" height="15" fill="rgb(235,12,7)"/><text x="947.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.20%)</title><rect x="944" y="260" width="2" height="15" fill="rgb(222,203,0)"/><text x="947.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.20%)</title><rect x="946" y="228" width="3" height="15" fill="rgb(217,218,49)"/><text x="949.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1194) (1 samples, 0.20%)</title><rect x="946" y="244" width="3" height="15" fill="rgb(223,196,53)"/><text x="949.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="949" y="244" width="2" height="15" fill="rgb(213,164,26)"/><text x="952.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="949" y="260" width="2" height="15" fill="rgb(212,159,14)"/><text x="952.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.20%)</title><rect x="949" y="276" width="2" height="15" fill="rgb(233,137,15)"/><text x="952.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.20%)</title><rect x="949" y="292" width="2" height="15" fill="rgb(251,15,54)"/><text x="952.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="951" y="260" width="3" height="15" fill="rgb(229,102,6)"/><text x="954.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1236) (1 samples, 0.20%)</title><rect x="951" y="276" width="3" height="15" fill="rgb(250,17,43)"/><text x="954.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.20%)</title><rect x="954" y="260" width="2" height="15" fill="rgb(245,98,48)"/><text x="957.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.20%)</title><rect x="954" y="276" width="2" height="15" fill="rgb(252,80,52)"/><text x="957.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.20%)</title><rect x="954" y="292" width="2" height="15" fill="rgb(224,54,18)"/><text x="957.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.20%)</title><rect x="956" y="276" width="2" height="15" fill="rgb(224,140,11)"/><text x="959.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.20%)</title><rect x="956" y="292" width="2" height="15" fill="rgb(214,146,44)"/><text x="959.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.20%)</title><rect x="956" y="308" width="2" height="15" fill="rgb(227,154,5)"/><text x="959.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.20%)</title><rect x="956" y="324" width="2" height="15" fill="rgb(235,182,12)"/><text x="959.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.41%)</title><rect x="956" y="260" width="5" height="15" fill="rgb(236,33,40)"/><text x="959.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.20%)</title><rect x="958" y="276" width="3" height="15" fill="rgb(252,229,6)"/><text x="961.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:237) (1 samples, 0.20%)</title><rect x="958" y="292" width="3" height="15" fill="rgb(215,33,3)"/><text x="961.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.20%)</title><rect x="961" y="260" width="2" height="15" fill="rgb(233,33,6)"/><text x="964.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.20%)</title><rect x="961" y="276" width="2" height="15" fill="rgb(208,77,3)"/><text x="964.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.20%)</title><rect x="963" y="276" width="3" height="15" fill="rgb(241,154,45)"/><text x="966.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.20%)</title><rect x="963" y="292" width="3" height="15" fill="rgb(252,83,13)"/><text x="966.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.20%)</title><rect x="966" y="308" width="2" height="15" fill="rgb(239,111,34)"/><text x="969.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.20%)</title><rect x="966" y="324" width="2" height="15" fill="rgb(240,221,45)"/><text x="969.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.20%)</title><rect x="966" y="340" width="2" height="15" fill="rgb(252,95,3)"/><text x="969.00" y="350.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.20%)</title><rect x="966" y="356" width="2" height="15" fill="rgb(233,141,31)"/><text x="969.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.20%)</title><rect x="968" y="308" width="2" height="15" fill="rgb(238,220,7)"/><text x="971.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.20%)</title><rect x="970" y="308" width="3" height="15" fill="rgb(214,65,16)"/><text x="973.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2918) (1 samples, 0.20%)</title><rect x="973" y="324" width="2" height="15" fill="rgb(210,70,42)"/><text x="976.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (2 samples, 0.41%)</title><rect x="975" y="324" width="5" height="15" fill="rgb(211,187,48)"/><text x="978.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.20%)</title><rect x="978" y="340" width="2" height="15" fill="rgb(220,71,3)"/><text x="981.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.20%)</title><rect x="978" y="356" width="2" height="15" fill="rgb(229,1,45)"/><text x="981.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (7 samples, 1.43%)</title><rect x="966" y="292" width="16" height="15" fill="rgb(253,147,53)"/><text x="969.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (4 samples, 0.82%)</title><rect x="973" y="308" width="9" height="15" fill="rgb(207,160,49)"/><text x="976.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3034) (1 samples, 0.20%)</title><rect x="980" y="324" width="2" height="15" fill="rgb(243,82,0)"/><text x="983.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (15 samples, 3.06%)</title><rect x="949" y="228" width="36" height="15" fill="rgb(251,136,14)"/><text x="952.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 2.86%)</title><rect x="951" y="244" width="34" height="15" fill="rgb(224,210,31)"/><text x="954.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 1.84%)</title><rect x="963" y="260" width="22" height="15" fill="rgb(254,25,18)"/><text x="966.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 1.63%)</title><rect x="966" y="276" width="19" height="15" fill="rgb(254,54,19)"/><text x="969.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1574) (1 samples, 0.20%)</title><rect x="982" y="292" width="3" height="15" fill="rgb(232,153,34)"/><text x="985.00" y="302.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1222) (1 samples, 0.20%)</title><rect x="982" y="308" width="3" height="15" fill="rgb(215,187,51)"/><text x="985.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:524) (1 samples, 0.20%)</title><rect x="985" y="228" width="2" height="15" fill="rgb(252,25,54)"/><text x="988.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:528) (1 samples, 0.20%)</title><rect x="987" y="228" width="3" height="15" fill="rgb(240,7,49)"/><text x="990.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.20%)</title><rect x="990" y="292" width="2" height="15" fill="rgb(250,26,54)"/><text x="993.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.20%)</title><rect x="990" y="308" width="2" height="15" fill="rgb(249,103,16)"/><text x="993.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="990" y="324" width="2" height="15" fill="rgb(242,212,46)"/><text x="993.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.20%)</title><rect x="992" y="292" width="2" height="15" fill="rgb(227,18,24)"/><text x="995.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.20%)</title><rect x="992" y="308" width="2" height="15" fill="rgb(237,44,39)"/><text x="995.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1698) (1 samples, 0.20%)</title><rect x="992" y="324" width="2" height="15" fill="rgb(228,129,18)"/><text x="995.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (27 samples, 5.51%)</title><rect x="932" y="196" width="65" height="15" fill="rgb(246,165,34)"/><text x="935.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (26 samples, 5.31%)</title><rect x="934" y="212" width="63" height="15" fill="rgb(212,92,33)"/><text x="937.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (3 samples, 0.61%)</title><rect x="990" y="228" width="7" height="15" fill="rgb(246,163,39)"/><text x="993.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.61%)</title><rect x="990" y="244" width="7" height="15" fill="rgb(229,206,9)"/><text x="993.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.61%)</title><rect x="990" y="260" width="7" height="15" fill="rgb(252,215,32)"/><text x="993.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.61%)</title><rect x="990" y="276" width="7" height="15" fill="rgb(239,36,25)"/><text x="993.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.20%)</title><rect x="994" y="292" width="3" height="15" fill="rgb(219,14,48)"/><text x="997.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:673) (1 samples, 0.20%)</title><rect x="994" y="308" width="3" height="15" fill="rgb(230,33,54)"/><text x="997.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (2 samples, 0.41%)</title><rect x="997" y="196" width="5" height="15" fill="rgb(224,107,31)"/><text x="1000.00" y="206.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.20%)</title><rect x="1011" y="228" width="3" height="15" fill="rgb(230,88,52)"/><text x="1014.00" y="238.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.20%)</title><rect x="1023" y="340" width="3" height="15" fill="rgb(252,81,28)"/><text x="1026.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (2 samples, 0.41%)</title><rect x="1023" y="324" width="5" height="15" fill="rgb(206,189,16)"/><text x="1026.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.20%)</title><rect x="1026" y="340" width="2" height="15" fill="rgb(217,83,6)"/><text x="1029.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (6 samples, 1.22%)</title><rect x="1028" y="324" width="15" height="15" fill="rgb(227,182,45)"/><text x="1031.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (6 samples, 1.22%)</title><rect x="1028" y="340" width="15" height="15" fill="rgb(207,41,27)"/><text x="1031.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 0.82%)</title><rect x="1033" y="356" width="10" height="15" fill="rgb(248,91,8)"/><text x="1036.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.20%)</title><rect x="1043" y="340" width="2" height="15" fill="rgb(233,118,0)"/><text x="1046.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.20%)</title><rect x="1045" y="388" width="2" height="15" fill="rgb(235,48,47)"/><text x="1048.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.41%)</title><rect x="1045" y="340" width="5" height="15" fill="rgb(232,0,39)"/><text x="1048.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.41%)</title><rect x="1045" y="356" width="5" height="15" fill="rgb(245,137,12)"/><text x="1048.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.41%)</title><rect x="1045" y="372" width="5" height="15" fill="rgb(206,141,3)"/><text x="1048.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.20%)</title><rect x="1047" y="388" width="3" height="15" fill="rgb(249,80,6)"/><text x="1050.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.20%)</title><rect x="1047" y="404" width="3" height="15" fill="rgb(217,180,12)"/><text x="1050.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.20%)</title><rect x="1047" y="420" width="3" height="15" fill="rgb(218,117,28)"/><text x="1050.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.20%)</title><rect x="1047" y="436" width="3" height="15" fill="rgb(224,196,36)"/><text x="1050.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1901) (1 samples, 0.20%)</title><rect x="1047" y="452" width="3" height="15" fill="rgb(252,114,32)"/><text x="1050.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="1050" y="372" width="2" height="15" fill="rgb(236,217,22)"/><text x="1053.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.20%)</title><rect x="1050" y="388" width="2" height="15" fill="rgb(219,223,3)"/><text x="1053.00" y="398.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1762) (1 samples, 0.20%)</title><rect x="1050" y="404" width="2" height="15" fill="rgb(216,223,2)"/><text x="1053.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.20%)</title><rect x="1050" y="420" width="2" height="15" fill="rgb(247,65,41)"/><text x="1053.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.41%)</title><rect x="1050" y="356" width="5" height="15" fill="rgb(236,213,40)"/><text x="1053.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3308) (1 samples, 0.20%)</title><rect x="1052" y="372" width="3" height="15" fill="rgb(236,102,29)"/><text x="1055.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (6 samples, 1.22%)</title><rect x="1043" y="324" width="14" height="15" fill="rgb(210,143,50)"/><text x="1046.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.61%)</title><rect x="1050" y="340" width="7" height="15" fill="rgb(217,13,32)"/><text x="1053.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.20%)</title><rect x="1055" y="356" width="2" height="15" fill="rgb(207,67,49)"/><text x="1058.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.20%)</title><rect x="1062" y="356" width="2" height="15" fill="rgb(218,126,50)"/><text x="1065.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="1062" y="372" width="2" height="15" fill="rgb(208,98,9)"/><text x="1065.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.20%)</title><rect x="1062" y="388" width="2" height="15" fill="rgb(245,219,8)"/><text x="1065.00" y="398.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.20%)</title><rect x="1064" y="388" width="3" height="15" fill="rgb(207,115,47)"/><text x="1067.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.41%)</title><rect x="1064" y="372" width="5" height="15" fill="rgb(218,101,36)"/><text x="1067.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.20%)</title><rect x="1067" y="388" width="2" height="15" fill="rgb(214,226,14)"/><text x="1070.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.20%)</title><rect x="1067" y="404" width="2" height="15" fill="rgb(209,25,15)"/><text x="1070.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1024) (1 samples, 0.20%)</title><rect x="1067" y="420" width="2" height="15" fill="rgb(216,29,16)"/><text x="1070.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="1069" y="372" width="3" height="15" fill="rgb(213,134,2)"/><text x="1072.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.20%)</title><rect x="1069" y="388" width="3" height="15" fill="rgb(216,32,51)"/><text x="1072.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.20%)</title><rect x="1069" y="404" width="3" height="15" fill="rgb(217,56,36)"/><text x="1072.00" y="414.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.20%)</title><rect x="1069" y="420" width="3" height="15" fill="rgb(226,28,22)"/><text x="1072.00" y="430.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.20%)</title><rect x="1069" y="436" width="3" height="15" fill="rgb(215,25,54)"/><text x="1072.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.20%)</title><rect x="1072" y="420" width="2" height="15" fill="rgb(232,33,19)"/><text x="1075.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.20%)</title><rect x="1072" y="436" width="2" height="15" fill="rgb(242,89,2)"/><text x="1075.00" y="446.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1082) (1 samples, 0.20%)</title><rect x="1072" y="452" width="2" height="15" fill="rgb(225,151,44)"/><text x="1075.00" y="462.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.41%)</title><rect x="1072" y="404" width="4" height="15" fill="rgb(209,229,22)"/><text x="1075.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.20%)</title><rect x="1074" y="420" width="2" height="15" fill="rgb(212,78,11)"/><text x="1077.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3218) (1 samples, 0.20%)</title><rect x="1074" y="436" width="2" height="15" fill="rgb(224,3,3)"/><text x="1077.00" y="446.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3687) (1 samples, 0.20%)</title><rect x="1074" y="452" width="2" height="15" fill="rgb(236,177,52)"/><text x="1077.00" y="462.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.20%)</title><rect x="1076" y="420" width="3" height="15" fill="rgb(233,142,2)"/><text x="1079.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1698) (1 samples, 0.20%)</title><rect x="1076" y="436" width="3" height="15" fill="rgb(218,80,8)"/><text x="1079.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.41%)</title><rect x="1076" y="404" width="5" height="15" fill="rgb(234,128,38)"/><text x="1079.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.20%)</title><rect x="1079" y="420" width="2" height="15" fill="rgb(211,39,36)"/><text x="1082.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.20%)</title><rect x="1079" y="436" width="2" height="15" fill="rgb(253,115,31)"/><text x="1082.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.63%)</title><rect x="1064" y="356" width="20" height="15" fill="rgb(221,53,42)"/><text x="1067.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.02%)</title><rect x="1072" y="372" width="12" height="15" fill="rgb(227,81,15)"/><text x="1075.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.02%)</title><rect x="1072" y="388" width="12" height="15" fill="rgb(242,104,13)"/><text x="1075.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1573) (1 samples, 0.20%)</title><rect x="1081" y="404" width="3" height="15" fill="rgb(252,11,26)"/><text x="1084.00" y="414.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1039) (1 samples, 0.20%)</title><rect x="1081" y="420" width="3" height="15" fill="rgb(217,33,38)"/><text x="1084.00" y="430.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="1084" y="372" width="2" height="15" fill="rgb(222,134,34)"/><text x="1087.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="1084" y="388" width="2" height="15" fill="rgb(222,163,28)"/><text x="1087.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.20%)</title><rect x="1084" y="404" width="2" height="15" fill="rgb(219,59,51)"/><text x="1087.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (123 samples, 25.10%)</title><rect x="792" y="180" width="296" height="15" fill="rgb(228,72,39)"/><text x="795.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_no..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (36 samples, 7.35%)</title><rect x="1002" y="196" width="86" height="15" fill="rgb(233,214,14)"/><text x="1005.00" y="206.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (35 samples, 7.14%)</title><rect x="1004" y="212" width="84" height="15" fill="rgb(214,181,23)"/><text x="1007.00" y="222.50">_run (mlp..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (31 samples, 6.33%)</title><rect x="1014" y="228" width="74" height="15" fill="rgb(215,43,52)"/><text x="1017.00" y="238.50">clip (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (31 samples, 6.33%)</title><rect x="1014" y="244" width="74" height="15" fill="rgb(238,204,33)"/><text x="1017.00" y="254.50">array_im..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (30 samples, 6.12%)</title><rect x="1016" y="260" width="72" height="15" fill="rgb(232,31,1)"/><text x="1019.00" y="270.50">clip (nu..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (28 samples, 5.71%)</title><rect x="1021" y="276" width="67" height="15" fill="rgb(249,211,48)"/><text x="1024.00" y="286.50">_wrapfu..</text></g><g><title>array_clip (methods.c:2381) (28 samples, 5.71%)</title><rect x="1021" y="292" width="67" height="15" fill="rgb(246,43,50)"/><text x="1024.00" y="302.50">array_c..</text></g><g><title>forward_ndarray_method (methods.c:108) (28 samples, 5.71%)</title><rect x="1021" y="308" width="67" height="15" fill="rgb(235,228,36)"/><text x="1024.00" y="318.50">forward..</text></g><g><title>_clip (numpy/core/_methods.py:132) (13 samples, 2.65%)</title><rect x="1057" y="324" width="31" height="15" fill="rgb(236,148,22)"/><text x="1060.00" y="334.50">_c..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (12 samples, 2.45%)</title><rect x="1059" y="340" width="29" height="15" fill="rgb(235,17,8)"/><text x="1062.00" y="350.50">_c..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (2 samples, 0.41%)</title><rect x="1084" y="356" width="4" height="15" fill="rgb(248,187,37)"/><text x="1087.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.20%)</title><rect x="1086" y="372" width="2" height="15" fill="rgb(212,161,44)"/><text x="1089.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1086" y="388" width="2" height="15" fill="rgb(248,198,47)"/><text x="1089.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 0.61%)</title><rect x="1088" y="180" width="8" height="15" fill="rgb(254,78,45)"/><text x="1091.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.41%)</title><rect x="1096" y="180" width="4" height="15" fill="rgb(205,223,13)"/><text x="1099.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (12 samples, 2.45%)</title><rect x="1100" y="180" width="29" height="15" fill="rgb(232,20,22)"/><text x="1103.00" y="190.50">ru..</text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:45) (219 samples, 44.69%)</title><rect x="609" y="52" width="528" height="15" fill="rgb(210,83,36)"/><text x="612.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:45)</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:44) (219 samples, 44.69%)</title><rect x="609" y="68" width="528" height="15" fill="rgb(211,179,47)"/><text x="612.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:29) (217 samples, 44.29%)</title><rect x="614" y="84" width="523" height="15" fill="rgb(225,127,14)"/><text x="617.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_...</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:23) (164 samples, 33.47%)</title><rect x="742" y="100" width="395" height="15" fill="rgb(209,228,17)"/><text x="745.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1_5..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (164 samples, 33.47%)</title><rect x="742" y="116" width="395" height="15" fill="rgb(231,225,27)"/><text x="745.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (164 samples, 33.47%)</title><rect x="742" y="132" width="395" height="15" fill="rgb(239,191,52)"/><text x="745.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:2..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (164 samples, 33.47%)</title><rect x="742" y="148" width="395" height="15" fill="rgb(213,65,41)"/><text x="745.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (163 samples, 33.27%)</title><rect x="744" y="164" width="393" height="15" fill="rgb(232,223,25)"/><text x="747.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (3 samples, 0.61%)</title><rect x="1129" y="180" width="8" height="15" fill="rgb(251,15,26)"/><text x="1132.00" y="190.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.20%)</title><rect x="1137" y="116" width="2" height="15" fill="rgb(222,146,21)"/><text x="1140.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.20%)</title><rect x="1137" y="132" width="2" height="15" fill="rgb(215,87,46)"/><text x="1140.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.20%)</title><rect x="1137" y="148" width="2" height="15" fill="rgb(232,121,30)"/><text x="1140.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.20%)</title><rect x="1137" y="164" width="2" height="15" fill="rgb(240,176,24)"/><text x="1140.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.20%)</title><rect x="1137" y="180" width="2" height="15" fill="rgb(231,139,6)"/><text x="1140.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (1 samples, 0.20%)</title><rect x="1137" y="196" width="2" height="15" fill="rgb(215,78,7)"/><text x="1140.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.20%)</title><rect x="1137" y="212" width="2" height="15" fill="rgb(214,202,33)"/><text x="1140.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.20%)</title><rect x="1137" y="228" width="2" height="15" fill="rgb(239,4,18)"/><text x="1140.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1137" y="244" width="2" height="15" fill="rgb(248,36,47)"/><text x="1140.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.20%)</title><rect x="1137" y="260" width="2" height="15" fill="rgb(245,89,37)"/><text x="1140.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:140) (1 samples, 0.20%)</title><rect x="1137" y="276" width="2" height="15" fill="rgb(217,21,54)"/><text x="1140.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:140) (1 samples, 0.20%)</title><rect x="1137" y="292" width="2" height="15" fill="rgb(253,207,42)"/><text x="1140.00" y="302.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:28) (2 samples, 0.41%)</title><rect x="1137" y="84" width="4" height="15" fill="rgb(205,181,39)"/><text x="1140.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.41%)</title><rect x="1137" y="100" width="4" height="15" fill="rgb(253,120,8)"/><text x="1140.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.20%)</title><rect x="1139" y="116" width="2" height="15" fill="rgb(209,211,8)"/><text x="1142.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.20%)</title><rect x="1139" y="132" width="2" height="15" fill="rgb(217,200,5)"/><text x="1142.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.20%)</title><rect x="1139" y="148" width="2" height="15" fill="rgb(225,11,17)"/><text x="1142.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.20%)</title><rect x="1139" y="164" width="2" height="15" fill="rgb(218,61,1)"/><text x="1142.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="1139" y="180" width="2" height="15" fill="rgb(250,51,24)"/><text x="1142.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="1139" y="196" width="2" height="15" fill="rgb(240,50,49)"/><text x="1142.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="1139" y="212" width="2" height="15" fill="rgb(215,116,26)"/><text x="1142.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="1139" y="228" width="2" height="15" fill="rgb(229,46,22)"/><text x="1142.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="1139" y="244" width="2" height="15" fill="rgb(250,99,41)"/><text x="1142.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.20%)</title><rect x="1139" y="260" width="2" height="15" fill="rgb(230,39,7)"/><text x="1142.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="1139" y="276" width="2" height="15" fill="rgb(224,104,23)"/><text x="1142.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="1139" y="292" width="2" height="15" fill="rgb(229,60,9)"/><text x="1142.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="1139" y="308" width="2" height="15" fill="rgb(232,161,12)"/><text x="1142.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="1139" y="324" width="2" height="15" fill="rgb(225,167,5)"/><text x="1142.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="1139" y="340" width="2" height="15" fill="rgb(223,183,35)"/><text x="1142.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.20%)</title><rect x="1139" y="356" width="2" height="15" fill="rgb(219,91,26)"/><text x="1142.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="1139" y="372" width="2" height="15" fill="rgb(239,27,48)"/><text x="1142.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="1139" y="388" width="2" height="15" fill="rgb(227,115,6)"/><text x="1142.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="1139" y="404" width="2" height="15" fill="rgb(213,173,50)"/><text x="1142.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="1139" y="420" width="2" height="15" fill="rgb(239,77,54)"/><text x="1142.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="1139" y="436" width="2" height="15" fill="rgb(234,170,1)"/><text x="1142.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.20%)</title><rect x="1139" y="452" width="2" height="15" fill="rgb(217,93,24)"/><text x="1142.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="1139" y="468" width="2" height="15" fill="rgb(252,85,51)"/><text x="1142.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="1139" y="484" width="2" height="15" fill="rgb(214,27,5)"/><text x="1142.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.20%)</title><rect x="1139" y="500" width="2" height="15" fill="rgb(245,161,50)"/><text x="1142.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.20%)</title><rect x="1139" y="516" width="2" height="15" fill="rgb(223,63,20)"/><text x="1142.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.20%)</title><rect x="1139" y="532" width="2" height="15" fill="rgb(226,200,12)"/><text x="1142.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="1139" y="548" width="2" height="15" fill="rgb(212,219,0)"/><text x="1142.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="1139" y="564" width="2" height="15" fill="rgb(226,71,14)"/><text x="1142.00" y="574.50"></text></g><g><title>0x7f91457af995 (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="1139" y="580" width="2" height="15" fill="rgb(212,51,47)"/><text x="1142.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1139" y="596" width="2" height="15" fill="rgb(224,25,1)"/><text x="1142.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1139" y="612" width="2" height="15" fill="rgb(252,218,20)"/><text x="1142.00" y="622.50"></text></g><g><title>0x7f91457af258 (libdl-2.29.so) (1 samples, 0.20%)</title><rect x="1139" y="628" width="2" height="15" fill="rgb(238,50,17)"/><text x="1142.00" y="638.50"></text></g><g><title>0x7f91457fcd7a (ld-2.29.so) (1 samples, 0.20%)</title><rect x="1139" y="644" width="2" height="15" fill="rgb(240,13,11)"/><text x="1142.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1139" y="660" width="2" height="15" fill="rgb(243,94,11)"/><text x="1142.00" y="670.50"></text></g><g><title>0x7f91457fd345 (ld-2.29.so) (1 samples, 0.20%)</title><rect x="1139" y="676" width="2" height="15" fill="rgb(210,90,47)"/><text x="1142.00" y="686.50"></text></g><g><title>0x7f91457f5fec (ld-2.29.so) (1 samples, 0.20%)</title><rect x="1139" y="692" width="2" height="15" fill="rgb(247,199,33)"/><text x="1142.00" y="702.50"></text></g><g><title>0x7f91457f448e (ld-2.29.so) (1 samples, 0.20%)</title><rect x="1139" y="708" width="2" height="15" fill="rgb(213,82,50)"/><text x="1142.00" y="718.50"></text></g><g><title>0x7f91051e5ff9 (?) (1 samples, 0.20%)</title><rect x="1141" y="212" width="3" height="15" fill="rgb(205,52,19)"/><text x="1144.00" y="222.50"></text></g><g><title>0x7f91051e0ef6 (?) (1 samples, 0.20%)</title><rect x="1141" y="228" width="3" height="15" fill="rgb(231,86,42)"/><text x="1144.00" y="238.50"></text></g><g><title>0x7f91051d5962 (?) (1 samples, 0.20%)</title><rect x="1141" y="244" width="3" height="15" fill="rgb(249,49,10)"/><text x="1144.00" y="254.50"></text></g><g><title>0x7f91052097a7 (?) (1 samples, 0.20%)</title><rect x="1141" y="260" width="3" height="15" fill="rgb(207,65,32)"/><text x="1144.00" y="270.50"></text></g><g><title>0x7f9105209379 (?) (1 samples, 0.20%)</title><rect x="1141" y="276" width="3" height="15" fill="rgb(252,96,50)"/><text x="1144.00" y="286.50"></text></g><g><title>0x7f91056678b8 (?) (1 samples, 0.20%)</title><rect x="1141" y="292" width="3" height="15" fill="rgb(215,211,54)"/><text x="1144.00" y="302.50"></text></g><g><title>0x7f9105665c7f (?) (1 samples, 0.20%)</title><rect x="1141" y="308" width="3" height="15" fill="rgb(231,55,22)"/><text x="1144.00" y="318.50"></text></g><g><title>0x7f91056782e5 (?) (1 samples, 0.20%)</title><rect x="1141" y="324" width="3" height="15" fill="rgb(240,92,10)"/><text x="1144.00" y="334.50"></text></g><g><title>0x7f91056201af (?) (1 samples, 0.20%)</title><rect x="1141" y="340" width="3" height="15" fill="rgb(243,227,47)"/><text x="1144.00" y="350.50"></text></g><g><title>0x7f910561bfb1 (?) (1 samples, 0.20%)</title><rect x="1141" y="356" width="3" height="15" fill="rgb(245,132,48)"/><text x="1144.00" y="366.50"></text></g><g><title>0x7f910561bd91 (?) (1 samples, 0.20%)</title><rect x="1141" y="372" width="3" height="15" fill="rgb(210,34,27)"/><text x="1144.00" y="382.50"></text></g><g><title>0x7f9105565ca7 (?) (1 samples, 0.20%)</title><rect x="1141" y="388" width="3" height="15" fill="rgb(213,48,44)"/><text x="1144.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="1141" y="404" width="3" height="15" fill="rgb(227,187,23)"/><text x="1144.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1141" y="420" width="3" height="15" fill="rgb(235,8,24)"/><text x="1144.00" y="430.50"></text></g><g><title>0x7f9145529028 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1141" y="436" width="3" height="15" fill="rgb(223,14,22)"/><text x="1144.00" y="446.50"></text></g><g><title>0x7f9145526bd6 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1141" y="452" width="3" height="15" fill="rgb(231,10,17)"/><text x="1144.00" y="462.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1144" y="340" width="2" height="15" fill="rgb(224,101,54)"/><text x="1147.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1144" y="356" width="2" height="15" fill="rgb(217,69,23)"/><text x="1147.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1144" y="372" width="2" height="15" fill="rgb(232,150,47)"/><text x="1147.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1144" y="388" width="2" height="15" fill="rgb(228,91,38)"/><text x="1147.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1144" y="404" width="2" height="15" fill="rgb(206,187,27)"/><text x="1147.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1144" y="420" width="2" height="15" fill="rgb(205,32,43)"/><text x="1147.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1144" y="436" width="2" height="15" fill="rgb(212,118,54)"/><text x="1147.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1144" y="452" width="2" height="15" fill="rgb(225,166,41)"/><text x="1147.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1144" y="468" width="2" height="15" fill="rgb(241,115,12)"/><text x="1147.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1144" y="484" width="2" height="15" fill="rgb(226,149,49)"/><text x="1147.00" y="494.50"></text></g><g><title>0x7f91455366db (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1144" y="500" width="2" height="15" fill="rgb(244,111,14)"/><text x="1147.00" y="510.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1146" y="340" width="3" height="15" fill="rgb(243,115,10)"/><text x="1149.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1146" y="356" width="3" height="15" fill="rgb(237,98,52)"/><text x="1149.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1146" y="372" width="3" height="15" fill="rgb(247,33,5)"/><text x="1149.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1146" y="388" width="3" height="15" fill="rgb(232,12,52)"/><text x="1149.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1146" y="404" width="3" height="15" fill="rgb(234,26,14)"/><text x="1149.00" y="414.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:18) (4 samples, 0.82%)</title><rect x="1141" y="100" width="10" height="15" fill="rgb(234,72,21)"/><text x="1144.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.82%)</title><rect x="1141" y="116" width="10" height="15" fill="rgb(245,114,10)"/><text x="1144.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (4 samples, 0.82%)</title><rect x="1141" y="132" width="10" height="15" fill="rgb(233,180,36)"/><text x="1144.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (4 samples, 0.82%)</title><rect x="1141" y="148" width="10" height="15" fill="rgb(237,29,22)"/><text x="1144.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (4 samples, 0.82%)</title><rect x="1141" y="164" width="10" height="15" fill="rgb(216,188,44)"/><text x="1144.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (4 samples, 0.82%)</title><rect x="1141" y="180" width="10" height="15" fill="rgb(253,184,30)"/><text x="1144.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (4 samples, 0.82%)</title><rect x="1141" y="196" width="10" height="15" fill="rgb(231,223,46)"/><text x="1144.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.61%)</title><rect x="1144" y="212" width="7" height="15" fill="rgb(249,165,33)"/><text x="1147.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.61%)</title><rect x="1144" y="228" width="7" height="15" fill="rgb(218,121,19)"/><text x="1147.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.61%)</title><rect x="1144" y="244" width="7" height="15" fill="rgb(230,166,46)"/><text x="1147.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.61%)</title><rect x="1144" y="260" width="7" height="15" fill="rgb(235,126,45)"/><text x="1147.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.61%)</title><rect x="1144" y="276" width="7" height="15" fill="rgb(239,22,45)"/><text x="1147.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.61%)</title><rect x="1144" y="292" width="7" height="15" fill="rgb(225,124,31)"/><text x="1147.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.61%)</title><rect x="1144" y="308" width="7" height="15" fill="rgb(242,103,9)"/><text x="1147.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.61%)</title><rect x="1144" y="324" width="7" height="15" fill="rgb(252,39,13)"/><text x="1147.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1149" y="340" width="2" height="15" fill="rgb(218,96,11)"/><text x="1152.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1149" y="356" width="2" height="15" fill="rgb(211,118,6)"/><text x="1152.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1149" y="372" width="2" height="15" fill="rgb(237,5,11)"/><text x="1152.00" y="382.50"></text></g><g><title>0x7f9145527bd8 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1149" y="388" width="2" height="15" fill="rgb(216,167,19)"/><text x="1152.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1153" y="340" width="3" height="15" fill="rgb(206,83,43)"/><text x="1156.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1153" y="356" width="3" height="15" fill="rgb(212,0,25)"/><text x="1156.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1153" y="372" width="3" height="15" fill="rgb(233,105,17)"/><text x="1156.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1153" y="388" width="3" height="15" fill="rgb(234,35,5)"/><text x="1156.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.61%)</title><rect x="1156" y="340" width="7" height="15" fill="rgb(248,78,21)"/><text x="1159.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.61%)</title><rect x="1156" y="356" width="7" height="15" fill="rgb(228,36,27)"/><text x="1159.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.61%)</title><rect x="1156" y="372" width="7" height="15" fill="rgb(247,14,6)"/><text x="1159.00" y="382.50"></text></g><g><title>0x7f9145527a4f (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1161" y="388" width="2" height="15" fill="rgb(219,86,51)"/><text x="1164.00" y="398.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1163" y="340" width="2" height="15" fill="rgb(236,23,11)"/><text x="1166.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1163" y="356" width="2" height="15" fill="rgb(225,163,47)"/><text x="1166.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1163" y="372" width="2" height="15" fill="rgb(206,195,14)"/><text x="1166.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1163" y="388" width="2" height="15" fill="rgb(233,189,40)"/><text x="1166.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1163" y="404" width="2" height="15" fill="rgb(210,67,24)"/><text x="1166.00" y="414.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1165" y="372" width="3" height="15" fill="rgb(213,160,45)"/><text x="1168.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1168" y="372" width="2" height="15" fill="rgb(232,36,53)"/><text x="1171.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1170" y="468" width="3" height="15" fill="rgb(211,223,24)"/><text x="1173.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="1170" y="484" width="3" height="15" fill="rgb(217,179,46)"/><text x="1173.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1170" y="500" width="3" height="15" fill="rgb(234,18,3)"/><text x="1173.00" y="510.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.82%)</title><rect x="1165" y="340" width="10" height="15" fill="rgb(219,67,38)"/><text x="1168.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.82%)</title><rect x="1165" y="356" width="10" height="15" fill="rgb(252,0,23)"/><text x="1168.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.41%)</title><rect x="1170" y="372" width="5" height="15" fill="rgb(223,55,52)"/><text x="1173.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.41%)</title><rect x="1170" y="388" width="5" height="15" fill="rgb(230,101,42)"/><text x="1173.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.41%)</title><rect x="1170" y="404" width="5" height="15" fill="rgb(228,169,52)"/><text x="1173.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.41%)</title><rect x="1170" y="420" width="5" height="15" fill="rgb(252,109,43)"/><text x="1173.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.41%)</title><rect x="1170" y="436" width="5" height="15" fill="rgb(213,203,17)"/><text x="1173.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.41%)</title><rect x="1170" y="452" width="5" height="15" fill="rgb(222,105,43)"/><text x="1173.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1173" y="468" width="2" height="15" fill="rgb(223,53,9)"/><text x="1176.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1173" y="484" width="2" height="15" fill="rgb(253,37,2)"/><text x="1176.00" y="494.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1173" y="500" width="2" height="15" fill="rgb(247,199,42)"/><text x="1176.00" y="510.50"></text></g><g><title>0x7f91455366c2 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1173" y="516" width="2" height="15" fill="rgb(207,54,37)"/><text x="1176.00" y="526.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1175" y="340" width="2" height="15" fill="rgb(223,123,53)"/><text x="1178.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1175" y="356" width="2" height="15" fill="rgb(236,140,50)"/><text x="1178.00" y="366.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1177" y="340" width="3" height="15" fill="rgb(254,191,1)"/><text x="1180.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1177" y="356" width="3" height="15" fill="rgb(253,94,15)"/><text x="1180.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1177" y="372" width="3" height="15" fill="rgb(207,130,38)"/><text x="1180.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1177" y="388" width="3" height="15" fill="rgb(253,17,49)"/><text x="1180.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1177" y="404" width="3" height="15" fill="rgb(222,65,39)"/><text x="1180.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1177" y="420" width="3" height="15" fill="rgb(239,171,54)"/><text x="1180.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1177" y="436" width="3" height="15" fill="rgb(206,121,44)"/><text x="1180.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1177" y="452" width="3" height="15" fill="rgb(247,116,27)"/><text x="1180.00" y="462.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1177" y="468" width="3" height="15" fill="rgb(236,187,38)"/><text x="1180.00" y="478.50"></text></g><g><title>0x7f91455366a0 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1177" y="484" width="3" height="15" fill="rgb(252,26,9)"/><text x="1180.00" y="494.50"></text></g><g><title>0x7f914552799b (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1180" y="356" width="2" height="15" fill="rgb(250,219,32)"/><text x="1183.00" y="366.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.61%)</title><rect x="1180" y="340" width="7" height="15" fill="rgb(222,110,26)"/><text x="1183.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.41%)</title><rect x="1182" y="356" width="5" height="15" fill="rgb(212,218,12)"/><text x="1185.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.41%)</title><rect x="1182" y="372" width="5" height="15" fill="rgb(211,215,52)"/><text x="1185.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="388" width="2" height="15" fill="rgb(213,218,32)"/><text x="1188.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="404" width="2" height="15" fill="rgb(226,73,21)"/><text x="1188.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="420" width="2" height="15" fill="rgb(215,46,50)"/><text x="1188.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1185" y="436" width="2" height="15" fill="rgb(244,17,48)"/><text x="1188.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="1185" y="452" width="2" height="15" fill="rgb(237,172,20)"/><text x="1188.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1185" y="468" width="2" height="15" fill="rgb(244,28,17)"/><text x="1188.00" y="478.50"></text></g><g><title>0x7f914552906d (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1185" y="484" width="2" height="15" fill="rgb(210,107,37)"/><text x="1188.00" y="494.50"></text></g><g><title>all (490 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(211,199,12)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:52) (22 samples, 4.49%)</title><rect x="1137" y="52" width="53" height="15" fill="rgb(239,220,12)"/><text x="1140.00" y="62.50">&lt;modu..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:51) (22 samples, 4.49%)</title><rect x="1137" y="68" width="53" height="15" fill="rgb(220,135,44)"/><text x="1140.00" y="78.50">profi..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:29) (20 samples, 4.08%)</title><rect x="1141" y="84" width="49" height="15" fill="rgb(227,53,43)"/><text x="1144.00" y="94.50">setu..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py:23) (16 samples, 3.27%)</title><rect x="1151" y="100" width="39" height="15" fill="rgb(240,74,7)"/><text x="1154.00" y="110.50">pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (16 samples, 3.27%)</title><rect x="1151" y="116" width="39" height="15" fill="rgb(224,90,23)"/><text x="1154.00" y="126.50">tim..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (16 samples, 3.27%)</title><rect x="1151" y="132" width="39" height="15" fill="rgb(235,211,50)"/><text x="1154.00" y="142.50">&lt;la..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (15 samples, 3.06%)</title><rect x="1153" y="148" width="37" height="15" fill="rgb(212,162,7)"/><text x="1156.00" y="158.50">run..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (15 samples, 3.06%)</title><rect x="1153" y="164" width="37" height="15" fill="rgb(240,213,27)"/><text x="1156.00" y="174.50">_ru..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (15 samples, 3.06%)</title><rect x="1153" y="180" width="37" height="15" fill="rgb(214,119,17)"/><text x="1156.00" y="190.50">run..</text></g><g><title>run (onnxruntime/capi/session.py:136) (15 samples, 3.06%)</title><rect x="1153" y="196" width="37" height="15" fill="rgb(218,94,49)"/><text x="1156.00" y="206.50">run..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.06%)</title><rect x="1153" y="212" width="37" height="15" fill="rgb(234,229,7)"/><text x="1156.00" y="222.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.06%)</title><rect x="1153" y="228" width="37" height="15" fill="rgb(215,150,2)"/><text x="1156.00" y="238.50">voi..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.06%)</title><rect x="1153" y="244" width="37" height="15" fill="rgb(251,76,20)"/><text x="1156.00" y="254.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.06%)</title><rect x="1153" y="260" width="37" height="15" fill="rgb(207,85,45)"/><text x="1156.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.06%)</title><rect x="1153" y="276" width="37" height="15" fill="rgb(206,191,50)"/><text x="1156.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.06%)</title><rect x="1153" y="292" width="37" height="15" fill="rgb(249,212,42)"/><text x="1156.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.06%)</title><rect x="1153" y="308" width="37" height="15" fill="rgb(242,116,47)"/><text x="1156.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.06%)</title><rect x="1153" y="324" width="37" height="15" fill="rgb(248,120,4)"/><text x="1156.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1187" y="340" width="3" height="15" fill="rgb(248,128,49)"/><text x="1190.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(230,63,32)"/><text x="1190.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1187" y="372" width="3" height="15" fill="rgb(215,30,4)"/><text x="1190.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1187" y="388" width="3" height="15" fill="rgb(208,121,17)"/><text x="1190.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1187" y="404" width="3" height="15" fill="rgb(230,97,26)"/><text x="1190.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1187" y="420" width="3" height="15" fill="rgb(248,84,48)"/><text x="1190.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1187" y="436" width="3" height="15" fill="rgb(217,62,9)"/><text x="1190.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1187" y="452" width="3" height="15" fill="rgb(226,44,11)"/><text x="1190.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1187" y="468" width="3" height="15" fill="rgb(234,83,22)"/><text x="1190.00" y="478.50"></text></g></g></svg>