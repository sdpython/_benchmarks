<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1958" onload="init(evt)" viewBox="0 0 1200 1958" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1958" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1941.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1941.00"> </text><g id="frames"><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(220,166,42)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(210,212,15)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(243,217,40)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(227,205,29)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(215,4,36)"/><text x="13.00" y="942.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.45%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(211,158,12)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.45%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(244,228,53)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="868" width="3" height="15" fill="rgb(226,152,9)"/><text x="15.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="884" width="3" height="15" fill="rgb(231,35,29)"/><text x="15.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="900" width="3" height="15" fill="rgb(206,107,44)"/><text x="15.00" y="910.50"></text></g><g><title>dirname (posixpath.py) (1 samples, 0.22%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(252,131,40)"/><text x="15.00" y="926.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.67%)</title><rect x="10" y="292" width="7" height="15" fill="rgb(207,83,47)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="308" width="7" height="15" fill="rgb(252,107,49)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="324" width="7" height="15" fill="rgb(208,29,31)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="340" width="7" height="15" fill="rgb(209,43,6)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="10" y="356" width="7" height="15" fill="rgb(213,169,51)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="372" width="7" height="15" fill="rgb(240,104,30)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.67%)</title><rect x="10" y="388" width="7" height="15" fill="rgb(246,5,54)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="404" width="7" height="15" fill="rgb(237,168,35)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="420" width="7" height="15" fill="rgb(237,84,1)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="436" width="7" height="15" fill="rgb(212,32,37)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="10" y="452" width="7" height="15" fill="rgb(209,8,37)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="468" width="7" height="15" fill="rgb(253,35,6)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.67%)</title><rect x="10" y="484" width="7" height="15" fill="rgb(211,216,4)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="500" width="7" height="15" fill="rgb(219,95,1)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="516" width="7" height="15" fill="rgb(207,94,32)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="532" width="7" height="15" fill="rgb(252,197,8)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="10" y="548" width="7" height="15" fill="rgb(245,39,14)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="564" width="7" height="15" fill="rgb(244,94,50)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.67%)</title><rect x="10" y="580" width="7" height="15" fill="rgb(216,100,36)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="596" width="7" height="15" fill="rgb(221,187,30)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="612" width="7" height="15" fill="rgb(242,124,53)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="628" width="7" height="15" fill="rgb(235,78,21)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="644" width="7" height="15" fill="rgb(228,103,41)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="660" width="7" height="15" fill="rgb(209,132,20)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="676" width="7" height="15" fill="rgb(246,194,31)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="10" y="692" width="7" height="15" fill="rgb(233,190,12)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="708" width="7" height="15" fill="rgb(252,188,0)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.67%)</title><rect x="10" y="724" width="7" height="15" fill="rgb(205,151,51)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="740" width="7" height="15" fill="rgb(226,176,46)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="756" width="7" height="15" fill="rgb(209,174,12)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="772" width="7" height="15" fill="rgb(242,20,50)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="10" y="788" width="7" height="15" fill="rgb(212,125,23)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="10" y="804" width="7" height="15" fill="rgb(217,127,48)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.67%)</title><rect x="10" y="820" width="7" height="15" fill="rgb(244,13,23)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="15" y="836" width="2" height="15" fill="rgb(224,70,14)"/><text x="18.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="15" y="852" width="2" height="15" fill="rgb(246,121,38)"/><text x="18.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="15" y="868" width="2" height="15" fill="rgb(206,181,37)"/><text x="18.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(227,210,28)"/><text x="18.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(225,191,2)"/><text x="18.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.22%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(229,129,39)"/><text x="18.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.22%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(221,120,49)"/><text x="18.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.22%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(233,87,30)"/><text x="18.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.22%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(229,224,40)"/><text x="18.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.22%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(242,176,20)"/><text x="18.00" y="990.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.22%)</title><rect x="15" y="996" width="2" height="15" fill="rgb(211,26,27)"/><text x="18.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.22%)</title><rect x="15" y="1012" width="2" height="15" fill="rgb(251,44,49)"/><text x="18.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.22%)</title><rect x="15" y="1028" width="2" height="15" fill="rgb(245,146,46)"/><text x="18.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.22%)</title><rect x="15" y="1044" width="2" height="15" fill="rgb(206,120,4)"/><text x="18.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.22%)</title><rect x="15" y="1060" width="2" height="15" fill="rgb(253,182,0)"/><text x="18.00" y="1070.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.22%)</title><rect x="15" y="1076" width="2" height="15" fill="rgb(244,96,49)"/><text x="18.00" y="1086.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.22%)</title><rect x="15" y="1092" width="2" height="15" fill="rgb(206,113,12)"/><text x="18.00" y="1102.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.22%)</title><rect x="15" y="1108" width="2" height="15" fill="rgb(206,125,0)"/><text x="18.00" y="1118.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.22%)</title><rect x="15" y="1124" width="2" height="15" fill="rgb(253,88,31)"/><text x="18.00" y="1134.50"></text></g><g><title>_sre_unicode_tolower (python3.7) (1 samples, 0.22%)</title><rect x="15" y="1140" width="2" height="15" fill="rgb(206,110,13)"/><text x="18.00" y="1150.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_multivariate.py) (1 samples, 0.22%)</title><rect x="17" y="772" width="3" height="15" fill="rgb(218,190,12)"/><text x="20.00" y="782.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.22%)</title><rect x="17" y="788" width="3" height="15" fill="rgb(254,91,6)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="196" width="13" height="15" fill="rgb(213,58,7)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="212" width="13" height="15" fill="rgb(205,73,51)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="228" width="13" height="15" fill="rgb(212,10,2)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="244" width="13" height="15" fill="rgb(210,42,13)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.12%)</title><rect x="10" y="260" width="13" height="15" fill="rgb(229,146,39)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="276" width="13" height="15" fill="rgb(220,156,40)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.45%)</title><rect x="17" y="292" width="6" height="15" fill="rgb(235,55,6)"/><text x="20.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="308" width="6" height="15" fill="rgb(225,133,30)"/><text x="20.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="324" width="6" height="15" fill="rgb(216,32,30)"/><text x="20.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="340" width="6" height="15" fill="rgb(215,149,39)"/><text x="20.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="17" y="356" width="6" height="15" fill="rgb(224,197,2)"/><text x="20.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="372" width="6" height="15" fill="rgb(213,141,17)"/><text x="20.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.45%)</title><rect x="17" y="388" width="6" height="15" fill="rgb(228,75,31)"/><text x="20.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="404" width="6" height="15" fill="rgb(207,98,36)"/><text x="20.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="420" width="6" height="15" fill="rgb(217,49,22)"/><text x="20.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="436" width="6" height="15" fill="rgb(226,163,24)"/><text x="20.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="17" y="452" width="6" height="15" fill="rgb(249,13,45)"/><text x="20.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="468" width="6" height="15" fill="rgb(239,190,1)"/><text x="20.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.45%)</title><rect x="17" y="484" width="6" height="15" fill="rgb(252,11,39)"/><text x="20.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="500" width="6" height="15" fill="rgb(238,118,36)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="516" width="6" height="15" fill="rgb(240,171,50)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="532" width="6" height="15" fill="rgb(233,178,3)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="17" y="548" width="6" height="15" fill="rgb(216,181,50)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="564" width="6" height="15" fill="rgb(234,9,30)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.45%)</title><rect x="17" y="580" width="6" height="15" fill="rgb(234,121,19)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="596" width="6" height="15" fill="rgb(221,41,45)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="612" width="6" height="15" fill="rgb(233,30,28)"/><text x="20.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="628" width="6" height="15" fill="rgb(228,24,42)"/><text x="20.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="17" y="644" width="6" height="15" fill="rgb(205,27,54)"/><text x="20.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="660" width="6" height="15" fill="rgb(223,150,53)"/><text x="20.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.45%)</title><rect x="17" y="676" width="6" height="15" fill="rgb(247,28,16)"/><text x="20.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="692" width="6" height="15" fill="rgb(212,140,35)"/><text x="20.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="708" width="6" height="15" fill="rgb(243,65,37)"/><text x="20.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="724" width="6" height="15" fill="rgb(239,107,2)"/><text x="20.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="17" y="740" width="6" height="15" fill="rgb(223,161,41)"/><text x="20.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="17" y="756" width="6" height="15" fill="rgb(230,102,21)"/><text x="20.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.22%)</title><rect x="20" y="772" width="3" height="15" fill="rgb(206,44,32)"/><text x="23.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="788" width="3" height="15" fill="rgb(219,181,51)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="804" width="3" height="15" fill="rgb(251,109,45)"/><text x="23.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="820" width="3" height="15" fill="rgb(220,159,44)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="836" width="3" height="15" fill="rgb(229,14,23)"/><text x="23.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="852" width="3" height="15" fill="rgb(242,1,37)"/><text x="23.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="868" width="3" height="15" fill="rgb(208,117,42)"/><text x="23.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="884" width="3" height="15" fill="rgb(232,53,28)"/><text x="23.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.22%)</title><rect x="20" y="900" width="3" height="15" fill="rgb(205,68,2)"/><text x="23.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="916" width="3" height="15" fill="rgb(235,83,26)"/><text x="23.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="932" width="3" height="15" fill="rgb(230,206,48)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="948" width="3" height="15" fill="rgb(246,44,29)"/><text x="23.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="964" width="3" height="15" fill="rgb(236,90,47)"/><text x="23.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="980" width="3" height="15" fill="rgb(224,213,30)"/><text x="23.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="996" width="3" height="15" fill="rgb(239,228,16)"/><text x="23.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="1012" width="3" height="15" fill="rgb(250,45,30)"/><text x="23.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.22%)</title><rect x="20" y="1028" width="3" height="15" fill="rgb(208,56,52)"/><text x="23.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.22%)</title><rect x="20" y="1044" width="3" height="15" fill="rgb(247,22,13)"/><text x="23.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.22%)</title><rect x="20" y="1060" width="3" height="15" fill="rgb(254,28,19)"/><text x="23.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.22%)</title><rect x="20" y="1076" width="3" height="15" fill="rgb(234,196,33)"/><text x="23.00" y="1086.50"></text></g><g><title>0x7fe517eb0a60 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="20" y="1092" width="3" height="15" fill="rgb(246,207,20)"/><text x="23.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="1124" width="5" height="15" fill="rgb(217,29,12)"/><text x="26.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="1140" width="5" height="15" fill="rgb(207,42,22)"/><text x="26.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="1156" width="5" height="15" fill="rgb(221,212,21)"/><text x="26.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="23" y="1172" width="5" height="15" fill="rgb(237,77,41)"/><text x="26.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="1188" width="5" height="15" fill="rgb(253,189,22)"/><text x="26.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.45%)</title><rect x="23" y="1204" width="5" height="15" fill="rgb(237,27,4)"/><text x="26.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="1220" width="5" height="15" fill="rgb(215,87,14)"/><text x="26.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="1236" width="5" height="15" fill="rgb(218,128,32)"/><text x="26.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="1252" width="5" height="15" fill="rgb(218,197,51)"/><text x="26.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="23" y="1268" width="5" height="15" fill="rgb(224,146,41)"/><text x="26.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="1284" width="5" height="15" fill="rgb(233,222,39)"/><text x="26.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.45%)</title><rect x="23" y="1300" width="5" height="15" fill="rgb(247,210,30)"/><text x="26.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.45%)</title><rect x="23" y="1316" width="5" height="15" fill="rgb(232,214,22)"/><text x="26.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.45%)</title><rect x="23" y="1332" width="5" height="15" fill="rgb(242,198,0)"/><text x="26.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.45%)</title><rect x="23" y="1348" width="5" height="15" fill="rgb(235,64,8)"/><text x="26.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (2 samples, 0.45%)</title><rect x="23" y="1364" width="5" height="15" fill="rgb(235,115,4)"/><text x="26.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.22%)</title><rect x="25" y="1380" width="3" height="15" fill="rgb(236,172,27)"/><text x="28.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.22%)</title><rect x="25" y="1396" width="3" height="15" fill="rgb(205,12,5)"/><text x="28.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.22%)</title><rect x="25" y="1412" width="3" height="15" fill="rgb(231,1,23)"/><text x="28.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.22%)</title><rect x="25" y="1428" width="3" height="15" fill="rgb(254,1,5)"/><text x="28.00" y="1438.50"></text></g><g><title>__get__ (types.py) (1 samples, 0.22%)</title><rect x="25" y="1444" width="3" height="15" fill="rgb(217,93,35)"/><text x="28.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1476" width="3" height="15" fill="rgb(215,162,2)"/><text x="31.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1492" width="3" height="15" fill="rgb(236,61,21)"/><text x="31.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1508" width="3" height="15" fill="rgb(251,147,24)"/><text x="31.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="28" y="1524" width="3" height="15" fill="rgb(252,112,43)"/><text x="31.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1540" width="3" height="15" fill="rgb(218,8,29)"/><text x="31.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.22%)</title><rect x="28" y="1556" width="3" height="15" fill="rgb(229,216,27)"/><text x="31.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.22%)</title><rect x="28" y="1572" width="3" height="15" fill="rgb(225,186,5)"/><text x="31.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="28" y="1588" width="3" height="15" fill="rgb(248,109,19)"/><text x="31.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="28" y="1604" width="3" height="15" fill="rgb(247,74,20)"/><text x="31.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="28" y="1620" width="3" height="15" fill="rgb(211,64,14)"/><text x="31.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="28" y="1636" width="3" height="15" fill="rgb(208,183,5)"/><text x="31.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="28" y="1652" width="3" height="15" fill="rgb(224,130,38)"/><text x="31.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="28" y="1668" width="3" height="15" fill="rgb(218,159,2)"/><text x="31.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="28" y="1684" width="3" height="15" fill="rgb(215,55,25)"/><text x="31.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="28" y="1700" width="3" height="15" fill="rgb(242,162,0)"/><text x="31.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="28" y="1716" width="3" height="15" fill="rgb(247,152,38)"/><text x="31.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="28" y="1732" width="3" height="15" fill="rgb(246,115,23)"/><text x="31.00" y="1742.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="28" y="1748" width="3" height="15" fill="rgb(210,130,11)"/><text x="31.00" y="1758.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="28" y="1764" width="3" height="15" fill="rgb(216,188,45)"/><text x="31.00" y="1774.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="28" y="1780" width="3" height="15" fill="rgb(221,149,19)"/><text x="31.00" y="1790.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="28" y="1796" width="3" height="15" fill="rgb(228,99,36)"/><text x="31.00" y="1806.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="28" y="1812" width="3" height="15" fill="rgb(253,13,18)"/><text x="31.00" y="1822.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="28" y="1828" width="3" height="15" fill="rgb(244,185,32)"/><text x="31.00" y="1838.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="28" y="1844" width="3" height="15" fill="rgb(235,191,30)"/><text x="31.00" y="1854.50"></text></g><g><title>expect (jinja2/lexer.py) (1 samples, 0.22%)</title><rect x="28" y="1860" width="3" height="15" fill="rgb(222,47,51)"/><text x="31.00" y="1870.50"></text></g><g><title>__next__ (jinja2/lexer.py) (1 samples, 0.22%)</title><rect x="28" y="1876" width="3" height="15" fill="rgb(209,199,17)"/><text x="31.00" y="1886.50"></text></g><g><title>wrap (jinja2/lexer.py) (1 samples, 0.22%)</title><rect x="28" y="1892" width="3" height="15" fill="rgb(226,113,52)"/><text x="31.00" y="1902.50"></text></g><g><title>tokeniter (jinja2/lexer.py) (1 samples, 0.22%)</title><rect x="28" y="1908" width="3" height="15" fill="rgb(234,144,29)"/><text x="31.00" y="1918.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="31" y="1588" width="2" height="15" fill="rgb(247,54,20)"/><text x="34.00" y="1598.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.548] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="31" y="1604" width="2" height="15" fill="rgb(247,63,31)"/><text x="34.00" y="1614.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="31" y="1620" width="2" height="15" fill="rgb(217,57,3)"/><text x="34.00" y="1630.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="31" y="1636" width="2" height="15" fill="rgb(217,72,41)"/><text x="34.00" y="1646.50"></text></g><g><title>0x7fe517eb28a4 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="31" y="1652" width="2" height="15" fill="rgb(219,22,53)"/><text x="34.00" y="1662.50"></text></g><g><title>onnx::GetOpSchema&lt;onnx::QLinearMatMul_Onnx_ver10&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.45%)</title><rect x="31" y="1572" width="5" height="15" fill="rgb(207,108,40)"/><text x="34.00" y="1582.50"></text></g><g><title>onnx::OpSchema::TypeConstraint (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="33" y="1588" width="3" height="15" fill="rgb(225,81,15)"/><text x="36.00" y="1598.50"></text></g><g><title>onnx::OpSchema::TypeConstraint (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="33" y="1604" width="3" height="15" fill="rgb(247,102,35)"/><text x="36.00" y="1614.50"></text></g><g><title>onnx::Utils::DataTypeUtils::ToType (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="33" y="1620" width="3" height="15" fill="rgb(243,37,14)"/><text x="36.00" y="1630.50"></text></g><g><title>onnx::Utils::DataTypeUtils::ToType[abi:cxx11] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="33" y="1636" width="3" height="15" fill="rgb(238,43,45)"/><text x="36.00" y="1646.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::TypeProto&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::TypeProto&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="33" y="1652" width="3" height="15" fill="rgb(247,173,47)"/><text x="36.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="484" width="18" height="15" fill="rgb(212,181,46)"/><text x="26.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="500" width="18" height="15" fill="rgb(210,175,29)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="516" width="18" height="15" fill="rgb(252,107,14)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="532" width="18" height="15" fill="rgb(219,198,27)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.57%)</title><rect x="23" y="548" width="18" height="15" fill="rgb(211,147,44)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="564" width="18" height="15" fill="rgb(243,73,13)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (7 samples, 1.57%)</title><rect x="23" y="580" width="18" height="15" fill="rgb(205,17,33)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="596" width="18" height="15" fill="rgb(206,39,17)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="612" width="18" height="15" fill="rgb(225,222,53)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="628" width="18" height="15" fill="rgb(227,227,18)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.57%)</title><rect x="23" y="644" width="18" height="15" fill="rgb(223,190,51)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="660" width="18" height="15" fill="rgb(253,25,17)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (7 samples, 1.57%)</title><rect x="23" y="676" width="18" height="15" fill="rgb(253,3,14)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="692" width="18" height="15" fill="rgb(250,204,27)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="708" width="18" height="15" fill="rgb(247,32,14)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="724" width="18" height="15" fill="rgb(218,120,25)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.57%)</title><rect x="23" y="740" width="18" height="15" fill="rgb(248,186,14)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="756" width="18" height="15" fill="rgb(235,28,22)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (7 samples, 1.57%)</title><rect x="23" y="772" width="18" height="15" fill="rgb(218,114,26)"/><text x="26.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="788" width="18" height="15" fill="rgb(243,84,37)"/><text x="26.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="804" width="18" height="15" fill="rgb(223,184,45)"/><text x="26.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="820" width="18" height="15" fill="rgb(209,161,10)"/><text x="26.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.57%)</title><rect x="23" y="836" width="18" height="15" fill="rgb(216,78,12)"/><text x="26.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="852" width="18" height="15" fill="rgb(241,102,7)"/><text x="26.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (7 samples, 1.57%)</title><rect x="23" y="868" width="18" height="15" fill="rgb(207,194,19)"/><text x="26.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="884" width="18" height="15" fill="rgb(249,59,46)"/><text x="26.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="900" width="18" height="15" fill="rgb(223,22,16)"/><text x="26.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="916" width="18" height="15" fill="rgb(238,228,7)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="932" width="18" height="15" fill="rgb(247,228,19)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="948" width="18" height="15" fill="rgb(233,99,7)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="964" width="18" height="15" fill="rgb(207,176,7)"/><text x="26.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.57%)</title><rect x="23" y="980" width="18" height="15" fill="rgb(237,60,31)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="996" width="18" height="15" fill="rgb(247,4,32)"/><text x="26.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (7 samples, 1.57%)</title><rect x="23" y="1012" width="18" height="15" fill="rgb(251,214,6)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="1028" width="18" height="15" fill="rgb(219,7,1)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="1044" width="18" height="15" fill="rgb(210,68,13)"/><text x="26.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="1060" width="18" height="15" fill="rgb(248,107,33)"/><text x="26.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.57%)</title><rect x="23" y="1076" width="18" height="15" fill="rgb(245,228,25)"/><text x="26.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="23" y="1092" width="18" height="15" fill="rgb(253,215,36)"/><text x="26.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (7 samples, 1.57%)</title><rect x="23" y="1108" width="18" height="15" fill="rgb(213,149,32)"/><text x="26.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1124" width="13" height="15" fill="rgb(236,113,2)"/><text x="31.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1140" width="13" height="15" fill="rgb(222,140,3)"/><text x="31.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1156" width="13" height="15" fill="rgb(224,64,25)"/><text x="31.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1172" width="13" height="15" fill="rgb(245,164,13)"/><text x="31.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1188" width="13" height="15" fill="rgb(216,43,41)"/><text x="31.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.12%)</title><rect x="28" y="1204" width="13" height="15" fill="rgb(205,141,18)"/><text x="31.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1220" width="13" height="15" fill="rgb(219,199,41)"/><text x="31.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (5 samples, 1.12%)</title><rect x="28" y="1236" width="13" height="15" fill="rgb(223,220,41)"/><text x="31.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1252" width="13" height="15" fill="rgb(221,56,21)"/><text x="31.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1268" width="13" height="15" fill="rgb(217,136,4)"/><text x="31.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1284" width="13" height="15" fill="rgb(235,127,26)"/><text x="31.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1300" width="13" height="15" fill="rgb(216,117,11)"/><text x="31.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1316" width="13" height="15" fill="rgb(232,34,46)"/><text x="31.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.12%)</title><rect x="28" y="1332" width="13" height="15" fill="rgb(254,134,35)"/><text x="31.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1348" width="13" height="15" fill="rgb(233,224,5)"/><text x="31.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (5 samples, 1.12%)</title><rect x="28" y="1364" width="13" height="15" fill="rgb(216,138,25)"/><text x="31.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1380" width="13" height="15" fill="rgb(245,56,10)"/><text x="31.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1396" width="13" height="15" fill="rgb(228,44,51)"/><text x="31.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1412" width="13" height="15" fill="rgb(235,95,21)"/><text x="31.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.12%)</title><rect x="28" y="1428" width="13" height="15" fill="rgb(223,33,50)"/><text x="31.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="28" y="1444" width="13" height="15" fill="rgb(209,213,36)"/><text x="31.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (5 samples, 1.12%)</title><rect x="28" y="1460" width="13" height="15" fill="rgb(207,176,10)"/><text x="31.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.89%)</title><rect x="31" y="1476" width="10" height="15" fill="rgb(234,17,21)"/><text x="34.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.89%)</title><rect x="31" y="1492" width="10" height="15" fill="rgb(234,91,34)"/><text x="34.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.89%)</title><rect x="31" y="1508" width="10" height="15" fill="rgb(247,6,5)"/><text x="34.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.89%)</title><rect x="31" y="1524" width="10" height="15" fill="rgb(252,87,47)"/><text x="34.00" y="1534.50"></text></g><g><title>onnx::OpSchemaRegistry::map[abi:cxx11] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.89%)</title><rect x="31" y="1540" width="10" height="15" fill="rgb(232,141,10)"/><text x="34.00" y="1550.50"></text></g><g><title>onnx::OpSet_Onnx_ver10::ForEachSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.89%)</title><rect x="31" y="1556" width="10" height="15" fill="rgb(242,20,25)"/><text x="34.00" y="1566.50"></text></g><g><title>onnx::RegisterSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.45%)</title><rect x="36" y="1572" width="5" height="15" fill="rgb(223,106,43)"/><text x="39.00" y="1582.50"></text></g><g><title>onnx::OpSchemaRegistry::OpSchemaRegisterOnce::OpSchemaRegisterOnce (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.45%)</title><rect x="36" y="1588" width="5" height="15" fill="rgb(215,19,25)"/><text x="39.00" y="1598.50"></text></g><g><title>onnx::OpSchema::Finalize (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="39" y="1604" width="2" height="15" fill="rgb(246,194,12)"/><text x="42.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.22%)</title><rect x="41" y="724" width="3" height="15" fill="rgb(233,19,22)"/><text x="44.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="740" width="3" height="15" fill="rgb(209,106,23)"/><text x="44.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="756" width="3" height="15" fill="rgb(253,191,27)"/><text x="44.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="772" width="3" height="15" fill="rgb(212,83,50)"/><text x="44.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="788" width="3" height="15" fill="rgb(251,105,0)"/><text x="44.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="804" width="3" height="15" fill="rgb(220,7,20)"/><text x="44.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.22%)</title><rect x="41" y="820" width="3" height="15" fill="rgb(252,110,11)"/><text x="44.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="836" width="3" height="15" fill="rgb(208,35,44)"/><text x="44.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="852" width="3" height="15" fill="rgb(215,166,50)"/><text x="44.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="868" width="3" height="15" fill="rgb(241,134,19)"/><text x="44.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="884" width="3" height="15" fill="rgb(246,214,3)"/><text x="44.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="900" width="3" height="15" fill="rgb(237,50,6)"/><text x="44.00" y="910.50"></text></g><g><title>0x7fe4ef03740e (?) (1 samples, 0.22%)</title><rect x="41" y="916" width="3" height="15" fill="rgb(247,33,34)"/><text x="44.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="932" width="3" height="15" fill="rgb(220,90,25)"/><text x="44.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="948" width="3" height="15" fill="rgb(208,161,25)"/><text x="44.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="964" width="3" height="15" fill="rgb(207,80,23)"/><text x="44.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="980" width="3" height="15" fill="rgb(228,96,35)"/><text x="44.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="996" width="3" height="15" fill="rgb(237,175,12)"/><text x="44.00" y="1006.50"></text></g><g><title>0x7fe4eedf0bb0 (?) (1 samples, 0.22%)</title><rect x="41" y="1012" width="3" height="15" fill="rgb(207,101,40)"/><text x="44.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1028" width="3" height="15" fill="rgb(220,49,25)"/><text x="44.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1044" width="3" height="15" fill="rgb(243,172,47)"/><text x="44.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1060" width="3" height="15" fill="rgb(225,180,54)"/><text x="44.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="1076" width="3" height="15" fill="rgb(241,44,37)"/><text x="44.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="41" y="1092" width="3" height="15" fill="rgb(244,58,33)"/><text x="44.00" y="1102.50"></text></g><g><title>0x7fe4ee77725e (?) (1 samples, 0.22%)</title><rect x="41" y="1108" width="3" height="15" fill="rgb(227,202,41)"/><text x="44.00" y="1118.50"></text></g><g><title>0x7fe4ee77581e (?) (1 samples, 0.22%)</title><rect x="41" y="1124" width="3" height="15" fill="rgb(237,70,12)"/><text x="44.00" y="1134.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py) (1 samples, 0.22%)</title><rect x="44" y="1124" width="2" height="15" fill="rgb(250,73,51)"/><text x="47.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1140" width="2" height="15" fill="rgb(233,135,1)"/><text x="47.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1156" width="2" height="15" fill="rgb(214,25,52)"/><text x="47.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1172" width="2" height="15" fill="rgb(213,178,53)"/><text x="47.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1188" width="2" height="15" fill="rgb(234,13,27)"/><text x="47.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1204" width="2" height="15" fill="rgb(229,87,0)"/><text x="47.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="1220" width="2" height="15" fill="rgb(226,21,53)"/><text x="47.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1236" width="2" height="15" fill="rgb(214,190,50)"/><text x="47.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/window.py) (1 samples, 0.22%)</title><rect x="44" y="1252" width="2" height="15" fill="rgb(252,27,46)"/><text x="47.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1268" width="2" height="15" fill="rgb(211,161,13)"/><text x="47.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1284" width="2" height="15" fill="rgb(224,175,45)"/><text x="47.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1300" width="2" height="15" fill="rgb(205,90,2)"/><text x="47.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="1316" width="2" height="15" fill="rgb(229,98,9)"/><text x="47.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1332" width="2" height="15" fill="rgb(254,80,50)"/><text x="47.00" y="1342.50"></text></g><g><title>0x7fe4e84b0ff7 (?) (1 samples, 0.22%)</title><rect x="44" y="1348" width="2" height="15" fill="rgb(254,186,36)"/><text x="47.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1364" width="2" height="15" fill="rgb(250,8,36)"/><text x="47.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1380" width="2" height="15" fill="rgb(222,119,49)"/><text x="47.00" y="1390.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1396" width="2" height="15" fill="rgb(248,8,7)"/><text x="47.00" y="1406.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="1412" width="2" height="15" fill="rgb(215,176,12)"/><text x="47.00" y="1422.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="1428" width="2" height="15" fill="rgb(232,43,6)"/><text x="47.00" y="1438.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="1444" width="2" height="15" fill="rgb(207,61,23)"/><text x="47.00" y="1454.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="1460" width="2" height="15" fill="rgb(205,201,25)"/><text x="47.00" y="1470.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="1476" width="2" height="15" fill="rgb(241,25,52)"/><text x="47.00" y="1486.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.22%)</title><rect x="46" y="1316" width="3" height="15" fill="rgb(220,114,16)"/><text x="49.00" y="1326.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.22%)</title><rect x="46" y="1332" width="3" height="15" fill="rgb(244,148,12)"/><text x="49.00" y="1342.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.22%)</title><rect x="46" y="1348" width="3" height="15" fill="rgb(251,79,31)"/><text x="49.00" y="1358.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.22%)</title><rect x="46" y="1364" width="3" height="15" fill="rgb(247,213,21)"/><text x="49.00" y="1374.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (11 samples, 2.46%)</title><rect x="23" y="340" width="29" height="15" fill="rgb(236,43,21)"/><text x="26.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.46%)</title><rect x="23" y="356" width="29" height="15" fill="rgb(220,38,8)"/><text x="26.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.46%)</title><rect x="23" y="372" width="29" height="15" fill="rgb(253,137,13)"/><text x="26.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.46%)</title><rect x="23" y="388" width="29" height="15" fill="rgb(214,143,28)"/><text x="26.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 2.46%)</title><rect x="23" y="404" width="29" height="15" fill="rgb(245,38,15)"/><text x="26.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.46%)</title><rect x="23" y="420" width="29" height="15" fill="rgb(226,96,36)"/><text x="26.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (11 samples, 2.46%)</title><rect x="23" y="436" width="29" height="15" fill="rgb(232,190,38)"/><text x="26.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.46%)</title><rect x="23" y="452" width="29" height="15" fill="rgb(215,103,38)"/><text x="26.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.46%)</title><rect x="23" y="468" width="29" height="15" fill="rgb(218,178,39)"/><text x="26.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="41" y="484" width="11" height="15" fill="rgb(235,123,27)"/><text x="44.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="41" y="500" width="11" height="15" fill="rgb(211,171,36)"/><text x="44.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="41" y="516" width="11" height="15" fill="rgb(233,146,44)"/><text x="44.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.89%)</title><rect x="41" y="532" width="11" height="15" fill="rgb(219,68,22)"/><text x="44.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="41" y="548" width="11" height="15" fill="rgb(249,200,2)"/><text x="44.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="41" y="564" width="11" height="15" fill="rgb(241,133,53)"/><text x="44.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="41" y="580" width="11" height="15" fill="rgb(219,211,23)"/><text x="44.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="41" y="596" width="11" height="15" fill="rgb(252,178,0)"/><text x="44.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="41" y="612" width="11" height="15" fill="rgb(208,169,13)"/><text x="44.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.89%)</title><rect x="41" y="628" width="11" height="15" fill="rgb(208,174,2)"/><text x="44.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="41" y="644" width="11" height="15" fill="rgb(208,59,44)"/><text x="44.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="41" y="660" width="11" height="15" fill="rgb(237,116,23)"/><text x="44.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="41" y="676" width="11" height="15" fill="rgb(246,117,32)"/><text x="44.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="41" y="692" width="11" height="15" fill="rgb(239,106,42)"/><text x="44.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="41" y="708" width="11" height="15" fill="rgb(212,200,6)"/><text x="44.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.67%)</title><rect x="44" y="724" width="8" height="15" fill="rgb(212,225,23)"/><text x="47.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="740" width="8" height="15" fill="rgb(208,228,34)"/><text x="47.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="756" width="8" height="15" fill="rgb(217,14,18)"/><text x="47.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="772" width="8" height="15" fill="rgb(252,120,54)"/><text x="47.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="44" y="788" width="8" height="15" fill="rgb(213,219,39)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="804" width="8" height="15" fill="rgb(228,203,35)"/><text x="47.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.67%)</title><rect x="44" y="820" width="8" height="15" fill="rgb(226,110,43)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="836" width="8" height="15" fill="rgb(247,44,18)"/><text x="47.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="852" width="8" height="15" fill="rgb(240,27,27)"/><text x="47.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="868" width="8" height="15" fill="rgb(227,161,35)"/><text x="47.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="44" y="884" width="8" height="15" fill="rgb(235,131,50)"/><text x="47.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="900" width="8" height="15" fill="rgb(230,115,8)"/><text x="47.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.67%)</title><rect x="44" y="916" width="8" height="15" fill="rgb(223,208,28)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="932" width="8" height="15" fill="rgb(238,25,0)"/><text x="47.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="948" width="8" height="15" fill="rgb(238,66,49)"/><text x="47.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="964" width="8" height="15" fill="rgb(221,24,7)"/><text x="47.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="44" y="980" width="8" height="15" fill="rgb(240,204,40)"/><text x="47.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="996" width="8" height="15" fill="rgb(220,203,49)"/><text x="47.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.67%)</title><rect x="44" y="1012" width="8" height="15" fill="rgb(224,104,43)"/><text x="47.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="1028" width="8" height="15" fill="rgb(220,201,35)"/><text x="47.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="1044" width="8" height="15" fill="rgb(251,189,36)"/><text x="47.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="1060" width="8" height="15" fill="rgb(206,39,43)"/><text x="47.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="44" y="1076" width="8" height="15" fill="rgb(232,115,25)"/><text x="47.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="44" y="1092" width="8" height="15" fill="rgb(225,213,21)"/><text x="47.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 0.67%)</title><rect x="44" y="1108" width="8" height="15" fill="rgb(230,28,46)"/><text x="47.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="46" y="1124" width="6" height="15" fill="rgb(219,67,24)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="46" y="1140" width="6" height="15" fill="rgb(240,191,15)"/><text x="49.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="46" y="1156" width="6" height="15" fill="rgb(227,75,45)"/><text x="49.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="46" y="1172" width="6" height="15" fill="rgb(252,99,12)"/><text x="49.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="46" y="1188" width="6" height="15" fill="rgb(233,92,1)"/><text x="49.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.45%)</title><rect x="46" y="1204" width="6" height="15" fill="rgb(226,131,37)"/><text x="49.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="46" y="1220" width="6" height="15" fill="rgb(232,168,49)"/><text x="49.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="46" y="1236" width="6" height="15" fill="rgb(241,156,54)"/><text x="49.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="46" y="1252" width="6" height="15" fill="rgb(243,181,4)"/><text x="49.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="46" y="1268" width="6" height="15" fill="rgb(221,75,10)"/><text x="49.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="46" y="1284" width="6" height="15" fill="rgb(206,163,4)"/><text x="49.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.45%)</title><rect x="46" y="1300" width="6" height="15" fill="rgb(240,142,25)"/><text x="49.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="1316" width="3" height="15" fill="rgb(211,13,42)"/><text x="52.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="1332" width="3" height="15" fill="rgb(206,15,2)"/><text x="52.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="1348" width="3" height="15" fill="rgb(206,60,39)"/><text x="52.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="49" y="1364" width="3" height="15" fill="rgb(246,4,46)"/><text x="52.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="49" y="1380" width="3" height="15" fill="rgb(243,17,35)"/><text x="52.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.22%)</title><rect x="49" y="1396" width="3" height="15" fill="rgb(254,64,8)"/><text x="52.00" y="1406.50"></text></g><g><title>__call__ (pandas/_config/config.py) (1 samples, 0.22%)</title><rect x="49" y="1412" width="3" height="15" fill="rgb(243,8,46)"/><text x="52.00" y="1422.50"></text></g><g><title>_get_option (pandas/_config/config.py) (1 samples, 0.22%)</title><rect x="49" y="1428" width="3" height="15" fill="rgb(228,32,0)"/><text x="52.00" y="1438.50"></text></g><g><title>_get_single_key (pandas/_config/config.py) (1 samples, 0.22%)</title><rect x="49" y="1444" width="3" height="15" fill="rgb(251,104,46)"/><text x="52.00" y="1454.50"></text></g><g><title>_select_options (pandas/_config/config.py) (1 samples, 0.22%)</title><rect x="49" y="1460" width="3" height="15" fill="rgb(227,175,47)"/><text x="52.00" y="1470.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (2 samples, 0.45%)</title><rect x="52" y="580" width="5" height="15" fill="rgb(245,98,50)"/><text x="55.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="596" width="5" height="15" fill="rgb(250,212,29)"/><text x="55.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="612" width="5" height="15" fill="rgb(236,41,11)"/><text x="55.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="628" width="5" height="15" fill="rgb(222,80,9)"/><text x="55.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="644" width="5" height="15" fill="rgb(234,121,38)"/><text x="55.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="660" width="5" height="15" fill="rgb(242,14,2)"/><text x="55.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="676" width="5" height="15" fill="rgb(249,33,9)"/><text x="55.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="52" y="692" width="5" height="15" fill="rgb(250,43,9)"/><text x="55.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="708" width="5" height="15" fill="rgb(214,218,14)"/><text x="55.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (2 samples, 0.45%)</title><rect x="52" y="724" width="5" height="15" fill="rgb(237,28,1)"/><text x="55.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="740" width="5" height="15" fill="rgb(236,152,27)"/><text x="55.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="756" width="5" height="15" fill="rgb(243,83,3)"/><text x="55.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="772" width="5" height="15" fill="rgb(241,16,50)"/><text x="55.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="52" y="788" width="5" height="15" fill="rgb(234,25,33)"/><text x="55.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="804" width="5" height="15" fill="rgb(250,94,35)"/><text x="55.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (2 samples, 0.45%)</title><rect x="52" y="820" width="5" height="15" fill="rgb(241,162,4)"/><text x="55.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="836" width="5" height="15" fill="rgb(217,131,35)"/><text x="55.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="852" width="5" height="15" fill="rgb(211,166,40)"/><text x="55.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="868" width="5" height="15" fill="rgb(248,15,26)"/><text x="55.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="52" y="884" width="5" height="15" fill="rgb(223,30,28)"/><text x="55.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="900" width="5" height="15" fill="rgb(234,65,6)"/><text x="55.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (2 samples, 0.45%)</title><rect x="52" y="916" width="5" height="15" fill="rgb(206,118,24)"/><text x="55.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="932" width="5" height="15" fill="rgb(206,68,12)"/><text x="55.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="948" width="5" height="15" fill="rgb(253,227,31)"/><text x="55.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="964" width="5" height="15" fill="rgb(229,3,20)"/><text x="55.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="980" width="5" height="15" fill="rgb(222,154,36)"/><text x="55.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="996" width="5" height="15" fill="rgb(225,192,31)"/><text x="55.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="1012" width="5" height="15" fill="rgb(254,53,41)"/><text x="55.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="52" y="1028" width="5" height="15" fill="rgb(227,11,47)"/><text x="55.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="1044" width="5" height="15" fill="rgb(230,77,13)"/><text x="55.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (2 samples, 0.45%)</title><rect x="52" y="1060" width="5" height="15" fill="rgb(251,60,30)"/><text x="55.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="1076" width="5" height="15" fill="rgb(254,216,25)"/><text x="55.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="1092" width="5" height="15" fill="rgb(212,51,40)"/><text x="55.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="52" y="1108" width="5" height="15" fill="rgb(212,86,11)"/><text x="55.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="52" y="1124" width="5" height="15" fill="rgb(230,91,4)"/><text x="55.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="52" y="1140" width="5" height="15" fill="rgb(205,107,23)"/><text x="55.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="52" y="1156" width="5" height="15" fill="rgb(224,211,5)"/><text x="55.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="788" width="3" height="15" fill="rgb(239,17,9)"/><text x="60.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="804" width="3" height="15" fill="rgb(213,177,48)"/><text x="60.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="820" width="3" height="15" fill="rgb(224,100,26)"/><text x="60.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="57" y="836" width="3" height="15" fill="rgb(239,163,24)"/><text x="60.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="852" width="3" height="15" fill="rgb(235,185,19)"/><text x="60.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.22%)</title><rect x="57" y="868" width="3" height="15" fill="rgb(239,225,53)"/><text x="60.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="884" width="3" height="15" fill="rgb(211,30,25)"/><text x="60.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="900" width="3" height="15" fill="rgb(210,229,16)"/><text x="60.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="916" width="3" height="15" fill="rgb(214,153,30)"/><text x="60.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="57" y="932" width="3" height="15" fill="rgb(252,133,17)"/><text x="60.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="948" width="3" height="15" fill="rgb(223,176,33)"/><text x="60.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.22%)</title><rect x="57" y="964" width="3" height="15" fill="rgb(231,83,1)"/><text x="60.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="980" width="3" height="15" fill="rgb(216,95,13)"/><text x="60.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="996" width="3" height="15" fill="rgb(210,93,48)"/><text x="60.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="1012" width="3" height="15" fill="rgb(211,77,0)"/><text x="60.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="57" y="1028" width="3" height="15" fill="rgb(247,155,8)"/><text x="60.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="1044" width="3" height="15" fill="rgb(221,180,40)"/><text x="60.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/exceptions.py) (1 samples, 0.22%)</title><rect x="57" y="1060" width="3" height="15" fill="rgb(213,217,53)"/><text x="60.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="1076" width="3" height="15" fill="rgb(214,85,1)"/><text x="60.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="1092" width="3" height="15" fill="rgb(209,136,35)"/><text x="60.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="1108" width="3" height="15" fill="rgb(234,201,15)"/><text x="60.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="1124" width="3" height="15" fill="rgb(223,155,42)"/><text x="60.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="1140" width="3" height="15" fill="rgb(234,83,2)"/><text x="60.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="1156" width="3" height="15" fill="rgb(209,22,9)"/><text x="60.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="1172" width="3" height="15" fill="rgb(229,194,52)"/><text x="60.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="1188" width="3" height="15" fill="rgb(228,3,3)"/><text x="60.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="1204" width="3" height="15" fill="rgb(220,34,35)"/><text x="60.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="57" y="1220" width="3" height="15" fill="rgb(210,158,17)"/><text x="60.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="57" y="1236" width="3" height="15" fill="rgb(225,149,44)"/><text x="60.00" y="1246.50"></text></g><g><title>&lt;module&gt; (urllib3/packages/six.py) (1 samples, 0.22%)</title><rect x="57" y="1252" width="3" height="15" fill="rgb(234,193,44)"/><text x="60.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (15 samples, 3.36%)</title><rect x="23" y="244" width="39" height="15" fill="rgb(215,153,54)"/><text x="26.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.36%)</title><rect x="23" y="260" width="39" height="15" fill="rgb(246,132,24)"/><text x="26.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.36%)</title><rect x="23" y="276" width="39" height="15" fill="rgb(222,143,31)"/><text x="26.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.36%)</title><rect x="23" y="292" width="39" height="15" fill="rgb(249,67,0)"/><text x="26.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 3.36%)</title><rect x="23" y="308" width="39" height="15" fill="rgb(244,25,13)"/><text x="26.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.36%)</title><rect x="23" y="324" width="39" height="15" fill="rgb(228,117,7)"/><text x="26.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 0.89%)</title><rect x="52" y="340" width="10" height="15" fill="rgb(249,158,48)"/><text x="55.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="52" y="356" width="10" height="15" fill="rgb(206,69,47)"/><text x="55.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="52" y="372" width="10" height="15" fill="rgb(252,70,49)"/><text x="55.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="52" y="388" width="10" height="15" fill="rgb(238,164,46)"/><text x="55.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="52" y="404" width="10" height="15" fill="rgb(223,155,8)"/><text x="55.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="52" y="420" width="10" height="15" fill="rgb(218,9,4)"/><text x="55.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="52" y="436" width="10" height="15" fill="rgb(206,14,4)"/><text x="55.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="52" y="452" width="10" height="15" fill="rgb(221,78,47)"/><text x="55.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="52" y="468" width="10" height="15" fill="rgb(244,134,25)"/><text x="55.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (4 samples, 0.89%)</title><rect x="52" y="484" width="10" height="15" fill="rgb(206,0,39)"/><text x="55.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="52" y="500" width="10" height="15" fill="rgb(246,32,46)"/><text x="55.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="52" y="516" width="10" height="15" fill="rgb(234,142,26)"/><text x="55.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="52" y="532" width="10" height="15" fill="rgb(233,126,32)"/><text x="55.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.89%)</title><rect x="52" y="548" width="10" height="15" fill="rgb(241,48,11)"/><text x="55.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="52" y="564" width="10" height="15" fill="rgb(217,227,32)"/><text x="55.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.45%)</title><rect x="57" y="580" width="5" height="15" fill="rgb(234,199,46)"/><text x="60.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="57" y="596" width="5" height="15" fill="rgb(225,40,15)"/><text x="60.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="57" y="612" width="5" height="15" fill="rgb(238,228,34)"/><text x="60.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="57" y="628" width="5" height="15" fill="rgb(254,218,35)"/><text x="60.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="57" y="644" width="5" height="15" fill="rgb(241,146,50)"/><text x="60.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="57" y="660" width="5" height="15" fill="rgb(206,125,8)"/><text x="60.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.45%)</title><rect x="57" y="676" width="5" height="15" fill="rgb(253,65,2)"/><text x="60.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="57" y="692" width="5" height="15" fill="rgb(250,209,39)"/><text x="60.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="57" y="708" width="5" height="15" fill="rgb(234,184,28)"/><text x="60.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="57" y="724" width="5" height="15" fill="rgb(219,10,51)"/><text x="60.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="57" y="740" width="5" height="15" fill="rgb(243,83,31)"/><text x="60.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="57" y="756" width="5" height="15" fill="rgb(215,151,2)"/><text x="60.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.45%)</title><rect x="57" y="772" width="5" height="15" fill="rgb(212,162,28)"/><text x="60.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="788" width="2" height="15" fill="rgb(226,31,16)"/><text x="63.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="804" width="2" height="15" fill="rgb(210,149,40)"/><text x="63.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="820" width="2" height="15" fill="rgb(212,194,43)"/><text x="63.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="836" width="2" height="15" fill="rgb(233,208,50)"/><text x="63.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="852" width="2" height="15" fill="rgb(205,135,2)"/><text x="63.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="60" y="868" width="2" height="15" fill="rgb(206,202,41)"/><text x="63.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="884" width="2" height="15" fill="rgb(233,86,35)"/><text x="63.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.22%)</title><rect x="60" y="900" width="2" height="15" fill="rgb(214,144,20)"/><text x="63.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="916" width="2" height="15" fill="rgb(210,26,46)"/><text x="63.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="932" width="2" height="15" fill="rgb(231,186,41)"/><text x="63.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="948" width="2" height="15" fill="rgb(243,168,9)"/><text x="63.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="60" y="964" width="2" height="15" fill="rgb(238,180,2)"/><text x="63.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="980" width="2" height="15" fill="rgb(212,219,15)"/><text x="63.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py) (1 samples, 0.22%)</title><rect x="60" y="996" width="2" height="15" fill="rgb(253,58,36)"/><text x="63.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="1012" width="2" height="15" fill="rgb(227,66,3)"/><text x="63.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="1028" width="2" height="15" fill="rgb(227,103,22)"/><text x="63.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="1044" width="2" height="15" fill="rgb(210,218,51)"/><text x="63.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="60" y="1060" width="2" height="15" fill="rgb(219,106,41)"/><text x="63.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="1076" width="2" height="15" fill="rgb(246,69,24)"/><text x="63.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py) (1 samples, 0.22%)</title><rect x="60" y="1092" width="2" height="15" fill="rgb(226,76,15)"/><text x="63.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="1108" width="2" height="15" fill="rgb(239,45,19)"/><text x="63.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="1124" width="2" height="15" fill="rgb(243,77,49)"/><text x="63.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="1140" width="2" height="15" fill="rgb(231,109,42)"/><text x="63.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="60" y="1156" width="2" height="15" fill="rgb(220,186,47)"/><text x="63.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="1172" width="2" height="15" fill="rgb(215,148,32)"/><text x="63.00" y="1182.50"></text></g><g><title>&lt;module&gt; (simplejson/__init__.py) (1 samples, 0.22%)</title><rect x="60" y="1188" width="2" height="15" fill="rgb(239,197,46)"/><text x="63.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="1204" width="2" height="15" fill="rgb(207,67,39)"/><text x="63.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="1220" width="2" height="15" fill="rgb(213,205,45)"/><text x="63.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="60" y="1236" width="2" height="15" fill="rgb(207,100,26)"/><text x="63.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="60" y="1252" width="2" height="15" fill="rgb(215,228,39)"/><text x="63.00" y="1262.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="60" y="1268" width="2" height="15" fill="rgb(241,109,51)"/><text x="63.00" y="1278.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="60" y="1284" width="2" height="15" fill="rgb(229,189,52)"/><text x="63.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="260" width="3" height="15" fill="rgb(235,84,18)"/><text x="65.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="276" width="3" height="15" fill="rgb(220,223,41)"/><text x="65.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="292" width="3" height="15" fill="rgb(221,81,36)"/><text x="65.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="62" y="308" width="3" height="15" fill="rgb(218,103,11)"/><text x="65.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="324" width="3" height="15" fill="rgb(240,7,16)"/><text x="65.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.22%)</title><rect x="62" y="340" width="3" height="15" fill="rgb(225,84,38)"/><text x="65.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="356" width="3" height="15" fill="rgb(225,196,29)"/><text x="65.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="372" width="3" height="15" fill="rgb(213,123,41)"/><text x="65.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="388" width="3" height="15" fill="rgb(248,11,45)"/><text x="65.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="62" y="404" width="3" height="15" fill="rgb(238,73,52)"/><text x="65.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="420" width="3" height="15" fill="rgb(208,172,14)"/><text x="65.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.22%)</title><rect x="62" y="436" width="3" height="15" fill="rgb(248,8,13)"/><text x="65.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="452" width="3" height="15" fill="rgb(222,120,19)"/><text x="65.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="468" width="3" height="15" fill="rgb(227,24,2)"/><text x="65.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="484" width="3" height="15" fill="rgb(248,28,41)"/><text x="65.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="62" y="500" width="3" height="15" fill="rgb(242,132,48)"/><text x="65.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="516" width="3" height="15" fill="rgb(231,117,18)"/><text x="65.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/main.py) (1 samples, 0.22%)</title><rect x="62" y="532" width="3" height="15" fill="rgb(211,210,11)"/><text x="65.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="548" width="3" height="15" fill="rgb(218,164,18)"/><text x="65.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="564" width="3" height="15" fill="rgb(241,206,31)"/><text x="65.00" y="574.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="62" y="580" width="3" height="15" fill="rgb(234,107,34)"/><text x="65.00" y="590.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="62" y="596" width="3" height="15" fill="rgb(242,132,28)"/><text x="65.00" y="606.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="62" y="612" width="3" height="15" fill="rgb(217,3,30)"/><text x="65.00" y="622.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="62" y="628" width="3" height="15" fill="rgb(211,59,16)"/><text x="65.00" y="638.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="62" y="644" width="3" height="15" fill="rgb(238,178,45)"/><text x="65.00" y="654.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="62" y="660" width="3" height="15" fill="rgb(247,212,28)"/><text x="65.00" y="670.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.22%)</title><rect x="65" y="372" width="3" height="15" fill="rgb(231,181,25)"/><text x="68.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="388" width="3" height="15" fill="rgb(208,88,20)"/><text x="68.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="404" width="3" height="15" fill="rgb(205,38,30)"/><text x="68.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="420" width="3" height="15" fill="rgb(240,85,45)"/><text x="68.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="436" width="3" height="15" fill="rgb(252,41,27)"/><text x="68.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="452" width="3" height="15" fill="rgb(234,5,46)"/><text x="68.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="65" y="468" width="3" height="15" fill="rgb(213,67,29)"/><text x="68.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="484" width="3" height="15" fill="rgb(206,180,37)"/><text x="68.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.22%)</title><rect x="65" y="500" width="3" height="15" fill="rgb(235,27,31)"/><text x="68.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="516" width="3" height="15" fill="rgb(240,93,39)"/><text x="68.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="532" width="3" height="15" fill="rgb(209,174,2)"/><text x="68.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="548" width="3" height="15" fill="rgb(229,119,1)"/><text x="68.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="564" width="3" height="15" fill="rgb(234,98,20)"/><text x="68.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="580" width="3" height="15" fill="rgb(207,190,4)"/><text x="68.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="65" y="596" width="3" height="15" fill="rgb(233,59,37)"/><text x="68.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="612" width="3" height="15" fill="rgb(253,93,1)"/><text x="68.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.22%)</title><rect x="65" y="628" width="3" height="15" fill="rgb(248,78,26)"/><text x="68.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="644" width="3" height="15" fill="rgb(206,120,3)"/><text x="68.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="660" width="3" height="15" fill="rgb(244,47,19)"/><text x="68.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="676" width="3" height="15" fill="rgb(216,61,20)"/><text x="68.00" y="686.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="692" width="3" height="15" fill="rgb(215,21,23)"/><text x="68.00" y="702.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="65" y="708" width="3" height="15" fill="rgb(211,120,33)"/><text x="68.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="65" y="724" width="3" height="15" fill="rgb(240,176,38)"/><text x="68.00" y="734.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="65" y="740" width="3" height="15" fill="rgb(215,200,44)"/><text x="68.00" y="750.50"></text></g><g><title>0x7fe518138995 (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="65" y="756" width="3" height="15" fill="rgb(215,113,18)"/><text x="68.00" y="766.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.22%)</title><rect x="65" y="772" width="3" height="15" fill="rgb(233,39,9)"/><text x="68.00" y="782.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.22%)</title><rect x="65" y="788" width="3" height="15" fill="rgb(253,119,51)"/><text x="68.00" y="798.50"></text></g><g><title>0x7fe518138258 (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="65" y="804" width="3" height="15" fill="rgb(246,124,51)"/><text x="68.00" y="814.50"></text></g><g><title>0x7fe518185d7a (ld-2.29.so) (1 samples, 0.22%)</title><rect x="65" y="820" width="3" height="15" fill="rgb(206,10,6)"/><text x="68.00" y="830.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.22%)</title><rect x="65" y="836" width="3" height="15" fill="rgb(209,40,45)"/><text x="68.00" y="846.50"></text></g><g><title>0x7fe518186345 (ld-2.29.so) (1 samples, 0.22%)</title><rect x="65" y="852" width="3" height="15" fill="rgb(235,115,41)"/><text x="68.00" y="862.50"></text></g><g><title>0x7fe51817efec (ld-2.29.so) (1 samples, 0.22%)</title><rect x="65" y="868" width="3" height="15" fill="rgb(235,157,21)"/><text x="68.00" y="878.50"></text></g><g><title>0x7fe51817d56b (ld-2.29.so) (1 samples, 0.22%)</title><rect x="65" y="884" width="3" height="15" fill="rgb(244,165,43)"/><text x="68.00" y="894.50"></text></g><g><title>0x7fe51817cc6d (ld-2.29.so) (1 samples, 0.22%)</title><rect x="65" y="900" width="3" height="15" fill="rgb(219,185,13)"/><text x="68.00" y="910.50"></text></g><g><title>0x7fe51817c70f (ld-2.29.so) (1 samples, 0.22%)</title><rect x="65" y="916" width="3" height="15" fill="rgb(246,42,19)"/><text x="68.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.15%)</title><rect x="10" y="68" width="60" height="15" fill="rgb(218,24,49)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.15%)</title><rect x="10" y="84" width="60" height="15" fill="rgb(248,192,13)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.15%)</title><rect x="10" y="100" width="60" height="15" fill="rgb(224,83,52)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (23 samples, 5.15%)</title><rect x="10" y="116" width="60" height="15" fill="rgb(219,132,31)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.15%)</title><rect x="10" y="132" width="60" height="15" fill="rgb(226,62,33)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (23 samples, 5.15%)</title><rect x="10" y="148" width="60" height="15" fill="rgb(227,109,32)"/><text x="13.00" y="158.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.15%)</title><rect x="10" y="164" width="60" height="15" fill="rgb(237,1,43)"/><text x="13.00" y="174.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.15%)</title><rect x="10" y="180" width="60" height="15" fill="rgb(237,41,52)"/><text x="13.00" y="190.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.03%)</title><rect x="23" y="196" width="47" height="15" fill="rgb(205,225,17)"/><text x="26.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 4.03%)</title><rect x="23" y="212" width="47" height="15" fill="rgb(209,172,17)"/><text x="26.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.03%)</title><rect x="23" y="228" width="47" height="15" fill="rgb(207,141,39)"/><text x="26.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.67%)</title><rect x="62" y="244" width="8" height="15" fill="rgb(230,28,32)"/><text x="65.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="65" y="260" width="5" height="15" fill="rgb(208,63,46)"/><text x="68.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="65" y="276" width="5" height="15" fill="rgb(246,174,16)"/><text x="68.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="65" y="292" width="5" height="15" fill="rgb(247,126,28)"/><text x="68.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="65" y="308" width="5" height="15" fill="rgb(224,3,18)"/><text x="68.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="65" y="324" width="5" height="15" fill="rgb(237,157,12)"/><text x="68.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="65" y="340" width="5" height="15" fill="rgb(232,84,29)"/><text x="68.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="65" y="356" width="5" height="15" fill="rgb(243,163,39)"/><text x="68.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py) (1 samples, 0.22%)</title><rect x="68" y="372" width="2" height="15" fill="rgb(207,2,38)"/><text x="71.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="68" y="388" width="2" height="15" fill="rgb(245,188,35)"/><text x="71.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="68" y="404" width="2" height="15" fill="rgb(214,116,50)"/><text x="71.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="68" y="420" width="2" height="15" fill="rgb(238,185,42)"/><text x="71.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="68" y="436" width="2" height="15" fill="rgb(248,100,36)"/><text x="71.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="68" y="452" width="2" height="15" fill="rgb(213,181,34)"/><text x="71.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/laguerre.py) (1 samples, 0.22%)</title><rect x="68" y="468" width="2" height="15" fill="rgb(220,35,9)"/><text x="71.00" y="478.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="68" y="484" width="2" height="15" fill="rgb(238,202,38)"/><text x="71.00" y="494.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="73" y="132" width="2" height="15" fill="rgb(208,11,17)"/><text x="76.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.45%)</title><rect x="73" y="116" width="5" height="15" fill="rgb(210,165,23)"/><text x="76.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="75" y="132" width="3" height="15" fill="rgb(223,68,11)"/><text x="78.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.22%)</title><rect x="75" y="148" width="3" height="15" fill="rgb(254,209,51)"/><text x="78.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.22%)</title><rect x="105" y="180" width="2" height="15" fill="rgb(233,116,48)"/><text x="108.00" y="190.50"></text></g><g><title>0x7fe4d7f20ff9 (?) (1 samples, 0.22%)</title><rect x="120" y="212" width="3" height="15" fill="rgb(239,49,19)"/><text x="123.00" y="222.50"></text></g><g><title>0x7fe4d7f1bef6 (?) (1 samples, 0.22%)</title><rect x="120" y="228" width="3" height="15" fill="rgb(244,11,46)"/><text x="123.00" y="238.50"></text></g><g><title>0x7fe4d7f10962 (?) (1 samples, 0.22%)</title><rect x="120" y="244" width="3" height="15" fill="rgb(233,225,8)"/><text x="123.00" y="254.50"></text></g><g><title>0x7fe4d7f447a7 (?) (1 samples, 0.22%)</title><rect x="120" y="260" width="3" height="15" fill="rgb(239,67,5)"/><text x="123.00" y="270.50"></text></g><g><title>0x7fe4d7f44379 (?) (1 samples, 0.22%)</title><rect x="120" y="276" width="3" height="15" fill="rgb(235,101,11)"/><text x="123.00" y="286.50"></text></g><g><title>0x7fe4d83a28b8 (?) (1 samples, 0.22%)</title><rect x="120" y="292" width="3" height="15" fill="rgb(233,181,47)"/><text x="123.00" y="302.50"></text></g><g><title>0x7fe4d83a0c7f (?) (1 samples, 0.22%)</title><rect x="120" y="308" width="3" height="15" fill="rgb(228,217,41)"/><text x="123.00" y="318.50"></text></g><g><title>0x7fe4d83b32e5 (?) (1 samples, 0.22%)</title><rect x="120" y="324" width="3" height="15" fill="rgb(214,135,43)"/><text x="123.00" y="334.50"></text></g><g><title>0x7fe4d835b6aa (?) (1 samples, 0.22%)</title><rect x="120" y="340" width="3" height="15" fill="rgb(240,207,25)"/><text x="123.00" y="350.50"></text></g><g><title>0x7fe4d8375f2a (?) (1 samples, 0.22%)</title><rect x="120" y="356" width="3" height="15" fill="rgb(242,53,54)"/><text x="123.00" y="366.50"></text></g><g><title>0x7fe4d8413efb (?) (1 samples, 0.22%)</title><rect x="120" y="372" width="3" height="15" fill="rgb(249,219,14)"/><text x="123.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="120" y="388" width="3" height="15" fill="rgb(226,182,6)"/><text x="123.00" y="398.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.45%)</title><rect x="123" y="212" width="5" height="15" fill="rgb(218,129,12)"/><text x="126.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="123" y="228" width="5" height="15" fill="rgb(206,1,48)"/><text x="126.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="126" y="244" width="2" height="15" fill="rgb(220,180,10)"/><text x="129.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="126" y="260" width="2" height="15" fill="rgb(206,10,0)"/><text x="129.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (2 samples, 0.45%)</title><rect x="131" y="260" width="5" height="15" fill="rgb(215,200,10)"/><text x="134.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="139" y="308" width="2" height="15" fill="rgb(210,40,47)"/><text x="142.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="139" y="324" width="2" height="15" fill="rgb(206,179,26)"/><text x="142.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="139" y="340" width="2" height="15" fill="rgb(216,207,12)"/><text x="142.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="139" y="356" width="2" height="15" fill="rgb(224,157,12)"/><text x="142.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="139" y="292" width="5" height="15" fill="rgb(216,139,53)"/><text x="142.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="141" y="308" width="3" height="15" fill="rgb(229,84,15)"/><text x="144.00" y="318.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="141" y="324" width="3" height="15" fill="rgb(208,71,2)"/><text x="144.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="144" y="292" width="3" height="15" fill="rgb(211,147,45)"/><text x="147.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="144" y="308" width="3" height="15" fill="rgb(217,144,38)"/><text x="147.00" y="318.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;float&gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="147" y="308" width="2" height="15" fill="rgb(238,28,20)"/><text x="150.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="147" y="292" width="5" height="15" fill="rgb(235,36,54)"/><text x="150.00" y="302.50"></text></g><g><title>onnxruntime::TensorType&lt;float&gt;::GetElementType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="149" y="308" width="3" height="15" fill="rgb(252,98,44)"/><text x="152.00" y="318.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="155" y="356" width="5" height="15" fill="rgb(208,162,12)"/><text x="158.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="155" y="372" width="5" height="15" fill="rgb(239,8,48)"/><text x="158.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="155" y="388" width="5" height="15" fill="rgb(207,168,35)"/><text x="158.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="155" y="404" width="5" height="15" fill="rgb(219,109,12)"/><text x="158.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="155" y="420" width="5" height="15" fill="rgb(210,6,52)"/><text x="158.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="155" y="436" width="5" height="15" fill="rgb(239,105,50)"/><text x="158.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="155" y="452" width="5" height="15" fill="rgb(209,19,34)"/><text x="158.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::Info (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="157" y="468" width="3" height="15" fill="rgb(224,193,40)"/><text x="160.00" y="478.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="155" y="340" width="8" height="15" fill="rgb(248,215,0)"/><text x="158.00" y="350.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="160" y="356" width="3" height="15" fill="rgb(233,199,26)"/><text x="163.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="163" y="340" width="8" height="15" fill="rgb(215,57,37)"/><text x="166.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="168" y="356" width="3" height="15" fill="rgb(241,132,10)"/><text x="171.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="168" y="372" width="3" height="15" fill="rgb(224,70,19)"/><text x="171.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="168" y="388" width="3" height="15" fill="rgb(221,50,44)"/><text x="171.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="168" y="404" width="3" height="15" fill="rgb(239,87,34)"/><text x="171.00" y="414.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="168" y="420" width="3" height="15" fill="rgb(224,54,51)"/><text x="171.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="171" y="340" width="2" height="15" fill="rgb(228,113,25)"/><text x="174.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="173" y="340" width="3" height="15" fill="rgb(254,200,8)"/><text x="176.00" y="350.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="176" y="340" width="2" height="15" fill="rgb(206,161,33)"/><text x="179.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="176" y="356" width="2" height="15" fill="rgb(223,156,51)"/><text x="179.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="176" y="372" width="2" height="15" fill="rgb(238,6,31)"/><text x="179.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="176" y="388" width="2" height="15" fill="rgb(241,137,29)"/><text x="179.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="176" y="404" width="2" height="15" fill="rgb(214,69,26)"/><text x="179.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="176" y="420" width="2" height="15" fill="rgb(241,156,5)"/><text x="179.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="176" y="436" width="2" height="15" fill="rgb(218,226,23)"/><text x="179.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="176" y="452" width="2" height="15" fill="rgb(245,77,22)"/><text x="179.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="176" y="468" width="2" height="15" fill="rgb(219,186,0)"/><text x="179.00" y="478.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.46%)</title><rect x="152" y="308" width="29" height="15" fill="rgb(238,177,10)"/><text x="155.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.24%)</title><rect x="155" y="324" width="26" height="15" fill="rgb(228,28,10)"/><text x="158.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="178" y="340" width="3" height="15" fill="rgb(233,132,29)"/><text x="181.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 4.25%)</title><rect x="136" y="260" width="50" height="15" fill="rgb(216,93,31)"/><text x="139.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 4.03%)</title><rect x="139" y="276" width="47" height="15" fill="rgb(223,70,51)"/><text x="142.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 2.91%)</title><rect x="152" y="292" width="34" height="15" fill="rgb(254,91,5)"/><text x="155.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="181" y="308" width="5" height="15" fill="rgb(226,66,53)"/><text x="184.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="181" y="324" width="5" height="15" fill="rgb(253,151,3)"/><text x="184.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="184" y="340" width="2" height="15" fill="rgb(208,207,46)"/><text x="187.00" y="350.50"></text></g><g><title>0x7fe517ec6e7a (libc-2.29.so) (1 samples, 0.22%)</title><rect x="184" y="356" width="2" height="15" fill="rgb(205,92,5)"/><text x="187.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="186" y="260" width="8" height="15" fill="rgb(234,196,40)"/><text x="189.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="189" y="276" width="5" height="15" fill="rgb(247,5,19)"/><text x="192.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="192" y="292" width="2" height="15" fill="rgb(230,154,6)"/><text x="195.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="192" y="308" width="2" height="15" fill="rgb(253,113,12)"/><text x="195.00" y="318.50"></text></g><g><title>onnxruntime::PrimitiveDataTypeBase::AsPrimitiveDataType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="192" y="324" width="2" height="15" fill="rgb(225,222,51)"/><text x="195.00" y="334.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.22%)</title><rect x="197" y="276" width="3" height="15" fill="rgb(215,97,6)"/><text x="200.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="197" y="292" width="3" height="15" fill="rgb(235,198,2)"/><text x="200.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.22%)</title><rect x="197" y="308" width="3" height="15" fill="rgb(243,183,12)"/><text x="200.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.22%)</title><rect x="197" y="324" width="3" height="15" fill="rgb(242,162,26)"/><text x="200.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.22%)</title><rect x="197" y="340" width="3" height="15" fill="rgb(243,156,9)"/><text x="200.00" y="350.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="194" y="260" width="8" height="15" fill="rgb(249,128,15)"/><text x="197.00" y="270.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="200" y="276" width="2" height="15" fill="rgb(246,95,34)"/><text x="203.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 6.49%)</title><rect x="128" y="244" width="77" height="15" fill="rgb(236,118,17)"/><text x="131.00" y="254.50">onnxrunt..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="202" y="260" width="3" height="15" fill="rgb(245,211,50)"/><text x="205.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="205" y="244" width="8" height="15" fill="rgb(218,117,22)"/><text x="208.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="205" y="260" width="8" height="15" fill="rgb(244,137,44)"/><text x="208.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (50 samples, 11.19%)</title><rect x="83" y="132" width="132" height="15" fill="rgb(236,195,0)"/><text x="86.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (48 samples, 10.74%)</title><rect x="89" y="148" width="126" height="15" fill="rgb(245,66,28)"/><text x="92.00" y="158.50">run (mlprodict/..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (45 samples, 10.07%)</title><rect x="97" y="164" width="118" height="15" fill="rgb(216,114,30)"/><text x="100.00" y="174.50">_run_whole_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (41 samples, 9.17%)</title><rect x="107" y="180" width="108" height="15" fill="rgb(216,110,37)"/><text x="110.00" y="190.50">run (mlprodic..</text></g><g><title>run (onnxruntime/capi/session.py) (40 samples, 8.95%)</title><rect x="110" y="196" width="105" height="15" fill="rgb(205,82,1)"/><text x="113.00" y="206.50">run (onnxrun..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 7.38%)</title><rect x="128" y="212" width="87" height="15" fill="rgb(230,184,38)"/><text x="131.00" y="222.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 7.38%)</title><rect x="128" y="228" width="87" height="15" fill="rgb(235,6,47)"/><text x="131.00" y="238.50">void pybin..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="213" y="244" width="2" height="15" fill="rgb(238,124,15)"/><text x="216.00" y="254.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py) (56 samples, 12.53%)</title><rect x="70" y="68" width="148" height="15" fill="rgb(209,198,45)"/><text x="73.00" y="78.50">profile_ort (bench..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py) (56 samples, 12.53%)</title><rect x="70" y="84" width="148" height="15" fill="rgb(217,116,54)"/><text x="73.00" y="94.50">setup_profile (ben..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py) (56 samples, 12.53%)</title><rect x="70" y="100" width="148" height="15" fill="rgb(212,2,15)"/><text x="73.00" y="110.50">profile (bench_Log..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (53 samples, 11.86%)</title><rect x="78" y="116" width="140" height="15" fill="rgb(225,120,49)"/><text x="81.00" y="126.50">time_predict (mlp..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.22%)</title><rect x="215" y="132" width="3" height="15" fill="rgb(242,72,9)"/><text x="218.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="223" y="116" width="3" height="15" fill="rgb(209,4,40)"/><text x="226.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="223" y="132" width="3" height="15" fill="rgb(229,112,46)"/><text x="226.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.22%)</title><rect x="276" y="180" width="3" height="15" fill="rgb(237,225,37)"/><text x="279.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.22%)</title><rect x="371" y="196" width="3" height="15" fill="rgb(241,171,6)"/><text x="374.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.67%)</title><rect x="384" y="212" width="8" height="15" fill="rgb(224,75,53)"/><text x="387.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.67%)</title><rect x="384" y="228" width="8" height="15" fill="rgb(212,5,24)"/><text x="387.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.45%)</title><rect x="387" y="244" width="5" height="15" fill="rgb(218,47,33)"/><text x="390.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.22%)</title><rect x="390" y="260" width="2" height="15" fill="rgb(208,142,33)"/><text x="393.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (3 samples, 0.67%)</title><rect x="392" y="212" width="8" height="15" fill="rgb(238,210,50)"/><text x="395.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (3 samples, 0.67%)</title><rect x="392" y="228" width="8" height="15" fill="rgb(230,116,30)"/><text x="395.00" y="238.50"></text></g><g><title>0x7fe517ed112b (libc-2.29.so) (1 samples, 0.22%)</title><rect x="429" y="244" width="3" height="15" fill="rgb(219,110,34)"/><text x="432.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="440" y="340" width="2" height="15" fill="rgb(240,121,29)"/><text x="443.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (2 samples, 0.45%)</title><rect x="440" y="324" width="5" height="15" fill="rgb(236,98,24)"/><text x="443.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="442" y="340" width="3" height="15" fill="rgb(219,43,49)"/><text x="445.00" y="350.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.22%)</title><rect x="445" y="324" width="3" height="15" fill="rgb(210,102,41)"/><text x="448.00" y="334.50"></text></g><g><title>0x7fe517f8ed24 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="445" y="340" width="3" height="15" fill="rgb(253,229,41)"/><text x="448.00" y="350.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (7 samples, 1.57%)</title><rect x="432" y="276" width="18" height="15" fill="rgb(220,74,47)"/><text x="435.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 1.34%)</title><rect x="435" y="292" width="15" height="15" fill="rgb(237,216,20)"/><text x="438.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (5 samples, 1.12%)</title><rect x="437" y="308" width="13" height="15" fill="rgb(217,168,52)"/><text x="440.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="448" y="324" width="2" height="15" fill="rgb(228,77,37)"/><text x="451.00" y="334.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.22%)</title><rect x="453" y="292" width="3" height="15" fill="rgb(226,46,15)"/><text x="456.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.22%)</title><rect x="453" y="308" width="3" height="15" fill="rgb(238,5,11)"/><text x="456.00" y="318.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.22%)</title><rect x="453" y="324" width="3" height="15" fill="rgb(242,161,21)"/><text x="456.00" y="334.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (10 samples, 2.24%)</title><rect x="432" y="244" width="26" height="15" fill="rgb(239,66,5)"/><text x="435.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 2.24%)</title><rect x="432" y="260" width="26" height="15" fill="rgb(215,164,53)"/><text x="435.00" y="270.50">a..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (3 samples, 0.67%)</title><rect x="450" y="276" width="8" height="15" fill="rgb(232,227,24)"/><text x="453.00" y="286.50"></text></g><g><title>pyobject_array_insert (arrayfunction_override.c) (1 samples, 0.22%)</title><rect x="456" y="292" width="2" height="15" fill="rgb(226,28,12)"/><text x="459.00" y="302.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (7 samples, 1.57%)</title><rect x="458" y="244" width="19" height="15" fill="rgb(210,227,7)"/><text x="461.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;) (6 samples, 1.34%)</title><rect x="461" y="260" width="16" height="15" fill="rgb(237,132,30)"/><text x="464.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.12%)</title><rect x="464" y="276" width="13" height="15" fill="rgb(234,20,24)"/><text x="467.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (4 samples, 0.89%)</title><rect x="466" y="292" width="11" height="15" fill="rgb(213,52,31)"/><text x="469.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (2 samples, 0.45%)</title><rect x="471" y="308" width="6" height="15" fill="rgb(222,161,37)"/><text x="474.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (2 samples, 0.45%)</title><rect x="471" y="324" width="6" height="15" fill="rgb(248,104,4)"/><text x="474.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (2 samples, 0.45%)</title><rect x="471" y="340" width="6" height="15" fill="rgb(249,54,6)"/><text x="474.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.45%)</title><rect x="471" y="356" width="6" height="15" fill="rgb(251,16,33)"/><text x="474.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.45%)</title><rect x="471" y="372" width="6" height="15" fill="rgb(207,216,40)"/><text x="474.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (2 samples, 0.45%)</title><rect x="471" y="388" width="6" height="15" fill="rgb(241,57,5)"/><text x="474.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.45%)</title><rect x="471" y="404" width="6" height="15" fill="rgb(220,114,26)"/><text x="474.00" y="414.50"></text></g><g><title>0x7fe517ec6e50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="477" y="308" width="2" height="15" fill="rgb(206,149,24)"/><text x="480.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.45%)</title><rect x="477" y="260" width="5" height="15" fill="rgb(215,71,49)"/><text x="480.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.45%)</title><rect x="477" y="276" width="5" height="15" fill="rgb(245,82,35)"/><text x="480.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.45%)</title><rect x="477" y="292" width="5" height="15" fill="rgb(207,110,2)"/><text x="480.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.22%)</title><rect x="479" y="308" width="3" height="15" fill="rgb(240,148,26)"/><text x="482.00" y="318.50"></text></g><g><title>0x7fe517f8e130 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="479" y="324" width="3" height="15" fill="rgb(235,136,5)"/><text x="482.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="490" y="276" width="3" height="15" fill="rgb(243,100,14)"/><text x="493.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.22%)</title><rect x="490" y="292" width="3" height="15" fill="rgb(207,49,52)"/><text x="493.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.22%)</title><rect x="493" y="276" width="2" height="15" fill="rgb(246,0,3)"/><text x="496.00" y="286.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.22%)</title><rect x="495" y="340" width="3" height="15" fill="rgb(224,217,53)"/><text x="498.00" y="350.50"></text></g><g><title>sub_128 (npy_extint128.h) (1 samples, 0.22%)</title><rect x="495" y="356" width="3" height="15" fill="rgb(216,98,33)"/><text x="498.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.22%)</title><rect x="495" y="372" width="3" height="15" fill="rgb(240,202,52)"/><text x="498.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.45%)</title><rect x="495" y="292" width="6" height="15" fill="rgb(251,73,14)"/><text x="498.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.45%)</title><rect x="495" y="308" width="6" height="15" fill="rgb(214,126,28)"/><text x="498.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.45%)</title><rect x="495" y="324" width="6" height="15" fill="rgb(251,213,34)"/><text x="498.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="498" y="340" width="3" height="15" fill="rgb(217,168,27)"/><text x="501.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="501" y="292" width="2" height="15" fill="rgb(206,207,9)"/><text x="504.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.22%)</title><rect x="501" y="308" width="2" height="15" fill="rgb(217,179,21)"/><text x="504.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.22%)</title><rect x="501" y="324" width="2" height="15" fill="rgb(233,20,41)"/><text x="504.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.89%)</title><rect x="495" y="276" width="11" height="15" fill="rgb(221,68,27)"/><text x="498.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="503" y="292" width="3" height="15" fill="rgb(233,54,33)"/><text x="506.00" y="302.50"></text></g><g><title>0x7fe503198302 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="503" y="308" width="3" height="15" fill="rgb(229,201,42)"/><text x="506.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.22%)</title><rect x="506" y="276" width="2" height="15" fill="rgb(223,152,48)"/><text x="509.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 2.46%)</title><rect x="482" y="260" width="29" height="15" fill="rgb(242,64,19)"/><text x="485.00" y="270.50">Py..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="508" y="276" width="3" height="15" fill="rgb(247,163,51)"/><text x="511.00" y="286.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.22%)</title><rect x="511" y="260" width="3" height="15" fill="rgb(210,62,48)"/><text x="514.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (43 samples, 9.62%)</title><rect x="403" y="228" width="113" height="15" fill="rgb(250,226,35)"/><text x="406.00" y="238.50">_run (mlprodi..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 3.36%)</title><rect x="477" y="244" width="39" height="15" fill="rgb(213,103,54)"/><text x="480.00" y="254.50">ufu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.22%)</title><rect x="514" y="260" width="2" height="15" fill="rgb(231,149,45)"/><text x="517.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.22%)</title><rect x="535" y="260" width="2" height="15" fill="rgb(215,84,45)"/><text x="538.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="537" y="276" width="3" height="15" fill="rgb(222,86,41)"/><text x="540.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.22%)</title><rect x="537" y="292" width="3" height="15" fill="rgb(236,17,37)"/><text x="540.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.45%)</title><rect x="537" y="260" width="6" height="15" fill="rgb(233,143,10)"/><text x="540.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="540" y="276" width="3" height="15" fill="rgb(249,72,43)"/><text x="543.00" y="286.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.22%)</title><rect x="540" y="292" width="3" height="15" fill="rgb(242,45,25)"/><text x="543.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.22%)</title><rect x="540" y="308" width="3" height="15" fill="rgb(226,81,41)"/><text x="543.00" y="318.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.22%)</title><rect x="543" y="276" width="2" height="15" fill="rgb(226,222,21)"/><text x="546.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.22%)</title><rect x="543" y="292" width="2" height="15" fill="rgb(240,102,47)"/><text x="546.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.22%)</title><rect x="543" y="308" width="2" height="15" fill="rgb(227,91,46)"/><text x="546.00" y="318.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.22%)</title><rect x="543" y="324" width="2" height="15" fill="rgb(247,210,20)"/><text x="546.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.45%)</title><rect x="543" y="260" width="5" height="15" fill="rgb(219,127,12)"/><text x="546.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.22%)</title><rect x="545" y="276" width="3" height="15" fill="rgb(242,152,15)"/><text x="548.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.22%)</title><rect x="545" y="292" width="3" height="15" fill="rgb(253,20,54)"/><text x="548.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="545" y="308" width="3" height="15" fill="rgb(248,147,42)"/><text x="548.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.67%)</title><rect x="548" y="324" width="8" height="15" fill="rgb(229,134,8)"/><text x="551.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.67%)</title><rect x="548" y="340" width="8" height="15" fill="rgb(231,227,47)"/><text x="551.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.67%)</title><rect x="548" y="356" width="8" height="15" fill="rgb(229,168,34)"/><text x="551.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.67%)</title><rect x="548" y="372" width="8" height="15" fill="rgb(225,200,49)"/><text x="551.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.67%)</title><rect x="548" y="388" width="8" height="15" fill="rgb(231,37,52)"/><text x="551.00" y="398.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="553" y="404" width="3" height="15" fill="rgb(221,183,36)"/><text x="556.00" y="414.50"></text></g><g><title>0x7fe5170d2930 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="561" y="340" width="3" height="15" fill="rgb(237,110,40)"/><text x="564.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.22%)</title><rect x="564" y="340" width="3" height="15" fill="rgb(207,135,40)"/><text x="567.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.22%)</title><rect x="564" y="356" width="3" height="15" fill="rgb(248,24,32)"/><text x="567.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.22%)</title><rect x="564" y="372" width="3" height="15" fill="rgb(252,77,29)"/><text x="567.00" y="382.50"></text></g><g><title>0x7fe5170d30a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="564" y="388" width="3" height="15" fill="rgb(221,156,6)"/><text x="567.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.22%)</title><rect x="569" y="372" width="3" height="15" fill="rgb(253,179,19)"/><text x="572.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.22%)</title><rect x="569" y="388" width="3" height="15" fill="rgb(216,88,31)"/><text x="572.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.45%)</title><rect x="572" y="372" width="5" height="15" fill="rgb(209,4,2)"/><text x="575.00" y="382.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.22%)</title><rect x="577" y="420" width="3" height="15" fill="rgb(244,47,8)"/><text x="580.00" y="430.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 0.67%)</title><rect x="577" y="372" width="8" height="15" fill="rgb(239,35,9)"/><text x="580.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 0.67%)</title><rect x="577" y="388" width="8" height="15" fill="rgb(223,222,11)"/><text x="580.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (3 samples, 0.67%)</title><rect x="577" y="404" width="8" height="15" fill="rgb(213,47,15)"/><text x="580.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.45%)</title><rect x="580" y="420" width="5" height="15" fill="rgb(220,13,24)"/><text x="583.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (2 samples, 0.45%)</title><rect x="580" y="436" width="5" height="15" fill="rgb(216,136,28)"/><text x="583.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.45%)</title><rect x="580" y="452" width="5" height="15" fill="rgb(240,38,21)"/><text x="583.00" y="462.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.22%)</title><rect x="585" y="372" width="3" height="15" fill="rgb(243,43,1)"/><text x="588.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.22%)</title><rect x="585" y="388" width="3" height="15" fill="rgb(234,41,3)"/><text x="588.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.22%)</title><rect x="585" y="404" width="3" height="15" fill="rgb(212,124,45)"/><text x="588.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.22%)</title><rect x="585" y="420" width="3" height="15" fill="rgb(249,226,5)"/><text x="588.00" y="430.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.22%)</title><rect x="585" y="436" width="3" height="15" fill="rgb(239,145,12)"/><text x="588.00" y="446.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.22%)</title><rect x="588" y="372" width="2" height="15" fill="rgb(228,89,54)"/><text x="591.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (10 samples, 2.24%)</title><rect x="567" y="356" width="26" height="15" fill="rgb(217,168,37)"/><text x="570.00" y="366.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.22%)</title><rect x="590" y="372" width="3" height="15" fill="rgb(212,126,54)"/><text x="593.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="590" y="388" width="3" height="15" fill="rgb(228,11,20)"/><text x="593.00" y="398.50"></text></g><g><title>array_sum (methods.c) (18 samples, 4.03%)</title><rect x="548" y="260" width="48" height="15" fill="rgb(254,140,21)"/><text x="551.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (18 samples, 4.03%)</title><rect x="548" y="276" width="48" height="15" fill="rgb(251,86,41)"/><text x="551.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (18 samples, 4.03%)</title><rect x="548" y="292" width="48" height="15" fill="rgb(253,126,7)"/><text x="551.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (18 samples, 4.03%)</title><rect x="548" y="308" width="48" height="15" fill="rgb(250,121,35)"/><text x="551.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (15 samples, 3.36%)</title><rect x="556" y="324" width="40" height="15" fill="rgb(207,93,51)"/><text x="559.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (11 samples, 2.46%)</title><rect x="567" y="340" width="29" height="15" fill="rgb(215,167,4)"/><text x="570.00" y="350.50">Py..</text></g><g><title>_get_identity (ufunc_object.c) (1 samples, 0.22%)</title><rect x="593" y="356" width="3" height="15" fill="rgb(211,127,34)"/><text x="596.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.22%)</title><rect x="598" y="340" width="3" height="15" fill="rgb(207,94,26)"/><text x="601.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.45%)</title><rect x="598" y="324" width="5" height="15" fill="rgb(237,55,13)"/><text x="601.00" y="334.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.22%)</title><rect x="601" y="340" width="2" height="15" fill="rgb(213,116,47)"/><text x="604.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.67%)</title><rect x="598" y="308" width="8" height="15" fill="rgb(221,6,47)"/><text x="601.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.22%)</title><rect x="603" y="324" width="3" height="15" fill="rgb(211,103,24)"/><text x="606.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="603" y="340" width="3" height="15" fill="rgb(245,222,35)"/><text x="606.00" y="350.50"></text></g><g><title>FLOAT_absolute (loops.c.src) (1 samples, 0.22%)</title><rect x="609" y="324" width="2" height="15" fill="rgb(209,89,28)"/><text x="612.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src) (1 samples, 0.22%)</title><rect x="609" y="340" width="2" height="15" fill="rgb(227,137,35)"/><text x="612.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src) (1 samples, 0.22%)</title><rect x="609" y="356" width="2" height="15" fill="rgb(225,215,40)"/><text x="612.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.34%)</title><rect x="598" y="292" width="16" height="15" fill="rgb(218,94,49)"/><text x="601.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (3 samples, 0.67%)</title><rect x="606" y="308" width="8" height="15" fill="rgb(242,133,37)"/><text x="609.00" y="318.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="611" y="324" width="3" height="15" fill="rgb(222,21,17)"/><text x="614.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.57%)</title><rect x="598" y="276" width="19" height="15" fill="rgb(221,216,12)"/><text x="601.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.22%)</title><rect x="614" y="292" width="3" height="15" fill="rgb(229,222,18)"/><text x="617.00" y="302.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.22%)</title><rect x="614" y="308" width="3" height="15" fill="rgb(243,27,40)"/><text x="617.00" y="318.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (139 samples, 31.10%)</title><rect x="255" y="164" width="367" height="15" fill="rgb(234,108,24)"/><text x="258.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (130 samples, 29.08%)</title><rect x="279" y="180" width="343" height="15" fill="rgb(225,163,21)"/><text x="282.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (94 samples, 21.03%)</title><rect x="374" y="196" width="248" height="15" fill="rgb(210,37,7)"/><text x="377.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (84 samples, 18.79%)</title><rect x="400" y="212" width="222" height="15" fill="rgb(239,55,40)"/><text x="403.00" y="222.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (40 samples, 8.95%)</title><rect x="516" y="228" width="106" height="15" fill="rgb(234,4,2)"/><text x="519.00" y="238.50">_run (mlprod..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (37 samples, 8.28%)</title><rect x="524" y="244" width="98" height="15" fill="rgb(235,109,52)"/><text x="527.00" y="254.50">norm_l1 (ml..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.24%)</title><rect x="596" y="260" width="26" height="15" fill="rgb(240,104,6)"/><text x="599.00" y="270.50">u..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.45%)</title><rect x="617" y="276" width="5" height="15" fill="rgb(252,126,11)"/><text x="620.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (147 samples, 32.89%)</title><rect x="237" y="132" width="388" height="15" fill="rgb(226,157,1)"/><text x="240.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (145 samples, 32.44%)</title><rect x="242" y="148" width="383" height="15" fill="rgb(229,156,22)"/><text x="245.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="622" y="164" width="3" height="15" fill="rgb(217,166,43)"/><text x="625.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="622" y="180" width="3" height="15" fill="rgb(226,181,34)"/><text x="625.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.22%)</title><rect x="622" y="196" width="3" height="15" fill="rgb(253,19,35)"/><text x="625.00" y="206.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.22%)</title><rect x="625" y="132" width="2" height="15" fill="rgb(224,23,51)"/><text x="628.00" y="142.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py) (156 samples, 34.90%)</title><rect x="218" y="100" width="412" height="15" fill="rgb(224,73,9)"/><text x="221.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solv..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (153 samples, 34.23%)</title><rect x="226" y="116" width="404" height="15" fill="rgb(208,35,41)"/><text x="229.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="627" y="132" width="3" height="15" fill="rgb(251,5,18)"/><text x="630.00" y="142.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="630" y="564" width="2" height="15" fill="rgb(238,14,2)"/><text x="633.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="630" y="580" width="2" height="15" fill="rgb(227,175,54)"/><text x="633.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="630" y="596" width="2" height="15" fill="rgb(233,57,20)"/><text x="633.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="630" y="612" width="2" height="15" fill="rgb(215,87,7)"/><text x="633.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="630" y="628" width="2" height="15" fill="rgb(207,79,7)"/><text x="633.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="630" y="644" width="2" height="15" fill="rgb(245,132,26)"/><text x="633.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="630" y="660" width="2" height="15" fill="rgb(234,222,13)"/><text x="633.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="630" y="676" width="2" height="15" fill="rgb(221,6,24)"/><text x="633.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="630" y="692" width="2" height="15" fill="rgb(216,180,21)"/><text x="633.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="630" y="708" width="2" height="15" fill="rgb(227,57,45)"/><text x="633.00" y="718.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="630" y="724" width="2" height="15" fill="rgb(209,191,5)"/><text x="633.00" y="734.50"></text></g><g><title>new_func (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="630" y="740" width="2" height="15" fill="rgb(214,133,22)"/><text x="633.00" y="750.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="630" y="756" width="2" height="15" fill="rgb(206,193,12)"/><text x="633.00" y="766.50"></text></g><g><title>fold (jinja2/optimizer.py) (1 samples, 0.22%)</title><rect x="630" y="772" width="2" height="15" fill="rgb(219,200,11)"/><text x="633.00" y="782.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="630" y="788" width="2" height="15" fill="rgb(208,6,22)"/><text x="633.00" y="798.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="630" y="804" width="2" height="15" fill="rgb(214,188,44)"/><text x="633.00" y="814.50"></text></g><g><title>fold (jinja2/optimizer.py) (1 samples, 0.22%)</title><rect x="630" y="820" width="2" height="15" fill="rgb(249,160,42)"/><text x="633.00" y="830.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="630" y="836" width="2" height="15" fill="rgb(249,186,50)"/><text x="633.00" y="846.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py) (158 samples, 35.35%)</title><rect x="218" y="68" width="417" height="15" fill="rgb(230,32,48)"/><text x="221.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py) (158 samples, 35.35%)</title><rect x="218" y="84" width="417" height="15" fill="rgb(239,227,41)"/><text x="221.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_6..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.45%)</title><rect x="630" y="100" width="5" height="15" fill="rgb(217,115,11)"/><text x="633.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.45%)</title><rect x="630" y="116" width="5" height="15" fill="rgb(206,56,54)"/><text x="633.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.45%)</title><rect x="630" y="132" width="5" height="15" fill="rgb(244,8,51)"/><text x="633.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.45%)</title><rect x="630" y="148" width="5" height="15" fill="rgb(241,84,50)"/><text x="633.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.45%)</title><rect x="630" y="164" width="5" height="15" fill="rgb(231,74,9)"/><text x="633.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.45%)</title><rect x="630" y="180" width="5" height="15" fill="rgb(253,3,21)"/><text x="633.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.45%)</title><rect x="630" y="196" width="5" height="15" fill="rgb(223,15,15)"/><text x="633.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="630" y="212" width="5" height="15" fill="rgb(250,155,14)"/><text x="633.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="630" y="228" width="5" height="15" fill="rgb(208,83,23)"/><text x="633.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="630" y="244" width="5" height="15" fill="rgb(244,173,2)"/><text x="633.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="630" y="260" width="5" height="15" fill="rgb(249,75,33)"/><text x="633.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="630" y="276" width="5" height="15" fill="rgb(236,43,34)"/><text x="633.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.45%)</title><rect x="630" y="292" width="5" height="15" fill="rgb(217,78,29)"/><text x="633.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="630" y="308" width="5" height="15" fill="rgb(228,110,51)"/><text x="633.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="630" y="324" width="5" height="15" fill="rgb(225,139,37)"/><text x="633.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="630" y="340" width="5" height="15" fill="rgb(247,169,54)"/><text x="633.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="630" y="356" width="5" height="15" fill="rgb(239,140,18)"/><text x="633.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="630" y="372" width="5" height="15" fill="rgb(242,24,18)"/><text x="633.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.45%)</title><rect x="630" y="388" width="5" height="15" fill="rgb(241,81,49)"/><text x="633.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="630" y="404" width="5" height="15" fill="rgb(253,213,29)"/><text x="633.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="630" y="420" width="5" height="15" fill="rgb(212,101,47)"/><text x="633.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="630" y="436" width="5" height="15" fill="rgb(244,205,13)"/><text x="633.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="630" y="452" width="5" height="15" fill="rgb(211,105,50)"/><text x="633.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="630" y="468" width="5" height="15" fill="rgb(210,5,38)"/><text x="633.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.45%)</title><rect x="630" y="484" width="5" height="15" fill="rgb(228,145,1)"/><text x="633.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.45%)</title><rect x="630" y="500" width="5" height="15" fill="rgb(224,143,26)"/><text x="633.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (2 samples, 0.45%)</title><rect x="630" y="516" width="5" height="15" fill="rgb(223,196,52)"/><text x="633.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (2 samples, 0.45%)</title><rect x="630" y="532" width="5" height="15" fill="rgb(243,80,27)"/><text x="633.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (2 samples, 0.45%)</title><rect x="630" y="548" width="5" height="15" fill="rgb(243,158,8)"/><text x="633.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="632" y="564" width="3" height="15" fill="rgb(229,36,54)"/><text x="635.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="580" width="3" height="15" fill="rgb(234,200,5)"/><text x="635.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="596" width="3" height="15" fill="rgb(238,114,43)"/><text x="635.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="612" width="3" height="15" fill="rgb(217,141,26)"/><text x="635.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="628" width="3" height="15" fill="rgb(209,31,48)"/><text x="635.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="644" width="3" height="15" fill="rgb(208,144,8)"/><text x="635.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="660" width="3" height="15" fill="rgb(242,114,3)"/><text x="635.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="676" width="3" height="15" fill="rgb(227,11,52)"/><text x="635.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="692" width="3" height="15" fill="rgb(253,79,1)"/><text x="635.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="708" width="3" height="15" fill="rgb(230,163,7)"/><text x="635.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="724" width="3" height="15" fill="rgb(227,20,19)"/><text x="635.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="740" width="3" height="15" fill="rgb(251,19,5)"/><text x="635.00" y="750.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="756" width="3" height="15" fill="rgb(224,73,15)"/><text x="635.00" y="766.50"></text></g><g><title>parse_tuple (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="772" width="3" height="15" fill="rgb(220,184,25)"/><text x="635.00" y="782.50"></text></g><g><title>&lt;lambda&gt; (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="788" width="3" height="15" fill="rgb(212,109,43)"/><text x="635.00" y="798.50"></text></g><g><title>parse_expression (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="804" width="3" height="15" fill="rgb(238,40,39)"/><text x="635.00" y="814.50"></text></g><g><title>parse_or (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="820" width="3" height="15" fill="rgb(205,21,27)"/><text x="635.00" y="830.50"></text></g><g><title>parse_and (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="836" width="3" height="15" fill="rgb(221,200,8)"/><text x="635.00" y="846.50"></text></g><g><title>parse_not (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="852" width="3" height="15" fill="rgb(224,88,19)"/><text x="635.00" y="862.50"></text></g><g><title>parse_compare (jinja2/parser.py) (1 samples, 0.22%)</title><rect x="632" y="868" width="3" height="15" fill="rgb(249,72,13)"/><text x="635.00" y="878.50"></text></g><g><title>skip_if (jinja2/lexer.py) (1 samples, 0.22%)</title><rect x="632" y="884" width="3" height="15" fill="rgb(211,77,3)"/><text x="635.00" y="894.50"></text></g><g><title>next_if (jinja2/lexer.py) (1 samples, 0.22%)</title><rect x="632" y="900" width="3" height="15" fill="rgb(234,43,7)"/><text x="635.00" y="910.50"></text></g><g><title>test (jinja2/lexer.py) (1 samples, 0.22%)</title><rect x="632" y="916" width="3" height="15" fill="rgb(206,209,28)"/><text x="635.00" y="926.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="643" y="116" width="3" height="15" fill="rgb(248,108,34)"/><text x="646.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="643" y="132" width="3" height="15" fill="rgb(222,96,41)"/><text x="646.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.22%)</title><rect x="643" y="148" width="3" height="15" fill="rgb(228,152,21)"/><text x="646.00" y="158.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.22%)</title><rect x="675" y="180" width="2" height="15" fill="rgb(214,61,2)"/><text x="678.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.22%)</title><rect x="677" y="196" width="3" height="15" fill="rgb(237,33,52)"/><text x="680.00" y="206.50"></text></g><g><title>0x7fe5170d3a80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="677" y="212" width="3" height="15" fill="rgb(235,8,25)"/><text x="680.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.22%)</title><rect x="680" y="196" width="3" height="15" fill="rgb(207,7,38)"/><text x="683.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.22%)</title><rect x="680" y="212" width="3" height="15" fill="rgb(214,117,41)"/><text x="683.00" y="222.50"></text></g><g><title>0x7fe5170d2ef0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="680" y="228" width="3" height="15" fill="rgb(215,130,21)"/><text x="683.00" y="238.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 0.89%)</title><rect x="677" y="180" width="11" height="15" fill="rgb(218,70,1)"/><text x="680.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.45%)</title><rect x="683" y="196" width="5" height="15" fill="rgb(210,101,44)"/><text x="686.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.45%)</title><rect x="683" y="212" width="5" height="15" fill="rgb(249,88,28)"/><text x="686.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.45%)</title><rect x="683" y="228" width="5" height="15" fill="rgb(246,135,31)"/><text x="686.00" y="238.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (2 samples, 0.45%)</title><rect x="683" y="244" width="5" height="15" fill="rgb(253,63,1)"/><text x="686.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (5 samples, 1.12%)</title><rect x="693" y="244" width="13" height="15" fill="rgb(252,139,49)"/><text x="696.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (5 samples, 1.12%)</title><rect x="693" y="260" width="13" height="15" fill="rgb(243,155,48)"/><text x="696.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (5 samples, 1.12%)</title><rect x="693" y="276" width="13" height="15" fill="rgb(213,178,29)"/><text x="696.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (5 samples, 1.12%)</title><rect x="693" y="292" width="13" height="15" fill="rgb(229,5,54)"/><text x="696.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (5 samples, 1.12%)</title><rect x="693" y="308" width="13" height="15" fill="rgb(228,181,20)"/><text x="696.00" y="318.50"></text></g><g><title>0x7fe517ec6e7a (libc-2.29.so) (1 samples, 0.22%)</title><rect x="704" y="324" width="2" height="15" fill="rgb(225,92,26)"/><text x="707.00" y="334.50"></text></g><g><title>0x7fe517ec6757 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="712" y="260" width="2" height="15" fill="rgb(251,74,28)"/><text x="715.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="717" y="308" width="3" height="15" fill="rgb(252,184,6)"/><text x="720.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.67%)</title><rect x="714" y="292" width="8" height="15" fill="rgb(212,31,23)"/><text x="717.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.22%)</title><rect x="720" y="308" width="2" height="15" fill="rgb(224,40,31)"/><text x="723.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.22%)</title><rect x="722" y="292" width="3" height="15" fill="rgb(218,53,10)"/><text x="725.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.22%)</title><rect x="725" y="324" width="3" height="15" fill="rgb(246,138,37)"/><text x="728.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (6 samples, 1.34%)</title><rect x="714" y="276" width="16" height="15" fill="rgb(221,107,12)"/><text x="717.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.45%)</title><rect x="725" y="292" width="5" height="15" fill="rgb(248,216,51)"/><text x="728.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.45%)</title><rect x="725" y="308" width="5" height="15" fill="rgb(215,147,22)"/><text x="728.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.22%)</title><rect x="728" y="324" width="2" height="15" fill="rgb(222,152,22)"/><text x="731.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.22%)</title><rect x="728" y="340" width="2" height="15" fill="rgb(208,13,51)"/><text x="731.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="728" y="356" width="2" height="15" fill="rgb(222,149,34)"/><text x="731.00" y="366.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="728" y="372" width="2" height="15" fill="rgb(217,146,40)"/><text x="731.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="730" y="292" width="3" height="15" fill="rgb(223,176,3)"/><text x="733.00" y="302.50"></text></g><g><title>array_sum (methods.c) (19 samples, 4.25%)</title><rect x="688" y="180" width="50" height="15" fill="rgb(219,96,35)"/><text x="691.00" y="190.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (18 samples, 4.03%)</title><rect x="691" y="196" width="47" height="15" fill="rgb(253,127,8)"/><text x="694.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (17 samples, 3.80%)</title><rect x="693" y="212" width="45" height="15" fill="rgb(236,175,2)"/><text x="696.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (17 samples, 3.80%)</title><rect x="693" y="228" width="45" height="15" fill="rgb(224,146,49)"/><text x="696.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (12 samples, 2.68%)</title><rect x="706" y="244" width="32" height="15" fill="rgb(240,5,22)"/><text x="709.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (9 samples, 2.01%)</title><rect x="714" y="260" width="24" height="15" fill="rgb(220,47,14)"/><text x="717.00" y="270.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.67%)</title><rect x="730" y="276" width="8" height="15" fill="rgb(207,182,7)"/><text x="733.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.45%)</title><rect x="733" y="292" width="5" height="15" fill="rgb(239,3,26)"/><text x="736.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="735" y="308" width="3" height="15" fill="rgb(242,113,17)"/><text x="738.00" y="318.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="735" y="324" width="3" height="15" fill="rgb(253,114,31)"/><text x="738.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.22%)</title><rect x="735" y="340" width="3" height="15" fill="rgb(250,34,2)"/><text x="738.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.22%)</title><rect x="751" y="244" width="3" height="15" fill="rgb(241,6,22)"/><text x="754.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.45%)</title><rect x="751" y="212" width="6" height="15" fill="rgb(243,225,40)"/><text x="754.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.45%)</title><rect x="751" y="228" width="6" height="15" fill="rgb(227,11,22)"/><text x="754.00" y="238.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.22%)</title><rect x="754" y="244" width="3" height="15" fill="rgb(250,46,39)"/><text x="757.00" y="254.50"></text></g><g><title>PyArray_Transpose (shape.c) (3 samples, 0.67%)</title><rect x="751" y="196" width="8" height="15" fill="rgb(245,96,0)"/><text x="754.00" y="206.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.22%)</title><rect x="757" y="212" width="2" height="15" fill="rgb(214,1,21)"/><text x="760.00" y="222.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.22%)</title><rect x="757" y="228" width="2" height="15" fill="rgb(250,186,36)"/><text x="760.00" y="238.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="762" y="244" width="2" height="15" fill="rgb(215,152,50)"/><text x="765.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.22%)</title><rect x="764" y="244" width="3" height="15" fill="rgb(205,31,11)"/><text x="767.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.22%)</title><rect x="764" y="260" width="3" height="15" fill="rgb(231,213,4)"/><text x="767.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="770" y="292" width="2" height="15" fill="rgb(249,153,30)"/><text x="773.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.67%)</title><rect x="767" y="276" width="8" height="15" fill="rgb(227,92,43)"/><text x="770.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.22%)</title><rect x="772" y="292" width="3" height="15" fill="rgb(239,69,16)"/><text x="775.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.22%)</title><rect x="775" y="276" width="3" height="15" fill="rgb(230,220,7)"/><text x="778.00" y="286.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.22%)</title><rect x="778" y="276" width="2" height="15" fill="rgb(244,193,37)"/><text x="781.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.22%)</title><rect x="780" y="276" width="3" height="15" fill="rgb(246,47,21)"/><text x="783.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="780" y="292" width="3" height="15" fill="rgb(254,105,30)"/><text x="783.00" y="302.50"></text></g><g><title>array_add (number.c) (10 samples, 2.24%)</title><rect x="759" y="196" width="27" height="15" fill="rgb(243,149,10)"/><text x="762.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.24%)</title><rect x="759" y="212" width="27" height="15" fill="rgb(221,203,28)"/><text x="762.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.24%)</title><rect x="759" y="228" width="27" height="15" fill="rgb(249,159,34)"/><text x="762.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 1.57%)</title><rect x="767" y="244" width="19" height="15" fill="rgb(218,115,10)"/><text x="770.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.57%)</title><rect x="767" y="260" width="19" height="15" fill="rgb(228,72,1)"/><text x="770.00" y="270.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.22%)</title><rect x="783" y="276" width="3" height="15" fill="rgb(216,185,49)"/><text x="786.00" y="286.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="783" y="292" width="3" height="15" fill="rgb(223,157,41)"/><text x="786.00" y="302.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.22%)</title><rect x="841" y="212" width="3" height="15" fill="rgb(224,229,28)"/><text x="844.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.67%)</title><rect x="844" y="212" width="8" height="15" fill="rgb(217,93,44)"/><text x="847.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (4 samples, 0.89%)</title><rect x="852" y="212" width="10" height="15" fill="rgb(210,229,22)"/><text x="855.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (4 samples, 0.89%)</title><rect x="862" y="212" width="11" height="15" fill="rgb(247,167,17)"/><text x="865.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="878" y="228" width="11" height="15" fill="rgb(232,196,54)"/><text x="881.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (7 samples, 1.57%)</title><rect x="873" y="212" width="18" height="15" fill="rgb(248,23,30)"/><text x="876.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="889" y="228" width="2" height="15" fill="rgb(249,228,49)"/><text x="892.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.22%)</title><rect x="912" y="228" width="3" height="15" fill="rgb(232,211,27)"/><text x="915.00" y="238.50"></text></g><g><title>0x7fe517ed1120 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="912" y="244" width="3" height="15" fill="rgb(238,224,15)"/><text x="915.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (12 samples, 2.68%)</title><rect x="891" y="212" width="32" height="15" fill="rgb(247,121,4)"/><text x="894.00" y="222.50">_n..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.67%)</title><rect x="915" y="228" width="8" height="15" fill="rgb(205,163,49)"/><text x="918.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.22%)</title><rect x="920" y="244" width="3" height="15" fill="rgb(221,6,50)"/><text x="923.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.45%)</title><rect x="928" y="228" width="5" height="15" fill="rgb(251,139,50)"/><text x="931.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (8 samples, 1.79%)</title><rect x="923" y="212" width="21" height="15" fill="rgb(250,112,30)"/><text x="926.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (4 samples, 0.89%)</title><rect x="933" y="228" width="11" height="15" fill="rgb(205,20,32)"/><text x="936.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (68 samples, 15.21%)</title><rect x="786" y="196" width="179" height="15" fill="rgb(212,187,9)"/><text x="789.00" y="206.50">check_array (sklearn/ut..</text></g><g><title>simplefilter (warnings.py) (8 samples, 1.79%)</title><rect x="944" y="212" width="21" height="15" fill="rgb(238,206,11)"/><text x="947.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (7 samples, 1.57%)</title><rect x="947" y="228" width="18" height="15" fill="rgb(222,172,35)"/><text x="950.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 0.89%)</title><rect x="1007" y="228" width="11" height="15" fill="rgb(249,110,26)"/><text x="1010.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (18 samples, 4.03%)</title><rect x="978" y="212" width="48" height="15" fill="rgb(221,24,53)"/><text x="981.00" y="222.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.67%)</title><rect x="1018" y="228" width="8" height="15" fill="rgb(237,165,26)"/><text x="1021.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (27 samples, 6.04%)</title><rect x="965" y="196" width="71" height="15" fill="rgb(228,68,50)"/><text x="968.00" y="206.50">check_is..</text></g><g><title>isclass (inspect.py) (4 samples, 0.89%)</title><rect x="1026" y="212" width="10" height="15" fill="rgb(239,56,13)"/><text x="1029.00" y="222.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="1039" y="212" width="3" height="15" fill="rgb(252,196,27)"/><text x="1042.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.22%)</title><rect x="1042" y="212" width="2" height="15" fill="rgb(227,65,53)"/><text x="1045.00" y="222.50"></text></g><g><title>0x7fe517ed1120 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1050" y="260" width="2" height="15" fill="rgb(237,148,37)"/><text x="1053.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (2 samples, 0.45%)</title><rect x="1052" y="260" width="6" height="15" fill="rgb(219,12,54)"/><text x="1055.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.22%)</title><rect x="1055" y="276" width="3" height="15" fill="rgb(229,181,52)"/><text x="1058.00" y="286.50"></text></g><g><title>is_blasable2d (matmul.c.src) (1 samples, 0.22%)</title><rect x="1055" y="292" width="3" height="15" fill="rgb(215,189,23)"/><text x="1058.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="1065" y="324" width="3" height="15" fill="rgb(247,11,18)"/><text x="1068.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.67%)</title><rect x="1063" y="292" width="8" height="15" fill="rgb(219,137,17)"/><text x="1066.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.67%)</title><rect x="1063" y="308" width="8" height="15" fill="rgb(247,132,15)"/><text x="1066.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="1068" y="324" width="3" height="15" fill="rgb(219,3,48)"/><text x="1071.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 1.57%)</title><rect x="1058" y="260" width="18" height="15" fill="rgb(228,73,7)"/><text x="1061.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 1.12%)</title><rect x="1063" y="276" width="13" height="15" fill="rgb(211,211,46)"/><text x="1066.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.45%)</title><rect x="1071" y="292" width="5" height="15" fill="rgb(206,36,10)"/><text x="1074.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1076" y="260" width="3" height="15" fill="rgb(224,141,34)"/><text x="1079.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="1076" y="276" width="3" height="15" fill="rgb(232,68,20)"/><text x="1079.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="1076" y="292" width="3" height="15" fill="rgb(247,90,28)"/><text x="1079.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.22%)</title><rect x="1076" y="308" width="3" height="15" fill="rgb(217,70,44)"/><text x="1079.00" y="318.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.22%)</title><rect x="1079" y="260" width="2" height="15" fill="rgb(253,179,17)"/><text x="1082.00" y="270.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c) (1 samples, 0.22%)</title><rect x="1081" y="260" width="3" height="15" fill="rgb(220,156,19)"/><text x="1084.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (132 samples, 29.53%)</title><rect x="738" y="180" width="349" height="15" fill="rgb(254,162,49)"/><text x="741.00" y="190.50">decision_function (sklearn/linear_model/_base.p..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (19 samples, 4.25%)</title><rect x="1036" y="196" width="51" height="15" fill="rgb(253,17,8)"/><text x="1039.00" y="206.50">safe_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 3.58%)</title><rect x="1044" y="212" width="43" height="15" fill="rgb(230,89,14)"/><text x="1047.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 3.58%)</title><rect x="1044" y="228" width="43" height="15" fill="rgb(215,146,0)"/><text x="1047.00" y="238.50">PyUF..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (16 samples, 3.58%)</title><rect x="1044" y="244" width="43" height="15" fill="rgb(229,87,54)"/><text x="1047.00" y="254.50">PyUF..</text></g><g><title>_get_coredim_sizes (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1084" y="260" width="3" height="15" fill="rgb(231,102,3)"/><text x="1087.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.22%)</title><rect x="1087" y="196" width="2" height="15" fill="rgb(226,35,28)"/><text x="1090.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.22%)</title><rect x="1087" y="212" width="2" height="15" fill="rgb(248,175,33)"/><text x="1090.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.22%)</title><rect x="1087" y="228" width="2" height="15" fill="rgb(230,182,18)"/><text x="1090.00" y="238.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.22%)</title><rect x="1087" y="244" width="2" height="15" fill="rgb(211,133,13)"/><text x="1090.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.22%)</title><rect x="1089" y="260" width="3" height="15" fill="rgb(220,16,46)"/><text x="1092.00" y="270.50"></text></g><g><title>0x7fe517eb0a41 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1092" y="276" width="2" height="15" fill="rgb(207,137,20)"/><text x="1095.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.67%)</title><rect x="1089" y="228" width="8" height="15" fill="rgb(240,29,30)"/><text x="1092.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.67%)</title><rect x="1089" y="244" width="8" height="15" fill="rgb(246,77,47)"/><text x="1092.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.45%)</title><rect x="1092" y="260" width="5" height="15" fill="rgb(213,139,37)"/><text x="1095.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.22%)</title><rect x="1094" y="276" width="3" height="15" fill="rgb(235,24,11)"/><text x="1097.00" y="286.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.22%)</title><rect x="1094" y="292" width="3" height="15" fill="rgb(217,226,28)"/><text x="1097.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (1 samples, 0.22%)</title><rect x="1097" y="244" width="3" height="15" fill="rgb(244,77,28)"/><text x="1100.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1100" y="260" width="2" height="15" fill="rgb(252,4,33)"/><text x="1103.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.45%)</title><rect x="1100" y="244" width="5" height="15" fill="rgb(235,63,22)"/><text x="1103.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1102" y="260" width="3" height="15" fill="rgb(241,8,8)"/><text x="1105.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="1105" y="260" width="3" height="15" fill="rgb(245,202,30)"/><text x="1108.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.12%)</title><rect x="1097" y="228" width="13" height="15" fill="rgb(214,158,48)"/><text x="1100.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.45%)</title><rect x="1105" y="244" width="5" height="15" fill="rgb(240,92,49)"/><text x="1108.00" y="254.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.22%)</title><rect x="1108" y="260" width="2" height="15" fill="rgb(251,202,20)"/><text x="1111.00" y="270.50"></text></g><g><title>0x7fe5031ba13e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="1110" y="244" width="3" height="15" fill="rgb(249,82,35)"/><text x="1113.00" y="254.50"></text></g><g><title>PyUFunc_getfperr (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1110" y="260" width="3" height="15" fill="rgb(230,132,7)"/><text x="1113.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.22%)</title><rect x="1110" y="276" width="3" height="15" fill="rgb(216,226,6)"/><text x="1113.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.22%)</title><rect x="1110" y="292" width="3" height="15" fill="rgb(220,70,30)"/><text x="1113.00" y="302.50"></text></g><g><title>0x7fe5170d2e80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="1110" y="308" width="3" height="15" fill="rgb(234,37,22)"/><text x="1113.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 2.24%)</title><rect x="1089" y="212" width="27" height="15" fill="rgb(207,74,23)"/><text x="1092.00" y="222.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.45%)</title><rect x="1110" y="228" width="6" height="15" fill="rgb(218,223,43)"/><text x="1113.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="1113" y="244" width="3" height="15" fill="rgb(247,205,5)"/><text x="1116.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1116" y="212" width="2" height="15" fill="rgb(230,197,33)"/><text x="1119.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1116" y="228" width="2" height="15" fill="rgb(241,94,9)"/><text x="1119.00" y="238.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.22%)</title><rect x="1118" y="228" width="3" height="15" fill="rgb(211,228,26)"/><text x="1121.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="1121" y="244" width="3" height="15" fill="rgb(215,134,22)"/><text x="1124.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="1121" y="260" width="3" height="15" fill="rgb(212,103,34)"/><text x="1124.00" y="270.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="1121" y="276" width="3" height="15" fill="rgb(239,104,29)"/><text x="1124.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (3 samples, 0.67%)</title><rect x="1118" y="212" width="8" height="15" fill="rgb(210,206,42)"/><text x="1121.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.45%)</title><rect x="1121" y="228" width="5" height="15" fill="rgb(233,134,44)"/><text x="1124.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.22%)</title><rect x="1124" y="244" width="2" height="15" fill="rgb(246,125,53)"/><text x="1127.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 3.36%)</title><rect x="1089" y="196" width="40" height="15" fill="rgb(241,223,15)"/><text x="1092.00" y="206.50">PyU..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1126" y="212" width="3" height="15" fill="rgb(229,180,23)"/><text x="1129.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (177 samples, 39.60%)</title><rect x="664" y="164" width="467" height="15" fill="rgb(225,127,35)"/><text x="667.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 3.80%)</title><rect x="1087" y="180" width="44" height="15" fill="rgb(231,161,24)"/><text x="1090.00" y="190.50">ufun..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1129" y="196" width="2" height="15" fill="rgb(229,151,27)"/><text x="1132.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.45%)</title><rect x="1168" y="196" width="6" height="15" fill="rgb(254,196,20)"/><text x="1171.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (12 samples, 2.68%)</title><rect x="1147" y="180" width="32" height="15" fill="rgb(228,146,6)"/><text x="1150.00" y="190.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.45%)</title><rect x="1174" y="196" width="5" height="15" fill="rgb(215,186,51)"/><text x="1177.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (202 samples, 45.19%)</title><rect x="651" y="132" width="533" height="15" fill="rgb(224,107,11)"/><text x="654.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (202 samples, 45.19%)</title><rect x="651" y="148" width="533" height="15" fill="rgb(236,212,22)"/><text x="654.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (20 samples, 4.47%)</title><rect x="1131" y="164" width="53" height="15" fill="rgb(238,37,53)"/><text x="1134.00" y="174.50">check..</text></g><g><title>isclass (inspect.py) (2 samples, 0.45%)</title><rect x="1179" y="180" width="5" height="15" fill="rgb(237,150,52)"/><text x="1182.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.22%)</title><rect x="1184" y="132" width="3" height="15" fill="rgb(229,7,25)"/><text x="1187.00" y="142.50"></text></g><g><title>0x7fe517f8e130 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1184" y="148" width="3" height="15" fill="rgb(246,105,54)"/><text x="1187.00" y="158.50"></text></g><g><title>all (447 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(220,43,15)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py) (447 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(241,174,47)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py) (210 samples, 46.98%)</title><rect x="635" y="68" width="555" height="15" fill="rgb(233,131,16)"/><text x="638.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py) (210 samples, 46.98%)</title><rect x="635" y="84" width="555" height="15" fill="rgb(225,71,16)"/><text x="638.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py) (210 samples, 46.98%)</title><rect x="635" y="100" width="555" height="15" fill="rgb(212,54,12)"/><text x="638.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (206 samples, 46.09%)</title><rect x="646" y="116" width="544" height="15" fill="rgb(221,67,5)"/><text x="649.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(216,89,1)"/><text x="1190.00" y="142.50"></text></g></g></svg>