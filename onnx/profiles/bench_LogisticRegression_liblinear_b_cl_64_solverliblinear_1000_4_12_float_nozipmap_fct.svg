<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1910" onload="init(evt)" viewBox="0 0 1200 1910" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1910" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1893.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1893.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(222,222,44)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(241,182,6)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(221,1,8)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(217,154,30)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(228,122,44)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(239,71,6)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="10" y="964" width="5" height="15" fill="rgb(239,14,27)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="12" y="980" width="3" height="15" fill="rgb(250,42,21)"/><text x="15.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="12" y="996" width="3" height="15" fill="rgb(210,154,9)"/><text x="15.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="12" y="1012" width="3" height="15" fill="rgb(230,132,53)"/><text x="15.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.23%)</title><rect x="12" y="1028" width="3" height="15" fill="rgb(217,132,16)"/><text x="15.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.23%)</title><rect x="12" y="1044" width="3" height="15" fill="rgb(220,6,32)"/><text x="15.00" y="1054.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.23%)</title><rect x="15" y="948" width="3" height="15" fill="rgb(253,125,31)"/><text x="18.00" y="958.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="15" y="868" width="5" height="15" fill="rgb(232,209,16)"/><text x="18.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="15" y="884" width="5" height="15" fill="rgb(219,164,1)"/><text x="18.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="15" y="900" width="5" height="15" fill="rgb(250,175,30)"/><text x="18.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="15" y="916" width="5" height="15" fill="rgb(208,96,25)"/><text x="18.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(227,167,19)"/><text x="18.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="18" y="948" width="2" height="15" fill="rgb(231,156,16)"/><text x="21.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="18" y="964" width="2" height="15" fill="rgb(239,32,47)"/><text x="21.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.23%)</title><rect x="18" y="980" width="2" height="15" fill="rgb(242,110,12)"/><text x="21.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.23%)</title><rect x="18" y="996" width="2" height="15" fill="rgb(235,116,8)"/><text x="21.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.23%)</title><rect x="18" y="1012" width="2" height="15" fill="rgb(233,72,4)"/><text x="21.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.23%)</title><rect x="18" y="1028" width="2" height="15" fill="rgb(207,118,30)"/><text x="21.00" y="1038.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.23%)</title><rect x="20" y="980" width="3" height="15" fill="rgb(209,96,26)"/><text x="23.00" y="990.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="20" y="900" width="6" height="15" fill="rgb(237,18,11)"/><text x="23.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="20" y="916" width="6" height="15" fill="rgb(240,208,21)"/><text x="23.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.46%)</title><rect x="20" y="932" width="6" height="15" fill="rgb(229,104,27)"/><text x="23.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.46%)</title><rect x="20" y="948" width="6" height="15" fill="rgb(227,13,26)"/><text x="23.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.46%)</title><rect x="20" y="964" width="6" height="15" fill="rgb(241,182,18)"/><text x="23.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.23%)</title><rect x="23" y="980" width="3" height="15" fill="rgb(222,35,19)"/><text x="26.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.23%)</title><rect x="23" y="996" width="3" height="15" fill="rgb(233,117,40)"/><text x="26.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.23%)</title><rect x="23" y="1012" width="3" height="15" fill="rgb(243,50,3)"/><text x="26.00" y="1022.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 1.60%)</title><rect x="10" y="292" width="18" height="15" fill="rgb(232,74,11)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="308" width="18" height="15" fill="rgb(232,173,20)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="324" width="18" height="15" fill="rgb(206,208,34)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="340" width="18" height="15" fill="rgb(220,25,30)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.60%)</title><rect x="10" y="356" width="18" height="15" fill="rgb(206,114,50)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="372" width="18" height="15" fill="rgb(231,183,1)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 1.60%)</title><rect x="10" y="388" width="18" height="15" fill="rgb(254,127,47)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="404" width="18" height="15" fill="rgb(209,200,21)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="420" width="18" height="15" fill="rgb(219,2,34)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="436" width="18" height="15" fill="rgb(230,14,30)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.60%)</title><rect x="10" y="452" width="18" height="15" fill="rgb(244,223,45)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="468" width="18" height="15" fill="rgb(214,155,8)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 1.60%)</title><rect x="10" y="484" width="18" height="15" fill="rgb(206,139,1)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="500" width="18" height="15" fill="rgb(209,229,8)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="516" width="18" height="15" fill="rgb(231,191,12)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="532" width="18" height="15" fill="rgb(254,131,43)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.60%)</title><rect x="10" y="548" width="18" height="15" fill="rgb(220,42,47)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="564" width="18" height="15" fill="rgb(207,222,29)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 1.60%)</title><rect x="10" y="580" width="18" height="15" fill="rgb(212,219,20)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="596" width="18" height="15" fill="rgb(253,193,5)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="612" width="18" height="15" fill="rgb(228,67,1)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="628" width="18" height="15" fill="rgb(221,205,48)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="644" width="18" height="15" fill="rgb(226,8,25)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="660" width="18" height="15" fill="rgb(216,10,48)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="676" width="18" height="15" fill="rgb(228,1,10)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.60%)</title><rect x="10" y="692" width="18" height="15" fill="rgb(231,177,50)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="708" width="18" height="15" fill="rgb(239,67,43)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 1.60%)</title><rect x="10" y="724" width="18" height="15" fill="rgb(231,148,7)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="740" width="18" height="15" fill="rgb(229,164,23)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="756" width="18" height="15" fill="rgb(211,200,17)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="772" width="18" height="15" fill="rgb(234,85,2)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.60%)</title><rect x="10" y="788" width="18" height="15" fill="rgb(234,141,20)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="10" y="804" width="18" height="15" fill="rgb(232,199,17)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 1.60%)</title><rect x="10" y="820" width="18" height="15" fill="rgb(233,173,49)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 1.60%)</title><rect x="10" y="836" width="18" height="15" fill="rgb(211,169,33)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 1.60%)</title><rect x="10" y="852" width="18" height="15" fill="rgb(229,29,28)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.68%)</title><rect x="20" y="868" width="8" height="15" fill="rgb(233,228,44)"/><text x="23.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.68%)</title><rect x="20" y="884" width="8" height="15" fill="rgb(254,145,23)"/><text x="23.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="26" y="900" width="2" height="15" fill="rgb(249,108,34)"/><text x="29.00" y="910.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="26" y="916" width="2" height="15" fill="rgb(245,11,11)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="916" width="3" height="15" fill="rgb(207,218,2)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="932" width="3" height="15" fill="rgb(213,139,52)"/><text x="31.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="948" width="3" height="15" fill="rgb(215,211,19)"/><text x="31.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="28" y="964" width="3" height="15" fill="rgb(216,207,11)"/><text x="31.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="980" width="3" height="15" fill="rgb(243,226,3)"/><text x="31.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.23%)</title><rect x="28" y="996" width="3" height="15" fill="rgb(219,36,52)"/><text x="31.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1012" width="3" height="15" fill="rgb(215,30,8)"/><text x="31.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1028" width="3" height="15" fill="rgb(248,2,37)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1044" width="3" height="15" fill="rgb(238,143,7)"/><text x="31.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1060" width="3" height="15" fill="rgb(242,205,46)"/><text x="31.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1076" width="3" height="15" fill="rgb(253,40,31)"/><text x="31.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="28" y="1092" width="3" height="15" fill="rgb(238,225,27)"/><text x="31.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1108" width="3" height="15" fill="rgb(248,146,31)"/><text x="31.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.23%)</title><rect x="28" y="1124" width="3" height="15" fill="rgb(251,181,5)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1140" width="3" height="15" fill="rgb(235,123,8)"/><text x="31.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1156" width="3" height="15" fill="rgb(222,17,30)"/><text x="31.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1172" width="3" height="15" fill="rgb(237,212,46)"/><text x="31.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="28" y="1188" width="3" height="15" fill="rgb(238,61,43)"/><text x="31.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1204" width="3" height="15" fill="rgb(228,115,37)"/><text x="31.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.23%)</title><rect x="28" y="1220" width="3" height="15" fill="rgb(247,30,47)"/><text x="31.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1236" width="3" height="15" fill="rgb(250,58,33)"/><text x="31.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1252" width="3" height="15" fill="rgb(218,158,7)"/><text x="31.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1268" width="3" height="15" fill="rgb(237,18,7)"/><text x="31.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="28" y="1284" width="3" height="15" fill="rgb(216,229,34)"/><text x="31.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1300" width="3" height="15" fill="rgb(243,144,41)"/><text x="31.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.23%)</title><rect x="28" y="1316" width="3" height="15" fill="rgb(237,41,35)"/><text x="31.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1332" width="3" height="15" fill="rgb(209,208,27)"/><text x="31.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1348" width="3" height="15" fill="rgb(241,27,48)"/><text x="31.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1364" width="3" height="15" fill="rgb(232,224,51)"/><text x="31.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="28" y="1380" width="3" height="15" fill="rgb(214,154,39)"/><text x="31.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1396" width="3" height="15" fill="rgb(211,150,16)"/><text x="31.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.23%)</title><rect x="28" y="1412" width="3" height="15" fill="rgb(216,66,22)"/><text x="31.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1428" width="3" height="15" fill="rgb(217,203,34)"/><text x="31.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1444" width="3" height="15" fill="rgb(225,1,32)"/><text x="31.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1460" width="3" height="15" fill="rgb(236,50,47)"/><text x="31.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="28" y="1476" width="3" height="15" fill="rgb(230,11,49)"/><text x="31.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1492" width="3" height="15" fill="rgb(248,155,9)"/><text x="31.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.23%)</title><rect x="28" y="1508" width="3" height="15" fill="rgb(254,216,7)"/><text x="31.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1524" width="3" height="15" fill="rgb(219,35,34)"/><text x="31.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1540" width="3" height="15" fill="rgb(252,53,19)"/><text x="31.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1556" width="3" height="15" fill="rgb(213,46,28)"/><text x="31.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="28" y="1572" width="3" height="15" fill="rgb(247,46,49)"/><text x="31.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1588" width="3" height="15" fill="rgb(246,6,50)"/><text x="31.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/__init__.py) (1 samples, 0.23%)</title><rect x="28" y="1604" width="3" height="15" fill="rgb(251,114,25)"/><text x="31.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1620" width="3" height="15" fill="rgb(214,150,5)"/><text x="31.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1636" width="3" height="15" fill="rgb(220,21,29)"/><text x="31.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1652" width="3" height="15" fill="rgb(254,119,29)"/><text x="31.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="28" y="1668" width="3" height="15" fill="rgb(217,188,8)"/><text x="31.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="28" y="1684" width="3" height="15" fill="rgb(252,60,51)"/><text x="31.00" y="1694.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/iterative.py) (1 samples, 0.23%)</title><rect x="28" y="1700" width="3" height="15" fill="rgb(225,189,52)"/><text x="31.00" y="1710.50"></text></g><g><title>decorator (scipy/_lib/_threadsafety.py) (1 samples, 0.23%)</title><rect x="28" y="1716" width="3" height="15" fill="rgb(234,192,29)"/><text x="31.00" y="1726.50"></text></g><g><title>decorate (scipy/_lib/_threadsafety.py) (1 samples, 0.23%)</title><rect x="28" y="1732" width="3" height="15" fill="rgb(208,92,35)"/><text x="31.00" y="1742.50"></text></g><g><title>decorate (scipy/_lib/decorator.py) (1 samples, 0.23%)</title><rect x="28" y="1748" width="3" height="15" fill="rgb(237,78,8)"/><text x="31.00" y="1758.50"></text></g><g><title>create (scipy/_lib/decorator.py) (1 samples, 0.23%)</title><rect x="28" y="1764" width="3" height="15" fill="rgb(246,73,34)"/><text x="31.00" y="1774.50"></text></g><g><title>__init__ (scipy/_lib/decorator.py) (1 samples, 0.23%)</title><rect x="28" y="1780" width="3" height="15" fill="rgb(250,175,42)"/><text x="31.00" y="1790.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.23%)</title><rect x="28" y="1796" width="3" height="15" fill="rgb(254,216,6)"/><text x="31.00" y="1806.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.23%)</title><rect x="28" y="1812" width="3" height="15" fill="rgb(253,9,39)"/><text x="31.00" y="1822.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.23%)</title><rect x="28" y="1828" width="3" height="15" fill="rgb(212,163,49)"/><text x="31.00" y="1838.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="500" width="6" height="15" fill="rgb(248,95,17)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="516" width="6" height="15" fill="rgb(244,193,10)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="532" width="6" height="15" fill="rgb(222,79,20)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="28" y="548" width="6" height="15" fill="rgb(214,168,40)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="564" width="6" height="15" fill="rgb(244,105,8)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.46%)</title><rect x="28" y="580" width="6" height="15" fill="rgb(246,137,30)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="596" width="6" height="15" fill="rgb(209,224,53)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="612" width="6" height="15" fill="rgb(207,52,36)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="628" width="6" height="15" fill="rgb(236,164,37)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="28" y="644" width="6" height="15" fill="rgb(244,195,17)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="660" width="6" height="15" fill="rgb(235,68,26)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.46%)</title><rect x="28" y="676" width="6" height="15" fill="rgb(234,143,39)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="692" width="6" height="15" fill="rgb(245,36,38)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="708" width="6" height="15" fill="rgb(254,193,30)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="724" width="6" height="15" fill="rgb(219,208,43)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="28" y="740" width="6" height="15" fill="rgb(242,63,36)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="756" width="6" height="15" fill="rgb(206,206,3)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.46%)</title><rect x="28" y="772" width="6" height="15" fill="rgb(247,126,27)"/><text x="31.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="788" width="6" height="15" fill="rgb(238,1,22)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="804" width="6" height="15" fill="rgb(216,134,14)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="820" width="6" height="15" fill="rgb(229,32,33)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="836" width="6" height="15" fill="rgb(219,140,25)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="852" width="6" height="15" fill="rgb(209,23,16)"/><text x="31.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="28" y="868" width="6" height="15" fill="rgb(215,142,53)"/><text x="31.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="28" y="884" width="6" height="15" fill="rgb(210,152,4)"/><text x="31.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.46%)</title><rect x="28" y="900" width="6" height="15" fill="rgb(226,110,15)"/><text x="31.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="916" width="3" height="15" fill="rgb(248,45,51)"/><text x="34.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="932" width="3" height="15" fill="rgb(215,93,13)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="948" width="3" height="15" fill="rgb(250,5,34)"/><text x="34.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="964" width="3" height="15" fill="rgb(226,4,39)"/><text x="34.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="980" width="3" height="15" fill="rgb(218,22,41)"/><text x="34.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="31" y="996" width="3" height="15" fill="rgb(231,74,41)"/><text x="34.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="1012" width="3" height="15" fill="rgb(232,58,46)"/><text x="34.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.23%)</title><rect x="31" y="1028" width="3" height="15" fill="rgb(236,118,30)"/><text x="34.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.23%)</title><rect x="31" y="1044" width="3" height="15" fill="rgb(218,195,18)"/><text x="34.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.23%)</title><rect x="31" y="1060" width="3" height="15" fill="rgb(245,212,41)"/><text x="34.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.23%)</title><rect x="31" y="1076" width="3" height="15" fill="rgb(250,203,3)"/><text x="34.00" y="1086.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.23%)</title><rect x="31" y="1092" width="3" height="15" fill="rgb(249,195,27)"/><text x="34.00" y="1102.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.23%)</title><rect x="31" y="1108" width="3" height="15" fill="rgb(251,153,28)"/><text x="34.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.23%)</title><rect x="31" y="1124" width="3" height="15" fill="rgb(211,3,40)"/><text x="34.00" y="1134.50"></text></g><g><title>_signature_bound_method (inspect.py) (1 samples, 0.23%)</title><rect x="31" y="1140" width="3" height="15" fill="rgb(220,74,32)"/><text x="34.00" y="1150.50"></text></g><g><title>replace (inspect.py) (1 samples, 0.23%)</title><rect x="31" y="1156" width="3" height="15" fill="rgb(209,178,38)"/><text x="34.00" y="1166.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.23%)</title><rect x="31" y="1172" width="3" height="15" fill="rgb(208,84,49)"/><text x="34.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.28%)</title><rect x="10" y="196" width="26" height="15" fill="rgb(223,2,25)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.28%)</title><rect x="10" y="212" width="26" height="15" fill="rgb(220,27,30)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.28%)</title><rect x="10" y="228" width="26" height="15" fill="rgb(218,98,8)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.28%)</title><rect x="10" y="244" width="26" height="15" fill="rgb(228,115,38)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.28%)</title><rect x="10" y="260" width="26" height="15" fill="rgb(242,98,46)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.28%)</title><rect x="10" y="276" width="26" height="15" fill="rgb(254,119,16)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.68%)</title><rect x="28" y="292" width="8" height="15" fill="rgb(254,85,8)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="28" y="308" width="8" height="15" fill="rgb(211,117,38)"/><text x="31.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="28" y="324" width="8" height="15" fill="rgb(232,84,5)"/><text x="31.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="28" y="340" width="8" height="15" fill="rgb(222,72,48)"/><text x="31.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.68%)</title><rect x="28" y="356" width="8" height="15" fill="rgb(231,192,19)"/><text x="31.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="28" y="372" width="8" height="15" fill="rgb(211,93,4)"/><text x="31.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.68%)</title><rect x="28" y="388" width="8" height="15" fill="rgb(251,51,11)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="28" y="404" width="8" height="15" fill="rgb(227,57,48)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="28" y="420" width="8" height="15" fill="rgb(254,34,28)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="28" y="436" width="8" height="15" fill="rgb(229,1,37)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.68%)</title><rect x="28" y="452" width="8" height="15" fill="rgb(210,30,54)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="28" y="468" width="8" height="15" fill="rgb(225,35,32)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.68%)</title><rect x="28" y="484" width="8" height="15" fill="rgb(205,88,0)"/><text x="31.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="500" width="2" height="15" fill="rgb(239,203,27)"/><text x="37.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="516" width="2" height="15" fill="rgb(245,207,18)"/><text x="37.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="532" width="2" height="15" fill="rgb(238,141,47)"/><text x="37.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="548" width="2" height="15" fill="rgb(238,220,40)"/><text x="37.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="564" width="2" height="15" fill="rgb(247,72,43)"/><text x="37.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="34" y="580" width="2" height="15" fill="rgb(210,167,29)"/><text x="37.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="596" width="2" height="15" fill="rgb(241,20,12)"/><text x="37.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.23%)</title><rect x="34" y="612" width="2" height="15" fill="rgb(222,156,27)"/><text x="37.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="628" width="2" height="15" fill="rgb(243,78,51)"/><text x="37.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="644" width="2" height="15" fill="rgb(209,66,3)"/><text x="37.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="660" width="2" height="15" fill="rgb(234,228,38)"/><text x="37.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="34" y="676" width="2" height="15" fill="rgb(244,105,19)"/><text x="37.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="692" width="2" height="15" fill="rgb(245,127,51)"/><text x="37.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.23%)</title><rect x="34" y="708" width="2" height="15" fill="rgb(208,102,5)"/><text x="37.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="724" width="2" height="15" fill="rgb(244,24,51)"/><text x="37.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="740" width="2" height="15" fill="rgb(227,41,22)"/><text x="37.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="756" width="2" height="15" fill="rgb(240,5,30)"/><text x="37.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="34" y="772" width="2" height="15" fill="rgb(205,37,6)"/><text x="37.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="788" width="2" height="15" fill="rgb(219,176,5)"/><text x="37.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.23%)</title><rect x="34" y="804" width="2" height="15" fill="rgb(245,87,27)"/><text x="37.00" y="814.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="820" width="2" height="15" fill="rgb(223,12,9)"/><text x="37.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="836" width="2" height="15" fill="rgb(244,38,49)"/><text x="37.00" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="852" width="2" height="15" fill="rgb(221,35,16)"/><text x="37.00" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="868" width="2" height="15" fill="rgb(208,138,49)"/><text x="37.00" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="884" width="2" height="15" fill="rgb(239,21,3)"/><text x="37.00" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="34" y="900" width="2" height="15" fill="rgb(215,22,40)"/><text x="37.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="916" width="2" height="15" fill="rgb(219,120,46)"/><text x="37.00" y="926.50"></text></g><g><title>&lt;module&gt; (joblib/hashing.py) (1 samples, 0.23%)</title><rect x="34" y="932" width="2" height="15" fill="rgb(251,92,43)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="948" width="2" height="15" fill="rgb(231,191,25)"/><text x="37.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="964" width="2" height="15" fill="rgb(209,27,41)"/><text x="37.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="34" y="980" width="2" height="15" fill="rgb(222,74,23)"/><text x="37.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="34" y="996" width="2" height="15" fill="rgb(240,47,44)"/><text x="37.00" y="1006.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="34" y="1012" width="2" height="15" fill="rgb(236,228,30)"/><text x="37.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="484" width="3" height="15" fill="rgb(241,100,21)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="500" width="3" height="15" fill="rgb(230,28,15)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="516" width="3" height="15" fill="rgb(209,196,27)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="532" width="3" height="15" fill="rgb(250,229,50)"/><text x="39.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="548" width="3" height="15" fill="rgb(215,24,42)"/><text x="39.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="564" width="3" height="15" fill="rgb(216,227,12)"/><text x="39.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.23%)</title><rect x="36" y="580" width="3" height="15" fill="rgb(240,49,13)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="596" width="3" height="15" fill="rgb(230,102,31)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="612" width="3" height="15" fill="rgb(253,133,13)"/><text x="39.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="628" width="3" height="15" fill="rgb(221,185,44)"/><text x="39.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="644" width="3" height="15" fill="rgb(205,107,22)"/><text x="39.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="660" width="3" height="15" fill="rgb(222,113,18)"/><text x="39.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.23%)</title><rect x="36" y="676" width="3" height="15" fill="rgb(206,27,21)"/><text x="39.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="692" width="3" height="15" fill="rgb(210,97,28)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="708" width="3" height="15" fill="rgb(251,62,52)"/><text x="39.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="724" width="3" height="15" fill="rgb(251,3,0)"/><text x="39.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="740" width="3" height="15" fill="rgb(240,201,21)"/><text x="39.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="756" width="3" height="15" fill="rgb(221,48,7)"/><text x="39.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.23%)</title><rect x="36" y="772" width="3" height="15" fill="rgb(230,16,16)"/><text x="39.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="788" width="3" height="15" fill="rgb(223,101,28)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="804" width="3" height="15" fill="rgb(251,215,3)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="820" width="3" height="15" fill="rgb(236,97,2)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="836" width="3" height="15" fill="rgb(249,16,19)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="852" width="3" height="15" fill="rgb(214,130,20)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.23%)</title><rect x="36" y="868" width="3" height="15" fill="rgb(225,154,4)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="884" width="3" height="15" fill="rgb(248,57,18)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="900" width="3" height="15" fill="rgb(210,92,22)"/><text x="39.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="916" width="3" height="15" fill="rgb(211,229,13)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="932" width="3" height="15" fill="rgb(235,192,44)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="948" width="3" height="15" fill="rgb(205,159,13)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="964" width="3" height="15" fill="rgb(233,218,27)"/><text x="39.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="980" width="3" height="15" fill="rgb(213,10,34)"/><text x="39.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="996" width="3" height="15" fill="rgb(216,132,19)"/><text x="39.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.23%)</title><rect x="36" y="1012" width="3" height="15" fill="rgb(233,65,51)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1028" width="3" height="15" fill="rgb(214,186,11)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1044" width="3" height="15" fill="rgb(242,17,52)"/><text x="39.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1060" width="3" height="15" fill="rgb(247,182,28)"/><text x="39.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="1076" width="3" height="15" fill="rgb(248,107,0)"/><text x="39.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1092" width="3" height="15" fill="rgb(246,26,48)"/><text x="39.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.23%)</title><rect x="36" y="1108" width="3" height="15" fill="rgb(251,53,32)"/><text x="39.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1124" width="3" height="15" fill="rgb(245,170,53)"/><text x="39.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1140" width="3" height="15" fill="rgb(229,2,5)"/><text x="39.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1156" width="3" height="15" fill="rgb(206,21,8)"/><text x="39.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="1172" width="3" height="15" fill="rgb(243,183,14)"/><text x="39.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1188" width="3" height="15" fill="rgb(247,185,31)"/><text x="39.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.23%)</title><rect x="36" y="1204" width="3" height="15" fill="rgb(236,30,26)"/><text x="39.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1220" width="3" height="15" fill="rgb(242,3,31)"/><text x="39.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1236" width="3" height="15" fill="rgb(245,99,23)"/><text x="39.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1252" width="3" height="15" fill="rgb(221,116,43)"/><text x="39.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="1268" width="3" height="15" fill="rgb(250,123,51)"/><text x="39.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1284" width="3" height="15" fill="rgb(249,172,48)"/><text x="39.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.23%)</title><rect x="36" y="1300" width="3" height="15" fill="rgb(213,149,2)"/><text x="39.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1316" width="3" height="15" fill="rgb(227,125,30)"/><text x="39.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1332" width="3" height="15" fill="rgb(227,217,32)"/><text x="39.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1348" width="3" height="15" fill="rgb(226,220,8)"/><text x="39.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="1364" width="3" height="15" fill="rgb(253,223,8)"/><text x="39.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1380" width="3" height="15" fill="rgb(222,98,52)"/><text x="39.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.23%)</title><rect x="36" y="1396" width="3" height="15" fill="rgb(252,36,8)"/><text x="39.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1412" width="3" height="15" fill="rgb(227,103,29)"/><text x="39.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1428" width="3" height="15" fill="rgb(205,192,41)"/><text x="39.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1444" width="3" height="15" fill="rgb(227,92,7)"/><text x="39.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="1460" width="3" height="15" fill="rgb(232,194,6)"/><text x="39.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="1476" width="3" height="15" fill="rgb(233,44,40)"/><text x="39.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="1492" width="3" height="15" fill="rgb(219,145,20)"/><text x="39.00" y="1502.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.23%)</title><rect x="39" y="724" width="3" height="15" fill="rgb(244,186,23)"/><text x="42.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="740" width="3" height="15" fill="rgb(247,81,35)"/><text x="42.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="756" width="3" height="15" fill="rgb(226,207,10)"/><text x="42.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="772" width="3" height="15" fill="rgb(243,46,40)"/><text x="42.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="39" y="788" width="3" height="15" fill="rgb(237,93,27)"/><text x="42.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="804" width="3" height="15" fill="rgb(227,205,0)"/><text x="42.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.23%)</title><rect x="39" y="820" width="3" height="15" fill="rgb(214,35,14)"/><text x="42.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="836" width="3" height="15" fill="rgb(231,226,3)"/><text x="42.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="852" width="3" height="15" fill="rgb(219,181,9)"/><text x="42.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="868" width="3" height="15" fill="rgb(227,225,16)"/><text x="42.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="39" y="884" width="3" height="15" fill="rgb(237,133,26)"/><text x="42.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="900" width="3" height="15" fill="rgb(244,187,40)"/><text x="42.00" y="910.50"></text></g><g><title>0x7fcfa5b1c403 (?) (1 samples, 0.23%)</title><rect x="39" y="916" width="3" height="15" fill="rgb(223,152,6)"/><text x="42.00" y="926.50"></text></g><g><title>0x7fcfa5b1eb8a (?) (1 samples, 0.23%)</title><rect x="39" y="932" width="3" height="15" fill="rgb(223,64,22)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="948" width="3" height="15" fill="rgb(250,85,44)"/><text x="42.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="964" width="3" height="15" fill="rgb(207,54,38)"/><text x="42.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="980" width="3" height="15" fill="rgb(240,180,24)"/><text x="42.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="39" y="996" width="3" height="15" fill="rgb(218,197,23)"/><text x="42.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1012" width="3" height="15" fill="rgb(238,151,1)"/><text x="42.00" y="1022.50"></text></g><g><title>0x7fcfa4165d78 (?) (1 samples, 0.23%)</title><rect x="39" y="1028" width="3" height="15" fill="rgb(238,96,15)"/><text x="42.00" y="1038.50"></text></g><g><title>0x7fcfa416ac2a (?) (1 samples, 0.23%)</title><rect x="39" y="1044" width="3" height="15" fill="rgb(227,187,47)"/><text x="42.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1060" width="3" height="15" fill="rgb(207,24,3)"/><text x="42.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1076" width="3" height="15" fill="rgb(216,197,13)"/><text x="42.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1092" width="3" height="15" fill="rgb(205,149,51)"/><text x="42.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="39" y="1108" width="3" height="15" fill="rgb(247,169,46)"/><text x="42.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1124" width="3" height="15" fill="rgb(236,146,34)"/><text x="42.00" y="1134.50"></text></g><g><title>&lt;module&gt; (dateutil/parser/__init__.py) (1 samples, 0.23%)</title><rect x="39" y="1140" width="3" height="15" fill="rgb(214,214,38)"/><text x="42.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1156" width="3" height="15" fill="rgb(231,117,46)"/><text x="42.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1172" width="3" height="15" fill="rgb(229,158,33)"/><text x="42.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1188" width="3" height="15" fill="rgb(248,55,20)"/><text x="42.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="39" y="1204" width="3" height="15" fill="rgb(243,216,9)"/><text x="42.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1220" width="3" height="15" fill="rgb(222,4,20)"/><text x="42.00" y="1230.50"></text></g><g><title>&lt;module&gt; (dateutil/parser/_parser.py) (1 samples, 0.23%)</title><rect x="39" y="1236" width="3" height="15" fill="rgb(208,27,30)"/><text x="42.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="772" width="3" height="15" fill="rgb(240,8,38)"/><text x="45.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="788" width="3" height="15" fill="rgb(225,184,32)"/><text x="45.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="804" width="3" height="15" fill="rgb(241,5,50)"/><text x="45.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="820" width="3" height="15" fill="rgb(242,40,48)"/><text x="45.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="42" y="836" width="3" height="15" fill="rgb(237,39,18)"/><text x="45.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="852" width="3" height="15" fill="rgb(246,5,33)"/><text x="45.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.23%)</title><rect x="42" y="868" width="3" height="15" fill="rgb(228,48,50)"/><text x="45.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="884" width="3" height="15" fill="rgb(225,97,45)"/><text x="45.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="900" width="3" height="15" fill="rgb(226,199,20)"/><text x="45.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="42" y="916" width="3" height="15" fill="rgb(241,41,48)"/><text x="45.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="42" y="932" width="3" height="15" fill="rgb(231,185,7)"/><text x="45.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="42" y="948" width="3" height="15" fill="rgb(247,32,10)"/><text x="45.00" y="958.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="42" y="964" width="3" height="15" fill="rgb(226,153,28)"/><text x="45.00" y="974.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.46%)</title><rect x="42" y="724" width="5" height="15" fill="rgb(244,184,31)"/><text x="45.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="42" y="740" width="5" height="15" fill="rgb(225,10,36)"/><text x="45.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="42" y="756" width="5" height="15" fill="rgb(217,218,52)"/><text x="45.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="772" width="2" height="15" fill="rgb(210,212,25)"/><text x="48.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="788" width="2" height="15" fill="rgb(221,223,42)"/><text x="48.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="804" width="2" height="15" fill="rgb(217,170,40)"/><text x="48.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.23%)</title><rect x="45" y="820" width="2" height="15" fill="rgb(254,191,24)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="836" width="2" height="15" fill="rgb(205,56,47)"/><text x="48.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="852" width="2" height="15" fill="rgb(238,173,8)"/><text x="48.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="868" width="2" height="15" fill="rgb(209,111,7)"/><text x="48.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="884" width="2" height="15" fill="rgb(217,222,41)"/><text x="48.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="900" width="2" height="15" fill="rgb(251,139,46)"/><text x="48.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.23%)</title><rect x="45" y="916" width="2" height="15" fill="rgb(235,98,11)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="932" width="2" height="15" fill="rgb(253,185,52)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="948" width="2" height="15" fill="rgb(222,225,53)"/><text x="48.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="964" width="2" height="15" fill="rgb(241,33,8)"/><text x="48.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="980" width="2" height="15" fill="rgb(221,44,12)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="996" width="2" height="15" fill="rgb(212,158,2)"/><text x="48.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.23%)</title><rect x="45" y="1012" width="2" height="15" fill="rgb(230,151,28)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1028" width="2" height="15" fill="rgb(211,85,15)"/><text x="48.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1044" width="2" height="15" fill="rgb(254,203,53)"/><text x="48.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1060" width="2" height="15" fill="rgb(227,66,41)"/><text x="48.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="1076" width="2" height="15" fill="rgb(237,193,30)"/><text x="48.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1092" width="2" height="15" fill="rgb(254,139,5)"/><text x="48.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.23%)</title><rect x="45" y="1108" width="2" height="15" fill="rgb(210,124,51)"/><text x="48.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1124" width="2" height="15" fill="rgb(212,39,23)"/><text x="48.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1140" width="2" height="15" fill="rgb(215,137,46)"/><text x="48.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1156" width="2" height="15" fill="rgb(238,201,36)"/><text x="48.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="1172" width="2" height="15" fill="rgb(223,207,53)"/><text x="48.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1188" width="2" height="15" fill="rgb(221,91,1)"/><text x="48.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.23%)</title><rect x="45" y="1204" width="2" height="15" fill="rgb(211,37,30)"/><text x="48.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1220" width="2" height="15" fill="rgb(213,40,9)"/><text x="48.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1236" width="2" height="15" fill="rgb(242,99,39)"/><text x="48.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1252" width="2" height="15" fill="rgb(219,163,36)"/><text x="48.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="1268" width="2" height="15" fill="rgb(229,149,4)"/><text x="48.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1284" width="2" height="15" fill="rgb(234,109,27)"/><text x="48.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.23%)</title><rect x="45" y="1300" width="2" height="15" fill="rgb(216,110,34)"/><text x="48.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1316" width="2" height="15" fill="rgb(237,57,30)"/><text x="48.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1332" width="2" height="15" fill="rgb(224,149,14)"/><text x="48.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1348" width="2" height="15" fill="rgb(233,57,3)"/><text x="48.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="1364" width="2" height="15" fill="rgb(212,204,45)"/><text x="48.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1380" width="2" height="15" fill="rgb(220,24,19)"/><text x="48.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.23%)</title><rect x="45" y="1396" width="2" height="15" fill="rgb(248,127,15)"/><text x="48.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1412" width="2" height="15" fill="rgb(236,199,13)"/><text x="48.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1428" width="2" height="15" fill="rgb(210,88,21)"/><text x="48.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1444" width="2" height="15" fill="rgb(225,17,5)"/><text x="48.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="1460" width="2" height="15" fill="rgb(243,7,2)"/><text x="48.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1476" width="2" height="15" fill="rgb(252,157,53)"/><text x="48.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.23%)</title><rect x="45" y="1492" width="2" height="15" fill="rgb(239,165,42)"/><text x="48.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1508" width="2" height="15" fill="rgb(248,27,5)"/><text x="48.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1524" width="2" height="15" fill="rgb(207,54,36)"/><text x="48.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1540" width="2" height="15" fill="rgb(250,106,31)"/><text x="48.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1556" width="2" height="15" fill="rgb(250,98,30)"/><text x="48.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1572" width="2" height="15" fill="rgb(227,225,40)"/><text x="48.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1588" width="2" height="15" fill="rgb(205,54,20)"/><text x="48.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="45" y="1604" width="2" height="15" fill="rgb(208,97,27)"/><text x="48.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="45" y="1620" width="2" height="15" fill="rgb(251,21,19)"/><text x="48.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.23%)</title><rect x="45" y="1636" width="2" height="15" fill="rgb(237,90,14)"/><text x="48.00" y="1646.50"></text></g><g><title>rc_params (matplotlib/__init__.py) (1 samples, 0.23%)</title><rect x="45" y="1652" width="2" height="15" fill="rgb(249,114,2)"/><text x="48.00" y="1662.50"></text></g><g><title>rc_params_from_file (matplotlib/__init__.py) (1 samples, 0.23%)</title><rect x="45" y="1668" width="2" height="15" fill="rgb(241,0,13)"/><text x="48.00" y="1678.50"></text></g><g><title>__init__ (matplotlib/__init__.py) (1 samples, 0.23%)</title><rect x="45" y="1684" width="2" height="15" fill="rgb(219,45,27)"/><text x="48.00" y="1694.50"></text></g><g><title>update (_collections_abc.py) (1 samples, 0.23%)</title><rect x="45" y="1700" width="2" height="15" fill="rgb(220,34,40)"/><text x="48.00" y="1710.50"></text></g><g><title>__setitem__ (matplotlib/__init__.py) (1 samples, 0.23%)</title><rect x="45" y="1716" width="2" height="15" fill="rgb(217,0,37)"/><text x="48.00" y="1726.50"></text></g><g><title>validate_cycler (matplotlib/rcsetup.py) (1 samples, 0.23%)</title><rect x="45" y="1732" width="2" height="15" fill="rgb(241,149,30)"/><text x="48.00" y="1742.50"></text></g><g><title>f (matplotlib/rcsetup.py) (1 samples, 0.23%)</title><rect x="45" y="1748" width="2" height="15" fill="rgb(246,81,39)"/><text x="48.00" y="1758.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/rcsetup.py) (1 samples, 0.23%)</title><rect x="45" y="1764" width="2" height="15" fill="rgb(206,145,9)"/><text x="48.00" y="1774.50"></text></g><g><title>validate_color_for_prop_cycle (matplotlib/rcsetup.py) (1 samples, 0.23%)</title><rect x="45" y="1780" width="2" height="15" fill="rgb(238,191,52)"/><text x="48.00" y="1790.50"></text></g><g><title>match (re.py) (1 samples, 0.23%)</title><rect x="45" y="1796" width="2" height="15" fill="rgb(214,47,11)"/><text x="48.00" y="1806.50"></text></g><g><title>_compile (re.py) (1 samples, 0.23%)</title><rect x="45" y="1812" width="2" height="15" fill="rgb(235,117,37)"/><text x="48.00" y="1822.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.23%)</title><rect x="45" y="1828" width="2" height="15" fill="rgb(208,92,21)"/><text x="48.00" y="1838.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="45" y="1844" width="2" height="15" fill="rgb(238,22,13)"/><text x="48.00" y="1854.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="45" y="1860" width="2" height="15" fill="rgb(210,135,8)"/><text x="48.00" y="1870.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.14%)</title><rect x="36" y="340" width="14" height="15" fill="rgb(254,198,51)"/><text x="39.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.14%)</title><rect x="36" y="356" width="14" height="15" fill="rgb(220,145,14)"/><text x="39.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.14%)</title><rect x="36" y="372" width="14" height="15" fill="rgb(217,20,10)"/><text x="39.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.14%)</title><rect x="36" y="388" width="14" height="15" fill="rgb(246,190,20)"/><text x="39.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.14%)</title><rect x="36" y="404" width="14" height="15" fill="rgb(224,77,40)"/><text x="39.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.14%)</title><rect x="36" y="420" width="14" height="15" fill="rgb(224,164,24)"/><text x="39.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 1.14%)</title><rect x="36" y="436" width="14" height="15" fill="rgb(218,78,33)"/><text x="39.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.14%)</title><rect x="36" y="452" width="14" height="15" fill="rgb(247,74,49)"/><text x="39.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.14%)</title><rect x="36" y="468" width="14" height="15" fill="rgb(231,136,38)"/><text x="39.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="39" y="484" width="11" height="15" fill="rgb(221,122,10)"/><text x="42.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.91%)</title><rect x="39" y="500" width="11" height="15" fill="rgb(209,23,17)"/><text x="42.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="39" y="516" width="11" height="15" fill="rgb(222,32,9)"/><text x="42.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.91%)</title><rect x="39" y="532" width="11" height="15" fill="rgb(238,50,42)"/><text x="42.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="39" y="548" width="11" height="15" fill="rgb(238,220,5)"/><text x="42.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="39" y="564" width="11" height="15" fill="rgb(251,51,14)"/><text x="42.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="39" y="580" width="11" height="15" fill="rgb(234,36,36)"/><text x="42.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.91%)</title><rect x="39" y="596" width="11" height="15" fill="rgb(210,217,16)"/><text x="42.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="39" y="612" width="11" height="15" fill="rgb(237,93,29)"/><text x="42.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.91%)</title><rect x="39" y="628" width="11" height="15" fill="rgb(221,207,41)"/><text x="42.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="39" y="644" width="11" height="15" fill="rgb(225,101,48)"/><text x="42.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="39" y="660" width="11" height="15" fill="rgb(231,82,42)"/><text x="42.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="39" y="676" width="11" height="15" fill="rgb(241,217,43)"/><text x="42.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.91%)</title><rect x="39" y="692" width="11" height="15" fill="rgb(226,134,2)"/><text x="42.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="39" y="708" width="11" height="15" fill="rgb(252,140,33)"/><text x="42.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.23%)</title><rect x="47" y="724" width="3" height="15" fill="rgb(233,65,8)"/><text x="50.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="47" y="740" width="3" height="15" fill="rgb(250,142,30)"/><text x="50.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="47" y="756" width="3" height="15" fill="rgb(235,64,4)"/><text x="50.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="47" y="772" width="3" height="15" fill="rgb(239,71,43)"/><text x="50.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="47" y="788" width="3" height="15" fill="rgb(224,79,23)"/><text x="50.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="47" y="804" width="3" height="15" fill="rgb(232,19,23)"/><text x="50.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py) (1 samples, 0.23%)</title><rect x="47" y="820" width="3" height="15" fill="rgb(208,209,42)"/><text x="50.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="47" y="836" width="3" height="15" fill="rgb(249,98,52)"/><text x="50.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="47" y="852" width="3" height="15" fill="rgb(232,122,19)"/><text x="50.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="47" y="868" width="3" height="15" fill="rgb(207,158,28)"/><text x="50.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="47" y="884" width="3" height="15" fill="rgb(242,4,6)"/><text x="50.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="47" y="900" width="3" height="15" fill="rgb(213,89,42)"/><text x="50.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py) (1 samples, 0.23%)</title><rect x="47" y="916" width="3" height="15" fill="rgb(208,138,5)"/><text x="50.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="47" y="932" width="3" height="15" fill="rgb(237,119,19)"/><text x="50.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="47" y="948" width="3" height="15" fill="rgb(231,38,26)"/><text x="50.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="47" y="964" width="3" height="15" fill="rgb(225,212,8)"/><text x="50.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="47" y="980" width="3" height="15" fill="rgb(215,27,54)"/><text x="50.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="47" y="996" width="3" height="15" fill="rgb(228,211,35)"/><text x="50.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/io/parsers.py) (1 samples, 0.23%)</title><rect x="47" y="1012" width="3" height="15" fill="rgb(210,203,52)"/><text x="50.00" y="1022.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.23%)</title><rect x="47" y="1028" width="3" height="15" fill="rgb(240,120,8)"/><text x="50.00" y="1038.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.23%)</title><rect x="47" y="1044" width="3" height="15" fill="rgb(216,70,37)"/><text x="50.00" y="1054.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.23%)</title><rect x="47" y="1060" width="3" height="15" fill="rgb(222,127,8)"/><text x="50.00" y="1070.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.23%)</title><rect x="47" y="1076" width="3" height="15" fill="rgb(219,164,37)"/><text x="50.00" y="1086.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.23%)</title><rect x="47" y="1092" width="3" height="15" fill="rgb(248,106,21)"/><text x="50.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.23%)</title><rect x="50" y="580" width="3" height="15" fill="rgb(240,91,28)"/><text x="53.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="596" width="3" height="15" fill="rgb(225,47,38)"/><text x="53.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="612" width="3" height="15" fill="rgb(218,103,24)"/><text x="53.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="628" width="3" height="15" fill="rgb(208,207,0)"/><text x="53.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="644" width="3" height="15" fill="rgb(236,63,26)"/><text x="53.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="660" width="3" height="15" fill="rgb(249,78,2)"/><text x="53.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="676" width="3" height="15" fill="rgb(235,223,3)"/><text x="53.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="50" y="692" width="3" height="15" fill="rgb(244,98,29)"/><text x="53.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="708" width="3" height="15" fill="rgb(249,184,19)"/><text x="53.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.23%)</title><rect x="50" y="724" width="3" height="15" fill="rgb(252,117,26)"/><text x="53.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="740" width="3" height="15" fill="rgb(205,0,29)"/><text x="53.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="756" width="3" height="15" fill="rgb(242,213,21)"/><text x="53.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="772" width="3" height="15" fill="rgb(238,229,40)"/><text x="53.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="50" y="788" width="3" height="15" fill="rgb(215,164,51)"/><text x="53.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="804" width="3" height="15" fill="rgb(230,147,35)"/><text x="53.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.23%)</title><rect x="50" y="820" width="3" height="15" fill="rgb(231,82,2)"/><text x="53.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="836" width="3" height="15" fill="rgb(217,53,51)"/><text x="53.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="852" width="3" height="15" fill="rgb(219,130,18)"/><text x="53.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="868" width="3" height="15" fill="rgb(224,183,28)"/><text x="53.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="50" y="884" width="3" height="15" fill="rgb(252,107,47)"/><text x="53.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="900" width="3" height="15" fill="rgb(210,226,22)"/><text x="53.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.23%)</title><rect x="50" y="916" width="3" height="15" fill="rgb(221,47,17)"/><text x="53.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="932" width="3" height="15" fill="rgb(232,80,11)"/><text x="53.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="948" width="3" height="15" fill="rgb(229,41,50)"/><text x="53.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="964" width="3" height="15" fill="rgb(229,115,32)"/><text x="53.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="980" width="3" height="15" fill="rgb(235,121,47)"/><text x="53.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="996" width="3" height="15" fill="rgb(219,178,2)"/><text x="53.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="1012" width="3" height="15" fill="rgb(253,42,20)"/><text x="53.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="50" y="1028" width="3" height="15" fill="rgb(244,229,30)"/><text x="53.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="1044" width="3" height="15" fill="rgb(210,150,1)"/><text x="53.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.23%)</title><rect x="50" y="1060" width="3" height="15" fill="rgb(207,178,17)"/><text x="53.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="1076" width="3" height="15" fill="rgb(205,111,23)"/><text x="53.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="1092" width="3" height="15" fill="rgb(245,168,10)"/><text x="53.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="1108" width="3" height="15" fill="rgb(205,4,49)"/><text x="53.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="50" y="1124" width="3" height="15" fill="rgb(207,158,4)"/><text x="53.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="50" y="1140" width="3" height="15" fill="rgb(220,14,43)"/><text x="53.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="50" y="1156" width="3" height="15" fill="rgb(237,217,31)"/><text x="53.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 1.60%)</title><rect x="36" y="244" width="19" height="15" fill="rgb(221,141,24)"/><text x="39.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="36" y="260" width="19" height="15" fill="rgb(227,184,19)"/><text x="39.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="36" y="276" width="19" height="15" fill="rgb(210,193,7)"/><text x="39.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="36" y="292" width="19" height="15" fill="rgb(217,101,52)"/><text x="39.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.60%)</title><rect x="36" y="308" width="19" height="15" fill="rgb(214,144,10)"/><text x="39.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.60%)</title><rect x="36" y="324" width="19" height="15" fill="rgb(235,183,51)"/><text x="39.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.46%)</title><rect x="50" y="340" width="5" height="15" fill="rgb(226,13,8)"/><text x="53.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="356" width="5" height="15" fill="rgb(248,197,46)"/><text x="53.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="372" width="5" height="15" fill="rgb(228,194,17)"/><text x="53.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="388" width="5" height="15" fill="rgb(237,114,34)"/><text x="53.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="404" width="5" height="15" fill="rgb(221,5,13)"/><text x="53.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="420" width="5" height="15" fill="rgb(211,40,2)"/><text x="53.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="436" width="5" height="15" fill="rgb(231,55,34)"/><text x="53.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="50" y="452" width="5" height="15" fill="rgb(214,213,22)"/><text x="53.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="468" width="5" height="15" fill="rgb(251,88,44)"/><text x="53.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.46%)</title><rect x="50" y="484" width="5" height="15" fill="rgb(216,107,17)"/><text x="53.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="500" width="5" height="15" fill="rgb(236,205,14)"/><text x="53.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="516" width="5" height="15" fill="rgb(215,115,47)"/><text x="53.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="532" width="5" height="15" fill="rgb(211,156,54)"/><text x="53.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="50" y="548" width="5" height="15" fill="rgb(213,194,16)"/><text x="53.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="564" width="5" height="15" fill="rgb(235,229,9)"/><text x="53.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.23%)</title><rect x="53" y="580" width="2" height="15" fill="rgb(223,41,28)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="596" width="2" height="15" fill="rgb(241,152,40)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="612" width="2" height="15" fill="rgb(223,174,44)"/><text x="56.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="628" width="2" height="15" fill="rgb(239,76,26)"/><text x="56.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="53" y="644" width="2" height="15" fill="rgb(242,78,47)"/><text x="56.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="660" width="2" height="15" fill="rgb(221,146,10)"/><text x="56.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.23%)</title><rect x="53" y="676" width="2" height="15" fill="rgb(206,78,42)"/><text x="56.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="692" width="2" height="15" fill="rgb(233,85,14)"/><text x="56.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="708" width="2" height="15" fill="rgb(247,113,3)"/><text x="56.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="724" width="2" height="15" fill="rgb(220,118,26)"/><text x="56.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="53" y="740" width="2" height="15" fill="rgb(238,97,43)"/><text x="56.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="756" width="2" height="15" fill="rgb(210,13,11)"/><text x="56.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.23%)</title><rect x="53" y="772" width="2" height="15" fill="rgb(238,168,22)"/><text x="56.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="788" width="2" height="15" fill="rgb(205,41,46)"/><text x="56.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="804" width="2" height="15" fill="rgb(233,132,19)"/><text x="56.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="820" width="2" height="15" fill="rgb(247,223,35)"/><text x="56.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="53" y="836" width="2" height="15" fill="rgb(240,33,5)"/><text x="56.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="852" width="2" height="15" fill="rgb(230,102,51)"/><text x="56.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py) (1 samples, 0.23%)</title><rect x="53" y="868" width="2" height="15" fill="rgb(207,227,28)"/><text x="56.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="884" width="2" height="15" fill="rgb(242,132,42)"/><text x="56.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="900" width="2" height="15" fill="rgb(242,181,5)"/><text x="56.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="916" width="2" height="15" fill="rgb(250,141,34)"/><text x="56.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="53" y="932" width="2" height="15" fill="rgb(221,71,33)"/><text x="56.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="948" width="2" height="15" fill="rgb(209,34,52)"/><text x="56.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py) (1 samples, 0.23%)</title><rect x="53" y="964" width="2" height="15" fill="rgb(236,154,52)"/><text x="56.00" y="974.50"></text></g><g><title>UniversalDetector (chardet/universaldetector.py) (1 samples, 0.23%)</title><rect x="53" y="980" width="2" height="15" fill="rgb(227,171,47)"/><text x="56.00" y="990.50"></text></g><g><title>compile (re.py) (1 samples, 0.23%)</title><rect x="53" y="996" width="2" height="15" fill="rgb(236,135,12)"/><text x="56.00" y="1006.50"></text></g><g><title>_compile (re.py) (1 samples, 0.23%)</title><rect x="53" y="1012" width="2" height="15" fill="rgb(219,152,0)"/><text x="56.00" y="1022.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.23%)</title><rect x="53" y="1028" width="2" height="15" fill="rgb(209,140,17)"/><text x="56.00" y="1038.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.23%)</title><rect x="53" y="1044" width="2" height="15" fill="rgb(242,116,27)"/><text x="56.00" y="1054.50"></text></g><g><title>_compile_info (sre_compile.py) (1 samples, 0.23%)</title><rect x="53" y="1060" width="2" height="15" fill="rgb(230,164,32)"/><text x="56.00" y="1070.50"></text></g><g><title>_get_literal_prefix (sre_compile.py) (1 samples, 0.23%)</title><rect x="53" y="1076" width="2" height="15" fill="rgb(223,212,33)"/><text x="56.00" y="1086.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.23%)</title><rect x="55" y="372" width="3" height="15" fill="rgb(229,203,19)"/><text x="58.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="388" width="3" height="15" fill="rgb(246,12,19)"/><text x="58.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="404" width="3" height="15" fill="rgb(241,148,3)"/><text x="58.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="420" width="3" height="15" fill="rgb(251,92,25)"/><text x="58.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="436" width="3" height="15" fill="rgb(217,224,1)"/><text x="58.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="452" width="3" height="15" fill="rgb(251,49,24)"/><text x="58.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="55" y="468" width="3" height="15" fill="rgb(207,9,37)"/><text x="58.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="484" width="3" height="15" fill="rgb(215,25,28)"/><text x="58.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_add_newdocs.py) (1 samples, 0.23%)</title><rect x="55" y="500" width="3" height="15" fill="rgb(249,111,27)"/><text x="58.00" y="510.50"></text></g><g><title>add_newdoc (numpy/core/function_base.py) (1 samples, 0.23%)</title><rect x="55" y="516" width="3" height="15" fill="rgb(211,66,34)"/><text x="58.00" y="526.50"></text></g><g><title>_add_docstring (numpy/core/function_base.py) (1 samples, 0.23%)</title><rect x="55" y="532" width="3" height="15" fill="rgb(237,48,44)"/><text x="58.00" y="542.50"></text></g><g><title>arr_add_docstring (compiled_base.c) (1 samples, 0.23%)</title><rect x="55" y="548" width="3" height="15" fill="rgb(250,34,50)"/><text x="58.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/financial.py) (1 samples, 0.23%)</title><rect x="58" y="468" width="3" height="15" fill="rgb(239,207,44)"/><text x="61.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.23%)</title><rect x="58" y="484" width="3" height="15" fill="rgb(252,64,3)"/><text x="61.00" y="494.50"></text></g><g><title>verify_matching_signatures (numpy/core/overrides.py) (1 samples, 0.23%)</title><rect x="58" y="500" width="3" height="15" fill="rgb(221,37,28)"/><text x="61.00" y="510.50"></text></g><g><title>getargspec (numpy/compat/_inspect.py) (1 samples, 0.23%)</title><rect x="58" y="516" width="3" height="15" fill="rgb(247,146,15)"/><text x="61.00" y="526.50"></text></g><g><title>getargs (numpy/compat/_inspect.py) (1 samples, 0.23%)</title><rect x="58" y="532" width="3" height="15" fill="rgb(245,196,48)"/><text x="61.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 4.57%)</title><rect x="10" y="68" width="53" height="15" fill="rgb(254,181,13)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 4.57%)</title><rect x="10" y="84" width="53" height="15" fill="rgb(246,155,14)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 4.57%)</title><rect x="10" y="100" width="53" height="15" fill="rgb(243,150,27)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (20 samples, 4.57%)</title><rect x="10" y="116" width="53" height="15" fill="rgb(237,81,27)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (20 samples, 4.57%)</title><rect x="10" y="132" width="53" height="15" fill="rgb(254,199,9)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (20 samples, 4.57%)</title><rect x="10" y="148" width="53" height="15" fill="rgb(237,30,34)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 4.57%)</title><rect x="10" y="164" width="53" height="15" fill="rgb(219,99,6)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 4.57%)</title><rect x="10" y="180" width="53" height="15" fill="rgb(243,178,52)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.28%)</title><rect x="36" y="196" width="27" height="15" fill="rgb(240,7,35)"/><text x="39.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.28%)</title><rect x="36" y="212" width="27" height="15" fill="rgb(206,202,39)"/><text x="39.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.28%)</title><rect x="36" y="228" width="27" height="15" fill="rgb(250,80,9)"/><text x="39.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.68%)</title><rect x="55" y="244" width="8" height="15" fill="rgb(238,198,10)"/><text x="58.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="260" width="8" height="15" fill="rgb(248,86,24)"/><text x="58.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="276" width="8" height="15" fill="rgb(230,50,7)"/><text x="58.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="292" width="8" height="15" fill="rgb(214,187,35)"/><text x="58.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="308" width="8" height="15" fill="rgb(209,38,33)"/><text x="58.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="324" width="8" height="15" fill="rgb(206,213,5)"/><text x="58.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.68%)</title><rect x="55" y="340" width="8" height="15" fill="rgb(225,73,5)"/><text x="58.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="356" width="8" height="15" fill="rgb(234,188,28)"/><text x="58.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (2 samples, 0.46%)</title><rect x="58" y="372" width="5" height="15" fill="rgb(239,86,41)"/><text x="61.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="58" y="388" width="5" height="15" fill="rgb(216,73,31)"/><text x="61.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="58" y="404" width="5" height="15" fill="rgb(205,24,19)"/><text x="61.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="58" y="420" width="5" height="15" fill="rgb(227,104,35)"/><text x="61.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="58" y="436" width="5" height="15" fill="rgb(244,159,52)"/><text x="61.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="58" y="452" width="5" height="15" fill="rgb(211,52,44)"/><text x="61.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.23%)</title><rect x="61" y="468" width="2" height="15" fill="rgb(239,102,51)"/><text x="64.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="61" y="484" width="2" height="15" fill="rgb(245,140,23)"/><text x="64.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="61" y="500" width="2" height="15" fill="rgb(230,21,50)"/><text x="64.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="61" y="516" width="2" height="15" fill="rgb(241,32,28)"/><text x="64.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="61" y="532" width="2" height="15" fill="rgb(209,44,54)"/><text x="64.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="61" y="548" width="2" height="15" fill="rgb(222,54,10)"/><text x="64.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py) (1 samples, 0.23%)</title><rect x="61" y="564" width="2" height="15" fill="rgb(232,41,40)"/><text x="64.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="61" y="580" width="2" height="15" fill="rgb(250,178,6)"/><text x="64.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="61" y="596" width="2" height="15" fill="rgb(226,100,45)"/><text x="64.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="61" y="612" width="2" height="15" fill="rgb(232,151,53)"/><text x="64.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="61" y="628" width="2" height="15" fill="rgb(211,119,22)"/><text x="64.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="61" y="644" width="2" height="15" fill="rgb(225,1,46)"/><text x="64.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py) (1 samples, 0.23%)</title><rect x="61" y="660" width="2" height="15" fill="rgb(252,80,8)"/><text x="64.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="61" y="676" width="2" height="15" fill="rgb(216,12,19)"/><text x="64.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="61" y="692" width="2" height="15" fill="rgb(234,79,7)"/><text x="64.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="61" y="708" width="2" height="15" fill="rgb(249,213,47)"/><text x="64.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="61" y="724" width="2" height="15" fill="rgb(245,192,46)"/><text x="64.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="61" y="740" width="2" height="15" fill="rgb(232,75,32)"/><text x="64.00" y="750.50"></text></g><g><title>&lt;module&gt; (ast.py) (1 samples, 0.23%)</title><rect x="61" y="756" width="2" height="15" fill="rgb(235,7,7)"/><text x="64.00" y="766.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="63" y="116" width="3" height="15" fill="rgb(223,17,26)"/><text x="66.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.23%)</title><rect x="63" y="132" width="3" height="15" fill="rgb(232,18,19)"/><text x="66.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.23%)</title><rect x="63" y="148" width="3" height="15" fill="rgb(214,12,24)"/><text x="66.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.23%)</title><rect x="63" y="164" width="3" height="15" fill="rgb(220,65,14)"/><text x="66.00" y="174.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.23%)</title><rect x="63" y="180" width="3" height="15" fill="rgb(208,176,15)"/><text x="66.00" y="190.50"></text></g><g><title>0x7fcf8ea44ff9 (?) (1 samples, 0.23%)</title><rect x="71" y="212" width="3" height="15" fill="rgb(214,221,46)"/><text x="74.00" y="222.50"></text></g><g><title>0x7fcf8ea3fef6 (?) (1 samples, 0.23%)</title><rect x="71" y="228" width="3" height="15" fill="rgb(254,179,0)"/><text x="74.00" y="238.50"></text></g><g><title>0x7fcf8ea34962 (?) (1 samples, 0.23%)</title><rect x="71" y="244" width="3" height="15" fill="rgb(231,176,54)"/><text x="74.00" y="254.50"></text></g><g><title>0x7fcf8ea687a7 (?) (1 samples, 0.23%)</title><rect x="71" y="260" width="3" height="15" fill="rgb(251,120,3)"/><text x="74.00" y="270.50"></text></g><g><title>0x7fcf8ea68379 (?) (1 samples, 0.23%)</title><rect x="71" y="276" width="3" height="15" fill="rgb(248,40,33)"/><text x="74.00" y="286.50"></text></g><g><title>0x7fcf8eec68b8 (?) (1 samples, 0.23%)</title><rect x="71" y="292" width="3" height="15" fill="rgb(216,25,19)"/><text x="74.00" y="302.50"></text></g><g><title>0x7fcf8eec4c7f (?) (1 samples, 0.23%)</title><rect x="71" y="308" width="3" height="15" fill="rgb(242,196,50)"/><text x="74.00" y="318.50"></text></g><g><title>0x7fcf8eed799c (?) (1 samples, 0.23%)</title><rect x="71" y="324" width="3" height="15" fill="rgb(223,188,16)"/><text x="74.00" y="334.50"></text></g><g><title>0x7fcf8ebbcd39 (?) (1 samples, 0.23%)</title><rect x="71" y="340" width="3" height="15" fill="rgb(219,104,37)"/><text x="74.00" y="350.50"></text></g><g><title>0x7fcf8ebb72ea (?) (1 samples, 0.23%)</title><rect x="71" y="356" width="3" height="15" fill="rgb(231,44,49)"/><text x="74.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.46%)</title><rect x="74" y="212" width="6" height="15" fill="rgb(252,93,44)"/><text x="77.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="77" y="228" width="3" height="15" fill="rgb(229,135,13)"/><text x="80.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="77" y="244" width="3" height="15" fill="rgb(227,63,45)"/><text x="80.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="77" y="260" width="3" height="15" fill="rgb(216,72,35)"/><text x="80.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="77" y="276" width="3" height="15" fill="rgb(234,78,33)"/><text x="80.00" y="286.50"></text></g><g><title>std::type_info::hash_code (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="77" y="292" width="3" height="15" fill="rgb(212,223,16)"/><text x="80.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.23%)</title><rect x="80" y="212" width="2" height="15" fill="rgb(219,84,15)"/><text x="83.00" y="222.50"></text></g><g><title>0x7ffed63c9bad ([vdso]) (1 samples, 0.23%)</title><rect x="80" y="228" width="2" height="15" fill="rgb(234,207,15)"/><text x="83.00" y="238.50"></text></g><g><title>0x7fcfce994d07 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="82" y="260" width="3" height="15" fill="rgb(252,93,40)"/><text x="85.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="85" y="292" width="3" height="15" fill="rgb(222,132,3)"/><text x="88.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="88" y="292" width="5" height="15" fill="rgb(248,27,6)"/><text x="91.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="93" y="340" width="3" height="15" fill="rgb(254,201,18)"/><text x="96.00" y="350.50"></text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="96" y="340" width="2" height="15" fill="rgb(254,31,15)"/><text x="99.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="98" y="340" width="3" height="15" fill="rgb(219,181,50)"/><text x="101.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.23%)</title><rect x="98" y="356" width="3" height="15" fill="rgb(251,140,54)"/><text x="101.00" y="366.50"></text></g><g><title>onnxruntime::DataTypeImpl::GetType&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="177" y="420" width="2" height="15" fill="rgb(222,26,8)"/><text x="180.00" y="430.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.68%)</title><rect x="174" y="356" width="8" height="15" fill="rgb(209,48,49)"/><text x="177.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.68%)</title><rect x="174" y="372" width="8" height="15" fill="rgb(221,163,8)"/><text x="177.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.68%)</title><rect x="174" y="388" width="8" height="15" fill="rgb(251,188,35)"/><text x="177.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="177" y="404" width="5" height="15" fill="rgb(210,189,15)"/><text x="180.00" y="414.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;long&gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="179" y="420" width="3" height="15" fill="rgb(218,185,7)"/><text x="182.00" y="430.50"></text></g><g><title>0x7fcfce9b4d97 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="233" y="372" width="3" height="15" fill="rgb(209,35,23)"/><text x="236.00" y="382.50"></text></g><g><title>0x7fcfce9b4db3 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="236" y="372" width="2" height="15" fill="rgb(249,185,5)"/><text x="239.00" y="382.50"></text></g><g><title>0x7fcfceb13e0a (libm-2.29.so) (1 samples, 0.23%)</title><rect x="238" y="372" width="3" height="15" fill="rgb(209,186,28)"/><text x="241.00" y="382.50"></text></g><g><title>0x7fcfceb13e2f (libm-2.29.so) (1 samples, 0.23%)</title><rect x="241" y="372" width="3" height="15" fill="rgb(232,152,39)"/><text x="244.00" y="382.50"></text></g><g><title>0x7fcfceb13e5f (libm-2.29.so) (1 samples, 0.23%)</title><rect x="244" y="372" width="3" height="15" fill="rgb(226,197,9)"/><text x="247.00" y="382.50"></text></g><g><title>0x7fcfceb13e6d (libm-2.29.so) (1 samples, 0.23%)</title><rect x="247" y="372" width="2" height="15" fill="rgb(209,161,39)"/><text x="250.00" y="382.50"></text></g><g><title>0x7fcfceb13e71 (libm-2.29.so) (2 samples, 0.46%)</title><rect x="249" y="372" width="6" height="15" fill="rgb(248,172,25)"/><text x="252.00" y="382.50"></text></g><g><title>0x7fcfceb13e7a (libm-2.29.so) (1 samples, 0.23%)</title><rect x="255" y="372" width="2" height="15" fill="rgb(229,144,21)"/><text x="258.00" y="382.50"></text></g><g><title>0x7fcfceb13e92 (libm-2.29.so) (3 samples, 0.68%)</title><rect x="257" y="372" width="8" height="15" fill="rgb(224,114,38)"/><text x="260.00" y="382.50"></text></g><g><title>0x7fcfceb13e96 (libm-2.29.so) (2 samples, 0.46%)</title><rect x="265" y="372" width="6" height="15" fill="rgb(208,48,35)"/><text x="268.00" y="382.50"></text></g><g><title>0x7fcfceb13e9e (libm-2.29.so) (1 samples, 0.23%)</title><rect x="271" y="372" width="3" height="15" fill="rgb(213,24,8)"/><text x="274.00" y="382.50"></text></g><g><title>0x7fcfceb13ea2 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="274" y="372" width="2" height="15" fill="rgb(238,88,30)"/><text x="277.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (69 samples, 15.75%)</title><rect x="101" y="340" width="186" height="15" fill="rgb(227,98,26)"/><text x="104.00" y="350.50">onnxruntime::ml::LinearC..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 8.90%)</title><rect x="182" y="356" width="105" height="15" fill="rgb(222,85,23)"/><text x="185.00" y="366.50">onnxruntime:..</text></g><g><title>0x7fcfceb13ea6 (libm-2.29.so) (4 samples, 0.91%)</title><rect x="276" y="372" width="11" height="15" fill="rgb(212,16,48)"/><text x="279.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="352" y="500" width="2" height="15" fill="rgb(226,93,16)"/><text x="355.00" y="510.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 23.06%)</title><rect x="85" y="260" width="272" height="15" fill="rgb(235,118,3)"/><text x="88.00" y="270.50">onnxruntime::InferenceSession::Run (..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 23.06%)</title><rect x="85" y="276" width="272" height="15" fill="rgb(222,138,41)"/><text x="88.00" y="286.50">onnxruntime::InferenceSession::Run (..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (98 samples, 22.37%)</title><rect x="93" y="292" width="264" height="15" fill="rgb(230,40,43)"/><text x="96.00" y="302.50">onnxruntime::utils::ExecuteGraph (o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (98 samples, 22.37%)</title><rect x="93" y="308" width="264" height="15" fill="rgb(207,86,46)"/><text x="96.00" y="318.50">onnxruntime::utils::ExecuteGraphImp..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (98 samples, 22.37%)</title><rect x="93" y="324" width="264" height="15" fill="rgb(225,179,20)"/><text x="96.00" y="334.50">onnxruntime::SequentialExecutor::Ex..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 5.94%)</title><rect x="287" y="340" width="70" height="15" fill="rgb(242,186,39)"/><text x="290.00" y="350.50">onnxrun..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 5.94%)</title><rect x="287" y="356" width="70" height="15" fill="rgb(235,205,42)"/><text x="290.00" y="366.50">onnxrun..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="352" y="372" width="5" height="15" fill="rgb(251,85,42)"/><text x="355.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="352" y="388" width="5" height="15" fill="rgb(247,42,20)"/><text x="355.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="352" y="404" width="5" height="15" fill="rgb(243,124,46)"/><text x="355.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="352" y="420" width="5" height="15" fill="rgb(218,106,10)"/><text x="355.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="352" y="436" width="5" height="15" fill="rgb(214,133,0)"/><text x="355.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="352" y="452" width="5" height="15" fill="rgb(207,186,6)"/><text x="355.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="352" y="468" width="5" height="15" fill="rgb(206,16,14)"/><text x="355.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="352" y="484" width="5" height="15" fill="rgb(218,33,28)"/><text x="355.00" y="494.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="354" y="500" width="3" height="15" fill="rgb(227,39,16)"/><text x="357.00" y="510.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="354" y="516" width="3" height="15" fill="rgb(241,213,45)"/><text x="357.00" y="526.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="357" y="260" width="3" height="15" fill="rgb(222,83,29)"/><text x="360.00" y="270.50"></text></g><g><title>0x7fcfce9b4d94 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="360" y="276" width="2" height="15" fill="rgb(249,124,33)"/><text x="363.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (105 samples, 23.97%)</title><rect x="82" y="244" width="283" height="15" fill="rgb(238,202,32)"/><text x="85.00" y="254.50">onnxruntime::python::addObjectMethods..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="360" y="260" width="5" height="15" fill="rgb(206,225,8)"/><text x="363.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.23%)</title><rect x="362" y="276" width="3" height="15" fill="rgb(236,70,7)"/><text x="365.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="362" y="292" width="3" height="15" fill="rgb(207,96,11)"/><text x="365.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="362" y="308" width="3" height="15" fill="rgb(238,120,42)"/><text x="365.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (112 samples, 25.57%)</title><rect x="66" y="132" width="302" height="15" fill="rgb(254,178,52)"/><text x="69.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (111 samples, 25.34%)</title><rect x="69" y="148" width="299" height="15" fill="rgb(209,59,39)"/><text x="72.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (111 samples, 25.34%)</title><rect x="69" y="164" width="299" height="15" fill="rgb(233,213,51)"/><text x="72.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (110 samples, 25.11%)</title><rect x="71" y="180" width="297" height="15" fill="rgb(254,86,46)"/><text x="74.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session..</text></g><g><title>run (onnxruntime/capi/session.py) (110 samples, 25.11%)</title><rect x="71" y="196" width="297" height="15" fill="rgb(234,186,10)"/><text x="74.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 24.20%)</title><rect x="82" y="212" width="286" height="15" fill="rgb(243,195,3)"/><text x="85.00" y="222.50">pybind11::cpp_function::dispatcher (on..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 24.20%)</title><rect x="82" y="228" width="286" height="15" fill="rgb(240,81,11)"/><text x="85.00" y="238.50">void pybind11::cpp_function::initializ..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="365" y="244" width="3" height="15" fill="rgb(224,9,50)"/><text x="368.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="365" y="260" width="3" height="15" fill="rgb(206,2,6)"/><text x="368.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="365" y="276" width="3" height="15" fill="rgb(248,120,40)"/><text x="368.00" y="286.50"></text></g><g><title>0x7fcfce9b4d50 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="365" y="292" width="3" height="15" fill="rgb(227,52,9)"/><text x="368.00" y="302.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py) (114 samples, 26.03%)</title><rect x="63" y="68" width="308" height="15" fill="rgb(209,70,28)"/><text x="66.00" y="78.50">profile_ort (bench_LogisticRegression_lib..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py) (114 samples, 26.03%)</title><rect x="63" y="84" width="308" height="15" fill="rgb(231,49,32)"/><text x="66.00" y="94.50">setup_profile (bench_LogisticRegression_l..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py) (114 samples, 26.03%)</title><rect x="63" y="100" width="308" height="15" fill="rgb(228,17,12)"/><text x="66.00" y="110.50">profile (bench_LogisticRegression_libline..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (113 samples, 25.80%)</title><rect x="66" y="116" width="305" height="15" fill="rgb(213,9,25)"/><text x="69.00" y="126.50">time_predict (mlprodict/asv_benchmark/com..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.23%)</title><rect x="368" y="132" width="3" height="15" fill="rgb(237,110,24)"/><text x="371.00" y="142.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.23%)</title><rect x="373" y="132" width="3" height="15" fill="rgb(209,210,19)"/><text x="376.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.23%)</title><rect x="373" y="148" width="3" height="15" fill="rgb(226,22,28)"/><text x="376.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.46%)</title><rect x="373" y="116" width="6" height="15" fill="rgb(209,121,29)"/><text x="376.00" y="126.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.23%)</title><rect x="376" y="132" width="3" height="15" fill="rgb(227,167,50)"/><text x="379.00" y="142.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.23%)</title><rect x="419" y="212" width="3" height="15" fill="rgb(251,210,19)"/><text x="422.00" y="222.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (9 samples, 2.05%)</title><rect x="435" y="244" width="24" height="15" fill="rgb(234,225,0)"/><text x="438.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 2.05%)</title><rect x="435" y="260" width="24" height="15" fill="rgb(251,36,41)"/><text x="438.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (9 samples, 2.05%)</title><rect x="435" y="276" width="24" height="15" fill="rgb(232,146,37)"/><text x="438.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (7 samples, 1.60%)</title><rect x="441" y="292" width="18" height="15" fill="rgb(228,187,14)"/><text x="444.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (7 samples, 1.60%)</title><rect x="441" y="308" width="18" height="15" fill="rgb(208,123,8)"/><text x="444.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (7 samples, 1.60%)</title><rect x="441" y="324" width="18" height="15" fill="rgb(223,94,41)"/><text x="444.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (5 samples, 1.14%)</title><rect x="446" y="340" width="13" height="15" fill="rgb(249,204,43)"/><text x="449.00" y="350.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h) (1 samples, 0.23%)</title><rect x="465" y="340" width="2" height="15" fill="rgb(247,56,16)"/><text x="468.00" y="350.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="465" y="356" width="2" height="15" fill="rgb(235,226,14)"/><text x="468.00" y="366.50"></text></g><g><title>gemm (cblasfuncs.c) (6 samples, 1.37%)</title><rect x="467" y="340" width="17" height="15" fill="rgb(205,39,6)"/><text x="470.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.37%)</title><rect x="467" y="356" width="17" height="15" fill="rgb(245,5,49)"/><text x="470.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.37%)</title><rect x="467" y="372" width="17" height="15" fill="rgb(214,196,52)"/><text x="470.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.37%)</title><rect x="467" y="388" width="17" height="15" fill="rgb(253,145,46)"/><text x="470.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 1.83%)</title><rect x="465" y="276" width="21" height="15" fill="rgb(239,205,30)"/><text x="468.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (8 samples, 1.83%)</title><rect x="465" y="292" width="21" height="15" fill="rgb(249,114,50)"/><text x="468.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (8 samples, 1.83%)</title><rect x="465" y="308" width="21" height="15" fill="rgb(248,175,11)"/><text x="468.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (8 samples, 1.83%)</title><rect x="465" y="324" width="21" height="15" fill="rgb(216,63,1)"/><text x="468.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.23%)</title><rect x="484" y="340" width="2" height="15" fill="rgb(238,77,13)"/><text x="487.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.23%)</title><rect x="484" y="356" width="2" height="15" fill="rgb(252,164,22)"/><text x="487.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="484" y="372" width="2" height="15" fill="rgb(227,201,48)"/><text x="487.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="484" y="388" width="2" height="15" fill="rgb(235,141,1)"/><text x="487.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="484" y="404" width="2" height="15" fill="rgb(213,127,11)"/><text x="487.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.23%)</title><rect x="484" y="420" width="2" height="15" fill="rgb(216,105,25)"/><text x="487.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="484" y="436" width="2" height="15" fill="rgb(244,226,38)"/><text x="487.00" y="446.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="486" y="276" width="3" height="15" fill="rgb(228,185,1)"/><text x="489.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (20 samples, 4.57%)</title><rect x="459" y="244" width="54" height="15" fill="rgb(228,97,7)"/><text x="462.00" y="254.50">numpy..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (18 samples, 4.11%)</title><rect x="465" y="260" width="48" height="15" fill="rgb(243,172,9)"/><text x="468.00" y="270.50">dot ..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 2.05%)</title><rect x="489" y="276" width="24" height="15" fill="rgb(228,199,19)"/><text x="492.00" y="286.50">s..</text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.68%)</title><rect x="513" y="260" width="8" height="15" fill="rgb(244,121,35)"/><text x="516.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.68%)</title><rect x="513" y="276" width="8" height="15" fill="rgb(207,39,9)"/><text x="516.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (3 samples, 0.68%)</title><rect x="513" y="292" width="8" height="15" fill="rgb(250,58,24)"/><text x="516.00" y="302.50"></text></g><g><title>0x7fcfcdbb6870 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="521" y="340" width="3" height="15" fill="rgb(226,129,45)"/><text x="524.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.23%)</title><rect x="524" y="340" width="3" height="15" fill="rgb(232,155,52)"/><text x="527.00" y="350.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.23%)</title><rect x="524" y="356" width="3" height="15" fill="rgb(243,60,53)"/><text x="527.00" y="366.50"></text></g><g><title>diophantine_precompute (mem_overlap.c) (1 samples, 0.23%)</title><rect x="527" y="340" width="2" height="15" fill="rgb(244,205,30)"/><text x="530.00" y="350.50"></text></g><g><title>safe_mul (npy_extint128.h) (1 samples, 0.23%)</title><rect x="527" y="356" width="2" height="15" fill="rgb(226,76,34)"/><text x="530.00" y="366.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (4 samples, 0.91%)</title><rect x="521" y="292" width="11" height="15" fill="rgb(214,62,48)"/><text x="524.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (4 samples, 0.91%)</title><rect x="521" y="308" width="11" height="15" fill="rgb(223,168,39)"/><text x="524.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (4 samples, 0.91%)</title><rect x="521" y="324" width="11" height="15" fill="rgb(206,185,32)"/><text x="524.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.23%)</title><rect x="529" y="340" width="3" height="15" fill="rgb(241,118,49)"/><text x="532.00" y="350.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.23%)</title><rect x="535" y="308" width="3" height="15" fill="rgb(223,229,53)"/><text x="538.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="535" y="324" width="3" height="15" fill="rgb(222,216,36)"/><text x="538.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="535" y="340" width="3" height="15" fill="rgb(236,60,14)"/><text x="538.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.46%)</title><rect x="538" y="308" width="5" height="15" fill="rgb(211,183,28)"/><text x="541.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.23%)</title><rect x="540" y="324" width="3" height="15" fill="rgb(217,147,4)"/><text x="543.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.23%)</title><rect x="540" y="340" width="3" height="15" fill="rgb(239,216,48)"/><text x="543.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (11 samples, 2.51%)</title><rect x="532" y="292" width="30" height="15" fill="rgb(223,160,48)"/><text x="535.00" y="302.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 1.60%)</title><rect x="543" y="308" width="19" height="15" fill="rgb(225,138,40)"/><text x="546.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 1.60%)</title><rect x="543" y="324" width="19" height="15" fill="rgb(226,127,48)"/><text x="546.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 1.60%)</title><rect x="543" y="340" width="19" height="15" fill="rgb(225,5,39)"/><text x="546.00" y="350.50"></text></g><g><title>0x7fcfce9b4d50 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="559" y="356" width="3" height="15" fill="rgb(209,140,44)"/><text x="562.00" y="366.50"></text></g><g><title>0x7fcfb9c5c890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="564" y="340" width="3" height="15" fill="rgb(240,59,49)"/><text x="567.00" y="350.50"></text></g><g><title>0x7fcfb9da7c70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="567" y="340" width="3" height="15" fill="rgb(236,71,32)"/><text x="570.00" y="350.50"></text></g><g><title>0x7fcfceb13e00 (libm-2.29.so) (2 samples, 0.46%)</title><rect x="583" y="356" width="6" height="15" fill="rgb(251,132,10)"/><text x="586.00" y="366.50"></text></g><g><title>0x7fcfceb13e17 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="589" y="356" width="2" height="15" fill="rgb(241,82,1)"/><text x="592.00" y="366.50"></text></g><g><title>0x7fcfceb13e4e (libm-2.29.so) (2 samples, 0.46%)</title><rect x="591" y="356" width="6" height="15" fill="rgb(209,56,7)"/><text x="594.00" y="366.50"></text></g><g><title>0x7fcfceb13e71 (libm-2.29.so) (4 samples, 0.91%)</title><rect x="597" y="356" width="11" height="15" fill="rgb(234,112,40)"/><text x="600.00" y="366.50"></text></g><g><title>0x7fcfceb13e7e (libm-2.29.so) (2 samples, 0.46%)</title><rect x="608" y="356" width="5" height="15" fill="rgb(253,47,5)"/><text x="611.00" y="366.50"></text></g><g><title>0x7fcfceb13e96 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="613" y="356" width="3" height="15" fill="rgb(246,123,39)"/><text x="616.00" y="366.50"></text></g><g><title>0x7fcfceb13ea2 (libm-2.29.so) (2 samples, 0.46%)</title><rect x="616" y="356" width="5" height="15" fill="rgb(252,210,6)"/><text x="619.00" y="366.50"></text></g><g><title>0x7fcfb9c9e214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (24 samples, 5.48%)</title><rect x="562" y="324" width="64" height="15" fill="rgb(243,227,4)"/><text x="565.00" y="334.50">0x7fcfb..</text></g><g><title>expf (libm-2.29.so) (21 samples, 4.79%)</title><rect x="570" y="340" width="56" height="15" fill="rgb(211,216,37)"/><text x="573.00" y="350.50">expf ..</text></g><g><title>0x7fcfceb13ea6 (libm-2.29.so) (2 samples, 0.46%)</title><rect x="621" y="356" width="5" height="15" fill="rgb(227,124,46)"/><text x="624.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (49 samples, 11.19%)</title><rect x="521" y="276" width="132" height="15" fill="rgb(234,188,32)"/><text x="524.00" y="286.50">execute_legacy_u..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (34 samples, 7.76%)</title><rect x="562" y="292" width="91" height="15" fill="rgb(219,6,24)"/><text x="565.00" y="302.50">trivial_tw..</text></g><g><title>0x7fcfb9c7c33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (34 samples, 7.76%)</title><rect x="562" y="308" width="91" height="15" fill="rgb(246,25,53)"/><text x="565.00" y="318.50">0x7fcfb9c7..</text></g><g><title>0x7fcfb9c9e228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.28%)</title><rect x="626" y="324" width="27" height="15" fill="rgb(215,146,27)"/><text x="629.00" y="334.50">0..</text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.23%)</title><rect x="653" y="292" width="3" height="15" fill="rgb(254,201,41)"/><text x="656.00" y="302.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.23%)</title><rect x="653" y="308" width="3" height="15" fill="rgb(246,39,50)"/><text x="656.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.46%)</title><rect x="653" y="276" width="6" height="15" fill="rgb(216,138,7)"/><text x="656.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.23%)</title><rect x="656" y="292" width="3" height="15" fill="rgb(210,38,3)"/><text x="659.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.23%)</title><rect x="659" y="292" width="2" height="15" fill="rgb(242,130,11)"/><text x="662.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (90 samples, 20.55%)</title><rect x="422" y="228" width="242" height="15" fill="rgb(219,156,54)"/><text x="425.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/o..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (56 samples, 12.79%)</title><rect x="513" y="244" width="151" height="15" fill="rgb(208,37,23)"/><text x="516.00" y="254.50">ufunc_generic_call ..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (53 samples, 12.10%)</title><rect x="521" y="260" width="143" height="15" fill="rgb(226,107,24)"/><text x="524.00" y="270.50">PyUFunc_GenericFun..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.46%)</title><rect x="659" y="276" width="5" height="15" fill="rgb(228,212,53)"/><text x="662.00" y="286.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 0.23%)</title><rect x="661" y="292" width="3" height="15" fill="rgb(210,88,46)"/><text x="664.00" y="302.50"></text></g><g><title>0x7fcfcdbb79c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="672" y="260" width="3" height="15" fill="rgb(206,64,41)"/><text x="675.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="675" y="260" width="3" height="15" fill="rgb(229,8,52)"/><text x="678.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.23%)</title><rect x="675" y="276" width="3" height="15" fill="rgb(246,72,35)"/><text x="678.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.23%)</title><rect x="675" y="292" width="3" height="15" fill="rgb(254,65,3)"/><text x="678.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (9 samples, 2.05%)</title><rect x="694" y="388" width="24" height="15" fill="rgb(228,31,42)"/><text x="697.00" y="398.50">F..</text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (2 samples, 0.46%)</title><rect x="713" y="404" width="5" height="15" fill="rgb(244,13,34)"/><text x="716.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (19 samples, 4.34%)</title><rect x="680" y="356" width="52" height="15" fill="rgb(236,28,42)"/><text x="683.00" y="366.50">PyUFu..</text></g><g><title>reduce_loop (ufunc_object.c) (19 samples, 4.34%)</title><rect x="680" y="372" width="52" height="15" fill="rgb(212,87,3)"/><text x="683.00" y="382.50">reduc..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (5 samples, 1.14%)</title><rect x="718" y="388" width="14" height="15" fill="rgb(254,213,51)"/><text x="721.00" y="398.50"></text></g><g><title>array_sum (methods.c) (21 samples, 4.79%)</title><rect x="678" y="260" width="56" height="15" fill="rgb(218,74,2)"/><text x="681.00" y="270.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (21 samples, 4.79%)</title><rect x="678" y="276" width="56" height="15" fill="rgb(213,200,2)"/><text x="681.00" y="286.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py) (21 samples, 4.79%)</title><rect x="678" y="292" width="56" height="15" fill="rgb(248,39,10)"/><text x="681.00" y="302.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (21 samples, 4.79%)</title><rect x="678" y="308" width="56" height="15" fill="rgb(213,34,23)"/><text x="681.00" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (21 samples, 4.79%)</title><rect x="678" y="324" width="56" height="15" fill="rgb(205,145,37)"/><text x="681.00" y="334.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (20 samples, 4.57%)</title><rect x="680" y="340" width="54" height="15" fill="rgb(251,28,12)"/><text x="683.00" y="350.50">PyUFu..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.23%)</title><rect x="732" y="356" width="2" height="15" fill="rgb(225,32,13)"/><text x="735.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="737" y="292" width="3" height="15" fill="rgb(240,97,5)"/><text x="740.00" y="302.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="737" y="308" width="3" height="15" fill="rgb(219,133,40)"/><text x="740.00" y="318.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.23%)</title><rect x="737" y="324" width="3" height="15" fill="rgb(217,49,29)"/><text x="740.00" y="334.50"></text></g><g><title>FLOAT_divide (loops.c.src) (1 samples, 0.23%)</title><rect x="740" y="324" width="2" height="15" fill="rgb(235,214,36)"/><text x="743.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="740" y="340" width="2" height="15" fill="rgb(229,182,31)"/><text x="743.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="740" y="356" width="2" height="15" fill="rgb(230,132,35)"/><text x="743.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.23%)</title><rect x="740" y="372" width="2" height="15" fill="rgb(217,69,13)"/><text x="743.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.23%)</title><rect x="742" y="324" width="3" height="15" fill="rgb(209,143,46)"/><text x="745.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.23%)</title><rect x="742" y="340" width="3" height="15" fill="rgb(211,187,19)"/><text x="745.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.37%)</title><rect x="740" y="292" width="16" height="15" fill="rgb(240,163,16)"/><text x="743.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.37%)</title><rect x="740" y="308" width="16" height="15" fill="rgb(223,183,42)"/><text x="743.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.91%)</title><rect x="745" y="324" width="11" height="15" fill="rgb(214,16,10)"/><text x="748.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.91%)</title><rect x="745" y="340" width="11" height="15" fill="rgb(211,141,53)"/><text x="748.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.91%)</title><rect x="745" y="356" width="11" height="15" fill="rgb(240,187,23)"/><text x="748.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.46%)</title><rect x="750" y="372" width="6" height="15" fill="rgb(237,163,37)"/><text x="753.00" y="382.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py) (144 samples, 32.88%)</title><rect x="371" y="100" width="387" height="15" fill="rgb(215,51,50)"/><text x="374.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (141 samples, 32.19%)</title><rect x="379" y="116" width="379" height="15" fill="rgb(229,84,14)"/><text x="382.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (141 samples, 32.19%)</title><rect x="379" y="132" width="379" height="15" fill="rgb(207,161,1)"/><text x="382.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (141 samples, 32.19%)</title><rect x="379" y="148" width="379" height="15" fill="rgb(246,7,45)"/><text x="382.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (139 samples, 31.74%)</title><rect x="384" y="164" width="374" height="15" fill="rgb(221,135,14)"/><text x="387.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (136 samples, 31.05%)</title><rect x="392" y="180" width="366" height="15" fill="rgb(207,45,37)"/><text x="395.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (128 samples, 29.22%)</title><rect x="414" y="196" width="344" height="15" fill="rgb(235,38,22)"/><text x="417.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (125 samples, 28.54%)</title><rect x="422" y="212" width="336" height="15" fill="rgb(249,168,40)"/><text x="425.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (35 samples, 7.99%)</title><rect x="664" y="228" width="94" height="15" fill="rgb(241,137,21)"/><text x="667.00" y="238.50">_run (mlpro..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (34 samples, 7.76%)</title><rect x="667" y="244" width="91" height="15" fill="rgb(252,126,30)"/><text x="670.00" y="254.50">norm_l1 (m..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 2.05%)</title><rect x="734" y="260" width="24" height="15" fill="rgb(207,55,44)"/><text x="737.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 2.05%)</title><rect x="734" y="276" width="24" height="15" fill="rgb(238,118,47)"/><text x="737.00" y="286.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="756" y="292" width="2" height="15" fill="rgb(215,220,43)"/><text x="759.00" y="302.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py) (145 samples, 33.11%)</title><rect x="371" y="68" width="390" height="15" fill="rgb(241,93,41)"/><text x="374.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py) (145 samples, 33.11%)</title><rect x="371" y="84" width="390" height="15" fill="rgb(236,89,35)"/><text x="374.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.23%)</title><rect x="758" y="100" width="3" height="15" fill="rgb(241,94,46)"/><text x="761.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.23%)</title><rect x="758" y="116" width="3" height="15" fill="rgb(222,129,11)"/><text x="761.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.23%)</title><rect x="758" y="132" width="3" height="15" fill="rgb(252,131,13)"/><text x="761.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.23%)</title><rect x="758" y="148" width="3" height="15" fill="rgb(222,42,6)"/><text x="761.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.23%)</title><rect x="758" y="164" width="3" height="15" fill="rgb(226,99,54)"/><text x="761.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.23%)</title><rect x="758" y="180" width="3" height="15" fill="rgb(251,95,32)"/><text x="761.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.23%)</title><rect x="758" y="196" width="3" height="15" fill="rgb(209,119,39)"/><text x="761.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="758" y="212" width="3" height="15" fill="rgb(235,177,43)"/><text x="761.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="758" y="228" width="3" height="15" fill="rgb(244,202,1)"/><text x="761.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="758" y="244" width="3" height="15" fill="rgb(214,113,38)"/><text x="761.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="758" y="260" width="3" height="15" fill="rgb(220,210,51)"/><text x="761.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="758" y="276" width="3" height="15" fill="rgb(234,140,23)"/><text x="761.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.23%)</title><rect x="758" y="292" width="3" height="15" fill="rgb(249,161,4)"/><text x="761.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="758" y="308" width="3" height="15" fill="rgb(218,73,0)"/><text x="761.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="758" y="324" width="3" height="15" fill="rgb(253,113,46)"/><text x="761.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="758" y="340" width="3" height="15" fill="rgb(246,223,29)"/><text x="761.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="758" y="356" width="3" height="15" fill="rgb(206,2,17)"/><text x="761.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="758" y="372" width="3" height="15" fill="rgb(239,50,36)"/><text x="761.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.23%)</title><rect x="758" y="388" width="3" height="15" fill="rgb(212,40,0)"/><text x="761.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.23%)</title><rect x="758" y="404" width="3" height="15" fill="rgb(253,69,36)"/><text x="761.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.23%)</title><rect x="758" y="420" width="3" height="15" fill="rgb(236,120,24)"/><text x="761.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.23%)</title><rect x="758" y="436" width="3" height="15" fill="rgb(238,187,49)"/><text x="761.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.23%)</title><rect x="758" y="452" width="3" height="15" fill="rgb(209,166,24)"/><text x="761.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.23%)</title><rect x="758" y="468" width="3" height="15" fill="rgb(217,19,24)"/><text x="761.00" y="478.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py) (1 samples, 0.23%)</title><rect x="758" y="484" width="3" height="15" fill="rgb(205,187,10)"/><text x="761.00" y="494.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py) (1 samples, 0.23%)</title><rect x="758" y="500" width="3" height="15" fill="rgb(218,208,35)"/><text x="761.00" y="510.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.23%)</title><rect x="780" y="308" width="3" height="15" fill="rgb(210,41,44)"/><text x="783.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.46%)</title><rect x="780" y="292" width="5" height="15" fill="rgb(241,75,29)"/><text x="783.00" y="302.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.23%)</title><rect x="783" y="308" width="2" height="15" fill="rgb(227,27,39)"/><text x="786.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (4 samples, 0.91%)</title><rect x="793" y="308" width="11" height="15" fill="rgb(205,101,47)"/><text x="796.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.23%)</title><rect x="802" y="324" width="2" height="15" fill="rgb(228,99,48)"/><text x="805.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (14 samples, 3.20%)</title><rect x="780" y="276" width="38" height="15" fill="rgb(217,155,3)"/><text x="783.00" y="286.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (12 samples, 2.74%)</title><rect x="785" y="292" width="33" height="15" fill="rgb(240,180,53)"/><text x="788.00" y="302.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (5 samples, 1.14%)</title><rect x="804" y="308" width="14" height="15" fill="rgb(243,160,32)"/><text x="807.00" y="318.50"></text></g><g><title>array_sum (methods.c) (16 samples, 3.65%)</title><rect x="777" y="180" width="43" height="15" fill="rgb(222,22,11)"/><text x="780.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (16 samples, 3.65%)</title><rect x="777" y="196" width="43" height="15" fill="rgb(249,21,2)"/><text x="780.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (15 samples, 3.42%)</title><rect x="780" y="212" width="40" height="15" fill="rgb(224,165,35)"/><text x="783.00" y="222.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (15 samples, 3.42%)</title><rect x="780" y="228" width="40" height="15" fill="rgb(218,148,13)"/><text x="783.00" y="238.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (15 samples, 3.42%)</title><rect x="780" y="244" width="40" height="15" fill="rgb(252,30,15)"/><text x="783.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (15 samples, 3.42%)</title><rect x="780" y="260" width="40" height="15" fill="rgb(215,132,29)"/><text x="783.00" y="270.50">PyU..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.23%)</title><rect x="818" y="276" width="2" height="15" fill="rgb(211,116,39)"/><text x="821.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="818" y="292" width="2" height="15" fill="rgb(245,16,12)"/><text x="821.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="818" y="308" width="2" height="15" fill="rgb(205,38,25)"/><text x="821.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 0.46%)</title><rect x="826" y="196" width="5" height="15" fill="rgb(221,169,31)"/><text x="829.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.23%)</title><rect x="828" y="212" width="3" height="15" fill="rgb(247,145,36)"/><text x="831.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="828" y="228" width="3" height="15" fill="rgb(239,184,49)"/><text x="831.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="828" y="244" width="3" height="15" fill="rgb(235,204,27)"/><text x="831.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="831" y="244" width="3" height="15" fill="rgb(252,196,32)"/><text x="834.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.23%)</title><rect x="831" y="260" width="3" height="15" fill="rgb(227,58,42)"/><text x="834.00" y="270.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (2 samples, 0.46%)</title><rect x="837" y="324" width="5" height="15" fill="rgb(236,94,39)"/><text x="840.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (4 samples, 0.91%)</title><rect x="837" y="276" width="10" height="15" fill="rgb(221,121,0)"/><text x="840.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (4 samples, 0.91%)</title><rect x="837" y="292" width="10" height="15" fill="rgb(249,10,10)"/><text x="840.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (4 samples, 0.91%)</title><rect x="837" y="308" width="10" height="15" fill="rgb(225,20,31)"/><text x="840.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.46%)</title><rect x="842" y="324" width="5" height="15" fill="rgb(248,77,39)"/><text x="845.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.23%)</title><rect x="847" y="276" width="3" height="15" fill="rgb(230,71,24)"/><text x="850.00" y="286.50"></text></g><g><title>0x7fcfce9b4d67 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="855" y="324" width="3" height="15" fill="rgb(217,142,54)"/><text x="858.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 2.51%)</title><rect x="834" y="244" width="30" height="15" fill="rgb(206,142,54)"/><text x="837.00" y="254.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (11 samples, 2.51%)</title><rect x="834" y="260" width="30" height="15" fill="rgb(223,156,7)"/><text x="837.00" y="270.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 1.14%)</title><rect x="850" y="276" width="14" height="15" fill="rgb(209,73,16)"/><text x="853.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 1.14%)</title><rect x="850" y="292" width="14" height="15" fill="rgb(214,58,19)"/><text x="853.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.91%)</title><rect x="853" y="308" width="11" height="15" fill="rgb(248,0,43)"/><text x="856.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (2 samples, 0.46%)</title><rect x="858" y="324" width="6" height="15" fill="rgb(227,67,1)"/><text x="861.00" y="334.50"></text></g><g><title>array_add (number.c) (14 samples, 3.20%)</title><rect x="831" y="196" width="38" height="15" fill="rgb(251,29,23)"/><text x="834.00" y="206.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 3.20%)</title><rect x="831" y="212" width="38" height="15" fill="rgb(214,61,7)"/><text x="834.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 3.20%)</title><rect x="831" y="228" width="38" height="15" fill="rgb(221,159,24)"/><text x="834.00" y="238.50">PyU..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.46%)</title><rect x="864" y="244" width="5" height="15" fill="rgb(234,122,2)"/><text x="867.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.23%)</title><rect x="866" y="260" width="3" height="15" fill="rgb(216,171,27)"/><text x="869.00" y="270.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.46%)</title><rect x="896" y="212" width="5" height="15" fill="rgb(245,201,18)"/><text x="899.00" y="222.50"></text></g><g><title>0x7fcfcea73100 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="907" y="228" width="2" height="15" fill="rgb(251,173,13)"/><text x="910.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.23%)</title><rect x="909" y="228" width="3" height="15" fill="rgb(241,113,15)"/><text x="912.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (5 samples, 1.14%)</title><rect x="901" y="212" width="14" height="15" fill="rgb(237,52,15)"/><text x="904.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="912" y="228" width="3" height="15" fill="rgb(245,226,44)"/><text x="915.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 1.14%)</title><rect x="915" y="212" width="13" height="15" fill="rgb(214,68,29)"/><text x="918.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.23%)</title><rect x="925" y="228" width="3" height="15" fill="rgb(213,200,43)"/><text x="928.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.23%)</title><rect x="928" y="212" width="3" height="15" fill="rgb(238,15,40)"/><text x="931.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (3 samples, 0.68%)</title><rect x="931" y="212" width="8" height="15" fill="rgb(253,39,52)"/><text x="934.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.23%)</title><rect x="936" y="228" width="3" height="15" fill="rgb(217,198,39)"/><text x="939.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (28 samples, 6.39%)</title><rect x="869" y="196" width="75" height="15" fill="rgb(238,65,16)"/><text x="872.00" y="206.50">check_ar..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.46%)</title><rect x="939" y="212" width="5" height="15" fill="rgb(213,216,20)"/><text x="942.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.46%)</title><rect x="939" y="228" width="5" height="15" fill="rgb(238,208,11)"/><text x="942.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.68%)</title><rect x="971" y="228" width="8" height="15" fill="rgb(225,216,53)"/><text x="974.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (11 samples, 2.51%)</title><rect x="952" y="212" width="30" height="15" fill="rgb(237,144,39)"/><text x="955.00" y="222.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.23%)</title><rect x="979" y="228" width="3" height="15" fill="rgb(230,218,39)"/><text x="982.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (15 samples, 3.42%)</title><rect x="944" y="196" width="41" height="15" fill="rgb(217,95,9)"/><text x="947.00" y="206.50">che..</text></g><g><title>isclass (inspect.py) (1 samples, 0.23%)</title><rect x="982" y="212" width="3" height="15" fill="rgb(236,109,13)"/><text x="985.00" y="222.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.68%)</title><rect x="987" y="212" width="9" height="15" fill="rgb(244,24,19)"/><text x="990.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.91%)</title><rect x="996" y="212" width="10" height="15" fill="rgb(250,144,36)"/><text x="999.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.23%)</title><rect x="1006" y="260" width="3" height="15" fill="rgb(231,61,48)"/><text x="1009.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="1006" y="276" width="3" height="15" fill="rgb(207,84,51)"/><text x="1009.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="1006" y="292" width="3" height="15" fill="rgb(228,91,6)"/><text x="1009.00" y="302.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.23%)</title><rect x="1012" y="324" width="2" height="15" fill="rgb(239,103,48)"/><text x="1015.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.46%)</title><rect x="1012" y="292" width="5" height="15" fill="rgb(225,71,29)"/><text x="1015.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.46%)</title><rect x="1012" y="308" width="5" height="15" fill="rgb(246,85,39)"/><text x="1015.00" y="318.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.23%)</title><rect x="1014" y="324" width="3" height="15" fill="rgb(208,35,1)"/><text x="1017.00" y="334.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.23%)</title><rect x="1014" y="340" width="3" height="15" fill="rgb(222,54,50)"/><text x="1017.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.91%)</title><rect x="1009" y="260" width="11" height="15" fill="rgb(249,145,30)"/><text x="1012.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 0.91%)</title><rect x="1009" y="276" width="11" height="15" fill="rgb(218,35,42)"/><text x="1012.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1017" y="292" width="3" height="15" fill="rgb(242,56,40)"/><text x="1020.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.23%)</title><rect x="1017" y="308" width="3" height="15" fill="rgb(206,195,13)"/><text x="1020.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="1017" y="324" width="3" height="15" fill="rgb(232,51,30)"/><text x="1020.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.23%)</title><rect x="1017" y="340" width="3" height="15" fill="rgb(231,23,22)"/><text x="1020.00" y="350.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.23%)</title><rect x="1020" y="260" width="2" height="15" fill="rgb(212,31,52)"/><text x="1023.00" y="270.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.23%)</title><rect x="1020" y="276" width="2" height="15" fill="rgb(209,140,5)"/><text x="1023.00" y="286.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (76 samples, 17.35%)</title><rect x="820" y="180" width="205" height="15" fill="rgb(212,105,19)"/><text x="823.00" y="190.50">decision_function (sklearn..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (15 samples, 3.42%)</title><rect x="985" y="196" width="40" height="15" fill="rgb(245,111,46)"/><text x="988.00" y="206.50">saf..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.60%)</title><rect x="1006" y="212" width="19" height="15" fill="rgb(229,26,7)"/><text x="1009.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.60%)</title><rect x="1006" y="228" width="19" height="15" fill="rgb(236,89,12)"/><text x="1009.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (7 samples, 1.60%)</title><rect x="1006" y="244" width="19" height="15" fill="rgb(209,108,14)"/><text x="1009.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1022" y="260" width="3" height="15" fill="rgb(222,190,37)"/><text x="1025.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.23%)</title><rect x="1025" y="196" width="3" height="15" fill="rgb(247,168,26)"/><text x="1028.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.23%)</title><rect x="1025" y="212" width="3" height="15" fill="rgb(247,151,41)"/><text x="1028.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.23%)</title><rect x="1025" y="228" width="3" height="15" fill="rgb(244,153,26)"/><text x="1028.00" y="238.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.23%)</title><rect x="1033" y="260" width="3" height="15" fill="rgb(238,26,27)"/><text x="1036.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1033" y="276" width="3" height="15" fill="rgb(238,198,5)"/><text x="1036.00" y="286.50"></text></g><g><title>0x7fcfce94c7a5 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1033" y="292" width="3" height="15" fill="rgb(225,87,34)"/><text x="1036.00" y="302.50"></text></g><g><title>0x7fcfce94ca19 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1033" y="308" width="3" height="15" fill="rgb(253,153,12)"/><text x="1036.00" y="318.50"></text></g><g><title>diophantine_sort_A (mem_overlap.c) (1 samples, 0.23%)</title><rect x="1033" y="324" width="3" height="15" fill="rgb(206,186,35)"/><text x="1036.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.46%)</title><rect x="1033" y="228" width="6" height="15" fill="rgb(253,146,34)"/><text x="1036.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.46%)</title><rect x="1033" y="244" width="6" height="15" fill="rgb(247,18,22)"/><text x="1036.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.23%)</title><rect x="1036" y="260" width="3" height="15" fill="rgb(243,165,22)"/><text x="1039.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.23%)</title><rect x="1036" y="276" width="3" height="15" fill="rgb(226,167,43)"/><text x="1039.00" y="286.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.23%)</title><rect x="1036" y="292" width="3" height="15" fill="rgb(252,21,30)"/><text x="1039.00" y="302.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.23%)</title><rect x="1036" y="308" width="3" height="15" fill="rgb(243,174,48)"/><text x="1039.00" y="318.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (3 samples, 0.68%)</title><rect x="1041" y="292" width="8" height="15" fill="rgb(248,120,16)"/><text x="1044.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (8 samples, 1.83%)</title><rect x="1039" y="244" width="21" height="15" fill="rgb(251,46,27)"/><text x="1042.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (8 samples, 1.83%)</title><rect x="1039" y="260" width="21" height="15" fill="rgb(207,134,2)"/><text x="1042.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (8 samples, 1.83%)</title><rect x="1039" y="276" width="21" height="15" fill="rgb(253,15,6)"/><text x="1042.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (4 samples, 0.91%)</title><rect x="1049" y="292" width="11" height="15" fill="rgb(241,144,7)"/><text x="1052.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1060" y="260" width="3" height="15" fill="rgb(217,66,1)"/><text x="1063.00" y="270.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.23%)</title><rect x="1060" y="276" width="3" height="15" fill="rgb(218,30,5)"/><text x="1063.00" y="286.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.23%)</title><rect x="1060" y="292" width="3" height="15" fill="rgb(227,108,53)"/><text x="1063.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.46%)</title><rect x="1060" y="244" width="6" height="15" fill="rgb(211,137,17)"/><text x="1063.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1063" y="260" width="3" height="15" fill="rgb(253,72,13)"/><text x="1066.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1063" y="276" width="3" height="15" fill="rgb(231,110,21)"/><text x="1066.00" y="286.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.23%)</title><rect x="1063" y="292" width="3" height="15" fill="rgb(226,186,41)"/><text x="1066.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.23%)</title><rect x="1068" y="260" width="3" height="15" fill="rgb(233,127,54)"/><text x="1071.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1068" y="276" width="3" height="15" fill="rgb(219,133,13)"/><text x="1071.00" y="286.50"></text></g><g><title>0x7fcfce996293 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1068" y="292" width="3" height="15" fill="rgb(252,157,41)"/><text x="1071.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (15 samples, 3.42%)</title><rect x="1039" y="228" width="40" height="15" fill="rgb(225,45,2)"/><text x="1042.00" y="238.50">ite..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 1.14%)</title><rect x="1066" y="244" width="13" height="15" fill="rgb(237,122,47)"/><text x="1069.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.68%)</title><rect x="1071" y="260" width="8" height="15" fill="rgb(224,209,30)"/><text x="1074.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.68%)</title><rect x="1071" y="276" width="8" height="15" fill="rgb(207,186,24)"/><text x="1074.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.23%)</title><rect x="1076" y="292" width="3" height="15" fill="rgb(212,7,44)"/><text x="1079.00" y="302.50"></text></g><g><title>0x7fcfb9c5bfe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="1079" y="276" width="3" height="15" fill="rgb(229,94,34)"/><text x="1082.00" y="286.50"></text></g><g><title>0x7fcfb9da79f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="1082" y="276" width="2" height="15" fill="rgb(232,146,1)"/><text x="1085.00" y="286.50"></text></g><g><title>0x7fcfceae01b0 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1093" y="292" width="2" height="15" fill="rgb(243,100,41)"/><text x="1096.00" y="302.50"></text></g><g><title>0x7fcfceb66be7 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1095" y="292" width="3" height="15" fill="rgb(248,224,21)"/><text x="1098.00" y="302.50"></text></g><g><title>0x7fcfceb66bf9 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1098" y="292" width="3" height="15" fill="rgb(210,229,38)"/><text x="1101.00" y="302.50"></text></g><g><title>0x7fcfceb66c18 (libm-2.29.so) (2 samples, 0.46%)</title><rect x="1101" y="292" width="5" height="15" fill="rgb(237,131,12)"/><text x="1104.00" y="302.50"></text></g><g><title>0x7fcfceb66c2e (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1106" y="292" width="3" height="15" fill="rgb(218,94,1)"/><text x="1109.00" y="302.50"></text></g><g><title>0x7fcfceb66c3e (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1109" y="292" width="2" height="15" fill="rgb(209,9,7)"/><text x="1112.00" y="302.50"></text></g><g><title>0x7fcfceb66c56 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1111" y="292" width="3" height="15" fill="rgb(243,154,36)"/><text x="1114.00" y="302.50"></text></g><g><title>0x7fcfb9c9e265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (14 samples, 3.20%)</title><rect x="1079" y="260" width="38" height="15" fill="rgb(232,123,12)"/><text x="1082.00" y="270.50">0x7..</text></g><g><title>exp (libm-2.29.so) (12 samples, 2.74%)</title><rect x="1084" y="276" width="33" height="15" fill="rgb(230,71,11)"/><text x="1087.00" y="286.50">ex..</text></g><g><title>0x7fcfceb66c7b (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1114" y="292" width="3" height="15" fill="rgb(219,126,42)"/><text x="1117.00" y="302.50"></text></g><g><title>0x7fcfb9c9e275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.68%)</title><rect x="1117" y="260" width="8" height="15" fill="rgb(227,20,11)"/><text x="1120.00" y="270.50"></text></g><g><title>0x7fcfb9c7d9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (31 samples, 7.08%)</title><rect x="1079" y="244" width="84" height="15" fill="rgb(232,147,39)"/><text x="1082.00" y="254.50">0x7fcfb9c..</text></g><g><title>0x7fcfb9c9e279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (14 samples, 3.20%)</title><rect x="1125" y="260" width="38" height="15" fill="rgb(227,82,37)"/><text x="1128.00" y="270.50">0x7..</text></g><g><title>0x7fcfb9c7d9e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="1163" y="244" width="2" height="15" fill="rgb(214,18,48)"/><text x="1166.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (50 samples, 11.42%)</title><rect x="1033" y="212" width="135" height="15" fill="rgb(227,127,3)"/><text x="1036.00" y="222.50">execute_legacy_uf..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (33 samples, 7.53%)</title><rect x="1079" y="228" width="89" height="15" fill="rgb(207,116,24)"/><text x="1082.00" y="238.50">trivial_tw..</text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="1165" y="244" width="3" height="15" fill="rgb(252,18,50)"/><text x="1168.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (53 samples, 12.10%)</title><rect x="1028" y="196" width="143" height="15" fill="rgb(236,218,15)"/><text x="1031.00" y="206.50">PyUFunc_GenericFun..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1168" y="212" width="3" height="15" fill="rgb(249,182,21)"/><text x="1171.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1168" y="228" width="3" height="15" fill="rgb(213,38,40)"/><text x="1171.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (150 samples, 34.25%)</title><rect x="769" y="164" width="404" height="15" fill="rgb(216,59,52)"/><text x="772.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (55 samples, 12.56%)</title><rect x="1025" y="180" width="148" height="15" fill="rgb(250,218,13)"/><text x="1028.00" y="190.50">ufunc_generic_call..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1171" y="196" width="2" height="15" fill="rgb(211,198,47)"/><text x="1174.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.46%)</title><rect x="1181" y="196" width="6" height="15" fill="rgb(227,55,13)"/><text x="1184.00" y="206.50"></text></g><g><title>all (438 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(218,95,36)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py) (438 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(235,21,13)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py) (159 samples, 36.30%)</title><rect x="761" y="68" width="429" height="15" fill="rgb(250,194,30)"/><text x="764.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_so..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py) (159 samples, 36.30%)</title><rect x="761" y="84" width="429" height="15" fill="rgb(234,223,51)"/><text x="764.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_nozipmap.py) (159 samples, 36.30%)</title><rect x="761" y="100" width="429" height="15" fill="rgb(217,54,18)"/><text x="764.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solver..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (159 samples, 36.30%)</title><rect x="761" y="116" width="429" height="15" fill="rgb(222,167,34)"/><text x="764.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (158 samples, 36.07%)</title><rect x="764" y="132" width="426" height="15" fill="rgb(224,34,24)"/><text x="767.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (158 samples, 36.07%)</title><rect x="764" y="148" width="426" height="15" fill="rgb(246,220,33)"/><text x="767.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 1.37%)</title><rect x="1173" y="164" width="17" height="15" fill="rgb(248,184,52)"/><text x="1176.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 1.14%)</title><rect x="1176" y="180" width="14" height="15" fill="rgb(251,135,41)"/><text x="1179.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.23%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(242,137,50)"/><text x="1190.00" y="206.50"></text></g></g></svg>