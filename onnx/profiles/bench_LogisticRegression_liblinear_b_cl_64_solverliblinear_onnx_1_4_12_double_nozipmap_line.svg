<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2118" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2101.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2101.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_nozipmap.py:31) (1 samples, 0.34%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(226,1,20)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_nozipmap.py:11) (1 samples, 0.34%)</title><rect x="10" y="68" width="4" height="15" fill="rgb(230,13,54)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:41) (1 samples, 0.34%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(227,21,49)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.34%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(226,188,13)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (1 samples, 0.34%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(234,130,14)"/><text x="13.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:384) (1 samples, 0.34%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(239,107,11)"/><text x="13.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py:243) (1 samples, 0.34%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(212,209,23)"/><text x="13.00" y="158.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.34%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(226,211,4)"/><text x="13.00" y="174.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.34%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(210,155,40)"/><text x="13.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.34%)</title><rect x="30" y="164" width="4" height="15" fill="rgb(209,124,26)"/><text x="33.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.34%)</title><rect x="30" y="180" width="4" height="15" fill="rgb(254,183,0)"/><text x="33.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.34%)</title><rect x="38" y="180" width="4" height="15" fill="rgb(226,2,40)"/><text x="41.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.02%)</title><rect x="62" y="196" width="12" height="15" fill="rgb(206,99,24)"/><text x="65.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (10 samples, 3.39%)</title><rect x="42" y="180" width="40" height="15" fill="rgb(207,217,9)"/><text x="45.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.68%)</title><rect x="74" y="196" width="8" height="15" fill="rgb(253,56,37)"/><text x="77.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (15 samples, 5.08%)</title><rect x="30" y="148" width="60" height="15" fill="rgb(242,7,31)"/><text x="33.00" y="158.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (14 samples, 4.75%)</title><rect x="34" y="164" width="56" height="15" fill="rgb(249,45,3)"/><text x="37.00" y="174.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.68%)</title><rect x="82" y="180" width="8" height="15" fill="rgb(212,87,11)"/><text x="85.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.34%)</title><rect x="86" y="196" width="4" height="15" fill="rgb(232,166,11)"/><text x="89.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.34%)</title><rect x="90" y="148" width="4" height="15" fill="rgb(232,4,31)"/><text x="93.00" y="158.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (2 samples, 0.68%)</title><rect x="94" y="148" width="8" height="15" fill="rgb(219,143,6)"/><text x="97.00" y="158.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.34%)</title><rect x="110" y="212" width="4" height="15" fill="rgb(230,156,54)"/><text x="113.00" y="222.50"></text></g><g><title>0x7f743d50512f (libc-2.29.so) (1 samples, 0.34%)</title><rect x="130" y="228" width="4" height="15" fill="rgb(236,101,28)"/><text x="133.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (11 samples, 3.73%)</title><rect x="106" y="180" width="44" height="15" fill="rgb(210,74,11)"/><text x="109.00" y="190.50">deci..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 3.39%)</title><rect x="110" y="196" width="40" height="15" fill="rgb(218,24,38)"/><text x="113.00" y="206.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 3.05%)</title><rect x="114" y="212" width="36" height="15" fill="rgb(222,70,13)"/><text x="117.00" y="222.50">&lt;li..</text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.36%)</title><rect x="134" y="228" width="16" height="15" fill="rgb(224,189,33)"/><text x="137.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.34%)</title><rect x="158" y="196" width="4" height="15" fill="rgb(242,109,32)"/><text x="161.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.34%)</title><rect x="162" y="196" width="4" height="15" fill="rgb(226,132,44)"/><text x="165.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.34%)</title><rect x="166" y="196" width="4" height="15" fill="rgb(225,115,51)"/><text x="169.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:477) (1 samples, 0.34%)</title><rect x="186" y="212" width="4" height="15" fill="rgb(240,2,31)"/><text x="189.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.34%)</title><rect x="190" y="212" width="4" height="15" fill="rgb(247,173,48)"/><text x="193.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.34%)</title><rect x="194" y="212" width="4" height="15" fill="rgb(238,34,8)"/><text x="197.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.34%)</title><rect x="198" y="212" width="4" height="15" fill="rgb(215,129,39)"/><text x="201.00" y="222.50"></text></g><g><title>__init__ (warnings.py:461) (2 samples, 0.68%)</title><rect x="202" y="212" width="8" height="15" fill="rgb(251,29,53)"/><text x="205.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (11 samples, 3.73%)</title><rect x="170" y="196" width="44" height="15" fill="rgb(252,6,14)"/><text x="173.00" y="206.50">chec..</text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.34%)</title><rect x="210" y="212" width="4" height="15" fill="rgb(237,127,42)"/><text x="213.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 1.02%)</title><rect x="222" y="228" width="12" height="15" fill="rgb(245,77,22)"/><text x="225.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 2.03%)</title><rect x="214" y="196" width="24" height="15" fill="rgb(254,48,34)"/><text x="217.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py:179) (6 samples, 2.03%)</title><rect x="214" y="212" width="24" height="15" fill="rgb(226,186,32)"/><text x="217.00" y="222.50">s..</text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.34%)</title><rect x="234" y="228" width="4" height="15" fill="rgb(205,50,35)"/><text x="237.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.34%)</title><rect x="238" y="196" width="4" height="15" fill="rgb(230,178,36)"/><text x="241.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:16) (1 samples, 0.34%)</title><rect x="238" y="212" width="4" height="15" fill="rgb(231,111,2)"/><text x="241.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 1.36%)</title><rect x="242" y="196" width="16" height="15" fill="rgb(251,103,33)"/><text x="245.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.34%)</title><rect x="254" y="212" width="4" height="15" fill="rgb(205,132,49)"/><text x="257.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 1.02%)</title><rect x="258" y="196" width="12" height="15" fill="rgb(246,117,39)"/><text x="261.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (2 samples, 0.68%)</title><rect x="262" y="212" width="8" height="15" fill="rgb(236,107,18)"/><text x="265.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.34%)</title><rect x="270" y="196" width="4" height="15" fill="rgb(235,78,5)"/><text x="273.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (4 samples, 1.36%)</title><rect x="274" y="212" width="16" height="15" fill="rgb(237,181,4)"/><text x="277.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (4 samples, 1.36%)</title><rect x="274" y="228" width="16" height="15" fill="rgb(226,160,32)"/><text x="277.00" y="238.50"></text></g><g><title>0x7f743d4fae93 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="286" y="244" width="4" height="15" fill="rgb(222,200,3)"/><text x="289.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.34%)</title><rect x="290" y="212" width="4" height="15" fill="rgb(205,85,38)"/><text x="293.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.34%)</title><rect x="290" y="228" width="4" height="15" fill="rgb(220,193,18)"/><text x="293.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (8 samples, 2.71%)</title><rect x="274" y="196" width="32" height="15" fill="rgb(254,94,12)"/><text x="277.00" y="206.50">ch..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (3 samples, 1.02%)</title><rect x="294" y="212" width="12" height="15" fill="rgb(233,176,25)"/><text x="297.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.68%)</title><rect x="298" y="228" width="8" height="15" fill="rgb(214,201,28)"/><text x="301.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.34%)</title><rect x="306" y="196" width="4" height="15" fill="rgb(207,2,3)"/><text x="309.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:561) (2 samples, 0.68%)</title><rect x="310" y="196" width="8" height="15" fill="rgb(228,110,49)"/><text x="313.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 1.02%)</title><rect x="322" y="228" width="12" height="15" fill="rgb(216,223,7)"/><text x="325.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:416) (1 samples, 0.34%)</title><rect x="334" y="228" width="4" height="15" fill="rgb(209,75,40)"/><text x="337.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 2.03%)</title><rect x="318" y="212" width="24" height="15" fill="rgb(242,142,2)"/><text x="321.00" y="222.50">_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="338" y="228" width="4" height="15" fill="rgb(205,192,53)"/><text x="341.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 2.37%)</title><rect x="318" y="196" width="28" height="15" fill="rgb(240,28,42)"/><text x="321.00" y="206.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.34%)</title><rect x="342" y="212" width="4" height="15" fill="rgb(243,198,5)"/><text x="345.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.34%)</title><rect x="346" y="196" width="4" height="15" fill="rgb(211,175,18)"/><text x="349.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.68%)</title><rect x="354" y="212" width="8" height="15" fill="rgb(242,107,31)"/><text x="357.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (2 samples, 0.68%)</title><rect x="362" y="212" width="8" height="15" fill="rgb(254,117,50)"/><text x="365.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.34%)</title><rect x="370" y="212" width="4" height="15" fill="rgb(249,91,11)"/><text x="373.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.34%)</title><rect x="374" y="212" width="4" height="15" fill="rgb(241,23,43)"/><text x="377.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (14 samples, 4.75%)</title><rect x="350" y="196" width="56" height="15" fill="rgb(224,193,21)"/><text x="353.00" y="206.50">check..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (7 samples, 2.37%)</title><rect x="378" y="212" width="28" height="15" fill="rgb(232,8,37)"/><text x="381.00" y="222.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (5 samples, 1.69%)</title><rect x="386" y="228" width="20" height="15" fill="rgb(253,141,28)"/><text x="389.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (3 samples, 1.02%)</title><rect x="394" y="244" width="12" height="15" fill="rgb(235,72,48)"/><text x="397.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.34%)</title><rect x="406" y="196" width="4" height="15" fill="rgb(205,33,1)"/><text x="409.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (66 samples, 22.37%)</title><rect x="150" y="180" width="264" height="15" fill="rgb(219,25,26)"/><text x="153.00" y="190.50">decision_function (sklearn/linear_m..</text></g><g><title>check_array (sklearn/utils/validation.py:580) (1 samples, 0.34%)</title><rect x="410" y="196" width="4" height="15" fill="rgb(218,203,31)"/><text x="413.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.34%)</title><rect x="422" y="228" width="4" height="15" fill="rgb(238,16,39)"/><text x="425.00" y="238.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.34%)</title><rect x="422" y="244" width="4" height="15" fill="rgb(205,174,14)"/><text x="425.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="426" y="228" width="4" height="15" fill="rgb(241,156,38)"/><text x="429.00" y="238.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c:847) (1 samples, 0.34%)</title><rect x="426" y="244" width="4" height="15" fill="rgb(242,45,0)"/><text x="429.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.34%)</title><rect x="430" y="276" width="4" height="15" fill="rgb(253,149,14)"/><text x="433.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="430" y="292" width="4" height="15" fill="rgb(238,165,17)"/><text x="433.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.34%)</title><rect x="434" y="276" width="4" height="15" fill="rgb(219,193,23)"/><text x="437.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.34%)</title><rect x="434" y="292" width="4" height="15" fill="rgb(250,27,30)"/><text x="437.00" y="302.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1077) (1 samples, 0.34%)</title><rect x="434" y="308" width="4" height="15" fill="rgb(253,80,33)"/><text x="437.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.34%)</title><rect x="438" y="276" width="4" height="15" fill="rgb(231,1,33)"/><text x="441.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1672) (1 samples, 0.34%)</title><rect x="438" y="292" width="4" height="15" fill="rgb(248,73,44)"/><text x="441.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:296) (1 samples, 0.34%)</title><rect x="442" y="276" width="4" height="15" fill="rgb(243,35,31)"/><text x="445.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2835) (1 samples, 0.34%)</title><rect x="446" y="292" width="4" height="15" fill="rgb(205,22,3)"/><text x="449.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.34%)</title><rect x="450" y="340" width="4" height="15" fill="rgb(238,129,36)"/><text x="453.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.34%)</title><rect x="450" y="356" width="4" height="15" fill="rgb(240,162,20)"/><text x="453.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (7 samples, 2.37%)</title><rect x="430" y="260" width="28" height="15" fill="rgb(216,226,46)"/><text x="433.00" y="270.50">i..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (3 samples, 1.02%)</title><rect x="446" y="276" width="12" height="15" fill="rgb(250,38,49)"/><text x="449.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.68%)</title><rect x="450" y="292" width="8" height="15" fill="rgb(240,126,53)"/><text x="453.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (2 samples, 0.68%)</title><rect x="450" y="308" width="8" height="15" fill="rgb(247,24,51)"/><text x="453.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.68%)</title><rect x="450" y="324" width="8" height="15" fill="rgb(215,57,11)"/><text x="453.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1037) (1 samples, 0.34%)</title><rect x="454" y="340" width="4" height="15" fill="rgb(233,66,30)"/><text x="457.00" y="350.50"></text></g><g><title>array_add (number.c:330) (10 samples, 3.39%)</title><rect x="422" y="196" width="40" height="15" fill="rgb(244,5,20)"/><text x="425.00" y="206.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 3.39%)</title><rect x="422" y="212" width="40" height="15" fill="rgb(241,210,2)"/><text x="425.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 2.71%)</title><rect x="430" y="228" width="32" height="15" fill="rgb(206,26,13)"/><text x="433.00" y="238.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 2.71%)</title><rect x="430" y="244" width="32" height="15" fill="rgb(226,59,24)"/><text x="433.00" y="254.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.34%)</title><rect x="458" y="260" width="4" height="15" fill="rgb(227,7,45)"/><text x="461.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:647) (1 samples, 0.34%)</title><rect x="458" y="276" width="4" height="15" fill="rgb(241,221,31)"/><text x="461.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.34%)</title><rect x="462" y="196" width="4" height="15" fill="rgb(210,116,22)"/><text x="465.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.34%)</title><rect x="462" y="212" width="4" height="15" fill="rgb(234,135,25)"/><text x="465.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.34%)</title><rect x="462" y="228" width="4" height="15" fill="rgb(225,51,0)"/><text x="465.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.34%)</title><rect x="466" y="212" width="4" height="15" fill="rgb(242,121,22)"/><text x="469.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="466" y="228" width="4" height="15" fill="rgb(240,213,17)"/><text x="469.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.34%)</title><rect x="466" y="244" width="4" height="15" fill="rgb(239,72,7)"/><text x="469.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2588) (1 samples, 0.34%)</title><rect x="470" y="244" width="4" height="15" fill="rgb(236,66,49)"/><text x="473.00" y="254.50"></text></g><g><title>0x7f743d505120 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="470" y="260" width="4" height="15" fill="rgb(231,139,36)"/><text x="473.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.34%)</title><rect x="474" y="244" width="4" height="15" fill="rgb(229,156,50)"/><text x="477.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.34%)</title><rect x="474" y="260" width="4" height="15" fill="rgb(212,2,41)"/><text x="477.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1907) (1 samples, 0.34%)</title><rect x="474" y="276" width="4" height="15" fill="rgb(251,120,45)"/><text x="477.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.34%)</title><rect x="478" y="260" width="4" height="15" fill="rgb(220,55,12)"/><text x="481.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2821) (1 samples, 0.34%)</title><rect x="482" y="276" width="4" height="15" fill="rgb(228,89,17)"/><text x="485.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (3 samples, 1.02%)</title><rect x="478" y="244" width="12" height="15" fill="rgb(219,122,45)"/><text x="481.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.68%)</title><rect x="482" y="260" width="8" height="15" fill="rgb(218,109,28)"/><text x="485.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2858) (1 samples, 0.34%)</title><rect x="486" y="276" width="4" height="15" fill="rgb(238,210,53)"/><text x="489.00" y="286.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:2012) (1 samples, 0.34%)</title><rect x="486" y="292" width="4" height="15" fill="rgb(251,222,35)"/><text x="489.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.34%)</title><rect x="490" y="244" width="4" height="15" fill="rgb(248,51,4)"/><text x="493.00" y="254.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:169) (1 samples, 0.34%)</title><rect x="490" y="260" width="4" height="15" fill="rgb(240,10,5)"/><text x="493.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:274) (1 samples, 0.34%)</title><rect x="490" y="276" width="4" height="15" fill="rgb(248,45,40)"/><text x="493.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.37%)</title><rect x="470" y="212" width="28" height="15" fill="rgb(247,125,50)"/><text x="473.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (7 samples, 2.37%)</title><rect x="470" y="228" width="28" height="15" fill="rgb(233,22,14)"/><text x="473.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3044) (1 samples, 0.34%)</title><rect x="494" y="244" width="4" height="15" fill="rgb(234,180,43)"/><text x="497.00" y="254.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (9 samples, 3.05%)</title><rect x="466" y="196" width="36" height="15" fill="rgb(208,89,20)"/><text x="469.00" y="206.50">saf..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.34%)</title><rect x="498" y="212" width="4" height="15" fill="rgb(241,224,6)"/><text x="501.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (100 samples, 33.90%)</title><rect x="106" y="164" width="400" height="15" fill="rgb(209,158,53)"/><text x="109.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py:307)</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (23 samples, 7.80%)</title><rect x="414" y="180" width="92" height="15" fill="rgb(250,165,19)"/><text x="417.00" y="190.50">decision_f..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.34%)</title><rect x="502" y="196" width="4" height="15" fill="rgb(250,190,11)"/><text x="505.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.34%)</title><rect x="502" y="212" width="4" height="15" fill="rgb(219,79,8)"/><text x="505.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.34%)</title><rect x="514" y="196" width="4" height="15" fill="rgb(222,36,24)"/><text x="517.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.34%)</title><rect x="514" y="212" width="4" height="15" fill="rgb(250,187,2)"/><text x="517.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.34%)</title><rect x="514" y="228" width="4" height="15" fill="rgb(211,109,48)"/><text x="517.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="518" y="196" width="4" height="15" fill="rgb(242,30,52)"/><text x="521.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.34%)</title><rect x="518" y="212" width="4" height="15" fill="rgb(242,215,44)"/><text x="521.00" y="222.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.34%)</title><rect x="522" y="244" width="4" height="15" fill="rgb(253,38,34)"/><text x="525.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:596) (1 samples, 0.34%)</title><rect x="522" y="260" width="4" height="15" fill="rgb(219,154,30)"/><text x="525.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.68%)</title><rect x="522" y="212" width="8" height="15" fill="rgb(241,43,53)"/><text x="525.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.68%)</title><rect x="522" y="228" width="8" height="15" fill="rgb(253,134,28)"/><text x="525.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.34%)</title><rect x="526" y="244" width="4" height="15" fill="rgb(216,0,16)"/><text x="529.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:545) (1 samples, 0.34%)</title><rect x="526" y="260" width="4" height="15" fill="rgb(230,47,12)"/><text x="529.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.69%)</title><rect x="514" y="180" width="20" height="15" fill="rgb(233,173,41)"/><text x="517.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.02%)</title><rect x="522" y="196" width="12" height="15" fill="rgb(207,174,19)"/><text x="525.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.34%)</title><rect x="530" y="212" width="4" height="15" fill="rgb(231,15,22)"/><text x="533.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.34%)</title><rect x="530" y="228" width="4" height="15" fill="rgb(215,39,42)"/><text x="533.00" y="238.50"></text></g><g><title>0x7f741f8ea9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="530" y="244" width="4" height="15" fill="rgb(242,9,12)"/><text x="533.00" y="254.50"></text></g><g><title>0x7f741f90b265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="530" y="260" width="4" height="15" fill="rgb(251,68,10)"/><text x="533.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.34%)</title><rect x="530" y="276" width="4" height="15" fill="rgb(226,98,38)"/><text x="533.00" y="286.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (8 samples, 2.71%)</title><rect x="506" y="164" width="32" height="15" fill="rgb(237,104,39)"/><text x="509.00" y="174.50">_p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.34%)</title><rect x="534" y="180" width="4" height="15" fill="rgb(206,42,25)"/><text x="537.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.34%)</title><rect x="550" y="180" width="4" height="15" fill="rgb(240,189,5)"/><text x="553.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.34%)</title><rect x="554" y="180" width="4" height="15" fill="rgb(215,178,31)"/><text x="557.00" y="190.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.34%)</title><rect x="558" y="180" width="4" height="15" fill="rgb(235,85,27)"/><text x="561.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.34%)</title><rect x="558" y="196" width="4" height="15" fill="rgb(209,124,37)"/><text x="561.00" y="206.50"></text></g><g><title>0x7f743c7063d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="558" y="212" width="4" height="15" fill="rgb(232,1,10)"/><text x="561.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.68%)</title><rect x="562" y="180" width="8" height="15" fill="rgb(244,136,27)"/><text x="565.00" y="190.50"></text></g><g><title>PyArray_Newshape (shape.c:194) (1 samples, 0.34%)</title><rect x="570" y="212" width="4" height="15" fill="rgb(210,0,8)"/><text x="573.00" y="222.50"></text></g><g><title>0x7f743c706710 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="574" y="276" width="4" height="15" fill="rgb(247,18,9)"/><text x="577.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (2 samples, 0.68%)</title><rect x="574" y="228" width="8" height="15" fill="rgb(227,39,28)"/><text x="577.00" y="238.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (2 samples, 0.68%)</title><rect x="574" y="244" width="8" height="15" fill="rgb(241,131,1)"/><text x="577.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (2 samples, 0.68%)</title><rect x="574" y="260" width="8" height="15" fill="rgb(225,68,19)"/><text x="577.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="578" y="276" width="4" height="15" fill="rgb(230,138,34)"/><text x="581.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.34%)</title><rect x="582" y="244" width="4" height="15" fill="rgb(211,27,16)"/><text x="585.00" y="254.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:160) (1 samples, 0.34%)</title><rect x="582" y="260" width="4" height="15" fill="rgb(234,45,22)"/><text x="585.00" y="270.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.34%)</title><rect x="582" y="276" width="4" height="15" fill="rgb(250,151,41)"/><text x="585.00" y="286.50"></text></g><g><title>array_reshape (methods.c:210) (5 samples, 1.69%)</title><rect x="570" y="180" width="20" height="15" fill="rgb(242,196,53)"/><text x="573.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (5 samples, 1.69%)</title><rect x="570" y="196" width="20" height="15" fill="rgb(242,189,51)"/><text x="573.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (4 samples, 1.36%)</title><rect x="574" y="212" width="16" height="15" fill="rgb(238,154,39)"/><text x="577.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (2 samples, 0.68%)</title><rect x="582" y="228" width="8" height="15" fill="rgb(225,3,44)"/><text x="585.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.34%)</title><rect x="586" y="244" width="4" height="15" fill="rgb(209,123,37)"/><text x="589.00" y="254.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.68%)</title><rect x="606" y="308" width="8" height="15" fill="rgb(207,156,2)"/><text x="609.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="610" y="324" width="4" height="15" fill="rgb(215,229,11)"/><text x="613.00" y="334.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 1.02%)</title><rect x="606" y="228" width="12" height="15" fill="rgb(221,141,14)"/><text x="609.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 1.02%)</title><rect x="606" y="244" width="12" height="15" fill="rgb(225,147,14)"/><text x="609.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 1.02%)</title><rect x="606" y="260" width="12" height="15" fill="rgb(233,41,39)"/><text x="609.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 1.02%)</title><rect x="606" y="276" width="12" height="15" fill="rgb(220,30,14)"/><text x="609.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 1.02%)</title><rect x="606" y="292" width="12" height="15" fill="rgb(222,85,35)"/><text x="609.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.34%)</title><rect x="614" y="308" width="4" height="15" fill="rgb(228,191,47)"/><text x="617.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.34%)</title><rect x="618" y="244" width="4" height="15" fill="rgb(216,68,46)"/><text x="621.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.34%)</title><rect x="622" y="260" width="4" height="15" fill="rgb(229,0,32)"/><text x="625.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.34%)</title><rect x="622" y="276" width="4" height="15" fill="rgb(244,207,39)"/><text x="625.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.34%)</title><rect x="622" y="292" width="4" height="15" fill="rgb(223,46,11)"/><text x="625.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2098) (1 samples, 0.34%)</title><rect x="622" y="308" width="4" height="15" fill="rgb(243,144,0)"/><text x="625.00" y="318.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1394) (1 samples, 0.34%)</title><rect x="622" y="324" width="4" height="15" fill="rgb(249,141,49)"/><text x="625.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.34%)</title><rect x="626" y="276" width="4" height="15" fill="rgb(252,137,45)"/><text x="629.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.34%)</title><rect x="626" y="292" width="4" height="15" fill="rgb(212,149,3)"/><text x="629.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.34%)</title><rect x="626" y="308" width="4" height="15" fill="rgb(225,157,23)"/><text x="629.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="626" y="324" width="4" height="15" fill="rgb(206,135,7)"/><text x="629.00" y="334.50"></text></g><g><title>0x7f743d49c9f1 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="626" y="340" width="4" height="15" fill="rgb(248,156,6)"/><text x="629.00" y="350.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:722) (1 samples, 0.34%)</title><rect x="630" y="340" width="4" height="15" fill="rgb(238,141,25)"/><text x="633.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.68%)</title><rect x="630" y="276" width="8" height="15" fill="rgb(223,48,38)"/><text x="633.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.68%)</title><rect x="630" y="292" width="8" height="15" fill="rgb(228,191,21)"/><text x="633.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.68%)</title><rect x="630" y="308" width="8" height="15" fill="rgb(246,17,39)"/><text x="633.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (2 samples, 0.68%)</title><rect x="630" y="324" width="8" height="15" fill="rgb(212,31,29)"/><text x="633.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.34%)</title><rect x="634" y="340" width="4" height="15" fill="rgb(220,126,23)"/><text x="637.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.34%)</title><rect x="634" y="356" width="4" height="15" fill="rgb(210,194,16)"/><text x="637.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.34%)</title><rect x="638" y="292" width="4" height="15" fill="rgb(232,181,8)"/><text x="641.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1187) (1 samples, 0.34%)</title><rect x="638" y="308" width="4" height="15" fill="rgb(208,223,5)"/><text x="641.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.68%)</title><rect x="638" y="276" width="8" height="15" fill="rgb(242,180,12)"/><text x="641.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.34%)</title><rect x="642" y="292" width="4" height="15" fill="rgb(211,97,11)"/><text x="645.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1575) (1 samples, 0.34%)</title><rect x="642" y="308" width="4" height="15" fill="rgb(213,225,35)"/><text x="645.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:562) (1 samples, 0.34%)</title><rect x="646" y="276" width="4" height="15" fill="rgb(206,81,3)"/><text x="649.00" y="286.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1039) (1 samples, 0.34%)</title><rect x="646" y="292" width="4" height="15" fill="rgb(248,144,41)"/><text x="649.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3466) (1 samples, 0.34%)</title><rect x="650" y="292" width="4" height="15" fill="rgb(236,217,45)"/><text x="653.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.34%)</title><rect x="658" y="308" width="4" height="15" fill="rgb(252,68,18)"/><text x="661.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.34%)</title><rect x="662" y="308" width="4" height="15" fill="rgb(253,37,54)"/><text x="665.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (20 samples, 6.78%)</title><rect x="590" y="180" width="80" height="15" fill="rgb(226,186,29)"/><text x="593.00" y="190.50">array_sum..</text></g><g><title>forward_ndarray_method (methods.c:108) (20 samples, 6.78%)</title><rect x="590" y="196" width="80" height="15" fill="rgb(234,134,53)"/><text x="593.00" y="206.50">forward_n..</text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 5.76%)</title><rect x="602" y="212" width="68" height="15" fill="rgb(220,99,54)"/><text x="605.00" y="222.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 4.41%)</title><rect x="618" y="228" width="52" height="15" fill="rgb(222,197,42)"/><text x="621.00" y="238.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (12 samples, 4.07%)</title><rect x="622" y="244" width="48" height="15" fill="rgb(231,15,29)"/><text x="625.00" y="254.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 3.73%)</title><rect x="626" y="260" width="44" height="15" fill="rgb(251,171,32)"/><text x="629.00" y="270.50">PyUF..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (5 samples, 1.69%)</title><rect x="650" y="276" width="20" height="15" fill="rgb(253,4,27)"/><text x="653.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (4 samples, 1.36%)</title><rect x="654" y="292" width="16" height="15" fill="rgb(237,178,36)"/><text x="657.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.34%)</title><rect x="666" y="308" width="4" height="15" fill="rgb(236,187,33)"/><text x="669.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1883) (1 samples, 0.34%)</title><rect x="666" y="324" width="4" height="15" fill="rgb(215,63,35)"/><text x="669.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.34%)</title><rect x="670" y="196" width="4" height="15" fill="rgb(229,121,7)"/><text x="673.00" y="206.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.34%)</title><rect x="670" y="212" width="4" height="15" fill="rgb(244,152,51)"/><text x="673.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.34%)</title><rect x="674" y="212" width="4" height="15" fill="rgb(205,122,43)"/><text x="677.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.34%)</title><rect x="678" y="228" width="4" height="15" fill="rgb(241,98,37)"/><text x="681.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.34%)</title><rect x="678" y="244" width="4" height="15" fill="rgb(237,226,40)"/><text x="681.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="678" y="260" width="4" height="15" fill="rgb(222,135,17)"/><text x="681.00" y="270.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1741) (1 samples, 0.34%)</title><rect x="682" y="244" width="4" height="15" fill="rgb(253,142,7)"/><text x="685.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.69%)</title><rect x="670" y="180" width="20" height="15" fill="rgb(226,3,48)"/><text x="673.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.36%)</title><rect x="674" y="196" width="16" height="15" fill="rgb(217,176,16)"/><text x="677.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.02%)</title><rect x="678" y="212" width="12" height="15" fill="rgb(247,202,8)"/><text x="681.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.68%)</title><rect x="682" y="228" width="8" height="15" fill="rgb(229,35,18)"/><text x="685.00" y="238.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:275) (1 samples, 0.34%)</title><rect x="686" y="244" width="4" height="15" fill="rgb(240,75,35)"/><text x="689.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_nozipmap.py:38) (170 samples, 57.63%)</title><rect x="14" y="52" width="680" height="15" fill="rgb(243,108,36)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_nozipm..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_nozipmap.py:37) (170 samples, 57.63%)</title><rect x="14" y="68" width="680" height="15" fill="rgb(239,210,23)"/><text x="17.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_noz..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_nozipmap.py:29) (170 samples, 57.63%)</title><rect x="14" y="84" width="680" height="15" fill="rgb(224,18,47)"/><text x="17.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_n..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_nozipmap.py:23) (170 samples, 57.63%)</title><rect x="14" y="100" width="680" height="15" fill="rgb(219,9,6)"/><text x="17.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_nozipma..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (169 samples, 57.29%)</title><rect x="18" y="116" width="676" height="15" fill="rgb(227,165,42)"/><text x="21.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (166 samples, 56.27%)</title><rect x="30" y="132" width="664" height="15" fill="rgb(229,197,11)"/><text x="33.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (148 samples, 50.17%)</title><rect x="102" y="148" width="592" height="15" fill="rgb(249,2,19)"/><text x="105.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (39 samples, 13.22%)</title><rect x="538" y="164" width="156" height="15" fill="rgb(219,28,45)"/><text x="541.00" y="174.50">_predict_proba_lr (s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.34%)</title><rect x="690" y="180" width="4" height="15" fill="rgb(246,87,1)"/><text x="693.00" y="190.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.34%)</title><rect x="690" y="196" width="4" height="15" fill="rgb(235,95,6)"/><text x="693.00" y="206.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.34%)</title><rect x="694" y="916" width="4" height="15" fill="rgb(215,173,34)"/><text x="697.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.34%)</title><rect x="694" y="932" width="4" height="15" fill="rgb(252,184,49)"/><text x="697.00" y="942.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2064) (1 samples, 0.34%)</title><rect x="698" y="916" width="4" height="15" fill="rgb(247,147,3)"/><text x="701.00" y="926.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py:2074) (1 samples, 0.34%)</title><rect x="698" y="932" width="4" height="15" fill="rgb(252,23,49)"/><text x="701.00" y="942.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.34%)</title><rect x="698" y="948" width="4" height="15" fill="rgb(218,154,26)"/><text x="701.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:2) (3 samples, 1.02%)</title><rect x="694" y="148" width="12" height="15" fill="rgb(206,191,0)"/><text x="697.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="694" y="164" width="12" height="15" fill="rgb(236,212,1)"/><text x="697.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.02%)</title><rect x="694" y="180" width="12" height="15" fill="rgb(245,137,13)"/><text x="697.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="694" y="196" width="12" height="15" fill="rgb(251,40,18)"/><text x="697.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="694" y="212" width="12" height="15" fill="rgb(221,177,41)"/><text x="697.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.02%)</title><rect x="694" y="228" width="12" height="15" fill="rgb(239,216,1)"/><text x="697.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.02%)</title><rect x="694" y="244" width="12" height="15" fill="rgb(250,15,51)"/><text x="697.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.02%)</title><rect x="694" y="260" width="12" height="15" fill="rgb(206,53,1)"/><text x="697.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="694" y="276" width="12" height="15" fill="rgb(211,210,33)"/><text x="697.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 1.02%)</title><rect x="694" y="292" width="12" height="15" fill="rgb(205,143,35)"/><text x="697.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="694" y="308" width="12" height="15" fill="rgb(251,12,50)"/><text x="697.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.02%)</title><rect x="694" y="324" width="12" height="15" fill="rgb(227,113,52)"/><text x="697.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.02%)</title><rect x="694" y="340" width="12" height="15" fill="rgb(212,49,40)"/><text x="697.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.02%)</title><rect x="694" y="356" width="12" height="15" fill="rgb(227,149,51)"/><text x="697.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="694" y="372" width="12" height="15" fill="rgb(240,4,39)"/><text x="697.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.02%)</title><rect x="694" y="388" width="12" height="15" fill="rgb(231,64,2)"/><text x="697.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="694" y="404" width="12" height="15" fill="rgb(237,46,37)"/><text x="697.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.02%)</title><rect x="694" y="420" width="12" height="15" fill="rgb(226,104,15)"/><text x="697.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.02%)</title><rect x="694" y="436" width="12" height="15" fill="rgb(239,156,24)"/><text x="697.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.02%)</title><rect x="694" y="452" width="12" height="15" fill="rgb(240,5,34)"/><text x="697.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="694" y="468" width="12" height="15" fill="rgb(215,147,31)"/><text x="697.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.02%)</title><rect x="694" y="484" width="12" height="15" fill="rgb(230,128,5)"/><text x="697.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="694" y="500" width="12" height="15" fill="rgb(248,175,4)"/><text x="697.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.02%)</title><rect x="694" y="516" width="12" height="15" fill="rgb(235,204,44)"/><text x="697.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.02%)</title><rect x="694" y="532" width="12" height="15" fill="rgb(211,41,6)"/><text x="697.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.02%)</title><rect x="694" y="548" width="12" height="15" fill="rgb(216,107,47)"/><text x="697.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="694" y="564" width="12" height="15" fill="rgb(236,110,22)"/><text x="697.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 1.02%)</title><rect x="694" y="580" width="12" height="15" fill="rgb(232,97,24)"/><text x="697.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="694" y="596" width="12" height="15" fill="rgb(218,81,50)"/><text x="697.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.02%)</title><rect x="694" y="612" width="12" height="15" fill="rgb(225,52,21)"/><text x="697.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="694" y="628" width="12" height="15" fill="rgb(228,75,44)"/><text x="697.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="694" y="644" width="12" height="15" fill="rgb(209,85,42)"/><text x="697.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.02%)</title><rect x="694" y="660" width="12" height="15" fill="rgb(219,5,15)"/><text x="697.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.02%)</title><rect x="694" y="676" width="12" height="15" fill="rgb(217,37,53)"/><text x="697.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.02%)</title><rect x="694" y="692" width="12" height="15" fill="rgb(245,197,21)"/><text x="697.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="694" y="708" width="12" height="15" fill="rgb(216,107,3)"/><text x="697.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 1.02%)</title><rect x="694" y="724" width="12" height="15" fill="rgb(211,155,43)"/><text x="697.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="694" y="740" width="12" height="15" fill="rgb(236,92,7)"/><text x="697.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.02%)</title><rect x="694" y="756" width="12" height="15" fill="rgb(229,203,49)"/><text x="697.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.02%)</title><rect x="694" y="772" width="12" height="15" fill="rgb(227,121,35)"/><text x="697.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.02%)</title><rect x="694" y="788" width="12" height="15" fill="rgb(223,60,24)"/><text x="697.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="694" y="804" width="12" height="15" fill="rgb(235,78,20)"/><text x="697.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 1.02%)</title><rect x="694" y="820" width="12" height="15" fill="rgb(247,90,20)"/><text x="697.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 1.02%)</title><rect x="694" y="836" width="12" height="15" fill="rgb(240,45,23)"/><text x="697.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 1.02%)</title><rect x="694" y="852" width="12" height="15" fill="rgb(241,44,15)"/><text x="697.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 1.02%)</title><rect x="694" y="868" width="12" height="15" fill="rgb(228,45,42)"/><text x="697.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 1.02%)</title><rect x="694" y="884" width="12" height="15" fill="rgb(238,94,11)"/><text x="697.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.02%)</title><rect x="694" y="900" width="12" height="15" fill="rgb(218,205,36)"/><text x="697.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.34%)</title><rect x="702" y="916" width="4" height="15" fill="rgb(209,101,49)"/><text x="705.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.34%)</title><rect x="702" y="932" width="4" height="15" fill="rgb(213,139,29)"/><text x="705.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2585) (1 samples, 0.34%)</title><rect x="702" y="948" width="4" height="15" fill="rgb(209,126,50)"/><text x="705.00" y="958.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.34%)</title><rect x="702" y="964" width="4" height="15" fill="rgb(222,172,47)"/><text x="705.00" y="974.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (3 samples, 1.02%)</title><rect x="706" y="820" width="12" height="15" fill="rgb(216,210,50)"/><text x="709.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.02%)</title><rect x="706" y="836" width="12" height="15" fill="rgb(252,76,0)"/><text x="709.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="706" y="852" width="12" height="15" fill="rgb(207,131,0)"/><text x="709.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="706" y="868" width="12" height="15" fill="rgb(228,61,6)"/><text x="709.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.02%)</title><rect x="706" y="884" width="12" height="15" fill="rgb(253,186,31)"/><text x="709.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.02%)</title><rect x="706" y="900" width="12" height="15" fill="rgb(221,14,35)"/><text x="709.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.02%)</title><rect x="706" y="916" width="12" height="15" fill="rgb(227,89,53)"/><text x="709.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="706" y="932" width="12" height="15" fill="rgb(243,183,45)"/><text x="709.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (3 samples, 1.02%)</title><rect x="706" y="948" width="12" height="15" fill="rgb(243,193,6)"/><text x="709.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="706" y="964" width="12" height="15" fill="rgb(214,148,44)"/><text x="709.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.02%)</title><rect x="706" y="980" width="12" height="15" fill="rgb(214,150,15)"/><text x="709.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.02%)</title><rect x="706" y="996" width="12" height="15" fill="rgb(250,199,31)"/><text x="709.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.02%)</title><rect x="706" y="1012" width="12" height="15" fill="rgb(249,127,43)"/><text x="709.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="706" y="1028" width="12" height="15" fill="rgb(210,74,36)"/><text x="709.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (3 samples, 1.02%)</title><rect x="706" y="1044" width="12" height="15" fill="rgb(221,107,27)"/><text x="709.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="706" y="1060" width="12" height="15" fill="rgb(237,63,49)"/><text x="709.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.02%)</title><rect x="706" y="1076" width="12" height="15" fill="rgb(214,122,54)"/><text x="709.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.02%)</title><rect x="706" y="1092" width="12" height="15" fill="rgb(228,146,28)"/><text x="709.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.02%)</title><rect x="706" y="1108" width="12" height="15" fill="rgb(220,16,16)"/><text x="709.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="706" y="1124" width="12" height="15" fill="rgb(233,98,6)"/><text x="709.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (3 samples, 1.02%)</title><rect x="706" y="1140" width="12" height="15" fill="rgb(223,139,46)"/><text x="709.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="706" y="1156" width="12" height="15" fill="rgb(226,189,21)"/><text x="709.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.02%)</title><rect x="706" y="1172" width="12" height="15" fill="rgb(213,59,28)"/><text x="709.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.02%)</title><rect x="706" y="1188" width="12" height="15" fill="rgb(232,193,44)"/><text x="709.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.02%)</title><rect x="706" y="1204" width="12" height="15" fill="rgb(253,208,5)"/><text x="709.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="706" y="1220" width="12" height="15" fill="rgb(217,61,27)"/><text x="709.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (3 samples, 1.02%)</title><rect x="706" y="1236" width="12" height="15" fill="rgb(208,42,25)"/><text x="709.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="706" y="1252" width="12" height="15" fill="rgb(243,123,9)"/><text x="709.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.02%)</title><rect x="706" y="1268" width="12" height="15" fill="rgb(206,195,10)"/><text x="709.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.02%)</title><rect x="706" y="1284" width="12" height="15" fill="rgb(212,140,42)"/><text x="709.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.02%)</title><rect x="706" y="1300" width="12" height="15" fill="rgb(219,27,37)"/><text x="709.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="706" y="1316" width="12" height="15" fill="rgb(251,158,16)"/><text x="709.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (3 samples, 1.02%)</title><rect x="706" y="1332" width="12" height="15" fill="rgb(221,205,52)"/><text x="709.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="706" y="1348" width="12" height="15" fill="rgb(223,222,34)"/><text x="709.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.02%)</title><rect x="706" y="1364" width="12" height="15" fill="rgb(229,6,13)"/><text x="709.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="706" y="1380" width="12" height="15" fill="rgb(210,213,36)"/><text x="709.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="706" y="1396" width="12" height="15" fill="rgb(237,152,3)"/><text x="709.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.02%)</title><rect x="706" y="1412" width="12" height="15" fill="rgb(217,110,52)"/><text x="709.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.02%)</title><rect x="706" y="1428" width="12" height="15" fill="rgb(230,164,52)"/><text x="709.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.02%)</title><rect x="706" y="1444" width="12" height="15" fill="rgb(243,80,5)"/><text x="709.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.02%)</title><rect x="706" y="1460" width="12" height="15" fill="rgb(238,45,13)"/><text x="709.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:6) (3 samples, 1.02%)</title><rect x="706" y="1476" width="12" height="15" fill="rgb(212,91,4)"/><text x="709.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.02%)</title><rect x="706" y="1492" width="12" height="15" fill="rgb(233,130,38)"/><text x="709.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.02%)</title><rect x="706" y="1508" width="12" height="15" fill="rgb(221,143,22)"/><text x="709.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.02%)</title><rect x="706" y="1524" width="12" height="15" fill="rgb(244,108,8)"/><text x="709.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (3 samples, 1.02%)</title><rect x="706" y="1540" width="12" height="15" fill="rgb(222,163,48)"/><text x="709.00" y="1550.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (3 samples, 1.02%)</title><rect x="706" y="1556" width="12" height="15" fill="rgb(207,12,8)"/><text x="709.00" y="1566.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (3 samples, 1.02%)</title><rect x="706" y="1572" width="12" height="15" fill="rgb(242,53,33)"/><text x="709.00" y="1582.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (4 samples, 1.36%)</title><rect x="706" y="532" width="16" height="15" fill="rgb(226,35,21)"/><text x="709.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.36%)</title><rect x="706" y="548" width="16" height="15" fill="rgb(209,228,41)"/><text x="709.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.36%)</title><rect x="706" y="564" width="16" height="15" fill="rgb(238,96,38)"/><text x="709.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.36%)</title><rect x="706" y="580" width="16" height="15" fill="rgb(206,175,18)"/><text x="709.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.36%)</title><rect x="706" y="596" width="16" height="15" fill="rgb(215,109,48)"/><text x="709.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.36%)</title><rect x="706" y="612" width="16" height="15" fill="rgb(226,156,52)"/><text x="709.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (4 samples, 1.36%)</title><rect x="706" y="628" width="16" height="15" fill="rgb(229,159,37)"/><text x="709.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.36%)</title><rect x="706" y="644" width="16" height="15" fill="rgb(232,164,2)"/><text x="709.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.36%)</title><rect x="706" y="660" width="16" height="15" fill="rgb(208,53,33)"/><text x="709.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.36%)</title><rect x="706" y="676" width="16" height="15" fill="rgb(217,212,26)"/><text x="709.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.36%)</title><rect x="706" y="692" width="16" height="15" fill="rgb(240,76,18)"/><text x="709.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.36%)</title><rect x="706" y="708" width="16" height="15" fill="rgb(253,226,38)"/><text x="709.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 1.36%)</title><rect x="706" y="724" width="16" height="15" fill="rgb(236,133,45)"/><text x="709.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.36%)</title><rect x="706" y="740" width="16" height="15" fill="rgb(221,76,36)"/><text x="709.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.36%)</title><rect x="706" y="756" width="16" height="15" fill="rgb(252,109,42)"/><text x="709.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.36%)</title><rect x="706" y="772" width="16" height="15" fill="rgb(219,224,9)"/><text x="709.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.36%)</title><rect x="706" y="788" width="16" height="15" fill="rgb(234,87,37)"/><text x="709.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.36%)</title><rect x="706" y="804" width="16" height="15" fill="rgb(206,150,27)"/><text x="709.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.34%)</title><rect x="718" y="820" width="4" height="15" fill="rgb(234,41,23)"/><text x="721.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="718" y="836" width="4" height="15" fill="rgb(232,1,4)"/><text x="721.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="718" y="852" width="4" height="15" fill="rgb(242,122,11)"/><text x="721.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="718" y="868" width="4" height="15" fill="rgb(245,177,6)"/><text x="721.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="718" y="884" width="4" height="15" fill="rgb(220,184,3)"/><text x="721.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="718" y="900" width="4" height="15" fill="rgb(249,112,43)"/><text x="721.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.34%)</title><rect x="718" y="916" width="4" height="15" fill="rgb(254,218,12)"/><text x="721.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="718" y="932" width="4" height="15" fill="rgb(212,152,39)"/><text x="721.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="718" y="948" width="4" height="15" fill="rgb(209,87,8)"/><text x="721.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="718" y="964" width="4" height="15" fill="rgb(213,111,15)"/><text x="721.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="718" y="980" width="4" height="15" fill="rgb(233,123,4)"/><text x="721.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="718" y="996" width="4" height="15" fill="rgb(218,2,53)"/><text x="721.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.34%)</title><rect x="718" y="1012" width="4" height="15" fill="rgb(226,118,53)"/><text x="721.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="718" y="1028" width="4" height="15" fill="rgb(254,223,40)"/><text x="721.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="718" y="1044" width="4" height="15" fill="rgb(223,117,36)"/><text x="721.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="718" y="1060" width="4" height="15" fill="rgb(224,82,1)"/><text x="721.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="718" y="1076" width="4" height="15" fill="rgb(249,169,42)"/><text x="721.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="718" y="1092" width="4" height="15" fill="rgb(207,13,48)"/><text x="721.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.34%)</title><rect x="718" y="1108" width="4" height="15" fill="rgb(233,224,29)"/><text x="721.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="718" y="1124" width="4" height="15" fill="rgb(208,16,34)"/><text x="721.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="718" y="1140" width="4" height="15" fill="rgb(226,162,18)"/><text x="721.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="718" y="1156" width="4" height="15" fill="rgb(226,187,39)"/><text x="721.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="718" y="1172" width="4" height="15" fill="rgb(249,216,43)"/><text x="721.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="718" y="1188" width="4" height="15" fill="rgb(239,197,20)"/><text x="721.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="718" y="1204" width="4" height="15" fill="rgb(239,48,50)"/><text x="721.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="718" y="1220" width="4" height="15" fill="rgb(228,7,8)"/><text x="721.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.34%)</title><rect x="718" y="1236" width="4" height="15" fill="rgb(225,177,37)"/><text x="721.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="718" y="1252" width="4" height="15" fill="rgb(241,83,1)"/><text x="721.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="718" y="1268" width="4" height="15" fill="rgb(216,168,4)"/><text x="721.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="718" y="1284" width="4" height="15" fill="rgb(249,100,2)"/><text x="721.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="718" y="1300" width="4" height="15" fill="rgb(228,3,49)"/><text x="721.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="718" y="1316" width="4" height="15" fill="rgb(239,224,23)"/><text x="721.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="718" y="1332" width="4" height="15" fill="rgb(254,121,12)"/><text x="721.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="718" y="1348" width="4" height="15" fill="rgb(218,177,24)"/><text x="721.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:325) (1 samples, 0.34%)</title><rect x="718" y="1364" width="4" height="15" fill="rgb(239,37,36)"/><text x="721.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.34%)</title><rect x="718" y="1380" width="4" height="15" fill="rgb(205,148,48)"/><text x="721.00" y="1390.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.34%)</title><rect x="718" y="1396" width="4" height="15" fill="rgb(236,82,36)"/><text x="721.00" y="1406.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.34%)</title><rect x="722" y="1348" width="4" height="15" fill="rgb(218,220,21)"/><text x="725.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.34%)</title><rect x="722" y="1364" width="4" height="15" fill="rgb(214,30,46)"/><text x="725.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.34%)</title><rect x="722" y="1380" width="4" height="15" fill="rgb(250,178,6)"/><text x="725.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.34%)</title><rect x="722" y="1396" width="4" height="15" fill="rgb(233,177,8)"/><text x="725.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.34%)</title><rect x="722" y="1412" width="4" height="15" fill="rgb(221,227,27)"/><text x="725.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:101) (1 samples, 0.34%)</title><rect x="722" y="1428" width="4" height="15" fill="rgb(250,96,29)"/><text x="725.00" y="1438.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:119) (1 samples, 0.34%)</title><rect x="726" y="1348" width="4" height="15" fill="rgb(219,178,43)"/><text x="729.00" y="1358.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/algebra/onnx_ops.py:119) (1 samples, 0.34%)</title><rect x="726" y="1364" width="4" height="15" fill="rgb(223,195,43)"/><text x="729.00" y="1374.50"></text></g><g><title>_c (skl2onnx/algebra/onnx_ops.py:113) (1 samples, 0.34%)</title><rect x="726" y="1380" width="4" height="15" fill="rgb(208,19,1)"/><text x="729.00" y="1390.50"></text></g><g><title>0x7f742d59f7d8 (?) (1 samples, 0.34%)</title><rect x="726" y="1396" width="4" height="15" fill="rgb(241,41,19)"/><text x="729.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 1.02%)</title><rect x="722" y="1316" width="12" height="15" fill="rgb(224,59,17)"/><text x="725.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 1.02%)</title><rect x="722" y="1332" width="12" height="15" fill="rgb(235,119,30)"/><text x="725.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:132) (1 samples, 0.34%)</title><rect x="730" y="1348" width="4" height="15" fill="rgb(232,83,22)"/><text x="733.00" y="1358.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.34%)</title><rect x="730" y="1364" width="4" height="15" fill="rgb(213,71,5)"/><text x="733.00" y="1374.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.34%)</title><rect x="734" y="1428" width="4" height="15" fill="rgb(219,200,19)"/><text x="737.00" y="1438.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.34%)</title><rect x="734" y="1444" width="4" height="15" fill="rgb(213,125,20)"/><text x="737.00" y="1454.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.34%)</title><rect x="734" y="1460" width="4" height="15" fill="rgb(239,35,43)"/><text x="737.00" y="1470.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.34%)</title><rect x="734" y="1476" width="4" height="15" fill="rgb(235,142,20)"/><text x="737.00" y="1486.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.34%)</title><rect x="734" y="1492" width="4" height="15" fill="rgb(235,200,31)"/><text x="737.00" y="1502.50"></text></g><g><title>parse (jinja2/parser.py:902) (1 samples, 0.34%)</title><rect x="734" y="1508" width="4" height="15" fill="rgb(246,97,51)"/><text x="737.00" y="1518.50"></text></g><g><title>set_environment (jinja2/nodes.py:223) (1 samples, 0.34%)</title><rect x="734" y="1524" width="4" height="15" fill="rgb(216,147,50)"/><text x="737.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 1.69%)</title><rect x="722" y="532" width="20" height="15" fill="rgb(242,119,50)"/><text x="725.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.69%)</title><rect x="722" y="548" width="20" height="15" fill="rgb(216,30,21)"/><text x="725.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.69%)</title><rect x="722" y="564" width="20" height="15" fill="rgb(227,174,11)"/><text x="725.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.69%)</title><rect x="722" y="580" width="20" height="15" fill="rgb(235,221,6)"/><text x="725.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.69%)</title><rect x="722" y="596" width="20" height="15" fill="rgb(241,102,53)"/><text x="725.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.69%)</title><rect x="722" y="612" width="20" height="15" fill="rgb(212,216,30)"/><text x="725.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 1.69%)</title><rect x="722" y="628" width="20" height="15" fill="rgb(242,5,35)"/><text x="725.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.69%)</title><rect x="722" y="644" width="20" height="15" fill="rgb(224,67,27)"/><text x="725.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.69%)</title><rect x="722" y="660" width="20" height="15" fill="rgb(244,111,13)"/><text x="725.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.69%)</title><rect x="722" y="676" width="20" height="15" fill="rgb(231,91,2)"/><text x="725.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.69%)</title><rect x="722" y="692" width="20" height="15" fill="rgb(224,157,37)"/><text x="725.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.69%)</title><rect x="722" y="708" width="20" height="15" fill="rgb(223,167,4)"/><text x="725.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 1.69%)</title><rect x="722" y="724" width="20" height="15" fill="rgb(231,26,28)"/><text x="725.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.69%)</title><rect x="722" y="740" width="20" height="15" fill="rgb(219,91,27)"/><text x="725.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.69%)</title><rect x="722" y="756" width="20" height="15" fill="rgb(206,227,30)"/><text x="725.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.69%)</title><rect x="722" y="772" width="20" height="15" fill="rgb(246,180,32)"/><text x="725.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.69%)</title><rect x="722" y="788" width="20" height="15" fill="rgb(220,145,41)"/><text x="725.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.69%)</title><rect x="722" y="804" width="20" height="15" fill="rgb(207,200,1)"/><text x="725.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.69%)</title><rect x="722" y="820" width="20" height="15" fill="rgb(216,110,51)"/><text x="725.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.69%)</title><rect x="722" y="836" width="20" height="15" fill="rgb(250,154,12)"/><text x="725.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.69%)</title><rect x="722" y="852" width="20" height="15" fill="rgb(240,163,52)"/><text x="725.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 1.69%)</title><rect x="722" y="868" width="20" height="15" fill="rgb(224,145,48)"/><text x="725.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.69%)</title><rect x="722" y="884" width="20" height="15" fill="rgb(233,226,43)"/><text x="725.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.69%)</title><rect x="722" y="900" width="20" height="15" fill="rgb(248,225,54)"/><text x="725.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.69%)</title><rect x="722" y="916" width="20" height="15" fill="rgb(225,132,41)"/><text x="725.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.69%)</title><rect x="722" y="932" width="20" height="15" fill="rgb(244,147,9)"/><text x="725.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.69%)</title><rect x="722" y="948" width="20" height="15" fill="rgb(246,215,38)"/><text x="725.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (5 samples, 1.69%)</title><rect x="722" y="964" width="20" height="15" fill="rgb(222,105,53)"/><text x="725.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 1.69%)</title><rect x="722" y="980" width="20" height="15" fill="rgb(239,178,49)"/><text x="725.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.69%)</title><rect x="722" y="996" width="20" height="15" fill="rgb(233,64,10)"/><text x="725.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.69%)</title><rect x="722" y="1012" width="20" height="15" fill="rgb(253,160,10)"/><text x="725.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.69%)</title><rect x="722" y="1028" width="20" height="15" fill="rgb(230,7,45)"/><text x="725.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.69%)</title><rect x="722" y="1044" width="20" height="15" fill="rgb(231,112,11)"/><text x="725.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.69%)</title><rect x="722" y="1060" width="20" height="15" fill="rgb(225,203,34)"/><text x="725.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.69%)</title><rect x="722" y="1076" width="20" height="15" fill="rgb(254,107,31)"/><text x="725.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (5 samples, 1.69%)</title><rect x="722" y="1092" width="20" height="15" fill="rgb(223,82,43)"/><text x="725.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 1.69%)</title><rect x="722" y="1108" width="20" height="15" fill="rgb(205,10,4)"/><text x="725.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.69%)</title><rect x="722" y="1124" width="20" height="15" fill="rgb(208,61,39)"/><text x="725.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.69%)</title><rect x="722" y="1140" width="20" height="15" fill="rgb(206,37,11)"/><text x="725.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.69%)</title><rect x="722" y="1156" width="20" height="15" fill="rgb(207,186,6)"/><text x="725.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.69%)</title><rect x="722" y="1172" width="20" height="15" fill="rgb(225,82,19)"/><text x="725.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.69%)</title><rect x="722" y="1188" width="20" height="15" fill="rgb(224,55,10)"/><text x="725.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.69%)</title><rect x="722" y="1204" width="20" height="15" fill="rgb(217,184,29)"/><text x="725.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (5 samples, 1.69%)</title><rect x="722" y="1220" width="20" height="15" fill="rgb(235,87,18)"/><text x="725.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.69%)</title><rect x="722" y="1236" width="20" height="15" fill="rgb(237,128,50)"/><text x="725.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.69%)</title><rect x="722" y="1252" width="20" height="15" fill="rgb(227,170,42)"/><text x="725.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.69%)</title><rect x="722" y="1268" width="20" height="15" fill="rgb(233,169,4)"/><text x="725.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.69%)</title><rect x="722" y="1284" width="20" height="15" fill="rgb(224,8,37)"/><text x="725.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.69%)</title><rect x="722" y="1300" width="20" height="15" fill="rgb(209,26,35)"/><text x="725.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (2 samples, 0.68%)</title><rect x="734" y="1316" width="8" height="15" fill="rgb(217,120,50)"/><text x="737.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="734" y="1332" width="8" height="15" fill="rgb(246,218,34)"/><text x="737.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="734" y="1348" width="8" height="15" fill="rgb(210,200,40)"/><text x="737.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="734" y="1364" width="8" height="15" fill="rgb(236,39,26)"/><text x="737.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="734" y="1380" width="8" height="15" fill="rgb(240,128,42)"/><text x="737.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="734" y="1396" width="8" height="15" fill="rgb(239,214,54)"/><text x="737.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (2 samples, 0.68%)</title><rect x="734" y="1412" width="8" height="15" fill="rgb(237,227,41)"/><text x="737.00" y="1422.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.34%)</title><rect x="738" y="1428" width="4" height="15" fill="rgb(242,61,1)"/><text x="741.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="738" y="1444" width="4" height="15" fill="rgb(249,159,15)"/><text x="741.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="738" y="1460" width="4" height="15" fill="rgb(236,73,41)"/><text x="741.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="738" y="1476" width="4" height="15" fill="rgb(226,218,10)"/><text x="741.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="738" y="1492" width="4" height="15" fill="rgb(234,98,15)"/><text x="741.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="738" y="1508" width="4" height="15" fill="rgb(209,72,1)"/><text x="741.00" y="1518.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.34%)</title><rect x="738" y="1524" width="4" height="15" fill="rgb(244,19,27)"/><text x="741.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="738" y="1540" width="4" height="15" fill="rgb(230,52,21)"/><text x="741.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="738" y="1556" width="4" height="15" fill="rgb(238,67,8)"/><text x="741.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="738" y="1572" width="4" height="15" fill="rgb(238,99,7)"/><text x="741.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="738" y="1588" width="4" height="15" fill="rgb(219,188,20)"/><text x="741.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="738" y="1604" width="4" height="15" fill="rgb(209,100,51)"/><text x="741.00" y="1614.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:15) (1 samples, 0.34%)</title><rect x="738" y="1620" width="4" height="15" fill="rgb(243,35,13)"/><text x="741.00" y="1630.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="738" y="1636" width="4" height="15" fill="rgb(225,145,50)"/><text x="741.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="738" y="1652" width="4" height="15" fill="rgb(235,20,28)"/><text x="741.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="738" y="1668" width="4" height="15" fill="rgb(240,220,23)"/><text x="741.00" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="738" y="1684" width="4" height="15" fill="rgb(239,80,6)"/><text x="741.00" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="738" y="1700" width="4" height="15" fill="rgb(221,47,26)"/><text x="741.00" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="738" y="1716" width="4" height="15" fill="rgb(220,73,49)"/><text x="741.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="738" y="1732" width="4" height="15" fill="rgb(208,176,30)"/><text x="741.00" y="1742.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py:19) (1 samples, 0.34%)</title><rect x="738" y="1748" width="4" height="15" fill="rgb(229,44,16)"/><text x="741.00" y="1758.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="738" y="1764" width="4" height="15" fill="rgb(250,42,5)"/><text x="741.00" y="1774.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="738" y="1780" width="4" height="15" fill="rgb(249,104,54)"/><text x="741.00" y="1790.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="738" y="1796" width="4" height="15" fill="rgb(242,11,4)"/><text x="741.00" y="1806.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="738" y="1812" width="4" height="15" fill="rgb(213,89,27)"/><text x="741.00" y="1822.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="738" y="1828" width="4" height="15" fill="rgb(212,73,43)"/><text x="741.00" y="1838.50"></text></g><g><title>&lt;module&gt; (jinja2/utils.py:642) (1 samples, 0.34%)</title><rect x="738" y="1844" width="4" height="15" fill="rgb(238,28,19)"/><text x="741.00" y="1854.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="738" y="1860" width="4" height="15" fill="rgb(251,10,21)"/><text x="741.00" y="1870.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="738" y="1876" width="4" height="15" fill="rgb(254,224,38)"/><text x="741.00" y="1886.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="738" y="1892" width="4" height="15" fill="rgb(226,181,36)"/><text x="741.00" y="1902.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="738" y="1908" width="4" height="15" fill="rgb(229,207,30)"/><text x="741.00" y="1918.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="738" y="1924" width="4" height="15" fill="rgb(210,181,19)"/><text x="741.00" y="1934.50"></text></g><g><title>&lt;module&gt; (markupsafe/__init__.py:321) (1 samples, 0.34%)</title><rect x="738" y="1940" width="4" height="15" fill="rgb(217,12,5)"/><text x="741.00" y="1950.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="738" y="1956" width="4" height="15" fill="rgb(229,152,17)"/><text x="741.00" y="1966.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.34%)</title><rect x="738" y="1972" width="4" height="15" fill="rgb(214,216,48)"/><text x="741.00" y="1982.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.34%)</title><rect x="738" y="1988" width="4" height="15" fill="rgb(222,228,3)"/><text x="741.00" y="1998.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.34%)</title><rect x="738" y="2004" width="4" height="15" fill="rgb(254,108,14)"/><text x="741.00" y="2014.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.34%)</title><rect x="738" y="2020" width="4" height="15" fill="rgb(230,180,18)"/><text x="741.00" y="2030.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.34%)</title><rect x="738" y="2036" width="4" height="15" fill="rgb(219,170,31)"/><text x="741.00" y="2046.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.34%)</title><rect x="738" y="2052" width="4" height="15" fill="rgb(244,182,11)"/><text x="741.00" y="2062.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:610) (1 samples, 0.34%)</title><rect x="738" y="2068" width="4" height="15" fill="rgb(251,162,30)"/><text x="741.00" y="2078.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:4) (10 samples, 3.39%)</title><rect x="706" y="148" width="40" height="15" fill="rgb(243,144,27)"/><text x="709.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.39%)</title><rect x="706" y="164" width="40" height="15" fill="rgb(251,53,10)"/><text x="709.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (10 samples, 3.39%)</title><rect x="706" y="180" width="40" height="15" fill="rgb(242,113,14)"/><text x="709.00" y="190.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.39%)</title><rect x="706" y="196" width="40" height="15" fill="rgb(238,190,27)"/><text x="709.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.39%)</title><rect x="706" y="212" width="40" height="15" fill="rgb(215,80,10)"/><text x="709.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.39%)</title><rect x="706" y="228" width="40" height="15" fill="rgb(252,165,24)"/><text x="709.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.39%)</title><rect x="706" y="244" width="40" height="15" fill="rgb(248,108,43)"/><text x="709.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.39%)</title><rect x="706" y="260" width="40" height="15" fill="rgb(254,26,49)"/><text x="709.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.39%)</title><rect x="706" y="276" width="40" height="15" fill="rgb(213,60,30)"/><text x="709.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (10 samples, 3.39%)</title><rect x="706" y="292" width="40" height="15" fill="rgb(215,22,33)"/><text x="709.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.39%)</title><rect x="706" y="308" width="40" height="15" fill="rgb(205,10,27)"/><text x="709.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (10 samples, 3.39%)</title><rect x="706" y="324" width="40" height="15" fill="rgb(218,136,5)"/><text x="709.00" y="334.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.39%)</title><rect x="706" y="340" width="40" height="15" fill="rgb(252,147,1)"/><text x="709.00" y="350.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.39%)</title><rect x="706" y="356" width="40" height="15" fill="rgb(213,159,50)"/><text x="709.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.39%)</title><rect x="706" y="372" width="40" height="15" fill="rgb(217,130,50)"/><text x="709.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.39%)</title><rect x="706" y="388" width="40" height="15" fill="rgb(215,16,39)"/><text x="709.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.39%)</title><rect x="706" y="404" width="40" height="15" fill="rgb(211,23,1)"/><text x="709.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.39%)</title><rect x="706" y="420" width="40" height="15" fill="rgb(209,7,29)"/><text x="709.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (10 samples, 3.39%)</title><rect x="706" y="436" width="40" height="15" fill="rgb(244,11,9)"/><text x="709.00" y="446.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.39%)</title><rect x="706" y="452" width="40" height="15" fill="rgb(245,195,28)"/><text x="709.00" y="462.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.39%)</title><rect x="706" y="468" width="40" height="15" fill="rgb(239,0,0)"/><text x="709.00" y="478.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.39%)</title><rect x="706" y="484" width="40" height="15" fill="rgb(225,48,10)"/><text x="709.00" y="494.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.39%)</title><rect x="706" y="500" width="40" height="15" fill="rgb(254,22,8)"/><text x="709.00" y="510.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.39%)</title><rect x="706" y="516" width="40" height="15" fill="rgb(233,115,4)"/><text x="709.00" y="526.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:20) (1 samples, 0.34%)</title><rect x="742" y="532" width="4" height="15" fill="rgb(226,106,32)"/><text x="745.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="742" y="548" width="4" height="15" fill="rgb(230,110,53)"/><text x="745.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="742" y="564" width="4" height="15" fill="rgb(233,35,37)"/><text x="745.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="742" y="580" width="4" height="15" fill="rgb(224,84,7)"/><text x="745.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="742" y="596" width="4" height="15" fill="rgb(222,222,30)"/><text x="745.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="742" y="612" width="4" height="15" fill="rgb(237,56,43)"/><text x="745.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate_problems.py:12) (1 samples, 0.34%)</title><rect x="742" y="628" width="4" height="15" fill="rgb(240,210,28)"/><text x="745.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="742" y="644" width="4" height="15" fill="rgb(242,148,7)"/><text x="745.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="742" y="660" width="4" height="15" fill="rgb(227,51,25)"/><text x="745.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="742" y="676" width="4" height="15" fill="rgb(210,65,36)"/><text x="745.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="742" y="692" width="4" height="15" fill="rgb(238,206,13)"/><text x="745.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="742" y="708" width="4" height="15" fill="rgb(231,163,1)"/><text x="745.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:24) (1 samples, 0.34%)</title><rect x="742" y="724" width="4" height="15" fill="rgb(243,166,46)"/><text x="745.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="742" y="740" width="4" height="15" fill="rgb(241,87,11)"/><text x="745.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="742" y="756" width="4" height="15" fill="rgb(218,113,42)"/><text x="745.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="742" y="772" width="4" height="15" fill="rgb(220,76,23)"/><text x="745.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="742" y="788" width="4" height="15" fill="rgb(217,87,0)"/><text x="745.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="742" y="804" width="4" height="15" fill="rgb(209,143,46)"/><text x="745.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_openml.py:18) (1 samples, 0.34%)</title><rect x="742" y="820" width="4" height="15" fill="rgb(251,27,51)"/><text x="745.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="742" y="836" width="4" height="15" fill="rgb(241,65,34)"/><text x="745.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="742" y="852" width="4" height="15" fill="rgb(220,202,23)"/><text x="745.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="742" y="868" width="4" height="15" fill="rgb(246,109,25)"/><text x="745.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="742" y="884" width="4" height="15" fill="rgb(216,68,17)"/><text x="745.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="742" y="900" width="4" height="15" fill="rgb(225,5,2)"/><text x="745.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="742" y="916" width="4" height="15" fill="rgb(209,29,10)"/><text x="745.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="742" y="932" width="4" height="15" fill="rgb(231,48,1)"/><text x="745.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/externals/_arff.py:374) (1 samples, 0.34%)</title><rect x="742" y="948" width="4" height="15" fill="rgb(237,132,8)"/><text x="745.00" y="958.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_nozipmap.py:4) (14 samples, 4.75%)</title><rect x="694" y="52" width="56" height="15" fill="rgb(205,207,50)"/><text x="697.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 4.75%)</title><rect x="694" y="68" width="56" height="15" fill="rgb(219,156,1)"/><text x="697.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 4.75%)</title><rect x="694" y="84" width="56" height="15" fill="rgb(214,191,20)"/><text x="697.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 4.75%)</title><rect x="694" y="100" width="56" height="15" fill="rgb(240,78,43)"/><text x="697.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 4.75%)</title><rect x="694" y="116" width="56" height="15" fill="rgb(236,54,42)"/><text x="697.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 4.75%)</title><rect x="694" y="132" width="56" height="15" fill="rgb(230,171,2)"/><text x="697.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:8) (1 samples, 0.34%)</title><rect x="746" y="148" width="4" height="15" fill="rgb(215,24,1)"/><text x="749.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="746" y="164" width="4" height="15" fill="rgb(237,38,22)"/><text x="749.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="746" y="180" width="4" height="15" fill="rgb(234,108,8)"/><text x="749.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="746" y="196" width="4" height="15" fill="rgb(213,182,27)"/><text x="749.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="746" y="212" width="4" height="15" fill="rgb(226,72,17)"/><text x="749.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="746" y="228" width="4" height="15" fill="rgb(238,147,32)"/><text x="749.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.34%)</title><rect x="746" y="244" width="4" height="15" fill="rgb(208,178,41)"/><text x="749.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="746" y="260" width="4" height="15" fill="rgb(227,67,21)"/><text x="749.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="746" y="276" width="4" height="15" fill="rgb(232,171,4)"/><text x="749.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="746" y="292" width="4" height="15" fill="rgb(253,176,18)"/><text x="749.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="746" y="308" width="4" height="15" fill="rgb(216,134,16)"/><text x="749.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="746" y="324" width="4" height="15" fill="rgb(229,97,34)"/><text x="749.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.34%)</title><rect x="746" y="340" width="4" height="15" fill="rgb(247,144,12)"/><text x="749.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="746" y="356" width="4" height="15" fill="rgb(235,91,38)"/><text x="749.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.34%)</title><rect x="746" y="372" width="4" height="15" fill="rgb(225,30,6)"/><text x="749.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="746" y="388" width="4" height="15" fill="rgb(239,138,35)"/><text x="749.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="746" y="404" width="4" height="15" fill="rgb(250,147,29)"/><text x="749.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="746" y="420" width="4" height="15" fill="rgb(215,25,13)"/><text x="749.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="746" y="436" width="4" height="15" fill="rgb(214,111,6)"/><text x="749.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="746" y="452" width="4" height="15" fill="rgb(220,81,28)"/><text x="749.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="746" y="468" width="4" height="15" fill="rgb(213,85,4)"/><text x="749.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:11) (1 samples, 0.34%)</title><rect x="746" y="484" width="4" height="15" fill="rgb(212,48,27)"/><text x="749.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="746" y="500" width="4" height="15" fill="rgb(215,94,40)"/><text x="749.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="746" y="516" width="4" height="15" fill="rgb(237,191,14)"/><text x="749.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="746" y="532" width="4" height="15" fill="rgb(205,83,38)"/><text x="749.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.34%)</title><rect x="746" y="548" width="4" height="15" fill="rgb(248,219,8)"/><text x="749.00" y="558.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.34%)</title><rect x="746" y="564" width="4" height="15" fill="rgb(218,176,30)"/><text x="749.00" y="574.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:953) (1 samples, 0.34%)</title><rect x="746" y="580" width="4" height="15" fill="rgb(220,125,23)"/><text x="749.00" y="590.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.34%)</title><rect x="746" y="596" width="4" height="15" fill="rgb(230,96,12)"/><text x="749.00" y="606.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.34%)</title><rect x="746" y="612" width="4" height="15" fill="rgb(245,139,41)"/><text x="749.00" y="622.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.34%)</title><rect x="750" y="116" width="4" height="15" fill="rgb(213,11,0)"/><text x="753.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.34%)</title><rect x="750" y="132" width="4" height="15" fill="rgb(228,34,26)"/><text x="753.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.34%)</title><rect x="750" y="148" width="4" height="15" fill="rgb(235,34,31)"/><text x="753.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:423) (1 samples, 0.34%)</title><rect x="782" y="164" width="4" height="15" fill="rgb(212,143,39)"/><text x="785.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (2 samples, 0.68%)</title><rect x="786" y="164" width="8" height="15" fill="rgb(244,14,5)"/><text x="789.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.34%)</title><rect x="794" y="164" width="4" height="15" fill="rgb(251,209,3)"/><text x="797.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 1.36%)</title><rect x="798" y="180" width="16" height="15" fill="rgb(214,108,21)"/><text x="801.00" y="190.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.68%)</title><rect x="842" y="388" width="8" height="15" fill="rgb(240,90,10)"/><text x="845.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (5 samples, 1.69%)</title><rect x="842" y="308" width="20" height="15" fill="rgb(206,98,14)"/><text x="845.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (5 samples, 1.69%)</title><rect x="842" y="324" width="20" height="15" fill="rgb(254,154,43)"/><text x="845.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (5 samples, 1.69%)</title><rect x="842" y="340" width="20" height="15" fill="rgb(213,225,46)"/><text x="845.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (5 samples, 1.69%)</title><rect x="842" y="356" width="20" height="15" fill="rgb(235,18,20)"/><text x="845.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (5 samples, 1.69%)</title><rect x="842" y="372" width="20" height="15" fill="rgb(251,226,13)"/><text x="845.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 1.02%)</title><rect x="850" y="388" width="12" height="15" fill="rgb(211,26,37)"/><text x="853.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.68%)</title><rect x="862" y="324" width="8" height="15" fill="rgb(237,15,45)"/><text x="865.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.34%)</title><rect x="870" y="340" width="4" height="15" fill="rgb(215,147,31)"/><text x="873.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.34%)</title><rect x="870" y="356" width="4" height="15" fill="rgb(223,195,52)"/><text x="873.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.34%)</title><rect x="870" y="372" width="4" height="15" fill="rgb(216,67,47)"/><text x="873.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2190) (1 samples, 0.34%)</title><rect x="870" y="388" width="4" height="15" fill="rgb(224,121,33)"/><text x="873.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.34%)</title><rect x="874" y="356" width="4" height="15" fill="rgb(208,96,19)"/><text x="877.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.34%)</title><rect x="874" y="372" width="4" height="15" fill="rgb(232,144,24)"/><text x="877.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:41) (1 samples, 0.34%)</title><rect x="874" y="388" width="4" height="15" fill="rgb(247,144,12)"/><text x="877.00" y="398.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:195) (1 samples, 0.34%)</title><rect x="878" y="388" width="4" height="15" fill="rgb(212,16,12)"/><text x="881.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.68%)</title><rect x="878" y="356" width="8" height="15" fill="rgb(247,73,26)"/><text x="881.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.68%)</title><rect x="878" y="372" width="8" height="15" fill="rgb(251,9,48)"/><text x="881.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.34%)</title><rect x="882" y="388" width="4" height="15" fill="rgb(219,166,32)"/><text x="885.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.34%)</title><rect x="882" y="404" width="4" height="15" fill="rgb(234,211,40)"/><text x="885.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.34%)</title><rect x="882" y="420" width="4" height="15" fill="rgb(251,72,28)"/><text x="885.00" y="430.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.34%)</title><rect x="882" y="436" width="4" height="15" fill="rgb(245,51,42)"/><text x="885.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.34%)</title><rect x="886" y="372" width="4" height="15" fill="rgb(252,148,39)"/><text x="889.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1240) (1 samples, 0.34%)</title><rect x="886" y="388" width="4" height="15" fill="rgb(229,50,37)"/><text x="889.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:289) (1 samples, 0.34%)</title><rect x="890" y="372" width="4" height="15" fill="rgb(233,214,32)"/><text x="893.00" y="382.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c:2102) (1 samples, 0.34%)</title><rect x="890" y="388" width="4" height="15" fill="rgb(243,158,12)"/><text x="893.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 1.02%)</title><rect x="886" y="356" width="12" height="15" fill="rgb(225,198,7)"/><text x="889.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.34%)</title><rect x="894" y="372" width="4" height="15" fill="rgb(211,46,37)"/><text x="897.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2543) (1 samples, 0.34%)</title><rect x="894" y="388" width="4" height="15" fill="rgb(208,98,53)"/><text x="897.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (18 samples, 6.10%)</title><rect x="830" y="260" width="72" height="15" fill="rgb(228,143,24)"/><text x="833.00" y="270.50">array_su..</text></g><g><title>forward_ndarray_method (methods.c:108) (18 samples, 6.10%)</title><rect x="830" y="276" width="72" height="15" fill="rgb(238,173,15)"/><text x="833.00" y="286.50">forward_..</text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 5.76%)</title><rect x="834" y="292" width="68" height="15" fill="rgb(205,226,0)"/><text x="837.00" y="302.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 3.39%)</title><rect x="862" y="308" width="40" height="15" fill="rgb(231,43,33)"/><text x="865.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 2.71%)</title><rect x="870" y="324" width="32" height="15" fill="rgb(218,124,31)"/><text x="873.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 2.37%)</title><rect x="874" y="340" width="28" height="15" fill="rgb(242,178,17)"/><text x="877.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.34%)</title><rect x="898" y="356" width="4" height="15" fill="rgb(223,58,43)"/><text x="901.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3491) (1 samples, 0.34%)</title><rect x="898" y="372" width="4" height="15" fill="rgb(241,36,33)"/><text x="901.00" y="382.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c:829) (1 samples, 0.34%)</title><rect x="898" y="388" width="4" height="15" fill="rgb(210,128,54)"/><text x="901.00" y="398.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.34%)</title><rect x="902" y="292" width="4" height="15" fill="rgb(205,129,50)"/><text x="905.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.68%)</title><rect x="902" y="260" width="8" height="15" fill="rgb(208,147,39)"/><text x="905.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.68%)</title><rect x="902" y="276" width="8" height="15" fill="rgb(244,20,29)"/><text x="905.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.34%)</title><rect x="906" y="292" width="4" height="15" fill="rgb(249,147,9)"/><text x="909.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.34%)</title><rect x="906" y="308" width="4" height="15" fill="rgb(234,111,41)"/><text x="909.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.34%)</title><rect x="910" y="276" width="4" height="15" fill="rgb(237,59,38)"/><text x="913.00" y="286.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.34%)</title><rect x="910" y="292" width="4" height="15" fill="rgb(223,65,51)"/><text x="913.00" y="302.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (23 samples, 7.80%)</title><rect x="826" y="244" width="92" height="15" fill="rgb(232,136,44)"/><text x="829.00" y="254.50">norm_l1 (m..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.68%)</title><rect x="910" y="260" width="8" height="15" fill="rgb(207,4,8)"/><text x="913.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.34%)</title><rect x="914" y="276" width="4" height="15" fill="rgb(253,124,19)"/><text x="917.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.34%)</title><rect x="914" y="292" width="4" height="15" fill="rgb(246,163,45)"/><text x="917.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1204) (1 samples, 0.34%)</title><rect x="914" y="308" width="4" height="15" fill="rgb(207,136,10)"/><text x="917.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.34%)</title><rect x="922" y="260" width="4" height="15" fill="rgb(224,3,41)"/><text x="925.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="922" y="276" width="4" height="15" fill="rgb(254,77,47)"/><text x="925.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.34%)</title><rect x="922" y="292" width="4" height="15" fill="rgb(215,12,12)"/><text x="925.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.34%)</title><rect x="922" y="308" width="4" height="15" fill="rgb(225,100,20)"/><text x="925.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="922" y="324" width="4" height="15" fill="rgb(229,107,3)"/><text x="925.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.34%)</title><rect x="926" y="292" width="4" height="15" fill="rgb(239,81,43)"/><text x="929.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.34%)</title><rect x="926" y="308" width="4" height="15" fill="rgb(227,105,23)"/><text x="929.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.68%)</title><rect x="926" y="276" width="8" height="15" fill="rgb(237,210,33)"/><text x="929.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.34%)</title><rect x="930" y="292" width="4" height="15" fill="rgb(213,149,30)"/><text x="933.00" y="302.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1724) (1 samples, 0.34%)</title><rect x="930" y="308" width="4" height="15" fill="rgb(252,106,30)"/><text x="933.00" y="318.50"></text></g><g><title>0x7f743c705f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="934" y="292" width="4" height="15" fill="rgb(253,185,45)"/><text x="937.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.34%)</title><rect x="938" y="324" width="4" height="15" fill="rgb(231,207,52)"/><text x="941.00" y="334.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:2023) (1 samples, 0.34%)</title><rect x="938" y="340" width="4" height="15" fill="rgb(251,92,30)"/><text x="941.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (30 samples, 10.17%)</title><rect x="826" y="196" width="120" height="15" fill="rgb(231,186,14)"/><text x="829.00" y="206.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (30 samples, 10.17%)</title><rect x="826" y="212" width="120" height="15" fill="rgb(210,157,54)"/><text x="829.00" y="222.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (30 samples, 10.17%)</title><rect x="826" y="228" width="120" height="15" fill="rgb(248,178,27)"/><text x="829.00" y="238.50">_run (mlprodic..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (7 samples, 2.37%)</title><rect x="918" y="244" width="28" height="15" fill="rgb(228,168,35)"/><text x="921.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.69%)</title><rect x="926" y="260" width="20" height="15" fill="rgb(252,5,15)"/><text x="929.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.02%)</title><rect x="934" y="276" width="12" height="15" fill="rgb(243,64,16)"/><text x="937.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.68%)</title><rect x="938" y="292" width="8" height="15" fill="rgb(225,42,6)"/><text x="941.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.68%)</title><rect x="938" y="308" width="8" height="15" fill="rgb(254,163,0)"/><text x="941.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:718) (1 samples, 0.34%)</title><rect x="942" y="324" width="4" height="15" fill="rgb(217,73,8)"/><text x="945.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.34%)</title><rect x="946" y="196" width="4" height="15" fill="rgb(237,95,41)"/><text x="949.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3210) (1 samples, 0.34%)</title><rect x="946" y="212" width="4" height="15" fill="rgb(211,145,30)"/><text x="949.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.34%)</title><rect x="978" y="276" width="4" height="15" fill="rgb(239,140,20)"/><text x="981.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (2 samples, 0.68%)</title><rect x="982" y="292" width="8" height="15" fill="rgb(230,72,54)"/><text x="985.00" y="302.50"></text></g><g><title>0x7f743d4fa757 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="986" y="308" width="4" height="15" fill="rgb(237,96,35)"/><text x="989.00" y="318.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.34%)</title><rect x="990" y="308" width="4" height="15" fill="rgb(250,62,33)"/><text x="993.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2095) (1 samples, 0.34%)</title><rect x="990" y="324" width="4" height="15" fill="rgb(240,190,43)"/><text x="993.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.34%)</title><rect x="990" y="340" width="4" height="15" fill="rgb(222,144,35)"/><text x="993.00" y="350.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (2 samples, 0.68%)</title><rect x="994" y="308" width="8" height="15" fill="rgb(247,84,25)"/><text x="997.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (2 samples, 0.68%)</title><rect x="994" y="324" width="8" height="15" fill="rgb(242,227,35)"/><text x="997.00" y="334.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:949) (1 samples, 0.34%)</title><rect x="1002" y="308" width="4" height="15" fill="rgb(205,135,54)"/><text x="1005.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.34%)</title><rect x="1002" y="324" width="4" height="15" fill="rgb(254,10,20)"/><text x="1005.00" y="334.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:578) (1 samples, 0.34%)</title><rect x="1006" y="324" width="4" height="15" fill="rgb(251,153,10)"/><text x="1009.00" y="334.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="1006" y="340" width="4" height="15" fill="rgb(221,52,36)"/><text x="1009.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (10 samples, 3.39%)</title><rect x="978" y="244" width="40" height="15" fill="rgb(242,45,28)"/><text x="981.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (10 samples, 3.39%)</title><rect x="978" y="260" width="40" height="15" fill="rgb(247,155,41)"/><text x="981.00" y="270.50">dot..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 3.05%)</title><rect x="982" y="276" width="36" height="15" fill="rgb(219,5,4)"/><text x="985.00" y="286.50">arr..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (7 samples, 2.37%)</title><rect x="990" y="292" width="28" height="15" fill="rgb(222,141,0)"/><text x="993.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 1.02%)</title><rect x="1006" y="308" width="12" height="15" fill="rgb(223,58,2)"/><text x="1009.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (2 samples, 0.68%)</title><rect x="1010" y="324" width="8" height="15" fill="rgb(253,174,22)"/><text x="1013.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (2 samples, 0.68%)</title><rect x="1010" y="340" width="8" height="15" fill="rgb(246,207,32)"/><text x="1013.00" y="350.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.68%)</title><rect x="1010" y="356" width="8" height="15" fill="rgb(227,159,1)"/><text x="1013.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (15 samples, 5.08%)</title><rect x="962" y="228" width="60" height="15" fill="rgb(252,67,6)"/><text x="965.00" y="238.50">_run (..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:8) (1 samples, 0.34%)</title><rect x="1018" y="244" width="4" height="15" fill="rgb(251,97,22)"/><text x="1021.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.68%)</title><rect x="1026" y="260" width="8" height="15" fill="rgb(237,215,40)"/><text x="1029.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.68%)</title><rect x="1026" y="276" width="8" height="15" fill="rgb(227,151,41)"/><text x="1029.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1944) (1 samples, 0.34%)</title><rect x="1030" y="292" width="4" height="15" fill="rgb(238,46,19)"/><text x="1033.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.34%)</title><rect x="1034" y="308" width="4" height="15" fill="rgb(212,208,2)"/><text x="1037.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.34%)</title><rect x="1038" y="308" width="4" height="15" fill="rgb(214,61,29)"/><text x="1041.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2786) (1 samples, 0.34%)</title><rect x="1038" y="324" width="4" height="15" fill="rgb(230,146,6)"/><text x="1041.00" y="334.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.34%)</title><rect x="1038" y="340" width="4" height="15" fill="rgb(252,16,4)"/><text x="1041.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.02%)</title><rect x="1034" y="260" width="12" height="15" fill="rgb(207,153,48)"/><text x="1037.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.02%)</title><rect x="1034" y="276" width="12" height="15" fill="rgb(222,88,41)"/><text x="1037.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 1.02%)</title><rect x="1034" y="292" width="12" height="15" fill="rgb(207,182,4)"/><text x="1037.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.34%)</title><rect x="1042" y="308" width="4" height="15" fill="rgb(239,86,37)"/><text x="1045.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.34%)</title><rect x="1042" y="324" width="4" height="15" fill="rgb(232,39,26)"/><text x="1045.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (7 samples, 2.37%)</title><rect x="1022" y="228" width="28" height="15" fill="rgb(241,131,27)"/><text x="1025.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.03%)</title><rect x="1026" y="244" width="24" height="15" fill="rgb(226,158,41)"/><text x="1029.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3286) (1 samples, 0.34%)</title><rect x="1046" y="260" width="4" height="15" fill="rgb(238,155,17)"/><text x="1049.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3147) (1 samples, 0.34%)</title><rect x="1058" y="260" width="4" height="15" fill="rgb(214,64,14)"/><text x="1061.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.34%)</title><rect x="1062" y="260" width="4" height="15" fill="rgb(242,154,6)"/><text x="1065.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.34%)</title><rect x="1062" y="276" width="4" height="15" fill="rgb(210,102,9)"/><text x="1065.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.34%)</title><rect x="1062" y="292" width="4" height="15" fill="rgb(215,132,19)"/><text x="1065.00" y="302.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1956) (1 samples, 0.34%)</title><rect x="1066" y="276" width="4" height="15" fill="rgb(226,135,30)"/><text x="1069.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.68%)</title><rect x="1066" y="260" width="8" height="15" fill="rgb(240,184,18)"/><text x="1069.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.34%)</title><rect x="1070" y="276" width="4" height="15" fill="rgb(249,5,18)"/><text x="1073.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.34%)</title><rect x="1070" y="292" width="4" height="15" fill="rgb(243,132,13)"/><text x="1073.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.34%)</title><rect x="1070" y="308" width="4" height="15" fill="rgb(251,39,26)"/><text x="1073.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.34%)</title><rect x="1070" y="324" width="4" height="15" fill="rgb(231,211,26)"/><text x="1073.00" y="334.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:462) (1 samples, 0.34%)</title><rect x="1070" y="340" width="4" height="15" fill="rgb(230,101,49)"/><text x="1073.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.34%)</title><rect x="1074" y="260" width="4" height="15" fill="rgb(247,158,50)"/><text x="1077.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1974) (1 samples, 0.34%)</title><rect x="1074" y="276" width="4" height="15" fill="rgb(206,162,52)"/><text x="1077.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.34%)</title><rect x="1078" y="260" width="4" height="15" fill="rgb(231,193,33)"/><text x="1081.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1292) (1 samples, 0.34%)</title><rect x="1078" y="276" width="4" height="15" fill="rgb(247,63,42)"/><text x="1081.00" y="286.50"></text></g><g><title>solve_diophantine (mem_overlap.c:548) (1 samples, 0.34%)</title><rect x="1082" y="324" width="4" height="15" fill="rgb(245,147,21)"/><text x="1085.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1082" y="340" width="4" height="15" fill="rgb(223,174,22)"/><text x="1085.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.68%)</title><rect x="1082" y="276" width="8" height="15" fill="rgb(220,16,33)"/><text x="1085.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.68%)</title><rect x="1082" y="292" width="8" height="15" fill="rgb(215,218,32)"/><text x="1085.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.68%)</title><rect x="1082" y="308" width="8" height="15" fill="rgb(253,199,4)"/><text x="1085.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.34%)</title><rect x="1086" y="324" width="4" height="15" fill="rgb(244,170,42)"/><text x="1089.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:435) (1 samples, 0.34%)</title><rect x="1086" y="340" width="4" height="15" fill="rgb(212,78,52)"/><text x="1089.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 3.05%)</title><rect x="1058" y="244" width="36" height="15" fill="rgb(207,13,46)"/><text x="1061.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.02%)</title><rect x="1082" y="260" width="12" height="15" fill="rgb(247,37,30)"/><text x="1085.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.34%)</title><rect x="1090" y="276" width="4" height="15" fill="rgb(213,54,17)"/><text x="1093.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.34%)</title><rect x="1090" y="292" width="4" height="15" fill="rgb(223,63,7)"/><text x="1093.00" y="302.50"></text></g><g><title>0x7f741f90b13e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="1090" y="308" width="4" height="15" fill="rgb(228,111,39)"/><text x="1093.00" y="318.50"></text></g><g><title>0x7f741f90aef7 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="1090" y="324" width="4" height="15" fill="rgb(207,121,53)"/><text x="1093.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.34%)</title><rect x="1094" y="244" width="4" height="15" fill="rgb(252,152,9)"/><text x="1097.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.34%)</title><rect x="1094" y="260" width="4" height="15" fill="rgb(217,118,52)"/><text x="1097.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (13 samples, 4.41%)</title><rect x="1050" y="228" width="52" height="15" fill="rgb(221,151,48)"/><text x="1053.00" y="238.50">_run ..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4766) (1 samples, 0.34%)</title><rect x="1098" y="244" width="4" height="15" fill="rgb(220,141,2)"/><text x="1101.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.34%)</title><rect x="1102" y="228" width="4" height="15" fill="rgb(233,179,0)"/><text x="1105.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (2 samples, 0.68%)</title><rect x="1110" y="244" width="8" height="15" fill="rgb(206,213,22)"/><text x="1113.00" y="254.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py:1088) (1 samples, 0.34%)</title><rect x="1114" y="260" width="4" height="15" fill="rgb(211,107,15)"/><text x="1117.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (1 samples, 0.34%)</title><rect x="1130" y="292" width="4" height="15" fill="rgb(232,132,1)"/><text x="1133.00" y="302.50"></text></g><g><title>PyArray_ArgMax (calculation.c:129) (1 samples, 0.34%)</title><rect x="1134" y="324" width="4" height="15" fill="rgb(228,81,19)"/><text x="1137.00" y="334.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.34%)</title><rect x="1134" y="340" width="4" height="15" fill="rgb(211,107,50)"/><text x="1137.00" y="350.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.68%)</title><rect x="1134" y="308" width="8" height="15" fill="rgb(246,169,2)"/><text x="1137.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.34%)</title><rect x="1138" y="324" width="4" height="15" fill="rgb(223,167,11)"/><text x="1141.00" y="334.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src:3097) (1 samples, 0.34%)</title><rect x="1138" y="340" width="4" height="15" fill="rgb(253,1,30)"/><text x="1141.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (49 samples, 16.61%)</title><rect x="950" y="196" width="196" height="15" fill="rgb(220,191,10)"/><text x="953.00" y="206.50">run (mlprodict/onnxrt/ops..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (47 samples, 15.93%)</title><rect x="958" y="212" width="188" height="15" fill="rgb(248,144,20)"/><text x="961.00" y="222.50">run (mlprodict/onnxrt/op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (10 samples, 3.39%)</title><rect x="1106" y="228" width="40" height="15" fill="rgb(254,153,20)"/><text x="1109.00" y="238.50">_ru..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (7 samples, 2.37%)</title><rect x="1118" y="244" width="28" height="15" fill="rgb(252,9,25)"/><text x="1121.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 2.03%)</title><rect x="1122" y="260" width="24" height="15" fill="rgb(232,143,20)"/><text x="1125.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (5 samples, 1.69%)</title><rect x="1126" y="276" width="20" height="15" fill="rgb(205,39,7)"/><text x="1129.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 1.02%)</title><rect x="1134" y="292" width="12" height="15" fill="rgb(245,82,8)"/><text x="1137.00" y="302.50"></text></g><g><title>array_argmax (methods.c:303) (1 samples, 0.34%)</title><rect x="1142" y="308" width="4" height="15" fill="rgb(216,11,23)"/><text x="1145.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (86 samples, 29.15%)</title><rect x="814" y="180" width="344" height="15" fill="rgb(226,203,48)"/><text x="817.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:1..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (3 samples, 1.02%)</title><rect x="1146" y="196" width="12" height="15" fill="rgb(242,29,25)"/><text x="1149.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.34%)</title><rect x="1158" y="180" width="4" height="15" fill="rgb(230,175,11)"/><text x="1161.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.34%)</title><rect x="1162" y="180" width="4" height="15" fill="rgb(246,51,9)"/><text x="1165.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 1.36%)</title><rect x="1166" y="180" width="16" height="15" fill="rgb(226,37,2)"/><text x="1169.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (97 samples, 32.88%)</title><rect x="798" y="164" width="388" height="15" fill="rgb(205,98,2)"/><text x="801.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.34%)</title><rect x="1182" y="180" width="4" height="15" fill="rgb(240,62,38)"/><text x="1185.00" y="190.50"></text></g><g><title>all (295 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(205,218,41)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_nozipmap.py:45) (110 samples, 37.29%)</title><rect x="750" y="52" width="440" height="15" fill="rgb(222,149,27)"/><text x="753.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverl..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_nozipmap.py:44) (110 samples, 37.29%)</title><rect x="750" y="68" width="440" height="15" fill="rgb(215,73,41)"/><text x="753.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_sol..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_nozipmap.py:29) (110 samples, 37.29%)</title><rect x="750" y="84" width="440" height="15" fill="rgb(252,147,26)"/><text x="753.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_so..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_nozipmap.py:23) (110 samples, 37.29%)</title><rect x="750" y="100" width="440" height="15" fill="rgb(226,170,14)"/><text x="753.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (109 samples, 36.95%)</title><rect x="754" y="116" width="436" height="15" fill="rgb(213,34,9)"/><text x="757.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (107 samples, 36.27%)</title><rect x="762" y="132" width="428" height="15" fill="rgb(215,11,53)"/><text x="765.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (104 samples, 35.25%)</title><rect x="774" y="148" width="416" height="15" fill="rgb(219,214,27)"/><text x="777.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.34%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(205,139,51)"/><text x="1189.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.34%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(249,91,5)"/><text x="1189.00" y="190.50"></text></g></g></svg>