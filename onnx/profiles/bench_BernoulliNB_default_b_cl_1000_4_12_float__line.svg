<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2214" onload="init(evt)" viewBox="0 0 1200 2214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2214" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2197.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2197.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:31) (1 samples, 0.19%)</title><rect x="10" y="52" width="2" height="15" fill="rgb(250,121,26)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:11) (1 samples, 0.19%)</title><rect x="10" y="68" width="2" height="15" fill="rgb(240,203,8)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:39) (1 samples, 0.19%)</title><rect x="10" y="84" width="2" height="15" fill="rgb(243,81,53)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.19%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(225,52,24)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:82) (1 samples, 0.19%)</title><rect x="10" y="116" width="2" height="15" fill="rgb(247,171,35)"/><text x="13.00" y="126.50"></text></g><g><title>_get_xdtype (mlprodict/asv_benchmark/common_asv_skl.py:75) (1 samples, 0.19%)</title><rect x="10" y="132" width="2" height="15" fill="rgb(226,61,47)"/><text x="13.00" y="142.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:985) (1 samples, 0.19%)</title><rect x="12" y="180" width="2" height="15" fill="rgb(208,168,8)"/><text x="15.00" y="190.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:473) (1 samples, 0.19%)</title><rect x="12" y="196" width="2" height="15" fill="rgb(206,82,6)"/><text x="15.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.19%)</title><rect x="12" y="212" width="2" height="15" fill="rgb(249,40,7)"/><text x="15.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.19%)</title><rect x="12" y="228" width="2" height="15" fill="rgb(243,23,43)"/><text x="15.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="12" y="244" width="2" height="15" fill="rgb(253,0,44)"/><text x="15.00" y="254.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:94) (2 samples, 0.37%)</title><rect x="12" y="164" width="4" height="15" fill="rgb(211,96,19)"/><text x="15.00" y="174.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:987) (1 samples, 0.19%)</title><rect x="14" y="180" width="2" height="15" fill="rgb(238,124,14)"/><text x="17.00" y="190.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1863) (1 samples, 0.19%)</title><rect x="14" y="196" width="2" height="15" fill="rgb(228,131,2)"/><text x="17.00" y="206.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.19%)</title><rect x="18" y="196" width="3" height="15" fill="rgb(254,167,1)"/><text x="21.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.19%)</title><rect x="18" y="212" width="3" height="15" fill="rgb(237,196,25)"/><text x="21.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.19%)</title><rect x="18" y="228" width="3" height="15" fill="rgb(247,9,38)"/><text x="21.00" y="238.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:95) (3 samples, 0.56%)</title><rect x="16" y="164" width="7" height="15" fill="rgb(209,212,32)"/><text x="19.00" y="174.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1021) (2 samples, 0.37%)</title><rect x="18" y="180" width="5" height="15" fill="rgb(209,205,20)"/><text x="21.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="21" y="196" width="2" height="15" fill="rgb(245,187,22)"/><text x="24.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="21" y="212" width="2" height="15" fill="rgb(221,161,54)"/><text x="24.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="21" y="228" width="2" height="15" fill="rgb(249,46,29)"/><text x="24.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="21" y="244" width="2" height="15" fill="rgb(210,147,42)"/><text x="24.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="21" y="260" width="2" height="15" fill="rgb(246,75,47)"/><text x="24.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.19%)</title><rect x="21" y="276" width="2" height="15" fill="rgb(249,131,22)"/><text x="24.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.19%)</title><rect x="21" y="292" width="2" height="15" fill="rgb(234,12,26)"/><text x="24.00" y="302.50"></text></g><g><title>0x7faf234afd6a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="21" y="308" width="2" height="15" fill="rgb(241,5,47)"/><text x="24.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.19%)</title><rect x="23" y="324" width="2" height="15" fill="rgb(250,61,23)"/><text x="26.00" y="334.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:116) (2 samples, 0.37%)</title><rect x="23" y="180" width="4" height="15" fill="rgb(235,81,48)"/><text x="26.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (2 samples, 0.37%)</title><rect x="23" y="196" width="4" height="15" fill="rgb(251,116,44)"/><text x="26.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.37%)</title><rect x="23" y="212" width="4" height="15" fill="rgb(249,223,20)"/><text x="26.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (2 samples, 0.37%)</title><rect x="23" y="228" width="4" height="15" fill="rgb(223,223,50)"/><text x="26.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (2 samples, 0.37%)</title><rect x="23" y="244" width="4" height="15" fill="rgb(250,164,25)"/><text x="26.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.37%)</title><rect x="23" y="260" width="4" height="15" fill="rgb(222,196,22)"/><text x="26.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.37%)</title><rect x="23" y="276" width="4" height="15" fill="rgb(252,199,16)"/><text x="26.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.37%)</title><rect x="23" y="292" width="4" height="15" fill="rgb(223,184,43)"/><text x="26.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.37%)</title><rect x="23" y="308" width="4" height="15" fill="rgb(240,156,34)"/><text x="26.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.19%)</title><rect x="25" y="324" width="2" height="15" fill="rgb(232,135,32)"/><text x="28.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.19%)</title><rect x="25" y="340" width="2" height="15" fill="rgb(248,203,41)"/><text x="28.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.19%)</title><rect x="25" y="356" width="2" height="15" fill="rgb(245,175,31)"/><text x="28.00" y="366.50"></text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:18) (8 samples, 1.49%)</title><rect x="12" y="100" width="17" height="15" fill="rgb(247,97,50)"/><text x="15.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (8 samples, 1.49%)</title><rect x="12" y="116" width="17" height="15" fill="rgb(207,128,25)"/><text x="15.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (8 samples, 1.49%)</title><rect x="12" y="132" width="17" height="15" fill="rgb(234,179,46)"/><text x="15.00" y="142.50"></text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (8 samples, 1.49%)</title><rect x="12" y="148" width="17" height="15" fill="rgb(206,77,42)"/><text x="15.00" y="158.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:97) (3 samples, 0.56%)</title><rect x="23" y="164" width="6" height="15" fill="rgb(250,76,29)"/><text x="26.00" y="174.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:120) (1 samples, 0.19%)</title><rect x="27" y="180" width="2" height="15" fill="rgb(220,183,17)"/><text x="30.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="27" y="196" width="2" height="15" fill="rgb(250,147,30)"/><text x="30.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="27" y="212" width="2" height="15" fill="rgb(207,9,11)"/><text x="30.00" y="222.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1957) (1 samples, 0.19%)</title><rect x="27" y="228" width="2" height="15" fill="rgb(224,158,40)"/><text x="30.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="29" y="164" width="3" height="15" fill="rgb(238,125,1)"/><text x="32.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="29" y="180" width="3" height="15" fill="rgb(251,80,28)"/><text x="32.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="29" y="196" width="3" height="15" fill="rgb(231,58,25)"/><text x="32.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.19%)</title><rect x="32" y="164" width="2" height="15" fill="rgb(205,91,17)"/><text x="35.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.19%)</title><rect x="32" y="180" width="2" height="15" fill="rgb(245,60,23)"/><text x="35.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.19%)</title><rect x="32" y="196" width="2" height="15" fill="rgb(220,22,47)"/><text x="35.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.19%)</title><rect x="32" y="212" width="2" height="15" fill="rgb(234,150,5)"/><text x="35.00" y="222.50"></text></g><g><title>0x7faf2348fb16 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="32" y="228" width="2" height="15" fill="rgb(213,48,50)"/><text x="35.00" y="238.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:93) (1 samples, 0.19%)</title><rect x="34" y="164" width="2" height="15" fill="rgb(225,159,15)"/><text x="37.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.19%)</title><rect x="34" y="180" width="2" height="15" fill="rgb(224,58,9)"/><text x="37.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.37%)</title><rect x="38" y="212" width="5" height="15" fill="rgb(244,226,38)"/><text x="41.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.19%)</title><rect x="40" y="228" width="3" height="15" fill="rgb(224,129,20)"/><text x="43.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.19%)</title><rect x="43" y="212" width="2" height="15" fill="rgb(244,222,5)"/><text x="46.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.19%)</title><rect x="43" y="228" width="2" height="15" fill="rgb(218,179,21)"/><text x="46.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.19%)</title><rect x="43" y="244" width="2" height="15" fill="rgb(205,81,45)"/><text x="46.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.19%)</title><rect x="45" y="212" width="2" height="15" fill="rgb(238,39,17)"/><text x="48.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.19%)</title><rect x="45" y="228" width="2" height="15" fill="rgb(234,141,35)"/><text x="48.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="47" y="244" width="2" height="15" fill="rgb(248,44,27)"/><text x="50.00" y="254.50"></text></g><g><title>0x7faf234a5e7a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="47" y="260" width="2" height="15" fill="rgb(219,56,1)"/><text x="50.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.37%)</title><rect x="47" y="212" width="4" height="15" fill="rgb(214,96,12)"/><text x="50.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.37%)</title><rect x="47" y="228" width="4" height="15" fill="rgb(218,39,42)"/><text x="50.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.19%)</title><rect x="49" y="244" width="2" height="15" fill="rgb(243,126,29)"/><text x="52.00" y="254.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:985) (8 samples, 1.49%)</title><rect x="36" y="180" width="18" height="15" fill="rgb(233,135,2)"/><text x="39.00" y="190.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:473) (7 samples, 1.31%)</title><rect x="38" y="196" width="16" height="15" fill="rgb(250,104,4)"/><text x="41.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.19%)</title><rect x="51" y="212" width="3" height="15" fill="rgb(251,194,12)"/><text x="54.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.19%)</title><rect x="51" y="228" width="3" height="15" fill="rgb(229,3,41)"/><text x="54.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.19%)</title><rect x="51" y="244" width="3" height="15" fill="rgb(234,33,7)"/><text x="54.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.19%)</title><rect x="54" y="212" width="2" height="15" fill="rgb(226,214,20)"/><text x="57.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.19%)</title><rect x="56" y="212" width="2" height="15" fill="rgb(236,20,34)"/><text x="59.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.19%)</title><rect x="56" y="228" width="2" height="15" fill="rgb(211,112,27)"/><text x="59.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.37%)</title><rect x="58" y="212" width="4" height="15" fill="rgb(214,69,26)"/><text x="61.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.37%)</title><rect x="58" y="228" width="4" height="15" fill="rgb(243,5,23)"/><text x="61.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.19%)</title><rect x="62" y="212" width="3" height="15" fill="rgb(208,173,46)"/><text x="65.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.19%)</title><rect x="65" y="228" width="2" height="15" fill="rgb(228,207,49)"/><text x="68.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.56%)</title><rect x="65" y="212" width="6" height="15" fill="rgb(211,217,17)"/><text x="68.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.37%)</title><rect x="67" y="228" width="4" height="15" fill="rgb(243,60,44)"/><text x="70.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.19%)</title><rect x="69" y="244" width="2" height="15" fill="rgb(226,184,44)"/><text x="72.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.19%)</title><rect x="69" y="260" width="2" height="15" fill="rgb(238,198,48)"/><text x="72.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.19%)</title><rect x="73" y="228" width="3" height="15" fill="rgb(209,192,4)"/><text x="76.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="73" y="244" width="3" height="15" fill="rgb(218,41,50)"/><text x="76.00" y="254.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1862) (11 samples, 2.05%)</title><rect x="54" y="196" width="24" height="15" fill="rgb(234,26,22)"/><text x="57.00" y="206.50">b..</text></g><g><title>check_array (sklearn/utils/validation.py:586) (3 samples, 0.56%)</title><rect x="71" y="212" width="7" height="15" fill="rgb(225,51,31)"/><text x="74.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1691) (1 samples, 0.19%)</title><rect x="76" y="228" width="2" height="15" fill="rgb(247,153,53)"/><text x="79.00" y="238.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (1 samples, 0.19%)</title><rect x="76" y="244" width="2" height="15" fill="rgb(219,221,18)"/><text x="79.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.19%)</title><rect x="76" y="260" width="2" height="15" fill="rgb(218,1,23)"/><text x="79.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.19%)</title><rect x="76" y="276" width="2" height="15" fill="rgb(236,136,23)"/><text x="79.00" y="286.50"></text></g><g><title>0x7faf234afd94 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="76" y="292" width="2" height="15" fill="rgb(253,77,4)"/><text x="79.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="78" y="228" width="2" height="15" fill="rgb(250,165,17)"/><text x="81.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.19%)</title><rect x="78" y="244" width="2" height="15" fill="rgb(206,169,13)"/><text x="81.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.19%)</title><rect x="78" y="260" width="2" height="15" fill="rgb(254,7,38)"/><text x="81.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.19%)</title><rect x="78" y="276" width="2" height="15" fill="rgb(211,73,6)"/><text x="81.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="78" y="292" width="2" height="15" fill="rgb(206,53,19)"/><text x="81.00" y="302.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1873) (2 samples, 0.37%)</title><rect x="78" y="196" width="4" height="15" fill="rgb(247,21,31)"/><text x="81.00" y="206.50"></text></g><g><title>array_richcompare (arrayobject.c:1504) (2 samples, 0.37%)</title><rect x="78" y="212" width="4" height="15" fill="rgb(208,136,40)"/><text x="81.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.19%)</title><rect x="80" y="228" width="2" height="15" fill="rgb(226,27,50)"/><text x="83.00" y="238.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.19%)</title><rect x="80" y="244" width="2" height="15" fill="rgb(241,136,41)"/><text x="83.00" y="254.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1875) (1 samples, 0.19%)</title><rect x="82" y="196" width="2" height="15" fill="rgb(206,162,49)"/><text x="85.00" y="206.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.19%)</title><rect x="82" y="212" width="2" height="15" fill="rgb(218,136,5)"/><text x="85.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1287) (1 samples, 0.19%)</title><rect x="82" y="228" width="2" height="15" fill="rgb(206,92,24)"/><text x="85.00" y="238.50"></text></g><g><title>npy_memchr (common.h:262) (1 samples, 0.19%)</title><rect x="82" y="244" width="2" height="15" fill="rgb(254,64,46)"/><text x="85.00" y="254.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:94) (23 samples, 4.29%)</title><rect x="36" y="164" width="51" height="15" fill="rgb(205,156,35)"/><text x="39.00" y="174.50">predi..</text></g><g><title>_check_X (sklearn/naive_bayes.py:987) (15 samples, 2.80%)</title><rect x="54" y="180" width="33" height="15" fill="rgb(224,184,19)"/><text x="57.00" y="190.50">_c..</text></g><g><title>binarize (sklearn/preprocessing/_data.py:1876) (1 samples, 0.19%)</title><rect x="84" y="196" width="3" height="15" fill="rgb(219,142,45)"/><text x="87.00" y="206.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.19%)</title><rect x="84" y="212" width="3" height="15" fill="rgb(236,87,34)"/><text x="87.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1291) (1 samples, 0.19%)</title><rect x="84" y="228" width="3" height="15" fill="rgb(210,197,32)"/><text x="87.00" y="238.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.19%)</title><rect x="84" y="244" width="3" height="15" fill="rgb(216,35,51)"/><text x="87.00" y="254.50"></text></g><g><title>0x7faf226b0b00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="89" y="276" width="2" height="15" fill="rgb(222,67,25)"/><text x="92.00" y="286.50"></text></g><g><title>0x7faf23661dd0 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="91" y="276" width="2" height="15" fill="rgb(245,147,46)"/><text x="94.00" y="286.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1018) (3 samples, 0.56%)</title><rect x="89" y="180" width="6" height="15" fill="rgb(232,57,50)"/><text x="92.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="89" y="196" width="6" height="15" fill="rgb(225,88,36)"/><text x="92.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="89" y="212" width="6" height="15" fill="rgb(228,76,43)"/><text x="92.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (3 samples, 0.56%)</title><rect x="89" y="228" width="6" height="15" fill="rgb(249,11,46)"/><text x="92.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (3 samples, 0.56%)</title><rect x="89" y="244" width="6" height="15" fill="rgb(222,83,25)"/><text x="92.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (3 samples, 0.56%)</title><rect x="89" y="260" width="6" height="15" fill="rgb(208,205,38)"/><text x="92.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.19%)</title><rect x="93" y="276" width="2" height="15" fill="rgb(215,145,46)"/><text x="96.00" y="286.50"></text></g><g><title>0x7faf23661bcb (libm-2.29.so) (1 samples, 0.19%)</title><rect x="93" y="292" width="2" height="15" fill="rgb(205,163,50)"/><text x="96.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.19%)</title><rect x="95" y="196" width="3" height="15" fill="rgb(253,201,38)"/><text x="98.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.19%)</title><rect x="95" y="212" width="3" height="15" fill="rgb(248,55,10)"/><text x="98.00" y="222.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.19%)</title><rect x="95" y="228" width="3" height="15" fill="rgb(219,62,20)"/><text x="98.00" y="238.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.19%)</title><rect x="95" y="244" width="3" height="15" fill="rgb(222,168,35)"/><text x="98.00" y="254.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="100" y="212" width="2" height="15" fill="rgb(210,131,31)"/><text x="103.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.93%)</title><rect x="102" y="212" width="11" height="15" fill="rgb(242,23,51)"/><text x="105.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="113" y="260" width="2" height="15" fill="rgb(226,54,11)"/><text x="116.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1524) (1 samples, 0.19%)</title><rect x="113" y="276" width="2" height="15" fill="rgb(236,109,48)"/><text x="116.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.19%)</title><rect x="115" y="308" width="2" height="15" fill="rgb(220,174,1)"/><text x="118.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.19%)</title><rect x="115" y="324" width="2" height="15" fill="rgb(247,114,3)"/><text x="118.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (3 samples, 0.56%)</title><rect x="113" y="244" width="7" height="15" fill="rgb(211,158,4)"/><text x="116.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.37%)</title><rect x="115" y="260" width="5" height="15" fill="rgb(238,93,37)"/><text x="118.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (2 samples, 0.37%)</title><rect x="115" y="276" width="5" height="15" fill="rgb(226,9,48)"/><text x="118.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.37%)</title><rect x="115" y="292" width="5" height="15" fill="rgb(245,202,34)"/><text x="118.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.19%)</title><rect x="117" y="308" width="3" height="15" fill="rgb(210,108,2)"/><text x="120.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:38) (1 samples, 0.19%)</title><rect x="117" y="324" width="3" height="15" fill="rgb(220,167,2)"/><text x="120.00" y="334.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.19%)</title><rect x="117" y="340" width="3" height="15" fill="rgb(232,127,30)"/><text x="120.00" y="350.50"></text></g><g><title>dgemm_incopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="120" y="308" width="2" height="15" fill="rgb(237,23,10)"/><text x="123.00" y="318.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1020) (13 samples, 2.43%)</title><rect x="95" y="180" width="29" height="15" fill="rgb(228,126,31)"/><text x="98.00" y="190.50">_j..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (12 samples, 2.24%)</title><rect x="98" y="196" width="26" height="15" fill="rgb(209,225,18)"/><text x="101.00" y="206.50">s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.93%)</title><rect x="113" y="212" width="11" height="15" fill="rgb(245,182,34)"/><text x="116.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (5 samples, 0.93%)</title><rect x="113" y="228" width="11" height="15" fill="rgb(205,0,47)"/><text x="116.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (2 samples, 0.37%)</title><rect x="120" y="244" width="4" height="15" fill="rgb(246,200,0)"/><text x="123.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (2 samples, 0.37%)</title><rect x="120" y="260" width="4" height="15" fill="rgb(208,44,45)"/><text x="123.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.37%)</title><rect x="120" y="276" width="4" height="15" fill="rgb(225,134,45)"/><text x="123.00" y="286.50"></text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.37%)</title><rect x="120" y="292" width="4" height="15" fill="rgb(212,156,37)"/><text x="123.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="122" y="308" width="2" height="15" fill="rgb(210,191,13)"/><text x="125.00" y="318.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.37%)</title><rect x="131" y="196" width="4" height="15" fill="rgb(212,134,34)"/><text x="134.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="133" y="212" width="2" height="15" fill="rgb(249,98,10)"/><text x="136.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="133" y="228" width="2" height="15" fill="rgb(213,192,40)"/><text x="136.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.19%)</title><rect x="133" y="244" width="2" height="15" fill="rgb(216,46,10)"/><text x="136.00" y="254.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.19%)</title><rect x="133" y="260" width="2" height="15" fill="rgb(252,21,24)"/><text x="136.00" y="270.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.19%)</title><rect x="133" y="276" width="2" height="15" fill="rgb(211,186,50)"/><text x="136.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.19%)</title><rect x="135" y="196" width="2" height="15" fill="rgb(208,165,21)"/><text x="138.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="137" y="196" width="2" height="15" fill="rgb(236,228,12)"/><text x="140.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="137" y="212" width="2" height="15" fill="rgb(236,72,39)"/><text x="140.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="137" y="228" width="2" height="15" fill="rgb(231,214,1)"/><text x="140.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.19%)</title><rect x="139" y="260" width="3" height="15" fill="rgb(205,52,15)"/><text x="142.00" y="270.50"></text></g><g><title>array_sum (methods.c:2215) (2 samples, 0.37%)</title><rect x="139" y="196" width="5" height="15" fill="rgb(214,46,20)"/><text x="142.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (2 samples, 0.37%)</title><rect x="139" y="212" width="5" height="15" fill="rgb(228,26,42)"/><text x="142.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (2 samples, 0.37%)</title><rect x="139" y="228" width="5" height="15" fill="rgb(215,131,41)"/><text x="142.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.37%)</title><rect x="139" y="244" width="5" height="15" fill="rgb(226,74,41)"/><text x="142.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.19%)</title><rect x="142" y="260" width="2" height="15" fill="rgb(238,22,0)"/><text x="145.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.19%)</title><rect x="142" y="276" width="2" height="15" fill="rgb(241,192,23)"/><text x="145.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="142" y="292" width="2" height="15" fill="rgb(235,99,53)"/><text x="145.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="142" y="308" width="2" height="15" fill="rgb(212,6,28)"/><text x="145.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.19%)</title><rect x="142" y="324" width="2" height="15" fill="rgb(253,141,1)"/><text x="145.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="144" y="260" width="2" height="15" fill="rgb(215,207,27)"/><text x="147.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="144" y="276" width="2" height="15" fill="rgb(235,8,42)"/><text x="147.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.19%)</title><rect x="144" y="292" width="2" height="15" fill="rgb(227,227,35)"/><text x="147.00" y="302.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:363) (1 samples, 0.19%)</title><rect x="144" y="308" width="2" height="15" fill="rgb(250,14,47)"/><text x="147.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.37%)</title><rect x="144" y="244" width="4" height="15" fill="rgb(251,184,54)"/><text x="147.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="146" y="260" width="2" height="15" fill="rgb(229,158,25)"/><text x="149.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.19%)</title><rect x="146" y="276" width="2" height="15" fill="rgb(252,207,54)"/><text x="149.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.19%)</title><rect x="146" y="292" width="2" height="15" fill="rgb(243,111,24)"/><text x="149.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.19%)</title><rect x="148" y="292" width="2" height="15" fill="rgb(248,123,9)"/><text x="151.00" y="302.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:95) (30 samples, 5.60%)</title><rect x="87" y="164" width="66" height="15" fill="rgb(207,31,21)"/><text x="90.00" y="174.50">predict..</text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1021) (13 samples, 2.43%)</title><rect x="124" y="180" width="29" height="15" fill="rgb(243,73,19)"/><text x="127.00" y="190.50">_j..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.75%)</title><rect x="144" y="196" width="9" height="15" fill="rgb(212,87,2)"/><text x="147.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.75%)</title><rect x="144" y="212" width="9" height="15" fill="rgb(213,72,53)"/><text x="147.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.75%)</title><rect x="144" y="228" width="9" height="15" fill="rgb(243,218,49)"/><text x="147.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.37%)</title><rect x="148" y="244" width="5" height="15" fill="rgb(220,192,22)"/><text x="151.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.37%)</title><rect x="148" y="260" width="5" height="15" fill="rgb(235,221,24)"/><text x="151.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.37%)</title><rect x="148" y="276" width="5" height="15" fill="rgb(232,132,19)"/><text x="151.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.19%)</title><rect x="150" y="292" width="3" height="15" fill="rgb(218,14,28)"/><text x="153.00" y="302.50"></text></g><g><title>0x7faf226b22b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="150" y="308" width="3" height="15" fill="rgb(213,141,12)"/><text x="153.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.19%)</title><rect x="153" y="180" width="2" height="15" fill="rgb(217,65,34)"/><text x="156.00" y="190.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.19%)</title><rect x="157" y="244" width="2" height="15" fill="rgb(248,3,38)"/><text x="160.00" y="254.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:304) (1 samples, 0.19%)</title><rect x="159" y="324" width="2" height="15" fill="rgb(218,130,14)"/><text x="162.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src:133) (1 samples, 0.19%)</title><rect x="161" y="372" width="3" height="15" fill="rgb(222,47,26)"/><text x="164.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (3 samples, 0.56%)</title><rect x="159" y="308" width="7" height="15" fill="rgb(247,191,15)"/><text x="162.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:351) (2 samples, 0.37%)</title><rect x="161" y="324" width="5" height="15" fill="rgb(212,207,38)"/><text x="164.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.37%)</title><rect x="161" y="340" width="5" height="15" fill="rgb(216,78,7)"/><text x="164.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (2 samples, 0.37%)</title><rect x="161" y="356" width="5" height="15" fill="rgb(244,181,37)"/><text x="164.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src:169) (1 samples, 0.19%)</title><rect x="164" y="372" width="2" height="15" fill="rgb(226,78,45)"/><text x="167.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="166" y="308" width="2" height="15" fill="rgb(232,15,7)"/><text x="169.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.19%)</title><rect x="166" y="324" width="2" height="15" fill="rgb(245,181,29)"/><text x="169.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2140) (1 samples, 0.19%)</title><rect x="166" y="340" width="2" height="15" fill="rgb(240,68,8)"/><text x="169.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.19%)</title><rect x="168" y="324" width="2" height="15" fill="rgb(218,10,40)"/><text x="171.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.19%)</title><rect x="170" y="324" width="2" height="15" fill="rgb(211,161,12)"/><text x="173.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1854) (1 samples, 0.19%)</title><rect x="172" y="340" width="3" height="15" fill="rgb(215,75,51)"/><text x="175.00" y="350.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1085) (1 samples, 0.19%)</title><rect x="175" y="372" width="2" height="15" fill="rgb(210,207,36)"/><text x="178.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (2 samples, 0.37%)</title><rect x="179" y="388" width="4" height="15" fill="rgb(208,119,16)"/><text x="182.00" y="398.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:812) (1 samples, 0.19%)</title><rect x="183" y="388" width="3" height="15" fill="rgb(239,206,14)"/><text x="186.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.19%)</title><rect x="186" y="404" width="2" height="15" fill="rgb(245,154,52)"/><text x="189.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.19%)</title><rect x="186" y="420" width="2" height="15" fill="rgb(215,1,43)"/><text x="189.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:804) (1 samples, 0.19%)</title><rect x="188" y="404" width="2" height="15" fill="rgb(225,50,4)"/><text x="191.00" y="414.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1857) (8 samples, 1.49%)</title><rect x="175" y="340" width="17" height="15" fill="rgb(241,151,19)"/><text x="178.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src:195) (8 samples, 1.49%)</title><rect x="175" y="356" width="17" height="15" fill="rgb(226,46,7)"/><text x="178.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1117) (7 samples, 1.31%)</title><rect x="177" y="372" width="15" height="15" fill="rgb(240,61,12)"/><text x="180.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (3 samples, 0.56%)</title><rect x="186" y="388" width="6" height="15" fill="rgb(243,67,10)"/><text x="189.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:807) (1 samples, 0.19%)</title><rect x="190" y="404" width="2" height="15" fill="rgb(237,7,11)"/><text x="193.00" y="414.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.19%)</title><rect x="194" y="372" width="3" height="15" fill="rgb(214,151,38)"/><text x="197.00" y="382.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.19%)</title><rect x="194" y="388" width="3" height="15" fill="rgb(253,53,15)"/><text x="197.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1876) (4 samples, 0.75%)</title><rect x="192" y="340" width="9" height="15" fill="rgb(243,114,52)"/><text x="195.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (3 samples, 0.56%)</title><rect x="194" y="356" width="7" height="15" fill="rgb(252,8,34)"/><text x="197.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:803) (2 samples, 0.37%)</title><rect x="197" y="372" width="4" height="15" fill="rgb(213,92,18)"/><text x="200.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.19%)</title><rect x="201" y="340" width="2" height="15" fill="rgb(240,85,31)"/><text x="204.00" y="350.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:101) (23 samples, 4.29%)</title><rect x="155" y="180" width="50" height="15" fill="rgb(236,100,15)"/><text x="158.00" y="190.50">logsu..</text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (22 samples, 4.10%)</title><rect x="157" y="196" width="48" height="15" fill="rgb(243,163,36)"/><text x="160.00" y="206.50">amax..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (22 samples, 4.10%)</title><rect x="157" y="212" width="48" height="15" fill="rgb(239,200,10)"/><text x="160.00" y="222.50">arra..</text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (22 samples, 4.10%)</title><rect x="157" y="228" width="48" height="15" fill="rgb(220,60,52)"/><text x="160.00" y="238.50">amax..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (21 samples, 3.92%)</title><rect x="159" y="244" width="46" height="15" fill="rgb(230,110,32)"/><text x="162.00" y="254.50">_wra..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (21 samples, 3.92%)</title><rect x="159" y="260" width="46" height="15" fill="rgb(221,87,33)"/><text x="162.00" y="270.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (21 samples, 3.92%)</title><rect x="159" y="276" width="46" height="15" fill="rgb(220,86,8)"/><text x="162.00" y="286.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (21 samples, 3.92%)</title><rect x="159" y="292" width="46" height="15" fill="rgb(249,225,39)"/><text x="162.00" y="302.50">PyUF..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (17 samples, 3.17%)</title><rect x="168" y="308" width="37" height="15" fill="rgb(209,13,3)"/><text x="171.00" y="318.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (15 samples, 2.80%)</title><rect x="172" y="324" width="33" height="15" fill="rgb(222,14,15)"/><text x="175.00" y="334.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.19%)</title><rect x="203" y="340" width="2" height="15" fill="rgb(241,204,26)"/><text x="206.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.19%)</title><rect x="205" y="196" width="3" height="15" fill="rgb(248,185,1)"/><text x="208.00" y="206.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.19%)</title><rect x="205" y="212" width="3" height="15" fill="rgb(237,119,14)"/><text x="208.00" y="222.50"></text></g><g><title>count_boolean_trues (item_selection.c:2049) (1 samples, 0.19%)</title><rect x="205" y="228" width="3" height="15" fill="rgb(205,18,27)"/><text x="208.00" y="238.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="205" y="244" width="3" height="15" fill="rgb(212,2,32)"/><text x="208.00" y="254.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:104) (2 samples, 0.37%)</title><rect x="205" y="180" width="5" height="15" fill="rgb(216,30,43)"/><text x="208.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="208" y="196" width="2" height="15" fill="rgb(239,201,45)"/><text x="211.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="208" y="212" width="2" height="15" fill="rgb(247,216,11)"/><text x="211.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="208" y="228" width="2" height="15" fill="rgb(210,213,12)"/><text x="211.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.19%)</title><rect x="208" y="244" width="2" height="15" fill="rgb(227,0,1)"/><text x="211.00" y="254.50"></text></g><g><title>DOUBLE_isfinite (loops.c.src:1809) (1 samples, 0.19%)</title><rect x="208" y="260" width="2" height="15" fill="rgb(222,31,41)"/><text x="211.00" y="270.50"></text></g><g><title>run_isfinite_simd_DOUBLE (simd.inc.src:325) (1 samples, 0.19%)</title><rect x="208" y="276" width="2" height="15" fill="rgb(240,75,18)"/><text x="211.00" y="286.50"></text></g><g><title>sse2_isfinite_DOUBLE (simd.inc.src:890) (1 samples, 0.19%)</title><rect x="208" y="292" width="2" height="15" fill="rgb(247,178,43)"/><text x="211.00" y="302.50"></text></g><g><title>sse2_compress4_to_byte_DOUBLE (simd.inc.src:799) (1 samples, 0.19%)</title><rect x="208" y="308" width="2" height="15" fill="rgb(239,179,49)"/><text x="211.00" y="318.50"></text></g><g><title>_mm_and_si128 (emmintrin.h:1232) (1 samples, 0.19%)</title><rect x="208" y="324" width="2" height="15" fill="rgb(214,74,37)"/><text x="211.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="210" y="260" width="2" height="15" fill="rgb(251,81,35)"/><text x="213.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="210" y="276" width="2" height="15" fill="rgb(243,104,30)"/><text x="213.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.19%)</title><rect x="210" y="292" width="2" height="15" fill="rgb(228,197,22)"/><text x="213.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.19%)</title><rect x="210" y="308" width="2" height="15" fill="rgb(219,56,42)"/><text x="213.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="210" y="324" width="2" height="15" fill="rgb(242,88,37)"/><text x="213.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="210" y="340" width="2" height="15" fill="rgb(222,77,50)"/><text x="213.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="210" y="356" width="2" height="15" fill="rgb(249,81,10)"/><text x="213.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="210" y="372" width="2" height="15" fill="rgb(246,210,1)"/><text x="213.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="210" y="388" width="2" height="15" fill="rgb(238,200,50)"/><text x="213.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="210" y="404" width="2" height="15" fill="rgb(246,227,19)"/><text x="213.00" y="414.50"></text></g><g><title>0x7faf2349121f (libc-2.29.so) (1 samples, 0.19%)</title><rect x="210" y="420" width="2" height="15" fill="rgb(246,117,44)"/><text x="213.00" y="430.50"></text></g><g><title>array_subtract (number.c:342) (2 samples, 0.37%)</title><rect x="210" y="196" width="4" height="15" fill="rgb(226,15,23)"/><text x="213.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.37%)</title><rect x="210" y="212" width="4" height="15" fill="rgb(235,114,49)"/><text x="213.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.37%)</title><rect x="210" y="228" width="4" height="15" fill="rgb(253,32,25)"/><text x="213.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.37%)</title><rect x="210" y="244" width="4" height="15" fill="rgb(232,135,53)"/><text x="213.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1574) (1 samples, 0.19%)</title><rect x="212" y="260" width="2" height="15" fill="rgb(216,187,52)"/><text x="215.00" y="270.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1220) (1 samples, 0.19%)</title><rect x="212" y="276" width="2" height="15" fill="rgb(212,213,43)"/><text x="215.00" y="286.50"></text></g><g><title>0x7faf226b0b00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="216" y="276" width="3" height="15" fill="rgb(236,192,47)"/><text x="219.00" y="286.50"></text></g><g><title>0x7faf23661bb4 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="221" y="292" width="2" height="15" fill="rgb(223,44,5)"/><text x="224.00" y="302.50"></text></g><g><title>0x7faf23661c07 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="223" y="292" width="2" height="15" fill="rgb(232,62,39)"/><text x="226.00" y="302.50"></text></g><g><title>0x7faf23661c6e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="225" y="292" width="2" height="15" fill="rgb(241,157,35)"/><text x="228.00" y="302.50"></text></g><g><title>0x7faf23661c7b (libm-2.29.so) (1 samples, 0.19%)</title><rect x="227" y="292" width="3" height="15" fill="rgb(239,35,0)"/><text x="230.00" y="302.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:112) (10 samples, 1.87%)</title><rect x="210" y="180" width="22" height="15" fill="rgb(238,184,3)"/><text x="213.00" y="190.50">l..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.49%)</title><rect x="214" y="196" width="18" height="15" fill="rgb(216,223,6)"/><text x="217.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.49%)</title><rect x="214" y="212" width="18" height="15" fill="rgb(247,0,44)"/><text x="217.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (8 samples, 1.49%)</title><rect x="214" y="228" width="18" height="15" fill="rgb(235,164,52)"/><text x="217.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (8 samples, 1.49%)</title><rect x="214" y="244" width="18" height="15" fill="rgb(235,185,41)"/><text x="217.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (8 samples, 1.49%)</title><rect x="214" y="260" width="18" height="15" fill="rgb(224,98,40)"/><text x="217.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (6 samples, 1.12%)</title><rect x="219" y="276" width="13" height="15" fill="rgb(219,13,27)"/><text x="222.00" y="286.50"></text></g><g><title>0x7faf23661c7f (libm-2.29.so) (1 samples, 0.19%)</title><rect x="230" y="292" width="2" height="15" fill="rgb(243,173,17)"/><text x="233.00" y="302.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.19%)</title><rect x="234" y="212" width="2" height="15" fill="rgb(246,201,48)"/><text x="237.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:179) (1 samples, 0.19%)</title><rect x="234" y="228" width="2" height="15" fill="rgb(219,107,44)"/><text x="237.00" y="238.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:115) (3 samples, 0.56%)</title><rect x="232" y="180" width="6" height="15" fill="rgb(220,49,2)"/><text x="235.00" y="190.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (2 samples, 0.37%)</title><rect x="234" y="196" width="4" height="15" fill="rgb(249,68,1)"/><text x="237.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:123) (1 samples, 0.19%)</title><rect x="236" y="212" width="2" height="15" fill="rgb(233,114,9)"/><text x="239.00" y="222.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.19%)</title><rect x="241" y="276" width="2" height="15" fill="rgb(240,68,31)"/><text x="244.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="241" y="292" width="2" height="15" fill="rgb(217,85,3)"/><text x="244.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.19%)</title><rect x="243" y="308" width="2" height="15" fill="rgb(226,179,43)"/><text x="246.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.19%)</title><rect x="243" y="324" width="2" height="15" fill="rgb(250,108,39)"/><text x="246.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.19%)</title><rect x="243" y="340" width="2" height="15" fill="rgb(233,147,46)"/><text x="246.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.19%)</title><rect x="243" y="356" width="2" height="15" fill="rgb(247,85,18)"/><text x="246.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="243" y="372" width="2" height="15" fill="rgb(238,113,43)"/><text x="246.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="245" y="308" width="2" height="15" fill="rgb(237,174,26)"/><text x="248.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.19%)</title><rect x="245" y="324" width="2" height="15" fill="rgb(229,154,48)"/><text x="248.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.37%)</title><rect x="247" y="340" width="5" height="15" fill="rgb(210,209,33)"/><text x="250.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.37%)</title><rect x="247" y="356" width="5" height="15" fill="rgb(232,121,26)"/><text x="250.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.19%)</title><rect x="252" y="340" width="2" height="15" fill="rgb(224,138,2)"/><text x="255.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 1.12%)</title><rect x="243" y="292" width="13" height="15" fill="rgb(230,133,13)"/><text x="246.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (4 samples, 0.75%)</title><rect x="247" y="308" width="9" height="15" fill="rgb(226,24,14)"/><text x="250.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (4 samples, 0.75%)</title><rect x="247" y="324" width="9" height="15" fill="rgb(214,215,44)"/><text x="250.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.19%)</title><rect x="254" y="340" width="2" height="15" fill="rgb(247,122,7)"/><text x="257.00" y="350.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:116) (9 samples, 1.68%)</title><rect x="238" y="180" width="20" height="15" fill="rgb(254,46,4)"/><text x="241.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (9 samples, 1.68%)</title><rect x="238" y="196" width="20" height="15" fill="rgb(216,137,0)"/><text x="241.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 1.68%)</title><rect x="238" y="212" width="20" height="15" fill="rgb(233,180,34)"/><text x="241.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (8 samples, 1.49%)</title><rect x="241" y="228" width="17" height="15" fill="rgb(240,84,31)"/><text x="244.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (8 samples, 1.49%)</title><rect x="241" y="244" width="17" height="15" fill="rgb(213,84,51)"/><text x="244.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 1.49%)</title><rect x="241" y="260" width="17" height="15" fill="rgb(225,210,30)"/><text x="244.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 1.31%)</title><rect x="243" y="276" width="15" height="15" fill="rgb(234,208,39)"/><text x="246.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3672) (1 samples, 0.19%)</title><rect x="256" y="292" width="2" height="15" fill="rgb(208,5,29)"/><text x="259.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="263" y="212" width="2" height="15" fill="rgb(223,77,4)"/><text x="266.00" y="222.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1956) (1 samples, 0.19%)</title><rect x="263" y="228" width="2" height="15" fill="rgb(252,20,27)"/><text x="266.00" y="238.50"></text></g><g><title>0x7faf23661e01 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="265" y="276" width="2" height="15" fill="rgb(225,208,53)"/><text x="268.00" y="286.50"></text></g><g><title>0x7faf23661e6e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="267" y="276" width="2" height="15" fill="rgb(209,68,29)"/><text x="270.00" y="286.50"></text></g><g><title>0x7faf23661e7e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="269" y="276" width="2" height="15" fill="rgb(245,41,7)"/><text x="272.00" y="286.50"></text></g><g><title>0x7faf23661ed2 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="271" y="276" width="3" height="15" fill="rgb(251,28,12)"/><text x="274.00" y="286.50"></text></g><g><title>0x7faf23661efa (libm-2.29.so) (1 samples, 0.19%)</title><rect x="274" y="276" width="2" height="15" fill="rgb(252,206,9)"/><text x="277.00" y="286.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.19%)</title><rect x="276" y="276" width="2" height="15" fill="rgb(248,172,14)"/><text x="279.00" y="286.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:120) (10 samples, 1.87%)</title><rect x="258" y="180" width="22" height="15" fill="rgb(215,226,47)"/><text x="261.00" y="190.50">l..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.49%)</title><rect x="263" y="196" width="17" height="15" fill="rgb(213,214,36)"/><text x="266.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.31%)</title><rect x="265" y="212" width="15" height="15" fill="rgb(246,182,31)"/><text x="268.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (7 samples, 1.31%)</title><rect x="265" y="228" width="15" height="15" fill="rgb(231,92,46)"/><text x="268.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (7 samples, 1.31%)</title><rect x="265" y="244" width="15" height="15" fill="rgb(225,157,13)"/><text x="268.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (7 samples, 1.31%)</title><rect x="265" y="260" width="15" height="15" fill="rgb(216,41,34)"/><text x="268.00" y="270.50"></text></g><g><title>npy_log (npy_math_internal.h.src:469) (1 samples, 0.19%)</title><rect x="278" y="276" width="2" height="15" fill="rgb(232,199,37)"/><text x="281.00" y="286.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:123) (1 samples, 0.19%)</title><rect x="280" y="180" width="2" height="15" fill="rgb(214,176,54)"/><text x="283.00" y="190.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;:5) (1 samples, 0.19%)</title><rect x="280" y="196" width="2" height="15" fill="rgb(233,54,1)"/><text x="283.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4707) (1 samples, 0.19%)</title><rect x="282" y="196" width="3" height="15" fill="rgb(222,146,22)"/><text x="285.00" y="206.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:124) (2 samples, 0.37%)</title><rect x="282" y="180" width="5" height="15" fill="rgb(207,176,51)"/><text x="285.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="285" y="196" width="2" height="15" fill="rgb(205,45,18)"/><text x="288.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="285" y="212" width="2" height="15" fill="rgb(227,30,2)"/><text x="288.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.19%)</title><rect x="285" y="228" width="2" height="15" fill="rgb(251,157,44)"/><text x="288.00" y="238.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.19%)</title><rect x="285" y="244" width="2" height="15" fill="rgb(216,175,40)"/><text x="288.00" y="254.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.19%)</title><rect x="285" y="260" width="2" height="15" fill="rgb(254,10,44)"/><text x="288.00" y="270.50"></text></g><g><title>solve_diophantine (mem_overlap.c:483) (1 samples, 0.19%)</title><rect x="285" y="276" width="2" height="15" fill="rgb(231,70,3)"/><text x="288.00" y="286.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:97) (62 samples, 11.57%)</title><rect x="153" y="164" width="136" height="15" fill="rgb(210,52,25)"/><text x="156.00" y="174.50">predict_log_proba..</text></g><g><title>logsumexp (scipy/special/_logsumexp.py:94) (1 samples, 0.19%)</title><rect x="287" y="180" width="2" height="15" fill="rgb(221,226,29)"/><text x="290.00" y="190.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:239) (1 samples, 0.19%)</title><rect x="287" y="196" width="2" height="15" fill="rgb(253,182,20)"/><text x="290.00" y="206.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="289" y="244" width="2" height="15" fill="rgb(249,210,37)"/><text x="292.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="289" y="260" width="2" height="15" fill="rgb(221,127,8)"/><text x="292.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="289" y="276" width="2" height="15" fill="rgb(208,48,11)"/><text x="292.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1043) (1 samples, 0.19%)</title><rect x="289" y="292" width="2" height="15" fill="rgb(244,155,33)"/><text x="292.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.37%)</title><rect x="289" y="196" width="4" height="15" fill="rgb(230,122,36)"/><text x="292.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.37%)</title><rect x="289" y="212" width="4" height="15" fill="rgb(253,94,30)"/><text x="292.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.37%)</title><rect x="289" y="228" width="4" height="15" fill="rgb(225,56,3)"/><text x="292.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="291" y="244" width="2" height="15" fill="rgb(241,18,4)"/><text x="294.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="291" y="260" width="2" height="15" fill="rgb(237,224,12)"/><text x="294.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.19%)</title><rect x="291" y="276" width="2" height="15" fill="rgb(205,203,50)"/><text x="294.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.19%)</title><rect x="291" y="292" width="2" height="15" fill="rgb(250,140,16)"/><text x="294.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.19%)</title><rect x="291" y="308" width="2" height="15" fill="rgb(221,154,24)"/><text x="294.00" y="318.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:98) (3 samples, 0.56%)</title><rect x="289" y="164" width="7" height="15" fill="rgb(246,49,28)"/><text x="292.00" y="174.50"></text></g><g><title>array_subtract (number.c:342) (3 samples, 0.56%)</title><rect x="289" y="180" width="7" height="15" fill="rgb(219,99,20)"/><text x="292.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.19%)</title><rect x="293" y="196" width="3" height="15" fill="rgb(215,92,23)"/><text x="296.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.19%)</title><rect x="293" y="212" width="3" height="15" fill="rgb(210,181,13)"/><text x="296.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.19%)</title><rect x="296" y="196" width="2" height="15" fill="rgb(251,57,5)"/><text x="299.00" y="206.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.19%)</title><rect x="296" y="212" width="2" height="15" fill="rgb(236,194,22)"/><text x="299.00" y="222.50"></text></g><g><title>0x7faf23661bb4 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="305" y="260" width="2" height="15" fill="rgb(253,134,0)"/><text x="308.00" y="270.50"></text></g><g><title>0x7faf23661be7 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="307" y="260" width="2" height="15" fill="rgb(235,208,30)"/><text x="310.00" y="270.50"></text></g><g><title>0x7faf23661bf9 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="309" y="260" width="4" height="15" fill="rgb(217,50,53)"/><text x="312.00" y="270.50"></text></g><g><title>0x7faf23661c07 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="313" y="260" width="3" height="15" fill="rgb(248,62,49)"/><text x="316.00" y="270.50"></text></g><g><title>0x7faf23661c2e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="316" y="260" width="2" height="15" fill="rgb(221,66,4)"/><text x="319.00" y="270.50"></text></g><g><title>0x7faf23661c3a (libm-2.29.so) (1 samples, 0.19%)</title><rect x="318" y="260" width="2" height="15" fill="rgb(230,70,49)"/><text x="321.00" y="270.50"></text></g><g><title>0x7faf23661c3e (libm-2.29.so) (3 samples, 0.56%)</title><rect x="320" y="260" width="7" height="15" fill="rgb(246,68,22)"/><text x="323.00" y="270.50"></text></g><g><title>0x7faf23661c7b (libm-2.29.so) (1 samples, 0.19%)</title><rect x="327" y="260" width="2" height="15" fill="rgb(243,140,52)"/><text x="330.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:38) (146 samples, 27.24%)</title><rect x="12" y="52" width="321" height="15" fill="rgb(251,127,14)"/><text x="15.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_b_cl_10..</text></g><g><title>profile_skl (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:37) (146 samples, 27.24%)</title><rect x="12" y="68" width="321" height="15" fill="rgb(219,152,16)"/><text x="15.00" y="78.50">profile_skl (bench_BernoulliNB_default_b_cl..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:29) (146 samples, 27.24%)</title><rect x="12" y="84" width="321" height="15" fill="rgb(206,14,15)"/><text x="15.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_..</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:23) (138 samples, 25.75%)</title><rect x="29" y="100" width="304" height="15" fill="rgb(240,94,41)"/><text x="32.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (138 samples, 25.75%)</title><rect x="29" y="116" width="304" height="15" fill="rgb(213,188,27)"/><text x="32.00" y="126.50">time_predict (mlprodict/asv_benchmark/co..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (138 samples, 25.75%)</title><rect x="29" y="132" width="304" height="15" fill="rgb(251,31,30)"/><text x="32.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common..</text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (138 samples, 25.75%)</title><rect x="29" y="148" width="304" height="15" fill="rgb(219,26,43)"/><text x="32.00" y="158.50">predict_proba (sklearn/naive_bayes.py:11..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 3.17%)</title><rect x="296" y="164" width="37" height="15" fill="rgb(224,28,35)"/><text x="299.00" y="174.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (17 samples, 3.17%)</title><rect x="296" y="180" width="37" height="15" fill="rgb(253,115,26)"/><text x="299.00" y="190.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (16 samples, 2.99%)</title><rect x="298" y="196" width="35" height="15" fill="rgb(242,221,38)"/><text x="301.00" y="206.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (16 samples, 2.99%)</title><rect x="298" y="212" width="35" height="15" fill="rgb(237,180,22)"/><text x="301.00" y="222.50">tr..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (16 samples, 2.99%)</title><rect x="298" y="228" width="35" height="15" fill="rgb(227,8,31)"/><text x="301.00" y="238.50">Py..</text></g><g><title>exp (libm-2.29.so) (16 samples, 2.99%)</title><rect x="298" y="244" width="35" height="15" fill="rgb(222,164,48)"/><text x="301.00" y="254.50">ex..</text></g><g><title>0x7faf23661c7f (libm-2.29.so) (2 samples, 0.37%)</title><rect x="329" y="260" width="4" height="15" fill="rgb(242,18,50)"/><text x="332.00" y="270.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:1) (1 samples, 0.19%)</title><rect x="333" y="148" width="2" height="15" fill="rgb(240,56,22)"/><text x="336.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="333" y="164" width="2" height="15" fill="rgb(223,50,32)"/><text x="336.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="333" y="180" width="2" height="15" fill="rgb(234,26,27)"/><text x="336.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="333" y="196" width="2" height="15" fill="rgb(232,166,54)"/><text x="336.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="333" y="212" width="2" height="15" fill="rgb(207,2,19)"/><text x="336.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="333" y="228" width="2" height="15" fill="rgb(210,31,9)"/><text x="336.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:150) (1 samples, 0.19%)</title><rect x="333" y="244" width="2" height="15" fill="rgb(229,188,52)"/><text x="336.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="333" y="260" width="2" height="15" fill="rgb(217,107,38)"/><text x="336.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="333" y="276" width="2" height="15" fill="rgb(206,193,2)"/><text x="336.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="333" y="292" width="2" height="15" fill="rgb(233,128,4)"/><text x="336.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="333" y="308" width="2" height="15" fill="rgb(232,13,54)"/><text x="336.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="333" y="324" width="2" height="15" fill="rgb(246,155,31)"/><text x="336.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="333" y="340" width="2" height="15" fill="rgb(248,155,31)"/><text x="336.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="333" y="356" width="2" height="15" fill="rgb(213,129,51)"/><text x="336.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py:181) (1 samples, 0.19%)</title><rect x="333" y="372" width="2" height="15" fill="rgb(205,45,18)"/><text x="336.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="333" y="388" width="2" height="15" fill="rgb(241,40,30)"/><text x="336.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="333" y="404" width="2" height="15" fill="rgb(251,57,11)"/><text x="336.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="333" y="420" width="2" height="15" fill="rgb(222,30,54)"/><text x="336.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="333" y="436" width="2" height="15" fill="rgb(216,49,16)"/><text x="336.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="333" y="452" width="2" height="15" fill="rgb(252,93,29)"/><text x="336.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="333" y="468" width="2" height="15" fill="rgb(219,79,21)"/><text x="336.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="333" y="484" width="2" height="15" fill="rgb(215,143,32)"/><text x="336.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py:1) (1 samples, 0.19%)</title><rect x="333" y="500" width="2" height="15" fill="rgb(234,140,39)"/><text x="336.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="333" y="516" width="2" height="15" fill="rgb(231,228,7)"/><text x="336.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="333" y="532" width="2" height="15" fill="rgb(225,157,53)"/><text x="336.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="333" y="548" width="2" height="15" fill="rgb(207,184,37)"/><text x="336.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="333" y="564" width="2" height="15" fill="rgb(212,134,8)"/><text x="336.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="333" y="580" width="2" height="15" fill="rgb(239,93,34)"/><text x="336.00" y="590.50"></text></g><g><title>0x7faf15d56585 (?) (1 samples, 0.19%)</title><rect x="333" y="596" width="2" height="15" fill="rgb(244,142,8)"/><text x="336.00" y="606.50"></text></g><g><title>0x7faf15d5c075 (?) (1 samples, 0.19%)</title><rect x="333" y="612" width="2" height="15" fill="rgb(225,2,10)"/><text x="336.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="333" y="628" width="2" height="15" fill="rgb(230,167,44)"/><text x="336.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="333" y="644" width="2" height="15" fill="rgb(240,136,33)"/><text x="336.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="333" y="660" width="2" height="15" fill="rgb(252,93,53)"/><text x="336.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="333" y="676" width="2" height="15" fill="rgb(221,23,3)"/><text x="336.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="333" y="692" width="2" height="15" fill="rgb(226,223,38)"/><text x="336.00" y="702.50"></text></g><g><title>0x7faf15693543 (?) (1 samples, 0.19%)</title><rect x="333" y="708" width="2" height="15" fill="rgb(207,133,48)"/><text x="336.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="333" y="724" width="2" height="15" fill="rgb(235,101,54)"/><text x="336.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="333" y="740" width="2" height="15" fill="rgb(245,22,23)"/><text x="336.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="333" y="756" width="2" height="15" fill="rgb(244,49,7)"/><text x="336.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="333" y="772" width="2" height="15" fill="rgb(244,209,41)"/><text x="336.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="333" y="788" width="2" height="15" fill="rgb(217,61,25)"/><text x="336.00" y="798.50"></text></g><g><title>0x7faf15468b9c (?) (1 samples, 0.19%)</title><rect x="333" y="804" width="2" height="15" fill="rgb(247,191,11)"/><text x="336.00" y="814.50"></text></g><g><title>0x7faf1546c885 (?) (1 samples, 0.19%)</title><rect x="333" y="820" width="2" height="15" fill="rgb(249,34,33)"/><text x="336.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="333" y="836" width="2" height="15" fill="rgb(219,224,41)"/><text x="336.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="333" y="852" width="2" height="15" fill="rgb(243,109,40)"/><text x="336.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="333" y="868" width="2" height="15" fill="rgb(232,83,32)"/><text x="336.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="333" y="884" width="2" height="15" fill="rgb(253,196,48)"/><text x="336.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="333" y="900" width="2" height="15" fill="rgb(223,60,21)"/><text x="336.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py:20) (1 samples, 0.19%)</title><rect x="333" y="916" width="2" height="15" fill="rgb(215,183,36)"/><text x="336.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="333" y="932" width="2" height="15" fill="rgb(248,142,50)"/><text x="336.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="333" y="948" width="2" height="15" fill="rgb(228,121,48)"/><text x="336.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="333" y="964" width="2" height="15" fill="rgb(241,43,53)"/><text x="336.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="333" y="980" width="2" height="15" fill="rgb(254,211,5)"/><text x="336.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="333" y="996" width="2" height="15" fill="rgb(219,109,28)"/><text x="336.00" y="1006.50"></text></g><g><title>&lt;module&gt; (random.py:44) (1 samples, 0.19%)</title><rect x="333" y="1012" width="2" height="15" fill="rgb(218,70,46)"/><text x="336.00" y="1022.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.19%)</title><rect x="335" y="916" width="3" height="15" fill="rgb(251,197,14)"/><text x="338.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.19%)</title><rect x="335" y="932" width="3" height="15" fill="rgb(245,157,49)"/><text x="338.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="335" y="948" width="3" height="15" fill="rgb(250,93,1)"/><text x="338.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="335" y="964" width="3" height="15" fill="rgb(252,56,26)"/><text x="338.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.19%)</title><rect x="335" y="980" width="3" height="15" fill="rgb(247,216,54)"/><text x="338.00" y="990.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.37%)</title><rect x="335" y="820" width="5" height="15" fill="rgb(245,33,24)"/><text x="338.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.37%)</title><rect x="335" y="836" width="5" height="15" fill="rgb(216,36,28)"/><text x="338.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.37%)</title><rect x="335" y="852" width="5" height="15" fill="rgb(207,3,19)"/><text x="338.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.37%)</title><rect x="335" y="868" width="5" height="15" fill="rgb(238,95,46)"/><text x="338.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.37%)</title><rect x="335" y="884" width="5" height="15" fill="rgb(217,68,30)"/><text x="338.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.37%)</title><rect x="335" y="900" width="5" height="15" fill="rgb(246,122,5)"/><text x="338.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.19%)</title><rect x="338" y="916" width="2" height="15" fill="rgb(214,198,31)"/><text x="341.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.19%)</title><rect x="338" y="932" width="2" height="15" fill="rgb(238,97,18)"/><text x="341.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.19%)</title><rect x="338" y="948" width="2" height="15" fill="rgb(209,203,46)"/><text x="341.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.19%)</title><rect x="338" y="964" width="2" height="15" fill="rgb(210,162,49)"/><text x="341.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.19%)</title><rect x="338" y="980" width="2" height="15" fill="rgb(237,54,50)"/><text x="341.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.19%)</title><rect x="338" y="996" width="2" height="15" fill="rgb(212,4,16)"/><text x="341.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:2) (3 samples, 0.56%)</title><rect x="335" y="148" width="7" height="15" fill="rgb(220,114,11)"/><text x="338.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="335" y="164" width="7" height="15" fill="rgb(227,213,40)"/><text x="338.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.56%)</title><rect x="335" y="180" width="7" height="15" fill="rgb(234,183,50)"/><text x="338.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="335" y="196" width="7" height="15" fill="rgb(236,117,9)"/><text x="338.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="335" y="212" width="7" height="15" fill="rgb(228,176,47)"/><text x="338.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="335" y="228" width="7" height="15" fill="rgb(231,89,54)"/><text x="338.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="335" y="244" width="7" height="15" fill="rgb(251,199,52)"/><text x="338.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="335" y="260" width="7" height="15" fill="rgb(252,146,5)"/><text x="338.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="335" y="276" width="7" height="15" fill="rgb(251,64,41)"/><text x="338.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.56%)</title><rect x="335" y="292" width="7" height="15" fill="rgb(243,102,21)"/><text x="338.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="335" y="308" width="7" height="15" fill="rgb(252,7,24)"/><text x="338.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="335" y="324" width="7" height="15" fill="rgb(248,114,28)"/><text x="338.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="335" y="340" width="7" height="15" fill="rgb(228,10,21)"/><text x="338.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="335" y="356" width="7" height="15" fill="rgb(233,32,21)"/><text x="338.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="335" y="372" width="7" height="15" fill="rgb(215,31,12)"/><text x="338.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.56%)</title><rect x="335" y="388" width="7" height="15" fill="rgb(217,18,5)"/><text x="338.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="335" y="404" width="7" height="15" fill="rgb(209,216,40)"/><text x="338.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="335" y="420" width="7" height="15" fill="rgb(252,106,34)"/><text x="338.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="335" y="436" width="7" height="15" fill="rgb(236,58,44)"/><text x="338.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="335" y="452" width="7" height="15" fill="rgb(234,20,9)"/><text x="338.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="335" y="468" width="7" height="15" fill="rgb(240,120,39)"/><text x="338.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.56%)</title><rect x="335" y="484" width="7" height="15" fill="rgb(233,49,8)"/><text x="338.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="335" y="500" width="7" height="15" fill="rgb(216,62,1)"/><text x="338.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="335" y="516" width="7" height="15" fill="rgb(254,24,6)"/><text x="338.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="335" y="532" width="7" height="15" fill="rgb(218,198,54)"/><text x="338.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="335" y="548" width="7" height="15" fill="rgb(226,222,16)"/><text x="338.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="335" y="564" width="7" height="15" fill="rgb(219,181,49)"/><text x="338.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.56%)</title><rect x="335" y="580" width="7" height="15" fill="rgb(220,101,8)"/><text x="338.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="335" y="596" width="7" height="15" fill="rgb(247,91,21)"/><text x="338.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.56%)</title><rect x="335" y="612" width="7" height="15" fill="rgb(242,120,4)"/><text x="338.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="335" y="628" width="7" height="15" fill="rgb(232,55,32)"/><text x="338.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="335" y="644" width="7" height="15" fill="rgb(245,227,17)"/><text x="338.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="335" y="660" width="7" height="15" fill="rgb(230,94,54)"/><text x="338.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="335" y="676" width="7" height="15" fill="rgb(253,186,18)"/><text x="338.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="335" y="692" width="7" height="15" fill="rgb(231,216,35)"/><text x="338.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="335" y="708" width="7" height="15" fill="rgb(208,153,35)"/><text x="338.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.56%)</title><rect x="335" y="724" width="7" height="15" fill="rgb(224,10,38)"/><text x="338.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="335" y="740" width="7" height="15" fill="rgb(235,214,23)"/><text x="338.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="335" y="756" width="7" height="15" fill="rgb(212,71,53)"/><text x="338.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="335" y="772" width="7" height="15" fill="rgb(206,212,2)"/><text x="338.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="335" y="788" width="7" height="15" fill="rgb(224,187,32)"/><text x="338.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="335" y="804" width="7" height="15" fill="rgb(231,174,23)"/><text x="338.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.19%)</title><rect x="340" y="820" width="2" height="15" fill="rgb(218,219,41)"/><text x="343.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="340" y="836" width="2" height="15" fill="rgb(206,148,17)"/><text x="343.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="340" y="852" width="2" height="15" fill="rgb(222,156,21)"/><text x="343.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="340" y="868" width="2" height="15" fill="rgb(242,79,13)"/><text x="343.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="340" y="884" width="2" height="15" fill="rgb(222,139,1)"/><text x="343.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="340" y="900" width="2" height="15" fill="rgb(239,78,8)"/><text x="343.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:14) (1 samples, 0.19%)</title><rect x="340" y="916" width="2" height="15" fill="rgb(216,210,38)"/><text x="343.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="340" y="932" width="2" height="15" fill="rgb(231,4,26)"/><text x="343.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="340" y="948" width="2" height="15" fill="rgb(214,59,15)"/><text x="343.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="340" y="964" width="2" height="15" fill="rgb(252,222,2)"/><text x="343.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="340" y="980" width="2" height="15" fill="rgb(207,204,45)"/><text x="343.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="340" y="996" width="2" height="15" fill="rgb(254,44,15)"/><text x="343.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/markers.py:121) (1 samples, 0.19%)</title><rect x="340" y="1012" width="2" height="15" fill="rgb(231,101,18)"/><text x="343.00" y="1022.50"></text></g><g><title>__or__ (pkg_resources/_vendor/pyparsing.py:1958) (1 samples, 0.19%)</title><rect x="340" y="1028" width="2" height="15" fill="rgb(234,135,53)"/><text x="343.00" y="1038.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:3541) (1 samples, 0.19%)</title><rect x="340" y="1044" width="2" height="15" fill="rgb(210,102,36)"/><text x="343.00" y="1054.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:3261) (1 samples, 0.19%)</title><rect x="340" y="1060" width="2" height="15" fill="rgb(246,215,37)"/><text x="343.00" y="1070.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:1156) (1 samples, 0.19%)</title><rect x="340" y="1076" width="2" height="15" fill="rgb(213,73,23)"/><text x="343.00" y="1086.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="340" y="1092" width="2" height="15" fill="rgb(217,44,25)"/><text x="343.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.19%)</title><rect x="342" y="484" width="2" height="15" fill="rgb(228,92,39)"/><text x="345.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="342" y="500" width="2" height="15" fill="rgb(233,90,25)"/><text x="345.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="342" y="516" width="2" height="15" fill="rgb(247,46,48)"/><text x="345.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="342" y="532" width="2" height="15" fill="rgb(227,92,44)"/><text x="345.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="342" y="548" width="2" height="15" fill="rgb(217,7,0)"/><text x="345.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="342" y="564" width="2" height="15" fill="rgb(222,202,20)"/><text x="345.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.19%)</title><rect x="342" y="580" width="2" height="15" fill="rgb(233,51,39)"/><text x="345.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="342" y="596" width="2" height="15" fill="rgb(249,165,38)"/><text x="345.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="342" y="612" width="2" height="15" fill="rgb(243,193,54)"/><text x="345.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="342" y="628" width="2" height="15" fill="rgb(254,201,6)"/><text x="345.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="342" y="644" width="2" height="15" fill="rgb(251,101,6)"/><text x="345.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="342" y="660" width="2" height="15" fill="rgb(219,31,19)"/><text x="345.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.19%)</title><rect x="342" y="676" width="2" height="15" fill="rgb(209,110,3)"/><text x="345.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="342" y="692" width="2" height="15" fill="rgb(227,134,14)"/><text x="345.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="342" y="708" width="2" height="15" fill="rgb(239,61,13)"/><text x="345.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="342" y="724" width="2" height="15" fill="rgb(210,50,17)"/><text x="345.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="342" y="740" width="2" height="15" fill="rgb(215,115,44)"/><text x="345.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="342" y="756" width="2" height="15" fill="rgb(232,80,29)"/><text x="345.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.19%)</title><rect x="342" y="772" width="2" height="15" fill="rgb(224,22,24)"/><text x="345.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="342" y="788" width="2" height="15" fill="rgb(211,5,38)"/><text x="345.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="342" y="804" width="2" height="15" fill="rgb(241,62,31)"/><text x="345.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="342" y="820" width="2" height="15" fill="rgb(231,130,26)"/><text x="345.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="342" y="836" width="2" height="15" fill="rgb(227,162,14)"/><text x="345.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="342" y="852" width="2" height="15" fill="rgb(214,228,44)"/><text x="345.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.19%)</title><rect x="342" y="868" width="2" height="15" fill="rgb(232,209,19)"/><text x="345.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="342" y="884" width="2" height="15" fill="rgb(221,133,39)"/><text x="345.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="342" y="900" width="2" height="15" fill="rgb(223,225,32)"/><text x="345.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="342" y="916" width="2" height="15" fill="rgb(229,75,2)"/><text x="345.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="342" y="932" width="2" height="15" fill="rgb(230,225,20)"/><text x="345.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="342" y="948" width="2" height="15" fill="rgb(233,118,14)"/><text x="345.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.19%)</title><rect x="342" y="964" width="2" height="15" fill="rgb(226,222,54)"/><text x="345.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="342" y="980" width="2" height="15" fill="rgb(238,74,40)"/><text x="345.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="342" y="996" width="2" height="15" fill="rgb(206,128,20)"/><text x="345.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="342" y="1012" width="2" height="15" fill="rgb(220,16,53)"/><text x="345.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="342" y="1028" width="2" height="15" fill="rgb(220,132,40)"/><text x="345.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="342" y="1044" width="2" height="15" fill="rgb(230,14,7)"/><text x="345.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.19%)</title><rect x="342" y="1060" width="2" height="15" fill="rgb(233,14,45)"/><text x="345.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="342" y="1076" width="2" height="15" fill="rgb(214,69,31)"/><text x="345.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="342" y="1092" width="2" height="15" fill="rgb(220,49,37)"/><text x="345.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="342" y="1108" width="2" height="15" fill="rgb(228,217,28)"/><text x="345.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="342" y="1124" width="2" height="15" fill="rgb(254,214,3)"/><text x="345.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="342" y="1140" width="2" height="15" fill="rgb(217,131,5)"/><text x="345.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="342" y="1156" width="2" height="15" fill="rgb(251,84,33)"/><text x="345.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="342" y="1172" width="2" height="15" fill="rgb(227,152,4)"/><text x="345.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="342" y="1188" width="2" height="15" fill="rgb(236,179,1)"/><text x="345.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.19%)</title><rect x="342" y="1204" width="2" height="15" fill="rgb(245,91,28)"/><text x="345.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="342" y="1220" width="2" height="15" fill="rgb(229,223,27)"/><text x="345.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="342" y="1236" width="2" height="15" fill="rgb(208,142,16)"/><text x="345.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="342" y="1252" width="2" height="15" fill="rgb(233,80,8)"/><text x="345.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="342" y="1268" width="2" height="15" fill="rgb(207,218,7)"/><text x="345.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="342" y="1284" width="2" height="15" fill="rgb(249,44,16)"/><text x="345.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.19%)</title><rect x="342" y="1300" width="2" height="15" fill="rgb(232,147,4)"/><text x="345.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="342" y="1316" width="2" height="15" fill="rgb(246,85,43)"/><text x="345.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="342" y="1332" width="2" height="15" fill="rgb(229,216,52)"/><text x="345.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="342" y="1348" width="2" height="15" fill="rgb(254,109,6)"/><text x="345.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="342" y="1364" width="2" height="15" fill="rgb(210,127,28)"/><text x="345.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="342" y="1380" width="2" height="15" fill="rgb(222,100,53)"/><text x="345.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:63) (1 samples, 0.19%)</title><rect x="342" y="1396" width="2" height="15" fill="rgb(246,127,39)"/><text x="345.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.19%)</title><rect x="342" y="1412" width="2" height="15" fill="rgb(237,146,10)"/><text x="345.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.19%)</title><rect x="342" y="1428" width="2" height="15" fill="rgb(236,185,30)"/><text x="345.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.19%)</title><rect x="342" y="1444" width="2" height="15" fill="rgb(234,229,19)"/><text x="345.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.19%)</title><rect x="342" y="1460" width="2" height="15" fill="rgb(218,57,44)"/><text x="345.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="342" y="1476" width="2" height="15" fill="rgb(239,189,3)"/><text x="345.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.19%)</title><rect x="342" y="1492" width="2" height="15" fill="rgb(250,75,24)"/><text x="345.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="342" y="1508" width="2" height="15" fill="rgb(246,49,24)"/><text x="345.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.19%)</title><rect x="342" y="1524" width="2" height="15" fill="rgb(223,37,47)"/><text x="345.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="342" y="1540" width="2" height="15" fill="rgb(236,153,54)"/><text x="345.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.19%)</title><rect x="342" y="1556" width="2" height="15" fill="rgb(232,101,0)"/><text x="345.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="342" y="1572" width="2" height="15" fill="rgb(225,22,24)"/><text x="345.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py:834) (1 samples, 0.19%)</title><rect x="342" y="1588" width="2" height="15" fill="rgb(212,31,20)"/><text x="345.00" y="1598.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.37%)</title><rect x="342" y="244" width="4" height="15" fill="rgb(228,174,9)"/><text x="345.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="342" y="260" width="4" height="15" fill="rgb(206,38,6)"/><text x="345.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="342" y="276" width="4" height="15" fill="rgb(236,177,48)"/><text x="345.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="342" y="292" width="4" height="15" fill="rgb(233,196,48)"/><text x="345.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="342" y="308" width="4" height="15" fill="rgb(210,45,43)"/><text x="345.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="342" y="324" width="4" height="15" fill="rgb(217,96,24)"/><text x="345.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.37%)</title><rect x="342" y="340" width="4" height="15" fill="rgb(224,197,17)"/><text x="345.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="342" y="356" width="4" height="15" fill="rgb(244,161,41)"/><text x="345.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.37%)</title><rect x="342" y="372" width="4" height="15" fill="rgb(213,44,30)"/><text x="345.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="342" y="388" width="4" height="15" fill="rgb(237,227,33)"/><text x="345.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="342" y="404" width="4" height="15" fill="rgb(236,100,27)"/><text x="345.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="342" y="420" width="4" height="15" fill="rgb(234,16,11)"/><text x="345.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="342" y="436" width="4" height="15" fill="rgb(224,11,36)"/><text x="345.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="342" y="452" width="4" height="15" fill="rgb(250,172,16)"/><text x="345.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="342" y="468" width="4" height="15" fill="rgb(225,78,28)"/><text x="345.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.19%)</title><rect x="344" y="484" width="2" height="15" fill="rgb(217,98,6)"/><text x="347.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="344" y="500" width="2" height="15" fill="rgb(208,21,30)"/><text x="347.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="344" y="516" width="2" height="15" fill="rgb(235,174,53)"/><text x="347.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="344" y="532" width="2" height="15" fill="rgb(236,220,53)"/><text x="347.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="344" y="548" width="2" height="15" fill="rgb(232,140,30)"/><text x="347.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="344" y="564" width="2" height="15" fill="rgb(208,177,10)"/><text x="347.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.19%)</title><rect x="344" y="580" width="2" height="15" fill="rgb(251,75,9)"/><text x="347.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="344" y="596" width="2" height="15" fill="rgb(224,108,9)"/><text x="347.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="344" y="612" width="2" height="15" fill="rgb(218,38,46)"/><text x="347.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="344" y="628" width="2" height="15" fill="rgb(232,74,39)"/><text x="347.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="344" y="644" width="2" height="15" fill="rgb(217,28,48)"/><text x="347.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="344" y="660" width="2" height="15" fill="rgb(236,49,53)"/><text x="347.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.19%)</title><rect x="344" y="676" width="2" height="15" fill="rgb(240,71,27)"/><text x="347.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="344" y="692" width="2" height="15" fill="rgb(233,80,34)"/><text x="347.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="344" y="708" width="2" height="15" fill="rgb(238,66,49)"/><text x="347.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="344" y="724" width="2" height="15" fill="rgb(213,94,35)"/><text x="347.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="344" y="740" width="2" height="15" fill="rgb(228,85,42)"/><text x="347.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="344" y="756" width="2" height="15" fill="rgb(221,33,25)"/><text x="347.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:76) (1 samples, 0.19%)</title><rect x="344" y="772" width="2" height="15" fill="rgb(235,105,54)"/><text x="347.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="344" y="788" width="2" height="15" fill="rgb(219,215,8)"/><text x="347.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="344" y="804" width="2" height="15" fill="rgb(227,52,22)"/><text x="347.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="344" y="820" width="2" height="15" fill="rgb(253,198,48)"/><text x="347.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="344" y="836" width="2" height="15" fill="rgb(244,7,49)"/><text x="347.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="344" y="852" width="2" height="15" fill="rgb(220,120,9)"/><text x="347.00" y="862.50"></text></g><g><title>&lt;module&gt; (configparser.py:521) (1 samples, 0.19%)</title><rect x="344" y="868" width="2" height="15" fill="rgb(249,120,15)"/><text x="347.00" y="878.50"></text></g><g><title>LegacyInterpolation (configparser.py:525) (1 samples, 0.19%)</title><rect x="344" y="884" width="2" height="15" fill="rgb(237,4,38)"/><text x="347.00" y="894.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.19%)</title><rect x="344" y="900" width="2" height="15" fill="rgb(239,152,12)"/><text x="347.00" y="910.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.19%)</title><rect x="344" y="916" width="2" height="15" fill="rgb(237,53,18)"/><text x="347.00" y="926.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.19%)</title><rect x="344" y="932" width="2" height="15" fill="rgb(245,143,11)"/><text x="347.00" y="942.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.19%)</title><rect x="344" y="948" width="2" height="15" fill="rgb(235,157,22)"/><text x="347.00" y="958.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="344" y="964" width="2" height="15" fill="rgb(250,196,36)"/><text x="347.00" y="974.50"></text></g><g><title>_parse (sre_parse.py:817) (1 samples, 0.19%)</title><rect x="344" y="980" width="2" height="15" fill="rgb(250,129,0)"/><text x="347.00" y="990.50"></text></g><g><title>match (sre_parse.py:251) (1 samples, 0.19%)</title><rect x="344" y="996" width="2" height="15" fill="rgb(252,174,47)"/><text x="347.00" y="1006.50"></text></g><g><title>__next (sre_parse.py:236) (1 samples, 0.19%)</title><rect x="344" y="1012" width="2" height="15" fill="rgb(230,117,17)"/><text x="347.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.19%)</title><rect x="346" y="628" width="3" height="15" fill="rgb(219,153,52)"/><text x="349.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="346" y="644" width="3" height="15" fill="rgb(226,109,7)"/><text x="349.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="346" y="660" width="3" height="15" fill="rgb(225,196,33)"/><text x="349.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="346" y="676" width="3" height="15" fill="rgb(236,207,14)"/><text x="349.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="346" y="692" width="3" height="15" fill="rgb(217,85,13)"/><text x="349.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="346" y="708" width="3" height="15" fill="rgb(223,25,45)"/><text x="349.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.19%)</title><rect x="346" y="724" width="3" height="15" fill="rgb(206,88,17)"/><text x="349.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="346" y="740" width="3" height="15" fill="rgb(230,51,6)"/><text x="349.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="346" y="756" width="3" height="15" fill="rgb(223,151,36)"/><text x="349.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="346" y="772" width="3" height="15" fill="rgb(247,147,9)"/><text x="349.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="346" y="788" width="3" height="15" fill="rgb(238,133,31)"/><text x="349.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="346" y="804" width="3" height="15" fill="rgb(230,123,26)"/><text x="349.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.19%)</title><rect x="346" y="820" width="3" height="15" fill="rgb(217,181,13)"/><text x="349.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="346" y="836" width="3" height="15" fill="rgb(234,145,47)"/><text x="349.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="346" y="852" width="3" height="15" fill="rgb(239,158,9)"/><text x="349.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="346" y="868" width="3" height="15" fill="rgb(217,181,23)"/><text x="349.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="346" y="884" width="3" height="15" fill="rgb(234,52,11)"/><text x="349.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="346" y="900" width="3" height="15" fill="rgb(216,17,52)"/><text x="349.00" y="910.50"></text></g><g><title>0x7faefbd3840e (?) (1 samples, 0.19%)</title><rect x="346" y="916" width="3" height="15" fill="rgb(205,53,24)"/><text x="349.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="346" y="932" width="3" height="15" fill="rgb(214,26,31)"/><text x="349.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="346" y="948" width="3" height="15" fill="rgb(212,37,48)"/><text x="349.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="346" y="964" width="3" height="15" fill="rgb(253,20,17)"/><text x="349.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="346" y="980" width="3" height="15" fill="rgb(248,170,51)"/><text x="349.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="346" y="996" width="3" height="15" fill="rgb(235,90,8)"/><text x="349.00" y="1006.50"></text></g><g><title>0x7faefbaf1cd2 (?) (1 samples, 0.19%)</title><rect x="346" y="1012" width="3" height="15" fill="rgb(241,155,44)"/><text x="349.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="346" y="1028" width="3" height="15" fill="rgb(211,128,29)"/><text x="349.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="346" y="1044" width="3" height="15" fill="rgb(228,62,8)"/><text x="349.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="346" y="1060" width="3" height="15" fill="rgb(209,12,53)"/><text x="349.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="346" y="1076" width="3" height="15" fill="rgb(232,186,39)"/><text x="349.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="346" y="1092" width="3" height="15" fill="rgb(206,91,2)"/><text x="349.00" y="1102.50"></text></g><g><title>0x7faefb1e70e5 (?) (1 samples, 0.19%)</title><rect x="346" y="1108" width="3" height="15" fill="rgb(237,229,28)"/><text x="349.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="346" y="1124" width="3" height="15" fill="rgb(243,203,3)"/><text x="349.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="346" y="1140" width="3" height="15" fill="rgb(228,211,15)"/><text x="349.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="346" y="1156" width="3" height="15" fill="rgb(237,183,19)"/><text x="349.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="346" y="1172" width="3" height="15" fill="rgb(238,152,38)"/><text x="349.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="346" y="1188" width="3" height="15" fill="rgb(251,211,46)"/><text x="349.00" y="1198.50"></text></g><g><title>0x7faefaf6be68 (?) (1 samples, 0.19%)</title><rect x="346" y="1204" width="3" height="15" fill="rgb(212,56,0)"/><text x="349.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="346" y="1220" width="3" height="15" fill="rgb(210,86,42)"/><text x="349.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="346" y="1236" width="3" height="15" fill="rgb(243,94,19)"/><text x="349.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="346" y="1252" width="3" height="15" fill="rgb(225,112,0)"/><text x="349.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="346" y="1268" width="3" height="15" fill="rgb(209,162,1)"/><text x="349.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="346" y="1284" width="3" height="15" fill="rgb(251,7,16)"/><text x="349.00" y="1294.50"></text></g><g><title>0x7faefacfc2fb (?) (1 samples, 0.19%)</title><rect x="346" y="1300" width="3" height="15" fill="rgb(213,179,5)"/><text x="349.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="346" y="1316" width="3" height="15" fill="rgb(222,0,51)"/><text x="349.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="346" y="1332" width="3" height="15" fill="rgb(235,2,13)"/><text x="349.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="346" y="1348" width="3" height="15" fill="rgb(247,66,42)"/><text x="349.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="346" y="1364" width="3" height="15" fill="rgb(209,187,19)"/><text x="349.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="346" y="1380" width="3" height="15" fill="rgb(233,204,20)"/><text x="349.00" y="1390.50"></text></g><g><title>0x7faefaae0153 (?) (1 samples, 0.19%)</title><rect x="346" y="1396" width="3" height="15" fill="rgb(226,10,50)"/><text x="349.00" y="1406.50"></text></g><g><title>0x7faefaadec13 (?) (1 samples, 0.19%)</title><rect x="346" y="1412" width="3" height="15" fill="rgb(215,221,29)"/><text x="349.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="346" y="1428" width="3" height="15" fill="rgb(219,29,41)"/><text x="349.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="346" y="1444" width="3" height="15" fill="rgb(231,46,54)"/><text x="349.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="346" y="1460" width="3" height="15" fill="rgb(223,177,0)"/><text x="349.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="346" y="1476" width="3" height="15" fill="rgb(231,66,10)"/><text x="349.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="346" y="1492" width="3" height="15" fill="rgb(227,197,38)"/><text x="349.00" y="1502.50"></text></g><g><title>0x7faefa87b181 (?) (1 samples, 0.19%)</title><rect x="346" y="1508" width="3" height="15" fill="rgb(214,78,44)"/><text x="349.00" y="1518.50"></text></g><g><title>0x7faefa87e1c9 (?) (1 samples, 0.19%)</title><rect x="346" y="1524" width="3" height="15" fill="rgb(243,91,4)"/><text x="349.00" y="1534.50"></text></g><g><title>0x7faefa8aa167 (?) (1 samples, 0.19%)</title><rect x="346" y="1540" width="3" height="15" fill="rgb(249,19,2)"/><text x="349.00" y="1550.50"></text></g><g><title>0x7faefa8a5b64 (?) (1 samples, 0.19%)</title><rect x="346" y="1556" width="3" height="15" fill="rgb(211,221,23)"/><text x="349.00" y="1566.50"></text></g><g><title>0x7faefa88907b (?) (1 samples, 0.19%)</title><rect x="346" y="1572" width="3" height="15" fill="rgb(218,8,38)"/><text x="349.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.19%)</title><rect x="346" y="1588" width="3" height="15" fill="rgb(230,111,42)"/><text x="349.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.19%)</title><rect x="346" y="1604" width="3" height="15" fill="rgb(250,214,8)"/><text x="349.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.19%)</title><rect x="346" y="1620" width="3" height="15" fill="rgb(236,50,1)"/><text x="349.00" y="1630.50"></text></g><g><title>parseString (pyparsing.py:1928) (1 samples, 0.19%)</title><rect x="349" y="1988" width="2" height="15" fill="rgb(212,40,9)"/><text x="352.00" y="1998.50"></text></g><g><title>streamline (pyparsing.py:4026) (1 samples, 0.19%)</title><rect x="349" y="2004" width="2" height="15" fill="rgb(234,23,1)"/><text x="352.00" y="2014.50"></text></g><g><title>streamline (pyparsing.py:3914) (1 samples, 0.19%)</title><rect x="349" y="2020" width="2" height="15" fill="rgb(243,206,20)"/><text x="352.00" y="2030.50"></text></g><g><title>streamline (pyparsing.py:4026) (1 samples, 0.19%)</title><rect x="349" y="2036" width="2" height="15" fill="rgb(243,139,11)"/><text x="352.00" y="2046.50"></text></g><g><title>streamline (pyparsing.py:3914) (1 samples, 0.19%)</title><rect x="349" y="2052" width="2" height="15" fill="rgb(218,94,48)"/><text x="352.00" y="2062.50"></text></g><g><title>streamline (pyparsing.py:4026) (1 samples, 0.19%)</title><rect x="349" y="2068" width="2" height="15" fill="rgb(234,183,0)"/><text x="352.00" y="2078.50"></text></g><g><title>streamline (pyparsing.py:3940) (1 samples, 0.19%)</title><rect x="349" y="2084" width="2" height="15" fill="rgb(220,76,33)"/><text x="352.00" y="2094.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.19%)</title><rect x="349" y="2100" width="2" height="15" fill="rgb(219,8,40)"/><text x="352.00" y="2110.50"></text></g><g><title>__str__ (pyparsing.py:4072) (1 samples, 0.19%)</title><rect x="349" y="2116" width="2" height="15" fill="rgb(253,53,8)"/><text x="352.00" y="2126.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.19%)</title><rect x="349" y="2132" width="2" height="15" fill="rgb(237,45,54)"/><text x="352.00" y="2142.50"></text></g><g><title>&lt;genexpr&gt; (pyparsing.py:4072) (1 samples, 0.19%)</title><rect x="349" y="2148" width="2" height="15" fill="rgb(226,21,10)"/><text x="352.00" y="2158.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.19%)</title><rect x="349" y="2164" width="2" height="15" fill="rgb(223,102,26)"/><text x="352.00" y="2174.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:4) (9 samples, 1.68%)</title><rect x="333" y="52" width="20" height="15" fill="rgb(234,0,15)"/><text x="336.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.68%)</title><rect x="333" y="68" width="20" height="15" fill="rgb(253,170,8)"/><text x="336.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.68%)</title><rect x="333" y="84" width="20" height="15" fill="rgb(250,104,15)"/><text x="336.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.68%)</title><rect x="333" y="100" width="20" height="15" fill="rgb(208,157,9)"/><text x="336.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.68%)</title><rect x="333" y="116" width="20" height="15" fill="rgb(233,17,16)"/><text x="336.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.68%)</title><rect x="333" y="132" width="20" height="15" fill="rgb(245,136,27)"/><text x="336.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:7) (5 samples, 0.93%)</title><rect x="342" y="148" width="11" height="15" fill="rgb(206,186,46)"/><text x="345.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.93%)</title><rect x="342" y="164" width="11" height="15" fill="rgb(253,160,35)"/><text x="345.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.93%)</title><rect x="342" y="180" width="11" height="15" fill="rgb(213,47,30)"/><text x="345.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.93%)</title><rect x="342" y="196" width="11" height="15" fill="rgb(234,65,36)"/><text x="345.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.93%)</title><rect x="342" y="212" width="11" height="15" fill="rgb(211,79,38)"/><text x="345.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.93%)</title><rect x="342" y="228" width="11" height="15" fill="rgb(253,189,10)"/><text x="345.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.56%)</title><rect x="346" y="244" width="7" height="15" fill="rgb(242,82,0)"/><text x="349.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="346" y="260" width="7" height="15" fill="rgb(252,1,42)"/><text x="349.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="346" y="276" width="7" height="15" fill="rgb(229,138,0)"/><text x="349.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="346" y="292" width="7" height="15" fill="rgb(215,5,16)"/><text x="349.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="346" y="308" width="7" height="15" fill="rgb(237,101,47)"/><text x="349.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="346" y="324" width="7" height="15" fill="rgb(248,158,25)"/><text x="349.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.56%)</title><rect x="346" y="340" width="7" height="15" fill="rgb(229,225,40)"/><text x="349.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="346" y="356" width="7" height="15" fill="rgb(206,108,35)"/><text x="349.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="346" y="372" width="7" height="15" fill="rgb(229,207,28)"/><text x="349.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="346" y="388" width="7" height="15" fill="rgb(217,42,33)"/><text x="349.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="346" y="404" width="7" height="15" fill="rgb(208,28,48)"/><text x="349.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="346" y="420" width="7" height="15" fill="rgb(215,50,46)"/><text x="349.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.56%)</title><rect x="346" y="436" width="7" height="15" fill="rgb(212,192,35)"/><text x="349.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="346" y="452" width="7" height="15" fill="rgb(242,124,4)"/><text x="349.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="346" y="468" width="7" height="15" fill="rgb(208,99,7)"/><text x="349.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="346" y="484" width="7" height="15" fill="rgb(221,165,0)"/><text x="349.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="346" y="500" width="7" height="15" fill="rgb(243,47,2)"/><text x="349.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="346" y="516" width="7" height="15" fill="rgb(224,200,33)"/><text x="349.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.56%)</title><rect x="346" y="532" width="7" height="15" fill="rgb(233,176,18)"/><text x="349.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="346" y="548" width="7" height="15" fill="rgb(249,200,22)"/><text x="349.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="346" y="564" width="7" height="15" fill="rgb(247,89,47)"/><text x="349.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="346" y="580" width="7" height="15" fill="rgb(238,148,0)"/><text x="349.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="346" y="596" width="7" height="15" fill="rgb(208,214,39)"/><text x="349.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="346" y="612" width="7" height="15" fill="rgb(247,132,7)"/><text x="349.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.37%)</title><rect x="349" y="628" width="4" height="15" fill="rgb(249,2,6)"/><text x="352.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="349" y="644" width="4" height="15" fill="rgb(253,207,10)"/><text x="352.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="349" y="660" width="4" height="15" fill="rgb(213,151,22)"/><text x="352.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="349" y="676" width="4" height="15" fill="rgb(244,58,27)"/><text x="352.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="349" y="692" width="4" height="15" fill="rgb(206,184,16)"/><text x="352.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="708" width="4" height="15" fill="rgb(220,143,45)"/><text x="352.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.37%)</title><rect x="349" y="724" width="4" height="15" fill="rgb(254,76,22)"/><text x="352.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="349" y="740" width="4" height="15" fill="rgb(246,21,41)"/><text x="352.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="349" y="756" width="4" height="15" fill="rgb(246,127,6)"/><text x="352.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="349" y="772" width="4" height="15" fill="rgb(212,102,54)"/><text x="352.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="349" y="788" width="4" height="15" fill="rgb(233,145,17)"/><text x="352.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="804" width="4" height="15" fill="rgb(231,103,36)"/><text x="352.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.37%)</title><rect x="349" y="820" width="4" height="15" fill="rgb(236,200,3)"/><text x="352.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="349" y="836" width="4" height="15" fill="rgb(251,39,15)"/><text x="352.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="349" y="852" width="4" height="15" fill="rgb(218,212,7)"/><text x="352.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="349" y="868" width="4" height="15" fill="rgb(211,208,18)"/><text x="352.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="349" y="884" width="4" height="15" fill="rgb(243,80,5)"/><text x="352.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="900" width="4" height="15" fill="rgb(219,56,34)"/><text x="352.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.37%)</title><rect x="349" y="916" width="4" height="15" fill="rgb(235,145,31)"/><text x="352.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="349" y="932" width="4" height="15" fill="rgb(226,184,14)"/><text x="352.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="349" y="948" width="4" height="15" fill="rgb(231,139,45)"/><text x="352.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="349" y="964" width="4" height="15" fill="rgb(219,58,28)"/><text x="352.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="349" y="980" width="4" height="15" fill="rgb(205,12,13)"/><text x="352.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="996" width="4" height="15" fill="rgb(221,41,21)"/><text x="352.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.37%)</title><rect x="349" y="1012" width="4" height="15" fill="rgb(221,34,7)"/><text x="352.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="349" y="1028" width="4" height="15" fill="rgb(219,199,44)"/><text x="352.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="349" y="1044" width="4" height="15" fill="rgb(233,136,21)"/><text x="352.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="349" y="1060" width="4" height="15" fill="rgb(252,58,38)"/><text x="352.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="349" y="1076" width="4" height="15" fill="rgb(219,136,5)"/><text x="352.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="1092" width="4" height="15" fill="rgb(248,132,6)"/><text x="352.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.37%)</title><rect x="349" y="1108" width="4" height="15" fill="rgb(215,144,35)"/><text x="352.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="349" y="1124" width="4" height="15" fill="rgb(248,178,32)"/><text x="352.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="349" y="1140" width="4" height="15" fill="rgb(234,59,10)"/><text x="352.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="349" y="1156" width="4" height="15" fill="rgb(244,84,52)"/><text x="352.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="349" y="1172" width="4" height="15" fill="rgb(240,188,38)"/><text x="352.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="1188" width="4" height="15" fill="rgb(216,167,38)"/><text x="352.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.37%)</title><rect x="349" y="1204" width="4" height="15" fill="rgb(219,113,44)"/><text x="352.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="349" y="1220" width="4" height="15" fill="rgb(253,228,13)"/><text x="352.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="349" y="1236" width="4" height="15" fill="rgb(206,229,8)"/><text x="352.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="349" y="1252" width="4" height="15" fill="rgb(236,182,52)"/><text x="352.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="349" y="1268" width="4" height="15" fill="rgb(231,80,8)"/><text x="352.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="1284" width="4" height="15" fill="rgb(253,132,38)"/><text x="352.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.37%)</title><rect x="349" y="1300" width="4" height="15" fill="rgb(234,144,52)"/><text x="352.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="349" y="1316" width="4" height="15" fill="rgb(208,156,17)"/><text x="352.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="349" y="1332" width="4" height="15" fill="rgb(226,95,11)"/><text x="352.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="349" y="1348" width="4" height="15" fill="rgb(228,80,10)"/><text x="352.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="349" y="1364" width="4" height="15" fill="rgb(225,205,3)"/><text x="352.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="1380" width="4" height="15" fill="rgb(241,40,53)"/><text x="352.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.37%)</title><rect x="349" y="1396" width="4" height="15" fill="rgb(227,61,19)"/><text x="352.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="349" y="1412" width="4" height="15" fill="rgb(230,16,8)"/><text x="352.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="349" y="1428" width="4" height="15" fill="rgb(252,190,25)"/><text x="352.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="349" y="1444" width="4" height="15" fill="rgb(223,93,5)"/><text x="352.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="349" y="1460" width="4" height="15" fill="rgb(217,8,2)"/><text x="352.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="1476" width="4" height="15" fill="rgb(240,110,39)"/><text x="352.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (2 samples, 0.37%)</title><rect x="349" y="1492" width="4" height="15" fill="rgb(240,37,53)"/><text x="352.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="349" y="1508" width="4" height="15" fill="rgb(230,131,34)"/><text x="352.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.37%)</title><rect x="349" y="1524" width="4" height="15" fill="rgb(212,226,22)"/><text x="352.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="1540" width="4" height="15" fill="rgb(230,182,31)"/><text x="352.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="349" y="1556" width="4" height="15" fill="rgb(224,127,21)"/><text x="352.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="349" y="1572" width="4" height="15" fill="rgb(222,34,54)"/><text x="352.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="349" y="1588" width="4" height="15" fill="rgb(237,90,42)"/><text x="352.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="349" y="1604" width="4" height="15" fill="rgb(214,172,22)"/><text x="352.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="1620" width="4" height="15" fill="rgb(247,90,36)"/><text x="352.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (2 samples, 0.37%)</title><rect x="349" y="1636" width="4" height="15" fill="rgb(240,167,14)"/><text x="352.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.37%)</title><rect x="349" y="1652" width="4" height="15" fill="rgb(209,27,25)"/><text x="352.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="1668" width="4" height="15" fill="rgb(253,58,8)"/><text x="352.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="349" y="1684" width="4" height="15" fill="rgb(205,183,34)"/><text x="352.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="349" y="1700" width="4" height="15" fill="rgb(253,26,8)"/><text x="352.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="349" y="1716" width="4" height="15" fill="rgb(219,95,4)"/><text x="352.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="349" y="1732" width="4" height="15" fill="rgb(245,124,26)"/><text x="352.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="1748" width="4" height="15" fill="rgb(227,179,41)"/><text x="352.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (2 samples, 0.37%)</title><rect x="349" y="1764" width="4" height="15" fill="rgb(206,117,15)"/><text x="352.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="349" y="1780" width="4" height="15" fill="rgb(205,26,22)"/><text x="352.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="349" y="1796" width="4" height="15" fill="rgb(248,147,2)"/><text x="352.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="349" y="1812" width="4" height="15" fill="rgb(222,99,49)"/><text x="352.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="349" y="1828" width="4" height="15" fill="rgb(218,133,47)"/><text x="352.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="1844" width="4" height="15" fill="rgb(225,89,22)"/><text x="352.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (2 samples, 0.37%)</title><rect x="349" y="1860" width="4" height="15" fill="rgb(251,37,51)"/><text x="352.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.37%)</title><rect x="349" y="1876" width="4" height="15" fill="rgb(230,91,7)"/><text x="352.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.37%)</title><rect x="349" y="1892" width="4" height="15" fill="rgb(249,139,16)"/><text x="352.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.37%)</title><rect x="349" y="1908" width="4" height="15" fill="rgb(244,225,8)"/><text x="352.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.37%)</title><rect x="349" y="1924" width="4" height="15" fill="rgb(214,163,30)"/><text x="352.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.37%)</title><rect x="349" y="1940" width="4" height="15" fill="rgb(215,22,10)"/><text x="352.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6338) (2 samples, 0.37%)</title><rect x="349" y="1956" width="4" height="15" fill="rgb(238,161,10)"/><text x="352.00" y="1966.50"></text></g><g><title>srange (pyparsing.py:5688) (2 samples, 0.37%)</title><rect x="349" y="1972" width="4" height="15" fill="rgb(231,196,41)"/><text x="352.00" y="1982.50"></text></g><g><title>parseString (pyparsing.py:1935) (1 samples, 0.19%)</title><rect x="351" y="1988" width="2" height="15" fill="rgb(212,102,20)"/><text x="354.00" y="1998.50"></text></g><g><title>_parseNoCache (pyparsing.py:1675) (1 samples, 0.19%)</title><rect x="351" y="2004" width="2" height="15" fill="rgb(228,103,53)"/><text x="354.00" y="2014.50"></text></g><g><title>parseImpl (pyparsing.py:4033) (1 samples, 0.19%)</title><rect x="351" y="2020" width="2" height="15" fill="rgb(211,125,46)"/><text x="354.00" y="2030.50"></text></g><g><title>_parseNoCache (pyparsing.py:1683) (1 samples, 0.19%)</title><rect x="351" y="2036" width="2" height="15" fill="rgb(209,207,12)"/><text x="354.00" y="2046.50"></text></g><g><title>__init__ (pyparsing.py:556) (1 samples, 0.19%)</title><rect x="351" y="2052" width="2" height="15" fill="rgb(223,181,11)"/><text x="354.00" y="2062.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (1 samples, 0.19%)</title><rect x="355" y="340" width="2" height="15" fill="rgb(224,86,40)"/><text x="358.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (2 samples, 0.37%)</title><rect x="355" y="324" width="5" height="15" fill="rgb(250,135,11)"/><text x="358.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (1 samples, 0.19%)</title><rect x="357" y="340" width="3" height="15" fill="rgb(236,113,11)"/><text x="360.00" y="350.50"></text></g><g><title>PyInt_Check (npy_3kcompat.h:37) (1 samples, 0.19%)</title><rect x="357" y="356" width="3" height="15" fill="rgb(247,163,13)"/><text x="360.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (3 samples, 0.56%)</title><rect x="355" y="212" width="7" height="15" fill="rgb(211,206,29)"/><text x="358.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (3 samples, 0.56%)</title><rect x="355" y="228" width="7" height="15" fill="rgb(217,120,0)"/><text x="358.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (3 samples, 0.56%)</title><rect x="355" y="244" width="7" height="15" fill="rgb(232,108,32)"/><text x="358.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (3 samples, 0.56%)</title><rect x="355" y="260" width="7" height="15" fill="rgb(216,123,8)"/><text x="358.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (3 samples, 0.56%)</title><rect x="355" y="276" width="7" height="15" fill="rgb(220,101,13)"/><text x="358.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (3 samples, 0.56%)</title><rect x="355" y="292" width="7" height="15" fill="rgb(240,12,21)"/><text x="358.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (3 samples, 0.56%)</title><rect x="355" y="308" width="7" height="15" fill="rgb(217,46,20)"/><text x="358.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (1 samples, 0.19%)</title><rect x="360" y="324" width="2" height="15" fill="rgb(252,204,35)"/><text x="363.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.19%)</title><rect x="360" y="340" width="2" height="15" fill="rgb(205,79,52)"/><text x="363.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.19%)</title><rect x="362" y="212" width="2" height="15" fill="rgb(253,11,2)"/><text x="365.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.19%)</title><rect x="362" y="228" width="2" height="15" fill="rgb(246,61,30)"/><text x="365.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.19%)</title><rect x="362" y="244" width="2" height="15" fill="rgb(216,12,48)"/><text x="365.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:301) (1 samples, 0.19%)</title><rect x="362" y="260" width="2" height="15" fill="rgb(234,206,34)"/><text x="365.00" y="270.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.19%)</title><rect x="362" y="276" width="2" height="15" fill="rgb(249,85,21)"/><text x="365.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (5 samples, 0.93%)</title><rect x="355" y="196" width="11" height="15" fill="rgb(246,165,4)"/><text x="358.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.19%)</title><rect x="364" y="212" width="2" height="15" fill="rgb(214,191,28)"/><text x="367.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.19%)</title><rect x="364" y="228" width="2" height="15" fill="rgb(234,129,28)"/><text x="367.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="364" y="244" width="2" height="15" fill="rgb(207,209,20)"/><text x="367.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.19%)</title><rect x="364" y="260" width="2" height="15" fill="rgb(222,12,51)"/><text x="367.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.19%)</title><rect x="364" y="276" width="2" height="15" fill="rgb(240,51,22)"/><text x="367.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="366" y="244" width="2" height="15" fill="rgb(238,32,44)"/><text x="369.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="366" y="260" width="2" height="15" fill="rgb(235,99,30)"/><text x="369.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="366" y="276" width="2" height="15" fill="rgb(230,67,12)"/><text x="369.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="366" y="292" width="2" height="15" fill="rgb(233,138,29)"/><text x="369.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="366" y="308" width="2" height="15" fill="rgb(219,48,41)"/><text x="369.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (2 samples, 0.37%)</title><rect x="366" y="196" width="5" height="15" fill="rgb(247,104,15)"/><text x="369.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.37%)</title><rect x="366" y="212" width="5" height="15" fill="rgb(220,108,44)"/><text x="369.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (2 samples, 0.37%)</title><rect x="366" y="228" width="5" height="15" fill="rgb(227,206,53)"/><text x="369.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="368" y="244" width="3" height="15" fill="rgb(238,189,34)"/><text x="371.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="368" y="260" width="3" height="15" fill="rgb(218,139,31)"/><text x="371.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="368" y="276" width="3" height="15" fill="rgb(229,102,53)"/><text x="371.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.19%)</title><rect x="368" y="292" width="3" height="15" fill="rgb(209,114,34)"/><text x="371.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (1 samples, 0.19%)</title><rect x="368" y="308" width="3" height="15" fill="rgb(229,170,10)"/><text x="371.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.19%)</title><rect x="368" y="324" width="3" height="15" fill="rgb(233,130,16)"/><text x="371.00" y="334.50"></text></g><g><title>0x7faf235db1a0 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="368" y="340" width="3" height="15" fill="rgb(224,41,15)"/><text x="371.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (9 samples, 1.68%)</title><rect x="353" y="180" width="20" height="15" fill="rgb(215,158,45)"/><text x="356.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (1 samples, 0.19%)</title><rect x="371" y="196" width="2" height="15" fill="rgb(213,25,48)"/><text x="374.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (1 samples, 0.19%)</title><rect x="371" y="212" width="2" height="15" fill="rgb(219,18,23)"/><text x="374.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (1 samples, 0.19%)</title><rect x="371" y="228" width="2" height="15" fill="rgb(238,105,28)"/><text x="374.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="371" y="244" width="2" height="15" fill="rgb(248,73,28)"/><text x="374.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="371" y="260" width="2" height="15" fill="rgb(231,92,26)"/><text x="374.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="371" y="276" width="2" height="15" fill="rgb(241,105,1)"/><text x="374.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="371" y="292" width="2" height="15" fill="rgb(207,211,30)"/><text x="374.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="371" y="308" width="2" height="15" fill="rgb(221,177,53)"/><text x="374.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.19%)</title><rect x="371" y="324" width="2" height="15" fill="rgb(211,3,14)"/><text x="374.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.19%)</title><rect x="371" y="340" width="2" height="15" fill="rgb(253,117,11)"/><text x="374.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.19%)</title><rect x="373" y="180" width="2" height="15" fill="rgb(208,74,17)"/><text x="376.00" y="190.50"></text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:18) (11 samples, 2.05%)</title><rect x="353" y="100" width="24" height="15" fill="rgb(247,129,54)"/><text x="356.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (11 samples, 2.05%)</title><rect x="353" y="116" width="24" height="15" fill="rgb(205,26,2)"/><text x="356.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (11 samples, 2.05%)</title><rect x="353" y="132" width="24" height="15" fill="rgb(220,153,42)"/><text x="356.00" y="142.50">&lt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (11 samples, 2.05%)</title><rect x="353" y="148" width="24" height="15" fill="rgb(242,197,6)"/><text x="356.00" y="158.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (11 samples, 2.05%)</title><rect x="353" y="164" width="24" height="15" fill="rgb(234,44,43)"/><text x="356.00" y="174.50">_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.19%)</title><rect x="375" y="180" width="2" height="15" fill="rgb(238,158,18)"/><text x="378.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.19%)</title><rect x="379" y="164" width="3" height="15" fill="rgb(223,81,30)"/><text x="382.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (9 samples, 1.68%)</title><rect x="386" y="180" width="20" height="15" fill="rgb(245,2,29)"/><text x="389.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.75%)</title><rect x="397" y="196" width="9" height="15" fill="rgb(218,85,17)"/><text x="400.00" y="206.50"></text></g><g><title>recursive_tolist (convert.c:100) (1 samples, 0.19%)</title><rect x="423" y="244" width="3" height="15" fill="rgb(245,83,38)"/><text x="426.00" y="254.50"></text></g><g><title>PyArray_ToList (convert.c:120) (2 samples, 0.37%)</title><rect x="423" y="228" width="5" height="15" fill="rgb(228,86,45)"/><text x="426.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (1 samples, 0.19%)</title><rect x="426" y="244" width="2" height="15" fill="rgb(224,23,36)"/><text x="429.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (3 samples, 0.56%)</title><rect x="423" y="212" width="7" height="15" fill="rgb(233,8,23)"/><text x="426.00" y="222.50"></text></g><g><title>array_ravel (methods.c:2438) (1 samples, 0.19%)</title><rect x="428" y="228" width="2" height="15" fill="rgb(243,73,50)"/><text x="431.00" y="238.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:478) (1 samples, 0.19%)</title><rect x="430" y="308" width="2" height="15" fill="rgb(223,122,36)"/><text x="433.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:127) (1 samples, 0.19%)</title><rect x="432" y="324" width="2" height="15" fill="rgb(254,184,17)"/><text x="435.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (4 samples, 0.75%)</title><rect x="434" y="340" width="9" height="15" fill="rgb(227,58,25)"/><text x="437.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (1 samples, 0.19%)</title><rect x="443" y="340" width="2" height="15" fill="rgb(249,141,50)"/><text x="446.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (6 samples, 1.12%)</title><rect x="434" y="324" width="14" height="15" fill="rgb(242,31,13)"/><text x="437.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (1 samples, 0.19%)</title><rect x="445" y="340" width="3" height="15" fill="rgb(248,19,35)"/><text x="448.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:511) (1 samples, 0.19%)</title><rect x="448" y="324" width="2" height="15" fill="rgb(218,91,13)"/><text x="451.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (10 samples, 1.87%)</title><rect x="430" y="276" width="22" height="15" fill="rgb(231,138,16)"/><text x="433.00" y="286.50">P..</text></g><g><title>PyArray_DTypeFromObject (common.c:108) (10 samples, 1.87%)</title><rect x="430" y="292" width="22" height="15" fill="rgb(211,168,9)"/><text x="433.00" y="302.50">P..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (9 samples, 1.68%)</title><rect x="432" y="308" width="20" height="15" fill="rgb(222,128,41)"/><text x="435.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (1 samples, 0.19%)</title><rect x="450" y="324" width="2" height="15" fill="rgb(209,87,22)"/><text x="453.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.19%)</title><rect x="450" y="340" width="2" height="15" fill="rgb(221,66,47)"/><text x="453.00" y="350.50"></text></g><g><title>discover_dimensions (ctors.c:668) (1 samples, 0.19%)</title><rect x="452" y="308" width="2" height="15" fill="rgb(208,159,20)"/><text x="455.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:701) (1 samples, 0.19%)</title><rect x="454" y="308" width="2" height="15" fill="rgb(221,87,34)"/><text x="457.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:703) (3 samples, 0.56%)</title><rect x="456" y="308" width="7" height="15" fill="rgb(218,101,0)"/><text x="459.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (17 samples, 3.17%)</title><rect x="430" y="260" width="37" height="15" fill="rgb(219,184,48)"/><text x="433.00" y="270.50">PyA..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (7 samples, 1.31%)</title><rect x="452" y="276" width="15" height="15" fill="rgb(244,60,19)"/><text x="455.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:884) (7 samples, 1.31%)</title><rect x="452" y="292" width="15" height="15" fill="rgb(211,146,28)"/><text x="455.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:912) (2 samples, 0.37%)</title><rect x="463" y="308" width="4" height="15" fill="rgb(214,121,33)"/><text x="466.00" y="318.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (2 samples, 0.37%)</title><rect x="467" y="292" width="5" height="15" fill="rgb(213,46,21)"/><text x="470.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:549) (1 samples, 0.19%)</title><rect x="472" y="292" width="2" height="15" fill="rgb(249,34,43)"/><text x="475.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (3 samples, 0.56%)</title><rect x="474" y="324" width="7" height="15" fill="rgb(210,35,48)"/><text x="477.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (2 samples, 0.37%)</title><rect x="476" y="340" width="5" height="15" fill="rgb(249,49,53)"/><text x="479.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1539) (24 samples, 4.48%)</title><rect x="430" y="228" width="53" height="15" fill="rgb(209,156,30)"/><text x="433.00" y="238.50">array..</text></g><g><title>prepare_index (mapping.c:516) (24 samples, 4.48%)</title><rect x="430" y="244" width="53" height="15" fill="rgb(213,164,49)"/><text x="433.00" y="254.50">prepa..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (7 samples, 1.31%)</title><rect x="467" y="260" width="16" height="15" fill="rgb(241,119,17)"/><text x="470.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (7 samples, 1.31%)</title><rect x="467" y="276" width="16" height="15" fill="rgb(214,227,40)"/><text x="470.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (4 samples, 0.75%)</title><rect x="474" y="292" width="9" height="15" fill="rgb(225,159,0)"/><text x="477.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (4 samples, 0.75%)</title><rect x="474" y="308" width="9" height="15" fill="rgb(247,70,16)"/><text x="477.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:218) (1 samples, 0.19%)</title><rect x="481" y="324" width="2" height="15" fill="rgb(243,107,10)"/><text x="484.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="483" y="276" width="2" height="15" fill="rgb(226,150,40)"/><text x="486.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1168) (1 samples, 0.19%)</title><rect x="483" y="292" width="2" height="15" fill="rgb(229,151,54)"/><text x="486.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (26 samples, 4.85%)</title><rect x="430" y="212" width="57" height="15" fill="rgb(220,28,13)"/><text x="433.00" y="222.50">_run (..</text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.37%)</title><rect x="483" y="228" width="4" height="15" fill="rgb(251,61,28)"/><text x="486.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2823) (2 samples, 0.37%)</title><rect x="483" y="244" width="4" height="15" fill="rgb(209,37,50)"/><text x="486.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (2 samples, 0.37%)</title><rect x="483" y="260" width="4" height="15" fill="rgb(212,217,23)"/><text x="486.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.19%)</title><rect x="485" y="276" width="2" height="15" fill="rgb(237,206,51)"/><text x="488.00" y="286.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2088) (1 samples, 0.19%)</title><rect x="485" y="292" width="2" height="15" fill="rgb(237,180,38)"/><text x="488.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.19%)</title><rect x="487" y="212" width="2" height="15" fill="rgb(244,228,11)"/><text x="490.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.19%)</title><rect x="487" y="228" width="2" height="15" fill="rgb(251,187,34)"/><text x="490.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.19%)</title><rect x="487" y="244" width="2" height="15" fill="rgb(232,135,43)"/><text x="490.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.19%)</title><rect x="487" y="260" width="2" height="15" fill="rgb(216,121,3)"/><text x="490.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.19%)</title><rect x="487" y="276" width="2" height="15" fill="rgb(206,111,29)"/><text x="490.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.19%)</title><rect x="487" y="292" width="2" height="15" fill="rgb(247,79,29)"/><text x="490.00" y="302.50"></text></g><g><title>array_astype (methods.c:828) (1 samples, 0.19%)</title><rect x="489" y="244" width="3" height="15" fill="rgb(253,102,28)"/><text x="492.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.19%)</title><rect x="489" y="260" width="3" height="15" fill="rgb(249,23,12)"/><text x="492.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1015) (1 samples, 0.19%)</title><rect x="492" y="308" width="2" height="15" fill="rgb(219,201,14)"/><text x="495.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="494" y="308" width="2" height="15" fill="rgb(247,73,29)"/><text x="497.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.19%)</title><rect x="494" y="324" width="2" height="15" fill="rgb(217,38,29)"/><text x="497.00" y="334.50"></text></g><g><title>array_astype (methods.c:841) (3 samples, 0.56%)</title><rect x="492" y="244" width="6" height="15" fill="rgb(227,20,0)"/><text x="495.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (3 samples, 0.56%)</title><rect x="492" y="260" width="6" height="15" fill="rgb(216,125,52)"/><text x="495.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (3 samples, 0.56%)</title><rect x="492" y="276" width="6" height="15" fill="rgb(220,208,28)"/><text x="495.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (3 samples, 0.56%)</title><rect x="492" y="292" width="6" height="15" fill="rgb(225,171,23)"/><text x="495.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="496" y="308" width="2" height="15" fill="rgb(230,49,18)"/><text x="499.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="496" y="324" width="2" height="15" fill="rgb(244,93,22)"/><text x="499.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="496" y="340" width="2" height="15" fill="rgb(251,137,17)"/><text x="499.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="496" y="356" width="2" height="15" fill="rgb(252,13,1)"/><text x="499.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="496" y="372" width="2" height="15" fill="rgb(236,186,5)"/><text x="499.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.19%)</title><rect x="498" y="260" width="2" height="15" fill="rgb(233,97,43)"/><text x="501.00" y="270.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.19%)</title><rect x="498" y="276" width="2" height="15" fill="rgb(248,65,31)"/><text x="501.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.19%)</title><rect x="498" y="292" width="2" height="15" fill="rgb(250,146,6)"/><text x="501.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.19%)</title><rect x="500" y="276" width="3" height="15" fill="rgb(233,187,2)"/><text x="503.00" y="286.50"></text></g><g><title>_aligned_contig_cast_float_to_long (lowlevel_strided_loops.c.src:855) (1 samples, 0.19%)</title><rect x="500" y="292" width="3" height="15" fill="rgb(234,124,30)"/><text x="503.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.19%)</title><rect x="503" y="276" width="2" height="15" fill="rgb(221,34,20)"/><text x="506.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="503" y="292" width="2" height="15" fill="rgb(220,3,40)"/><text x="506.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (8 samples, 1.49%)</title><rect x="489" y="212" width="18" height="15" fill="rgb(247,31,34)"/><text x="492.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (8 samples, 1.49%)</title><rect x="489" y="228" width="18" height="15" fill="rgb(212,95,20)"/><text x="492.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (4 samples, 0.75%)</title><rect x="498" y="244" width="9" height="15" fill="rgb(237,99,52)"/><text x="501.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.56%)</title><rect x="500" y="260" width="7" height="15" fill="rgb(214,217,31)"/><text x="503.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.19%)</title><rect x="505" y="276" width="2" height="15" fill="rgb(220,19,54)"/><text x="508.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:62) (1 samples, 0.19%)</title><rect x="505" y="292" width="2" height="15" fill="rgb(230,36,44)"/><text x="508.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.19%)</title><rect x="507" y="212" width="2" height="15" fill="rgb(234,101,34)"/><text x="510.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.19%)</title><rect x="507" y="228" width="2" height="15" fill="rgb(234,33,48)"/><text x="510.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.19%)</title><rect x="507" y="244" width="2" height="15" fill="rgb(214,178,14)"/><text x="510.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.19%)</title><rect x="507" y="260" width="2" height="15" fill="rgb(231,125,36)"/><text x="510.00" y="270.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.19%)</title><rect x="507" y="276" width="2" height="15" fill="rgb(224,214,2)"/><text x="510.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:623) (1 samples, 0.19%)</title><rect x="507" y="292" width="2" height="15" fill="rgb(217,60,44)"/><text x="510.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.19%)</title><rect x="509" y="276" width="2" height="15" fill="rgb(242,73,3)"/><text x="512.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.19%)</title><rect x="509" y="292" width="2" height="15" fill="rgb(214,97,50)"/><text x="512.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.19%)</title><rect x="509" y="308" width="2" height="15" fill="rgb(229,57,52)"/><text x="512.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.19%)</title><rect x="509" y="324" width="2" height="15" fill="rgb(238,196,12)"/><text x="512.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.37%)</title><rect x="509" y="260" width="5" height="15" fill="rgb(205,36,23)"/><text x="512.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.19%)</title><rect x="511" y="276" width="3" height="15" fill="rgb(241,53,33)"/><text x="514.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.19%)</title><rect x="511" y="292" width="3" height="15" fill="rgb(241,217,54)"/><text x="514.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.19%)</title><rect x="511" y="308" width="3" height="15" fill="rgb(227,125,33)"/><text x="514.00" y="318.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:952) (1 samples, 0.19%)</title><rect x="511" y="324" width="3" height="15" fill="rgb(224,52,2)"/><text x="514.00" y="334.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:685) (1 samples, 0.19%)</title><rect x="511" y="340" width="3" height="15" fill="rgb(228,147,50)"/><text x="514.00" y="350.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:61) (1 samples, 0.19%)</title><rect x="514" y="292" width="2" height="15" fill="rgb(220,65,24)"/><text x="517.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="514" y="308" width="2" height="15" fill="rgb(253,135,54)"/><text x="517.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="514" y="324" width="2" height="15" fill="rgb(233,80,13)"/><text x="517.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="514" y="340" width="2" height="15" fill="rgb(215,66,40)"/><text x="517.00" y="350.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (2 samples, 0.37%)</title><rect x="514" y="276" width="4" height="15" fill="rgb(217,52,20)"/><text x="517.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.19%)</title><rect x="516" y="292" width="2" height="15" fill="rgb(205,137,1)"/><text x="519.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.19%)</title><rect x="516" y="308" width="2" height="15" fill="rgb(239,8,11)"/><text x="519.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.19%)</title><rect x="516" y="324" width="2" height="15" fill="rgb(253,171,33)"/><text x="519.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.19%)</title><rect x="516" y="340" width="2" height="15" fill="rgb(245,155,47)"/><text x="519.00" y="350.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.19%)</title><rect x="516" y="356" width="2" height="15" fill="rgb(208,177,40)"/><text x="519.00" y="366.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.19%)</title><rect x="516" y="372" width="2" height="15" fill="rgb(219,115,2)"/><text x="519.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (3 samples, 0.56%)</title><rect x="514" y="260" width="6" height="15" fill="rgb(254,196,19)"/><text x="517.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.19%)</title><rect x="518" y="276" width="2" height="15" fill="rgb(243,223,33)"/><text x="521.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.19%)</title><rect x="520" y="276" width="2" height="15" fill="rgb(227,3,11)"/><text x="523.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.19%)</title><rect x="520" y="292" width="2" height="15" fill="rgb(242,205,10)"/><text x="523.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="520" y="308" width="2" height="15" fill="rgb(246,165,18)"/><text x="523.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:240) (1 samples, 0.19%)</title><rect x="520" y="324" width="2" height="15" fill="rgb(217,110,10)"/><text x="523.00" y="334.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.19%)</title><rect x="520" y="340" width="2" height="15" fill="rgb(247,25,40)"/><text x="523.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="522" y="292" width="3" height="15" fill="rgb(222,95,33)"/><text x="525.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="522" y="308" width="3" height="15" fill="rgb(246,21,8)"/><text x="525.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.19%)</title><rect x="522" y="324" width="3" height="15" fill="rgb(215,152,11)"/><text x="525.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (1 samples, 0.19%)</title><rect x="522" y="340" width="3" height="15" fill="rgb(244,150,25)"/><text x="525.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.37%)</title><rect x="522" y="276" width="5" height="15" fill="rgb(225,229,37)"/><text x="525.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="525" y="292" width="2" height="15" fill="rgb(210,202,48)"/><text x="528.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="525" y="308" width="2" height="15" fill="rgb(249,118,36)"/><text x="528.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.19%)</title><rect x="525" y="324" width="2" height="15" fill="rgb(242,47,5)"/><text x="528.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.19%)</title><rect x="525" y="340" width="2" height="15" fill="rgb(228,229,40)"/><text x="528.00" y="350.50"></text></g><g><title>0x7faf234afd50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="525" y="356" width="2" height="15" fill="rgb(226,99,11)"/><text x="528.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (54 samples, 10.07%)</title><rect x="410" y="196" width="119" height="15" fill="rgb(235,195,23)"/><text x="413.00" y="206.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (9 samples, 1.68%)</title><rect x="509" y="212" width="20" height="15" fill="rgb(247,69,51)"/><text x="512.00" y="222.50"></text></g><g><title>array_add (number.c:330) (9 samples, 1.68%)</title><rect x="509" y="228" width="20" height="15" fill="rgb(205,97,38)"/><text x="512.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.68%)</title><rect x="509" y="244" width="20" height="15" fill="rgb(205,54,11)"/><text x="512.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.75%)</title><rect x="520" y="260" width="9" height="15" fill="rgb(215,18,28)"/><text x="523.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1749) (1 samples, 0.19%)</title><rect x="527" y="276" width="2" height="15" fill="rgb(251,215,44)"/><text x="530.00" y="286.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (3 samples, 0.56%)</title><rect x="529" y="260" width="7" height="15" fill="rgb(254,45,4)"/><text x="532.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (2 samples, 0.37%)</title><rect x="531" y="276" width="5" height="15" fill="rgb(229,144,53)"/><text x="534.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.37%)</title><rect x="531" y="292" width="5" height="15" fill="rgb(209,124,13)"/><text x="534.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (2 samples, 0.37%)</title><rect x="531" y="308" width="5" height="15" fill="rgb(244,229,30)"/><text x="534.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.19%)</title><rect x="533" y="324" width="3" height="15" fill="rgb(230,224,54)"/><text x="536.00" y="334.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.19%)</title><rect x="533" y="340" width="3" height="15" fill="rgb(241,57,20)"/><text x="536.00" y="350.50"></text></g><g><title>0x7faf234a5e7e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="533" y="356" width="3" height="15" fill="rgb(210,218,13)"/><text x="536.00" y="366.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:14) (1 samples, 0.19%)</title><rect x="536" y="260" width="2" height="15" fill="rgb(225,38,39)"/><text x="539.00" y="270.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:574) (2 samples, 0.37%)</title><rect x="538" y="308" width="4" height="15" fill="rgb(226,68,24)"/><text x="541.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (2 samples, 0.37%)</title><rect x="538" y="324" width="4" height="15" fill="rgb(233,96,16)"/><text x="541.00" y="334.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (3 samples, 0.56%)</title><rect x="538" y="260" width="6" height="15" fill="rgb(247,138,30)"/><text x="541.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (3 samples, 0.56%)</title><rect x="538" y="276" width="6" height="15" fill="rgb(213,131,32)"/><text x="541.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.56%)</title><rect x="538" y="292" width="6" height="15" fill="rgb(205,149,32)"/><text x="541.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (1 samples, 0.19%)</title><rect x="542" y="308" width="2" height="15" fill="rgb(245,81,6)"/><text x="545.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (8 samples, 1.49%)</title><rect x="529" y="196" width="18" height="15" fill="rgb(215,85,35)"/><text x="532.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (8 samples, 1.49%)</title><rect x="529" y="212" width="18" height="15" fill="rgb(208,15,1)"/><text x="532.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (8 samples, 1.49%)</title><rect x="529" y="228" width="18" height="15" fill="rgb(249,190,36)"/><text x="532.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (8 samples, 1.49%)</title><rect x="529" y="244" width="18" height="15" fill="rgb(238,214,20)"/><text x="532.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:16) (1 samples, 0.19%)</title><rect x="544" y="260" width="3" height="15" fill="rgb(252,139,16)"/><text x="547.00" y="270.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.19%)</title><rect x="544" y="276" width="3" height="15" fill="rgb(215,75,38)"/><text x="547.00" y="286.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.19%)</title><rect x="544" y="292" width="3" height="15" fill="rgb(232,142,33)"/><text x="547.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.19%)</title><rect x="544" y="308" width="3" height="15" fill="rgb(229,64,49)"/><text x="547.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.19%)</title><rect x="544" y="324" width="3" height="15" fill="rgb(211,108,11)"/><text x="547.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="544" y="340" width="3" height="15" fill="rgb(218,65,54)"/><text x="547.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="544" y="356" width="3" height="15" fill="rgb(238,8,2)"/><text x="547.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="544" y="372" width="3" height="15" fill="rgb(240,203,0)"/><text x="547.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="544" y="388" width="3" height="15" fill="rgb(233,206,5)"/><text x="547.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="544" y="404" width="3" height="15" fill="rgb(212,217,19)"/><text x="547.00" y="414.50"></text></g><g><title>0x7faf23490e72 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="544" y="420" width="3" height="15" fill="rgb(217,68,54)"/><text x="547.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.19%)</title><rect x="549" y="276" width="2" height="15" fill="rgb(251,129,51)"/><text x="552.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.19%)</title><rect x="549" y="292" width="2" height="15" fill="rgb(238,183,25)"/><text x="552.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.19%)</title><rect x="549" y="308" width="2" height="15" fill="rgb(247,214,14)"/><text x="552.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.19%)</title><rect x="549" y="324" width="2" height="15" fill="rgb(229,216,45)"/><text x="552.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="549" y="340" width="2" height="15" fill="rgb(242,151,49)"/><text x="552.00" y="350.50"></text></g><g><title>0x7faf234477a5 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="549" y="356" width="2" height="15" fill="rgb(243,106,47)"/><text x="552.00" y="366.50"></text></g><g><title>0x7faf23447a05 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="549" y="372" width="2" height="15" fill="rgb(206,44,42)"/><text x="552.00" y="382.50"></text></g><g><title>0x7faf235db1a0 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="555" y="340" width="3" height="15" fill="rgb(218,225,42)"/><text x="558.00" y="350.50"></text></g><g><title>0x7faf2360ee17 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="558" y="340" width="2" height="15" fill="rgb(205,121,30)"/><text x="561.00" y="350.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (6 samples, 1.12%)</title><rect x="551" y="292" width="13" height="15" fill="rgb(235,42,37)"/><text x="554.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (6 samples, 1.12%)</title><rect x="551" y="308" width="13" height="15" fill="rgb(240,172,37)"/><text x="554.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (6 samples, 1.12%)</title><rect x="551" y="324" width="13" height="15" fill="rgb(234,73,31)"/><text x="554.00" y="334.50"></text></g><g><title>0x7faf2360ee62 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="560" y="340" width="4" height="15" fill="rgb(212,96,25)"/><text x="563.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (9 samples, 1.68%)</title><rect x="547" y="228" width="19" height="15" fill="rgb(222,228,21)"/><text x="550.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.49%)</title><rect x="549" y="244" width="17" height="15" fill="rgb(222,57,47)"/><text x="552.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.49%)</title><rect x="549" y="260" width="17" height="15" fill="rgb(245,152,1)"/><text x="552.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (7 samples, 1.31%)</title><rect x="551" y="276" width="15" height="15" fill="rgb(215,98,43)"/><text x="554.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.19%)</title><rect x="564" y="292" width="2" height="15" fill="rgb(217,227,33)"/><text x="567.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.19%)</title><rect x="566" y="308" width="3" height="15" fill="rgb(238,74,6)"/><text x="569.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.19%)</title><rect x="566" y="324" width="3" height="15" fill="rgb(227,90,13)"/><text x="569.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="566" y="340" width="3" height="15" fill="rgb(232,124,4)"/><text x="569.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (2 samples, 0.37%)</title><rect x="566" y="228" width="5" height="15" fill="rgb(248,32,31)"/><text x="569.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.37%)</title><rect x="566" y="244" width="5" height="15" fill="rgb(252,3,45)"/><text x="569.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.37%)</title><rect x="566" y="260" width="5" height="15" fill="rgb(217,85,42)"/><text x="569.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.37%)</title><rect x="566" y="276" width="5" height="15" fill="rgb(216,81,54)"/><text x="569.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.37%)</title><rect x="566" y="292" width="5" height="15" fill="rgb(234,144,33)"/><text x="569.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.19%)</title><rect x="569" y="308" width="2" height="15" fill="rgb(252,40,32)"/><text x="572.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.19%)</title><rect x="569" y="324" width="2" height="15" fill="rgb(222,44,38)"/><text x="572.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:454) (1 samples, 0.19%)</title><rect x="569" y="340" width="2" height="15" fill="rgb(252,214,0)"/><text x="572.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.19%)</title><rect x="569" y="356" width="2" height="15" fill="rgb(210,111,10)"/><text x="572.00" y="366.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.19%)</title><rect x="569" y="372" width="2" height="15" fill="rgb(238,151,4)"/><text x="572.00" y="382.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:243) (1 samples, 0.19%)</title><rect x="569" y="388" width="2" height="15" fill="rgb(232,228,53)"/><text x="572.00" y="398.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1349) (1 samples, 0.19%)</title><rect x="573" y="292" width="2" height="15" fill="rgb(254,132,8)"/><text x="576.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="573" y="308" width="2" height="15" fill="rgb(236,211,46)"/><text x="576.00" y="318.50"></text></g><g><title>0x7faf2360ee4e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="580" y="340" width="2" height="15" fill="rgb(229,11,39)"/><text x="583.00" y="350.50"></text></g><g><title>0x7faf2360ee7e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="582" y="340" width="2" height="15" fill="rgb(237,176,51)"/><text x="585.00" y="350.50"></text></g><g><title>0x7faf2360eea2 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="584" y="340" width="4" height="15" fill="rgb(212,198,13)"/><text x="587.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:30) (9 samples, 1.68%)</title><rect x="571" y="228" width="20" height="15" fill="rgb(253,45,36)"/><text x="574.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.49%)</title><rect x="573" y="244" width="18" height="15" fill="rgb(205,43,13)"/><text x="576.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.49%)</title><rect x="573" y="260" width="18" height="15" fill="rgb(209,191,15)"/><text x="576.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (8 samples, 1.49%)</title><rect x="573" y="276" width="18" height="15" fill="rgb(241,87,19)"/><text x="576.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (7 samples, 1.31%)</title><rect x="575" y="292" width="16" height="15" fill="rgb(206,18,28)"/><text x="578.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (7 samples, 1.31%)</title><rect x="575" y="308" width="16" height="15" fill="rgb(245,109,23)"/><text x="578.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (7 samples, 1.31%)</title><rect x="575" y="324" width="16" height="15" fill="rgb(210,22,51)"/><text x="578.00" y="334.50"></text></g><g><title>0x7faf2360eea6 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="588" y="340" width="3" height="15" fill="rgb(247,103,12)"/><text x="591.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="595" y="308" width="2" height="15" fill="rgb(247,27,20)"/><text x="598.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="595" y="324" width="2" height="15" fill="rgb(229,229,45)"/><text x="598.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="595" y="340" width="2" height="15" fill="rgb(248,176,13)"/><text x="598.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="595" y="356" width="2" height="15" fill="rgb(226,51,34)"/><text x="598.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="595" y="372" width="2" height="15" fill="rgb(243,94,3)"/><text x="598.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="595" y="388" width="2" height="15" fill="rgb(247,216,11)"/><text x="598.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (2 samples, 0.37%)</title><rect x="600" y="388" width="4" height="15" fill="rgb(239,33,40)"/><text x="603.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (1 samples, 0.19%)</title><rect x="604" y="388" width="2" height="15" fill="rgb(254,46,21)"/><text x="607.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.19%)</title><rect x="604" y="404" width="2" height="15" fill="rgb(208,94,6)"/><text x="607.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1762) (1 samples, 0.19%)</title><rect x="606" y="388" width="2" height="15" fill="rgb(252,69,2)"/><text x="609.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.19%)</title><rect x="608" y="388" width="3" height="15" fill="rgb(245,28,10)"/><text x="611.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 1.31%)</title><rect x="597" y="356" width="16" height="15" fill="rgb(217,159,7)"/><text x="600.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 1.31%)</title><rect x="597" y="372" width="16" height="15" fill="rgb(217,41,8)"/><text x="600.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.19%)</title><rect x="611" y="388" width="2" height="15" fill="rgb(243,104,38)"/><text x="614.00" y="398.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (10 samples, 1.87%)</title><rect x="593" y="244" width="22" height="15" fill="rgb(231,135,42)"/><text x="596.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 1.87%)</title><rect x="593" y="260" width="22" height="15" fill="rgb(218,30,9)"/><text x="596.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (10 samples, 1.87%)</title><rect x="593" y="276" width="22" height="15" fill="rgb(234,136,48)"/><text x="596.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (9 samples, 1.68%)</title><rect x="595" y="292" width="20" height="15" fill="rgb(248,38,12)"/><text x="598.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 1.49%)</title><rect x="597" y="308" width="18" height="15" fill="rgb(249,40,33)"/><text x="600.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 1.49%)</title><rect x="597" y="324" width="18" height="15" fill="rgb(238,200,14)"/><text x="600.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 1.49%)</title><rect x="597" y="340" width="18" height="15" fill="rgb(248,156,36)"/><text x="600.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.19%)</title><rect x="613" y="356" width="2" height="15" fill="rgb(205,11,29)"/><text x="616.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.19%)</title><rect x="613" y="372" width="2" height="15" fill="rgb(238,4,30)"/><text x="616.00" y="382.50"></text></g><g><title>0x7faf236119af (libm-2.29.so) (2 samples, 0.37%)</title><rect x="615" y="324" width="4" height="15" fill="rgb(213,223,20)"/><text x="618.00" y="334.50"></text></g><g><title>0x7faf236119bd (libm-2.29.so) (1 samples, 0.19%)</title><rect x="619" y="324" width="3" height="15" fill="rgb(208,67,54)"/><text x="622.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:33) (15 samples, 2.80%)</title><rect x="591" y="228" width="33" height="15" fill="rgb(237,16,33)"/><text x="594.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.75%)</title><rect x="615" y="244" width="9" height="15" fill="rgb(218,93,52)"/><text x="618.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.75%)</title><rect x="615" y="260" width="9" height="15" fill="rgb(222,122,40)"/><text x="618.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (4 samples, 0.75%)</title><rect x="615" y="276" width="9" height="15" fill="rgb(211,143,20)"/><text x="618.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (4 samples, 0.75%)</title><rect x="615" y="292" width="9" height="15" fill="rgb(254,96,40)"/><text x="618.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (4 samples, 0.75%)</title><rect x="615" y="308" width="9" height="15" fill="rgb(224,158,46)"/><text x="618.00" y="318.50"></text></g><g><title>0x7faf23611a1d (libm-2.29.so) (1 samples, 0.19%)</title><rect x="622" y="324" width="2" height="15" fill="rgb(238,131,11)"/><text x="625.00" y="334.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.19%)</title><rect x="628" y="292" width="2" height="15" fill="rgb(207,40,23)"/><text x="631.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.19%)</title><rect x="630" y="324" width="3" height="15" fill="rgb(234,140,3)"/><text x="633.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (1 samples, 0.19%)</title><rect x="633" y="324" width="2" height="15" fill="rgb(209,99,43)"/><text x="636.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.19%)</title><rect x="633" y="340" width="2" height="15" fill="rgb(208,149,25)"/><text x="636.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.19%)</title><rect x="633" y="356" width="2" height="15" fill="rgb(235,24,16)"/><text x="636.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:872) (1 samples, 0.19%)</title><rect x="633" y="372" width="2" height="15" fill="rgb(243,214,1)"/><text x="636.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (41 samples, 7.65%)</title><rect x="547" y="196" width="90" height="15" fill="rgb(240,52,19)"/><text x="550.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (41 samples, 7.65%)</title><rect x="547" y="212" width="90" height="15" fill="rgb(207,8,17)"/><text x="550.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (6 samples, 1.12%)</title><rect x="624" y="228" width="13" height="15" fill="rgb(244,179,16)"/><text x="627.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (5 samples, 0.93%)</title><rect x="626" y="244" width="11" height="15" fill="rgb(240,130,22)"/><text x="629.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.93%)</title><rect x="626" y="260" width="11" height="15" fill="rgb(207,85,39)"/><text x="629.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (5 samples, 0.93%)</title><rect x="626" y="276" width="11" height="15" fill="rgb(221,84,11)"/><text x="629.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 0.56%)</title><rect x="630" y="292" width="7" height="15" fill="rgb(207,147,2)"/><text x="633.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.56%)</title><rect x="630" y="308" width="7" height="15" fill="rgb(242,143,39)"/><text x="633.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.19%)</title><rect x="635" y="324" width="2" height="15" fill="rgb(206,166,47)"/><text x="638.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.19%)</title><rect x="635" y="340" width="2" height="15" fill="rgb(235,14,36)"/><text x="638.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.19%)</title><rect x="635" y="356" width="2" height="15" fill="rgb(209,146,50)"/><text x="638.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.19%)</title><rect x="635" y="372" width="2" height="15" fill="rgb(234,53,42)"/><text x="638.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:199) (1 samples, 0.19%)</title><rect x="635" y="388" width="2" height="15" fill="rgb(246,195,42)"/><text x="638.00" y="398.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.19%)</title><rect x="635" y="404" width="2" height="15" fill="rgb(231,95,27)"/><text x="638.00" y="414.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1371) (1 samples, 0.19%)</title><rect x="637" y="292" width="2" height="15" fill="rgb(250,209,27)"/><text x="640.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (2 samples, 0.37%)</title><rect x="637" y="276" width="4" height="15" fill="rgb(208,204,53)"/><text x="640.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="639" y="292" width="2" height="15" fill="rgb(206,7,47)"/><text x="642.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (3 samples, 0.56%)</title><rect x="637" y="196" width="7" height="15" fill="rgb(227,140,10)"/><text x="640.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py:17) (3 samples, 0.56%)</title><rect x="637" y="212" width="7" height="15" fill="rgb(205,34,44)"/><text x="640.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="637" y="228" width="7" height="15" fill="rgb(222,1,47)"/><text x="640.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="637" y="244" width="7" height="15" fill="rgb(252,85,36)"/><text x="640.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.56%)</title><rect x="637" y="260" width="7" height="15" fill="rgb(216,222,2)"/><text x="640.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="641" y="276" width="3" height="15" fill="rgb(234,119,21)"/><text x="644.00" y="286.50"></text></g><g><title>FLOAT_greater (loops.c.src:1773) (1 samples, 0.19%)</title><rect x="641" y="292" width="3" height="15" fill="rgb(224,211,6)"/><text x="644.00" y="302.50"></text></g><g><title>run_binary_simd_greater_FLOAT (simd.inc.src:295) (1 samples, 0.19%)</title><rect x="641" y="308" width="3" height="15" fill="rgb(229,205,12)"/><text x="644.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src:973) (1 samples, 0.19%)</title><rect x="641" y="324" width="3" height="15" fill="rgb(219,184,29)"/><text x="644.00" y="334.50"></text></g><g><title>npy_aligned_block_offset (lowlevel_strided_loops.h:439) (1 samples, 0.19%)</title><rect x="641" y="340" width="3" height="15" fill="rgb(217,149,15)"/><text x="644.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="648" y="260" width="2" height="15" fill="rgb(244,229,48)"/><text x="651.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="648" y="276" width="2" height="15" fill="rgb(248,85,4)"/><text x="651.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="648" y="292" width="2" height="15" fill="rgb(248,71,23)"/><text x="651.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.37%)</title><rect x="648" y="244" width="4" height="15" fill="rgb(212,18,20)"/><text x="651.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:459) (1 samples, 0.19%)</title><rect x="650" y="260" width="2" height="15" fill="rgb(254,161,28)"/><text x="653.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="652" y="260" width="3" height="15" fill="rgb(249,105,35)"/><text x="655.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.19%)</title><rect x="652" y="276" width="3" height="15" fill="rgb(213,214,25)"/><text x="655.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:927) (1 samples, 0.19%)</title><rect x="652" y="292" width="3" height="15" fill="rgb(220,75,0)"/><text x="655.00" y="302.50"></text></g><g><title>_borrowed_reference (ufunc_object.c:1020) (1 samples, 0.19%)</title><rect x="652" y="308" width="3" height="15" fill="rgb(233,169,42)"/><text x="655.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:305) (1 samples, 0.19%)</title><rect x="655" y="308" width="2" height="15" fill="rgb(207,193,18)"/><text x="658.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.75%)</title><rect x="655" y="292" width="8" height="15" fill="rgb(246,221,32)"/><text x="658.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.56%)</title><rect x="657" y="308" width="6" height="15" fill="rgb(244,209,33)"/><text x="660.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.56%)</title><rect x="657" y="324" width="6" height="15" fill="rgb(232,216,12)"/><text x="660.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (3 samples, 0.56%)</title><rect x="657" y="340" width="6" height="15" fill="rgb(238,157,24)"/><text x="660.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.93%)</title><rect x="655" y="260" width="11" height="15" fill="rgb(243,225,53)"/><text x="658.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.93%)</title><rect x="655" y="276" width="11" height="15" fill="rgb(250,120,7)"/><text x="658.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="663" y="292" width="3" height="15" fill="rgb(225,27,20)"/><text x="666.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="663" y="308" width="3" height="15" fill="rgb(238,191,12)"/><text x="666.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.19%)</title><rect x="663" y="324" width="3" height="15" fill="rgb(234,40,41)"/><text x="666.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:603) (1 samples, 0.19%)</title><rect x="663" y="340" width="3" height="15" fill="rgb(220,98,44)"/><text x="666.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h:157) (1 samples, 0.19%)</title><rect x="663" y="356" width="3" height="15" fill="rgb(236,207,28)"/><text x="666.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:531) (9 samples, 1.68%)</title><rect x="648" y="228" width="20" height="15" fill="rgb(226,185,1)"/><text x="651.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.31%)</title><rect x="652" y="244" width="16" height="15" fill="rgb(230,210,12)"/><text x="655.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.19%)</title><rect x="666" y="260" width="2" height="15" fill="rgb(222,183,26)"/><text x="669.00" y="270.50"></text></g><g><title>0x7faf226b17c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="666" y="276" width="2" height="15" fill="rgb(247,12,2)"/><text x="669.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="670" y="260" width="2" height="15" fill="rgb(225,8,20)"/><text x="673.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:296) (1 samples, 0.19%)</title><rect x="670" y="276" width="2" height="15" fill="rgb(234,209,43)"/><text x="673.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="672" y="292" width="2" height="15" fill="rgb(243,22,8)"/><text x="675.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="672" y="308" width="2" height="15" fill="rgb(220,40,48)"/><text x="675.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.19%)</title><rect x="672" y="324" width="2" height="15" fill="rgb(238,26,9)"/><text x="675.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.19%)</title><rect x="672" y="340" width="2" height="15" fill="rgb(238,215,17)"/><text x="675.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="672" y="356" width="2" height="15" fill="rgb(209,121,16)"/><text x="675.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="672" y="372" width="2" height="15" fill="rgb(249,218,35)"/><text x="675.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="672" y="388" width="2" height="15" fill="rgb(221,37,51)"/><text x="675.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="672" y="404" width="2" height="15" fill="rgb(220,223,4)"/><text x="675.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="672" y="420" width="2" height="15" fill="rgb(251,218,26)"/><text x="675.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="672" y="436" width="2" height="15" fill="rgb(249,224,54)"/><text x="675.00" y="446.50"></text></g><g><title>0x7faf23490c68 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="672" y="452" width="2" height="15" fill="rgb(232,3,18)"/><text x="675.00" y="462.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.19%)</title><rect x="674" y="356" width="3" height="15" fill="rgb(245,14,27)"/><text x="677.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (5 samples, 0.93%)</title><rect x="668" y="228" width="11" height="15" fill="rgb(250,4,53)"/><text x="671.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.75%)</title><rect x="670" y="244" width="9" height="15" fill="rgb(246,174,37)"/><text x="673.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.56%)</title><rect x="672" y="260" width="7" height="15" fill="rgb(242,109,36)"/><text x="675.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.56%)</title><rect x="672" y="276" width="7" height="15" fill="rgb(245,94,4)"/><text x="675.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.37%)</title><rect x="674" y="292" width="5" height="15" fill="rgb(228,134,42)"/><text x="677.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.37%)</title><rect x="674" y="308" width="5" height="15" fill="rgb(251,103,24)"/><text x="677.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.37%)</title><rect x="674" y="324" width="5" height="15" fill="rgb(232,47,50)"/><text x="677.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.37%)</title><rect x="674" y="340" width="5" height="15" fill="rgb(242,27,37)"/><text x="677.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.19%)</title><rect x="677" y="356" width="2" height="15" fill="rgb(245,81,4)"/><text x="680.00" y="366.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:27) (1 samples, 0.19%)</title><rect x="679" y="244" width="2" height="15" fill="rgb(232,139,20)"/><text x="682.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.56%)</title><rect x="681" y="276" width="7" height="15" fill="rgb(224,97,39)"/><text x="684.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 0.56%)</title><rect x="681" y="292" width="7" height="15" fill="rgb(245,68,43)"/><text x="684.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 0.56%)</title><rect x="681" y="308" width="7" height="15" fill="rgb(231,215,46)"/><text x="684.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (3 samples, 0.56%)</title><rect x="681" y="324" width="7" height="15" fill="rgb(213,195,3)"/><text x="684.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (3 samples, 0.56%)</title><rect x="681" y="340" width="7" height="15" fill="rgb(250,3,22)"/><text x="684.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.56%)</title><rect x="681" y="356" width="7" height="15" fill="rgb(245,97,6)"/><text x="684.00" y="366.50"></text></g><g><title>sgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.56%)</title><rect x="681" y="372" width="7" height="15" fill="rgb(253,66,24)"/><text x="684.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.56%)</title><rect x="681" y="388" width="7" height="15" fill="rgb(223,105,40)"/><text x="684.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (21 samples, 3.92%)</title><rect x="644" y="196" width="46" height="15" fill="rgb(226,99,20)"/><text x="647.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (19 samples, 3.54%)</title><rect x="648" y="212" width="42" height="15" fill="rgb(224,0,3)"/><text x="651.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (5 samples, 0.93%)</title><rect x="679" y="228" width="11" height="15" fill="rgb(254,143,9)"/><text x="682.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (4 samples, 0.75%)</title><rect x="681" y="244" width="9" height="15" fill="rgb(236,74,29)"/><text x="684.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (4 samples, 0.75%)</title><rect x="681" y="260" width="9" height="15" fill="rgb(251,116,48)"/><text x="684.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="688" y="276" width="2" height="15" fill="rgb(242,143,22)"/><text x="691.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (131 samples, 24.44%)</title><rect x="406" y="180" width="288" height="15" fill="rgb(215,101,48)"/><text x="409.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_n..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (2 samples, 0.37%)</title><rect x="690" y="196" width="4" height="15" fill="rgb(217,192,18)"/><text x="693.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.19%)</title><rect x="694" y="180" width="2" height="15" fill="rgb(222,163,12)"/><text x="697.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.19%)</title><rect x="696" y="180" width="3" height="15" fill="rgb(250,75,3)"/><text x="699.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (2 samples, 0.37%)</title><rect x="699" y="180" width="4" height="15" fill="rgb(253,197,13)"/><text x="702.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (6 samples, 1.12%)</title><rect x="703" y="180" width="13" height="15" fill="rgb(227,131,34)"/><text x="706.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (154 samples, 28.73%)</title><rect x="379" y="132" width="339" height="15" fill="rgb(207,11,37)"/><text x="382.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (154 samples, 28.73%)</title><rect x="379" y="148" width="339" height="15" fill="rgb(208,215,25)"/><text x="382.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (153 samples, 28.54%)</title><rect x="382" y="164" width="336" height="15" fill="rgb(248,213,22)"/><text x="385.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.19%)</title><rect x="716" y="180" width="2" height="15" fill="rgb(213,51,0)"/><text x="719.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:45) (167 samples, 31.16%)</title><rect x="353" y="52" width="368" height="15" fill="rgb(245,160,19)"/><text x="356.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_4_1..</text></g><g><title>profile_pyrt (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:44) (167 samples, 31.16%)</title><rect x="353" y="68" width="368" height="15" fill="rgb(252,40,20)"/><text x="356.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_b_cl_1000..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:29) (167 samples, 31.16%)</title><rect x="353" y="84" width="368" height="15" fill="rgb(215,0,40)"/><text x="356.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_100..</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:23) (156 samples, 29.10%)</title><rect x="377" y="100" width="344" height="15" fill="rgb(214,98,44)"/><text x="380.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1000_4..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (155 samples, 28.92%)</title><rect x="379" y="116" width="342" height="15" fill="rgb(236,155,47)"/><text x="382.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="718" y="132" width="3" height="15" fill="rgb(247,177,29)"/><text x="721.00" y="142.50"></text></g><g><title>0x7faee34d2ff9 (?) (1 samples, 0.19%)</title><rect x="721" y="212" width="2" height="15" fill="rgb(216,211,53)"/><text x="724.00" y="222.50"></text></g><g><title>0x7faee34cdef6 (?) (1 samples, 0.19%)</title><rect x="721" y="228" width="2" height="15" fill="rgb(219,46,48)"/><text x="724.00" y="238.50"></text></g><g><title>0x7faee34c2962 (?) (1 samples, 0.19%)</title><rect x="721" y="244" width="2" height="15" fill="rgb(226,67,5)"/><text x="724.00" y="254.50"></text></g><g><title>0x7faee34f67a7 (?) (1 samples, 0.19%)</title><rect x="721" y="260" width="2" height="15" fill="rgb(214,83,54)"/><text x="724.00" y="270.50"></text></g><g><title>0x7faee34f6379 (?) (1 samples, 0.19%)</title><rect x="721" y="276" width="2" height="15" fill="rgb(213,37,21)"/><text x="724.00" y="286.50"></text></g><g><title>0x7faee39548b8 (?) (1 samples, 0.19%)</title><rect x="721" y="292" width="2" height="15" fill="rgb(230,212,13)"/><text x="724.00" y="302.50"></text></g><g><title>0x7faee3952c7f (?) (1 samples, 0.19%)</title><rect x="721" y="308" width="2" height="15" fill="rgb(224,121,48)"/><text x="724.00" y="318.50"></text></g><g><title>0x7faee396599c (?) (1 samples, 0.19%)</title><rect x="721" y="324" width="2" height="15" fill="rgb(247,176,48)"/><text x="724.00" y="334.50"></text></g><g><title>0x7faee370093f (?) (1 samples, 0.19%)</title><rect x="721" y="340" width="2" height="15" fill="rgb(245,50,37)"/><text x="724.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="723" y="260" width="2" height="15" fill="rgb(220,89,33)"/><text x="726.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="723" y="276" width="2" height="15" fill="rgb(225,217,35)"/><text x="726.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="723" y="292" width="2" height="15" fill="rgb(240,32,16)"/><text x="726.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="723" y="308" width="2" height="15" fill="rgb(238,36,50)"/><text x="726.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="723" y="324" width="2" height="15" fill="rgb(246,32,37)"/><text x="726.00" y="334.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="723" y="340" width="2" height="15" fill="rgb(222,40,23)"/><text x="726.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="723" y="356" width="2" height="15" fill="rgb(230,63,31)"/><text x="726.00" y="366.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="725" y="260" width="4" height="15" fill="rgb(227,13,17)"/><text x="728.00" y="270.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="727" y="276" width="2" height="15" fill="rgb(249,106,32)"/><text x="730.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="729" y="292" width="3" height="15" fill="rgb(218,112,13)"/><text x="732.00" y="302.50"></text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:18) (6 samples, 1.12%)</title><rect x="721" y="100" width="13" height="15" fill="rgb(250,187,8)"/><text x="724.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (6 samples, 1.12%)</title><rect x="721" y="116" width="13" height="15" fill="rgb(230,104,48)"/><text x="724.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (6 samples, 1.12%)</title><rect x="721" y="132" width="13" height="15" fill="rgb(216,21,0)"/><text x="724.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (6 samples, 1.12%)</title><rect x="721" y="148" width="13" height="15" fill="rgb(220,163,39)"/><text x="724.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (6 samples, 1.12%)</title><rect x="721" y="164" width="13" height="15" fill="rgb(220,150,25)"/><text x="724.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (6 samples, 1.12%)</title><rect x="721" y="180" width="13" height="15" fill="rgb(241,147,36)"/><text x="724.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (6 samples, 1.12%)</title><rect x="721" y="196" width="13" height="15" fill="rgb(225,150,31)"/><text x="724.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.93%)</title><rect x="723" y="212" width="11" height="15" fill="rgb(236,133,6)"/><text x="726.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.93%)</title><rect x="723" y="228" width="11" height="15" fill="rgb(231,194,1)"/><text x="726.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.93%)</title><rect x="723" y="244" width="11" height="15" fill="rgb(207,223,46)"/><text x="726.00" y="254.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="729" y="260" width="5" height="15" fill="rgb(226,213,19)"/><text x="732.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="729" y="276" width="5" height="15" fill="rgb(235,75,13)"/><text x="732.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="732" y="292" width="2" height="15" fill="rgb(245,50,46)"/><text x="735.00" y="302.50"></text></g><g><title>0x7faf2348f971 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="732" y="308" width="2" height="15" fill="rgb(224,181,51)"/><text x="735.00" y="318.50"></text></g><g><title>0x7faf2348ebc0 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="778" y="132" width="2" height="15" fill="rgb(243,4,3)"/><text x="781.00" y="142.50"></text></g><g><title>0x7faf2348ec00 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="780" y="132" width="2" height="15" fill="rgb(221,93,49)"/><text x="783.00" y="142.50"></text></g><g><title>0x7faf2348ec45 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="782" y="132" width="2" height="15" fill="rgb(228,130,11)"/><text x="785.00" y="142.50"></text></g><g><title>0x7faf2348ec49 (libc-2.29.so) (2 samples, 0.37%)</title><rect x="784" y="132" width="5" height="15" fill="rgb(227,40,19)"/><text x="787.00" y="142.50"></text></g><g><title>0x7faf2348ec5e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="789" y="132" width="2" height="15" fill="rgb(232,41,20)"/><text x="792.00" y="142.50"></text></g><g><title>0x7faf2348feb0 (libc-2.29.so) (7 samples, 1.31%)</title><rect x="778" y="116" width="15" height="15" fill="rgb(214,84,18)"/><text x="781.00" y="126.50"></text></g><g><title>0x7faf2348ec73 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="791" y="132" width="2" height="15" fill="rgb(230,167,25)"/><text x="794.00" y="142.50"></text></g><g><title>0x7faf2348eaaf (libc-2.29.so) (1 samples, 0.19%)</title><rect x="791" y="148" width="2" height="15" fill="rgb(228,173,46)"/><text x="794.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:116) (1 samples, 0.19%)</title><rect x="793" y="196" width="2" height="15" fill="rgb(235,122,35)"/><text x="796.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.19%)</title><rect x="795" y="196" width="3" height="15" fill="rgb(215,111,40)"/><text x="798.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.37%)</title><rect x="798" y="196" width="4" height="15" fill="rgb(207,76,21)"/><text x="801.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.37%)</title><rect x="798" y="212" width="4" height="15" fill="rgb(238,32,53)"/><text x="801.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="800" y="228" width="2" height="15" fill="rgb(253,131,54)"/><text x="803.00" y="238.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="804" y="228" width="2" height="15" fill="rgb(216,65,53)"/><text x="807.00" y="238.50"></text></g><g><title>OrtValue::Get&lt;onnxruntime::Tensor&gt; [clone .localalias.13] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="806" y="260" width="3" height="15" fill="rgb(249,108,30)"/><text x="809.00" y="270.50"></text></g><g><title>onnxruntime::Add&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.75%)</title><rect x="809" y="340" width="8" height="15" fill="rgb(216,199,32)"/><text x="812.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.75%)</title><rect x="809" y="356" width="8" height="15" fill="rgb(241,167,36)"/><text x="812.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.75%)</title><rect x="809" y="372" width="8" height="15" fill="rgb(228,42,51)"/><text x="812.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="811" y="388" width="6" height="15" fill="rgb(241,195,17)"/><text x="814.00" y="398.50"></text></g><g><title>0x7faf2348fe64 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="822" y="356" width="2" height="15" fill="rgb(253,45,39)"/><text x="825.00" y="366.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.31%)</title><rect x="817" y="340" width="16" height="15" fill="rgb(221,73,3)"/><text x="820.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.75%)</title><rect x="824" y="356" width="9" height="15" fill="rgb(241,164,49)"/><text x="827.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="831" y="372" width="2" height="15" fill="rgb(249,218,34)"/><text x="834.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="831" y="388" width="2" height="15" fill="rgb(217,65,33)"/><text x="834.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="831" y="404" width="2" height="15" fill="rgb(242,222,28)"/><text x="834.00" y="414.50"></text></g><g><title>0x7faf23491274 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="831" y="420" width="2" height="15" fill="rgb(248,7,7)"/><text x="834.00" y="430.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="833" y="340" width="2" height="15" fill="rgb(219,50,26)"/><text x="836.00" y="350.50"></text></g><g><title>onnxruntime::Cast&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="835" y="340" width="2" height="15" fill="rgb(254,42,45)"/><text x="838.00" y="350.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="837" y="340" width="2" height="15" fill="rgb(209,109,54)"/><text x="840.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="837" y="356" width="2" height="15" fill="rgb(249,132,4)"/><text x="840.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="837" y="372" width="2" height="15" fill="rgb(224,144,44)"/><text x="840.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="837" y="388" width="2" height="15" fill="rgb(205,23,20)"/><text x="840.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="837" y="404" width="2" height="15" fill="rgb(225,203,41)"/><text x="840.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="837" y="420" width="2" height="15" fill="rgb(235,51,50)"/><text x="840.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="837" y="436" width="2" height="15" fill="rgb(210,93,36)"/><text x="840.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="837" y="452" width="2" height="15" fill="rgb(233,127,42)"/><text x="840.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="837" y="468" width="2" height="15" fill="rgb(222,84,11)"/><text x="840.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="837" y="484" width="2" height="15" fill="rgb(243,216,33)"/><text x="840.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="837" y="500" width="2" height="15" fill="rgb(229,106,35)"/><text x="840.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="837" y="516" width="2" height="15" fill="rgb(242,180,21)"/><text x="840.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="837" y="532" width="2" height="15" fill="rgb(234,109,1)"/><text x="840.00" y="542.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="837" y="548" width="2" height="15" fill="rgb(221,185,20)"/><text x="840.00" y="558.50"></text></g><g><title>onnxruntime::Exp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.75%)</title><rect x="839" y="340" width="9" height="15" fill="rgb(240,3,11)"/><text x="842.00" y="350.50"></text></g><g><title>onnxruntime::MatMulComputeHelper::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="848" y="356" width="2" height="15" fill="rgb(226,215,51)"/><text x="851.00" y="366.50"></text></g><g><title>mkl_blas_get_kernel_api_version (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.19%)</title><rect x="850" y="420" width="3" height="15" fill="rgb(249,203,39)"/><text x="853.00" y="430.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.75%)</title><rect x="848" y="340" width="9" height="15" fill="rgb(234,160,9)"/><text x="851.00" y="350.50"></text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.56%)</title><rect x="850" y="356" width="7" height="15" fill="rgb(219,2,37)"/><text x="853.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.56%)</title><rect x="850" y="372" width="7" height="15" fill="rgb(227,26,25)"/><text x="853.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.56%)</title><rect x="850" y="388" width="7" height="15" fill="rgb(244,153,36)"/><text x="853.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.56%)</title><rect x="850" y="404" width="7" height="15" fill="rgb(250,199,11)"/><text x="853.00" y="414.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.37%)</title><rect x="853" y="420" width="4" height="15" fill="rgb(249,143,38)"/><text x="856.00" y="430.50"></text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.37%)</title><rect x="853" y="436" width="4" height="15" fill="rgb(249,192,53)"/><text x="856.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.37%)</title><rect x="853" y="452" width="4" height="15" fill="rgb(207,117,15)"/><text x="856.00" y="462.50"></text></g><g><title>mkl_blas_avx_sgemm_nocopy_anbn_b0 (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.19%)</title><rect x="855" y="468" width="2" height="15" fill="rgb(248,1,24)"/><text x="858.00" y="478.50"></text></g><g><title>0x7faf2360ee53 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="864" y="356" width="2" height="15" fill="rgb(246,164,6)"/><text x="867.00" y="366.50"></text></g><g><title>0x7faf2360ee66 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="866" y="356" width="2" height="15" fill="rgb(230,120,42)"/><text x="869.00" y="366.50"></text></g><g><title>0x7faf2360ee86 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="868" y="356" width="2" height="15" fill="rgb(211,171,36)"/><text x="871.00" y="366.50"></text></g><g><title>0x7faf2360eea2 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="870" y="356" width="5" height="15" fill="rgb(218,58,17)"/><text x="873.00" y="366.50"></text></g><g><title>0x7faf2360eea6 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="875" y="356" width="2" height="15" fill="rgb(219,42,44)"/><text x="878.00" y="366.50"></text></g><g><title>0x7faf236119bd (libm-2.29.so) (1 samples, 0.19%)</title><rect x="877" y="356" width="2" height="15" fill="rgb(251,156,31)"/><text x="880.00" y="366.50"></text></g><g><title>0x7faf236119c8 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="879" y="356" width="4" height="15" fill="rgb(228,44,4)"/><text x="882.00" y="366.50"></text></g><g><title>0x7faf236119d4 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="883" y="356" width="3" height="15" fill="rgb(232,148,5)"/><text x="886.00" y="366.50"></text></g><g><title>0x7faf236119e0 (libm-2.29.so) (2 samples, 0.37%)</title><rect x="886" y="356" width="4" height="15" fill="rgb(218,160,26)"/><text x="889.00" y="366.50"></text></g><g><title>0x7faf23611a1d (libm-2.29.so) (1 samples, 0.19%)</title><rect x="890" y="356" width="2" height="15" fill="rgb(239,105,37)"/><text x="893.00" y="366.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 3.17%)</title><rect x="857" y="340" width="38" height="15" fill="rgb(213,161,53)"/><text x="860.00" y="350.50">onn..</text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="892" y="356" width="3" height="15" fill="rgb(232,45,19)"/><text x="895.00" y="366.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="895" y="340" width="2" height="15" fill="rgb(242,200,20)"/><text x="898.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="895" y="356" width="2" height="15" fill="rgb(245,78,49)"/><text x="898.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="895" y="372" width="2" height="15" fill="rgb(240,84,2)"/><text x="898.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="895" y="388" width="2" height="15" fill="rgb(219,211,43)"/><text x="898.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="895" y="404" width="2" height="15" fill="rgb(232,211,14)"/><text x="898.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="895" y="420" width="2" height="15" fill="rgb(238,162,20)"/><text x="898.00" y="430.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="897" y="372" width="2" height="15" fill="rgb(239,171,20)"/><text x="900.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="897" y="388" width="2" height="15" fill="rgb(222,64,48)"/><text x="900.00" y="398.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="897" y="340" width="4" height="15" fill="rgb(241,61,19)"/><text x="900.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="897" y="356" width="4" height="15" fill="rgb(244,93,28)"/><text x="900.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="899" y="372" width="2" height="15" fill="rgb(238,7,6)"/><text x="902.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="899" y="388" width="2" height="15" fill="rgb(219,134,16)"/><text x="902.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="899" y="404" width="2" height="15" fill="rgb(221,47,45)"/><text x="902.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="899" y="420" width="2" height="15" fill="rgb(226,91,22)"/><text x="902.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="899" y="436" width="2" height="15" fill="rgb(236,79,37)"/><text x="902.00" y="446.50"></text></g><g><title>0x7faf2349100a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="899" y="452" width="2" height="15" fill="rgb(219,92,45)"/><text x="902.00" y="462.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.61%)</title><rect x="901" y="340" width="31" height="15" fill="rgb(209,78,30)"/><text x="904.00" y="350.50">on..</text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.61%)</title><rect x="901" y="356" width="31" height="15" fill="rgb(252,143,50)"/><text x="904.00" y="366.50">on..</text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.61%)</title><rect x="901" y="372" width="31" height="15" fill="rgb(240,173,26)"/><text x="904.00" y="382.50">on..</text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.75%)</title><rect x="923" y="388" width="9" height="15" fill="rgb(243,74,45)"/><text x="926.00" y="398.50"></text></g><g><title>0x7faee3499930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="934" y="356" width="2" height="15" fill="rgb(253,70,24)"/><text x="937.00" y="366.50"></text></g><g><title>0x7faf23490b39 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="978" y="388" width="2" height="15" fill="rgb(245,206,46)"/><text x="981.00" y="398.50"></text></g><g><title>0x7faf23490b76 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="980" y="388" width="3" height="15" fill="rgb(254,197,32)"/><text x="983.00" y="398.50"></text></g><g><title>0x7faf23490d81 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="983" y="388" width="2" height="15" fill="rgb(243,194,25)"/><text x="986.00" y="398.50"></text></g><g><title>0x7faf23490d9f (libc-2.29.so) (1 samples, 0.19%)</title><rect x="985" y="388" width="2" height="15" fill="rgb(228,227,22)"/><text x="988.00" y="398.50"></text></g><g><title>0x7faf23490db4 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="987" y="388" width="2" height="15" fill="rgb(240,166,7)"/><text x="990.00" y="398.50"></text></g><g><title>0x7faf23490dd2 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="989" y="388" width="2" height="15" fill="rgb(206,57,5)"/><text x="992.00" y="398.50"></text></g><g><title>0x7faf23490dec (libc-2.29.so) (1 samples, 0.19%)</title><rect x="991" y="388" width="3" height="15" fill="rgb(218,59,4)"/><text x="994.00" y="398.50"></text></g><g><title>0x7faf23490f2a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="994" y="388" width="2" height="15" fill="rgb(224,168,49)"/><text x="997.00" y="398.50"></text></g><g><title>0x7faf23490fe6 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="996" y="388" width="2" height="15" fill="rgb(217,23,7)"/><text x="999.00" y="398.50"></text></g><g><title>0x7faf23491368 (libc-2.29.so) (2 samples, 0.37%)</title><rect x="998" y="388" width="4" height="15" fill="rgb(239,156,30)"/><text x="1001.00" y="398.50"></text></g><g><title>0x7faf23491395 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1002" y="388" width="3" height="15" fill="rgb(225,167,43)"/><text x="1005.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (32 samples, 5.97%)</title><rect x="936" y="356" width="71" height="15" fill="rgb(227,189,5)"/><text x="939.00" y="366.50">operator..</text></g><g><title>malloc (libc-2.29.so) (32 samples, 5.97%)</title><rect x="936" y="372" width="71" height="15" fill="rgb(206,142,1)"/><text x="939.00" y="382.50">malloc (..</text></g><g><title>0x7faf234913ae (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1005" y="388" width="2" height="15" fill="rgb(244,218,6)"/><text x="1008.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1007" y="356" width="4" height="15" fill="rgb(240,195,37)"/><text x="1010.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1011" y="356" width="5" height="15" fill="rgb(206,164,7)"/><text x="1014.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (3 samples, 0.56%)</title><rect x="1016" y="356" width="6" height="15" fill="rgb(252,138,51)"/><text x="1019.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (99 samples, 18.47%)</title><rect x="809" y="260" width="218" height="15" fill="rgb(232,209,33)"/><text x="812.00" y="270.50">onnxruntime::InferenceSessio..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (99 samples, 18.47%)</title><rect x="809" y="276" width="218" height="15" fill="rgb(230,163,49)"/><text x="812.00" y="286.50">onnxruntime::InferenceSessio..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (99 samples, 18.47%)</title><rect x="809" y="292" width="218" height="15" fill="rgb(206,123,41)"/><text x="812.00" y="302.50">onnxruntime::utils::ExecuteG..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (99 samples, 18.47%)</title><rect x="809" y="308" width="218" height="15" fill="rgb(217,156,23)"/><text x="812.00" y="318.50">onnxruntime::utils::ExecuteG..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (99 samples, 18.47%)</title><rect x="809" y="324" width="218" height="15" fill="rgb(206,157,18)"/><text x="812.00" y="334.50">onnxruntime::SequentialExecu..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (43 samples, 8.02%)</title><rect x="932" y="340" width="95" height="15" fill="rgb(245,112,48)"/><text x="935.00" y="350.50">onnxruntime..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.37%)</title><rect x="1022" y="356" width="5" height="15" fill="rgb(232,85,33)"/><text x="1025.00" y="366.50"></text></g><g><title>0x7faee349a870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1110" y="276" width="2" height="15" fill="rgb(206,145,25)"/><text x="1113.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.05%)</title><rect x="1112" y="276" width="25" height="15" fill="rgb(219,141,30)"/><text x="1115.00" y="286.50">p..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (52 samples, 9.70%)</title><rect x="1027" y="260" width="114" height="15" fill="rgb(218,189,16)"/><text x="1030.00" y="270.50">pybind11::deta..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.37%)</title><rect x="1137" y="276" width="4" height="15" fill="rgb(241,81,54)"/><text x="1140.00" y="286.50"></text></g><g><title>0x7faf2348f906 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1143" y="292" width="2" height="15" fill="rgb(214,99,45)"/><text x="1146.00" y="302.50"></text></g><g><title>0x7faf2348f90e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1145" y="292" width="3" height="15" fill="rgb(234,63,39)"/><text x="1148.00" y="302.50"></text></g><g><title>0x7faf2348f961 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1148" y="292" width="2" height="15" fill="rgb(205,114,8)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7faf2348f9b3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1150" y="292" width="2" height="15" fill="rgb(235,140,48)"/><text x="1153.00" y="302.50"></text></g><g><title>0x7faf2348f9ff (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1152" y="292" width="2" height="15" fill="rgb(222,22,35)"/><text x="1155.00" y="302.50"></text></g><g><title>0x7faf2348fa33 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1154" y="292" width="2" height="15" fill="rgb(235,133,49)"/><text x="1157.00" y="302.50"></text></g><g><title>0x7faf2348fd07 (libc-2.29.so) (3 samples, 0.56%)</title><rect x="1156" y="292" width="7" height="15" fill="rgb(233,227,13)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7faf2348fd13 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1163" y="292" width="2" height="15" fill="rgb(207,73,33)"/><text x="1166.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1165" y="292" width="2" height="15" fill="rgb(229,22,33)"/><text x="1168.00" y="302.50"></text></g><g><title>0x7faf2348f998 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1170" y="308" width="2" height="15" fill="rgb(248,228,27)"/><text x="1173.00" y="318.50"></text></g><g><title>0x7faf2348f9b3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1172" y="308" width="2" height="15" fill="rgb(238,34,31)"/><text x="1175.00" y="318.50"></text></g><g><title>0x7faf2348fd07 (libc-2.29.so) (3 samples, 0.56%)</title><rect x="1174" y="308" width="7" height="15" fill="rgb(247,197,21)"/><text x="1177.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (171 samples, 31.90%)</title><rect x="806" y="244" width="377" height="15" fill="rgb(206,75,30)"/><text x="809.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::mod..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.54%)</title><rect x="1141" y="260" width="42" height="15" fill="rgb(242,37,52)"/><text x="1144.00" y="270.50">std..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.54%)</title><rect x="1141" y="276" width="42" height="15" fill="rgb(252,0,4)"/><text x="1144.00" y="286.50">onn..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.31%)</title><rect x="1167" y="292" width="16" height="15" fill="rgb(224,4,4)"/><text x="1170.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1181" y="308" width="2" height="15" fill="rgb(226,19,27)"/><text x="1184.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (178 samples, 33.21%)</title><rect x="793" y="164" width="392" height="15" fill="rgb(250,48,41)"/><text x="796.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.p..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (178 samples, 33.21%)</title><rect x="793" y="180" width="392" height="15" fill="rgb(238,160,50)"/><text x="796.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (174 samples, 32.46%)</title><rect x="802" y="196" width="383" height="15" fill="rgb(226,53,52)"/><text x="805.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (173 samples, 32.28%)</title><rect x="804" y="212" width="381" height="15" fill="rgb(247,226,24)"/><text x="807.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/cap..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (172 samples, 32.09%)</title><rect x="806" y="228" width="379" height="15" fill="rgb(213,134,5)"/><text x="809.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="244" width="2" height="15" fill="rgb(209,167,32)"/><text x="1186.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="260" width="2" height="15" fill="rgb(228,227,3)"/><text x="1186.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1183" y="276" width="2" height="15" fill="rgb(216,225,27)"/><text x="1186.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:52) (212 samples, 39.55%)</title><rect x="721" y="52" width="466" height="15" fill="rgb(246,29,25)"/><text x="724.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:52)</text></g><g><title>profile_ort (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:51) (212 samples, 39.55%)</title><rect x="721" y="68" width="466" height="15" fill="rgb(236,38,26)"/><text x="724.00" y="78.50">profile_ort (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:29) (212 samples, 39.55%)</title><rect x="721" y="84" width="466" height="15" fill="rgb(214,207,39)"/><text x="724.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_...</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:23) (206 samples, 38.43%)</title><rect x="734" y="100" width="453" height="15" fill="rgb(209,159,16)"/><text x="737.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1000_4_12_float_.py:2..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (179 samples, 33.40%)</title><rect x="793" y="116" width="394" height="15" fill="rgb(217,0,50)"/><text x="796.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (179 samples, 33.40%)</title><rect x="793" y="132" width="394" height="15" fill="rgb(249,34,42)"/><text x="796.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:2..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (179 samples, 33.40%)</title><rect x="793" y="148" width="394" height="15" fill="rgb(241,192,41)"/><text x="796.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.19%)</title><rect x="1185" y="164" width="2" height="15" fill="rgb(246,30,28)"/><text x="1188.00" y="174.50"></text></g><g><title>all (536 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(205,196,53)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.19%)</title><rect x="1187" y="52" width="3" height="15" fill="rgb(218,20,42)"/><text x="1190.00" y="62.50"></text></g></g></svg>