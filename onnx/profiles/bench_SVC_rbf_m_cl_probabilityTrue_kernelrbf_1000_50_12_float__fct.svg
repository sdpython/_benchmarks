<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2102" onload="init(evt)" viewBox="0 0 1200 2102" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2102" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2085.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2085.00"> </text><g id="frames"><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(207,223,40)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(239,196,31)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(237,179,22)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(243,14,20)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(232,67,10)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(242,195,25)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.12%)</title><rect x="10" y="1028" width="1" height="15" fill="rgb(253,218,44)"/><text x="13.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.12%)</title><rect x="10" y="1044" width="1" height="15" fill="rgb(225,13,53)"/><text x="13.00" y="1054.50"></text></g><g><title>mbstowcs (libc-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1060" width="1" height="15" fill="rgb(207,103,31)"/><text x="13.00" y="1070.50"></text></g><g><title>0x7f121833f396 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1076" width="1" height="15" fill="rgb(207,146,26)"/><text x="13.00" y="1086.50"></text></g><g><title>0x7f1218328034 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="10" y="1092" width="1" height="15" fill="rgb(215,8,36)"/><text x="13.00" y="1102.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.23%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(207,70,34)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.23%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(238,29,32)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.23%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(227,198,45)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.23%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(221,41,3)"/><text x="13.00" y="926.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.12%)</title><rect x="11" y="932" width="1" height="15" fill="rgb(213,112,26)"/><text x="14.00" y="942.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.12%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(222,156,45)"/><text x="14.00" y="958.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="12" y="868" width="2" height="15" fill="rgb(209,218,40)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="12" y="884" width="2" height="15" fill="rgb(251,95,43)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="12" y="900" width="2" height="15" fill="rgb(236,220,33)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="12" y="916" width="2" height="15" fill="rgb(234,180,27)"/><text x="15.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(239,148,50)"/><text x="15.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(216,104,54)"/><text x="15.00" y="958.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.47%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(251,159,35)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.47%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(221,148,4)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="14" y="868" width="1" height="15" fill="rgb(253,108,4)"/><text x="17.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="14" y="884" width="1" height="15" fill="rgb(234,59,30)"/><text x="17.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="14" y="900" width="1" height="15" fill="rgb(239,206,50)"/><text x="17.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="14" y="916" width="1" height="15" fill="rgb(236,148,19)"/><text x="17.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="14" y="932" width="1" height="15" fill="rgb(248,180,43)"/><text x="17.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="14" y="948" width="1" height="15" fill="rgb(209,94,10)"/><text x="17.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.12%)</title><rect x="14" y="964" width="1" height="15" fill="rgb(240,22,2)"/><text x="17.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.12%)</title><rect x="14" y="980" width="1" height="15" fill="rgb(219,176,46)"/><text x="17.00" y="990.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.12%)</title><rect x="15" y="916" width="1" height="15" fill="rgb(246,145,45)"/><text x="18.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.12%)</title><rect x="15" y="932" width="1" height="15" fill="rgb(229,229,32)"/><text x="18.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.12%)</title><rect x="15" y="948" width="1" height="15" fill="rgb(250,223,11)"/><text x="18.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.12%)</title><rect x="15" y="964" width="1" height="15" fill="rgb(232,182,15)"/><text x="18.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="15" y="980" width="1" height="15" fill="rgb(207,99,18)"/><text x="18.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.12%)</title><rect x="15" y="996" width="1" height="15" fill="rgb(249,168,23)"/><text x="18.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.12%)</title><rect x="15" y="1012" width="1" height="15" fill="rgb(226,161,49)"/><text x="18.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.12%)</title><rect x="15" y="1028" width="1" height="15" fill="rgb(221,42,16)"/><text x="18.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.12%)</title><rect x="15" y="1044" width="1" height="15" fill="rgb(223,108,12)"/><text x="18.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.12%)</title><rect x="15" y="1060" width="1" height="15" fill="rgb(212,83,16)"/><text x="18.00" y="1070.50"></text></g><g><title>__setitem__ (sre_parse.py) (1 samples, 0.12%)</title><rect x="15" y="1076" width="1" height="15" fill="rgb(219,122,44)"/><text x="18.00" y="1086.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.12%)</title><rect x="15" y="1092" width="1" height="15" fill="rgb(211,210,35)"/><text x="18.00" y="1102.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 0.70%)</title><rect x="10" y="292" width="8" height="15" fill="rgb(211,195,15)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="308" width="8" height="15" fill="rgb(219,57,51)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="324" width="8" height="15" fill="rgb(228,204,43)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="340" width="8" height="15" fill="rgb(238,70,31)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.70%)</title><rect x="10" y="356" width="8" height="15" fill="rgb(221,129,16)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="372" width="8" height="15" fill="rgb(244,27,23)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 0.70%)</title><rect x="10" y="388" width="8" height="15" fill="rgb(238,10,40)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="404" width="8" height="15" fill="rgb(241,54,36)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="420" width="8" height="15" fill="rgb(243,217,4)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="436" width="8" height="15" fill="rgb(247,225,16)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.70%)</title><rect x="10" y="452" width="8" height="15" fill="rgb(241,34,37)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="468" width="8" height="15" fill="rgb(250,98,33)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 0.70%)</title><rect x="10" y="484" width="8" height="15" fill="rgb(228,1,45)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="500" width="8" height="15" fill="rgb(219,112,27)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="516" width="8" height="15" fill="rgb(247,184,14)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="532" width="8" height="15" fill="rgb(214,14,36)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.70%)</title><rect x="10" y="548" width="8" height="15" fill="rgb(221,187,29)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="564" width="8" height="15" fill="rgb(212,133,54)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 0.70%)</title><rect x="10" y="580" width="8" height="15" fill="rgb(213,109,17)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="596" width="8" height="15" fill="rgb(233,60,40)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="612" width="8" height="15" fill="rgb(222,147,22)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="628" width="8" height="15" fill="rgb(227,93,35)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="644" width="8" height="15" fill="rgb(226,121,12)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="660" width="8" height="15" fill="rgb(246,221,52)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="676" width="8" height="15" fill="rgb(211,215,45)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.70%)</title><rect x="10" y="692" width="8" height="15" fill="rgb(214,76,18)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="708" width="8" height="15" fill="rgb(246,44,40)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 0.70%)</title><rect x="10" y="724" width="8" height="15" fill="rgb(248,217,12)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="740" width="8" height="15" fill="rgb(217,104,51)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="756" width="8" height="15" fill="rgb(211,155,14)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="772" width="8" height="15" fill="rgb(242,9,2)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.70%)</title><rect x="10" y="788" width="8" height="15" fill="rgb(211,206,0)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="10" y="804" width="8" height="15" fill="rgb(242,212,53)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 0.70%)</title><rect x="10" y="820" width="8" height="15" fill="rgb(230,206,6)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="15" y="836" width="3" height="15" fill="rgb(208,156,39)"/><text x="18.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="15" y="852" width="3" height="15" fill="rgb(231,95,45)"/><text x="18.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="15" y="868" width="3" height="15" fill="rgb(248,11,11)"/><text x="18.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="15" y="884" width="3" height="15" fill="rgb(207,79,17)"/><text x="18.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="15" y="900" width="3" height="15" fill="rgb(248,186,2)"/><text x="18.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.12%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(218,220,39)"/><text x="19.00" y="926.50"></text></g><g><title>Version (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.12%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(229,23,9)"/><text x="19.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.12%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(245,31,4)"/><text x="19.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.12%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(230,110,36)"/><text x="19.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="16" y="980" width="2" height="15" fill="rgb(243,33,52)"/><text x="19.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.12%)</title><rect x="16" y="996" width="2" height="15" fill="rgb(215,186,12)"/><text x="19.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.12%)</title><rect x="16" y="1012" width="2" height="15" fill="rgb(232,96,22)"/><text x="19.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.12%)</title><rect x="16" y="1028" width="2" height="15" fill="rgb(232,4,39)"/><text x="19.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.12%)</title><rect x="16" y="1044" width="2" height="15" fill="rgb(209,117,23)"/><text x="19.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.12%)</title><rect x="16" y="1060" width="2" height="15" fill="rgb(235,48,23)"/><text x="19.00" y="1070.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.12%)</title><rect x="16" y="1076" width="2" height="15" fill="rgb(247,146,54)"/><text x="19.00" y="1086.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.12%)</title><rect x="16" y="1092" width="2" height="15" fill="rgb(227,81,52)"/><text x="19.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py) (1 samples, 0.12%)</title><rect x="18" y="580" width="1" height="15" fill="rgb(239,166,20)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="18" y="596" width="1" height="15" fill="rgb(210,100,11)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="18" y="612" width="1" height="15" fill="rgb(210,135,10)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="18" y="628" width="1" height="15" fill="rgb(222,60,24)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="18" y="644" width="1" height="15" fill="rgb(249,224,30)"/><text x="21.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="18" y="660" width="1" height="15" fill="rgb(254,14,9)"/><text x="21.00" y="670.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="18" y="676" width="1" height="15" fill="rgb(234,25,35)"/><text x="21.00" y="686.50"></text></g><g><title>lseek64 (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="18" y="692" width="1" height="15" fill="rgb(211,105,22)"/><text x="21.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.94%)</title><rect x="10" y="196" width="11" height="15" fill="rgb(211,14,22)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.94%)</title><rect x="10" y="212" width="11" height="15" fill="rgb(254,209,2)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.94%)</title><rect x="10" y="228" width="11" height="15" fill="rgb(246,25,44)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.94%)</title><rect x="10" y="244" width="11" height="15" fill="rgb(236,41,42)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.94%)</title><rect x="10" y="260" width="11" height="15" fill="rgb(218,2,10)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.94%)</title><rect x="10" y="276" width="11" height="15" fill="rgb(226,85,38)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.23%)</title><rect x="18" y="292" width="3" height="15" fill="rgb(242,159,34)"/><text x="21.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="18" y="308" width="3" height="15" fill="rgb(231,110,53)"/><text x="21.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="18" y="324" width="3" height="15" fill="rgb(232,120,31)"/><text x="21.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="18" y="340" width="3" height="15" fill="rgb(227,209,8)"/><text x="21.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="18" y="356" width="3" height="15" fill="rgb(230,63,11)"/><text x="21.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="18" y="372" width="3" height="15" fill="rgb(253,217,48)"/><text x="21.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.23%)</title><rect x="18" y="388" width="3" height="15" fill="rgb(250,98,4)"/><text x="21.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="18" y="404" width="3" height="15" fill="rgb(231,42,12)"/><text x="21.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="18" y="420" width="3" height="15" fill="rgb(223,207,14)"/><text x="21.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="18" y="436" width="3" height="15" fill="rgb(209,1,7)"/><text x="21.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="18" y="452" width="3" height="15" fill="rgb(242,24,46)"/><text x="21.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="18" y="468" width="3" height="15" fill="rgb(247,50,21)"/><text x="21.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.23%)</title><rect x="18" y="484" width="3" height="15" fill="rgb(206,122,46)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="18" y="500" width="3" height="15" fill="rgb(221,50,14)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="18" y="516" width="3" height="15" fill="rgb(214,130,15)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="18" y="532" width="3" height="15" fill="rgb(245,171,30)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="18" y="548" width="3" height="15" fill="rgb(224,227,47)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="18" y="564" width="3" height="15" fill="rgb(236,150,17)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.12%)</title><rect x="19" y="580" width="2" height="15" fill="rgb(230,74,23)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="596" width="2" height="15" fill="rgb(222,227,52)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="612" width="2" height="15" fill="rgb(211,91,28)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="628" width="2" height="15" fill="rgb(250,211,18)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="644" width="2" height="15" fill="rgb(216,167,6)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="660" width="2" height="15" fill="rgb(234,45,36)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.12%)</title><rect x="19" y="676" width="2" height="15" fill="rgb(245,214,15)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="692" width="2" height="15" fill="rgb(226,114,33)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="708" width="2" height="15" fill="rgb(240,181,36)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="724" width="2" height="15" fill="rgb(241,199,50)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="740" width="2" height="15" fill="rgb(247,58,47)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="756" width="2" height="15" fill="rgb(222,115,19)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.12%)</title><rect x="19" y="772" width="2" height="15" fill="rgb(223,4,51)"/><text x="22.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="788" width="2" height="15" fill="rgb(246,21,52)"/><text x="22.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="804" width="2" height="15" fill="rgb(234,55,43)"/><text x="22.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="820" width="2" height="15" fill="rgb(208,114,14)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="836" width="2" height="15" fill="rgb(243,65,7)"/><text x="22.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="852" width="2" height="15" fill="rgb(239,26,26)"/><text x="22.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="868" width="2" height="15" fill="rgb(214,124,38)"/><text x="22.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="884" width="2" height="15" fill="rgb(244,6,48)"/><text x="22.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.12%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(236,86,3)"/><text x="22.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(245,163,45)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(205,83,3)"/><text x="22.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(231,137,22)"/><text x="22.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="964" width="2" height="15" fill="rgb(254,41,52)"/><text x="22.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="980" width="2" height="15" fill="rgb(245,156,54)"/><text x="22.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.12%)</title><rect x="19" y="996" width="2" height="15" fill="rgb(213,57,23)"/><text x="22.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1012" width="2" height="15" fill="rgb(235,184,34)"/><text x="22.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1028" width="2" height="15" fill="rgb(227,48,13)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1044" width="2" height="15" fill="rgb(254,126,54)"/><text x="22.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1060" width="2" height="15" fill="rgb(243,219,2)"/><text x="22.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1076" width="2" height="15" fill="rgb(254,28,41)"/><text x="22.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="1092" width="2" height="15" fill="rgb(217,61,50)"/><text x="22.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1108" width="2" height="15" fill="rgb(213,34,29)"/><text x="22.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.12%)</title><rect x="19" y="1124" width="2" height="15" fill="rgb(254,204,15)"/><text x="22.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1140" width="2" height="15" fill="rgb(234,33,6)"/><text x="22.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1156" width="2" height="15" fill="rgb(231,26,34)"/><text x="22.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1172" width="2" height="15" fill="rgb(241,45,0)"/><text x="22.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="1188" width="2" height="15" fill="rgb(231,143,9)"/><text x="22.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1204" width="2" height="15" fill="rgb(231,164,52)"/><text x="22.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.12%)</title><rect x="19" y="1220" width="2" height="15" fill="rgb(249,35,46)"/><text x="22.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1236" width="2" height="15" fill="rgb(218,195,28)"/><text x="22.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1252" width="2" height="15" fill="rgb(243,109,27)"/><text x="22.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1268" width="2" height="15" fill="rgb(224,3,53)"/><text x="22.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="1284" width="2" height="15" fill="rgb(226,38,40)"/><text x="22.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1300" width="2" height="15" fill="rgb(210,189,1)"/><text x="22.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_exact.py) (1 samples, 0.12%)</title><rect x="19" y="1316" width="2" height="15" fill="rgb(210,175,11)"/><text x="22.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="484" width="1" height="15" fill="rgb(242,37,38)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="500" width="1" height="15" fill="rgb(238,7,5)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="516" width="1" height="15" fill="rgb(248,174,20)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="532" width="1" height="15" fill="rgb(239,111,4)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="21" y="548" width="1" height="15" fill="rgb(225,34,40)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="564" width="1" height="15" fill="rgb(250,125,18)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.12%)</title><rect x="21" y="580" width="1" height="15" fill="rgb(237,33,4)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="596" width="1" height="15" fill="rgb(229,35,36)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="612" width="1" height="15" fill="rgb(210,19,33)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="628" width="1" height="15" fill="rgb(217,30,47)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="21" y="644" width="1" height="15" fill="rgb(230,127,37)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="660" width="1" height="15" fill="rgb(212,182,23)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.12%)</title><rect x="21" y="676" width="1" height="15" fill="rgb(216,191,48)"/><text x="24.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="692" width="1" height="15" fill="rgb(234,175,33)"/><text x="24.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="708" width="1" height="15" fill="rgb(231,55,53)"/><text x="24.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="724" width="1" height="15" fill="rgb(223,90,37)"/><text x="24.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="21" y="740" width="1" height="15" fill="rgb(206,108,9)"/><text x="24.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="756" width="1" height="15" fill="rgb(234,145,23)"/><text x="24.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.12%)</title><rect x="21" y="772" width="1" height="15" fill="rgb(214,93,53)"/><text x="24.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="788" width="1" height="15" fill="rgb(232,156,13)"/><text x="24.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="804" width="1" height="15" fill="rgb(233,6,18)"/><text x="24.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="820" width="1" height="15" fill="rgb(224,191,3)"/><text x="24.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="21" y="836" width="1" height="15" fill="rgb(253,54,25)"/><text x="24.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="852" width="1" height="15" fill="rgb(213,75,29)"/><text x="24.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.12%)</title><rect x="21" y="868" width="1" height="15" fill="rgb(246,3,45)"/><text x="24.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="884" width="1" height="15" fill="rgb(222,84,2)"/><text x="24.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="900" width="1" height="15" fill="rgb(234,97,40)"/><text x="24.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="916" width="1" height="15" fill="rgb(229,45,47)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="932" width="1" height="15" fill="rgb(210,52,6)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="948" width="1" height="15" fill="rgb(240,13,46)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="964" width="1" height="15" fill="rgb(208,132,22)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="21" y="980" width="1" height="15" fill="rgb(231,227,43)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="996" width="1" height="15" fill="rgb(214,184,28)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.12%)</title><rect x="21" y="1012" width="1" height="15" fill="rgb(218,110,51)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="1028" width="1" height="15" fill="rgb(221,34,20)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="1044" width="1" height="15" fill="rgb(234,138,47)"/><text x="24.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="1060" width="1" height="15" fill="rgb(223,100,17)"/><text x="24.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="21" y="1076" width="1" height="15" fill="rgb(226,186,29)"/><text x="24.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="1092" width="1" height="15" fill="rgb(210,11,38)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.12%)</title><rect x="21" y="1108" width="1" height="15" fill="rgb(218,22,18)"/><text x="24.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="1124" width="1" height="15" fill="rgb(207,60,26)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="1140" width="1" height="15" fill="rgb(207,179,33)"/><text x="24.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="1156" width="1" height="15" fill="rgb(236,171,26)"/><text x="24.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="21" y="1172" width="1" height="15" fill="rgb(207,107,25)"/><text x="24.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="1188" width="1" height="15" fill="rgb(212,54,7)"/><text x="24.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.12%)</title><rect x="21" y="1204" width="1" height="15" fill="rgb(246,147,32)"/><text x="24.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="1220" width="1" height="15" fill="rgb(226,75,42)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="1236" width="1" height="15" fill="rgb(240,198,25)"/><text x="24.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="1252" width="1" height="15" fill="rgb(205,30,9)"/><text x="24.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="21" y="1268" width="1" height="15" fill="rgb(209,184,0)"/><text x="24.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="21" y="1284" width="1" height="15" fill="rgb(236,81,2)"/><text x="24.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.12%)</title><rect x="21" y="1300" width="1" height="15" fill="rgb(233,1,7)"/><text x="24.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.12%)</title><rect x="21" y="1316" width="1" height="15" fill="rgb(210,74,9)"/><text x="24.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.12%)</title><rect x="21" y="1332" width="1" height="15" fill="rgb(251,164,14)"/><text x="24.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.12%)</title><rect x="21" y="1348" width="1" height="15" fill="rgb(223,15,19)"/><text x="24.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.12%)</title><rect x="21" y="1364" width="1" height="15" fill="rgb(236,101,47)"/><text x="24.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.12%)</title><rect x="21" y="1380" width="1" height="15" fill="rgb(213,120,47)"/><text x="24.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.12%)</title><rect x="21" y="1396" width="1" height="15" fill="rgb(206,69,26)"/><text x="24.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1188" width="1" height="15" fill="rgb(243,121,31)"/><text x="25.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.12%)</title><rect x="22" y="1204" width="1" height="15" fill="rgb(211,70,41)"/><text x="25.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1220" width="1" height="15" fill="rgb(217,218,35)"/><text x="25.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1236" width="1" height="15" fill="rgb(248,220,39)"/><text x="25.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1252" width="1" height="15" fill="rgb(214,46,18)"/><text x="25.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="22" y="1268" width="1" height="15" fill="rgb(232,206,18)"/><text x="25.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1284" width="1" height="15" fill="rgb(224,78,26)"/><text x="25.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.12%)</title><rect x="22" y="1300" width="1" height="15" fill="rgb(206,136,35)"/><text x="25.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1316" width="1" height="15" fill="rgb(245,223,37)"/><text x="25.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1332" width="1" height="15" fill="rgb(207,176,52)"/><text x="25.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1348" width="1" height="15" fill="rgb(254,116,41)"/><text x="25.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="22" y="1364" width="1" height="15" fill="rgb(244,47,39)"/><text x="25.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1380" width="1" height="15" fill="rgb(231,52,11)"/><text x="25.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/datetimes.py) (1 samples, 0.12%)</title><rect x="22" y="1396" width="1" height="15" fill="rgb(229,65,21)"/><text x="25.00" y="1406.50"></text></g><g><title>DatetimeIndex (pandas/core/indexes/datetimes.py) (1 samples, 0.12%)</title><rect x="22" y="1412" width="1" height="15" fill="rgb(205,137,46)"/><text x="25.00" y="1422.50"></text></g><g><title>_join_i8_wrapper (pandas/core/indexes/datetimes.py) (1 samples, 0.12%)</title><rect x="22" y="1428" width="1" height="15" fill="rgb(239,223,44)"/><text x="25.00" y="1438.50"></text></g><g><title>_join_i8_wrapper (pandas/core/indexes/datetimelike.py) (1 samples, 0.12%)</title><rect x="22" y="1444" width="1" height="15" fill="rgb(250,90,32)"/><text x="25.00" y="1454.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (2 samples, 0.23%)</title><rect x="22" y="1108" width="3" height="15" fill="rgb(230,105,44)"/><text x="25.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="22" y="1124" width="3" height="15" fill="rgb(222,12,0)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="22" y="1140" width="3" height="15" fill="rgb(252,85,47)"/><text x="25.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="22" y="1156" width="3" height="15" fill="rgb(238,105,48)"/><text x="25.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="22" y="1172" width="3" height="15" fill="rgb(211,172,42)"/><text x="25.00" y="1182.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="23" y="1188" width="2" height="15" fill="rgb(226,215,1)"/><text x="26.00" y="1198.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="23" y="1204" width="2" height="15" fill="rgb(254,197,1)"/><text x="26.00" y="1214.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="23" y="1220" width="2" height="15" fill="rgb(232,110,52)"/><text x="26.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.35%)</title><rect x="22" y="724" width="4" height="15" fill="rgb(206,109,44)"/><text x="25.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="740" width="4" height="15" fill="rgb(246,227,53)"/><text x="25.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="756" width="4" height="15" fill="rgb(233,173,38)"/><text x="25.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="772" width="4" height="15" fill="rgb(208,117,40)"/><text x="25.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.35%)</title><rect x="22" y="788" width="4" height="15" fill="rgb(208,6,51)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="804" width="4" height="15" fill="rgb(223,190,48)"/><text x="25.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.35%)</title><rect x="22" y="820" width="4" height="15" fill="rgb(253,131,38)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="836" width="4" height="15" fill="rgb(214,38,43)"/><text x="25.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="852" width="4" height="15" fill="rgb(250,177,36)"/><text x="25.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="868" width="4" height="15" fill="rgb(246,168,43)"/><text x="25.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.35%)</title><rect x="22" y="884" width="4" height="15" fill="rgb(219,15,23)"/><text x="25.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="900" width="4" height="15" fill="rgb(234,160,10)"/><text x="25.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.35%)</title><rect x="22" y="916" width="4" height="15" fill="rgb(236,57,44)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="932" width="4" height="15" fill="rgb(239,174,11)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="948" width="4" height="15" fill="rgb(213,171,8)"/><text x="25.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="964" width="4" height="15" fill="rgb(218,180,39)"/><text x="25.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.35%)</title><rect x="22" y="980" width="4" height="15" fill="rgb(211,37,45)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="996" width="4" height="15" fill="rgb(206,59,38)"/><text x="25.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.35%)</title><rect x="22" y="1012" width="4" height="15" fill="rgb(228,41,18)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="1028" width="4" height="15" fill="rgb(208,153,47)"/><text x="25.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="1044" width="4" height="15" fill="rgb(252,120,20)"/><text x="25.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="1060" width="4" height="15" fill="rgb(238,168,46)"/><text x="25.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.35%)</title><rect x="22" y="1076" width="4" height="15" fill="rgb(244,67,17)"/><text x="25.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.35%)</title><rect x="22" y="1092" width="4" height="15" fill="rgb(226,212,12)"/><text x="25.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.12%)</title><rect x="25" y="1108" width="1" height="15" fill="rgb(254,67,39)"/><text x="28.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1124" width="1" height="15" fill="rgb(239,169,6)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1140" width="1" height="15" fill="rgb(232,48,6)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1156" width="1" height="15" fill="rgb(223,215,1)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="25" y="1172" width="1" height="15" fill="rgb(238,18,21)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1188" width="1" height="15" fill="rgb(241,1,8)"/><text x="28.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.12%)</title><rect x="25" y="1204" width="1" height="15" fill="rgb(229,4,23)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1220" width="1" height="15" fill="rgb(210,180,2)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1236" width="1" height="15" fill="rgb(248,183,27)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1252" width="1" height="15" fill="rgb(225,163,19)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="25" y="1268" width="1" height="15" fill="rgb(227,165,14)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1284" width="1" height="15" fill="rgb(212,59,28)"/><text x="28.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.12%)</title><rect x="25" y="1300" width="1" height="15" fill="rgb(210,146,16)"/><text x="28.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1316" width="1" height="15" fill="rgb(229,187,46)"/><text x="28.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1332" width="1" height="15" fill="rgb(224,148,46)"/><text x="28.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1348" width="1" height="15" fill="rgb(211,18,19)"/><text x="28.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="25" y="1364" width="1" height="15" fill="rgb(229,225,47)"/><text x="28.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1380" width="1" height="15" fill="rgb(218,150,25)"/><text x="28.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.12%)</title><rect x="25" y="1396" width="1" height="15" fill="rgb(222,51,18)"/><text x="28.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1412" width="1" height="15" fill="rgb(206,217,37)"/><text x="28.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1428" width="1" height="15" fill="rgb(205,42,26)"/><text x="28.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1444" width="1" height="15" fill="rgb(205,98,28)"/><text x="28.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="25" y="1460" width="1" height="15" fill="rgb(249,192,45)"/><text x="28.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1476" width="1" height="15" fill="rgb(229,92,0)"/><text x="28.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.12%)</title><rect x="25" y="1492" width="1" height="15" fill="rgb(220,155,2)"/><text x="28.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1508" width="1" height="15" fill="rgb(214,185,19)"/><text x="28.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1524" width="1" height="15" fill="rgb(232,227,9)"/><text x="28.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1540" width="1" height="15" fill="rgb(215,33,50)"/><text x="28.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1556" width="1" height="15" fill="rgb(218,50,13)"/><text x="28.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1572" width="1" height="15" fill="rgb(236,44,4)"/><text x="28.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1588" width="1" height="15" fill="rgb(221,151,22)"/><text x="28.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="25" y="1604" width="1" height="15" fill="rgb(242,16,44)"/><text x="28.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1620" width="1" height="15" fill="rgb(210,157,7)"/><text x="28.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.12%)</title><rect x="25" y="1636" width="1" height="15" fill="rgb(214,178,31)"/><text x="28.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1652" width="1" height="15" fill="rgb(244,42,16)"/><text x="28.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1668" width="1" height="15" fill="rgb(205,101,51)"/><text x="28.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1684" width="1" height="15" fill="rgb(236,94,49)"/><text x="28.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1700" width="1" height="15" fill="rgb(229,75,43)"/><text x="28.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1716" width="1" height="15" fill="rgb(235,22,48)"/><text x="28.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="25" y="1732" width="1" height="15" fill="rgb(244,110,16)"/><text x="28.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1748" width="1" height="15" fill="rgb(244,8,10)"/><text x="28.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.12%)</title><rect x="25" y="1764" width="1" height="15" fill="rgb(213,10,43)"/><text x="28.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1780" width="1" height="15" fill="rgb(249,153,26)"/><text x="28.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1796" width="1" height="15" fill="rgb(251,107,54)"/><text x="28.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1812" width="1" height="15" fill="rgb(249,194,16)"/><text x="28.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="25" y="1828" width="1" height="15" fill="rgb(236,56,47)"/><text x="28.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1844" width="1" height="15" fill="rgb(229,97,23)"/><text x="28.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.12%)</title><rect x="25" y="1860" width="1" height="15" fill="rgb(254,132,38)"/><text x="28.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1876" width="1" height="15" fill="rgb(241,210,9)"/><text x="28.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1892" width="1" height="15" fill="rgb(237,22,3)"/><text x="28.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1908" width="1" height="15" fill="rgb(238,147,25)"/><text x="28.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="25" y="1924" width="1" height="15" fill="rgb(252,17,33)"/><text x="28.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="1940" width="1" height="15" fill="rgb(226,35,23)"/><text x="28.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.12%)</title><rect x="25" y="1956" width="1" height="15" fill="rgb(235,163,44)"/><text x="28.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py) (1 samples, 0.12%)</title><rect x="25" y="1972" width="1" height="15" fill="rgb(212,229,5)"/><text x="28.00" y="1982.50"></text></g><g><title>__init__ (pyparsing.py) (1 samples, 0.12%)</title><rect x="25" y="1988" width="1" height="15" fill="rgb(233,153,19)"/><text x="28.00" y="1998.50"></text></g><g><title>compile (re.py) (1 samples, 0.12%)</title><rect x="25" y="2004" width="1" height="15" fill="rgb(211,120,21)"/><text x="28.00" y="2014.50"></text></g><g><title>_compile (re.py) (1 samples, 0.12%)</title><rect x="25" y="2020" width="1" height="15" fill="rgb(247,170,5)"/><text x="28.00" y="2030.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="25" y="2036" width="1" height="15" fill="rgb(207,125,45)"/><text x="28.00" y="2046.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.12%)</title><rect x="25" y="2052" width="1" height="15" fill="rgb(218,204,29)"/><text x="28.00" y="2062.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.59%)</title><rect x="21" y="340" width="6" height="15" fill="rgb(217,123,42)"/><text x="24.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.59%)</title><rect x="21" y="356" width="6" height="15" fill="rgb(254,170,34)"/><text x="24.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.59%)</title><rect x="21" y="372" width="6" height="15" fill="rgb(209,196,53)"/><text x="24.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.59%)</title><rect x="21" y="388" width="6" height="15" fill="rgb(231,224,23)"/><text x="24.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.59%)</title><rect x="21" y="404" width="6" height="15" fill="rgb(253,46,28)"/><text x="24.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.59%)</title><rect x="21" y="420" width="6" height="15" fill="rgb(232,80,11)"/><text x="24.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 0.59%)</title><rect x="21" y="436" width="6" height="15" fill="rgb(240,115,0)"/><text x="24.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.59%)</title><rect x="21" y="452" width="6" height="15" fill="rgb(228,114,15)"/><text x="24.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.59%)</title><rect x="21" y="468" width="6" height="15" fill="rgb(218,147,52)"/><text x="24.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.47%)</title><rect x="22" y="484" width="5" height="15" fill="rgb(234,179,49)"/><text x="25.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.47%)</title><rect x="22" y="500" width="5" height="15" fill="rgb(233,112,3)"/><text x="25.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.47%)</title><rect x="22" y="516" width="5" height="15" fill="rgb(251,78,18)"/><text x="25.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.47%)</title><rect x="22" y="532" width="5" height="15" fill="rgb(207,168,14)"/><text x="25.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.47%)</title><rect x="22" y="548" width="5" height="15" fill="rgb(226,100,15)"/><text x="25.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.47%)</title><rect x="22" y="564" width="5" height="15" fill="rgb(244,152,10)"/><text x="25.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.47%)</title><rect x="22" y="580" width="5" height="15" fill="rgb(253,5,50)"/><text x="25.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.47%)</title><rect x="22" y="596" width="5" height="15" fill="rgb(205,46,16)"/><text x="25.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.47%)</title><rect x="22" y="612" width="5" height="15" fill="rgb(208,66,10)"/><text x="25.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.47%)</title><rect x="22" y="628" width="5" height="15" fill="rgb(208,215,27)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.47%)</title><rect x="22" y="644" width="5" height="15" fill="rgb(212,142,20)"/><text x="25.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.47%)</title><rect x="22" y="660" width="5" height="15" fill="rgb(228,121,46)"/><text x="25.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.47%)</title><rect x="22" y="676" width="5" height="15" fill="rgb(251,215,21)"/><text x="25.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.47%)</title><rect x="22" y="692" width="5" height="15" fill="rgb(220,139,22)"/><text x="25.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.47%)</title><rect x="22" y="708" width="5" height="15" fill="rgb(230,138,14)"/><text x="25.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.12%)</title><rect x="26" y="724" width="1" height="15" fill="rgb(233,207,35)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="26" y="740" width="1" height="15" fill="rgb(214,206,33)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="26" y="756" width="1" height="15" fill="rgb(206,151,11)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="26" y="772" width="1" height="15" fill="rgb(228,190,20)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="26" y="788" width="1" height="15" fill="rgb(252,20,18)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="26" y="804" width="1" height="15" fill="rgb(220,180,4)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py) (1 samples, 0.12%)</title><rect x="26" y="820" width="1" height="15" fill="rgb(226,57,13)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="26" y="836" width="1" height="15" fill="rgb(241,35,1)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="26" y="852" width="1" height="15" fill="rgb(216,180,0)"/><text x="29.00" y="862.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="26" y="868" width="1" height="15" fill="rgb(227,111,26)"/><text x="29.00" y="878.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="26" y="884" width="1" height="15" fill="rgb(235,142,4)"/><text x="29.00" y="894.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="26" y="900" width="1" height="15" fill="rgb(211,21,19)"/><text x="29.00" y="910.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="26" y="916" width="1" height="15" fill="rgb(231,190,17)"/><text x="29.00" y="926.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.12%)</title><rect x="26" y="932" width="1" height="15" fill="rgb(239,94,5)"/><text x="29.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 0.70%)</title><rect x="21" y="244" width="8" height="15" fill="rgb(226,175,48)"/><text x="24.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="21" y="260" width="8" height="15" fill="rgb(222,47,3)"/><text x="24.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="21" y="276" width="8" height="15" fill="rgb(213,227,44)"/><text x="24.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="21" y="292" width="8" height="15" fill="rgb(210,191,47)"/><text x="24.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.70%)</title><rect x="21" y="308" width="8" height="15" fill="rgb(220,150,44)"/><text x="24.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.70%)</title><rect x="21" y="324" width="8" height="15" fill="rgb(213,57,43)"/><text x="24.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.12%)</title><rect x="27" y="340" width="2" height="15" fill="rgb(226,53,41)"/><text x="30.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="356" width="2" height="15" fill="rgb(251,119,48)"/><text x="30.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="372" width="2" height="15" fill="rgb(215,185,15)"/><text x="30.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="388" width="2" height="15" fill="rgb(251,84,9)"/><text x="30.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="404" width="2" height="15" fill="rgb(243,110,13)"/><text x="30.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="420" width="2" height="15" fill="rgb(205,212,23)"/><text x="30.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="436" width="2" height="15" fill="rgb(226,94,16)"/><text x="30.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="27" y="452" width="2" height="15" fill="rgb(252,7,19)"/><text x="30.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="468" width="2" height="15" fill="rgb(235,201,42)"/><text x="30.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.12%)</title><rect x="27" y="484" width="2" height="15" fill="rgb(245,100,43)"/><text x="30.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="500" width="2" height="15" fill="rgb(206,227,39)"/><text x="30.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="516" width="2" height="15" fill="rgb(248,38,1)"/><text x="30.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="532" width="2" height="15" fill="rgb(207,143,39)"/><text x="30.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="27" y="548" width="2" height="15" fill="rgb(216,203,20)"/><text x="30.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="564" width="2" height="15" fill="rgb(205,179,14)"/><text x="30.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.12%)</title><rect x="27" y="580" width="2" height="15" fill="rgb(208,146,48)"/><text x="30.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="596" width="2" height="15" fill="rgb(234,175,46)"/><text x="30.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="612" width="2" height="15" fill="rgb(229,9,9)"/><text x="30.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="628" width="2" height="15" fill="rgb(210,4,25)"/><text x="30.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="644" width="2" height="15" fill="rgb(216,91,23)"/><text x="30.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="660" width="2" height="15" fill="rgb(222,65,33)"/><text x="30.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="676" width="2" height="15" fill="rgb(235,99,27)"/><text x="30.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="27" y="692" width="2" height="15" fill="rgb(230,63,45)"/><text x="30.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="708" width="2" height="15" fill="rgb(216,145,19)"/><text x="30.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.12%)</title><rect x="27" y="724" width="2" height="15" fill="rgb(220,59,14)"/><text x="30.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="740" width="2" height="15" fill="rgb(249,37,0)"/><text x="30.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="756" width="2" height="15" fill="rgb(249,14,31)"/><text x="30.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="772" width="2" height="15" fill="rgb(252,133,12)"/><text x="30.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="27" y="788" width="2" height="15" fill="rgb(207,191,7)"/><text x="30.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="804" width="2" height="15" fill="rgb(248,40,53)"/><text x="30.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.12%)</title><rect x="27" y="820" width="2" height="15" fill="rgb(216,61,7)"/><text x="30.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="836" width="2" height="15" fill="rgb(222,192,31)"/><text x="30.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="852" width="2" height="15" fill="rgb(239,26,18)"/><text x="30.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="868" width="2" height="15" fill="rgb(251,64,36)"/><text x="30.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="27" y="884" width="2" height="15" fill="rgb(206,68,49)"/><text x="30.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="900" width="2" height="15" fill="rgb(224,65,42)"/><text x="30.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.12%)</title><rect x="27" y="916" width="2" height="15" fill="rgb(216,213,38)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="932" width="2" height="15" fill="rgb(253,76,49)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="948" width="2" height="15" fill="rgb(231,131,3)"/><text x="30.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="964" width="2" height="15" fill="rgb(231,87,6)"/><text x="30.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="980" width="2" height="15" fill="rgb(211,190,44)"/><text x="30.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="996" width="2" height="15" fill="rgb(211,199,23)"/><text x="30.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="1012" width="2" height="15" fill="rgb(252,21,29)"/><text x="30.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="27" y="1028" width="2" height="15" fill="rgb(234,67,20)"/><text x="30.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="1044" width="2" height="15" fill="rgb(254,3,1)"/><text x="30.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.12%)</title><rect x="27" y="1060" width="2" height="15" fill="rgb(212,168,6)"/><text x="30.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="1076" width="2" height="15" fill="rgb(254,37,41)"/><text x="30.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="1092" width="2" height="15" fill="rgb(230,4,52)"/><text x="30.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="1108" width="2" height="15" fill="rgb(240,44,11)"/><text x="30.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="27" y="1124" width="2" height="15" fill="rgb(234,85,6)"/><text x="30.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="27" y="1140" width="2" height="15" fill="rgb(224,19,40)"/><text x="30.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="27" y="1156" width="2" height="15" fill="rgb(230,32,34)"/><text x="30.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.76%)</title><rect x="10" y="68" width="20" height="15" fill="rgb(252,128,38)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.76%)</title><rect x="10" y="84" width="20" height="15" fill="rgb(213,76,12)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.76%)</title><rect x="10" y="100" width="20" height="15" fill="rgb(236,19,28)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 1.76%)</title><rect x="10" y="116" width="20" height="15" fill="rgb(238,214,33)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.76%)</title><rect x="10" y="132" width="20" height="15" fill="rgb(248,34,0)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf.py) (15 samples, 1.76%)</title><rect x="10" y="148" width="20" height="15" fill="rgb(243,32,3)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.76%)</title><rect x="10" y="164" width="20" height="15" fill="rgb(247,122,26)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.76%)</title><rect x="10" y="180" width="20" height="15" fill="rgb(254,21,44)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.82%)</title><rect x="21" y="196" width="9" height="15" fill="rgb(248,47,9)"/><text x="24.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.82%)</title><rect x="21" y="212" width="9" height="15" fill="rgb(250,225,45)"/><text x="24.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.82%)</title><rect x="21" y="228" width="9" height="15" fill="rgb(215,97,47)"/><text x="24.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.12%)</title><rect x="29" y="244" width="1" height="15" fill="rgb(206,143,1)"/><text x="32.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="260" width="1" height="15" fill="rgb(245,193,8)"/><text x="32.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="276" width="1" height="15" fill="rgb(213,67,27)"/><text x="32.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="292" width="1" height="15" fill="rgb(232,225,49)"/><text x="32.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="308" width="1" height="15" fill="rgb(252,63,6)"/><text x="32.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="324" width="1" height="15" fill="rgb(234,92,28)"/><text x="32.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="340" width="1" height="15" fill="rgb(211,153,29)"/><text x="32.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="356" width="1" height="15" fill="rgb(212,159,13)"/><text x="32.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.12%)</title><rect x="29" y="372" width="1" height="15" fill="rgb(223,11,51)"/><text x="32.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="388" width="1" height="15" fill="rgb(253,27,36)"/><text x="32.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="404" width="1" height="15" fill="rgb(248,55,39)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="420" width="1" height="15" fill="rgb(242,69,4)"/><text x="32.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="436" width="1" height="15" fill="rgb(230,90,1)"/><text x="32.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="452" width="1" height="15" fill="rgb(244,214,5)"/><text x="32.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="468" width="1" height="15" fill="rgb(216,169,17)"/><text x="32.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="484" width="1" height="15" fill="rgb(217,207,35)"/><text x="32.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.12%)</title><rect x="29" y="500" width="1" height="15" fill="rgb(230,118,47)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="516" width="1" height="15" fill="rgb(243,163,24)"/><text x="32.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="532" width="1" height="15" fill="rgb(211,47,48)"/><text x="32.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="548" width="1" height="15" fill="rgb(210,142,9)"/><text x="32.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="564" width="1" height="15" fill="rgb(245,181,34)"/><text x="32.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="580" width="1" height="15" fill="rgb(225,45,52)"/><text x="32.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.12%)</title><rect x="29" y="596" width="1" height="15" fill="rgb(213,173,12)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="612" width="1" height="15" fill="rgb(244,57,22)"/><text x="32.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="628" width="1" height="15" fill="rgb(206,187,35)"/><text x="32.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="644" width="1" height="15" fill="rgb(216,66,27)"/><text x="32.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="660" width="1" height="15" fill="rgb(249,42,53)"/><text x="32.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="676" width="1" height="15" fill="rgb(231,157,34)"/><text x="32.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (1 samples, 0.12%)</title><rect x="29" y="692" width="1" height="15" fill="rgb(238,202,44)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="708" width="1" height="15" fill="rgb(208,110,33)"/><text x="32.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="724" width="1" height="15" fill="rgb(244,77,18)"/><text x="32.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="740" width="1" height="15" fill="rgb(205,45,53)"/><text x="32.00" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="756" width="1" height="15" fill="rgb(216,183,32)"/><text x="32.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="772" width="1" height="15" fill="rgb(242,109,25)"/><text x="32.00" y="782.50"></text></g><g><title>&lt;module&gt; (threading.py) (1 samples, 0.12%)</title><rect x="29" y="788" width="1" height="15" fill="rgb(232,175,34)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="804" width="1" height="15" fill="rgb(212,203,15)"/><text x="32.00" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="820" width="1" height="15" fill="rgb(252,118,41)"/><text x="32.00" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="836" width="1" height="15" fill="rgb(232,97,33)"/><text x="32.00" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="852" width="1" height="15" fill="rgb(219,146,45)"/><text x="32.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="868" width="1" height="15" fill="rgb(221,103,33)"/><text x="32.00" y="878.50"></text></g><g><title>&lt;module&gt; (traceback.py) (1 samples, 0.12%)</title><rect x="29" y="884" width="1" height="15" fill="rgb(217,95,43)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="900" width="1" height="15" fill="rgb(232,132,23)"/><text x="32.00" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="916" width="1" height="15" fill="rgb(241,42,44)"/><text x="32.00" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="932" width="1" height="15" fill="rgb(223,28,19)"/><text x="32.00" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="948" width="1" height="15" fill="rgb(209,24,20)"/><text x="32.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="964" width="1" height="15" fill="rgb(243,175,23)"/><text x="32.00" y="974.50"></text></g><g><title>&lt;module&gt; (linecache.py) (1 samples, 0.12%)</title><rect x="29" y="980" width="1" height="15" fill="rgb(254,193,20)"/><text x="32.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="996" width="1" height="15" fill="rgb(246,144,47)"/><text x="32.00" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1012" width="1" height="15" fill="rgb(238,137,45)"/><text x="32.00" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1028" width="1" height="15" fill="rgb(243,201,39)"/><text x="32.00" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="1044" width="1" height="15" fill="rgb(241,135,10)"/><text x="32.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1060" width="1" height="15" fill="rgb(218,82,8)"/><text x="32.00" y="1070.50"></text></g><g><title>&lt;module&gt; (tokenize.py) (1 samples, 0.12%)</title><rect x="29" y="1076" width="1" height="15" fill="rgb(241,163,51)"/><text x="32.00" y="1086.50"></text></g><g><title>compile (re.py) (1 samples, 0.12%)</title><rect x="29" y="1092" width="1" height="15" fill="rgb(222,65,19)"/><text x="32.00" y="1102.50"></text></g><g><title>_compile (re.py) (1 samples, 0.12%)</title><rect x="29" y="1108" width="1" height="15" fill="rgb(237,34,40)"/><text x="32.00" y="1118.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="29" y="1124" width="1" height="15" fill="rgb(239,110,8)"/><text x="32.00" y="1134.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.12%)</title><rect x="29" y="1140" width="1" height="15" fill="rgb(245,151,22)"/><text x="32.00" y="1150.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.12%)</title><rect x="29" y="1156" width="1" height="15" fill="rgb(248,129,28)"/><text x="32.00" y="1166.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.12%)</title><rect x="29" y="1172" width="1" height="15" fill="rgb(215,94,54)"/><text x="32.00" y="1182.50"></text></g><g><title>0x7f11d8341ff9 (?) (1 samples, 0.12%)</title><rect x="34" y="212" width="2" height="15" fill="rgb(224,81,18)"/><text x="37.00" y="222.50"></text></g><g><title>0x7f11d833cef6 (?) (1 samples, 0.12%)</title><rect x="34" y="228" width="2" height="15" fill="rgb(222,218,50)"/><text x="37.00" y="238.50"></text></g><g><title>0x7f11d8331962 (?) (1 samples, 0.12%)</title><rect x="34" y="244" width="2" height="15" fill="rgb(240,28,34)"/><text x="37.00" y="254.50"></text></g><g><title>0x7f11d83657a7 (?) (1 samples, 0.12%)</title><rect x="34" y="260" width="2" height="15" fill="rgb(220,86,14)"/><text x="37.00" y="270.50"></text></g><g><title>0x7f11d8365379 (?) (1 samples, 0.12%)</title><rect x="34" y="276" width="2" height="15" fill="rgb(233,41,17)"/><text x="37.00" y="286.50"></text></g><g><title>0x7f11d87c38b8 (?) (1 samples, 0.12%)</title><rect x="34" y="292" width="2" height="15" fill="rgb(209,209,41)"/><text x="37.00" y="302.50"></text></g><g><title>0x7f11d87c1c7f (?) (1 samples, 0.12%)</title><rect x="34" y="308" width="2" height="15" fill="rgb(251,53,31)"/><text x="37.00" y="318.50"></text></g><g><title>0x7f11d87d499c (?) (1 samples, 0.12%)</title><rect x="34" y="324" width="2" height="15" fill="rgb(209,152,45)"/><text x="37.00" y="334.50"></text></g><g><title>0x7f11d84d9c62 (?) (1 samples, 0.12%)</title><rect x="34" y="340" width="2" height="15" fill="rgb(251,179,4)"/><text x="37.00" y="350.50"></text></g><g><title>expf32x (libm-2.29.so) (1 samples, 0.12%)</title><rect x="34" y="356" width="2" height="15" fill="rgb(221,24,5)"/><text x="37.00" y="366.50"></text></g><g><title>0x7f121845d1b0 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="34" y="372" width="2" height="15" fill="rgb(208,72,9)"/><text x="37.00" y="382.50"></text></g><g><title>0x7f1207dde7a0 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="304" y="356" width="2" height="15" fill="rgb(237,222,1)"/><text x="307.00" y="366.50"></text></g><g><title>0x7f1218311961 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="306" y="356" width="1" height="15" fill="rgb(243,68,17)"/><text x="309.00" y="366.50"></text></g><g><title>0x7f1218490e4e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="307" y="356" width="1" height="15" fill="rgb(252,210,1)"/><text x="310.00" y="366.50"></text></g><g><title>0x7f1218490e96 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="308" y="356" width="2" height="15" fill="rgb(238,8,24)"/><text x="311.00" y="366.50"></text></g><g><title>0x7f121845d1b0 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="326" y="372" width="2" height="15" fill="rgb(209,108,28)"/><text x="329.00" y="382.50"></text></g><g><title>0x7f12184e3bb4 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="328" y="372" width="2" height="15" fill="rgb(250,178,1)"/><text x="331.00" y="382.50"></text></g><g><title>0x7f12184e3bde (libm-2.29.so) (3 samples, 0.35%)</title><rect x="330" y="372" width="5" height="15" fill="rgb(242,12,43)"/><text x="333.00" y="382.50"></text></g><g><title>0x7f12184e3be2 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="335" y="372" width="2" height="15" fill="rgb(234,165,25)"/><text x="338.00" y="382.50"></text></g><g><title>0x7f12184e3be7 (libm-2.29.so) (4 samples, 0.47%)</title><rect x="337" y="372" width="6" height="15" fill="rgb(206,155,1)"/><text x="340.00" y="382.50"></text></g><g><title>0x7f12184e3beb (libm-2.29.so) (1 samples, 0.12%)</title><rect x="343" y="372" width="1" height="15" fill="rgb(232,2,35)"/><text x="346.00" y="382.50"></text></g><g><title>0x7f12184e3bfc (libm-2.29.so) (1 samples, 0.12%)</title><rect x="344" y="372" width="2" height="15" fill="rgb(249,140,51)"/><text x="347.00" y="382.50"></text></g><g><title>0x7f12184e3c04 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="346" y="372" width="1" height="15" fill="rgb(250,161,16)"/><text x="349.00" y="382.50"></text></g><g><title>0x7f12184e3c0c (libm-2.29.so) (1 samples, 0.12%)</title><rect x="347" y="372" width="1" height="15" fill="rgb(205,90,7)"/><text x="350.00" y="382.50"></text></g><g><title>0x7f12184e3c10 (libm-2.29.so) (3 samples, 0.35%)</title><rect x="348" y="372" width="5" height="15" fill="rgb(249,202,27)"/><text x="351.00" y="382.50"></text></g><g><title>0x7f12184e3c28 (libm-2.29.so) (3 samples, 0.35%)</title><rect x="353" y="372" width="4" height="15" fill="rgb(213,26,40)"/><text x="356.00" y="382.50"></text></g><g><title>0x7f12184e3c2e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="357" y="372" width="1" height="15" fill="rgb(229,119,10)"/><text x="360.00" y="382.50"></text></g><g><title>0x7f12184e3c32 (libm-2.29.so) (7 samples, 0.82%)</title><rect x="358" y="372" width="10" height="15" fill="rgb(232,63,17)"/><text x="361.00" y="382.50"></text></g><g><title>0x7f12184e3c3e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="368" y="372" width="1" height="15" fill="rgb(232,16,34)"/><text x="371.00" y="382.50"></text></g><g><title>0x7f12184e3c46 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="369" y="372" width="3" height="15" fill="rgb(236,30,17)"/><text x="372.00" y="382.50"></text></g><g><title>0x7f12184e3c52 (libm-2.29.so) (3 samples, 0.35%)</title><rect x="372" y="372" width="4" height="15" fill="rgb(206,111,8)"/><text x="375.00" y="382.50"></text></g><g><title>0x7f12184e3c5a (libm-2.29.so) (3 samples, 0.35%)</title><rect x="376" y="372" width="4" height="15" fill="rgb(210,127,52)"/><text x="379.00" y="382.50"></text></g><g><title>0x7f12184e3c6e (libm-2.29.so) (3 samples, 0.35%)</title><rect x="380" y="372" width="4" height="15" fill="rgb(220,117,45)"/><text x="383.00" y="382.50"></text></g><g><title>0x7f12184e3c7b (libm-2.29.so) (8 samples, 0.94%)</title><rect x="384" y="372" width="11" height="15" fill="rgb(206,82,38)"/><text x="387.00" y="382.50"></text></g><g><title>expf32x (libm-2.29.so) (65 samples, 7.62%)</title><rect x="310" y="356" width="90" height="15" fill="rgb(244,168,2)"/><text x="313.00" y="366.50">expf32x (l..</text></g><g><title>0x7f12184e3c7f (libm-2.29.so) (3 samples, 0.35%)</title><rect x="395" y="372" width="5" height="15" fill="rgb(232,158,11)"/><text x="398.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="400" y="356" width="1" height="15" fill="rgb(229,162,4)"/><text x="403.00" y="366.50"></text></g><g><title>0x7f121831197c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="423" y="372" width="2" height="15" fill="rgb(251,164,8)"/><text x="426.00" y="382.50"></text></g><g><title>0x7f11d8308930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="427" y="388" width="2" height="15" fill="rgb(240,219,54)"/><text x="430.00" y="398.50"></text></g><g><title>0x7f121831193b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="429" y="388" width="1" height="15" fill="rgb(215,101,36)"/><text x="432.00" y="398.50"></text></g><g><title>0x7f1218311965 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="430" y="388" width="1" height="15" fill="rgb(210,91,0)"/><text x="433.00" y="398.50"></text></g><g><title>0x7f1218311991 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="431" y="388" width="2" height="15" fill="rgb(209,208,54)"/><text x="434.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 2.81%)</title><rect x="401" y="356" width="33" height="15" fill="rgb(226,161,9)"/><text x="404.00" y="366.50">on..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.82%)</title><rect x="425" y="372" width="9" height="15" fill="rgb(245,180,40)"/><text x="428.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="433" y="388" width="1" height="15" fill="rgb(217,131,51)"/><text x="436.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="433" y="404" width="1" height="15" fill="rgb(239,197,7)"/><text x="436.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="434" y="356" width="2" height="15" fill="rgb(249,119,44)"/><text x="437.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="434" y="372" width="2" height="15" fill="rgb(207,36,18)"/><text x="437.00" y="382.50"></text></g><g><title>0x7f11d8308930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="438" y="372" width="2" height="15" fill="rgb(226,162,27)"/><text x="441.00" y="382.50"></text></g><g><title>0x7f121831190e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="440" y="372" width="1" height="15" fill="rgb(225,189,38)"/><text x="443.00" y="382.50"></text></g><g><title>0x7f1218311922 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="441" y="372" width="1" height="15" fill="rgb(209,108,32)"/><text x="444.00" y="382.50"></text></g><g><title>0x7f1218311991 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="442" y="372" width="2" height="15" fill="rgb(219,89,30)"/><text x="445.00" y="382.50"></text></g><g><title>0x7f1218311a4d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="444" y="372" width="1" height="15" fill="rgb(243,7,1)"/><text x="447.00" y="382.50"></text></g><g><title>0x7f1218311a55 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="445" y="372" width="2" height="15" fill="rgb(213,74,10)"/><text x="448.00" y="382.50"></text></g><g><title>0x7f1218331e1b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="447" y="372" width="1" height="15" fill="rgb(242,3,20)"/><text x="450.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.23%)</title><rect x="448" y="372" width="3" height="15" fill="rgb(251,89,49)"/><text x="451.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.41%)</title><rect x="436" y="356" width="16" height="15" fill="rgb(239,143,24)"/><text x="439.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="451" y="372" width="1" height="15" fill="rgb(228,41,11)"/><text x="454.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="451" y="388" width="1" height="15" fill="rgb(236,61,18)"/><text x="454.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (302 samples, 35.40%)</title><rect x="36" y="340" width="418" height="15" fill="rgb(228,178,27)"/><text x="39.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxrunti..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="452" y="356" width="2" height="15" fill="rgb(229,151,17)"/><text x="455.00" y="366.50"></text></g><g><title>0x7f1218312b76 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="462" y="388" width="1" height="15" fill="rgb(222,166,34)"/><text x="465.00" y="398.50"></text></g><g><title>0x7f1218312d27 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="463" y="388" width="2" height="15" fill="rgb(250,219,11)"/><text x="466.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 0.94%)</title><rect x="455" y="356" width="11" height="15" fill="rgb(205,85,36)"/><text x="458.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (8 samples, 0.94%)</title><rect x="455" y="372" width="11" height="15" fill="rgb(225,36,36)"/><text x="458.00" y="382.50"></text></g><g><title>0x7f1218313033 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="465" y="388" width="1" height="15" fill="rgb(230,24,12)"/><text x="468.00" y="398.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (312 samples, 36.58%)</title><rect x="36" y="324" width="431" height="15" fill="rgb(210,217,11)"/><text x="39.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.17%)</title><rect x="454" y="340" width="13" height="15" fill="rgb(249,149,48)"/><text x="457.00" y="350.50"></text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="466" y="356" width="1" height="15" fill="rgb(220,205,43)"/><text x="469.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="466" y="372" width="1" height="15" fill="rgb(239,169,51)"/><text x="469.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="466" y="388" width="1" height="15" fill="rgb(205,201,35)"/><text x="469.00" y="398.50"></text></g><g><title>0x7f1218313028 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="466" y="404" width="1" height="15" fill="rgb(206,72,32)"/><text x="469.00" y="414.50"></text></g><g><title>0x7f1218310c20 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="466" y="420" width="1" height="15" fill="rgb(239,161,21)"/><text x="469.00" y="430.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (313 samples, 36.69%)</title><rect x="36" y="260" width="433" height="15" fill="rgb(209,190,45)"/><text x="39.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (313 samples, 36.69%)</title><rect x="36" y="276" width="433" height="15" fill="rgb(239,145,8)"/><text x="39.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (313 samples, 36.69%)</title><rect x="36" y="292" width="433" height="15" fill="rgb(236,81,7)"/><text x="39.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (313 samples, 36.69%)</title><rect x="36" y="308" width="433" height="15" fill="rgb(232,73,38)"/><text x="39.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::SequentialExecutor::~SequentialExecutor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="467" y="324" width="2" height="15" fill="rgb(224,39,3)"/><text x="470.00" y="334.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="474" y="276" width="2" height="15" fill="rgb(237,58,41)"/><text x="477.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.70%)</title><rect x="469" y="260" width="8" height="15" fill="rgb(250,111,2)"/><text x="472.00" y="270.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="476" y="276" width="1" height="15" fill="rgb(234,5,23)"/><text x="479.00" y="286.50"></text></g><g><title>0x7f12183119ed (libc-2.29.so) (1 samples, 0.12%)</title><rect x="477" y="292" width="1" height="15" fill="rgb(211,119,18)"/><text x="480.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="478" y="292" width="2" height="15" fill="rgb(233,103,37)"/><text x="481.00" y="302.50"></text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py) (327 samples, 38.34%)</title><rect x="30" y="100" width="453" height="15" fill="rgb(236,74,33)"/><text x="33.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (324 samples, 37.98%)</title><rect x="34" y="116" width="449" height="15" fill="rgb(226,80,49)"/><text x="37.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (324 samples, 37.98%)</title><rect x="34" y="132" width="449" height="15" fill="rgb(232,215,8)"/><text x="37.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (324 samples, 37.98%)</title><rect x="34" y="148" width="449" height="15" fill="rgb(249,177,42)"/><text x="37.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (324 samples, 37.98%)</title><rect x="34" y="164" width="449" height="15" fill="rgb(218,139,34)"/><text x="37.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (324 samples, 37.98%)</title><rect x="34" y="180" width="449" height="15" fill="rgb(226,10,23)"/><text x="37.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (324 samples, 37.98%)</title><rect x="34" y="196" width="449" height="15" fill="rgb(213,115,35)"/><text x="37.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (323 samples, 37.87%)</title><rect x="36" y="212" width="447" height="15" fill="rgb(247,172,2)"/><text x="39.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxrunt..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (323 samples, 37.87%)</title><rect x="36" y="228" width="447" height="15" fill="rgb(237,124,25)"/><text x="39.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (323 samples, 37.87%)</title><rect x="36" y="244" width="447" height="15" fill="rgb(214,48,5)"/><text x="39.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{la..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.47%)</title><rect x="477" y="260" width="6" height="15" fill="rgb(251,200,12)"/><text x="480.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.47%)</title><rect x="477" y="276" width="6" height="15" fill="rgb(248,114,46)"/><text x="480.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="480" y="292" width="3" height="15" fill="rgb(233,78,49)"/><text x="483.00" y="302.50"></text></g><g><title>0x7f1218311d07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="481" y="308" width="2" height="15" fill="rgb(215,209,8)"/><text x="484.00" y="318.50"></text></g><g><title>profile_ort (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py) (328 samples, 38.45%)</title><rect x="30" y="68" width="454" height="15" fill="rgb(213,90,37)"/><text x="33.00" y="78.50">profile_ort (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py) (328 samples, 38.45%)</title><rect x="30" y="84" width="454" height="15" fill="rgb(245,102,14)"/><text x="33.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_10..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.12%)</title><rect x="483" y="100" width="1" height="15" fill="rgb(218,46,51)"/><text x="486.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.12%)</title><rect x="483" y="116" width="1" height="15" fill="rgb(206,127,6)"/><text x="486.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.12%)</title><rect x="483" y="132" width="1" height="15" fill="rgb(235,47,5)"/><text x="486.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.12%)</title><rect x="483" y="148" width="1" height="15" fill="rgb(213,12,52)"/><text x="486.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.12%)</title><rect x="483" y="164" width="1" height="15" fill="rgb(217,51,30)"/><text x="486.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="483" y="180" width="1" height="15" fill="rgb(235,15,35)"/><text x="486.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="483" y="196" width="1" height="15" fill="rgb(222,186,38)"/><text x="486.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="483" y="212" width="1" height="15" fill="rgb(235,122,25)"/><text x="486.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="483" y="228" width="1" height="15" fill="rgb(220,51,17)"/><text x="486.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="483" y="244" width="1" height="15" fill="rgb(248,112,26)"/><text x="486.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.12%)</title><rect x="483" y="260" width="1" height="15" fill="rgb(224,157,41)"/><text x="486.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="483" y="276" width="1" height="15" fill="rgb(224,92,12)"/><text x="486.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="483" y="292" width="1" height="15" fill="rgb(249,148,37)"/><text x="486.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="483" y="308" width="1" height="15" fill="rgb(215,130,19)"/><text x="486.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="483" y="324" width="1" height="15" fill="rgb(253,120,4)"/><text x="486.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="483" y="340" width="1" height="15" fill="rgb(223,119,35)"/><text x="486.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.12%)</title><rect x="483" y="356" width="1" height="15" fill="rgb(238,218,41)"/><text x="486.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py) (1 samples, 0.12%)</title><rect x="483" y="372" width="1" height="15" fill="rgb(246,27,35)"/><text x="486.00" y="382.50"></text></g><g><title>architecture (platform.py) (1 samples, 0.12%)</title><rect x="483" y="388" width="1" height="15" fill="rgb(210,199,12)"/><text x="486.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py) (1 samples, 0.12%)</title><rect x="483" y="404" width="1" height="15" fill="rgb(228,57,53)"/><text x="486.00" y="414.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.12%)</title><rect x="483" y="420" width="1" height="15" fill="rgb(205,23,11)"/><text x="486.00" y="430.50"></text></g><g><title>_execute_child (subprocess.py) (1 samples, 0.12%)</title><rect x="483" y="436" width="1" height="15" fill="rgb(237,206,25)"/><text x="486.00" y="446.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c) (1 samples, 0.12%)</title><rect x="483" y="452" width="1" height="15" fill="rgb(225,95,0)"/><text x="486.00" y="462.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.12%)</title><rect x="483" y="468" width="1" height="15" fill="rgb(213,153,24)"/><text x="486.00" y="478.50"></text></g><g><title>0x7f11d9480c29 (?) (1 samples, 0.12%)</title><rect x="485" y="244" width="2" height="15" fill="rgb(218,101,35)"/><text x="488.00" y="254.50"></text></g><g><title>0x7f11d9487d9e (?) (1 samples, 0.12%)</title><rect x="485" y="260" width="2" height="15" fill="rgb(224,132,39)"/><text x="488.00" y="270.50"></text></g><g><title>0x7f11d9487c56 (?) (1 samples, 0.12%)</title><rect x="485" y="276" width="2" height="15" fill="rgb(240,27,42)"/><text x="488.00" y="286.50"></text></g><g><title>0x7f11d948dac7 (?) (1 samples, 0.12%)</title><rect x="485" y="292" width="2" height="15" fill="rgb(233,229,35)"/><text x="488.00" y="302.50"></text></g><g><title>0x7f11d948d328 (?) (1 samples, 0.12%)</title><rect x="485" y="308" width="2" height="15" fill="rgb(235,168,32)"/><text x="488.00" y="318.50"></text></g><g><title>0x7f11d94851ad (?) (1 samples, 0.12%)</title><rect x="485" y="324" width="2" height="15" fill="rgb(218,13,9)"/><text x="488.00" y="334.50"></text></g><g><title>0x7f11d9485003 (?) (1 samples, 0.12%)</title><rect x="485" y="340" width="2" height="15" fill="rgb(254,42,43)"/><text x="488.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="485" y="356" width="2" height="15" fill="rgb(246,51,54)"/><text x="488.00" y="366.50"></text></g><g><title>0x7f11d9470440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="505" y="468" width="1" height="15" fill="rgb(211,18,33)"/><text x="508.00" y="478.50"></text></g><g><title>0x7f1218311991 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="506" y="468" width="2" height="15" fill="rgb(220,85,50)"/><text x="509.00" y="478.50"></text></g><g><title>0x7f12184e3bb4 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="762" y="500" width="1" height="15" fill="rgb(211,106,54)"/><text x="765.00" y="510.50"></text></g><g><title>0x7f12184e3bd3 (libm-2.29.so) (3 samples, 0.35%)</title><rect x="763" y="500" width="5" height="15" fill="rgb(211,139,51)"/><text x="766.00" y="510.50"></text></g><g><title>0x7f12184e3be2 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="768" y="500" width="1" height="15" fill="rgb(248,120,5)"/><text x="771.00" y="510.50"></text></g><g><title>0x7f12184e3beb (libm-2.29.so) (4 samples, 0.47%)</title><rect x="769" y="500" width="5" height="15" fill="rgb(227,139,51)"/><text x="772.00" y="510.50"></text></g><g><title>0x7f12184e3c04 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="774" y="500" width="3" height="15" fill="rgb(224,179,29)"/><text x="777.00" y="510.50"></text></g><g><title>0x7f12184e3c0c (libm-2.29.so) (1 samples, 0.12%)</title><rect x="777" y="500" width="2" height="15" fill="rgb(250,217,45)"/><text x="780.00" y="510.50"></text></g><g><title>0x7f12184e3c10 (libm-2.29.so) (3 samples, 0.35%)</title><rect x="779" y="500" width="4" height="15" fill="rgb(224,162,23)"/><text x="782.00" y="510.50"></text></g><g><title>0x7f12184e3c28 (libm-2.29.so) (6 samples, 0.70%)</title><rect x="783" y="500" width="8" height="15" fill="rgb(243,12,1)"/><text x="786.00" y="510.50"></text></g><g><title>0x7f12184e3c32 (libm-2.29.so) (9 samples, 1.06%)</title><rect x="791" y="500" width="13" height="15" fill="rgb(207,164,3)"/><text x="794.00" y="510.50"></text></g><g><title>0x7f12184e3c3e (libm-2.29.so) (2 samples, 0.23%)</title><rect x="804" y="500" width="2" height="15" fill="rgb(253,90,47)"/><text x="807.00" y="510.50"></text></g><g><title>0x7f12184e3c52 (libm-2.29.so) (9 samples, 1.06%)</title><rect x="806" y="500" width="13" height="15" fill="rgb(237,175,1)"/><text x="809.00" y="510.50"></text></g><g><title>0x7f12184e3c5a (libm-2.29.so) (5 samples, 0.59%)</title><rect x="819" y="500" width="7" height="15" fill="rgb(228,51,9)"/><text x="822.00" y="510.50"></text></g><g><title>0x7f12184e3c6e (libm-2.29.so) (2 samples, 0.23%)</title><rect x="826" y="500" width="2" height="15" fill="rgb(227,31,6)"/><text x="829.00" y="510.50"></text></g><g><title>0x7f12184e3c7b (libm-2.29.so) (1 samples, 0.12%)</title><rect x="828" y="500" width="2" height="15" fill="rgb(246,26,4)"/><text x="831.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (236 samples, 27.67%)</title><rect x="508" y="468" width="326" height="15" fill="rgb(217,68,48)"/><text x="511.00" y="478.50">RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_..</text></g><g><title>expf32x (libm-2.29.so) (65 samples, 7.62%)</title><rect x="744" y="484" width="90" height="15" fill="rgb(238,0,52)"/><text x="747.00" y="494.50">expf32x (l..</text></g><g><title>0x7f12184e3c7f (libm-2.29.so) (3 samples, 0.35%)</title><rect x="830" y="500" width="4" height="15" fill="rgb(207,105,22)"/><text x="833.00" y="510.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (1 samples, 0.12%)</title><rect x="834" y="468" width="1" height="15" fill="rgb(228,25,20)"/><text x="837.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (1 samples, 0.12%)</title><rect x="834" y="484" width="1" height="15" fill="rgb(236,16,50)"/><text x="837.00" y="494.50"></text></g><g><title>std::min&lt;float&gt; (stl_algobase.h) (1 samples, 0.12%)</title><rect x="835" y="468" width="2" height="15" fill="rgb(250,197,29)"/><text x="838.00" y="478.50"></text></g><g><title>0x7f121831196a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="837" y="484" width="1" height="15" fill="rgb(238,198,31)"/><text x="840.00" y="494.50"></text></g><g><title>0x7f1218311a41 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="838" y="484" width="2" height="15" fill="rgb(229,133,42)"/><text x="841.00" y="494.50"></text></g><g><title>0x7f1218331d62 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="840" y="484" width="1" height="15" fill="rgb(224,220,37)"/><text x="843.00" y="494.50"></text></g><g><title>0x7f1218331e1b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="841" y="484" width="1" height="15" fill="rgb(207,204,48)"/><text x="844.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="842" y="484" width="2" height="15" fill="rgb(245,125,12)"/><text x="845.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (7 samples, 0.82%)</title><rect x="837" y="468" width="9" height="15" fill="rgb(254,100,2)"/><text x="840.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (2 samples, 0.23%)</title><rect x="844" y="484" width="2" height="15" fill="rgb(213,56,27)"/><text x="847.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (2 samples, 0.23%)</title><rect x="844" y="500" width="2" height="15" fill="rgb(250,219,41)"/><text x="847.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (2 samples, 0.23%)</title><rect x="844" y="516" width="2" height="15" fill="rgb(220,147,28)"/><text x="847.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.23%)</title><rect x="844" y="532" width="2" height="15" fill="rgb(226,226,7)"/><text x="847.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.23%)</title><rect x="844" y="548" width="2" height="15" fill="rgb(224,78,40)"/><text x="847.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (2 samples, 0.23%)</title><rect x="846" y="468" width="3" height="15" fill="rgb(254,110,27)"/><text x="849.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (2 samples, 0.23%)</title><rect x="846" y="484" width="3" height="15" fill="rgb(242,143,48)"/><text x="849.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (2 samples, 0.23%)</title><rect x="846" y="500" width="3" height="15" fill="rgb(250,62,49)"/><text x="849.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (2 samples, 0.23%)</title><rect x="846" y="516" width="3" height="15" fill="rgb(233,216,48)"/><text x="849.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (2 samples, 0.23%)</title><rect x="846" y="532" width="3" height="15" fill="rgb(242,35,51)"/><text x="849.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (2 samples, 0.23%)</title><rect x="846" y="548" width="3" height="15" fill="rgb(221,109,7)"/><text x="849.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.23%)</title><rect x="846" y="564" width="3" height="15" fill="rgb(205,85,23)"/><text x="849.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.23%)</title><rect x="846" y="580" width="3" height="15" fill="rgb(239,182,45)"/><text x="849.00" y="590.50"></text></g><g><title>0x7f121831199b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="863" y="516" width="1" height="15" fill="rgb(238,37,0)"/><text x="866.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.35%)</title><rect x="864" y="516" width="5" height="15" fill="rgb(220,59,22)"/><text x="867.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (20 samples, 2.34%)</title><rect x="849" y="468" width="28" height="15" fill="rgb(216,137,23)"/><text x="852.00" y="478.50">s..</text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (20 samples, 2.34%)</title><rect x="849" y="484" width="28" height="15" fill="rgb(205,37,8)"/><text x="852.00" y="494.50">m..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (11 samples, 1.29%)</title><rect x="862" y="500" width="15" height="15" fill="rgb(247,115,22)"/><text x="865.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (6 samples, 0.70%)</title><rect x="869" y="516" width="8" height="15" fill="rgb(232,198,34)"/><text x="872.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (5 samples, 0.59%)</title><rect x="870" y="532" width="7" height="15" fill="rgb(234,73,4)"/><text x="873.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (5 samples, 0.59%)</title><rect x="870" y="548" width="7" height="15" fill="rgb(254,214,46)"/><text x="873.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.59%)</title><rect x="870" y="564" width="7" height="15" fill="rgb(219,67,13)"/><text x="873.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.47%)</title><rect x="871" y="580" width="6" height="15" fill="rgb(237,103,44)"/><text x="874.00" y="590.50"></text></g><g><title>0x7f1218332120 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="877" y="516" width="1" height="15" fill="rgb(248,30,1)"/><text x="880.00" y="526.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h) (2 samples, 0.23%)</title><rect x="877" y="500" width="3" height="15" fill="rgb(227,62,5)"/><text x="880.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="878" y="516" width="2" height="15" fill="rgb(211,36,33)"/><text x="881.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="878" y="532" width="2" height="15" fill="rgb(232,82,36)"/><text x="881.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h) (3 samples, 0.35%)</title><rect x="877" y="468" width="4" height="15" fill="rgb(218,210,5)"/><text x="880.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h) (3 samples, 0.35%)</title><rect x="877" y="484" width="4" height="15" fill="rgb(234,89,30)"/><text x="880.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_impl::_Vector_impl (stl_vector.h) (1 samples, 0.12%)</title><rect x="880" y="500" width="1" height="15" fill="rgb(248,116,36)"/><text x="883.00" y="510.50"></text></g><g><title>0x7f1218311908 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="881" y="484" width="1" height="15" fill="rgb(237,202,54)"/><text x="884.00" y="494.50"></text></g><g><title>0x7f121831191e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="882" y="484" width="2" height="15" fill="rgb(209,156,19)"/><text x="885.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (3 samples, 0.35%)</title><rect x="881" y="468" width="4" height="15" fill="rgb(227,106,46)"/><text x="884.00" y="478.50"></text></g><g><title>0x7f1218311998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="884" y="484" width="1" height="15" fill="rgb(223,209,17)"/><text x="887.00" y="494.50"></text></g><g><title>profile_pyrt (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py) (291 samples, 34.11%)</title><rect x="484" y="68" width="403" height="15" fill="rgb(213,143,42)"/><text x="487.00" y="78.50">profile_pyrt (bench_SVC_rbf_m_cl_probabilityTrue_kerne..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py) (291 samples, 34.11%)</title><rect x="484" y="84" width="403" height="15" fill="rgb(253,108,48)"/><text x="487.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kern..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py) (291 samples, 34.11%)</title><rect x="484" y="100" width="403" height="15" fill="rgb(225,160,42)"/><text x="487.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (291 samples, 34.11%)</title><rect x="484" y="116" width="403" height="15" fill="rgb(212,214,28)"/><text x="487.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (291 samples, 34.11%)</title><rect x="484" y="132" width="403" height="15" fill="rgb(238,75,0)"/><text x="487.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (291 samples, 34.11%)</title><rect x="484" y="148" width="403" height="15" fill="rgb(216,32,35)"/><text x="487.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (291 samples, 34.11%)</title><rect x="484" y="164" width="403" height="15" fill="rgb(241,182,11)"/><text x="487.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (291 samples, 34.11%)</title><rect x="484" y="180" width="403" height="15" fill="rgb(240,16,15)"/><text x="487.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (290 samples, 34.00%)</title><rect x="485" y="196" width="402" height="15" fill="rgb(218,104,39)"/><text x="488.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (290 samples, 34.00%)</title><rect x="485" y="212" width="402" height="15" fill="rgb(219,126,28)"/><text x="488.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (290 samples, 34.00%)</title><rect x="485" y="228" width="402" height="15" fill="rgb(213,71,20)"/><text x="488.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py)</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (289 samples, 33.88%)</title><rect x="487" y="244" width="400" height="15" fill="rgb(242,137,53)"/><text x="490.00" y="254.50">pybind11::cpp_function::dispatcher (pybind11.h)</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (289 samples, 33.88%)</title><rect x="487" y="260" width="400" height="15" fill="rgb(239,44,19)"/><text x="490.00" y="270.50">void pybind11::cpp_function::initialize&lt;pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (289 samples, 33.88%)</title><rect x="487" y="276" width="400" height="15" fill="rgb(223,11,20)"/><text x="490.00" y="286.50">void pybind11::cpp_function::initialize&lt;pybind11::cpp_..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (289 samples, 33.88%)</title><rect x="487" y="292" width="400" height="15" fill="rgb(234,163,50)"/><text x="490.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassifier..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (289 samples, 33.88%)</title><rect x="487" y="308" width="400" height="15" fill="rgb(247,22,36)"/><text x="490.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassifier..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (289 samples, 33.88%)</title><rect x="487" y="324" width="400" height="15" fill="rgb(207,33,10)"/><text x="490.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybind11::tuple, ..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (289 samples, 33.88%)</title><rect x="487" y="340" width="400" height="15" fill="rgb(210,95,6)"/><text x="490.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h)</text></g><g><title>pybind11::array::~array (numpy.h) (289 samples, 33.88%)</title><rect x="487" y="356" width="400" height="15" fill="rgb(206,89,15)"/><text x="490.00" y="366.50">pybind11::array::~array (numpy.h)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (289 samples, 33.88%)</title><rect x="487" y="372" width="400" height="15" fill="rgb(242,136,32)"/><text x="490.00" y="382.50">pybind11::buffer::~buffer (pytypes.h)</text></g><g><title>pybind11::object::~object (pytypes.h) (289 samples, 33.88%)</title><rect x="487" y="388" width="400" height="15" fill="rgb(231,32,7)"/><text x="490.00" y="398.50">pybind11::object::~object (pytypes.h)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (289 samples, 33.88%)</title><rect x="487" y="404" width="400" height="15" fill="rgb(232,14,15)"/><text x="490.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (289 samples, 33.88%)</title><rect x="487" y="420" width="400" height="15" fill="rgb(234,62,18)"/><text x="490.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (289 samples, 33.88%)</title><rect x="487" y="436" width="400" height="15" fill="rgb(212,217,6)"/><text x="490.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_release (pyb..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (289 samples, 33.88%)</title><rect x="487" y="452" width="400" height="15" fill="rgb(252,53,53)"/><text x="490.00" y="462.50">RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodi..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h) (1 samples, 0.12%)</title><rect x="885" y="468" width="2" height="15" fill="rgb(235,158,4)"/><text x="888.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h) (1 samples, 0.12%)</title><rect x="885" y="484" width="2" height="15" fill="rgb(246,142,44)"/><text x="888.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc) (1 samples, 0.12%)</title><rect x="885" y="500" width="2" height="15" fill="rgb(206,110,42)"/><text x="888.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.12%)</title><rect x="885" y="516" width="2" height="15" fill="rgb(216,148,32)"/><text x="888.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.12%)</title><rect x="885" y="532" width="2" height="15" fill="rgb(233,132,27)"/><text x="888.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h) (1 samples, 0.12%)</title><rect x="885" y="548" width="2" height="15" fill="rgb(234,144,8)"/><text x="888.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="885" y="564" width="2" height="15" fill="rgb(246,160,25)"/><text x="888.00" y="574.50"></text></g><g><title>0x7f1207dddd50 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="885" y="580" width="2" height="15" fill="rgb(219,44,50)"/><text x="888.00" y="590.50"></text></g><g><title>0x7f11f2e023fd (?) (1 samples, 0.12%)</title><rect x="888" y="180" width="1" height="15" fill="rgb(245,104,36)"/><text x="891.00" y="190.50"></text></g><g><title>0x7f11f2e00553 (?) (1 samples, 0.12%)</title><rect x="888" y="196" width="1" height="15" fill="rgb(250,48,0)"/><text x="891.00" y="206.50"></text></g><g><title>0x7f11f2dfba09 (?) (1 samples, 0.12%)</title><rect x="888" y="212" width="1" height="15" fill="rgb(224,102,12)"/><text x="891.00" y="222.50"></text></g><g><title>0x7f11f2e0e283 (?) (1 samples, 0.12%)</title><rect x="888" y="228" width="1" height="15" fill="rgb(241,10,49)"/><text x="891.00" y="238.50"></text></g><g><title>0x7f11f2e0de11 (?) (1 samples, 0.12%)</title><rect x="888" y="244" width="1" height="15" fill="rgb(247,197,22)"/><text x="891.00" y="254.50"></text></g><g><title>0x7f11f2e09ebc (?) (1 samples, 0.12%)</title><rect x="888" y="260" width="1" height="15" fill="rgb(252,171,17)"/><text x="891.00" y="270.50"></text></g><g><title>0x7f1218311a4c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="902" y="244" width="1" height="15" fill="rgb(231,6,52)"/><text x="905.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (2 samples, 0.23%)</title><rect x="903" y="244" width="3" height="15" fill="rgb(207,80,29)"/><text x="906.00" y="254.50"></text></g><g><title>0x7f12184e3c32 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="905" y="260" width="1" height="15" fill="rgb(252,206,0)"/><text x="908.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="906" y="244" width="1" height="15" fill="rgb(240,170,23)"/><text x="909.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.59%)</title><rect x="907" y="244" width="7" height="15" fill="rgb(252,174,41)"/><text x="910.00" y="254.50"></text></g><g><title>0x7f1218312f0a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="913" y="260" width="1" height="15" fill="rgb(247,83,9)"/><text x="916.00" y="270.50"></text></g><g><title>0x7f121845d1b0 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="947" y="276" width="2" height="15" fill="rgb(212,59,40)"/><text x="950.00" y="286.50"></text></g><g><title>0x7f12184e3ba0 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="949" y="276" width="1" height="15" fill="rgb(253,91,9)"/><text x="952.00" y="286.50"></text></g><g><title>0x7f12184e3bb4 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="950" y="276" width="3" height="15" fill="rgb(233,153,38)"/><text x="953.00" y="286.50"></text></g><g><title>0x7f12184e3bba (libm-2.29.so) (1 samples, 0.12%)</title><rect x="953" y="276" width="1" height="15" fill="rgb(221,137,40)"/><text x="956.00" y="286.50"></text></g><g><title>0x7f12184e3bde (libm-2.29.so) (3 samples, 0.35%)</title><rect x="954" y="276" width="4" height="15" fill="rgb(210,218,26)"/><text x="957.00" y="286.50"></text></g><g><title>0x7f12184e3be2 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="958" y="276" width="2" height="15" fill="rgb(235,108,53)"/><text x="961.00" y="286.50"></text></g><g><title>0x7f12184e3beb (libm-2.29.so) (1 samples, 0.12%)</title><rect x="960" y="276" width="1" height="15" fill="rgb(224,60,50)"/><text x="963.00" y="286.50"></text></g><g><title>0x7f12184e3bfc (libm-2.29.so) (1 samples, 0.12%)</title><rect x="961" y="276" width="2" height="15" fill="rgb(250,142,22)"/><text x="964.00" y="286.50"></text></g><g><title>0x7f12184e3c04 (libm-2.29.so) (7 samples, 0.82%)</title><rect x="963" y="276" width="9" height="15" fill="rgb(249,99,25)"/><text x="966.00" y="286.50"></text></g><g><title>0x7f12184e3c0c (libm-2.29.so) (5 samples, 0.59%)</title><rect x="972" y="276" width="7" height="15" fill="rgb(250,222,53)"/><text x="975.00" y="286.50"></text></g><g><title>0x7f12184e3c10 (libm-2.29.so) (3 samples, 0.35%)</title><rect x="979" y="276" width="4" height="15" fill="rgb(218,116,21)"/><text x="982.00" y="286.50"></text></g><g><title>0x7f12184e3c28 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="983" y="276" width="2" height="15" fill="rgb(228,112,7)"/><text x="986.00" y="286.50"></text></g><g><title>0x7f12184e3c2e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="985" y="276" width="1" height="15" fill="rgb(250,112,28)"/><text x="988.00" y="286.50"></text></g><g><title>0x7f12184e3c32 (libm-2.29.so) (4 samples, 0.47%)</title><rect x="986" y="276" width="6" height="15" fill="rgb(248,173,5)"/><text x="989.00" y="286.50"></text></g><g><title>0x7f12184e3c46 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="992" y="276" width="1" height="15" fill="rgb(214,50,54)"/><text x="995.00" y="286.50"></text></g><g><title>0x7f12184e3c52 (libm-2.29.so) (4 samples, 0.47%)</title><rect x="993" y="276" width="6" height="15" fill="rgb(213,208,8)"/><text x="996.00" y="286.50"></text></g><g><title>0x7f12184e3c5a (libm-2.29.so) (1 samples, 0.12%)</title><rect x="999" y="276" width="1" height="15" fill="rgb(215,2,14)"/><text x="1002.00" y="286.50"></text></g><g><title>0x7f12184e3c6e (libm-2.29.so) (2 samples, 0.23%)</title><rect x="1000" y="276" width="3" height="15" fill="rgb(210,26,33)"/><text x="1003.00" y="286.50"></text></g><g><title>0x7f12184e3c7b (libm-2.29.so) (4 samples, 0.47%)</title><rect x="1003" y="276" width="5" height="15" fill="rgb(243,135,6)"/><text x="1006.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (60 samples, 7.03%)</title><rect x="927" y="260" width="83" height="15" fill="rgb(246,215,5)"/><text x="930.00" y="270.50">exp (libm..</text></g><g><title>0x7f12184e3c7f (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1008" y="276" width="2" height="15" fill="rgb(234,42,29)"/><text x="1011.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.23%)</title><rect x="1010" y="260" width="2" height="15" fill="rgb(224,60,46)"/><text x="1013.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1012" y="260" width="2" height="15" fill="rgb(247,161,42)"/><text x="1015.00" y="270.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (213 samples, 24.97%)</title><rect x="888" y="164" width="295" height="15" fill="rgb(237,107,6)"/><text x="891.00" y="174.50">_dense_predict_proba (sklearn/svm/_base..</text></g><g><title>0x7f11f2e023fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (212 samples, 24.85%)</title><rect x="889" y="180" width="294" height="15" fill="rgb(210,69,43)"/><text x="892.00" y="190.50">0x7f11f2e023fd (sklearn/svm/_libsvm.cpy..</text></g><g><title>0x7f11f2e00553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (212 samples, 24.85%)</title><rect x="889" y="196" width="294" height="15" fill="rgb(221,5,16)"/><text x="892.00" y="206.50">0x7f11f2e00553 (sklearn/svm/_libsvm.cpy..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (212 samples, 24.85%)</title><rect x="889" y="212" width="294" height="15" fill="rgb(236,136,36)"/><text x="892.00" y="222.50">copy_predict_proba (sklearn/svm/_libsvm..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (212 samples, 24.85%)</title><rect x="889" y="228" width="294" height="15" fill="rgb(244,104,26)"/><text x="892.00" y="238.50">svm_predict_probability (sklearn/svm/_l..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (194 samples, 22.74%)</title><rect x="914" y="244" width="269" height="15" fill="rgb(226,68,2)"/><text x="917.00" y="254.50">svm_predict_values (sklearn/svm/_li..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (122 samples, 14.30%)</title><rect x="1014" y="260" width="169" height="15" fill="rgb(248,123,30)"/><text x="1017.00" y="270.50">svm::Kernel::k_functi..</text></g><g><title>check_array (sklearn/utils/validation.py) (3 samples, 0.35%)</title><rect x="1183" y="180" width="4" height="15" fill="rgb(240,90,13)"/><text x="1186.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.35%)</title><rect x="1183" y="196" width="4" height="15" fill="rgb(224,152,46)"/><text x="1186.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.35%)</title><rect x="1183" y="212" width="4" height="15" fill="rgb(214,209,6)"/><text x="1186.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (3 samples, 0.35%)</title><rect x="1183" y="228" width="4" height="15" fill="rgb(216,165,1)"/><text x="1186.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.35%)</title><rect x="1183" y="244" width="4" height="15" fill="rgb(209,85,16)"/><text x="1186.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (3 samples, 0.35%)</title><rect x="1183" y="260" width="4" height="15" fill="rgb(247,92,54)"/><text x="1186.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.35%)</title><rect x="1183" y="276" width="4" height="15" fill="rgb(236,222,27)"/><text x="1186.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.35%)</title><rect x="1183" y="292" width="4" height="15" fill="rgb(226,132,31)"/><text x="1186.00" y="302.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (3 samples, 0.35%)</title><rect x="1183" y="308" width="4" height="15" fill="rgb(253,94,38)"/><text x="1186.00" y="318.50"></text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py) (218 samples, 25.56%)</title><rect x="887" y="100" width="301" height="15" fill="rgb(219,103,52)"/><text x="890.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabilityT..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (218 samples, 25.56%)</title><rect x="887" y="116" width="301" height="15" fill="rgb(220,176,49)"/><text x="890.00" y="126.50">time_predict (mlprodict/asv_benchmark/co..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (218 samples, 25.56%)</title><rect x="887" y="132" width="301" height="15" fill="rgb(237,94,18)"/><text x="890.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common..</text></g><g><title>_predict_proba (sklearn/svm/_base.py) (218 samples, 25.56%)</title><rect x="887" y="148" width="301" height="15" fill="rgb(205,148,31)"/><text x="890.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (4 samples, 0.47%)</title><rect x="1183" y="164" width="5" height="15" fill="rgb(224,83,49)"/><text x="1186.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.12%)</title><rect x="1187" y="180" width="1" height="15" fill="rgb(225,170,21)"/><text x="1190.00" y="190.50"></text></g><g><title>all (853 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(221,152,10)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py) (853 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(219,44,1)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py) (219 samples, 25.67%)</title><rect x="887" y="68" width="303" height="15" fill="rgb(217,156,21)"/><text x="890.00" y="78.50">profile_skl (bench_SVC_rbf_m_cl_probabil..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_50_12_float_.py) (219 samples, 25.67%)</title><rect x="887" y="84" width="303" height="15" fill="rgb(221,127,51)"/><text x="890.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_probab..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.12%)</title><rect x="1188" y="100" width="2" height="15" fill="rgb(250,5,46)"/><text x="1191.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.12%)</title><rect x="1188" y="116" width="2" height="15" fill="rgb(207,148,17)"/><text x="1191.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py) (1 samples, 0.12%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(221,14,15)"/><text x="1191.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="1188" y="148" width="2" height="15" fill="rgb(250,112,28)"/><text x="1191.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(210,7,49)"/><text x="1191.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(213,70,1)"/><text x="1191.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(245,205,16)"/><text x="1191.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(226,145,26)"/><text x="1191.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py) (1 samples, 0.12%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(209,56,53)"/><text x="1191.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(228,191,54)"/><text x="1191.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(209,119,9)"/><text x="1191.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(230,122,4)"/><text x="1191.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(236,26,49)"/><text x="1191.00" y="302.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(214,144,0)"/><text x="1191.00" y="318.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="1188" y="324" width="2" height="15" fill="rgb(212,168,24)"/><text x="1191.00" y="334.50"></text></g></g></svg>