<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1878" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1861.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1861.00"> </text><g id="frames"><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:515) (1 samples, 0.16%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(224,74,54)"/><text x="13.00" y="158.50"></text></g><g><title>shuffle (sklearn/utils/__init__.py:699) (1 samples, 0.16%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(228,165,42)"/><text x="13.00" y="174.50"></text></g><g><title>resample (sklearn/utils/__init__.py:623) (1 samples, 0.16%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(209,142,50)"/><text x="13.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/__init__.py:623) (1 samples, 0.16%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(246,5,41)"/><text x="13.00" y="206.50"></text></g><g><title>_safe_indexing (sklearn/utils/__init__.py:411) (1 samples, 0.16%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(220,138,12)"/><text x="13.00" y="222.50"></text></g><g><title>_array_indexing (sklearn/utils/__init__.py:197) (1 samples, 0.16%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(225,107,1)"/><text x="13.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.16%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(207,126,36)"/><text x="13.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1647) (1 samples, 0.16%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(223,225,1)"/><text x="13.00" y="270.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.16%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(205,163,11)"/><text x="13.00" y="286.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:221) (1 samples, 0.16%)</title><rect x="11" y="164" width="2" height="15" fill="rgb(235,77,48)"/><text x="14.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (1 samples, 0.16%)</title><rect x="11" y="180" width="2" height="15" fill="rgb(251,117,42)"/><text x="14.00" y="190.50"></text></g><g><title>relu (sklearn/neural_network/_base.py:75) (1 samples, 0.16%)</title><rect x="11" y="196" width="2" height="15" fill="rgb(233,226,54)"/><text x="14.00" y="206.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.16%)</title><rect x="11" y="212" width="2" height="15" fill="rgb(242,72,13)"/><text x="14.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:31) (3 samples, 0.49%)</title><rect x="10" y="52" width="5" height="15" fill="rgb(216,40,0)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:11) (3 samples, 0.49%)</title><rect x="10" y="68" width="5" height="15" fill="rgb(228,159,42)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:39) (3 samples, 0.49%)</title><rect x="10" y="84" width="5" height="15" fill="rgb(244,194,41)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 0.49%)</title><rect x="10" y="100" width="5" height="15" fill="rgb(205,109,15)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py:995) (3 samples, 0.49%)</title><rect x="10" y="116" width="5" height="15" fill="rgb(220,161,37)"/><text x="13.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py:370) (3 samples, 0.49%)</title><rect x="10" y="132" width="5" height="15" fill="rgb(216,160,0)"/><text x="13.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:521) (2 samples, 0.32%)</title><rect x="11" y="148" width="4" height="15" fill="rgb(252,109,27)"/><text x="14.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:244) (1 samples, 0.16%)</title><rect x="13" y="164" width="2" height="15" fill="rgb(249,14,51)"/><text x="16.00" y="174.50"></text></g><g><title>_compute_loss_grad (sklearn/neural_network/_multilayer_perceptron.py:125) (1 samples, 0.16%)</title><rect x="13" y="180" width="2" height="15" fill="rgb(244,125,28)"/><text x="16.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.16%)</title><rect x="13" y="196" width="2" height="15" fill="rgb(253,137,17)"/><text x="16.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.16%)</title><rect x="13" y="212" width="2" height="15" fill="rgb(217,73,25)"/><text x="16.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.16%)</title><rect x="13" y="228" width="2" height="15" fill="rgb(247,151,11)"/><text x="16.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.16%)</title><rect x="13" y="244" width="2" height="15" fill="rgb(207,88,14)"/><text x="16.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (1 samples, 0.16%)</title><rect x="13" y="260" width="2" height="15" fill="rgb(233,148,30)"/><text x="16.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="13" y="276" width="2" height="15" fill="rgb(238,188,9)"/><text x="16.00" y="286.50"></text></g><g><title>dgemm_nt (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="13" y="292" width="2" height="15" fill="rgb(228,41,15)"/><text x="16.00" y="302.50"></text></g><g><title>dgemm_otcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="13" y="308" width="2" height="15" fill="rgb(245,103,27)"/><text x="16.00" y="318.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.16%)</title><rect x="15" y="100" width="2" height="15" fill="rgb(241,68,8)"/><text x="18.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.16%)</title><rect x="15" y="116" width="2" height="15" fill="rgb(234,37,36)"/><text x="18.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (1 samples, 0.16%)</title><rect x="15" y="132" width="2" height="15" fill="rgb(218,31,54)"/><text x="18.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="148" width="2" height="15" fill="rgb(239,50,45)"/><text x="18.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="164" width="2" height="15" fill="rgb(217,49,18)"/><text x="18.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="180" width="2" height="15" fill="rgb(232,24,41)"/><text x="18.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="15" y="196" width="2" height="15" fill="rgb(249,148,12)"/><text x="18.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="212" width="2" height="15" fill="rgb(230,185,15)"/><text x="18.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:8) (1 samples, 0.16%)</title><rect x="15" y="228" width="2" height="15" fill="rgb(251,225,16)"/><text x="18.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="15" y="244" width="2" height="15" fill="rgb(210,211,6)"/><text x="18.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="15" y="260" width="2" height="15" fill="rgb(233,57,18)"/><text x="18.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="15" y="276" width="2" height="15" fill="rgb(206,52,20)"/><text x="18.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="15" y="292" width="2" height="15" fill="rgb(228,206,30)"/><text x="18.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="15" y="308" width="2" height="15" fill="rgb(214,215,14)"/><text x="18.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py:33) (1 samples, 0.16%)</title><rect x="15" y="324" width="2" height="15" fill="rgb(228,48,8)"/><text x="18.00" y="334.50"></text></g><g><title>_load_lib (lightgbm/basic.py:28) (1 samples, 0.16%)</title><rect x="15" y="340" width="2" height="15" fill="rgb(247,18,24)"/><text x="18.00" y="350.50"></text></g><g><title>LoadLibrary (ctypes/__init__.py:434) (1 samples, 0.16%)</title><rect x="15" y="356" width="2" height="15" fill="rgb(226,109,9)"/><text x="18.00" y="366.50"></text></g><g><title>__init__ (ctypes/__init__.py:356) (1 samples, 0.16%)</title><rect x="15" y="372" width="2" height="15" fill="rgb(210,106,42)"/><text x="18.00" y="382.50"></text></g><g><title>py_dl_open (callproc.c:1366) (1 samples, 0.16%)</title><rect x="15" y="388" width="2" height="15" fill="rgb(207,172,53)"/><text x="18.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="404" width="2" height="15" fill="rgb(235,88,32)"/><text x="18.00" y="414.50"></text></g><g><title>0x7ff095f5f995 (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="420" width="2" height="15" fill="rgb(242,83,20)"/><text x="18.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="436" width="2" height="15" fill="rgb(205,156,28)"/><text x="18.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="452" width="2" height="15" fill="rgb(221,169,39)"/><text x="18.00" y="462.50"></text></g><g><title>0x7ff095f5f258 (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="468" width="2" height="15" fill="rgb(231,186,42)"/><text x="18.00" y="478.50"></text></g><g><title>0x7ff095facd7a (ld-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="484" width="2" height="15" fill="rgb(235,62,52)"/><text x="18.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="500" width="2" height="15" fill="rgb(240,206,12)"/><text x="18.00" y="510.50"></text></g><g><title>0x7ff095fad345 (ld-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="516" width="2" height="15" fill="rgb(247,188,5)"/><text x="18.00" y="526.50"></text></g><g><title>0x7ff095fa5fec (ld-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="532" width="2" height="15" fill="rgb(219,104,24)"/><text x="18.00" y="542.50"></text></g><g><title>0x7ff095fa456b (ld-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="548" width="2" height="15" fill="rgb(210,99,6)"/><text x="18.00" y="558.50"></text></g><g><title>0x7ff095fa3971 (ld-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="564" width="2" height="15" fill="rgb(209,95,15)"/><text x="18.00" y="574.50"></text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:28) (2 samples, 0.32%)</title><rect x="15" y="84" width="4" height="15" fill="rgb(216,44,54)"/><text x="18.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.16%)</title><rect x="17" y="100" width="2" height="15" fill="rgb(220,35,31)"/><text x="20.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.16%)</title><rect x="17" y="116" width="2" height="15" fill="rgb(226,51,10)"/><text x="20.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.16%)</title><rect x="17" y="132" width="2" height="15" fill="rgb(225,150,26)"/><text x="20.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.16%)</title><rect x="17" y="148" width="2" height="15" fill="rgb(216,91,5)"/><text x="20.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:135) (1 samples, 0.16%)</title><rect x="17" y="164" width="2" height="15" fill="rgb(223,120,15)"/><text x="20.00" y="174.50"></text></g><g><title>compile (skl2onnx/common/_topology.py:841) (1 samples, 0.16%)</title><rect x="17" y="180" width="2" height="15" fill="rgb(205,197,51)"/><text x="20.00" y="190.50"></text></g><g><title>_check_structure (skl2onnx/common/_topology.py:613) (1 samples, 0.16%)</title><rect x="17" y="196" width="2" height="15" fill="rgb(209,197,35)"/><text x="20.00" y="206.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="19" y="212" width="2" height="15" fill="rgb(206,200,41)"/><text x="22.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="21" y="212" width="2" height="15" fill="rgb(247,165,39)"/><text x="24.00" y="222.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="23" y="340" width="2" height="15" fill="rgb(235,29,12)"/><text x="26.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="23" y="356" width="2" height="15" fill="rgb(250,222,17)"/><text x="26.00" y="366.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (5 samples, 0.81%)</title><rect x="19" y="180" width="10" height="15" fill="rgb(236,6,10)"/><text x="22.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (5 samples, 0.81%)</title><rect x="19" y="196" width="10" height="15" fill="rgb(222,117,35)"/><text x="22.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.49%)</title><rect x="23" y="212" width="6" height="15" fill="rgb(213,19,31)"/><text x="26.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (3 samples, 0.49%)</title><rect x="23" y="228" width="6" height="15" fill="rgb(217,129,28)"/><text x="26.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (3 samples, 0.49%)</title><rect x="23" y="244" width="6" height="15" fill="rgb(244,5,20)"/><text x="26.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (3 samples, 0.49%)</title><rect x="23" y="260" width="6" height="15" fill="rgb(227,126,10)"/><text x="26.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.49%)</title><rect x="23" y="276" width="6" height="15" fill="rgb(236,78,17)"/><text x="26.00" y="286.50"></text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.49%)</title><rect x="23" y="292" width="6" height="15" fill="rgb(209,122,20)"/><text x="26.00" y="302.50"></text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.49%)</title><rect x="23" y="308" width="6" height="15" fill="rgb(218,134,7)"/><text x="26.00" y="318.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.49%)</title><rect x="23" y="324" width="6" height="15" fill="rgb(250,221,11)"/><text x="26.00" y="334.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.32%)</title><rect x="25" y="340" width="4" height="15" fill="rgb(226,120,42)"/><text x="28.00" y="350.50"></text></g><g><title>sched_yield (libc-2.29.so) (2 samples, 0.32%)</title><rect x="25" y="356" width="4" height="15" fill="rgb(230,203,39)"/><text x="28.00" y="366.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (1 samples, 0.16%)</title><rect x="29" y="180" width="2" height="15" fill="rgb(219,202,7)"/><text x="32.00" y="190.50"></text></g><g><title>relu (sklearn/neural_network/_base.py:75) (1 samples, 0.16%)</title><rect x="29" y="196" width="2" height="15" fill="rgb(251,166,10)"/><text x="32.00" y="206.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.16%)</title><rect x="29" y="212" width="2" height="15" fill="rgb(250,47,0)"/><text x="32.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.16%)</title><rect x="29" y="228" width="2" height="15" fill="rgb(209,112,49)"/><text x="32.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.16%)</title><rect x="29" y="244" width="2" height="15" fill="rgb(211,176,0)"/><text x="32.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.16%)</title><rect x="29" y="260" width="2" height="15" fill="rgb(244,228,41)"/><text x="32.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.16%)</title><rect x="29" y="276" width="2" height="15" fill="rgb(243,140,23)"/><text x="32.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.16%)</title><rect x="29" y="292" width="2" height="15" fill="rgb(209,146,40)"/><text x="32.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (1 samples, 0.16%)</title><rect x="29" y="308" width="2" height="15" fill="rgb(250,196,13)"/><text x="32.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (1 samples, 0.16%)</title><rect x="29" y="324" width="2" height="15" fill="rgb(252,127,8)"/><text x="32.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.16%)</title><rect x="29" y="340" width="2" height="15" fill="rgb(239,158,36)"/><text x="32.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.16%)</title><rect x="29" y="356" width="2" height="15" fill="rgb(217,111,7)"/><text x="32.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.16%)</title><rect x="29" y="372" width="2" height="15" fill="rgb(219,0,6)"/><text x="32.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.16%)</title><rect x="29" y="388" width="2" height="15" fill="rgb(206,153,7)"/><text x="32.00" y="398.50"></text></g><g><title>DOUBLE_clip (clip.c.src:97) (1 samples, 0.16%)</title><rect x="29" y="404" width="2" height="15" fill="rgb(237,116,31)"/><text x="32.00" y="414.50"></text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:18) (7 samples, 1.13%)</title><rect x="19" y="100" width="13" height="15" fill="rgb(218,159,31)"/><text x="22.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (7 samples, 1.13%)</title><rect x="19" y="116" width="13" height="15" fill="rgb(250,8,0)"/><text x="22.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (7 samples, 1.13%)</title><rect x="19" y="132" width="13" height="15" fill="rgb(208,176,8)"/><text x="22.00" y="142.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1072) (7 samples, 1.13%)</title><rect x="19" y="148" width="13" height="15" fill="rgb(234,34,18)"/><text x="22.00" y="158.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (7 samples, 1.13%)</title><rect x="19" y="164" width="13" height="15" fill="rgb(212,192,24)"/><text x="22.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:113) (1 samples, 0.16%)</title><rect x="31" y="180" width="1" height="15" fill="rgb(208,81,47)"/><text x="34.00" y="190.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:92) (1 samples, 0.16%)</title><rect x="31" y="196" width="1" height="15" fill="rgb(253,184,34)"/><text x="34.00" y="206.50"></text></g><g><title>array_max (methods.c:323) (1 samples, 0.16%)</title><rect x="31" y="212" width="1" height="15" fill="rgb(228,128,29)"/><text x="34.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.16%)</title><rect x="31" y="228" width="1" height="15" fill="rgb(206,7,17)"/><text x="34.00" y="238.50"></text></g><g><title>_amax (numpy/core/_methods.py:30) (1 samples, 0.16%)</title><rect x="31" y="244" width="1" height="15" fill="rgb(205,0,0)"/><text x="34.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.16%)</title><rect x="31" y="260" width="1" height="15" fill="rgb(210,92,32)"/><text x="34.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.16%)</title><rect x="31" y="276" width="1" height="15" fill="rgb(241,46,45)"/><text x="34.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.16%)</title><rect x="31" y="292" width="1" height="15" fill="rgb(246,199,41)"/><text x="34.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.16%)</title><rect x="31" y="308" width="1" height="15" fill="rgb(240,137,16)"/><text x="34.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.16%)</title><rect x="31" y="324" width="1" height="15" fill="rgb(207,171,43)"/><text x="34.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1857) (1 samples, 0.16%)</title><rect x="31" y="340" width="1" height="15" fill="rgb(245,45,14)"/><text x="34.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src:195) (1 samples, 0.16%)</title><rect x="31" y="356" width="1" height="15" fill="rgb(224,201,29)"/><text x="34.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1117) (1 samples, 0.16%)</title><rect x="31" y="372" width="1" height="15" fill="rgb(253,213,22)"/><text x="34.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.16%)</title><rect x="31" y="388" width="1" height="15" fill="rgb(246,138,43)"/><text x="34.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.16%)</title><rect x="31" y="404" width="1" height="15" fill="rgb(243,29,36)"/><text x="34.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.16%)</title><rect x="31" y="420" width="1" height="15" fill="rgb(248,41,35)"/><text x="34.00" y="430.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.16%)</title><rect x="34" y="180" width="2" height="15" fill="rgb(253,45,28)"/><text x="37.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.16%)</title><rect x="34" y="196" width="2" height="15" fill="rgb(220,174,41)"/><text x="37.00" y="206.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1071) (3 samples, 0.49%)</title><rect x="32" y="148" width="6" height="15" fill="rgb(218,32,45)"/><text x="35.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.49%)</title><rect x="32" y="164" width="6" height="15" fill="rgb(224,32,45)"/><text x="35.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.16%)</title><rect x="36" y="180" width="2" height="15" fill="rgb(219,29,35)"/><text x="39.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:434) (1 samples, 0.16%)</title><rect x="38" y="180" width="2" height="15" fill="rgb(210,212,7)"/><text x="41.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.16%)</title><rect x="40" y="180" width="2" height="15" fill="rgb(215,94,15)"/><text x="43.00" y="190.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.16%)</title><rect x="42" y="196" width="2" height="15" fill="rgb(250,206,33)"/><text x="45.00" y="206.50"></text></g><g><title>0x7ff095cf8124 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="42" y="212" width="2" height="15" fill="rgb(233,83,34)"/><text x="45.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 0.65%)</title><rect x="42" y="180" width="8" height="15" fill="rgb(250,162,35)"/><text x="45.00" y="190.50"></text></g><g><title>__init__ (warnings.py:462) (3 samples, 0.49%)</title><rect x="44" y="196" width="6" height="15" fill="rgb(215,199,36)"/><text x="47.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.16%)</title><rect x="50" y="180" width="2" height="15" fill="rgb(207,101,45)"/><text x="53.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.16%)</title><rect x="50" y="196" width="2" height="15" fill="rgb(228,180,12)"/><text x="53.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.16%)</title><rect x="50" y="212" width="2" height="15" fill="rgb(248,186,25)"/><text x="53.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.16%)</title><rect x="52" y="180" width="1" height="15" fill="rgb(212,121,53)"/><text x="55.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.16%)</title><rect x="53" y="180" width="2" height="15" fill="rgb(243,92,10)"/><text x="56.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.16%)</title><rect x="53" y="196" width="2" height="15" fill="rgb(213,100,15)"/><text x="56.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 0.49%)</title><rect x="55" y="180" width="6" height="15" fill="rgb(236,126,51)"/><text x="58.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.49%)</title><rect x="55" y="196" width="6" height="15" fill="rgb(240,109,22)"/><text x="58.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.16%)</title><rect x="59" y="212" width="2" height="15" fill="rgb(232,100,27)"/><text x="62.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.16%)</title><rect x="61" y="196" width="2" height="15" fill="rgb(209,127,26)"/><text x="64.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.16%)</title><rect x="61" y="212" width="2" height="15" fill="rgb(222,194,22)"/><text x="64.00" y="222.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:667) (15 samples, 2.43%)</title><rect x="38" y="164" width="29" height="15" fill="rgb(221,50,33)"/><text x="41.00" y="174.50">_p..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.49%)</title><rect x="61" y="180" width="6" height="15" fill="rgb(211,12,43)"/><text x="64.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.32%)</title><rect x="63" y="196" width="4" height="15" fill="rgb(243,168,48)"/><text x="66.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.16%)</title><rect x="65" y="212" width="2" height="15" fill="rgb(210,159,29)"/><text x="68.00" y="222.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:683) (2 samples, 0.32%)</title><rect x="67" y="164" width="4" height="15" fill="rgb(231,217,45)"/><text x="70.00" y="174.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.65%)</title><rect x="71" y="212" width="7" height="15" fill="rgb(241,29,12)"/><text x="74.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (37 samples, 6.00%)</title><rect x="78" y="212" width="71" height="15" fill="rgb(250,82,51)"/><text x="81.00" y="222.50">dgemm_ke..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.16%)</title><rect x="149" y="244" width="2" height="15" fill="rgb(213,21,44)"/><text x="152.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.16%)</title><rect x="149" y="260" width="2" height="15" fill="rgb(230,22,9)"/><text x="152.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.16%)</title><rect x="149" y="276" width="2" height="15" fill="rgb(230,177,9)"/><text x="152.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.16%)</title><rect x="149" y="292" width="2" height="15" fill="rgb(205,184,19)"/><text x="152.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4427) (1 samples, 0.16%)</title><rect x="149" y="308" width="2" height="15" fill="rgb(232,164,50)"/><text x="152.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2846) (1 samples, 0.16%)</title><rect x="151" y="244" width="2" height="15" fill="rgb(243,114,38)"/><text x="154.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.16%)</title><rect x="151" y="260" width="2" height="15" fill="rgb(249,111,13)"/><text x="154.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (7 samples, 1.13%)</title><rect x="153" y="244" width="13" height="15" fill="rgb(219,41,29)"/><text x="156.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (7 samples, 1.13%)</title><rect x="153" y="260" width="13" height="15" fill="rgb(235,17,4)"/><text x="156.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (7 samples, 1.13%)</title><rect x="153" y="276" width="13" height="15" fill="rgb(209,198,20)"/><text x="156.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (7 samples, 1.13%)</title><rect x="153" y="292" width="13" height="15" fill="rgb(246,59,37)"/><text x="156.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (7 samples, 1.13%)</title><rect x="153" y="308" width="13" height="15" fill="rgb(234,37,47)"/><text x="156.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (7 samples, 1.13%)</title><rect x="153" y="324" width="13" height="15" fill="rgb(254,218,54)"/><text x="156.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2971) (1 samples, 0.16%)</title><rect x="166" y="244" width="2" height="15" fill="rgb(253,76,32)"/><text x="169.00" y="254.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1218) (1 samples, 0.16%)</title><rect x="166" y="260" width="2" height="15" fill="rgb(222,18,15)"/><text x="169.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (2 samples, 0.32%)</title><rect x="168" y="356" width="4" height="15" fill="rgb(223,37,35)"/><text x="171.00" y="366.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (2 samples, 0.32%)</title><rect x="168" y="372" width="4" height="15" fill="rgb(250,151,23)"/><text x="171.00" y="382.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.49%)</title><rect x="168" y="340" width="6" height="15" fill="rgb(250,211,3)"/><text x="171.00" y="350.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="172" y="356" width="2" height="15" fill="rgb(253,182,25)"/><text x="175.00" y="366.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 3.73%)</title><rect x="174" y="340" width="44" height="15" fill="rgb(218,8,3)"/><text x="177.00" y="350.50">exec..</text></g><g><title>sched_yield (libc-2.29.so) (23 samples, 3.73%)</title><rect x="174" y="356" width="44" height="15" fill="rgb(248,207,17)"/><text x="177.00" y="366.50">sche..</text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.65%)</title><rect x="218" y="356" width="8" height="15" fill="rgb(244,199,30)"/><text x="221.00" y="366.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (88 samples, 14.26%)</title><rect x="71" y="180" width="168" height="15" fill="rgb(248,127,32)"/><text x="74.00" y="190.50">_forward_pass (sklear..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (88 samples, 14.26%)</title><rect x="71" y="196" width="168" height="15" fill="rgb(213,124,27)"/><text x="74.00" y="206.50">safe_sparse_dot (skle..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (47 samples, 7.62%)</title><rect x="149" y="212" width="90" height="15" fill="rgb(229,88,12)"/><text x="152.00" y="222.50">ufunc_gene..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (47 samples, 7.62%)</title><rect x="149" y="228" width="90" height="15" fill="rgb(208,211,45)"/><text x="152.00" y="238.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (37 samples, 6.00%)</title><rect x="168" y="244" width="71" height="15" fill="rgb(234,78,5)"/><text x="171.00" y="254.50">PyUFunc_..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (37 samples, 6.00%)</title><rect x="168" y="260" width="71" height="15" fill="rgb(240,160,15)"/><text x="171.00" y="270.50">DOUBLE_m..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (37 samples, 6.00%)</title><rect x="168" y="276" width="71" height="15" fill="rgb(226,38,41)"/><text x="171.00" y="286.50">cblas_dg..</text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (37 samples, 6.00%)</title><rect x="168" y="292" width="71" height="15" fill="rgb(211,109,21)"/><text x="171.00" y="302.50">dgemm_th..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (37 samples, 6.00%)</title><rect x="168" y="308" width="71" height="15" fill="rgb(236,219,28)"/><text x="171.00" y="318.50">gemm_dri..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (37 samples, 6.00%)</title><rect x="168" y="324" width="71" height="15" fill="rgb(249,167,9)"/><text x="171.00" y="334.50">exec_bla..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.78%)</title><rect x="218" y="340" width="21" height="15" fill="rgb(220,29,23)"/><text x="221.00" y="350.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.13%)</title><rect x="226" y="356" width="13" height="15" fill="rgb(237,228,41)"/><text x="229.00" y="366.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (4 samples, 0.65%)</title><rect x="239" y="292" width="8" height="15" fill="rgb(251,173,30)"/><text x="242.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (4 samples, 0.65%)</title><rect x="239" y="308" width="8" height="15" fill="rgb(232,165,13)"/><text x="242.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (7 samples, 1.13%)</title><rect x="239" y="260" width="13" height="15" fill="rgb(210,143,54)"/><text x="242.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (7 samples, 1.13%)</title><rect x="239" y="276" width="13" height="15" fill="rgb(245,53,33)"/><text x="242.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (3 samples, 0.49%)</title><rect x="247" y="292" width="5" height="15" fill="rgb(214,211,35)"/><text x="250.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 0.49%)</title><rect x="247" y="308" width="5" height="15" fill="rgb(248,93,46)"/><text x="250.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2246) (1 samples, 0.16%)</title><rect x="252" y="276" width="2" height="15" fill="rgb(249,116,12)"/><text x="255.00" y="286.50"></text></g><g><title>0x7ff095cf7f16 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="254" y="308" width="2" height="15" fill="rgb(249,122,3)"/><text x="257.00" y="318.50"></text></g><g><title>0x7ff095cf7f42 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="256" y="308" width="2" height="15" fill="rgb(230,216,45)"/><text x="259.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.49%)</title><rect x="254" y="292" width="6" height="15" fill="rgb(238,37,15)"/><text x="257.00" y="302.50"></text></g><g><title>0x7ff095cf7f58 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="258" y="308" width="2" height="15" fill="rgb(250,139,2)"/><text x="261.00" y="318.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:105) (12 samples, 1.94%)</title><rect x="239" y="180" width="23" height="15" fill="rgb(210,225,54)"/><text x="242.00" y="190.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 1.94%)</title><rect x="239" y="196" width="23" height="15" fill="rgb(223,34,54)"/><text x="242.00" y="206.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 1.94%)</title><rect x="239" y="212" width="23" height="15" fill="rgb(238,22,54)"/><text x="242.00" y="222.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (12 samples, 1.94%)</title><rect x="239" y="228" width="23" height="15" fill="rgb(239,21,25)"/><text x="242.00" y="238.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (12 samples, 1.94%)</title><rect x="239" y="244" width="23" height="15" fill="rgb(251,217,46)"/><text x="242.00" y="254.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:322) (5 samples, 0.81%)</title><rect x="252" y="260" width="10" height="15" fill="rgb(213,119,14)"/><text x="255.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.65%)</title><rect x="254" y="276" width="8" height="15" fill="rgb(229,227,10)"/><text x="257.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1078) (1 samples, 0.16%)</title><rect x="260" y="292" width="2" height="15" fill="rgb(208,106,28)"/><text x="263.00" y="302.50"></text></g><g><title>0x7ff095cf7f36 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="260" y="308" width="2" height="15" fill="rgb(249,148,34)"/><text x="263.00" y="318.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.16%)</title><rect x="264" y="212" width="2" height="15" fill="rgb(217,6,46)"/><text x="267.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.16%)</title><rect x="266" y="228" width="2" height="15" fill="rgb(219,106,28)"/><text x="269.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.16%)</title><rect x="266" y="244" width="2" height="15" fill="rgb(231,206,5)"/><text x="269.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.16%)</title><rect x="266" y="260" width="2" height="15" fill="rgb(212,169,41)"/><text x="269.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.16%)</title><rect x="266" y="276" width="2" height="15" fill="rgb(243,92,4)"/><text x="269.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.16%)</title><rect x="266" y="292" width="2" height="15" fill="rgb(222,159,46)"/><text x="269.00" y="302.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.16%)</title><rect x="270" y="324" width="2" height="15" fill="rgb(219,36,42)"/><text x="273.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.16%)</title><rect x="270" y="340" width="2" height="15" fill="rgb(229,134,32)"/><text x="273.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.16%)</title><rect x="272" y="324" width="1" height="15" fill="rgb(251,120,18)"/><text x="275.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.16%)</title><rect x="272" y="340" width="1" height="15" fill="rgb(238,37,49)"/><text x="275.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.16%)</title><rect x="272" y="356" width="1" height="15" fill="rgb(209,131,10)"/><text x="275.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.16%)</title><rect x="272" y="372" width="1" height="15" fill="rgb(234,224,11)"/><text x="275.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.16%)</title><rect x="273" y="356" width="2" height="15" fill="rgb(236,129,13)"/><text x="276.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.16%)</title><rect x="273" y="372" width="2" height="15" fill="rgb(246,111,43)"/><text x="276.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.65%)</title><rect x="270" y="308" width="7" height="15" fill="rgb(248,111,30)"/><text x="273.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.32%)</title><rect x="273" y="324" width="4" height="15" fill="rgb(211,28,44)"/><text x="276.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.32%)</title><rect x="273" y="340" width="4" height="15" fill="rgb(218,156,46)"/><text x="276.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.16%)</title><rect x="275" y="356" width="2" height="15" fill="rgb(241,193,39)"/><text x="278.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.16%)</title><rect x="275" y="372" width="2" height="15" fill="rgb(243,0,48)"/><text x="278.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.16%)</title><rect x="275" y="388" width="2" height="15" fill="rgb(222,194,29)"/><text x="278.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.16%)</title><rect x="275" y="404" width="2" height="15" fill="rgb(251,37,27)"/><text x="278.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (1 samples, 0.16%)</title><rect x="277" y="308" width="2" height="15" fill="rgb(223,154,50)"/><text x="280.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.16%)</title><rect x="277" y="324" width="2" height="15" fill="rgb(214,51,39)"/><text x="280.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.16%)</title><rect x="279" y="388" width="2" height="15" fill="rgb(212,215,40)"/><text x="282.00" y="398.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.16%)</title><rect x="279" y="404" width="2" height="15" fill="rgb(215,155,12)"/><text x="282.00" y="414.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2176) (1 samples, 0.16%)</title><rect x="279" y="420" width="2" height="15" fill="rgb(248,177,13)"/><text x="282.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.16%)</title><rect x="281" y="388" width="2" height="15" fill="rgb(254,0,52)"/><text x="284.00" y="398.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.16%)</title><rect x="281" y="404" width="2" height="15" fill="rgb(253,94,16)"/><text x="284.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src:96) (9 samples, 1.46%)</title><rect x="283" y="404" width="17" height="15" fill="rgb(208,163,47)"/><text x="286.00" y="414.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (52 samples, 8.43%)</title><rect x="262" y="180" width="99" height="15" fill="rgb(208,82,28)"/><text x="265.00" y="190.50">_forward_pa..</text></g><g><title>relu (sklearn/neural_network/_base.py:75) (52 samples, 8.43%)</title><rect x="262" y="196" width="99" height="15" fill="rgb(212,108,20)"/><text x="265.00" y="206.50">relu (sklea..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (50 samples, 8.10%)</title><rect x="266" y="212" width="95" height="15" fill="rgb(242,112,41)"/><text x="269.00" y="222.50">clip (&lt;__ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (49 samples, 7.94%)</title><rect x="268" y="228" width="93" height="15" fill="rgb(209,152,42)"/><text x="271.00" y="238.50">array_imple..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (49 samples, 7.94%)</title><rect x="268" y="244" width="93" height="15" fill="rgb(221,173,40)"/><text x="271.00" y="254.50">clip (numpy..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (48 samples, 7.78%)</title><rect x="270" y="260" width="91" height="15" fill="rgb(254,75,34)"/><text x="273.00" y="270.50">_wrapfunc ..</text></g><g><title>array_clip (methods.c:2381) (48 samples, 7.78%)</title><rect x="270" y="276" width="91" height="15" fill="rgb(249,38,22)"/><text x="273.00" y="286.50">array_clip..</text></g><g><title>forward_ndarray_method (methods.c:108) (48 samples, 7.78%)</title><rect x="270" y="292" width="91" height="15" fill="rgb(205,144,11)"/><text x="273.00" y="302.50">forward_nd..</text></g><g><title>_clip (numpy/core/_methods.py:132) (43 samples, 6.97%)</title><rect x="279" y="308" width="82" height="15" fill="rgb(235,212,22)"/><text x="282.00" y="318.50">_clip (nu..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (43 samples, 6.97%)</title><rect x="279" y="324" width="82" height="15" fill="rgb(251,12,31)"/><text x="282.00" y="334.50">_clip_dep..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (43 samples, 6.97%)</title><rect x="279" y="340" width="82" height="15" fill="rgb(234,102,27)"/><text x="282.00" y="350.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (43 samples, 6.97%)</title><rect x="279" y="356" width="82" height="15" fill="rgb(245,59,24)"/><text x="282.00" y="366.50">PyUFunc_G..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (43 samples, 6.97%)</title><rect x="279" y="372" width="82" height="15" fill="rgb(223,155,51)"/><text x="282.00" y="382.50">execute_l..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (41 samples, 6.65%)</title><rect x="283" y="388" width="78" height="15" fill="rgb(229,19,10)"/><text x="286.00" y="398.50">iterator_..</text></g><g><title>DOUBLE_clip (clip.c.src:97) (32 samples, 5.19%)</title><rect x="300" y="404" width="61" height="15" fill="rgb(210,222,22)"/><text x="303.00" y="414.50">DOUBLE..</text></g><g><title>array_max (methods.c:323) (1 samples, 0.16%)</title><rect x="361" y="212" width="2" height="15" fill="rgb(212,197,49)"/><text x="364.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.16%)</title><rect x="361" y="228" width="2" height="15" fill="rgb(231,105,16)"/><text x="364.00" y="238.50"></text></g><g><title>_amax (numpy/core/_methods.py:30) (1 samples, 0.16%)</title><rect x="361" y="244" width="2" height="15" fill="rgb(245,156,52)"/><text x="364.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.16%)</title><rect x="361" y="260" width="2" height="15" fill="rgb(241,6,49)"/><text x="364.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.16%)</title><rect x="361" y="276" width="2" height="15" fill="rgb(226,184,51)"/><text x="364.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.16%)</title><rect x="361" y="292" width="2" height="15" fill="rgb(240,134,14)"/><text x="364.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.16%)</title><rect x="361" y="308" width="2" height="15" fill="rgb(215,110,8)"/><text x="364.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.16%)</title><rect x="361" y="324" width="2" height="15" fill="rgb(213,189,30)"/><text x="364.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1876) (1 samples, 0.16%)</title><rect x="361" y="340" width="2" height="15" fill="rgb(209,87,50)"/><text x="364.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.16%)</title><rect x="361" y="356" width="2" height="15" fill="rgb(251,39,27)"/><text x="364.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:794) (1 samples, 0.16%)</title><rect x="361" y="372" width="2" height="15" fill="rgb(240,144,35)"/><text x="364.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2835) (1 samples, 0.16%)</title><rect x="363" y="308" width="2" height="15" fill="rgb(216,53,40)"/><text x="366.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (1 samples, 0.16%)</title><rect x="365" y="324" width="2" height="15" fill="rgb(247,180,26)"/><text x="368.00" y="334.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:92) (4 samples, 0.65%)</title><rect x="361" y="196" width="8" height="15" fill="rgb(207,34,31)"/><text x="364.00" y="206.50"></text></g><g><title>array_subtract (number.c:342) (3 samples, 0.49%)</title><rect x="363" y="212" width="6" height="15" fill="rgb(216,159,37)"/><text x="366.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.49%)</title><rect x="363" y="228" width="6" height="15" fill="rgb(217,141,15)"/><text x="366.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.49%)</title><rect x="363" y="244" width="6" height="15" fill="rgb(230,70,47)"/><text x="366.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.49%)</title><rect x="363" y="260" width="6" height="15" fill="rgb(225,96,20)"/><text x="366.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.49%)</title><rect x="363" y="276" width="6" height="15" fill="rgb(226,9,52)"/><text x="366.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (3 samples, 0.49%)</title><rect x="363" y="292" width="6" height="15" fill="rgb(209,147,24)"/><text x="366.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.32%)</title><rect x="365" y="308" width="4" height="15" fill="rgb(218,87,31)"/><text x="368.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.16%)</title><rect x="367" y="324" width="2" height="15" fill="rgb(228,15,22)"/><text x="370.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.16%)</title><rect x="367" y="340" width="2" height="15" fill="rgb(205,108,38)"/><text x="370.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.16%)</title><rect x="367" y="356" width="2" height="15" fill="rgb(214,132,29)"/><text x="370.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.16%)</title><rect x="367" y="372" width="2" height="15" fill="rgb(251,76,2)"/><text x="370.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.16%)</title><rect x="367" y="388" width="2" height="15" fill="rgb(249,210,22)"/><text x="370.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.16%)</title><rect x="367" y="404" width="2" height="15" fill="rgb(236,229,5)"/><text x="370.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="367" y="420" width="2" height="15" fill="rgb(240,30,25)"/><text x="370.00" y="430.50"></text></g><g><title>0x7ff095cd8db0 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="367" y="436" width="2" height="15" fill="rgb(241,112,21)"/><text x="370.00" y="446.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.16%)</title><rect x="369" y="276" width="2" height="15" fill="rgb(245,226,17)"/><text x="372.00" y="286.50"></text></g><g><title>0x7ff095ea9c6e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="371" y="308" width="2" height="15" fill="rgb(212,180,37)"/><text x="374.00" y="318.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:93) (3 samples, 0.49%)</title><rect x="369" y="196" width="6" height="15" fill="rgb(237,193,13)"/><text x="372.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.49%)</title><rect x="369" y="212" width="6" height="15" fill="rgb(239,12,14)"/><text x="372.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.49%)</title><rect x="369" y="228" width="6" height="15" fill="rgb(247,24,36)"/><text x="372.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (3 samples, 0.49%)</title><rect x="369" y="244" width="6" height="15" fill="rgb(229,173,32)"/><text x="372.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (3 samples, 0.49%)</title><rect x="369" y="260" width="6" height="15" fill="rgb(240,182,37)"/><text x="372.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (2 samples, 0.32%)</title><rect x="371" y="276" width="4" height="15" fill="rgb(243,122,21)"/><text x="374.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (2 samples, 0.32%)</title><rect x="371" y="292" width="4" height="15" fill="rgb(214,154,7)"/><text x="374.00" y="302.50"></text></g><g><title>0x7ff095ea9c7b (libm-2.29.so) (1 samples, 0.16%)</title><rect x="373" y="308" width="2" height="15" fill="rgb(205,192,2)"/><text x="376.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.16%)</title><rect x="379" y="292" width="2" height="15" fill="rgb(217,223,48)"/><text x="382.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.16%)</title><rect x="379" y="308" width="2" height="15" fill="rgb(211,14,35)"/><text x="382.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.16%)</title><rect x="379" y="324" width="2" height="15" fill="rgb(213,148,31)"/><text x="382.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.16%)</title><rect x="379" y="340" width="2" height="15" fill="rgb(242,164,25)"/><text x="382.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1663) (1 samples, 0.16%)</title><rect x="379" y="356" width="2" height="15" fill="rgb(229,100,9)"/><text x="382.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.16%)</title><rect x="381" y="308" width="1" height="15" fill="rgb(225,57,37)"/><text x="384.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.16%)</title><rect x="381" y="324" width="1" height="15" fill="rgb(243,216,26)"/><text x="384.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.32%)</title><rect x="382" y="340" width="4" height="15" fill="rgb(243,44,45)"/><text x="385.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.16%)</title><rect x="384" y="356" width="2" height="15" fill="rgb(237,202,11)"/><text x="387.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (3 samples, 0.49%)</title><rect x="382" y="308" width="6" height="15" fill="rgb(241,22,28)"/><text x="385.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (3 samples, 0.49%)</title><rect x="382" y="324" width="6" height="15" fill="rgb(251,108,9)"/><text x="385.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.16%)</title><rect x="386" y="340" width="2" height="15" fill="rgb(250,140,14)"/><text x="389.00" y="350.50"></text></g><g><title>array_sum (methods.c:2215) (7 samples, 1.13%)</title><rect x="377" y="212" width="13" height="15" fill="rgb(215,73,24)"/><text x="380.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (7 samples, 1.13%)</title><rect x="377" y="228" width="13" height="15" fill="rgb(235,195,51)"/><text x="380.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (6 samples, 0.97%)</title><rect x="379" y="244" width="11" height="15" fill="rgb(221,198,4)"/><text x="382.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 0.97%)</title><rect x="379" y="260" width="11" height="15" fill="rgb(217,66,43)"/><text x="382.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 0.97%)</title><rect x="379" y="276" width="11" height="15" fill="rgb(243,53,1)"/><text x="382.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 0.81%)</title><rect x="381" y="292" width="9" height="15" fill="rgb(233,18,17)"/><text x="384.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:595) (1 samples, 0.16%)</title><rect x="388" y="308" width="2" height="15" fill="rgb(237,131,38)"/><text x="391.00" y="318.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c:1054) (1 samples, 0.16%)</title><rect x="388" y="324" width="2" height="15" fill="rgb(217,62,18)"/><text x="391.00" y="334.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1072) (185 samples, 29.98%)</title><rect x="38" y="148" width="354" height="15" fill="rgb(233,103,48)"/><text x="41.00" y="158.50">predict_proba (sklearn/neural_network/_multilaye..</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (168 samples, 27.23%)</title><rect x="71" y="164" width="321" height="15" fill="rgb(231,0,33)"/><text x="74.00" y="174.50">_predict (sklearn/neural_network/_multilaye..</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:113) (16 samples, 2.59%)</title><rect x="361" y="180" width="31" height="15" fill="rgb(228,214,50)"/><text x="364.00" y="190.50">_f..</text></g><g><title>softmax (sklearn/neural_network/_base.py:94) (9 samples, 1.46%)</title><rect x="375" y="196" width="17" height="15" fill="rgb(231,115,36)"/><text x="378.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.16%)</title><rect x="390" y="212" width="2" height="15" fill="rgb(219,217,40)"/><text x="393.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.16%)</title><rect x="390" y="228" width="2" height="15" fill="rgb(247,31,18)"/><text x="393.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:45) (1 samples, 0.16%)</title><rect x="390" y="244" width="2" height="15" fill="rgb(243,200,11)"/><text x="393.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:38) (198 samples, 32.09%)</title><rect x="15" y="52" width="379" height="15" fill="rgb(231,11,19)"/><text x="18.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_50_..</text></g><g><title>profile_skl (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:37) (198 samples, 32.09%)</title><rect x="15" y="68" width="379" height="15" fill="rgb(212,77,34)"/><text x="18.00" y="78.50">profile_skl (bench_MLPClassifier_default_m_cl_1000_..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:29) (196 samples, 31.77%)</title><rect x="19" y="84" width="375" height="15" fill="rgb(254,131,0)"/><text x="22.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_10..</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:23) (189 samples, 30.63%)</title><rect x="32" y="100" width="362" height="15" fill="rgb(247,15,24)"/><text x="35.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1000_50..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (189 samples, 30.63%)</title><rect x="32" y="116" width="362" height="15" fill="rgb(228,64,26)"/><text x="35.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (189 samples, 30.63%)</title><rect x="32" y="132" width="362" height="15" fill="rgb(251,117,51)"/><text x="35.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1074) (1 samples, 0.16%)</title><rect x="392" y="148" width="2" height="15" fill="rgb(207,176,0)"/><text x="395.00" y="158.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:1) (1 samples, 0.16%)</title><rect x="394" y="148" width="2" height="15" fill="rgb(223,22,32)"/><text x="397.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="394" y="164" width="2" height="15" fill="rgb(247,164,49)"/><text x="397.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="394" y="180" width="2" height="15" fill="rgb(209,64,37)"/><text x="397.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="394" y="196" width="2" height="15" fill="rgb(209,198,20)"/><text x="397.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="394" y="212" width="2" height="15" fill="rgb(225,161,27)"/><text x="397.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="394" y="228" width="2" height="15" fill="rgb(245,177,38)"/><text x="397.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.16%)</title><rect x="394" y="244" width="2" height="15" fill="rgb(219,14,11)"/><text x="397.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="394" y="260" width="2" height="15" fill="rgb(219,175,32)"/><text x="397.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="394" y="276" width="2" height="15" fill="rgb(245,124,53)"/><text x="397.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="394" y="292" width="2" height="15" fill="rgb(248,201,28)"/><text x="397.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="394" y="308" width="2" height="15" fill="rgb(238,18,7)"/><text x="397.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="394" y="324" width="2" height="15" fill="rgb(233,135,51)"/><text x="397.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="394" y="340" width="2" height="15" fill="rgb(249,176,27)"/><text x="397.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="394" y="356" width="2" height="15" fill="rgb(235,56,15)"/><text x="397.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:19) (1 samples, 0.16%)</title><rect x="394" y="372" width="2" height="15" fill="rgb(222,105,8)"/><text x="397.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="394" y="388" width="2" height="15" fill="rgb(223,89,25)"/><text x="397.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="394" y="404" width="2" height="15" fill="rgb(217,161,0)"/><text x="397.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="394" y="420" width="2" height="15" fill="rgb(242,215,23)"/><text x="397.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="394" y="436" width="2" height="15" fill="rgb(216,166,36)"/><text x="397.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="394" y="452" width="2" height="15" fill="rgb(250,102,2)"/><text x="397.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="394" y="468" width="2" height="15" fill="rgb(221,26,33)"/><text x="397.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="394" y="484" width="2" height="15" fill="rgb(218,156,41)"/><text x="397.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/lib/scimath.py:555) (1 samples, 0.16%)</title><rect x="394" y="500" width="2" height="15" fill="rgb(253,182,42)"/><text x="397.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.16%)</title><rect x="394" y="516" width="2" height="15" fill="rgb(215,102,11)"/><text x="397.00" y="526.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.16%)</title><rect x="396" y="916" width="2" height="15" fill="rgb(218,144,9)"/><text x="399.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.16%)</title><rect x="396" y="932" width="2" height="15" fill="rgb(210,198,53)"/><text x="399.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.16%)</title><rect x="396" y="948" width="2" height="15" fill="rgb(238,83,46)"/><text x="399.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.16%)</title><rect x="396" y="964" width="2" height="15" fill="rgb(245,109,2)"/><text x="399.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.16%)</title><rect x="396" y="980" width="2" height="15" fill="rgb(231,158,36)"/><text x="399.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:75) (1 samples, 0.16%)</title><rect x="396" y="996" width="2" height="15" fill="rgb(226,129,36)"/><text x="399.00" y="1006.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.16%)</title><rect x="396" y="1012" width="2" height="15" fill="rgb(241,72,32)"/><text x="399.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.32%)</title><rect x="396" y="852" width="4" height="15" fill="rgb(237,45,32)"/><text x="399.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.32%)</title><rect x="396" y="868" width="4" height="15" fill="rgb(241,162,51)"/><text x="399.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.32%)</title><rect x="396" y="884" width="4" height="15" fill="rgb(235,79,5)"/><text x="399.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.32%)</title><rect x="396" y="900" width="4" height="15" fill="rgb(251,53,51)"/><text x="399.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.16%)</title><rect x="398" y="916" width="2" height="15" fill="rgb(211,108,3)"/><text x="401.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.16%)</title><rect x="398" y="932" width="2" height="15" fill="rgb(227,180,17)"/><text x="401.00" y="942.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.16%)</title><rect x="398" y="948" width="2" height="15" fill="rgb(210,217,44)"/><text x="401.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.16%)</title><rect x="398" y="964" width="2" height="15" fill="rgb(230,131,3)"/><text x="401.00" y="974.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2294) (1 samples, 0.16%)</title><rect x="400" y="900" width="2" height="15" fill="rgb(251,131,46)"/><text x="403.00" y="910.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.32%)</title><rect x="400" y="852" width="3" height="15" fill="rgb(251,165,34)"/><text x="403.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.32%)</title><rect x="400" y="868" width="3" height="15" fill="rgb(228,128,2)"/><text x="403.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.32%)</title><rect x="400" y="884" width="3" height="15" fill="rgb(248,103,25)"/><text x="403.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.16%)</title><rect x="402" y="900" width="1" height="15" fill="rgb(205,153,24)"/><text x="405.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.16%)</title><rect x="402" y="916" width="1" height="15" fill="rgb(211,63,23)"/><text x="405.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.16%)</title><rect x="402" y="932" width="1" height="15" fill="rgb(212,79,19)"/><text x="405.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.16%)</title><rect x="402" y="948" width="1" height="15" fill="rgb(215,134,5)"/><text x="405.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.16%)</title><rect x="402" y="964" width="1" height="15" fill="rgb(219,135,14)"/><text x="405.00" y="974.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;:224) (1 samples, 0.16%)</title><rect x="402" y="980" width="1" height="15" fill="rgb(248,180,41)"/><text x="405.00" y="990.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.16%)</title><rect x="403" y="916" width="2" height="15" fill="rgb(249,68,47)"/><text x="406.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.16%)</title><rect x="403" y="932" width="2" height="15" fill="rgb(248,97,14)"/><text x="406.00" y="942.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.16%)</title><rect x="405" y="964" width="2" height="15" fill="rgb(230,108,36)"/><text x="408.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.16%)</title><rect x="405" y="980" width="2" height="15" fill="rgb(213,182,37)"/><text x="408.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.16%)</title><rect x="405" y="996" width="2" height="15" fill="rgb(215,189,1)"/><text x="408.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.16%)</title><rect x="405" y="1012" width="2" height="15" fill="rgb(248,105,44)"/><text x="408.00" y="1022.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (3 samples, 0.49%)</title><rect x="403" y="884" width="6" height="15" fill="rgb(209,142,26)"/><text x="406.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (3 samples, 0.49%)</title><rect x="403" y="900" width="6" height="15" fill="rgb(205,206,34)"/><text x="406.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.32%)</title><rect x="405" y="916" width="4" height="15" fill="rgb(247,51,0)"/><text x="408.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.32%)</title><rect x="405" y="932" width="4" height="15" fill="rgb(210,34,27)"/><text x="408.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (2 samples, 0.32%)</title><rect x="405" y="948" width="4" height="15" fill="rgb(219,53,17)"/><text x="408.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:217) (1 samples, 0.16%)</title><rect x="407" y="964" width="2" height="15" fill="rgb(233,44,30)"/><text x="410.00" y="974.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (8 samples, 1.30%)</title><rect x="396" y="820" width="15" height="15" fill="rgb(227,162,19)"/><text x="399.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (8 samples, 1.30%)</title><rect x="396" y="836" width="15" height="15" fill="rgb(206,21,14)"/><text x="399.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (4 samples, 0.65%)</title><rect x="403" y="852" width="8" height="15" fill="rgb(210,66,29)"/><text x="406.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (4 samples, 0.65%)</title><rect x="403" y="868" width="8" height="15" fill="rgb(218,152,18)"/><text x="406.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.16%)</title><rect x="409" y="884" width="2" height="15" fill="rgb(233,77,28)"/><text x="412.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.16%)</title><rect x="409" y="900" width="2" height="15" fill="rgb(230,134,3)"/><text x="412.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2585) (1 samples, 0.16%)</title><rect x="409" y="916" width="2" height="15" fill="rgb(208,220,3)"/><text x="412.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:2) (9 samples, 1.46%)</title><rect x="396" y="148" width="17" height="15" fill="rgb(235,128,22)"/><text x="399.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.46%)</title><rect x="396" y="164" width="17" height="15" fill="rgb(233,131,7)"/><text x="399.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 1.46%)</title><rect x="396" y="180" width="17" height="15" fill="rgb(223,118,30)"/><text x="399.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.46%)</title><rect x="396" y="196" width="17" height="15" fill="rgb(247,13,5)"/><text x="399.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.46%)</title><rect x="396" y="212" width="17" height="15" fill="rgb(214,148,16)"/><text x="399.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.46%)</title><rect x="396" y="228" width="17" height="15" fill="rgb(236,143,37)"/><text x="399.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.46%)</title><rect x="396" y="244" width="17" height="15" fill="rgb(208,152,50)"/><text x="399.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.46%)</title><rect x="396" y="260" width="17" height="15" fill="rgb(250,113,23)"/><text x="399.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.46%)</title><rect x="396" y="276" width="17" height="15" fill="rgb(238,128,4)"/><text x="399.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (9 samples, 1.46%)</title><rect x="396" y="292" width="17" height="15" fill="rgb(206,227,17)"/><text x="399.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.46%)</title><rect x="396" y="308" width="17" height="15" fill="rgb(217,131,11)"/><text x="399.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.46%)</title><rect x="396" y="324" width="17" height="15" fill="rgb(224,157,33)"/><text x="399.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.46%)</title><rect x="396" y="340" width="17" height="15" fill="rgb(224,6,4)"/><text x="399.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.46%)</title><rect x="396" y="356" width="17" height="15" fill="rgb(210,54,3)"/><text x="399.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.46%)</title><rect x="396" y="372" width="17" height="15" fill="rgb(230,93,20)"/><text x="399.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (9 samples, 1.46%)</title><rect x="396" y="388" width="17" height="15" fill="rgb(234,10,37)"/><text x="399.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.46%)</title><rect x="396" y="404" width="17" height="15" fill="rgb(205,190,15)"/><text x="399.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.46%)</title><rect x="396" y="420" width="17" height="15" fill="rgb(249,173,44)"/><text x="399.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.46%)</title><rect x="396" y="436" width="17" height="15" fill="rgb(235,12,31)"/><text x="399.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.46%)</title><rect x="396" y="452" width="17" height="15" fill="rgb(242,131,11)"/><text x="399.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.46%)</title><rect x="396" y="468" width="17" height="15" fill="rgb(243,172,8)"/><text x="399.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (9 samples, 1.46%)</title><rect x="396" y="484" width="17" height="15" fill="rgb(252,92,51)"/><text x="399.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.46%)</title><rect x="396" y="500" width="17" height="15" fill="rgb(217,153,48)"/><text x="399.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.46%)</title><rect x="396" y="516" width="17" height="15" fill="rgb(240,134,11)"/><text x="399.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.46%)</title><rect x="396" y="532" width="17" height="15" fill="rgb(223,200,35)"/><text x="399.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.46%)</title><rect x="396" y="548" width="17" height="15" fill="rgb(206,24,11)"/><text x="399.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.46%)</title><rect x="396" y="564" width="17" height="15" fill="rgb(231,29,51)"/><text x="399.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (9 samples, 1.46%)</title><rect x="396" y="580" width="17" height="15" fill="rgb(243,176,37)"/><text x="399.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.46%)</title><rect x="396" y="596" width="17" height="15" fill="rgb(251,46,49)"/><text x="399.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 1.46%)</title><rect x="396" y="612" width="17" height="15" fill="rgb(220,189,5)"/><text x="399.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.46%)</title><rect x="396" y="628" width="17" height="15" fill="rgb(231,229,49)"/><text x="399.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.46%)</title><rect x="396" y="644" width="17" height="15" fill="rgb(244,103,42)"/><text x="399.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.46%)</title><rect x="396" y="660" width="17" height="15" fill="rgb(221,110,22)"/><text x="399.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.46%)</title><rect x="396" y="676" width="17" height="15" fill="rgb(241,122,49)"/><text x="399.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.46%)</title><rect x="396" y="692" width="17" height="15" fill="rgb(253,93,35)"/><text x="399.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.46%)</title><rect x="396" y="708" width="17" height="15" fill="rgb(253,67,43)"/><text x="399.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (9 samples, 1.46%)</title><rect x="396" y="724" width="17" height="15" fill="rgb(229,105,7)"/><text x="399.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.46%)</title><rect x="396" y="740" width="17" height="15" fill="rgb(222,187,45)"/><text x="399.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.46%)</title><rect x="396" y="756" width="17" height="15" fill="rgb(251,113,47)"/><text x="399.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.46%)</title><rect x="396" y="772" width="17" height="15" fill="rgb(213,45,8)"/><text x="399.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.46%)</title><rect x="396" y="788" width="17" height="15" fill="rgb(207,88,48)"/><text x="399.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.46%)</title><rect x="396" y="804" width="17" height="15" fill="rgb(234,224,2)"/><text x="399.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.16%)</title><rect x="411" y="820" width="2" height="15" fill="rgb(223,156,21)"/><text x="414.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="411" y="836" width="2" height="15" fill="rgb(211,207,21)"/><text x="414.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="411" y="852" width="2" height="15" fill="rgb(247,68,36)"/><text x="414.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="411" y="868" width="2" height="15" fill="rgb(206,28,16)"/><text x="414.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="411" y="884" width="2" height="15" fill="rgb(233,205,8)"/><text x="414.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="411" y="900" width="2" height="15" fill="rgb(245,197,36)"/><text x="414.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.16%)</title><rect x="411" y="916" width="2" height="15" fill="rgb(231,209,54)"/><text x="414.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="411" y="932" width="2" height="15" fill="rgb(213,92,28)"/><text x="414.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="411" y="948" width="2" height="15" fill="rgb(236,8,44)"/><text x="414.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.16%)</title><rect x="411" y="964" width="2" height="15" fill="rgb(209,204,26)"/><text x="414.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.16%)</title><rect x="411" y="980" width="2" height="15" fill="rgb(218,102,12)"/><text x="414.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.16%)</title><rect x="411" y="996" width="2" height="15" fill="rgb(228,210,17)"/><text x="414.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="411" y="1012" width="2" height="15" fill="rgb(229,177,13)"/><text x="414.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="411" y="1028" width="2" height="15" fill="rgb(247,74,52)"/><text x="414.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="411" y="1044" width="2" height="15" fill="rgb(205,152,36)"/><text x="414.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="411" y="1060" width="2" height="15" fill="rgb(239,187,4)"/><text x="414.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="411" y="1076" width="2" height="15" fill="rgb(223,22,42)"/><text x="414.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5399) (1 samples, 0.16%)</title><rect x="411" y="1092" width="2" height="15" fill="rgb(244,18,24)"/><text x="414.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py:5578) (1 samples, 0.16%)</title><rect x="411" y="1108" width="2" height="15" fill="rgb(236,83,9)"/><text x="414.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.16%)</title><rect x="411" y="1124" width="2" height="15" fill="rgb(228,94,37)"/><text x="414.00" y="1134.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.16%)</title><rect x="411" y="1140" width="2" height="15" fill="rgb(239,229,41)"/><text x="414.00" y="1150.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.16%)</title><rect x="411" y="1156" width="2" height="15" fill="rgb(252,188,43)"/><text x="414.00" y="1166.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.16%)</title><rect x="411" y="1172" width="2" height="15" fill="rgb(205,131,35)"/><text x="414.00" y="1182.50"></text></g><g><title>_code (sre_compile.py:604) (1 samples, 0.16%)</title><rect x="411" y="1188" width="2" height="15" fill="rgb(252,186,34)"/><text x="414.00" y="1198.50"></text></g><g><title>_compile_info (sre_compile.py:555) (1 samples, 0.16%)</title><rect x="411" y="1204" width="2" height="15" fill="rgb(230,0,40)"/><text x="414.00" y="1214.50"></text></g><g><title>_get_charset_prefix (sre_compile.py:515) (1 samples, 0.16%)</title><rect x="411" y="1220" width="2" height="15" fill="rgb(213,66,20)"/><text x="414.00" y="1230.50"></text></g><g><title>__getitem__ (sre_parse.py:167) (1 samples, 0.16%)</title><rect x="411" y="1236" width="2" height="15" fill="rgb(210,161,49)"/><text x="414.00" y="1246.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.16%)</title><rect x="413" y="900" width="2" height="15" fill="rgb(214,131,33)"/><text x="416.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="413" y="916" width="2" height="15" fill="rgb(216,5,39)"/><text x="416.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="413" y="932" width="2" height="15" fill="rgb(241,208,41)"/><text x="416.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="413" y="948" width="2" height="15" fill="rgb(219,79,26)"/><text x="416.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="413" y="964" width="2" height="15" fill="rgb(229,21,22)"/><text x="416.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="413" y="980" width="2" height="15" fill="rgb(222,51,28)"/><text x="416.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.16%)</title><rect x="413" y="996" width="2" height="15" fill="rgb(223,159,50)"/><text x="416.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="413" y="1012" width="2" height="15" fill="rgb(221,62,30)"/><text x="416.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="413" y="1028" width="2" height="15" fill="rgb(229,156,6)"/><text x="416.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="413" y="1044" width="2" height="15" fill="rgb(239,56,45)"/><text x="416.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="413" y="1060" width="2" height="15" fill="rgb(223,59,23)"/><text x="416.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="413" y="1076" width="2" height="15" fill="rgb(213,146,17)"/><text x="416.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="413" y="1092" width="2" height="15" fill="rgb(248,202,35)"/><text x="416.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="413" y="1108" width="2" height="15" fill="rgb(209,76,51)"/><text x="416.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:411) (1 samples, 0.16%)</title><rect x="413" y="1124" width="2" height="15" fill="rgb(236,200,10)"/><text x="416.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="413" y="1140" width="2" height="15" fill="rgb(226,56,42)"/><text x="416.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="413" y="1156" width="2" height="15" fill="rgb(225,74,12)"/><text x="416.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="413" y="1172" width="2" height="15" fill="rgb(208,110,37)"/><text x="416.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="413" y="1188" width="2" height="15" fill="rgb(216,9,4)"/><text x="416.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="413" y="1204" width="2" height="15" fill="rgb(241,122,21)"/><text x="416.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_shgo.py:11) (1 samples, 0.16%)</title><rect x="413" y="1220" width="2" height="15" fill="rgb(229,213,46)"/><text x="416.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="413" y="1236" width="2" height="15" fill="rgb(241,64,46)"/><text x="416.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="413" y="1252" width="2" height="15" fill="rgb(252,0,36)"/><text x="416.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="413" y="1268" width="2" height="15" fill="rgb(225,207,3)"/><text x="416.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="413" y="1284" width="2" height="15" fill="rgb(233,216,38)"/><text x="416.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="413" y="1300" width="2" height="15" fill="rgb(218,225,30)"/><text x="416.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="413" y="1316" width="2" height="15" fill="rgb(232,94,11)"/><text x="416.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="413" y="1332" width="2" height="15" fill="rgb(235,0,0)"/><text x="416.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/__init__.py:109) (1 samples, 0.16%)</title><rect x="413" y="1348" width="2" height="15" fill="rgb(232,133,24)"/><text x="416.00" y="1358.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="413" y="1364" width="2" height="15" fill="rgb(214,55,31)"/><text x="416.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="413" y="1380" width="2" height="15" fill="rgb(231,15,52)"/><text x="416.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="413" y="1396" width="2" height="15" fill="rgb(213,54,51)"/><text x="416.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="413" y="1412" width="2" height="15" fill="rgb(244,141,32)"/><text x="416.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="413" y="1428" width="2" height="15" fill="rgb(205,34,14)"/><text x="416.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="413" y="1444" width="2" height="15" fill="rgb(219,58,7)"/><text x="416.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="413" y="1460" width="2" height="15" fill="rgb(213,92,16)"/><text x="416.00" y="1470.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/transform/__init__.py:21) (1 samples, 0.16%)</title><rect x="413" y="1476" width="2" height="15" fill="rgb(251,94,54)"/><text x="416.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="413" y="1492" width="2" height="15" fill="rgb(207,156,54)"/><text x="416.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="413" y="1508" width="2" height="15" fill="rgb(216,76,19)"/><text x="416.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="413" y="1524" width="2" height="15" fill="rgb(225,20,49)"/><text x="416.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="413" y="1540" width="2" height="15" fill="rgb(254,130,8)"/><text x="416.00" y="1550.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.16%)</title><rect x="413" y="1556" width="2" height="15" fill="rgb(237,20,43)"/><text x="416.00" y="1566.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.16%)</title><rect x="413" y="1572" width="2" height="15" fill="rgb(210,139,39)"/><text x="416.00" y="1582.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:4) (2 samples, 0.32%)</title><rect x="413" y="148" width="4" height="15" fill="rgb(244,75,27)"/><text x="416.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="413" y="164" width="4" height="15" fill="rgb(223,85,51)"/><text x="416.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.32%)</title><rect x="413" y="180" width="4" height="15" fill="rgb(210,4,24)"/><text x="416.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="413" y="196" width="4" height="15" fill="rgb(238,75,9)"/><text x="416.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="413" y="212" width="4" height="15" fill="rgb(230,208,45)"/><text x="416.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="413" y="228" width="4" height="15" fill="rgb(248,50,45)"/><text x="416.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="413" y="244" width="4" height="15" fill="rgb(243,29,3)"/><text x="416.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="413" y="260" width="4" height="15" fill="rgb(223,223,7)"/><text x="416.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="413" y="276" width="4" height="15" fill="rgb(207,7,16)"/><text x="416.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.32%)</title><rect x="413" y="292" width="4" height="15" fill="rgb(246,48,32)"/><text x="416.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="413" y="308" width="4" height="15" fill="rgb(242,83,47)"/><text x="416.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="413" y="324" width="4" height="15" fill="rgb(210,78,5)"/><text x="416.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="413" y="340" width="4" height="15" fill="rgb(227,181,23)"/><text x="416.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="413" y="356" width="4" height="15" fill="rgb(239,116,48)"/><text x="416.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="413" y="372" width="4" height="15" fill="rgb(237,207,47)"/><text x="416.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.32%)</title><rect x="413" y="388" width="4" height="15" fill="rgb(224,135,23)"/><text x="416.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="413" y="404" width="4" height="15" fill="rgb(230,130,42)"/><text x="416.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="413" y="420" width="4" height="15" fill="rgb(241,180,23)"/><text x="416.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="413" y="436" width="4" height="15" fill="rgb(221,39,10)"/><text x="416.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="413" y="452" width="4" height="15" fill="rgb(252,201,5)"/><text x="416.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="413" y="468" width="4" height="15" fill="rgb(234,203,16)"/><text x="416.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.32%)</title><rect x="413" y="484" width="4" height="15" fill="rgb(205,147,44)"/><text x="416.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="413" y="500" width="4" height="15" fill="rgb(247,78,24)"/><text x="416.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="413" y="516" width="4" height="15" fill="rgb(206,156,16)"/><text x="416.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="413" y="532" width="4" height="15" fill="rgb(221,139,35)"/><text x="416.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="413" y="548" width="4" height="15" fill="rgb(220,217,29)"/><text x="416.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="413" y="564" width="4" height="15" fill="rgb(219,227,20)"/><text x="416.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.32%)</title><rect x="413" y="580" width="4" height="15" fill="rgb(235,108,0)"/><text x="416.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="413" y="596" width="4" height="15" fill="rgb(235,27,16)"/><text x="416.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="413" y="612" width="4" height="15" fill="rgb(241,5,6)"/><text x="416.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="413" y="628" width="4" height="15" fill="rgb(235,203,14)"/><text x="416.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="413" y="644" width="4" height="15" fill="rgb(238,54,16)"/><text x="416.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="413" y="660" width="4" height="15" fill="rgb(249,193,14)"/><text x="416.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.32%)</title><rect x="413" y="676" width="4" height="15" fill="rgb(208,182,36)"/><text x="416.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="413" y="692" width="4" height="15" fill="rgb(205,75,50)"/><text x="416.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="413" y="708" width="4" height="15" fill="rgb(212,60,25)"/><text x="416.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="413" y="724" width="4" height="15" fill="rgb(206,93,3)"/><text x="416.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="413" y="740" width="4" height="15" fill="rgb(253,146,13)"/><text x="416.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="413" y="756" width="4" height="15" fill="rgb(219,45,18)"/><text x="416.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.32%)</title><rect x="413" y="772" width="4" height="15" fill="rgb(242,194,42)"/><text x="416.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.32%)</title><rect x="413" y="788" width="4" height="15" fill="rgb(245,90,42)"/><text x="416.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="413" y="804" width="4" height="15" fill="rgb(219,192,36)"/><text x="416.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="413" y="820" width="4" height="15" fill="rgb(208,121,26)"/><text x="416.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="413" y="836" width="4" height="15" fill="rgb(253,200,50)"/><text x="416.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="413" y="852" width="4" height="15" fill="rgb(217,15,29)"/><text x="416.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="413" y="868" width="4" height="15" fill="rgb(246,1,14)"/><text x="416.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="413" y="884" width="4" height="15" fill="rgb(242,137,26)"/><text x="416.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.16%)</title><rect x="415" y="900" width="2" height="15" fill="rgb(208,194,30)"/><text x="418.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="415" y="916" width="2" height="15" fill="rgb(249,114,44)"/><text x="418.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="415" y="932" width="2" height="15" fill="rgb(228,42,17)"/><text x="418.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="415" y="948" width="2" height="15" fill="rgb(250,146,46)"/><text x="418.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="415" y="964" width="2" height="15" fill="rgb(246,205,50)"/><text x="418.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="415" y="980" width="2" height="15" fill="rgb(253,66,51)"/><text x="418.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="415" y="996" width="2" height="15" fill="rgb(236,88,43)"/><text x="418.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="415" y="1012" width="2" height="15" fill="rgb(221,0,46)"/><text x="418.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1435) (1 samples, 0.16%)</title><rect x="415" y="1028" width="2" height="15" fill="rgb(249,78,18)"/><text x="418.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.16%)</title><rect x="415" y="1044" width="2" height="15" fill="rgb(232,38,42)"/><text x="418.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.16%)</title><rect x="415" y="1060" width="2" height="15" fill="rgb(234,151,51)"/><text x="418.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.16%)</title><rect x="415" y="1076" width="2" height="15" fill="rgb(212,173,52)"/><text x="418.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.16%)</title><rect x="415" y="1092" width="2" height="15" fill="rgb(218,121,3)"/><text x="418.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.16%)</title><rect x="417" y="484" width="2" height="15" fill="rgb(220,75,18)"/><text x="420.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="417" y="500" width="2" height="15" fill="rgb(226,152,46)"/><text x="420.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="417" y="516" width="2" height="15" fill="rgb(249,94,20)"/><text x="420.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="417" y="532" width="2" height="15" fill="rgb(217,229,22)"/><text x="420.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="417" y="548" width="2" height="15" fill="rgb(223,223,14)"/><text x="420.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="417" y="564" width="2" height="15" fill="rgb(241,60,29)"/><text x="420.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.16%)</title><rect x="417" y="580" width="2" height="15" fill="rgb(247,89,25)"/><text x="420.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="417" y="596" width="2" height="15" fill="rgb(254,60,40)"/><text x="420.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="417" y="612" width="2" height="15" fill="rgb(216,202,12)"/><text x="420.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="417" y="628" width="2" height="15" fill="rgb(254,113,28)"/><text x="420.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="417" y="644" width="2" height="15" fill="rgb(209,207,25)"/><text x="420.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="417" y="660" width="2" height="15" fill="rgb(235,167,17)"/><text x="420.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.16%)</title><rect x="417" y="676" width="2" height="15" fill="rgb(230,37,42)"/><text x="420.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="417" y="692" width="2" height="15" fill="rgb(233,43,47)"/><text x="420.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="417" y="708" width="2" height="15" fill="rgb(246,63,48)"/><text x="420.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="417" y="724" width="2" height="15" fill="rgb(208,77,0)"/><text x="420.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="417" y="740" width="2" height="15" fill="rgb(212,208,22)"/><text x="420.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="417" y="756" width="2" height="15" fill="rgb(234,40,40)"/><text x="420.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.16%)</title><rect x="417" y="772" width="2" height="15" fill="rgb(253,220,48)"/><text x="420.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="417" y="788" width="2" height="15" fill="rgb(211,45,1)"/><text x="420.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="417" y="804" width="2" height="15" fill="rgb(243,3,54)"/><text x="420.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="417" y="820" width="2" height="15" fill="rgb(227,155,31)"/><text x="420.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="417" y="836" width="2" height="15" fill="rgb(211,113,43)"/><text x="420.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="417" y="852" width="2" height="15" fill="rgb(237,216,27)"/><text x="420.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.16%)</title><rect x="417" y="868" width="2" height="15" fill="rgb(228,45,50)"/><text x="420.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="417" y="884" width="2" height="15" fill="rgb(229,48,29)"/><text x="420.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="417" y="900" width="2" height="15" fill="rgb(246,142,51)"/><text x="420.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="417" y="916" width="2" height="15" fill="rgb(229,137,37)"/><text x="420.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="417" y="932" width="2" height="15" fill="rgb(240,192,54)"/><text x="420.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="417" y="948" width="2" height="15" fill="rgb(230,214,46)"/><text x="420.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:11) (1 samples, 0.16%)</title><rect x="417" y="964" width="2" height="15" fill="rgb(233,141,6)"/><text x="420.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="417" y="980" width="2" height="15" fill="rgb(225,81,48)"/><text x="420.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="417" y="996" width="2" height="15" fill="rgb(209,164,22)"/><text x="420.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="417" y="1012" width="2" height="15" fill="rgb(228,212,0)"/><text x="420.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="417" y="1028" width="2" height="15" fill="rgb(254,84,35)"/><text x="420.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="417" y="1044" width="2" height="15" fill="rgb(234,189,28)"/><text x="420.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/exceptions.py:2) (1 samples, 0.16%)</title><rect x="417" y="1060" width="2" height="15" fill="rgb(241,100,6)"/><text x="420.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="417" y="1076" width="2" height="15" fill="rgb(249,77,49)"/><text x="420.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="417" y="1092" width="2" height="15" fill="rgb(241,184,25)"/><text x="420.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="417" y="1108" width="2" height="15" fill="rgb(252,187,36)"/><text x="420.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="417" y="1124" width="2" height="15" fill="rgb(243,11,12)"/><text x="420.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="417" y="1140" width="2" height="15" fill="rgb(206,213,40)"/><text x="420.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="417" y="1156" width="2" height="15" fill="rgb(252,75,22)"/><text x="420.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="417" y="1172" width="2" height="15" fill="rgb(253,104,28)"/><text x="420.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="417" y="1188" width="2" height="15" fill="rgb(250,56,0)"/><text x="420.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="417" y="1204" width="2" height="15" fill="rgb(253,168,3)"/><text x="420.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="417" y="1220" width="2" height="15" fill="rgb(215,209,25)"/><text x="420.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.16%)</title><rect x="417" y="1236" width="2" height="15" fill="rgb(246,68,51)"/><text x="420.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.16%)</title><rect x="417" y="1252" width="2" height="15" fill="rgb(230,106,2)"/><text x="420.00" y="1262.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.16%)</title><rect x="419" y="676" width="2" height="15" fill="rgb(225,8,29)"/><text x="422.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="419" y="692" width="2" height="15" fill="rgb(215,133,13)"/><text x="422.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="419" y="708" width="2" height="15" fill="rgb(213,72,12)"/><text x="422.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="419" y="724" width="2" height="15" fill="rgb(237,117,19)"/><text x="422.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="419" y="740" width="2" height="15" fill="rgb(228,80,34)"/><text x="422.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="419" y="756" width="2" height="15" fill="rgb(218,212,23)"/><text x="422.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:73) (1 samples, 0.16%)</title><rect x="419" y="772" width="2" height="15" fill="rgb(248,17,10)"/><text x="422.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="419" y="788" width="2" height="15" fill="rgb(207,113,29)"/><text x="422.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="419" y="804" width="2" height="15" fill="rgb(219,138,19)"/><text x="422.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="419" y="820" width="2" height="15" fill="rgb(246,33,12)"/><text x="422.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="419" y="836" width="2" height="15" fill="rgb(232,161,38)"/><text x="422.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="419" y="852" width="2" height="15" fill="rgb(232,110,13)"/><text x="422.00" y="862.50"></text></g><g><title>&lt;module&gt; (optparse.py:425) (1 samples, 0.16%)</title><rect x="419" y="868" width="2" height="15" fill="rgb(228,175,45)"/><text x="422.00" y="878.50"></text></g><g><title>gettext (gettext.py:625) (1 samples, 0.16%)</title><rect x="419" y="884" width="2" height="15" fill="rgb(232,118,22)"/><text x="422.00" y="894.50"></text></g><g><title>dgettext (gettext.py:588) (1 samples, 0.16%)</title><rect x="419" y="900" width="2" height="15" fill="rgb(205,7,18)"/><text x="422.00" y="910.50"></text></g><g><title>translation (gettext.py:518) (1 samples, 0.16%)</title><rect x="419" y="916" width="2" height="15" fill="rgb(207,45,2)"/><text x="422.00" y="926.50"></text></g><g><title>find (gettext.py:481) (1 samples, 0.16%)</title><rect x="419" y="932" width="2" height="15" fill="rgb(210,37,26)"/><text x="422.00" y="942.50"></text></g><g><title>get (_collections_abc.py:660) (1 samples, 0.16%)</title><rect x="419" y="948" width="2" height="15" fill="rgb(240,125,4)"/><text x="422.00" y="958.50"></text></g><g><title>__getitem__ (os.py:675) (1 samples, 0.16%)</title><rect x="419" y="964" width="2" height="15" fill="rgb(208,175,4)"/><text x="422.00" y="974.50"></text></g><g><title>encode (os.py:752) (1 samples, 0.16%)</title><rect x="419" y="980" width="2" height="15" fill="rgb(223,73,8)"/><text x="422.00" y="990.50"></text></g><g><title>_compile (sre_compile.py:140) (1 samples, 0.16%)</title><rect x="421" y="756" width="2" height="15" fill="rgb(225,87,26)"/><text x="424.00" y="766.50"></text></g><g><title>_simple (sre_compile.py:427) (1 samples, 0.16%)</title><rect x="421" y="772" width="2" height="15" fill="rgb(225,23,44)"/><text x="424.00" y="782.50"></text></g><g><title>__getitem__ (sre_parse.py:165) (1 samples, 0.16%)</title><rect x="421" y="788" width="2" height="15" fill="rgb(242,133,14)"/><text x="424.00" y="798.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (3 samples, 0.49%)</title><rect x="419" y="580" width="6" height="15" fill="rgb(241,90,43)"/><text x="422.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="419" y="596" width="6" height="15" fill="rgb(229,9,29)"/><text x="422.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="419" y="612" width="6" height="15" fill="rgb(253,23,21)"/><text x="422.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="419" y="628" width="6" height="15" fill="rgb(246,82,6)"/><text x="422.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="419" y="644" width="6" height="15" fill="rgb(227,52,53)"/><text x="422.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="419" y="660" width="6" height="15" fill="rgb(235,40,30)"/><text x="422.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:81) (2 samples, 0.32%)</title><rect x="421" y="676" width="4" height="15" fill="rgb(223,103,49)"/><text x="424.00" y="686.50"></text></g><g><title>compile (re.py:234) (2 samples, 0.32%)</title><rect x="421" y="692" width="4" height="15" fill="rgb(215,97,31)"/><text x="424.00" y="702.50"></text></g><g><title>_compile (re.py:286) (2 samples, 0.32%)</title><rect x="421" y="708" width="4" height="15" fill="rgb(212,10,13)"/><text x="424.00" y="718.50"></text></g><g><title>compile (sre_compile.py:768) (2 samples, 0.32%)</title><rect x="421" y="724" width="4" height="15" fill="rgb(237,135,37)"/><text x="424.00" y="734.50"></text></g><g><title>_code (sre_compile.py:607) (2 samples, 0.32%)</title><rect x="421" y="740" width="4" height="15" fill="rgb(228,29,39)"/><text x="424.00" y="750.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.16%)</title><rect x="423" y="756" width="2" height="15" fill="rgb(221,52,5)"/><text x="426.00" y="766.50"></text></g><g><title>_compile (sre_compile.py:90) (1 samples, 0.16%)</title><rect x="423" y="772" width="2" height="15" fill="rgb(207,217,27)"/><text x="426.00" y="782.50"></text></g><g><title>__getitem__ (sre_parse.py:165) (1 samples, 0.16%)</title><rect x="423" y="788" width="2" height="15" fill="rgb(244,168,34)"/><text x="426.00" y="798.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (5 samples, 0.81%)</title><rect x="417" y="244" width="9" height="15" fill="rgb(216,61,33)"/><text x="420.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.81%)</title><rect x="417" y="260" width="9" height="15" fill="rgb(234,11,20)"/><text x="420.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.81%)</title><rect x="417" y="276" width="9" height="15" fill="rgb(235,215,7)"/><text x="420.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.81%)</title><rect x="417" y="292" width="9" height="15" fill="rgb(234,49,14)"/><text x="420.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.81%)</title><rect x="417" y="308" width="9" height="15" fill="rgb(223,82,23)"/><text x="420.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.81%)</title><rect x="417" y="324" width="9" height="15" fill="rgb(206,96,54)"/><text x="420.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (5 samples, 0.81%)</title><rect x="417" y="340" width="9" height="15" fill="rgb(211,59,48)"/><text x="420.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.81%)</title><rect x="417" y="356" width="9" height="15" fill="rgb(217,178,43)"/><text x="420.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.81%)</title><rect x="417" y="372" width="9" height="15" fill="rgb(248,86,54)"/><text x="420.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.81%)</title><rect x="417" y="388" width="9" height="15" fill="rgb(243,29,8)"/><text x="420.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.81%)</title><rect x="417" y="404" width="9" height="15" fill="rgb(227,229,45)"/><text x="420.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.81%)</title><rect x="417" y="420" width="9" height="15" fill="rgb(215,194,9)"/><text x="420.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.81%)</title><rect x="417" y="436" width="9" height="15" fill="rgb(240,183,54)"/><text x="420.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.81%)</title><rect x="417" y="452" width="9" height="15" fill="rgb(232,58,35)"/><text x="420.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.81%)</title><rect x="417" y="468" width="9" height="15" fill="rgb(210,145,0)"/><text x="420.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (4 samples, 0.65%)</title><rect x="419" y="484" width="7" height="15" fill="rgb(247,213,22)"/><text x="422.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="419" y="500" width="7" height="15" fill="rgb(215,58,50)"/><text x="422.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="419" y="516" width="7" height="15" fill="rgb(231,3,52)"/><text x="422.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="419" y="532" width="7" height="15" fill="rgb(205,37,41)"/><text x="422.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="419" y="548" width="7" height="15" fill="rgb(239,42,26)"/><text x="422.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="419" y="564" width="7" height="15" fill="rgb(230,38,49)"/><text x="422.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.16%)</title><rect x="425" y="580" width="1" height="15" fill="rgb(219,182,19)"/><text x="428.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="425" y="596" width="1" height="15" fill="rgb(251,187,15)"/><text x="428.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="425" y="612" width="1" height="15" fill="rgb(246,129,23)"/><text x="428.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="425" y="628" width="1" height="15" fill="rgb(249,218,34)"/><text x="428.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="425" y="644" width="1" height="15" fill="rgb(251,60,37)"/><text x="428.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="425" y="660" width="1" height="15" fill="rgb(222,37,40)"/><text x="428.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="425" y="676" width="1" height="15" fill="rgb(238,146,2)"/><text x="428.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="425" y="692" width="1" height="15" fill="rgb(218,78,15)"/><text x="428.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="425" y="708" width="1" height="15" fill="rgb(220,136,52)"/><text x="428.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.16%)</title><rect x="425" y="724" width="1" height="15" fill="rgb(208,1,41)"/><text x="428.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="425" y="740" width="1" height="15" fill="rgb(247,142,50)"/><text x="428.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="425" y="756" width="1" height="15" fill="rgb(218,146,16)"/><text x="428.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="425" y="772" width="1" height="15" fill="rgb(220,0,37)"/><text x="428.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="425" y="788" width="1" height="15" fill="rgb(217,113,18)"/><text x="428.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="425" y="804" width="1" height="15" fill="rgb(237,107,42)"/><text x="428.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.16%)</title><rect x="425" y="820" width="1" height="15" fill="rgb(230,18,35)"/><text x="428.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="425" y="836" width="1" height="15" fill="rgb(217,66,31)"/><text x="428.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="425" y="852" width="1" height="15" fill="rgb(232,161,7)"/><text x="428.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="425" y="868" width="1" height="15" fill="rgb(248,136,5)"/><text x="428.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="425" y="884" width="1" height="15" fill="rgb(224,9,14)"/><text x="428.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="425" y="900" width="1" height="15" fill="rgb(243,31,46)"/><text x="428.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.16%)</title><rect x="425" y="916" width="1" height="15" fill="rgb(214,80,28)"/><text x="428.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="425" y="932" width="1" height="15" fill="rgb(237,36,29)"/><text x="428.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="425" y="948" width="1" height="15" fill="rgb(242,34,17)"/><text x="428.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="425" y="964" width="1" height="15" fill="rgb(253,117,40)"/><text x="428.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="425" y="980" width="1" height="15" fill="rgb(206,228,27)"/><text x="428.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="425" y="996" width="1" height="15" fill="rgb(214,25,26)"/><text x="428.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="425" y="1012" width="1" height="15" fill="rgb(245,179,40)"/><text x="428.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="425" y="1028" width="1" height="15" fill="rgb(241,182,6)"/><text x="428.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="425" y="1044" width="1" height="15" fill="rgb(233,117,19)"/><text x="428.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.16%)</title><rect x="425" y="1060" width="1" height="15" fill="rgb(229,155,40)"/><text x="428.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="425" y="1076" width="1" height="15" fill="rgb(229,54,4)"/><text x="428.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="425" y="1092" width="1" height="15" fill="rgb(220,25,48)"/><text x="428.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="425" y="1108" width="1" height="15" fill="rgb(253,27,27)"/><text x="428.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="425" y="1124" width="1" height="15" fill="rgb(210,40,3)"/><text x="428.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.16%)</title><rect x="425" y="1140" width="1" height="15" fill="rgb(230,75,40)"/><text x="428.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.16%)</title><rect x="425" y="1156" width="1" height="15" fill="rgb(214,55,3)"/><text x="428.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:13) (1 samples, 0.16%)</title><rect x="426" y="1492" width="2" height="15" fill="rgb(210,136,38)"/><text x="429.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="426" y="1508" width="2" height="15" fill="rgb(252,50,29)"/><text x="429.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="426" y="1524" width="2" height="15" fill="rgb(234,147,7)"/><text x="429.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="426" y="1540" width="2" height="15" fill="rgb(215,88,10)"/><text x="429.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="426" y="1556" width="2" height="15" fill="rgb(239,192,46)"/><text x="429.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="426" y="1572" width="2" height="15" fill="rgb(228,56,44)"/><text x="429.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="426" y="1588" width="2" height="15" fill="rgb(247,159,10)"/><text x="429.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="426" y="1604" width="2" height="15" fill="rgb(216,215,31)"/><text x="429.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/converter.py:6) (1 samples, 0.16%)</title><rect x="426" y="1620" width="2" height="15" fill="rgb(210,169,1)"/><text x="429.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="426" y="1636" width="2" height="15" fill="rgb(240,160,19)"/><text x="429.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="426" y="1652" width="2" height="15" fill="rgb(250,195,33)"/><text x="429.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="426" y="1668" width="2" height="15" fill="rgb(254,189,33)"/><text x="429.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="426" y="1684" width="2" height="15" fill="rgb(234,148,16)"/><text x="429.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="426" y="1700" width="2" height="15" fill="rgb(251,95,23)"/><text x="429.00" y="1710.50"></text></g><g><title>&lt;module&gt; (matplotlib/dates.py:159) (1 samples, 0.16%)</title><rect x="426" y="1716" width="2" height="15" fill="rgb(234,142,52)"/><text x="429.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="426" y="1732" width="2" height="15" fill="rgb(232,59,23)"/><text x="429.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="426" y="1748" width="2" height="15" fill="rgb(221,147,53)"/><text x="429.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="426" y="1764" width="2" height="15" fill="rgb(248,67,16)"/><text x="429.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="426" y="1780" width="2" height="15" fill="rgb(239,21,40)"/><text x="429.00" y="1790.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.16%)</title><rect x="426" y="1796" width="2" height="15" fill="rgb(244,35,23)"/><text x="429.00" y="1806.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.16%)</title><rect x="426" y="1812" width="2" height="15" fill="rgb(242,90,17)"/><text x="429.00" y="1822.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.32%)</title><rect x="426" y="532" width="4" height="15" fill="rgb(240,96,3)"/><text x="429.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="426" y="548" width="4" height="15" fill="rgb(209,77,43)"/><text x="429.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="426" y="564" width="4" height="15" fill="rgb(212,228,27)"/><text x="429.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="426" y="580" width="4" height="15" fill="rgb(242,155,17)"/><text x="429.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="426" y="596" width="4" height="15" fill="rgb(246,228,33)"/><text x="429.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="426" y="612" width="4" height="15" fill="rgb(209,16,49)"/><text x="429.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.32%)</title><rect x="426" y="628" width="4" height="15" fill="rgb(250,187,4)"/><text x="429.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="426" y="644" width="4" height="15" fill="rgb(224,163,20)"/><text x="429.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="426" y="660" width="4" height="15" fill="rgb(243,136,17)"/><text x="429.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="426" y="676" width="4" height="15" fill="rgb(210,214,29)"/><text x="429.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="426" y="692" width="4" height="15" fill="rgb(225,28,33)"/><text x="429.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="426" y="708" width="4" height="15" fill="rgb(224,71,40)"/><text x="429.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.32%)</title><rect x="426" y="724" width="4" height="15" fill="rgb(243,169,26)"/><text x="429.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="426" y="740" width="4" height="15" fill="rgb(232,81,25)"/><text x="429.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="426" y="756" width="4" height="15" fill="rgb(245,27,53)"/><text x="429.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="426" y="772" width="4" height="15" fill="rgb(235,147,41)"/><text x="429.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="426" y="788" width="4" height="15" fill="rgb(214,28,22)"/><text x="429.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="426" y="804" width="4" height="15" fill="rgb(218,215,37)"/><text x="429.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.32%)</title><rect x="426" y="820" width="4" height="15" fill="rgb(232,175,24)"/><text x="429.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="426" y="836" width="4" height="15" fill="rgb(254,215,33)"/><text x="429.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="426" y="852" width="4" height="15" fill="rgb(244,187,30)"/><text x="429.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="426" y="868" width="4" height="15" fill="rgb(249,14,10)"/><text x="429.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="426" y="884" width="4" height="15" fill="rgb(232,137,45)"/><text x="429.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="426" y="900" width="4" height="15" fill="rgb(228,163,50)"/><text x="429.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.32%)</title><rect x="426" y="916" width="4" height="15" fill="rgb(221,12,28)"/><text x="429.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="426" y="932" width="4" height="15" fill="rgb(251,165,35)"/><text x="429.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="426" y="948" width="4" height="15" fill="rgb(249,115,51)"/><text x="429.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="426" y="964" width="4" height="15" fill="rgb(236,78,41)"/><text x="429.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="426" y="980" width="4" height="15" fill="rgb(252,4,33)"/><text x="429.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="426" y="996" width="4" height="15" fill="rgb(227,152,40)"/><text x="429.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.32%)</title><rect x="426" y="1012" width="4" height="15" fill="rgb(237,151,46)"/><text x="429.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="426" y="1028" width="4" height="15" fill="rgb(251,199,21)"/><text x="429.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="426" y="1044" width="4" height="15" fill="rgb(241,36,16)"/><text x="429.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="426" y="1060" width="4" height="15" fill="rgb(219,58,26)"/><text x="429.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="426" y="1076" width="4" height="15" fill="rgb(208,105,15)"/><text x="429.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="426" y="1092" width="4" height="15" fill="rgb(205,91,26)"/><text x="429.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.32%)</title><rect x="426" y="1108" width="4" height="15" fill="rgb(252,109,12)"/><text x="429.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="426" y="1124" width="4" height="15" fill="rgb(243,199,39)"/><text x="429.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="426" y="1140" width="4" height="15" fill="rgb(234,87,22)"/><text x="429.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="426" y="1156" width="4" height="15" fill="rgb(245,140,13)"/><text x="429.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="426" y="1172" width="4" height="15" fill="rgb(218,220,17)"/><text x="429.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="426" y="1188" width="4" height="15" fill="rgb(241,117,21)"/><text x="429.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.32%)</title><rect x="426" y="1204" width="4" height="15" fill="rgb(245,63,41)"/><text x="429.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="426" y="1220" width="4" height="15" fill="rgb(227,30,53)"/><text x="429.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="426" y="1236" width="4" height="15" fill="rgb(209,220,1)"/><text x="429.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="426" y="1252" width="4" height="15" fill="rgb(245,42,24)"/><text x="429.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="426" y="1268" width="4" height="15" fill="rgb(241,222,33)"/><text x="429.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="426" y="1284" width="4" height="15" fill="rgb(228,205,20)"/><text x="429.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.32%)</title><rect x="426" y="1300" width="4" height="15" fill="rgb(207,73,10)"/><text x="429.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="426" y="1316" width="4" height="15" fill="rgb(250,10,54)"/><text x="429.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="426" y="1332" width="4" height="15" fill="rgb(242,51,12)"/><text x="429.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="426" y="1348" width="4" height="15" fill="rgb(231,155,18)"/><text x="429.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="426" y="1364" width="4" height="15" fill="rgb(210,66,1)"/><text x="429.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="426" y="1380" width="4" height="15" fill="rgb(210,43,34)"/><text x="429.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.32%)</title><rect x="426" y="1396" width="4" height="15" fill="rgb(212,80,3)"/><text x="429.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="426" y="1412" width="4" height="15" fill="rgb(249,193,51)"/><text x="429.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="426" y="1428" width="4" height="15" fill="rgb(205,198,37)"/><text x="429.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="426" y="1444" width="4" height="15" fill="rgb(211,181,37)"/><text x="429.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="426" y="1460" width="4" height="15" fill="rgb(240,52,35)"/><text x="429.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="426" y="1476" width="4" height="15" fill="rgb(219,161,44)"/><text x="429.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.16%)</title><rect x="428" y="1492" width="2" height="15" fill="rgb(229,155,12)"/><text x="431.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="428" y="1508" width="2" height="15" fill="rgb(223,72,15)"/><text x="431.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="428" y="1524" width="2" height="15" fill="rgb(239,152,17)"/><text x="431.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="428" y="1540" width="2" height="15" fill="rgb(221,199,49)"/><text x="431.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="428" y="1556" width="2" height="15" fill="rgb(244,171,49)"/><text x="431.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="428" y="1572" width="2" height="15" fill="rgb(238,176,9)"/><text x="431.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.16%)</title><rect x="428" y="1588" width="2" height="15" fill="rgb(214,160,8)"/><text x="431.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="428" y="1604" width="2" height="15" fill="rgb(228,155,16)"/><text x="431.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="428" y="1620" width="2" height="15" fill="rgb(215,6,53)"/><text x="431.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="428" y="1636" width="2" height="15" fill="rgb(235,202,14)"/><text x="431.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="428" y="1652" width="2" height="15" fill="rgb(215,25,40)"/><text x="431.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="428" y="1668" width="2" height="15" fill="rgb(212,92,14)"/><text x="431.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.16%)</title><rect x="428" y="1684" width="2" height="15" fill="rgb(239,214,43)"/><text x="431.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="428" y="1700" width="2" height="15" fill="rgb(207,226,6)"/><text x="431.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="428" y="1716" width="2" height="15" fill="rgb(252,9,27)"/><text x="431.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="428" y="1732" width="2" height="15" fill="rgb(218,77,10)"/><text x="431.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="428" y="1748" width="2" height="15" fill="rgb(251,50,2)"/><text x="431.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="428" y="1764" width="2" height="15" fill="rgb(210,160,16)"/><text x="431.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:656) (1 samples, 0.16%)</title><rect x="428" y="1780" width="2" height="15" fill="rgb(227,36,17)"/><text x="431.00" y="1790.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.16%)</title><rect x="428" y="1796" width="2" height="15" fill="rgb(236,60,38)"/><text x="431.00" y="1806.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1366) (1 samples, 0.16%)</title><rect x="428" y="1812" width="2" height="15" fill="rgb(251,218,15)"/><text x="431.00" y="1822.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py:1283) (1 samples, 0.16%)</title><rect x="428" y="1828" width="2" height="15" fill="rgb(205,179,26)"/><text x="431.00" y="1838.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.49%)</title><rect x="426" y="436" width="6" height="15" fill="rgb(224,161,31)"/><text x="429.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="426" y="452" width="6" height="15" fill="rgb(252,32,14)"/><text x="429.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="426" y="468" width="6" height="15" fill="rgb(248,1,52)"/><text x="429.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="426" y="484" width="6" height="15" fill="rgb(209,228,40)"/><text x="429.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="426" y="500" width="6" height="15" fill="rgb(251,61,11)"/><text x="429.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="426" y="516" width="6" height="15" fill="rgb(225,70,20)"/><text x="429.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:20) (1 samples, 0.16%)</title><rect x="430" y="532" width="2" height="15" fill="rgb(229,58,2)"/><text x="433.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="430" y="548" width="2" height="15" fill="rgb(221,91,5)"/><text x="433.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="430" y="564" width="2" height="15" fill="rgb(235,110,4)"/><text x="433.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="430" y="580" width="2" height="15" fill="rgb(228,40,2)"/><text x="433.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="430" y="596" width="2" height="15" fill="rgb(208,149,6)"/><text x="433.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="430" y="612" width="2" height="15" fill="rgb(208,144,32)"/><text x="433.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py:10) (1 samples, 0.16%)</title><rect x="430" y="628" width="2" height="15" fill="rgb(215,203,7)"/><text x="433.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="430" y="644" width="2" height="15" fill="rgb(227,0,11)"/><text x="433.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="430" y="660" width="2" height="15" fill="rgb(245,215,5)"/><text x="433.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="430" y="676" width="2" height="15" fill="rgb(210,171,29)"/><text x="433.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="430" y="692" width="2" height="15" fill="rgb(223,151,30)"/><text x="433.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="430" y="708" width="2" height="15" fill="rgb(240,52,17)"/><text x="433.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="430" y="724" width="2" height="15" fill="rgb(205,161,34)"/><text x="433.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="430" y="740" width="2" height="15" fill="rgb(251,189,49)"/><text x="433.00" y="750.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py:15) (1 samples, 0.16%)</title><rect x="430" y="756" width="2" height="15" fill="rgb(252,72,44)"/><text x="433.00" y="766.50"></text></g><g><title>system (platform.py:1068) (1 samples, 0.16%)</title><rect x="430" y="772" width="2" height="15" fill="rgb(209,215,22)"/><text x="433.00" y="782.50"></text></g><g><title>uname (platform.py:1034) (1 samples, 0.16%)</title><rect x="430" y="788" width="2" height="15" fill="rgb(232,53,40)"/><text x="433.00" y="798.50"></text></g><g><title>_syscmd_uname (platform.py:788) (1 samples, 0.16%)</title><rect x="430" y="804" width="2" height="15" fill="rgb(205,28,9)"/><text x="433.00" y="814.50"></text></g><g><title>popen (os.py:989) (1 samples, 0.16%)</title><rect x="430" y="820" width="2" height="15" fill="rgb(233,170,48)"/><text x="433.00" y="830.50"></text></g><g><title>__init__ (subprocess.py:775) (1 samples, 0.16%)</title><rect x="430" y="836" width="2" height="15" fill="rgb(226,113,11)"/><text x="433.00" y="846.50"></text></g><g><title>_execute_child (subprocess.py:1453) (1 samples, 0.16%)</title><rect x="430" y="852" width="2" height="15" fill="rgb(246,71,20)"/><text x="433.00" y="862.50"></text></g><g><title>0x7ff08a358372 (?) (1 samples, 0.16%)</title><rect x="430" y="868" width="2" height="15" fill="rgb(226,29,38)"/><text x="433.00" y="878.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.16%)</title><rect x="430" y="884" width="2" height="15" fill="rgb(223,35,31)"/><text x="433.00" y="894.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.16%)</title><rect x="432" y="1396" width="2" height="15" fill="rgb(219,222,14)"/><text x="435.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.16%)</title><rect x="432" y="1412" width="2" height="15" fill="rgb(247,143,51)"/><text x="435.00" y="1422.50"></text></g><g><title>_compile (re.py:274) (1 samples, 0.16%)</title><rect x="432" y="1428" width="2" height="15" fill="rgb(246,166,24)"/><text x="435.00" y="1438.50"></text></g><g><title>__get__ (types.py:165) (1 samples, 0.16%)</title><rect x="432" y="1444" width="2" height="15" fill="rgb(246,211,45)"/><text x="435.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.32%)</title><rect x="432" y="1108" width="4" height="15" fill="rgb(227,5,42)"/><text x="435.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="432" y="1124" width="4" height="15" fill="rgb(229,115,47)"/><text x="435.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="432" y="1140" width="4" height="15" fill="rgb(253,39,19)"/><text x="435.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="432" y="1156" width="4" height="15" fill="rgb(208,197,19)"/><text x="435.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="432" y="1172" width="4" height="15" fill="rgb(232,54,18)"/><text x="435.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="432" y="1188" width="4" height="15" fill="rgb(212,184,50)"/><text x="435.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.32%)</title><rect x="432" y="1204" width="4" height="15" fill="rgb(226,216,23)"/><text x="435.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="432" y="1220" width="4" height="15" fill="rgb(248,158,44)"/><text x="435.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="432" y="1236" width="4" height="15" fill="rgb(208,189,31)"/><text x="435.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="432" y="1252" width="4" height="15" fill="rgb(245,74,4)"/><text x="435.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="432" y="1268" width="4" height="15" fill="rgb(236,175,24)"/><text x="435.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="432" y="1284" width="4" height="15" fill="rgb(207,106,31)"/><text x="435.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.32%)</title><rect x="432" y="1300" width="4" height="15" fill="rgb(226,200,28)"/><text x="435.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.32%)</title><rect x="432" y="1316" width="4" height="15" fill="rgb(245,205,2)"/><text x="435.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.32%)</title><rect x="432" y="1332" width="4" height="15" fill="rgb(216,42,23)"/><text x="435.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 0.32%)</title><rect x="432" y="1348" width="4" height="15" fill="rgb(239,5,40)"/><text x="435.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (2 samples, 0.32%)</title><rect x="432" y="1364" width="4" height="15" fill="rgb(240,155,8)"/><text x="435.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (2 samples, 0.32%)</title><rect x="432" y="1380" width="4" height="15" fill="rgb(253,83,0)"/><text x="435.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.16%)</title><rect x="434" y="1396" width="2" height="15" fill="rgb(241,159,0)"/><text x="437.00" y="1406.50"></text></g><g><title>0x7ff095cd7f5b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="434" y="1412" width="2" height="15" fill="rgb(231,193,14)"/><text x="437.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.16%)</title><rect x="436" y="1460" width="2" height="15" fill="rgb(241,2,54)"/><text x="439.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.16%)</title><rect x="436" y="1476" width="2" height="15" fill="rgb(253,227,14)"/><text x="439.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.16%)</title><rect x="436" y="1492" width="2" height="15" fill="rgb(223,111,21)"/><text x="439.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.16%)</title><rect x="436" y="1508" width="2" height="15" fill="rgb(206,166,28)"/><text x="439.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.16%)</title><rect x="436" y="1524" width="2" height="15" fill="rgb(205,88,44)"/><text x="439.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.16%)</title><rect x="436" y="1540" width="2" height="15" fill="rgb(236,176,35)"/><text x="439.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.16%)</title><rect x="436" y="1556" width="2" height="15" fill="rgb(233,65,54)"/><text x="439.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:80) (1 samples, 0.16%)</title><rect x="436" y="1572" width="2" height="15" fill="rgb(234,93,18)"/><text x="439.00" y="1582.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:4) (24 samples, 3.89%)</title><rect x="394" y="52" width="46" height="15" fill="rgb(220,192,15)"/><text x="397.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (24 samples, 3.89%)</title><rect x="394" y="68" width="46" height="15" fill="rgb(230,178,51)"/><text x="397.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (24 samples, 3.89%)</title><rect x="394" y="84" width="46" height="15" fill="rgb(242,38,50)"/><text x="397.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (24 samples, 3.89%)</title><rect x="394" y="100" width="46" height="15" fill="rgb(241,51,10)"/><text x="397.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (24 samples, 3.89%)</title><rect x="394" y="116" width="46" height="15" fill="rgb(252,130,51)"/><text x="397.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (24 samples, 3.89%)</title><rect x="394" y="132" width="46" height="15" fill="rgb(221,141,47)"/><text x="397.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:7) (12 samples, 1.94%)</title><rect x="417" y="148" width="23" height="15" fill="rgb(246,111,30)"/><text x="420.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 1.94%)</title><rect x="417" y="164" width="23" height="15" fill="rgb(218,169,49)"/><text x="420.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 1.94%)</title><rect x="417" y="180" width="23" height="15" fill="rgb(222,38,47)"/><text x="420.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 1.94%)</title><rect x="417" y="196" width="23" height="15" fill="rgb(252,138,15)"/><text x="420.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 1.94%)</title><rect x="417" y="212" width="23" height="15" fill="rgb(214,210,9)"/><text x="420.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 1.94%)</title><rect x="417" y="228" width="23" height="15" fill="rgb(242,219,6)"/><text x="420.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 1.13%)</title><rect x="426" y="244" width="14" height="15" fill="rgb(239,200,18)"/><text x="429.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.13%)</title><rect x="426" y="260" width="14" height="15" fill="rgb(247,66,13)"/><text x="429.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.13%)</title><rect x="426" y="276" width="14" height="15" fill="rgb(250,165,35)"/><text x="429.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.13%)</title><rect x="426" y="292" width="14" height="15" fill="rgb(230,183,14)"/><text x="429.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.13%)</title><rect x="426" y="308" width="14" height="15" fill="rgb(253,26,18)"/><text x="429.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.13%)</title><rect x="426" y="324" width="14" height="15" fill="rgb(253,201,25)"/><text x="429.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 1.13%)</title><rect x="426" y="340" width="14" height="15" fill="rgb(209,207,39)"/><text x="429.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.13%)</title><rect x="426" y="356" width="14" height="15" fill="rgb(214,7,36)"/><text x="429.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.13%)</title><rect x="426" y="372" width="14" height="15" fill="rgb(243,42,48)"/><text x="429.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.13%)</title><rect x="426" y="388" width="14" height="15" fill="rgb(221,112,49)"/><text x="429.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.13%)</title><rect x="426" y="404" width="14" height="15" fill="rgb(216,49,25)"/><text x="429.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.13%)</title><rect x="426" y="420" width="14" height="15" fill="rgb(239,146,33)"/><text x="429.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.65%)</title><rect x="432" y="436" width="8" height="15" fill="rgb(254,106,19)"/><text x="435.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="432" y="452" width="8" height="15" fill="rgb(225,91,16)"/><text x="435.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.65%)</title><rect x="432" y="468" width="8" height="15" fill="rgb(227,1,53)"/><text x="435.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="432" y="484" width="8" height="15" fill="rgb(252,224,40)"/><text x="435.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="432" y="500" width="8" height="15" fill="rgb(226,120,39)"/><text x="435.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="432" y="516" width="8" height="15" fill="rgb(235,57,22)"/><text x="435.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="432" y="532" width="8" height="15" fill="rgb(219,114,54)"/><text x="435.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="432" y="548" width="8" height="15" fill="rgb(240,208,26)"/><text x="435.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="432" y="564" width="8" height="15" fill="rgb(231,63,4)"/><text x="435.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.65%)</title><rect x="432" y="580" width="8" height="15" fill="rgb(222,14,36)"/><text x="435.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="432" y="596" width="8" height="15" fill="rgb(205,142,43)"/><text x="435.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="432" y="612" width="8" height="15" fill="rgb(248,79,28)"/><text x="435.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="432" y="628" width="8" height="15" fill="rgb(234,155,39)"/><text x="435.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="432" y="644" width="8" height="15" fill="rgb(228,139,53)"/><text x="435.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="432" y="660" width="8" height="15" fill="rgb(221,219,54)"/><text x="435.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.65%)</title><rect x="432" y="676" width="8" height="15" fill="rgb(212,30,19)"/><text x="435.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="432" y="692" width="8" height="15" fill="rgb(232,148,31)"/><text x="435.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="432" y="708" width="8" height="15" fill="rgb(228,208,34)"/><text x="435.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="432" y="724" width="8" height="15" fill="rgb(209,87,9)"/><text x="435.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="432" y="740" width="8" height="15" fill="rgb(226,76,26)"/><text x="435.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="432" y="756" width="8" height="15" fill="rgb(236,62,9)"/><text x="435.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.65%)</title><rect x="432" y="772" width="8" height="15" fill="rgb(221,209,25)"/><text x="435.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="432" y="788" width="8" height="15" fill="rgb(238,49,6)"/><text x="435.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="432" y="804" width="8" height="15" fill="rgb(249,29,46)"/><text x="435.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="432" y="820" width="8" height="15" fill="rgb(223,131,34)"/><text x="435.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="432" y="836" width="8" height="15" fill="rgb(223,55,48)"/><text x="435.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="432" y="852" width="8" height="15" fill="rgb(214,134,42)"/><text x="435.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.65%)</title><rect x="432" y="868" width="8" height="15" fill="rgb(228,116,41)"/><text x="435.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="432" y="884" width="8" height="15" fill="rgb(227,57,31)"/><text x="435.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.65%)</title><rect x="432" y="900" width="8" height="15" fill="rgb(246,110,32)"/><text x="435.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="432" y="916" width="8" height="15" fill="rgb(224,148,29)"/><text x="435.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="432" y="932" width="8" height="15" fill="rgb(231,142,8)"/><text x="435.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="432" y="948" width="8" height="15" fill="rgb(223,203,4)"/><text x="435.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="432" y="964" width="8" height="15" fill="rgb(224,110,45)"/><text x="435.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="432" y="980" width="8" height="15" fill="rgb(242,141,49)"/><text x="435.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="432" y="996" width="8" height="15" fill="rgb(218,10,23)"/><text x="435.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.65%)</title><rect x="432" y="1012" width="8" height="15" fill="rgb(248,210,43)"/><text x="435.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="432" y="1028" width="8" height="15" fill="rgb(233,225,19)"/><text x="435.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="432" y="1044" width="8" height="15" fill="rgb(253,56,48)"/><text x="435.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="432" y="1060" width="8" height="15" fill="rgb(216,216,13)"/><text x="435.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="432" y="1076" width="8" height="15" fill="rgb(250,114,0)"/><text x="435.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="432" y="1092" width="8" height="15" fill="rgb(238,209,51)"/><text x="435.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.32%)</title><rect x="436" y="1108" width="4" height="15" fill="rgb(223,184,14)"/><text x="439.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.32%)</title><rect x="436" y="1124" width="4" height="15" fill="rgb(238,73,46)"/><text x="439.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="436" y="1140" width="4" height="15" fill="rgb(230,82,6)"/><text x="439.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="436" y="1156" width="4" height="15" fill="rgb(205,192,35)"/><text x="439.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="436" y="1172" width="4" height="15" fill="rgb(207,120,39)"/><text x="439.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="436" y="1188" width="4" height="15" fill="rgb(213,228,49)"/><text x="439.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="436" y="1204" width="4" height="15" fill="rgb(244,186,50)"/><text x="439.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="436" y="1220" width="4" height="15" fill="rgb(217,75,5)"/><text x="439.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.32%)</title><rect x="436" y="1236" width="4" height="15" fill="rgb(214,90,29)"/><text x="439.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.32%)</title><rect x="436" y="1252" width="4" height="15" fill="rgb(218,186,19)"/><text x="439.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="436" y="1268" width="4" height="15" fill="rgb(228,81,52)"/><text x="439.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="436" y="1284" width="4" height="15" fill="rgb(226,191,51)"/><text x="439.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="436" y="1300" width="4" height="15" fill="rgb(221,137,33)"/><text x="439.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="436" y="1316" width="4" height="15" fill="rgb(228,19,40)"/><text x="439.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="436" y="1332" width="4" height="15" fill="rgb(237,45,13)"/><text x="439.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="436" y="1348" width="4" height="15" fill="rgb(211,96,0)"/><text x="439.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.32%)</title><rect x="436" y="1364" width="4" height="15" fill="rgb(234,166,43)"/><text x="439.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="436" y="1380" width="4" height="15" fill="rgb(205,59,44)"/><text x="439.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="436" y="1396" width="4" height="15" fill="rgb(234,68,37)"/><text x="439.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="436" y="1412" width="4" height="15" fill="rgb(234,113,1)"/><text x="439.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="436" y="1428" width="4" height="15" fill="rgb(241,122,8)"/><text x="439.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="436" y="1444" width="4" height="15" fill="rgb(249,94,18)"/><text x="439.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.16%)</title><rect x="438" y="1460" width="2" height="15" fill="rgb(224,180,25)"/><text x="441.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="438" y="1476" width="2" height="15" fill="rgb(219,106,20)"/><text x="441.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="438" y="1492" width="2" height="15" fill="rgb(233,207,41)"/><text x="441.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="438" y="1508" width="2" height="15" fill="rgb(233,33,43)"/><text x="441.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="438" y="1524" width="2" height="15" fill="rgb(238,112,38)"/><text x="441.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="438" y="1540" width="2" height="15" fill="rgb(224,193,11)"/><text x="441.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.16%)</title><rect x="438" y="1556" width="2" height="15" fill="rgb(243,24,17)"/><text x="441.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.16%)</title><rect x="438" y="1572" width="2" height="15" fill="rgb(224,57,20)"/><text x="441.00" y="1582.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.16%)</title><rect x="438" y="1588" width="2" height="15" fill="rgb(227,119,17)"/><text x="441.00" y="1598.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.16%)</title><rect x="438" y="1604" width="2" height="15" fill="rgb(210,182,43)"/><text x="441.00" y="1614.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.16%)</title><rect x="438" y="1620" width="2" height="15" fill="rgb(209,95,50)"/><text x="441.00" y="1630.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.49%)</title><rect x="440" y="276" width="6" height="15" fill="rgb(232,139,50)"/><text x="443.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 0.49%)</title><rect x="440" y="292" width="6" height="15" fill="rgb(244,78,45)"/><text x="443.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 0.49%)</title><rect x="440" y="308" width="6" height="15" fill="rgb(243,112,19)"/><text x="443.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (3 samples, 0.49%)</title><rect x="440" y="324" width="6" height="15" fill="rgb(237,51,7)"/><text x="443.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (3 samples, 0.49%)</title><rect x="440" y="340" width="6" height="15" fill="rgb(230,9,36)"/><text x="443.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.49%)</title><rect x="440" y="356" width="6" height="15" fill="rgb(243,88,44)"/><text x="443.00" y="366.50"></text></g><g><title>sgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.49%)</title><rect x="440" y="372" width="6" height="15" fill="rgb(245,8,29)"/><text x="443.00" y="382.50"></text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.49%)</title><rect x="440" y="388" width="6" height="15" fill="rgb(248,52,25)"/><text x="443.00" y="398.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.49%)</title><rect x="440" y="404" width="6" height="15" fill="rgb(233,138,15)"/><text x="443.00" y="414.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.49%)</title><rect x="440" y="420" width="6" height="15" fill="rgb(207,219,12)"/><text x="443.00" y="430.50"></text></g><g><title>sched_yield (libc-2.29.so) (3 samples, 0.49%)</title><rect x="440" y="436" width="6" height="15" fill="rgb(212,104,1)"/><text x="443.00" y="446.50"></text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:18) (4 samples, 0.65%)</title><rect x="440" y="100" width="7" height="15" fill="rgb(243,63,51)"/><text x="443.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.65%)</title><rect x="440" y="116" width="7" height="15" fill="rgb(207,38,10)"/><text x="443.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (4 samples, 0.65%)</title><rect x="440" y="132" width="7" height="15" fill="rgb(208,105,26)"/><text x="443.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (4 samples, 0.65%)</title><rect x="440" y="148" width="7" height="15" fill="rgb(228,159,11)"/><text x="443.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (4 samples, 0.65%)</title><rect x="440" y="164" width="7" height="15" fill="rgb(231,61,32)"/><text x="443.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (4 samples, 0.65%)</title><rect x="440" y="180" width="7" height="15" fill="rgb(217,93,34)"/><text x="443.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (4 samples, 0.65%)</title><rect x="440" y="196" width="7" height="15" fill="rgb(226,200,6)"/><text x="443.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (4 samples, 0.65%)</title><rect x="440" y="212" width="7" height="15" fill="rgb(212,28,35)"/><text x="443.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (4 samples, 0.65%)</title><rect x="440" y="228" width="7" height="15" fill="rgb(229,74,27)"/><text x="443.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (4 samples, 0.65%)</title><rect x="440" y="244" width="7" height="15" fill="rgb(223,126,20)"/><text x="443.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (4 samples, 0.65%)</title><rect x="440" y="260" width="7" height="15" fill="rgb(208,227,17)"/><text x="443.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="446" y="276" width="1" height="15" fill="rgb(254,87,30)"/><text x="449.00" y="286.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.16%)</title><rect x="447" y="164" width="2" height="15" fill="rgb(248,36,47)"/><text x="450.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:124) (1 samples, 0.16%)</title><rect x="455" y="180" width="2" height="15" fill="rgb(245,92,18)"/><text x="458.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (6 samples, 0.97%)</title><rect x="457" y="180" width="11" height="15" fill="rgb(205,214,47)"/><text x="460.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.16%)</title><rect x="467" y="196" width="1" height="15" fill="rgb(244,179,37)"/><text x="470.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (1 samples, 0.16%)</title><rect x="474" y="212" width="2" height="15" fill="rgb(231,128,9)"/><text x="477.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.16%)</title><rect x="474" y="228" width="2" height="15" fill="rgb(224,100,11)"/><text x="477.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (1 samples, 0.16%)</title><rect x="474" y="244" width="2" height="15" fill="rgb(217,74,22)"/><text x="477.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:191) (1 samples, 0.16%)</title><rect x="474" y="260" width="2" height="15" fill="rgb(246,28,49)"/><text x="477.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1703) (1 samples, 0.16%)</title><rect x="476" y="276" width="2" height="15" fill="rgb(217,23,17)"/><text x="479.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (3 samples, 0.49%)</title><rect x="478" y="324" width="6" height="15" fill="rgb(216,107,15)"/><text x="481.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (2 samples, 0.32%)</title><rect x="484" y="340" width="4" height="15" fill="rgb(218,13,48)"/><text x="487.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (1 samples, 0.16%)</title><rect x="488" y="340" width="2" height="15" fill="rgb(237,138,30)"/><text x="491.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (5 samples, 0.81%)</title><rect x="484" y="324" width="9" height="15" fill="rgb(205,200,18)"/><text x="487.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (2 samples, 0.32%)</title><rect x="490" y="340" width="3" height="15" fill="rgb(235,216,1)"/><text x="493.00" y="350.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (9 samples, 1.46%)</title><rect x="478" y="276" width="17" height="15" fill="rgb(218,208,46)"/><text x="481.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (9 samples, 1.46%)</title><rect x="478" y="292" width="17" height="15" fill="rgb(232,218,31)"/><text x="481.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (9 samples, 1.46%)</title><rect x="478" y="308" width="17" height="15" fill="rgb(229,194,9)"/><text x="481.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (1 samples, 0.16%)</title><rect x="493" y="324" width="2" height="15" fill="rgb(208,23,51)"/><text x="496.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1372) (1 samples, 0.16%)</title><rect x="493" y="340" width="2" height="15" fill="rgb(207,202,38)"/><text x="496.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c:1056) (1 samples, 0.16%)</title><rect x="493" y="356" width="2" height="15" fill="rgb(237,133,19)"/><text x="496.00" y="366.50"></text></g><g><title>discover_dimensions (ctors.c:883) (2 samples, 0.32%)</title><rect x="495" y="292" width="4" height="15" fill="rgb(231,164,1)"/><text x="498.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:693) (1 samples, 0.16%)</title><rect x="499" y="308" width="2" height="15" fill="rgb(253,208,25)"/><text x="502.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (14 samples, 2.27%)</title><rect x="476" y="260" width="27" height="15" fill="rgb(211,149,20)"/><text x="479.00" y="270.50">P..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (4 samples, 0.65%)</title><rect x="495" y="276" width="8" height="15" fill="rgb(237,112,1)"/><text x="498.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:884) (2 samples, 0.32%)</title><rect x="499" y="292" width="4" height="15" fill="rgb(236,70,51)"/><text x="502.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:699) (1 samples, 0.16%)</title><rect x="501" y="308" width="2" height="15" fill="rgb(245,6,51)"/><text x="504.00" y="318.50"></text></g><g><title>0x7ff094efa3f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="501" y="324" width="2" height="15" fill="rgb(246,17,16)"/><text x="504.00" y="334.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (1 samples, 0.16%)</title><rect x="503" y="292" width="2" height="15" fill="rgb(230,183,32)"/><text x="506.00" y="302.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (1 samples, 0.16%)</title><rect x="505" y="340" width="2" height="15" fill="rgb(212,190,11)"/><text x="508.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (2 samples, 0.32%)</title><rect x="505" y="324" width="4" height="15" fill="rgb(209,25,16)"/><text x="508.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (1 samples, 0.16%)</title><rect x="507" y="340" width="2" height="15" fill="rgb(232,179,11)"/><text x="510.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1539) (18 samples, 2.92%)</title><rect x="476" y="228" width="35" height="15" fill="rgb(215,225,11)"/><text x="479.00" y="238.50">ar..</text></g><g><title>prepare_index (mapping.c:516) (18 samples, 2.92%)</title><rect x="476" y="244" width="35" height="15" fill="rgb(223,23,38)"/><text x="479.00" y="254.50">pr..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (4 samples, 0.65%)</title><rect x="503" y="260" width="8" height="15" fill="rgb(253,128,48)"/><text x="506.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (4 samples, 0.65%)</title><rect x="503" y="276" width="8" height="15" fill="rgb(238,222,50)"/><text x="506.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (3 samples, 0.49%)</title><rect x="505" y="292" width="6" height="15" fill="rgb(216,4,11)"/><text x="508.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (3 samples, 0.49%)</title><rect x="505" y="308" width="6" height="15" fill="rgb(224,89,47)"/><text x="508.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:233) (1 samples, 0.16%)</title><rect x="509" y="324" width="2" height="15" fill="rgb(234,115,50)"/><text x="512.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.16%)</title><rect x="511" y="228" width="1" height="15" fill="rgb(225,21,13)"/><text x="514.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.16%)</title><rect x="511" y="244" width="1" height="15" fill="rgb(251,91,49)"/><text x="514.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.16%)</title><rect x="511" y="260" width="1" height="15" fill="rgb(238,71,47)"/><text x="514.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.16%)</title><rect x="511" y="276" width="1" height="15" fill="rgb(241,1,37)"/><text x="514.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.16%)</title><rect x="511" y="292" width="1" height="15" fill="rgb(235,172,39)"/><text x="514.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.16%)</title><rect x="512" y="228" width="2" height="15" fill="rgb(227,114,53)"/><text x="515.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1781) (1 samples, 0.16%)</title><rect x="512" y="244" width="2" height="15" fill="rgb(205,214,25)"/><text x="515.00" y="254.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="512" y="260" width="2" height="15" fill="rgb(210,83,48)"/><text x="515.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (21 samples, 3.40%)</title><rect x="476" y="212" width="40" height="15" fill="rgb(205,62,12)"/><text x="479.00" y="222.50">_ru..</text></g><g><title>array_subscript (mapping.c:1712) (1 samples, 0.16%)</title><rect x="514" y="228" width="2" height="15" fill="rgb(226,18,20)"/><text x="517.00" y="238.50"></text></g><g><title>array_astype (methods.c:828) (1 samples, 0.16%)</title><rect x="516" y="244" width="2" height="15" fill="rgb(217,62,34)"/><text x="519.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.16%)</title><rect x="516" y="260" width="2" height="15" fill="rgb(253,8,1)"/><text x="519.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:858) (1 samples, 0.16%)</title><rect x="516" y="276" width="2" height="15" fill="rgb(247,57,19)"/><text x="519.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.16%)</title><rect x="518" y="276" width="2" height="15" fill="rgb(228,37,16)"/><text x="521.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="518" y="292" width="2" height="15" fill="rgb(251,4,38)"/><text x="521.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (3 samples, 0.49%)</title><rect x="516" y="212" width="6" height="15" fill="rgb(211,113,39)"/><text x="519.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 0.49%)</title><rect x="516" y="228" width="6" height="15" fill="rgb(249,108,13)"/><text x="519.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.32%)</title><rect x="518" y="244" width="4" height="15" fill="rgb(226,192,35)"/><text x="521.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.32%)</title><rect x="518" y="260" width="4" height="15" fill="rgb(213,66,4)"/><text x="521.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.16%)</title><rect x="520" y="276" width="2" height="15" fill="rgb(243,210,48)"/><text x="523.00" y="286.50"></text></g><g><title>0x7ff095cf7d94 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="520" y="292" width="2" height="15" fill="rgb(227,113,28)"/><text x="523.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.16%)</title><rect x="522" y="212" width="2" height="15" fill="rgb(219,1,41)"/><text x="525.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.16%)</title><rect x="522" y="228" width="2" height="15" fill="rgb(249,107,4)"/><text x="525.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.16%)</title><rect x="522" y="244" width="2" height="15" fill="rgb(225,60,27)"/><text x="525.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.16%)</title><rect x="522" y="260" width="2" height="15" fill="rgb(245,171,7)"/><text x="525.00" y="270.50"></text></g><g><title>_fix_unknown_dimension (shape.c:504) (1 samples, 0.16%)</title><rect x="522" y="276" width="2" height="15" fill="rgb(226,89,22)"/><text x="525.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (27 samples, 4.38%)</title><rect x="474" y="196" width="52" height="15" fill="rgb(205,69,38)"/><text x="477.00" y="206.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.16%)</title><rect x="524" y="212" width="2" height="15" fill="rgb(249,80,33)"/><text x="527.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.16%)</title><rect x="524" y="228" width="2" height="15" fill="rgb(248,134,41)"/><text x="527.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.16%)</title><rect x="528" y="292" width="2" height="15" fill="rgb(249,78,28)"/><text x="531.00" y="302.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (3 samples, 0.49%)</title><rect x="526" y="260" width="6" height="15" fill="rgb(228,10,21)"/><text x="529.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (3 samples, 0.49%)</title><rect x="526" y="276" width="6" height="15" fill="rgb(234,51,40)"/><text x="529.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.16%)</title><rect x="530" y="292" width="2" height="15" fill="rgb(231,91,45)"/><text x="533.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.16%)</title><rect x="530" y="308" width="2" height="15" fill="rgb(208,38,26)"/><text x="533.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.16%)</title><rect x="530" y="324" width="2" height="15" fill="rgb(210,203,36)"/><text x="533.00" y="334.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.16%)</title><rect x="530" y="340" width="2" height="15" fill="rgb(239,45,4)"/><text x="533.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.16%)</title><rect x="530" y="356" width="2" height="15" fill="rgb(218,204,32)"/><text x="533.00" y="366.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:16) (1 samples, 0.16%)</title><rect x="532" y="260" width="2" height="15" fill="rgb(231,88,15)"/><text x="535.00" y="270.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.16%)</title><rect x="532" y="276" width="2" height="15" fill="rgb(234,70,48)"/><text x="535.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.16%)</title><rect x="532" y="292" width="2" height="15" fill="rgb(242,220,3)"/><text x="535.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.16%)</title><rect x="532" y="308" width="2" height="15" fill="rgb(222,119,36)"/><text x="535.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:38) (1 samples, 0.16%)</title><rect x="532" y="324" width="2" height="15" fill="rgb(210,205,19)"/><text x="535.00" y="334.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.16%)</title><rect x="532" y="340" width="2" height="15" fill="rgb(237,67,5)"/><text x="535.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (5 samples, 0.81%)</title><rect x="526" y="196" width="9" height="15" fill="rgb(208,155,13)"/><text x="529.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (5 samples, 0.81%)</title><rect x="526" y="212" width="9" height="15" fill="rgb(224,164,51)"/><text x="529.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (5 samples, 0.81%)</title><rect x="526" y="228" width="9" height="15" fill="rgb(210,154,8)"/><text x="529.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (5 samples, 0.81%)</title><rect x="526" y="244" width="9" height="15" fill="rgb(205,5,52)"/><text x="529.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.16%)</title><rect x="534" y="260" width="1" height="15" fill="rgb(251,223,16)"/><text x="537.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.16%)</title><rect x="534" y="276" width="1" height="15" fill="rgb(249,189,25)"/><text x="537.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.16%)</title><rect x="534" y="292" width="1" height="15" fill="rgb(208,36,17)"/><text x="537.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.16%)</title><rect x="534" y="308" width="1" height="15" fill="rgb(206,120,18)"/><text x="537.00" y="318.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.16%)</title><rect x="534" y="324" width="1" height="15" fill="rgb(248,89,41)"/><text x="537.00" y="334.50"></text></g><g><title>0x7ff095cd7e64 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="534" y="340" width="1" height="15" fill="rgb(239,83,39)"/><text x="537.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.16%)</title><rect x="537" y="260" width="2" height="15" fill="rgb(217,198,48)"/><text x="540.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:516) (1 samples, 0.16%)</title><rect x="537" y="276" width="2" height="15" fill="rgb(230,89,52)"/><text x="540.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.16%)</title><rect x="539" y="276" width="2" height="15" fill="rgb(207,181,14)"/><text x="542.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.16%)</title><rect x="539" y="292" width="2" height="15" fill="rgb(221,194,15)"/><text x="542.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.16%)</title><rect x="539" y="308" width="2" height="15" fill="rgb(220,193,21)"/><text x="542.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.16%)</title><rect x="539" y="324" width="2" height="15" fill="rgb(222,84,50)"/><text x="542.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:51) (1 samples, 0.16%)</title><rect x="539" y="340" width="2" height="15" fill="rgb(228,74,34)"/><text x="542.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (2 samples, 0.32%)</title><rect x="539" y="260" width="4" height="15" fill="rgb(224,138,12)"/><text x="542.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.16%)</title><rect x="541" y="276" width="2" height="15" fill="rgb(232,227,30)"/><text x="544.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.16%)</title><rect x="541" y="292" width="2" height="15" fill="rgb(245,178,0)"/><text x="544.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.16%)</title><rect x="541" y="308" width="2" height="15" fill="rgb(247,186,17)"/><text x="544.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.16%)</title><rect x="541" y="324" width="2" height="15" fill="rgb(220,18,46)"/><text x="544.00" y="334.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1867) (10 samples, 1.62%)</title><rect x="543" y="308" width="19" height="15" fill="rgb(241,132,40)"/><text x="546.00" y="318.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1868) (11 samples, 1.78%)</title><rect x="562" y="308" width="21" height="15" fill="rgb(250,203,37)"/><text x="565.00" y="318.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1869) (3 samples, 0.49%)</title><rect x="583" y="308" width="6" height="15" fill="rgb(235,201,54)"/><text x="586.00" y="318.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1871) (15 samples, 2.43%)</title><rect x="589" y="308" width="29" height="15" fill="rgb(213,119,0)"/><text x="592.00" y="318.50">FL..</text></g><g><title>FLOAT_maximum (loops.c.src:1872) (2 samples, 0.32%)</title><rect x="618" y="308" width="3" height="15" fill="rgb(221,140,27)"/><text x="621.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (42 samples, 6.81%)</title><rect x="543" y="260" width="80" height="15" fill="rgb(247,171,28)"/><text x="546.00" y="270.50">PyUFunc_G..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (42 samples, 6.81%)</title><rect x="543" y="276" width="80" height="15" fill="rgb(235,144,36)"/><text x="546.00" y="286.50">execute_l..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (42 samples, 6.81%)</title><rect x="543" y="292" width="80" height="15" fill="rgb(223,187,25)"/><text x="546.00" y="302.50">trivial_t..</text></g><g><title>FLOAT_maximum (loops.c.src:1876) (1 samples, 0.16%)</title><rect x="621" y="308" width="2" height="15" fill="rgb(233,195,7)"/><text x="624.00" y="318.50"></text></g><g><title>0x7ff094ef8f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="621" y="324" width="2" height="15" fill="rgb(245,220,36)"/><text x="624.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:19) (46 samples, 7.46%)</title><rect x="537" y="228" width="88" height="15" fill="rgb(247,169,26)"/><text x="540.00" y="238.50">_run (mlpr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (46 samples, 7.46%)</title><rect x="537" y="244" width="88" height="15" fill="rgb(249,226,25)"/><text x="540.00" y="254.50">ufunc_gene..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.16%)</title><rect x="623" y="260" width="2" height="15" fill="rgb(240,173,31)"/><text x="626.00" y="270.50"></text></g><g><title>sse2_maximum_FLOAT (simd.inc.src:1083) (1 samples, 0.16%)</title><rect x="629" y="404" width="2" height="15" fill="rgb(228,103,42)"/><text x="632.00" y="414.50"></text></g><g><title>npy_aligned_block_offset (lowlevel_strided_loops.h:438) (1 samples, 0.16%)</title><rect x="629" y="420" width="2" height="15" fill="rgb(218,4,25)"/><text x="632.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (2 samples, 0.32%)</title><rect x="631" y="436" width="4" height="15" fill="rgb(239,6,53)"/><text x="634.00" y="446.50"></text></g><g><title>fetestexcept (libm-2.29.so) (2 samples, 0.32%)</title><rect x="631" y="452" width="4" height="15" fill="rgb(225,0,27)"/><text x="634.00" y="462.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1857) (4 samples, 0.65%)</title><rect x="629" y="372" width="8" height="15" fill="rgb(222,2,45)"/><text x="632.00" y="382.50"></text></g><g><title>run_unary_reduce_simd_maximum_FLOAT (simd.inc.src:195) (4 samples, 0.65%)</title><rect x="629" y="388" width="8" height="15" fill="rgb(229,168,44)"/><text x="632.00" y="398.50"></text></g><g><title>sse2_maximum_FLOAT (simd.inc.src:1117) (3 samples, 0.49%)</title><rect x="631" y="404" width="6" height="15" fill="rgb(226,3,42)"/><text x="634.00" y="414.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (3 samples, 0.49%)</title><rect x="631" y="420" width="6" height="15" fill="rgb(238,151,32)"/><text x="634.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:804) (1 samples, 0.16%)</title><rect x="635" y="436" width="2" height="15" fill="rgb(219,131,34)"/><text x="638.00" y="446.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1876) (2 samples, 0.32%)</title><rect x="637" y="372" width="4" height="15" fill="rgb(233,212,8)"/><text x="640.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (2 samples, 0.32%)</title><rect x="637" y="388" width="4" height="15" fill="rgb(244,74,48)"/><text x="640.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (2 samples, 0.32%)</title><rect x="637" y="404" width="4" height="15" fill="rgb(238,141,41)"/><text x="640.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (2 samples, 0.32%)</title><rect x="637" y="420" width="4" height="15" fill="rgb(212,161,36)"/><text x="640.00" y="430.50"></text></g><g><title>array_max (methods.c:323) (7 samples, 1.13%)</title><rect x="629" y="244" width="14" height="15" fill="rgb(207,165,18)"/><text x="632.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (7 samples, 1.13%)</title><rect x="629" y="260" width="14" height="15" fill="rgb(251,171,1)"/><text x="632.00" y="270.50"></text></g><g><title>_amax (numpy/core/_methods.py:30) (7 samples, 1.13%)</title><rect x="629" y="276" width="14" height="15" fill="rgb(236,226,29)"/><text x="632.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 1.13%)</title><rect x="629" y="292" width="14" height="15" fill="rgb(248,35,44)"/><text x="632.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 1.13%)</title><rect x="629" y="308" width="14" height="15" fill="rgb(206,157,43)"/><text x="632.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.13%)</title><rect x="629" y="324" width="14" height="15" fill="rgb(212,31,34)"/><text x="632.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 1.13%)</title><rect x="629" y="340" width="14" height="15" fill="rgb(234,101,14)"/><text x="632.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 1.13%)</title><rect x="629" y="356" width="14" height="15" fill="rgb(248,75,27)"/><text x="632.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.16%)</title><rect x="641" y="372" width="2" height="15" fill="rgb(223,89,4)"/><text x="644.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.16%)</title><rect x="643" y="292" width="1" height="15" fill="rgb(207,84,25)"/><text x="646.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.16%)</title><rect x="643" y="308" width="1" height="15" fill="rgb(239,79,19)"/><text x="646.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.16%)</title><rect x="643" y="324" width="1" height="15" fill="rgb(237,166,10)"/><text x="646.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1071) (1 samples, 0.16%)</title><rect x="643" y="340" width="1" height="15" fill="rgb(252,165,4)"/><text x="646.00" y="350.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.16%)</title><rect x="643" y="356" width="1" height="15" fill="rgb(218,66,11)"/><text x="646.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:22) (11 samples, 1.78%)</title><rect x="625" y="228" width="21" height="15" fill="rgb(225,30,10)"/><text x="628.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.32%)</title><rect x="643" y="244" width="3" height="15" fill="rgb(249,167,32)"/><text x="646.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.32%)</title><rect x="643" y="260" width="3" height="15" fill="rgb(229,72,20)"/><text x="646.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.32%)</title><rect x="643" y="276" width="3" height="15" fill="rgb(217,42,27)"/><text x="646.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.16%)</title><rect x="644" y="292" width="2" height="15" fill="rgb(233,92,27)"/><text x="647.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.16%)</title><rect x="644" y="308" width="2" height="15" fill="rgb(209,125,41)"/><text x="647.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.16%)</title><rect x="644" y="324" width="2" height="15" fill="rgb(225,208,40)"/><text x="647.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.16%)</title><rect x="644" y="340" width="2" height="15" fill="rgb(225,53,39)"/><text x="647.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.16%)</title><rect x="644" y="356" width="2" height="15" fill="rgb(227,64,38)"/><text x="647.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.16%)</title><rect x="646" y="260" width="2" height="15" fill="rgb(249,46,49)"/><text x="649.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.16%)</title><rect x="646" y="276" width="2" height="15" fill="rgb(214,175,7)"/><text x="649.00" y="286.50"></text></g><g><title>0x7ff095e56e0e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="650" y="340" width="2" height="15" fill="rgb(248,96,30)"/><text x="653.00" y="350.50"></text></g><g><title>0x7ff095e56e7e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="652" y="340" width="2" height="15" fill="rgb(232,148,28)"/><text x="655.00" y="350.50"></text></g><g><title>0x7ff095e56ea2 (libm-2.29.so) (2 samples, 0.32%)</title><rect x="654" y="340" width="4" height="15" fill="rgb(226,6,33)"/><text x="657.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:23) (8 samples, 1.30%)</title><rect x="646" y="228" width="16" height="15" fill="rgb(235,125,39)"/><text x="649.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.30%)</title><rect x="646" y="244" width="16" height="15" fill="rgb(230,222,51)"/><text x="649.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.13%)</title><rect x="648" y="260" width="14" height="15" fill="rgb(244,113,9)"/><text x="651.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (7 samples, 1.13%)</title><rect x="648" y="276" width="14" height="15" fill="rgb(231,207,23)"/><text x="651.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (7 samples, 1.13%)</title><rect x="648" y="292" width="14" height="15" fill="rgb(244,191,45)"/><text x="651.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (7 samples, 1.13%)</title><rect x="648" y="308" width="14" height="15" fill="rgb(240,192,33)"/><text x="651.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (7 samples, 1.13%)</title><rect x="648" y="324" width="14" height="15" fill="rgb(245,145,31)"/><text x="651.00" y="334.50"></text></g><g><title>0x7ff095e56ea6 (libm-2.29.so) (2 samples, 0.32%)</title><rect x="658" y="340" width="4" height="15" fill="rgb(219,149,47)"/><text x="661.00" y="350.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.16%)</title><rect x="664" y="372" width="1" height="15" fill="rgb(205,78,33)"/><text x="667.00" y="382.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.16%)</title><rect x="669" y="388" width="2" height="15" fill="rgb(230,25,35)"/><text x="672.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (4 samples, 0.65%)</title><rect x="665" y="372" width="8" height="15" fill="rgb(230,4,23)"/><text x="668.00" y="382.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.16%)</title><rect x="671" y="388" width="2" height="15" fill="rgb(252,77,30)"/><text x="674.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (7 samples, 1.13%)</title><rect x="662" y="244" width="13" height="15" fill="rgb(254,122,14)"/><text x="665.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (7 samples, 1.13%)</title><rect x="662" y="260" width="13" height="15" fill="rgb(248,212,23)"/><text x="665.00" y="270.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (7 samples, 1.13%)</title><rect x="662" y="276" width="13" height="15" fill="rgb(211,209,23)"/><text x="665.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 0.97%)</title><rect x="664" y="292" width="11" height="15" fill="rgb(205,109,10)"/><text x="667.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 0.97%)</title><rect x="664" y="308" width="11" height="15" fill="rgb(220,8,20)"/><text x="667.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 0.97%)</title><rect x="664" y="324" width="11" height="15" fill="rgb(218,41,29)"/><text x="667.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (6 samples, 0.97%)</title><rect x="664" y="340" width="11" height="15" fill="rgb(228,119,41)"/><text x="667.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 0.97%)</title><rect x="664" y="356" width="11" height="15" fill="rgb(251,206,9)"/><text x="667.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.16%)</title><rect x="673" y="372" width="2" height="15" fill="rgb(221,160,40)"/><text x="676.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.16%)</title><rect x="675" y="308" width="2" height="15" fill="rgb(249,87,21)"/><text x="678.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.16%)</title><rect x="675" y="324" width="2" height="15" fill="rgb(221,5,43)"/><text x="678.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1112) (1 samples, 0.16%)</title><rect x="675" y="340" width="2" height="15" fill="rgb(219,88,29)"/><text x="678.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.32%)</title><rect x="675" y="292" width="4" height="15" fill="rgb(240,155,3)"/><text x="678.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:237) (1 samples, 0.16%)</title><rect x="677" y="308" width="2" height="15" fill="rgb(228,100,4)"/><text x="680.00" y="318.50"></text></g><g><title>0x7ff094ef8c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="677" y="324" width="2" height="15" fill="rgb(245,151,7)"/><text x="680.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (76 samples, 12.32%)</title><rect x="535" y="196" width="146" height="15" fill="rgb(208,106,51)"/><text x="538.00" y="206.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (76 samples, 12.32%)</title><rect x="535" y="212" width="146" height="15" fill="rgb(231,217,13)"/><text x="538.00" y="222.50">run (mlprodict/onn..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:24) (10 samples, 1.62%)</title><rect x="662" y="228" width="19" height="15" fill="rgb(238,26,32)"/><text x="665.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.49%)</title><rect x="675" y="244" width="6" height="15" fill="rgb(244,11,47)"/><text x="678.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.49%)</title><rect x="675" y="260" width="6" height="15" fill="rgb(246,33,34)"/><text x="678.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.49%)</title><rect x="675" y="276" width="6" height="15" fill="rgb(233,154,44)"/><text x="678.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.16%)</title><rect x="679" y="292" width="2" height="15" fill="rgb(226,189,24)"/><text x="682.00" y="302.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (1 samples, 0.16%)</title><rect x="679" y="308" width="2" height="15" fill="rgb(207,62,54)"/><text x="682.00" y="318.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (1 samples, 0.16%)</title><rect x="679" y="324" width="2" height="15" fill="rgb(234,85,28)"/><text x="682.00" y="334.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:604) (1 samples, 0.16%)</title><rect x="679" y="340" width="2" height="15" fill="rgb(233,32,42)"/><text x="682.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.16%)</title><rect x="679" y="356" width="2" height="15" fill="rgb(236,208,30)"/><text x="682.00" y="366.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:603) (2 samples, 0.32%)</title><rect x="683" y="340" width="4" height="15" fill="rgb(226,152,47)"/><text x="686.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h:157) (2 samples, 0.32%)</title><rect x="683" y="356" width="4" height="15" fill="rgb(236,52,39)"/><text x="686.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (5 samples, 0.81%)</title><rect x="681" y="228" width="9" height="15" fill="rgb(225,23,0)"/><text x="684.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.65%)</title><rect x="683" y="244" width="7" height="15" fill="rgb(218,173,33)"/><text x="686.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.65%)</title><rect x="683" y="260" width="7" height="15" fill="rgb(212,199,54)"/><text x="686.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.65%)</title><rect x="683" y="276" width="7" height="15" fill="rgb(215,148,32)"/><text x="686.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.65%)</title><rect x="683" y="292" width="7" height="15" fill="rgb(227,106,47)"/><text x="686.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (4 samples, 0.65%)</title><rect x="683" y="308" width="7" height="15" fill="rgb(246,137,7)"/><text x="686.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (4 samples, 0.65%)</title><rect x="683" y="324" width="7" height="15" fill="rgb(250,56,34)"/><text x="686.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (2 samples, 0.32%)</title><rect x="687" y="340" width="3" height="15" fill="rgb(248,95,49)"/><text x="690.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (2 samples, 0.32%)</title><rect x="687" y="356" width="3" height="15" fill="rgb(249,116,30)"/><text x="690.00" y="366.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.16%)</title><rect x="690" y="244" width="2" height="15" fill="rgb(253,116,9)"/><text x="693.00" y="254.50"></text></g><g><title>PyArray_NewFlagsObject (flagsobject.c:29) (1 samples, 0.16%)</title><rect x="690" y="260" width="2" height="15" fill="rgb(207,49,53)"/><text x="693.00" y="270.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.16%)</title><rect x="692" y="308" width="2" height="15" fill="rgb(234,100,25)"/><text x="695.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.16%)</title><rect x="692" y="324" width="2" height="15" fill="rgb(214,200,6)"/><text x="695.00" y="334.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.16%)</title><rect x="694" y="324" width="2" height="15" fill="rgb(248,225,23)"/><text x="697.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.16%)</title><rect x="694" y="340" width="2" height="15" fill="rgb(222,141,16)"/><text x="697.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.16%)</title><rect x="694" y="356" width="2" height="15" fill="rgb(225,36,44)"/><text x="697.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.16%)</title><rect x="694" y="372" width="2" height="15" fill="rgb(246,99,41)"/><text x="697.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.16%)</title><rect x="694" y="388" width="2" height="15" fill="rgb(218,205,40)"/><text x="697.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.16%)</title><rect x="694" y="404" width="2" height="15" fill="rgb(222,187,8)"/><text x="697.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.16%)</title><rect x="694" y="420" width="2" height="15" fill="rgb(250,107,51)"/><text x="697.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="694" y="436" width="2" height="15" fill="rgb(231,16,46)"/><text x="697.00" y="446.50"></text></g><g><title>0x7ff095cd9880 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="694" y="452" width="2" height="15" fill="rgb(237,220,31)"/><text x="697.00" y="462.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (4 samples, 0.65%)</title><rect x="696" y="324" width="8" height="15" fill="rgb(253,21,25)"/><text x="699.00" y="334.50"></text></g><g><title>0x7ff095cf8103 (libc-2.29.so) (4 samples, 0.65%)</title><rect x="696" y="340" width="8" height="15" fill="rgb(241,228,36)"/><text x="699.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (22 samples, 3.57%)</title><rect x="692" y="276" width="42" height="15" fill="rgb(253,206,30)"/><text x="695.00" y="286.50">arr..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (22 samples, 3.57%)</title><rect x="692" y="292" width="42" height="15" fill="rgb(227,110,2)"/><text x="695.00" y="302.50">arr..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (21 samples, 3.40%)</title><rect x="694" y="308" width="40" height="15" fill="rgb(206,228,10)"/><text x="697.00" y="318.50">PyA..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (16 samples, 2.59%)</title><rect x="704" y="324" width="30" height="15" fill="rgb(227,27,20)"/><text x="707.00" y="334.50">cb..</text></g><g><title>gemm (cblasfuncs.c:40) (16 samples, 2.59%)</title><rect x="704" y="340" width="30" height="15" fill="rgb(210,160,6)"/><text x="707.00" y="350.50">ge..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.59%)</title><rect x="704" y="356" width="30" height="15" fill="rgb(239,75,40)"/><text x="707.00" y="366.50">cb..</text></g><g><title>sgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.59%)</title><rect x="704" y="372" width="30" height="15" fill="rgb(237,150,32)"/><text x="707.00" y="382.50">sg..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.59%)</title><rect x="704" y="388" width="30" height="15" fill="rgb(228,47,12)"/><text x="707.00" y="398.50">ge..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.59%)</title><rect x="704" y="404" width="30" height="15" fill="rgb(208,139,11)"/><text x="707.00" y="414.50">ex..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.59%)</title><rect x="704" y="420" width="30" height="15" fill="rgb(239,126,23)"/><text x="707.00" y="430.50">ex..</text></g><g><title>sched_yield (libc-2.29.so) (16 samples, 2.59%)</title><rect x="704" y="436" width="30" height="15" fill="rgb(244,190,32)"/><text x="707.00" y="446.50">sc..</text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.81%)</title><rect x="734" y="276" width="10" height="15" fill="rgb(250,157,27)"/><text x="737.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (163 samples, 26.42%)</title><rect x="468" y="180" width="312" height="15" fill="rgb(237,92,0)"/><text x="471.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (52 samples, 8.43%)</title><rect x="681" y="196" width="99" height="15" fill="rgb(225,77,27)"/><text x="684.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (52 samples, 8.43%)</title><rect x="681" y="212" width="99" height="15" fill="rgb(246,62,13)"/><text x="684.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (47 samples, 7.62%)</title><rect x="690" y="228" width="90" height="15" fill="rgb(213,125,16)"/><text x="693.00" y="238.50">_run (mlpr..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (46 samples, 7.46%)</title><rect x="692" y="244" width="88" height="15" fill="rgb(229,222,17)"/><text x="695.00" y="254.50">numpy_dot_..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (46 samples, 7.46%)</title><rect x="692" y="260" width="88" height="15" fill="rgb(236,40,35)"/><text x="695.00" y="270.50">dot (&lt;__ar..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 3.08%)</title><rect x="744" y="276" width="36" height="15" fill="rgb(213,57,7)"/><text x="747.00" y="286.50">sge..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.16%)</title><rect x="780" y="180" width="2" height="15" fill="rgb(226,148,27)"/><text x="783.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:45) (183 samples, 29.66%)</title><rect x="440" y="52" width="350" height="15" fill="rgb(231,147,29)"/><text x="443.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000..</text></g><g><title>profile_pyrt (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:44) (183 samples, 29.66%)</title><rect x="440" y="68" width="350" height="15" fill="rgb(236,109,20)"/><text x="443.00" y="78.50">profile_pyrt (bench_MLPClassifier_default_m_cl_..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:29) (183 samples, 29.66%)</title><rect x="440" y="84" width="350" height="15" fill="rgb(237,195,34)"/><text x="443.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl..</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:23) (179 samples, 29.01%)</title><rect x="447" y="100" width="343" height="15" fill="rgb(210,34,38)"/><text x="450.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1000..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (179 samples, 29.01%)</title><rect x="447" y="116" width="343" height="15" fill="rgb(236,53,5)"/><text x="450.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (179 samples, 29.01%)</title><rect x="447" y="132" width="343" height="15" fill="rgb(222,193,8)"/><text x="450.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (179 samples, 29.01%)</title><rect x="447" y="148" width="343" height="15" fill="rgb(213,229,46)"/><text x="450.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (178 samples, 28.85%)</title><rect x="449" y="164" width="341" height="15" fill="rgb(248,102,25)"/><text x="452.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 0.65%)</title><rect x="782" y="180" width="8" height="15" fill="rgb(229,44,16)"/><text x="785.00" y="190.50"></text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:28) (1 samples, 0.16%)</title><rect x="790" y="84" width="2" height="15" fill="rgb(250,78,23)"/><text x="793.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.16%)</title><rect x="790" y="100" width="2" height="15" fill="rgb(209,125,53)"/><text x="793.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.16%)</title><rect x="790" y="116" width="2" height="15" fill="rgb(234,35,47)"/><text x="793.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.16%)</title><rect x="790" y="132" width="2" height="15" fill="rgb(210,156,36)"/><text x="793.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.16%)</title><rect x="790" y="148" width="2" height="15" fill="rgb(252,179,16)"/><text x="793.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:90) (1 samples, 0.16%)</title><rect x="790" y="164" width="2" height="15" fill="rgb(223,158,40)"/><text x="793.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:252) (1 samples, 0.16%)</title><rect x="790" y="180" width="2" height="15" fill="rgb(222,118,45)"/><text x="793.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:196) (1 samples, 0.16%)</title><rect x="790" y="196" width="2" height="15" fill="rgb(227,96,53)"/><text x="793.00" y="206.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py:24) (1 samples, 0.16%)</title><rect x="790" y="212" width="2" height="15" fill="rgb(206,214,37)"/><text x="793.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.16%)</title><rect x="790" y="228" width="2" height="15" fill="rgb(218,90,48)"/><text x="793.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.16%)</title><rect x="790" y="244" width="2" height="15" fill="rgb(251,40,12)"/><text x="793.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.16%)</title><rect x="790" y="260" width="2" height="15" fill="rgb(249,211,29)"/><text x="793.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.16%)</title><rect x="790" y="276" width="2" height="15" fill="rgb(254,192,29)"/><text x="793.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.16%)</title><rect x="790" y="292" width="2" height="15" fill="rgb(237,206,41)"/><text x="793.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:448) (1 samples, 0.16%)</title><rect x="790" y="308" width="2" height="15" fill="rgb(206,18,12)"/><text x="793.00" y="318.50"></text></g><g><title>0x7ff0840219e0 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="790" y="324" width="2" height="15" fill="rgb(205,125,32)"/><text x="793.00" y="334.50"></text></g><g><title>0x7ff053d1aff9 (?) (1 samples, 0.16%)</title><rect x="792" y="212" width="2" height="15" fill="rgb(238,189,45)"/><text x="795.00" y="222.50"></text></g><g><title>0x7ff053d15ef6 (?) (1 samples, 0.16%)</title><rect x="792" y="228" width="2" height="15" fill="rgb(243,58,27)"/><text x="795.00" y="238.50"></text></g><g><title>0x7ff053d0a962 (?) (1 samples, 0.16%)</title><rect x="792" y="244" width="2" height="15" fill="rgb(243,81,16)"/><text x="795.00" y="254.50"></text></g><g><title>0x7ff053d3e7a7 (?) (1 samples, 0.16%)</title><rect x="792" y="260" width="2" height="15" fill="rgb(220,24,39)"/><text x="795.00" y="270.50"></text></g><g><title>0x7ff053d3e379 (?) (1 samples, 0.16%)</title><rect x="792" y="276" width="2" height="15" fill="rgb(218,31,3)"/><text x="795.00" y="286.50"></text></g><g><title>0x7ff05419c8b8 (?) (1 samples, 0.16%)</title><rect x="792" y="292" width="2" height="15" fill="rgb(213,180,0)"/><text x="795.00" y="302.50"></text></g><g><title>0x7ff05419ac7f (?) (1 samples, 0.16%)</title><rect x="792" y="308" width="2" height="15" fill="rgb(251,190,14)"/><text x="795.00" y="318.50"></text></g><g><title>0x7ff0541ad99c (?) (1 samples, 0.16%)</title><rect x="792" y="324" width="2" height="15" fill="rgb(206,45,19)"/><text x="795.00" y="334.50"></text></g><g><title>0x7ff053ed8503 (?) (1 samples, 0.16%)</title><rect x="792" y="340" width="2" height="15" fill="rgb(222,55,40)"/><text x="795.00" y="350.50"></text></g><g><title>__kmp_fork_call (libiomp5.so) (1 samples, 0.16%)</title><rect x="794" y="452" width="2" height="15" fill="rgb(228,163,33)"/><text x="797.00" y="462.50"></text></g><g><title>__kmp_invoke_task_func (libiomp5.so) (1 samples, 0.16%)</title><rect x="794" y="468" width="2" height="15" fill="rgb(229,68,37)"/><text x="797.00" y="478.50"></text></g><g><title>__kmp_invoke_microtask (libiomp5.so) (1 samples, 0.16%)</title><rect x="794" y="484" width="2" height="15" fill="rgb(226,92,45)"/><text x="797.00" y="494.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.16%)</title><rect x="794" y="500" width="2" height="15" fill="rgb(249,164,28)"/><text x="797.00" y="510.50"></text></g><g><title>mkl_blas_sgemm_2D_bsrc (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.16%)</title><rect x="794" y="516" width="2" height="15" fill="rgb(253,120,43)"/><text x="797.00" y="526.50"></text></g><g><title>mkl_blas_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.16%)</title><rect x="794" y="532" width="2" height="15" fill="rgb(213,161,43)"/><text x="797.00" y="542.50"></text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.16%)</title><rect x="794" y="548" width="2" height="15" fill="rgb(209,198,46)"/><text x="797.00" y="558.50"></text></g><g><title>mkl_blas_avx_sgemm_copybn (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.16%)</title><rect x="794" y="564" width="2" height="15" fill="rgb(219,87,6)"/><text x="797.00" y="574.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="794" y="340" width="5" height="15" fill="rgb(210,61,21)"/><text x="797.00" y="350.50"></text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="794" y="356" width="5" height="15" fill="rgb(234,75,47)"/><text x="797.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.49%)</title><rect x="794" y="372" width="5" height="15" fill="rgb(213,112,26)"/><text x="797.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.49%)</title><rect x="794" y="388" width="5" height="15" fill="rgb(233,7,2)"/><text x="797.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.49%)</title><rect x="794" y="404" width="5" height="15" fill="rgb(252,143,34)"/><text x="797.00" y="414.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.49%)</title><rect x="794" y="420" width="5" height="15" fill="rgb(225,18,43)"/><text x="797.00" y="430.50"></text></g><g><title>__kmpc_fork_call (libiomp5.so) (3 samples, 0.49%)</title><rect x="794" y="436" width="5" height="15" fill="rgb(247,140,39)"/><text x="797.00" y="446.50"></text></g><g><title>__kmp_join_call (libiomp5.so) (2 samples, 0.32%)</title><rect x="796" y="452" width="3" height="15" fill="rgb(221,120,10)"/><text x="799.00" y="462.50"></text></g><g><title>__kmp_internal_join (libiomp5.so) (2 samples, 0.32%)</title><rect x="796" y="468" width="3" height="15" fill="rgb(223,97,31)"/><text x="799.00" y="478.50"></text></g><g><title>__kmp_join_barrier (libiomp5.so) (2 samples, 0.32%)</title><rect x="796" y="484" width="3" height="15" fill="rgb(227,220,45)"/><text x="799.00" y="494.50"></text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (2 samples, 0.32%)</title><rect x="796" y="500" width="3" height="15" fill="rgb(213,220,49)"/><text x="799.00" y="510.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="794" y="260" width="7" height="15" fill="rgb(208,48,25)"/><text x="797.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="794" y="276" width="7" height="15" fill="rgb(243,143,45)"/><text x="797.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="794" y="292" width="7" height="15" fill="rgb(208,6,38)"/><text x="797.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="794" y="308" width="7" height="15" fill="rgb(248,13,43)"/><text x="797.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="794" y="324" width="7" height="15" fill="rgb(207,148,42)"/><text x="797.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="799" y="340" width="2" height="15" fill="rgb(222,121,46)"/><text x="802.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="799" y="356" width="2" height="15" fill="rgb(217,38,24)"/><text x="802.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="799" y="372" width="2" height="15" fill="rgb(249,62,29)"/><text x="802.00" y="382.50"></text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:18) (9 samples, 1.46%)</title><rect x="792" y="100" width="17" height="15" fill="rgb(212,122,37)"/><text x="795.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (9 samples, 1.46%)</title><rect x="792" y="116" width="17" height="15" fill="rgb(236,102,44)"/><text x="795.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (9 samples, 1.46%)</title><rect x="792" y="132" width="17" height="15" fill="rgb(243,30,17)"/><text x="795.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (9 samples, 1.46%)</title><rect x="792" y="148" width="17" height="15" fill="rgb(250,168,45)"/><text x="795.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (9 samples, 1.46%)</title><rect x="792" y="164" width="17" height="15" fill="rgb(207,79,38)"/><text x="795.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (9 samples, 1.46%)</title><rect x="792" y="180" width="17" height="15" fill="rgb(226,203,35)"/><text x="795.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (9 samples, 1.46%)</title><rect x="792" y="196" width="17" height="15" fill="rgb(231,145,30)"/><text x="795.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.30%)</title><rect x="794" y="212" width="15" height="15" fill="rgb(238,169,52)"/><text x="797.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.30%)</title><rect x="794" y="228" width="15" height="15" fill="rgb(242,165,22)"/><text x="797.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.30%)</title><rect x="794" y="244" width="15" height="15" fill="rgb(226,176,21)"/><text x="797.00" y="254.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="801" y="260" width="8" height="15" fill="rgb(245,137,40)"/><text x="804.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="807" y="276" width="2" height="15" fill="rgb(237,165,48)"/><text x="810.00" y="286.50"></text></g><g><title>0x7ff095cd6bd1 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="828" y="132" width="2" height="15" fill="rgb(217,83,13)"/><text x="831.00" y="142.50"></text></g><g><title>0x7ff095cd6bdf (libc-2.29.so) (1 samples, 0.16%)</title><rect x="830" y="132" width="2" height="15" fill="rgb(253,53,23)"/><text x="833.00" y="142.50"></text></g><g><title>0x7ff095cd7eb0 (libc-2.29.so) (3 samples, 0.49%)</title><rect x="828" y="116" width="6" height="15" fill="rgb(214,149,10)"/><text x="831.00" y="126.50"></text></g><g><title>0x7ff095cd6c2d (libc-2.29.so) (1 samples, 0.16%)</title><rect x="832" y="132" width="2" height="15" fill="rgb(236,147,54)"/><text x="835.00" y="142.50"></text></g><g><title>__munmap (libc-2.29.so) (1 samples, 0.16%)</title><rect x="834" y="116" width="2" height="15" fill="rgb(249,47,28)"/><text x="837.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.16%)</title><rect x="836" y="116" width="2" height="15" fill="rgb(247,105,28)"/><text x="839.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.16%)</title><rect x="836" y="132" width="2" height="15" fill="rgb(208,198,48)"/><text x="839.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.16%)</title><rect x="836" y="148" width="2" height="15" fill="rgb(217,121,46)"/><text x="839.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.16%)</title><rect x="838" y="196" width="2" height="15" fill="rgb(207,17,36)"/><text x="841.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.16%)</title><rect x="838" y="212" width="2" height="15" fill="rgb(206,75,7)"/><text x="841.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="838" y="228" width="2" height="15" fill="rgb(241,164,45)"/><text x="841.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="838" y="244" width="2" height="15" fill="rgb(221,138,20)"/><text x="841.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="838" y="260" width="2" height="15" fill="rgb(225,160,5)"/><text x="841.00" y="270.50"></text></g><g><title>mkl_blas_avx_sgemm_kernel_0 (onnxruntime/capi/libmklml_intel.so) (14 samples, 2.27%)</title><rect x="840" y="212" width="26" height="15" fill="rgb(238,52,8)"/><text x="843.00" y="222.50">m..</text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="866" y="260" width="2" height="15" fill="rgb(238,42,42)"/><text x="869.00" y="270.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="868" y="340" width="4" height="15" fill="rgb(229,136,33)"/><text x="871.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="868" y="356" width="4" height="15" fill="rgb(205,153,24)"/><text x="871.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="870" y="372" width="2" height="15" fill="rgb(233,219,30)"/><text x="873.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="870" y="388" width="2" height="15" fill="rgb(232,60,38)"/><text x="873.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="870" y="404" width="2" height="15" fill="rgb(211,208,17)"/><text x="873.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="870" y="420" width="2" height="15" fill="rgb(213,108,12)"/><text x="873.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="870" y="436" width="2" height="15" fill="rgb(221,182,35)"/><text x="873.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="870" y="452" width="2" height="15" fill="rgb(225,186,11)"/><text x="873.00" y="462.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="872" y="340" width="6" height="15" fill="rgb(219,144,44)"/><text x="875.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="878" y="452" width="2" height="15" fill="rgb(206,224,4)"/><text x="881.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="878" y="468" width="2" height="15" fill="rgb(233,115,6)"/><text x="881.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="878" y="484" width="2" height="15" fill="rgb(234,120,50)"/><text x="881.00" y="494.50"></text></g><g><title>0x7ff095ce66e3 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="878" y="500" width="2" height="15" fill="rgb(232,89,6)"/><text x="881.00" y="510.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="878" y="340" width="4" height="15" fill="rgb(239,229,9)"/><text x="881.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="878" y="356" width="4" height="15" fill="rgb(209,108,20)"/><text x="881.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="878" y="372" width="4" height="15" fill="rgb(254,32,45)"/><text x="881.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="878" y="388" width="4" height="15" fill="rgb(209,218,37)"/><text x="881.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="878" y="404" width="4" height="15" fill="rgb(243,86,15)"/><text x="881.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="878" y="420" width="4" height="15" fill="rgb(227,17,22)"/><text x="881.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="878" y="436" width="4" height="15" fill="rgb(207,166,30)"/><text x="881.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="880" y="452" width="2" height="15" fill="rgb(230,186,17)"/><text x="883.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="880" y="468" width="2" height="15" fill="rgb(211,50,37)"/><text x="883.00" y="478.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="880" y="484" width="2" height="15" fill="rgb(246,40,19)"/><text x="883.00" y="494.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="882" y="404" width="2" height="15" fill="rgb(219,226,18)"/><text x="885.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="882" y="340" width="3" height="15" fill="rgb(213,31,34)"/><text x="885.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="882" y="356" width="3" height="15" fill="rgb(225,123,11)"/><text x="885.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="882" y="372" width="3" height="15" fill="rgb(247,192,0)"/><text x="885.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="882" y="388" width="3" height="15" fill="rgb(246,225,54)"/><text x="885.00" y="398.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="884" y="404" width="1" height="15" fill="rgb(251,191,25)"/><text x="887.00" y="414.50"></text></g><g><title>mkl_blas_avx_sgemm_copybn (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.16%)</title><rect x="901" y="564" width="2" height="15" fill="rgb(216,6,36)"/><text x="904.00" y="574.50"></text></g><g><title>mkl_blas_avx_sgemm_get_bufs (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.16%)</title><rect x="903" y="564" width="2" height="15" fill="rgb(223,44,4)"/><text x="906.00" y="574.50"></text></g><g><title>mkl_serv_allocate (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.16%)</title><rect x="903" y="580" width="2" height="15" fill="rgb(216,85,45)"/><text x="906.00" y="590.50"></text></g><g><title>mkl_serv_get_fast_mm_status (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.16%)</title><rect x="903" y="596" width="2" height="15" fill="rgb(216,222,6)"/><text x="906.00" y="606.50"></text></g><g><title>__kmp_fork_call (libiomp5.so) (3 samples, 0.49%)</title><rect x="901" y="452" width="5" height="15" fill="rgb(235,23,16)"/><text x="904.00" y="462.50"></text></g><g><title>__kmp_invoke_task_func (libiomp5.so) (3 samples, 0.49%)</title><rect x="901" y="468" width="5" height="15" fill="rgb(233,187,8)"/><text x="904.00" y="478.50"></text></g><g><title>__kmp_invoke_microtask (libiomp5.so) (3 samples, 0.49%)</title><rect x="901" y="484" width="5" height="15" fill="rgb(253,180,16)"/><text x="904.00" y="494.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.49%)</title><rect x="901" y="500" width="5" height="15" fill="rgb(251,43,42)"/><text x="904.00" y="510.50"></text></g><g><title>mkl_blas_sgemm_2D_bsrc (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.49%)</title><rect x="901" y="516" width="5" height="15" fill="rgb(245,157,20)"/><text x="904.00" y="526.50"></text></g><g><title>mkl_blas_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.49%)</title><rect x="901" y="532" width="5" height="15" fill="rgb(206,35,29)"/><text x="904.00" y="542.50"></text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.49%)</title><rect x="901" y="548" width="5" height="15" fill="rgb(251,189,19)"/><text x="904.00" y="558.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0 (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.16%)</title><rect x="905" y="564" width="1" height="15" fill="rgb(210,203,47)"/><text x="908.00" y="574.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0_pst (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.16%)</title><rect x="905" y="580" width="1" height="15" fill="rgb(233,35,52)"/><text x="908.00" y="590.50"></text></g><g><title>__kmp_yield (libiomp5.so) (1 samples, 0.16%)</title><rect x="935" y="516" width="2" height="15" fill="rgb(215,61,27)"/><text x="938.00" y="526.50"></text></g><g><title>__kmpc_fork_call (libiomp5.so) (21 samples, 3.40%)</title><rect x="901" y="436" width="40" height="15" fill="rgb(248,153,45)"/><text x="904.00" y="446.50">__k..</text></g><g><title>__kmp_join_call (libiomp5.so) (18 samples, 2.92%)</title><rect x="906" y="452" width="35" height="15" fill="rgb(209,210,50)"/><text x="909.00" y="462.50">__..</text></g><g><title>__kmp_internal_join (libiomp5.so) (18 samples, 2.92%)</title><rect x="906" y="468" width="35" height="15" fill="rgb(248,60,39)"/><text x="909.00" y="478.50">__..</text></g><g><title>__kmp_join_barrier (libiomp5.so) (18 samples, 2.92%)</title><rect x="906" y="484" width="35" height="15" fill="rgb(248,92,33)"/><text x="909.00" y="494.50">__..</text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (18 samples, 2.92%)</title><rect x="906" y="500" width="35" height="15" fill="rgb(247,137,31)"/><text x="909.00" y="510.50">_I..</text></g><g><title>sched_yield (libc-2.29.so) (2 samples, 0.32%)</title><rect x="937" y="516" width="4" height="15" fill="rgb(209,166,33)"/><text x="940.00" y="526.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (66 samples, 10.70%)</title><rect x="885" y="340" width="127" height="15" fill="rgb(254,35,3)"/><text x="888.00" y="350.50">onnxruntime::Ge..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 9.40%)</title><rect x="901" y="356" width="111" height="15" fill="rgb(253,165,48)"/><text x="904.00" y="366.50">onnxruntime::..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (58 samples, 9.40%)</title><rect x="901" y="372" width="111" height="15" fill="rgb(236,102,36)"/><text x="904.00" y="382.50">cblas_sgemm (..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (58 samples, 9.40%)</title><rect x="901" y="388" width="111" height="15" fill="rgb(239,22,16)"/><text x="904.00" y="398.50">sgemm_ (onnxr..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (58 samples, 9.40%)</title><rect x="901" y="404" width="111" height="15" fill="rgb(250,182,45)"/><text x="904.00" y="414.50">mkl_blas_sgem..</text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (58 samples, 9.40%)</title><rect x="901" y="420" width="111" height="15" fill="rgb(208,100,52)"/><text x="904.00" y="430.50">mkl_blas_sgem..</text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (37 samples, 6.00%)</title><rect x="941" y="436" width="71" height="15" fill="rgb(215,121,20)"/><text x="944.00" y="446.50">mkl_blas..</text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (37 samples, 6.00%)</title><rect x="941" y="452" width="71" height="15" fill="rgb(207,6,20)"/><text x="944.00" y="462.50">mkl_blas..</text></g><g><title>mkl_blas_avx_sgemm_pst (onnxruntime/capi/libmklml_intel.so) (37 samples, 6.00%)</title><rect x="941" y="468" width="71" height="15" fill="rgb(210,64,35)"/><text x="944.00" y="478.50">mkl_blas..</text></g><g><title>Eigen::internal::TensorBlockCwiseUnaryIO&lt;Eigen::internal::scalar_exp_op&lt;float&gt;, long, float, 2, 1&gt;::Run&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1012" y="420" width="2" height="15" fill="rgb(233,214,31)"/><text x="1015.00" y="430.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="1012" y="372" width="5" height="15" fill="rgb(240,55,40)"/><text x="1015.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="1012" y="388" width="5" height="15" fill="rgb(239,16,42)"/><text x="1015.00" y="398.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_18TensorCwiseUnaryOpINS2_13scalar_exp_opIfEEKNS1_19TensorCwiseBinaryOpINS2_20scalar_difference_opIKfSF_EEKNS5_INS6_ISF_Li2ELi1ElEELi16ES8_EEKNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSL_IiJSN_EEEKNS1_18TensorForcedEvalOpIKNS1_17TensorReductionOpINS2_10MaxReducerIfEEKNSL_ISN_JEEESJ_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS1C_RKS1D_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1N_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="1012" y="404" width="5" height="15" fill="rgb(218,139,7)"/><text x="1015.00" y="414.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_19TensorCwiseBinaryOpINS_8internal20scalar_difference_opIKfS4_EEKNS_9TensorMapINS_6TensorIS4_Li2ELi1ElEELi16ENS_11MakePointerEEEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS2_10MaxReducerIfEEKNSD_ISF_JEEESB_S9_EEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNS2_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="1014" y="420" width="3" height="15" fill="rgb(219,137,33)"/><text x="1017.00" y="430.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS_8internal10MaxReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIKfLi2ELi1ElEELi16ENS_11MakePointerEEESL_EEEEEEEENS_16ThreadPoolDeviceEE5blockEPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="1014" y="436" width="3" height="15" fill="rgb(237,188,46)"/><text x="1017.00" y="446.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS_8internal10MaxReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIKfLi2ELi1ElEELi16ENS_11MakePointerEEESL_EEEEEEEENS_16ThreadPoolDeviceEE14BroadcastBlockERKNS_6DSizesIlLi2EEERKNSY_IlLi4EEES14_S14_lPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="1014" y="452" width="3" height="15" fill="rgb(243,224,41)"/><text x="1017.00" y="462.50"></text></g><g><title>Eigen::internal::TensorBlockReader&lt;float, long, 4, 1&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1015" y="468" width="2" height="15" fill="rgb(225,195,34)"/><text x="1018.00" y="478.50"></text></g><g><title>Eigen::internal::TensorBlockCopyOp&lt;float, long&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1015" y="484" width="2" height="15" fill="rgb(209,19,30)"/><text x="1018.00" y="494.50"></text></g><g><title>Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1017" y="372" width="2" height="15" fill="rgb(237,96,25)"/><text x="1020.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1017" y="388" width="2" height="15" fill="rgb(234,152,9)"/><text x="1020.00" y="398.50"></text></g><g><title>std::_Function_handler&lt;void (long, long), Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run(Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const&amp;, Eigen::ThreadPoolDevice const&amp;)::{lambda(long, long)#1}&gt;::_M_invoke (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1017" y="404" width="2" height="15" fill="rgb(208,176,33)"/><text x="1020.00" y="414.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="1019" y="388" width="8" height="15" fill="rgb(253,27,10)"/><text x="1022.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="1019" y="404" width="8" height="15" fill="rgb(221,53,15)"/><text x="1022.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_19TensorCwiseBinaryOpINS2_17scalar_product_opIffEEKS9_KNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSF_IiJSH_EEEKNS1_18TensorForcedEvalOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNSF_ISH_JEEESD_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS19_RKS1A_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1K_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="1019" y="420" width="8" height="15" fill="rgb(218,73,18)"/><text x="1022.00" y="430.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_19TensorCwiseBinaryOpINS_8internal17scalar_product_opIffEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSC_IiJSE_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS2_10SumReducerIfEEKNSC_ISE_JEEESA_S8_EEEEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNS2_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="1019" y="436" width="8" height="15" fill="rgb(233,58,34)"/><text x="1022.00" y="446.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS_8internal17scalar_inverse_opIfEEKNS_17TensorReductionOpINSC_10SumReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEESN_EEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="1019" y="452" width="8" height="15" fill="rgb(233,167,53)"/><text x="1022.00" y="462.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS_8internal17scalar_inverse_opIfEEKNS_17TensorReductionOpINSC_10SumReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEESN_EEEEEEEEEENS_16ThreadPoolDeviceEE14BroadcastBlockERKNS_6DSizesIlLi2EEERKNS12_IlLi4EEES18_S18_lPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="1019" y="468" width="8" height="15" fill="rgb(222,72,54)"/><text x="1022.00" y="478.50"></text></g><g><title>Eigen::internal::TensorBlockReader&lt;float, long, 4, 1&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="1019" y="484" width="8" height="15" fill="rgb(206,103,5)"/><text x="1022.00" y="494.50"></text></g><g><title>Eigen::internal::TensorBlockCopyOp&lt;float, long&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="1021" y="500" width="6" height="15" fill="rgb(207,173,15)"/><text x="1024.00" y="510.50"></text></g><g><title>onnxruntime::Softmax&lt;float, false&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.46%)</title><rect x="1012" y="340" width="17" height="15" fill="rgb(245,165,26)"/><text x="1015.00" y="350.50"></text></g><g><title>onnxruntime::ComputeSoftMax&lt;Eigen::ThreadPoolDevice, float&gt; [clone .constprop.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.46%)</title><rect x="1012" y="356" width="17" height="15" fill="rgb(212,158,21)"/><text x="1015.00" y="366.50"></text></g><g><title>_ZN5Eigen8internal14TensorExecutorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_19TensorCwiseBinaryOpINS0_17scalar_product_opIffEEKS7_KNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS0_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS0_10SumReducerIfEEKNSD_ISF_JEEESB_S6_EEEEEEEEEEEEEENS_16ThreadPoolDeviceELb1ELb1EE3runERS17_RKS18_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.81%)</title><rect x="1019" y="372" width="10" height="15" fill="rgb(227,88,1)"/><text x="1022.00" y="382.50"></text></g><g><title>Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_inverse_op&lt;float&gt;, Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1027" y="388" width="2" height="15" fill="rgb(251,152,26)"/><text x="1030.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1027" y="404" width="2" height="15" fill="rgb(239,1,8)"/><text x="1030.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorEvalToOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNS1_9IndexListINS1_10type2indexILl1EEEJEEEKNS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEESJ_EEEESJ_EENS1_16ThreadPoolDeviceELb1ELb0EE3runERSR_RKSS_EUlllE_E9_M_invokeERKSt9_Any_dataOlS12_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1027" y="420" width="2" height="15" fill="rgb(249,23,23)"/><text x="1030.00" y="430.50"></text></g><g><title>0x7ff095cd8b76 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1077" y="388" width="2" height="15" fill="rgb(225,71,10)"/><text x="1080.00" y="398.50"></text></g><g><title>0x7ff095cd8d27 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="1079" y="388" width="3" height="15" fill="rgb(216,48,7)"/><text x="1082.00" y="398.50"></text></g><g><title>0x7ff095cd8d81 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1082" y="388" width="2" height="15" fill="rgb(252,199,35)"/><text x="1085.00" y="398.50"></text></g><g><title>0x7ff095cd8d8d (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1084" y="388" width="2" height="15" fill="rgb(217,147,29)"/><text x="1087.00" y="398.50"></text></g><g><title>0x7ff095cd8dd2 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1086" y="388" width="2" height="15" fill="rgb(220,227,27)"/><text x="1089.00" y="398.50"></text></g><g><title>0x7ff095cd8fd2 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1088" y="388" width="2" height="15" fill="rgb(213,95,49)"/><text x="1091.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (26 samples, 4.21%)</title><rect x="1042" y="356" width="50" height="15" fill="rgb(253,6,8)"/><text x="1045.00" y="366.50">opera..</text></g><g><title>malloc (libc-2.29.so) (24 samples, 3.89%)</title><rect x="1046" y="372" width="46" height="15" fill="rgb(234,214,2)"/><text x="1049.00" y="382.50">mall..</text></g><g><title>0x7ff095cd9395 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1090" y="388" width="2" height="15" fill="rgb(253,196,5)"/><text x="1093.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="1092" y="356" width="6" height="15" fill="rgb(250,192,9)"/><text x="1095.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1096" y="372" width="2" height="15" fill="rgb(233,61,54)"/><text x="1099.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 19.61%)</title><rect x="868" y="260" width="232" height="15" fill="rgb(212,217,54)"/><text x="871.00" y="270.50">onnxruntime::InferenceSession:..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 19.61%)</title><rect x="868" y="276" width="232" height="15" fill="rgb(247,95,23)"/><text x="871.00" y="286.50">onnxruntime::InferenceSession:..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 19.61%)</title><rect x="868" y="292" width="232" height="15" fill="rgb(207,39,4)"/><text x="871.00" y="302.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 19.61%)</title><rect x="868" y="308" width="232" height="15" fill="rgb(211,88,6)"/><text x="871.00" y="318.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 19.61%)</title><rect x="868" y="324" width="232" height="15" fill="rgb(242,97,53)"/><text x="871.00" y="334.50">onnxruntime::SequentialExecuto..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (37 samples, 6.00%)</title><rect x="1029" y="340" width="71" height="15" fill="rgb(247,34,39)"/><text x="1032.00" y="350.50">onnxrunt..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="1098" y="356" width="2" height="15" fill="rgb(207,202,5)"/><text x="1101.00" y="366.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 5.51%)</title><rect x="1100" y="260" width="65" height="15" fill="rgb(234,59,6)"/><text x="1103.00" y="270.50">pybind1..</text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.94%)</title><rect x="1142" y="276" width="23" height="15" fill="rgb(225,26,33)"/><text x="1145.00" y="286.50">p..</text></g><g><title>mmap64 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1163" y="292" width="2" height="15" fill="rgb(209,7,14)"/><text x="1166.00" y="302.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1165" y="276" width="2" height="15" fill="rgb(239,192,35)"/><text x="1168.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1165" y="292" width="2" height="15" fill="rgb(249,11,0)"/><text x="1168.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1165" y="308" width="2" height="15" fill="rgb(212,77,45)"/><text x="1168.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1165" y="324" width="2" height="15" fill="rgb(233,142,1)"/><text x="1168.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1165" y="340" width="2" height="15" fill="rgb(245,12,41)"/><text x="1168.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1165" y="356" width="2" height="15" fill="rgb(236,205,50)"/><text x="1168.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1165" y="372" width="2" height="15" fill="rgb(224,151,11)"/><text x="1168.00" y="382.50"></text></g><g><title>0x7ff095cd7945 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1167" y="292" width="1" height="15" fill="rgb(206,225,37)"/><text x="1170.00" y="302.50"></text></g><g><title>0x7ff095cd7a33 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1168" y="292" width="2" height="15" fill="rgb(253,53,43)"/><text x="1171.00" y="302.50"></text></g><g><title>0x7ff095cd7d07 (libc-2.29.so) (4 samples, 0.65%)</title><rect x="1170" y="292" width="8" height="15" fill="rgb(213,37,23)"/><text x="1173.00" y="302.50"></text></g><g><title>0x7ff0857a47a0 (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="1178" y="308" width="2" height="15" fill="rgb(236,197,13)"/><text x="1181.00" y="318.50"></text></g><g><title>0x7ff095cd7971 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1180" y="308" width="2" height="15" fill="rgb(247,81,21)"/><text x="1183.00" y="318.50"></text></g><g><title>0x7ff095cd7982 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1182" y="308" width="2" height="15" fill="rgb(247,206,17)"/><text x="1185.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (182 samples, 29.50%)</title><rect x="838" y="164" width="348" height="15" fill="rgb(210,49,12)"/><text x="841.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (182 samples, 29.50%)</title><rect x="838" y="180" width="348" height="15" fill="rgb(220,0,14)"/><text x="841.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (181 samples, 29.34%)</title><rect x="840" y="196" width="346" height="15" fill="rgb(224,208,31)"/><text x="843.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (167 samples, 27.07%)</title><rect x="866" y="212" width="320" height="15" fill="rgb(234,185,9)"/><text x="869.00" y="222.50">pybind11::cpp_function::dispatcher (onnxrun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (167 samples, 27.07%)</title><rect x="866" y="228" width="320" height="15" fill="rgb(218,227,37)"/><text x="869.00" y="238.50">void pybind11::cpp_function::initialize&lt;onn..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (167 samples, 27.07%)</title><rect x="866" y="244" width="320" height="15" fill="rgb(244,195,27)"/><text x="869.00" y="254.50">onnxruntime::python::addObjectMethods(pybin..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.78%)</title><rect x="1165" y="260" width="21" height="15" fill="rgb(235,210,43)"/><text x="1168.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.62%)</title><rect x="1167" y="276" width="19" height="15" fill="rgb(233,187,54)"/><text x="1170.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="1178" y="292" width="8" height="15" fill="rgb(236,17,22)"/><text x="1181.00" y="302.50"></text></g><g><title>0x7ff095cd7a4b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1184" y="308" width="2" height="15" fill="rgb(233,99,4)"/><text x="1187.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (183 samples, 29.66%)</title><rect x="838" y="132" width="350" height="15" fill="rgb(217,62,24)"/><text x="841.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (183 samples, 29.66%)</title><rect x="838" y="148" width="350" height="15" fill="rgb(226,204,31)"/><text x="841.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.16%)</title><rect x="1186" y="164" width="2" height="15" fill="rgb(253,207,44)"/><text x="1189.00" y="174.50"></text></g><g><title>all (617 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(208,48,12)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:52) (209 samples, 33.87%)</title><rect x="790" y="52" width="400" height="15" fill="rgb(243,86,27)"/><text x="793.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_m_cl_1000_50_12_..</text></g><g><title>profile_ort (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:51) (209 samples, 33.87%)</title><rect x="790" y="68" width="400" height="15" fill="rgb(225,129,27)"/><text x="793.00" y="78.50">profile_ort (bench_MLPClassifier_default_m_cl_1000_50_..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:29) (208 samples, 33.71%)</title><rect x="792" y="84" width="398" height="15" fill="rgb(250,66,11)"/><text x="795.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_1000_5..</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1000_50_12_float_.py:23) (199 samples, 32.25%)</title><rect x="809" y="100" width="381" height="15" fill="rgb(254,119,19)"/><text x="812.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1000_50_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (184 samples, 29.82%)</title><rect x="838" y="116" width="352" height="15" fill="rgb(250,115,29)"/><text x="841.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_as..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.16%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(243,131,39)"/><text x="1191.00" y="142.50"></text></g></g></svg>