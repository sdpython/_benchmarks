<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>0x7fe0ff2b2bd4 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="10" y="52" width="2" height="15" fill="rgb(218,18,10)"/><text x="13.00" y="62.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(249,70,19)"/><text x="15.00" y="990.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.35%)</title><rect x="12" y="868" width="4" height="15" fill="rgb(221,168,53)"/><text x="15.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.35%)</title><rect x="12" y="884" width="4" height="15" fill="rgb(241,180,21)"/><text x="15.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.35%)</title><rect x="12" y="900" width="4" height="15" fill="rgb(242,63,7)"/><text x="15.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.35%)</title><rect x="12" y="916" width="4" height="15" fill="rgb(253,81,33)"/><text x="15.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="12" y="932" width="4" height="15" fill="rgb(253,20,24)"/><text x="15.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="12" y="948" width="4" height="15" fill="rgb(254,129,15)"/><text x="15.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="12" y="964" width="4" height="15" fill="rgb(229,80,27)"/><text x="15.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(234,105,44)"/><text x="17.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.18%)</title><rect x="14" y="996" width="2" height="15" fill="rgb(227,67,22)"/><text x="17.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.18%)</title><rect x="14" y="1012" width="2" height="15" fill="rgb(248,0,5)"/><text x="17.00" y="1022.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="16" y="868" width="2" height="15" fill="rgb(230,29,48)"/><text x="19.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="16" y="884" width="2" height="15" fill="rgb(219,20,24)"/><text x="19.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(220,64,13)"/><text x="19.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(225,125,35)"/><text x="19.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(254,159,14)"/><text x="19.00" y="942.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(226,217,24)"/><text x="19.00" y="958.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="18" y="900" width="2" height="15" fill="rgb(246,12,51)"/><text x="21.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="18" y="916" width="2" height="15" fill="rgb(231,45,52)"/><text x="21.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="18" y="932" width="2" height="15" fill="rgb(217,167,47)"/><text x="21.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="18" y="948" width="2" height="15" fill="rgb(235,170,51)"/><text x="21.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="18" y="964" width="2" height="15" fill="rgb(231,65,52)"/><text x="21.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="18" y="980" width="2" height="15" fill="rgb(230,85,36)"/><text x="21.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="18" y="996" width="2" height="15" fill="rgb(214,224,19)"/><text x="21.00" y="1006.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 1.06%)</title><rect x="12" y="836" width="12" height="15" fill="rgb(247,20,17)"/><text x="15.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 1.06%)</title><rect x="12" y="852" width="12" height="15" fill="rgb(234,25,38)"/><text x="15.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.53%)</title><rect x="18" y="868" width="6" height="15" fill="rgb(218,50,19)"/><text x="21.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.53%)</title><rect x="18" y="884" width="6" height="15" fill="rgb(216,63,31)"/><text x="21.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.35%)</title><rect x="20" y="900" width="4" height="15" fill="rgb(224,159,28)"/><text x="23.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.35%)</title><rect x="20" y="916" width="4" height="15" fill="rgb(206,69,22)"/><text x="23.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.35%)</title><rect x="20" y="932" width="4" height="15" fill="rgb(230,130,9)"/><text x="23.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (2 samples, 0.35%)</title><rect x="20" y="948" width="4" height="15" fill="rgb(215,49,51)"/><text x="23.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.35%)</title><rect x="20" y="964" width="4" height="15" fill="rgb(211,103,19)"/><text x="23.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (2 samples, 0.35%)</title><rect x="20" y="980" width="4" height="15" fill="rgb(240,58,13)"/><text x="23.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (2 samples, 0.35%)</title><rect x="20" y="996" width="4" height="15" fill="rgb(242,163,15)"/><text x="23.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (2 samples, 0.35%)</title><rect x="20" y="1012" width="4" height="15" fill="rgb(239,157,47)"/><text x="23.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.23%)</title><rect x="12" y="356" width="14" height="15" fill="rgb(249,39,14)"/><text x="15.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="372" width="14" height="15" fill="rgb(216,201,38)"/><text x="15.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 1.23%)</title><rect x="12" y="388" width="14" height="15" fill="rgb(231,113,10)"/><text x="15.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="404" width="14" height="15" fill="rgb(254,86,8)"/><text x="15.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="420" width="14" height="15" fill="rgb(210,202,15)"/><text x="15.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="436" width="14" height="15" fill="rgb(241,181,42)"/><text x="15.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.23%)</title><rect x="12" y="452" width="14" height="15" fill="rgb(234,209,5)"/><text x="15.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="468" width="14" height="15" fill="rgb(209,59,9)"/><text x="15.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 1.23%)</title><rect x="12" y="484" width="14" height="15" fill="rgb(224,153,48)"/><text x="15.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="500" width="14" height="15" fill="rgb(221,23,2)"/><text x="15.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="516" width="14" height="15" fill="rgb(239,151,29)"/><text x="15.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="532" width="14" height="15" fill="rgb(239,119,5)"/><text x="15.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.23%)</title><rect x="12" y="548" width="14" height="15" fill="rgb(246,11,16)"/><text x="15.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="564" width="14" height="15" fill="rgb(229,221,29)"/><text x="15.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 1.23%)</title><rect x="12" y="580" width="14" height="15" fill="rgb(222,125,19)"/><text x="15.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="596" width="14" height="15" fill="rgb(221,112,7)"/><text x="15.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="612" width="14" height="15" fill="rgb(227,123,13)"/><text x="15.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="628" width="14" height="15" fill="rgb(221,88,30)"/><text x="15.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="644" width="14" height="15" fill="rgb(231,91,44)"/><text x="15.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="660" width="14" height="15" fill="rgb(254,212,19)"/><text x="15.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="676" width="14" height="15" fill="rgb(253,184,27)"/><text x="15.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.23%)</title><rect x="12" y="692" width="14" height="15" fill="rgb(219,122,1)"/><text x="15.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="708" width="14" height="15" fill="rgb(253,43,41)"/><text x="15.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 1.23%)</title><rect x="12" y="724" width="14" height="15" fill="rgb(231,160,47)"/><text x="15.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="740" width="14" height="15" fill="rgb(206,178,42)"/><text x="15.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="756" width="14" height="15" fill="rgb(248,110,7)"/><text x="15.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="772" width="14" height="15" fill="rgb(208,207,42)"/><text x="15.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.23%)</title><rect x="12" y="788" width="14" height="15" fill="rgb(238,134,31)"/><text x="15.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="12" y="804" width="14" height="15" fill="rgb(206,129,17)"/><text x="15.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 1.23%)</title><rect x="12" y="820" width="14" height="15" fill="rgb(253,157,39)"/><text x="15.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(213,43,21)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(230,108,38)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(218,201,37)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(220,39,11)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(249,106,37)"/><text x="27.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.18%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(245,38,20)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(224,86,8)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(254,166,14)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(242,89,38)"/><text x="27.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(226,205,3)"/><text x="27.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.18%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(210,161,14)"/><text x="27.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1012" width="2" height="15" fill="rgb(237,199,45)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1028" width="2" height="15" fill="rgb(210,53,11)"/><text x="27.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1044" width="2" height="15" fill="rgb(253,219,39)"/><text x="27.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="1060" width="2" height="15" fill="rgb(223,211,50)"/><text x="27.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1076" width="2" height="15" fill="rgb(217,29,40)"/><text x="27.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1092" width="2" height="15" fill="rgb(240,103,11)"/><text x="27.00" y="1102.50"></text></g><g><title>srange (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1108" width="2" height="15" fill="rgb(210,134,44)"/><text x="27.00" y="1118.50"></text></g><g><title>parseString (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(231,217,13)"/><text x="27.00" y="1134.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(249,35,6)"/><text x="27.00" y="1150.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(236,123,20)"/><text x="27.00" y="1166.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1172" width="2" height="15" fill="rgb(248,222,1)"/><text x="27.00" y="1182.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1188" width="2" height="15" fill="rgb(219,48,46)"/><text x="27.00" y="1198.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1204" width="2" height="15" fill="rgb(221,71,43)"/><text x="27.00" y="1214.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1220" width="2" height="15" fill="rgb(236,59,29)"/><text x="27.00" y="1230.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1236" width="2" height="15" fill="rgb(216,41,26)"/><text x="27.00" y="1246.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1252" width="2" height="15" fill="rgb(207,117,10)"/><text x="27.00" y="1262.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1268" width="2" height="15" fill="rgb(230,76,0)"/><text x="27.00" y="1278.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1284" width="2" height="15" fill="rgb(220,82,34)"/><text x="27.00" y="1294.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1300" width="2" height="15" fill="rgb(206,4,53)"/><text x="27.00" y="1310.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1316" width="2" height="15" fill="rgb(236,204,29)"/><text x="27.00" y="1326.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1332" width="2" height="15" fill="rgb(254,174,17)"/><text x="27.00" y="1342.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1348" width="2" height="15" fill="rgb(251,66,16)"/><text x="27.00" y="1358.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1364" width="2" height="15" fill="rgb(208,72,49)"/><text x="27.00" y="1374.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1380" width="2" height="15" fill="rgb(241,153,9)"/><text x="27.00" y="1390.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.18%)</title><rect x="24" y="1396" width="2" height="15" fill="rgb(219,152,27)"/><text x="27.00" y="1406.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (8 samples, 1.41%)</title><rect x="12" y="292" width="16" height="15" fill="rgb(250,214,30)"/><text x="15.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.41%)</title><rect x="12" y="308" width="16" height="15" fill="rgb(215,50,47)"/><text x="15.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.41%)</title><rect x="12" y="324" width="16" height="15" fill="rgb(241,205,34)"/><text x="15.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.41%)</title><rect x="12" y="340" width="16" height="15" fill="rgb(236,17,23)"/><text x="15.00" y="350.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="356" width="2" height="15" fill="rgb(230,62,27)"/><text x="29.00" y="366.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="26" y="372" width="2" height="15" fill="rgb(243,110,25)"/><text x="29.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="388" width="2" height="15" fill="rgb(219,107,37)"/><text x="29.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.18%)</title><rect x="26" y="404" width="2" height="15" fill="rgb(240,92,42)"/><text x="29.00" y="414.50"></text></g><g><title>0x7fe0ff53a995 (libdl-2.29.so) (1 samples, 0.18%)</title><rect x="26" y="420" width="2" height="15" fill="rgb(216,88,27)"/><text x="29.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.18%)</title><rect x="26" y="436" width="2" height="15" fill="rgb(227,177,42)"/><text x="29.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.18%)</title><rect x="26" y="452" width="2" height="15" fill="rgb(248,151,52)"/><text x="29.00" y="462.50"></text></g><g><title>0x7fe0ff53a258 (libdl-2.29.so) (1 samples, 0.18%)</title><rect x="26" y="468" width="2" height="15" fill="rgb(208,13,21)"/><text x="29.00" y="478.50"></text></g><g><title>0x7fe0ff587d7a (ld-2.29.so) (1 samples, 0.18%)</title><rect x="26" y="484" width="2" height="15" fill="rgb(253,198,4)"/><text x="29.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.18%)</title><rect x="26" y="500" width="2" height="15" fill="rgb(233,27,27)"/><text x="29.00" y="510.50"></text></g><g><title>0x7fe0ff588345 (ld-2.29.so) (1 samples, 0.18%)</title><rect x="26" y="516" width="2" height="15" fill="rgb(209,139,18)"/><text x="29.00" y="526.50"></text></g><g><title>0x7fe0ff580fec (ld-2.29.so) (1 samples, 0.18%)</title><rect x="26" y="532" width="2" height="15" fill="rgb(239,155,34)"/><text x="29.00" y="542.50"></text></g><g><title>0x7fe0ff57f44b (ld-2.29.so) (1 samples, 0.18%)</title><rect x="26" y="548" width="2" height="15" fill="rgb(216,30,39)"/><text x="29.00" y="558.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py) (1 samples, 0.18%)</title><rect x="28" y="580" width="2" height="15" fill="rgb(249,17,34)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="596" width="2" height="15" fill="rgb(254,135,13)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="612" width="2" height="15" fill="rgb(210,160,38)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="628" width="2" height="15" fill="rgb(253,122,35)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="28" y="644" width="2" height="15" fill="rgb(218,116,13)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="660" width="2" height="15" fill="rgb(222,221,12)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csr.py) (1 samples, 0.18%)</title><rect x="28" y="676" width="2" height="15" fill="rgb(233,202,39)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="692" width="2" height="15" fill="rgb(242,172,2)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="708" width="2" height="15" fill="rgb(224,127,49)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="724" width="2" height="15" fill="rgb(235,12,14)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="28" y="740" width="2" height="15" fill="rgb(252,109,31)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="756" width="2" height="15" fill="rgb(218,12,18)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/compressed.py) (1 samples, 0.18%)</title><rect x="28" y="772" width="2" height="15" fill="rgb(216,121,39)"/><text x="31.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="788" width="2" height="15" fill="rgb(226,126,7)"/><text x="31.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="804" width="2" height="15" fill="rgb(239,137,35)"/><text x="31.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="820" width="2" height="15" fill="rgb(254,4,12)"/><text x="31.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="28" y="836" width="2" height="15" fill="rgb(211,146,22)"/><text x="31.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="852" width="2" height="15" fill="rgb(254,105,1)"/><text x="31.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/_util.py) (1 samples, 0.18%)</title><rect x="28" y="868" width="2" height="15" fill="rgb(227,48,29)"/><text x="31.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="884" width="2" height="15" fill="rgb(244,23,22)"/><text x="31.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="900" width="2" height="15" fill="rgb(214,216,23)"/><text x="31.00" y="910.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="28" y="916" width="2" height="15" fill="rgb(245,58,41)"/><text x="31.00" y="926.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="28" y="932" width="2" height="15" fill="rgb(245,95,49)"/><text x="31.00" y="942.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="28" y="948" width="2" height="15" fill="rgb(213,160,54)"/><text x="31.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="28" y="964" width="2" height="15" fill="rgb(234,150,53)"/><text x="31.00" y="974.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.18%)</title><rect x="28" y="980" width="2" height="15" fill="rgb(228,84,0)"/><text x="31.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="916" width="2" height="15" fill="rgb(213,26,25)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="932" width="2" height="15" fill="rgb(250,44,30)"/><text x="33.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="948" width="2" height="15" fill="rgb(217,79,43)"/><text x="33.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="30" y="964" width="2" height="15" fill="rgb(253,98,37)"/><text x="33.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="980" width="2" height="15" fill="rgb(207,191,46)"/><text x="33.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.18%)</title><rect x="30" y="996" width="2" height="15" fill="rgb(232,59,16)"/><text x="33.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1012" width="2" height="15" fill="rgb(223,111,51)"/><text x="33.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1028" width="2" height="15" fill="rgb(253,142,16)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1044" width="2" height="15" fill="rgb(222,110,4)"/><text x="33.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1060" width="2" height="15" fill="rgb(215,66,22)"/><text x="33.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1076" width="2" height="15" fill="rgb(236,111,25)"/><text x="33.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="30" y="1092" width="2" height="15" fill="rgb(247,169,50)"/><text x="33.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1108" width="2" height="15" fill="rgb(206,123,31)"/><text x="33.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py) (1 samples, 0.18%)</title><rect x="30" y="1124" width="2" height="15" fill="rgb(217,156,34)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1140" width="2" height="15" fill="rgb(226,92,34)"/><text x="33.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1156" width="2" height="15" fill="rgb(219,133,8)"/><text x="33.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1172" width="2" height="15" fill="rgb(228,14,16)"/><text x="33.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="30" y="1188" width="2" height="15" fill="rgb(206,121,19)"/><text x="33.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1204" width="2" height="15" fill="rgb(248,171,16)"/><text x="33.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/_ivp/__init__.py) (1 samples, 0.18%)</title><rect x="30" y="1220" width="2" height="15" fill="rgb(242,69,51)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1236" width="2" height="15" fill="rgb(243,101,33)"/><text x="33.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1252" width="2" height="15" fill="rgb(251,134,0)"/><text x="33.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1268" width="2" height="15" fill="rgb(236,208,22)"/><text x="33.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="30" y="1284" width="2" height="15" fill="rgb(206,159,10)"/><text x="33.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1300" width="2" height="15" fill="rgb(239,80,44)"/><text x="33.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/_ivp/ivp.py) (1 samples, 0.18%)</title><rect x="30" y="1316" width="2" height="15" fill="rgb(246,164,10)"/><text x="33.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1332" width="2" height="15" fill="rgb(237,158,11)"/><text x="33.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1348" width="2" height="15" fill="rgb(225,123,45)"/><text x="33.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1364" width="2" height="15" fill="rgb(221,138,18)"/><text x="33.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="30" y="1380" width="2" height="15" fill="rgb(235,38,38)"/><text x="33.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="30" y="1396" width="2" height="15" fill="rgb(237,203,35)"/><text x="33.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/_ivp/radau.py) (1 samples, 0.18%)</title><rect x="30" y="1412" width="2" height="15" fill="rgb(225,118,17)"/><text x="33.00" y="1422.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.18%)</title><rect x="30" y="1428" width="2" height="15" fill="rgb(228,83,24)"/><text x="33.00" y="1438.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.18%)</title><rect x="30" y="1444" width="2" height="15" fill="rgb(253,37,15)"/><text x="33.00" y="1454.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.18%)</title><rect x="30" y="1460" width="2" height="15" fill="rgb(252,5,24)"/><text x="33.00" y="1470.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="30" y="1476" width="2" height="15" fill="rgb(214,99,35)"/><text x="33.00" y="1486.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="30" y="1492" width="2" height="15" fill="rgb(239,25,3)"/><text x="33.00" y="1502.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="30" y="1508" width="2" height="15" fill="rgb(244,10,5)"/><text x="33.00" y="1518.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="30" y="1524" width="2" height="15" fill="rgb(225,81,32)"/><text x="33.00" y="1534.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.18%)</title><rect x="30" y="1540" width="2" height="15" fill="rgb(223,202,5)"/><text x="33.00" y="1550.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="30" y="1556" width="2" height="15" fill="rgb(237,47,10)"/><text x="33.00" y="1566.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="30" y="1572" width="2" height="15" fill="rgb(228,54,33)"/><text x="33.00" y="1582.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.18%)</title><rect x="32" y="1060" width="2" height="15" fill="rgb(214,191,9)"/><text x="35.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.18%)</title><rect x="32" y="1076" width="2" height="15" fill="rgb(227,90,43)"/><text x="35.00" y="1086.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.18%)</title><rect x="32" y="1092" width="2" height="15" fill="rgb(205,183,21)"/><text x="35.00" y="1102.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.18%)</title><rect x="32" y="1108" width="2" height="15" fill="rgb(220,135,39)"/><text x="35.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.18%)</title><rect x="32" y="1124" width="2" height="15" fill="rgb(222,65,24)"/><text x="35.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.18%)</title><rect x="32" y="1140" width="2" height="15" fill="rgb(240,126,37)"/><text x="35.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.18%)</title><rect x="32" y="1156" width="2" height="15" fill="rgb(245,129,48)"/><text x="35.00" y="1166.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.18%)</title><rect x="32" y="1172" width="2" height="15" fill="rgb(238,100,49)"/><text x="35.00" y="1182.50"></text></g><g><title>&lt;genexpr&gt; (inspect.py) (1 samples, 0.18%)</title><rect x="32" y="1188" width="2" height="15" fill="rgb(239,164,3)"/><text x="35.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.11%)</title><rect x="12" y="196" width="25" height="15" fill="rgb(230,165,28)"/><text x="15.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.11%)</title><rect x="12" y="212" width="25" height="15" fill="rgb(252,219,23)"/><text x="15.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.11%)</title><rect x="12" y="228" width="25" height="15" fill="rgb(241,8,14)"/><text x="15.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.11%)</title><rect x="12" y="244" width="25" height="15" fill="rgb(211,92,37)"/><text x="15.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.11%)</title><rect x="12" y="260" width="25" height="15" fill="rgb(236,79,8)"/><text x="15.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.11%)</title><rect x="12" y="276" width="25" height="15" fill="rgb(253,153,38)"/><text x="15.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 0.70%)</title><rect x="28" y="292" width="9" height="15" fill="rgb(218,180,41)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="28" y="308" width="9" height="15" fill="rgb(229,37,52)"/><text x="31.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="28" y="324" width="9" height="15" fill="rgb(212,219,3)"/><text x="31.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="28" y="340" width="9" height="15" fill="rgb(235,218,45)"/><text x="31.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.70%)</title><rect x="28" y="356" width="9" height="15" fill="rgb(244,132,12)"/><text x="31.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="28" y="372" width="9" height="15" fill="rgb(238,213,9)"/><text x="31.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 0.70%)</title><rect x="28" y="388" width="9" height="15" fill="rgb(238,179,46)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="28" y="404" width="9" height="15" fill="rgb(227,55,1)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="28" y="420" width="9" height="15" fill="rgb(234,26,18)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="28" y="436" width="9" height="15" fill="rgb(208,147,0)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.70%)</title><rect x="28" y="452" width="9" height="15" fill="rgb(233,118,48)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="28" y="468" width="9" height="15" fill="rgb(222,138,51)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 0.70%)</title><rect x="28" y="484" width="9" height="15" fill="rgb(252,209,29)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="28" y="500" width="9" height="15" fill="rgb(210,46,45)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="28" y="516" width="9" height="15" fill="rgb(207,224,50)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="28" y="532" width="9" height="15" fill="rgb(207,207,36)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.70%)</title><rect x="28" y="548" width="9" height="15" fill="rgb(238,219,32)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="28" y="564" width="9" height="15" fill="rgb(250,128,36)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 0.53%)</title><rect x="30" y="580" width="7" height="15" fill="rgb(252,76,11)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="30" y="596" width="7" height="15" fill="rgb(213,5,18)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="30" y="612" width="7" height="15" fill="rgb(219,145,4)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="30" y="628" width="7" height="15" fill="rgb(218,127,51)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.53%)</title><rect x="30" y="644" width="7" height="15" fill="rgb(233,116,25)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="30" y="660" width="7" height="15" fill="rgb(242,33,31)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 0.53%)</title><rect x="30" y="676" width="7" height="15" fill="rgb(208,219,52)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="30" y="692" width="7" height="15" fill="rgb(223,229,50)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="30" y="708" width="7" height="15" fill="rgb(248,117,2)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="30" y="724" width="7" height="15" fill="rgb(236,223,51)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.53%)</title><rect x="30" y="740" width="7" height="15" fill="rgb(230,55,20)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="30" y="756" width="7" height="15" fill="rgb(205,185,7)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 0.53%)</title><rect x="30" y="772" width="7" height="15" fill="rgb(247,127,54)"/><text x="33.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="30" y="788" width="7" height="15" fill="rgb(249,229,9)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="30" y="804" width="7" height="15" fill="rgb(244,187,29)"/><text x="33.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="30" y="820" width="7" height="15" fill="rgb(217,147,12)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="30" y="836" width="7" height="15" fill="rgb(251,225,12)"/><text x="33.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="30" y="852" width="7" height="15" fill="rgb(235,54,35)"/><text x="33.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.53%)</title><rect x="30" y="868" width="7" height="15" fill="rgb(227,45,47)"/><text x="33.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="30" y="884" width="7" height="15" fill="rgb(247,109,31)"/><text x="33.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 0.53%)</title><rect x="30" y="900" width="7" height="15" fill="rgb(222,25,27)"/><text x="33.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="32" y="916" width="5" height="15" fill="rgb(248,36,35)"/><text x="35.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="32" y="932" width="5" height="15" fill="rgb(216,80,15)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="32" y="948" width="5" height="15" fill="rgb(245,212,8)"/><text x="35.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="32" y="964" width="5" height="15" fill="rgb(233,125,23)"/><text x="35.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="32" y="980" width="5" height="15" fill="rgb(253,195,45)"/><text x="35.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="32" y="996" width="5" height="15" fill="rgb(207,184,16)"/><text x="35.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="32" y="1012" width="5" height="15" fill="rgb(250,144,38)"/><text x="35.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.35%)</title><rect x="32" y="1028" width="5" height="15" fill="rgb(214,99,54)"/><text x="35.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.35%)</title><rect x="32" y="1044" width="5" height="15" fill="rgb(225,181,31)"/><text x="35.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.18%)</title><rect x="34" y="1060" width="3" height="15" fill="rgb(222,177,2)"/><text x="37.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.18%)</title><rect x="34" y="1076" width="3" height="15" fill="rgb(208,214,17)"/><text x="37.00" y="1086.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.18%)</title><rect x="34" y="1092" width="3" height="15" fill="rgb(213,23,45)"/><text x="37.00" y="1102.50"></text></g><g><title>findsource (inspect.py) (1 samples, 0.18%)</title><rect x="37" y="1364" width="2" height="15" fill="rgb(241,165,4)"/><text x="40.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="37" y="1124" width="6" height="15" fill="rgb(229,19,52)"/><text x="40.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="37" y="1140" width="6" height="15" fill="rgb(208,143,43)"/><text x="40.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="37" y="1156" width="6" height="15" fill="rgb(225,111,16)"/><text x="40.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.53%)</title><rect x="37" y="1172" width="6" height="15" fill="rgb(252,128,8)"/><text x="40.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="37" y="1188" width="6" height="15" fill="rgb(207,117,15)"/><text x="40.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (3 samples, 0.53%)</title><rect x="37" y="1204" width="6" height="15" fill="rgb(234,46,51)"/><text x="40.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="37" y="1220" width="6" height="15" fill="rgb(228,223,0)"/><text x="40.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="37" y="1236" width="6" height="15" fill="rgb(248,112,42)"/><text x="40.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="37" y="1252" width="6" height="15" fill="rgb(242,150,30)"/><text x="40.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.53%)</title><rect x="37" y="1268" width="6" height="15" fill="rgb(238,163,4)"/><text x="40.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="37" y="1284" width="6" height="15" fill="rgb(207,196,14)"/><text x="40.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (3 samples, 0.53%)</title><rect x="37" y="1300" width="6" height="15" fill="rgb(217,73,50)"/><text x="40.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (3 samples, 0.53%)</title><rect x="37" y="1316" width="6" height="15" fill="rgb(217,132,52)"/><text x="40.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (3 samples, 0.53%)</title><rect x="37" y="1332" width="6" height="15" fill="rgb(219,139,15)"/><text x="40.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (3 samples, 0.53%)</title><rect x="37" y="1348" width="6" height="15" fill="rgb(225,153,6)"/><text x="40.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (2 samples, 0.35%)</title><rect x="39" y="1364" width="4" height="15" fill="rgb(240,225,54)"/><text x="42.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (2 samples, 0.35%)</title><rect x="39" y="1380" width="4" height="15" fill="rgb(222,90,32)"/><text x="42.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.18%)</title><rect x="41" y="1396" width="2" height="15" fill="rgb(235,127,6)"/><text x="44.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.18%)</title><rect x="41" y="1412" width="2" height="15" fill="rgb(225,142,24)"/><text x="44.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="484" width="8" height="15" fill="rgb(206,169,31)"/><text x="40.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="500" width="8" height="15" fill="rgb(224,9,8)"/><text x="40.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="516" width="8" height="15" fill="rgb(241,90,3)"/><text x="40.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="532" width="8" height="15" fill="rgb(241,145,21)"/><text x="40.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.70%)</title><rect x="37" y="548" width="8" height="15" fill="rgb(221,219,17)"/><text x="40.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="564" width="8" height="15" fill="rgb(209,157,40)"/><text x="40.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 0.70%)</title><rect x="37" y="580" width="8" height="15" fill="rgb(214,11,12)"/><text x="40.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="596" width="8" height="15" fill="rgb(222,98,5)"/><text x="40.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="612" width="8" height="15" fill="rgb(218,195,12)"/><text x="40.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="628" width="8" height="15" fill="rgb(214,192,4)"/><text x="40.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.70%)</title><rect x="37" y="644" width="8" height="15" fill="rgb(216,84,19)"/><text x="40.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="660" width="8" height="15" fill="rgb(226,172,52)"/><text x="40.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 0.70%)</title><rect x="37" y="676" width="8" height="15" fill="rgb(212,64,6)"/><text x="40.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="692" width="8" height="15" fill="rgb(246,131,49)"/><text x="40.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="708" width="8" height="15" fill="rgb(213,80,27)"/><text x="40.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="724" width="8" height="15" fill="rgb(253,51,6)"/><text x="40.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.70%)</title><rect x="37" y="740" width="8" height="15" fill="rgb(237,177,15)"/><text x="40.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="756" width="8" height="15" fill="rgb(205,184,11)"/><text x="40.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 0.70%)</title><rect x="37" y="772" width="8" height="15" fill="rgb(219,58,10)"/><text x="40.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="788" width="8" height="15" fill="rgb(209,112,10)"/><text x="40.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="804" width="8" height="15" fill="rgb(239,1,47)"/><text x="40.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="820" width="8" height="15" fill="rgb(253,72,20)"/><text x="40.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.70%)</title><rect x="37" y="836" width="8" height="15" fill="rgb(233,54,49)"/><text x="40.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="852" width="8" height="15" fill="rgb(240,155,44)"/><text x="40.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 0.70%)</title><rect x="37" y="868" width="8" height="15" fill="rgb(212,20,0)"/><text x="40.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="884" width="8" height="15" fill="rgb(239,182,23)"/><text x="40.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="900" width="8" height="15" fill="rgb(211,78,30)"/><text x="40.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="916" width="8" height="15" fill="rgb(234,187,27)"/><text x="40.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="932" width="8" height="15" fill="rgb(244,228,14)"/><text x="40.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="948" width="8" height="15" fill="rgb(230,24,41)"/><text x="40.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="964" width="8" height="15" fill="rgb(230,191,6)"/><text x="40.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.70%)</title><rect x="37" y="980" width="8" height="15" fill="rgb(251,109,9)"/><text x="40.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="996" width="8" height="15" fill="rgb(246,137,49)"/><text x="40.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 0.70%)</title><rect x="37" y="1012" width="8" height="15" fill="rgb(216,210,28)"/><text x="40.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="1028" width="8" height="15" fill="rgb(222,104,37)"/><text x="40.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="1044" width="8" height="15" fill="rgb(254,0,10)"/><text x="40.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="1060" width="8" height="15" fill="rgb(207,218,35)"/><text x="40.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.70%)</title><rect x="37" y="1076" width="8" height="15" fill="rgb(225,197,7)"/><text x="40.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.70%)</title><rect x="37" y="1092" width="8" height="15" fill="rgb(211,105,31)"/><text x="40.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 0.70%)</title><rect x="37" y="1108" width="8" height="15" fill="rgb(231,21,36)"/><text x="40.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1124" width="2" height="15" fill="rgb(245,94,10)"/><text x="46.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1140" width="2" height="15" fill="rgb(249,216,24)"/><text x="46.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1156" width="2" height="15" fill="rgb(246,127,2)"/><text x="46.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1172" width="2" height="15" fill="rgb(218,113,33)"/><text x="46.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1188" width="2" height="15" fill="rgb(219,184,46)"/><text x="46.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="43" y="1204" width="2" height="15" fill="rgb(206,111,33)"/><text x="46.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1220" width="2" height="15" fill="rgb(250,67,11)"/><text x="46.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.18%)</title><rect x="43" y="1236" width="2" height="15" fill="rgb(221,163,44)"/><text x="46.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1252" width="2" height="15" fill="rgb(226,212,10)"/><text x="46.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1268" width="2" height="15" fill="rgb(236,58,45)"/><text x="46.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1284" width="2" height="15" fill="rgb(245,75,9)"/><text x="46.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1300" width="2" height="15" fill="rgb(227,109,20)"/><text x="46.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1316" width="2" height="15" fill="rgb(241,36,19)"/><text x="46.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="43" y="1332" width="2" height="15" fill="rgb(209,185,46)"/><text x="46.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1348" width="2" height="15" fill="rgb(242,8,3)"/><text x="46.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.18%)</title><rect x="43" y="1364" width="2" height="15" fill="rgb(248,83,13)"/><text x="46.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1380" width="2" height="15" fill="rgb(223,64,11)"/><text x="46.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1396" width="2" height="15" fill="rgb(215,193,53)"/><text x="46.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1412" width="2" height="15" fill="rgb(251,169,13)"/><text x="46.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="43" y="1428" width="2" height="15" fill="rgb(221,226,47)"/><text x="46.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="43" y="1444" width="2" height="15" fill="rgb(221,160,20)"/><text x="46.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.18%)</title><rect x="43" y="1460" width="2" height="15" fill="rgb(219,152,11)"/><text x="46.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.18%)</title><rect x="43" y="1476" width="2" height="15" fill="rgb(248,73,14)"/><text x="46.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.18%)</title><rect x="43" y="1492" width="2" height="15" fill="rgb(208,91,53)"/><text x="46.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.18%)</title><rect x="43" y="1508" width="2" height="15" fill="rgb(248,110,0)"/><text x="46.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.18%)</title><rect x="43" y="1524" width="2" height="15" fill="rgb(206,140,51)"/><text x="46.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="43" y="1540" width="2" height="15" fill="rgb(231,154,15)"/><text x="46.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.18%)</title><rect x="43" y="1556" width="2" height="15" fill="rgb(207,102,11)"/><text x="46.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.18%)</title><rect x="43" y="1572" width="2" height="15" fill="rgb(209,59,1)"/><text x="46.00" y="1582.50"></text></g><g><title>linspace (&lt;__array_function__ internals&gt;) (1 samples, 0.18%)</title><rect x="45" y="1828" width="2" height="15" fill="rgb(208,203,40)"/><text x="48.00" y="1838.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.18%)</title><rect x="45" y="1844" width="2" height="15" fill="rgb(219,62,4)"/><text x="48.00" y="1854.50"></text></g><g><title>linspace (numpy/core/function_base.py) (1 samples, 0.18%)</title><rect x="45" y="1860" width="2" height="15" fill="rgb(208,12,5)"/><text x="48.00" y="1870.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.18%)</title><rect x="45" y="1876" width="2" height="15" fill="rgb(225,228,18)"/><text x="48.00" y="1886.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.18%)</title><rect x="45" y="1892" width="2" height="15" fill="rgb(211,50,51)"/><text x="48.00" y="1902.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="45" y="1908" width="2" height="15" fill="rgb(237,109,17)"/><text x="48.00" y="1918.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="45" y="1924" width="2" height="15" fill="rgb(247,144,31)"/><text x="48.00" y="1934.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.18%)</title><rect x="45" y="1940" width="2" height="15" fill="rgb(251,171,45)"/><text x="48.00" y="1950.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.18%)</title><rect x="45" y="1956" width="2" height="15" fill="rgb(247,215,13)"/><text x="48.00" y="1966.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.35%)</title><rect x="45" y="724" width="4" height="15" fill="rgb(235,106,26)"/><text x="48.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="740" width="4" height="15" fill="rgb(231,86,9)"/><text x="48.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="756" width="4" height="15" fill="rgb(207,176,48)"/><text x="48.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="772" width="4" height="15" fill="rgb(236,169,5)"/><text x="48.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="45" y="788" width="4" height="15" fill="rgb(223,60,10)"/><text x="48.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="804" width="4" height="15" fill="rgb(246,23,37)"/><text x="48.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.35%)</title><rect x="45" y="820" width="4" height="15" fill="rgb(252,193,21)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="836" width="4" height="15" fill="rgb(238,213,31)"/><text x="48.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="852" width="4" height="15" fill="rgb(218,36,52)"/><text x="48.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="868" width="4" height="15" fill="rgb(213,213,51)"/><text x="48.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="45" y="884" width="4" height="15" fill="rgb(218,97,23)"/><text x="48.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="900" width="4" height="15" fill="rgb(251,30,11)"/><text x="48.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.35%)</title><rect x="45" y="916" width="4" height="15" fill="rgb(219,118,35)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="932" width="4" height="15" fill="rgb(246,175,35)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="948" width="4" height="15" fill="rgb(218,7,44)"/><text x="48.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="964" width="4" height="15" fill="rgb(220,30,47)"/><text x="48.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="45" y="980" width="4" height="15" fill="rgb(245,212,33)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="996" width="4" height="15" fill="rgb(214,13,21)"/><text x="48.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.35%)</title><rect x="45" y="1012" width="4" height="15" fill="rgb(249,9,42)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1028" width="4" height="15" fill="rgb(251,46,15)"/><text x="48.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1044" width="4" height="15" fill="rgb(232,95,53)"/><text x="48.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1060" width="4" height="15" fill="rgb(207,167,1)"/><text x="48.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="45" y="1076" width="4" height="15" fill="rgb(210,194,48)"/><text x="48.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1092" width="4" height="15" fill="rgb(221,18,46)"/><text x="48.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.35%)</title><rect x="45" y="1108" width="4" height="15" fill="rgb(243,64,34)"/><text x="48.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1124" width="4" height="15" fill="rgb(226,4,30)"/><text x="48.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1140" width="4" height="15" fill="rgb(244,204,10)"/><text x="48.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1156" width="4" height="15" fill="rgb(209,187,33)"/><text x="48.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="45" y="1172" width="4" height="15" fill="rgb(205,166,30)"/><text x="48.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1188" width="4" height="15" fill="rgb(217,183,28)"/><text x="48.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.35%)</title><rect x="45" y="1204" width="4" height="15" fill="rgb(227,209,45)"/><text x="48.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1220" width="4" height="15" fill="rgb(253,127,39)"/><text x="48.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1236" width="4" height="15" fill="rgb(238,59,0)"/><text x="48.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1252" width="4" height="15" fill="rgb(208,144,0)"/><text x="48.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="45" y="1268" width="4" height="15" fill="rgb(240,193,2)"/><text x="48.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1284" width="4" height="15" fill="rgb(214,184,35)"/><text x="48.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.35%)</title><rect x="45" y="1300" width="4" height="15" fill="rgb(210,34,30)"/><text x="48.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1316" width="4" height="15" fill="rgb(207,136,13)"/><text x="48.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1332" width="4" height="15" fill="rgb(222,206,17)"/><text x="48.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1348" width="4" height="15" fill="rgb(218,82,44)"/><text x="48.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="45" y="1364" width="4" height="15" fill="rgb(206,42,2)"/><text x="48.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1380" width="4" height="15" fill="rgb(218,220,1)"/><text x="48.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.35%)</title><rect x="45" y="1396" width="4" height="15" fill="rgb(215,224,23)"/><text x="48.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1412" width="4" height="15" fill="rgb(252,8,8)"/><text x="48.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1428" width="4" height="15" fill="rgb(239,94,21)"/><text x="48.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1444" width="4" height="15" fill="rgb(229,96,13)"/><text x="48.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="45" y="1460" width="4" height="15" fill="rgb(210,63,26)"/><text x="48.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1476" width="4" height="15" fill="rgb(240,110,21)"/><text x="48.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.35%)</title><rect x="45" y="1492" width="4" height="15" fill="rgb(227,186,26)"/><text x="48.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1508" width="4" height="15" fill="rgb(228,170,15)"/><text x="48.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1524" width="4" height="15" fill="rgb(223,208,30)"/><text x="48.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1540" width="4" height="15" fill="rgb(232,115,47)"/><text x="48.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="45" y="1556" width="4" height="15" fill="rgb(238,16,35)"/><text x="48.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1572" width="4" height="15" fill="rgb(238,40,23)"/><text x="48.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.35%)</title><rect x="45" y="1588" width="4" height="15" fill="rgb(246,62,6)"/><text x="48.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1604" width="4" height="15" fill="rgb(240,12,51)"/><text x="48.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1620" width="4" height="15" fill="rgb(248,163,33)"/><text x="48.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1636" width="4" height="15" fill="rgb(239,107,20)"/><text x="48.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="45" y="1652" width="4" height="15" fill="rgb(230,59,23)"/><text x="48.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1668" width="4" height="15" fill="rgb(241,198,49)"/><text x="48.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (2 samples, 0.35%)</title><rect x="45" y="1684" width="4" height="15" fill="rgb(234,103,5)"/><text x="48.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1700" width="4" height="15" fill="rgb(250,24,5)"/><text x="48.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1716" width="4" height="15" fill="rgb(228,153,15)"/><text x="48.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1732" width="4" height="15" fill="rgb(207,106,12)"/><text x="48.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.35%)</title><rect x="45" y="1748" width="4" height="15" fill="rgb(229,171,7)"/><text x="48.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.35%)</title><rect x="45" y="1764" width="4" height="15" fill="rgb(216,153,22)"/><text x="48.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (2 samples, 0.35%)</title><rect x="45" y="1780" width="4" height="15" fill="rgb(239,75,29)"/><text x="48.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (2 samples, 0.35%)</title><rect x="45" y="1796" width="4" height="15" fill="rgb(208,35,25)"/><text x="48.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (2 samples, 0.35%)</title><rect x="45" y="1812" width="4" height="15" fill="rgb(230,102,17)"/><text x="48.00" y="1822.50"></text></g><g><title>to_rgba (matplotlib/colors.py) (1 samples, 0.18%)</title><rect x="47" y="1828" width="2" height="15" fill="rgb(228,195,2)"/><text x="50.00" y="1838.50"></text></g><g><title>_to_rgba_no_colorcycle (matplotlib/colors.py) (1 samples, 0.18%)</title><rect x="47" y="1844" width="2" height="15" fill="rgb(253,193,1)"/><text x="50.00" y="1854.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 1.23%)</title><rect x="37" y="436" width="14" height="15" fill="rgb(244,131,3)"/><text x="40.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="37" y="452" width="14" height="15" fill="rgb(223,120,23)"/><text x="40.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.23%)</title><rect x="37" y="468" width="14" height="15" fill="rgb(252,146,45)"/><text x="40.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="45" y="484" width="6" height="15" fill="rgb(231,144,53)"/><text x="48.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.53%)</title><rect x="45" y="500" width="6" height="15" fill="rgb(205,104,3)"/><text x="48.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="45" y="516" width="6" height="15" fill="rgb(251,171,34)"/><text x="48.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.53%)</title><rect x="45" y="532" width="6" height="15" fill="rgb(226,26,30)"/><text x="48.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="45" y="548" width="6" height="15" fill="rgb(248,86,39)"/><text x="48.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="45" y="564" width="6" height="15" fill="rgb(219,96,22)"/><text x="48.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="45" y="580" width="6" height="15" fill="rgb(250,76,54)"/><text x="48.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.53%)</title><rect x="45" y="596" width="6" height="15" fill="rgb(222,179,23)"/><text x="48.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="45" y="612" width="6" height="15" fill="rgb(216,56,32)"/><text x="48.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.53%)</title><rect x="45" y="628" width="6" height="15" fill="rgb(222,35,10)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="45" y="644" width="6" height="15" fill="rgb(231,37,49)"/><text x="48.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="45" y="660" width="6" height="15" fill="rgb(232,95,39)"/><text x="48.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="45" y="676" width="6" height="15" fill="rgb(228,64,34)"/><text x="48.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.53%)</title><rect x="45" y="692" width="6" height="15" fill="rgb(254,66,8)"/><text x="48.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="45" y="708" width="6" height="15" fill="rgb(231,125,27)"/><text x="48.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.18%)</title><rect x="49" y="724" width="2" height="15" fill="rgb(249,102,54)"/><text x="52.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="49" y="740" width="2" height="15" fill="rgb(242,224,8)"/><text x="52.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="49" y="756" width="2" height="15" fill="rgb(205,35,43)"/><text x="52.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="49" y="772" width="2" height="15" fill="rgb(252,79,48)"/><text x="52.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="49" y="788" width="2" height="15" fill="rgb(236,161,47)"/><text x="52.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="49" y="804" width="2" height="15" fill="rgb(221,75,46)"/><text x="52.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/pytables.py) (1 samples, 0.18%)</title><rect x="49" y="820" width="2" height="15" fill="rgb(237,167,42)"/><text x="52.00" y="830.50"></text></g><g><title>AppendableMultiFrameTable (pandas/io/pytables.py) (1 samples, 0.18%)</title><rect x="49" y="836" width="2" height="15" fill="rgb(243,62,1)"/><text x="52.00" y="846.50"></text></g><g><title>compile (re.py) (1 samples, 0.18%)</title><rect x="49" y="852" width="2" height="15" fill="rgb(229,31,15)"/><text x="52.00" y="862.50"></text></g><g><title>_compile (re.py) (1 samples, 0.18%)</title><rect x="49" y="868" width="2" height="15" fill="rgb(224,2,9)"/><text x="52.00" y="878.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.18%)</title><rect x="49" y="884" width="2" height="15" fill="rgb(240,15,54)"/><text x="52.00" y="894.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="49" y="900" width="2" height="15" fill="rgb(212,113,50)"/><text x="52.00" y="910.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.18%)</title><rect x="49" y="916" width="2" height="15" fill="rgb(251,177,10)"/><text x="52.00" y="926.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="49" y="932" width="2" height="15" fill="rgb(240,125,0)"/><text x="52.00" y="942.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.18%)</title><rect x="49" y="948" width="2" height="15" fill="rgb(232,101,20)"/><text x="52.00" y="958.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.18%)</title><rect x="49" y="964" width="2" height="15" fill="rgb(206,194,20)"/><text x="52.00" y="974.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.18%)</title><rect x="49" y="980" width="2" height="15" fill="rgb(216,189,30)"/><text x="52.00" y="990.50"></text></g><g><title>0x7fe0ff2c8e7a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="49" y="996" width="2" height="15" fill="rgb(227,227,11)"/><text x="52.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 1.41%)</title><rect x="37" y="340" width="16" height="15" fill="rgb(226,226,35)"/><text x="40.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.41%)</title><rect x="37" y="356" width="16" height="15" fill="rgb(240,226,35)"/><text x="40.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.41%)</title><rect x="37" y="372" width="16" height="15" fill="rgb(223,128,2)"/><text x="40.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.41%)</title><rect x="37" y="388" width="16" height="15" fill="rgb(242,86,20)"/><text x="40.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.41%)</title><rect x="37" y="404" width="16" height="15" fill="rgb(246,104,26)"/><text x="40.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.41%)</title><rect x="37" y="420" width="16" height="15" fill="rgb(215,187,12)"/><text x="40.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.18%)</title><rect x="51" y="436" width="2" height="15" fill="rgb(217,154,33)"/><text x="54.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="452" width="2" height="15" fill="rgb(207,221,43)"/><text x="54.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="468" width="2" height="15" fill="rgb(238,7,17)"/><text x="54.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="484" width="2" height="15" fill="rgb(247,31,35)"/><text x="54.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="51" y="500" width="2" height="15" fill="rgb(231,178,48)"/><text x="54.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="516" width="2" height="15" fill="rgb(232,77,22)"/><text x="54.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py) (1 samples, 0.18%)</title><rect x="51" y="532" width="2" height="15" fill="rgb(237,156,52)"/><text x="54.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="548" width="2" height="15" fill="rgb(205,6,5)"/><text x="54.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="564" width="2" height="15" fill="rgb(235,207,25)"/><text x="54.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="580" width="2" height="15" fill="rgb(233,6,51)"/><text x="54.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="596" width="2" height="15" fill="rgb(209,159,47)"/><text x="54.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="612" width="2" height="15" fill="rgb(244,225,15)"/><text x="54.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="628" width="2" height="15" fill="rgb(250,97,24)"/><text x="54.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="51" y="644" width="2" height="15" fill="rgb(254,157,19)"/><text x="54.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="660" width="2" height="15" fill="rgb(206,27,44)"/><text x="54.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py) (1 samples, 0.18%)</title><rect x="51" y="676" width="2" height="15" fill="rgb(243,135,21)"/><text x="54.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="692" width="2" height="15" fill="rgb(221,4,33)"/><text x="54.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="708" width="2" height="15" fill="rgb(218,151,48)"/><text x="54.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="724" width="2" height="15" fill="rgb(244,131,6)"/><text x="54.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="51" y="740" width="2" height="15" fill="rgb(220,185,32)"/><text x="54.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="756" width="2" height="15" fill="rgb(227,157,17)"/><text x="54.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/__init__.py) (1 samples, 0.18%)</title><rect x="51" y="772" width="2" height="15" fill="rgb(245,30,53)"/><text x="54.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="788" width="2" height="15" fill="rgb(217,67,38)"/><text x="54.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="804" width="2" height="15" fill="rgb(224,138,31)"/><text x="54.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="820" width="2" height="15" fill="rgb(215,162,49)"/><text x="54.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="51" y="836" width="2" height="15" fill="rgb(230,104,50)"/><text x="54.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="51" y="852" width="2" height="15" fill="rgb(252,39,14)"/><text x="54.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio.py) (1 samples, 0.18%)</title><rect x="51" y="868" width="2" height="15" fill="rgb(225,163,32)"/><text x="54.00" y="878.50"></text></g><g><title>decorate (scipy/_lib/doccer.py) (1 samples, 0.18%)</title><rect x="51" y="884" width="2" height="15" fill="rgb(221,199,52)"/><text x="54.00" y="894.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.18%)</title><rect x="51" y="900" width="2" height="15" fill="rgb(241,168,40)"/><text x="54.00" y="910.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.18%)</title><rect x="51" y="916" width="2" height="15" fill="rgb(221,12,7)"/><text x="54.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.70%)</title><rect x="12" y="68" width="43" height="15" fill="rgb(232,10,7)"/><text x="15.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.70%)</title><rect x="12" y="84" width="43" height="15" fill="rgb(218,137,18)"/><text x="15.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.70%)</title><rect x="12" y="100" width="43" height="15" fill="rgb(229,185,18)"/><text x="15.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 3.70%)</title><rect x="12" y="116" width="43" height="15" fill="rgb(252,141,41)"/><text x="15.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.70%)</title><rect x="12" y="132" width="43" height="15" fill="rgb(207,145,43)"/><text x="15.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (21 samples, 3.70%)</title><rect x="12" y="148" width="43" height="15" fill="rgb(206,115,27)"/><text x="15.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.70%)</title><rect x="12" y="164" width="43" height="15" fill="rgb(250,58,42)"/><text x="15.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.70%)</title><rect x="12" y="180" width="43" height="15" fill="rgb(239,122,53)"/><text x="15.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.58%)</title><rect x="37" y="196" width="18" height="15" fill="rgb(238,38,31)"/><text x="40.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.58%)</title><rect x="37" y="212" width="18" height="15" fill="rgb(226,71,47)"/><text x="40.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.58%)</title><rect x="37" y="228" width="18" height="15" fill="rgb(248,135,14)"/><text x="40.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 1.58%)</title><rect x="37" y="244" width="18" height="15" fill="rgb(232,3,32)"/><text x="40.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.58%)</title><rect x="37" y="260" width="18" height="15" fill="rgb(214,35,38)"/><text x="40.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.58%)</title><rect x="37" y="276" width="18" height="15" fill="rgb(251,44,30)"/><text x="40.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.58%)</title><rect x="37" y="292" width="18" height="15" fill="rgb(220,188,24)"/><text x="40.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.58%)</title><rect x="37" y="308" width="18" height="15" fill="rgb(211,226,21)"/><text x="40.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.58%)</title><rect x="37" y="324" width="18" height="15" fill="rgb(215,220,25)"/><text x="40.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.18%)</title><rect x="53" y="340" width="2" height="15" fill="rgb(247,101,50)"/><text x="56.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="356" width="2" height="15" fill="rgb(243,143,32)"/><text x="56.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="372" width="2" height="15" fill="rgb(245,6,40)"/><text x="56.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="388" width="2" height="15" fill="rgb(246,114,21)"/><text x="56.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="404" width="2" height="15" fill="rgb(250,162,36)"/><text x="56.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="420" width="2" height="15" fill="rgb(210,112,32)"/><text x="56.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="436" width="2" height="15" fill="rgb(252,150,22)"/><text x="56.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="53" y="452" width="2" height="15" fill="rgb(209,178,14)"/><text x="56.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="468" width="2" height="15" fill="rgb(209,17,51)"/><text x="56.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.18%)</title><rect x="53" y="484" width="2" height="15" fill="rgb(250,4,4)"/><text x="56.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="500" width="2" height="15" fill="rgb(215,0,30)"/><text x="56.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="516" width="2" height="15" fill="rgb(248,6,50)"/><text x="56.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="532" width="2" height="15" fill="rgb(220,94,19)"/><text x="56.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="53" y="548" width="2" height="15" fill="rgb(214,108,30)"/><text x="56.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="564" width="2" height="15" fill="rgb(217,198,25)"/><text x="56.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.18%)</title><rect x="53" y="580" width="2" height="15" fill="rgb(251,2,29)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="596" width="2" height="15" fill="rgb(210,174,11)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="612" width="2" height="15" fill="rgb(244,31,16)"/><text x="56.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="628" width="2" height="15" fill="rgb(236,135,35)"/><text x="56.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="644" width="2" height="15" fill="rgb(252,227,1)"/><text x="56.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="660" width="2" height="15" fill="rgb(246,88,29)"/><text x="56.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="676" width="2" height="15" fill="rgb(236,155,48)"/><text x="56.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="53" y="692" width="2" height="15" fill="rgb(242,81,6)"/><text x="56.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="708" width="2" height="15" fill="rgb(223,86,42)"/><text x="56.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.18%)</title><rect x="53" y="724" width="2" height="15" fill="rgb(238,217,13)"/><text x="56.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="740" width="2" height="15" fill="rgb(251,33,9)"/><text x="56.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="756" width="2" height="15" fill="rgb(240,228,10)"/><text x="56.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="772" width="2" height="15" fill="rgb(230,13,16)"/><text x="56.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="53" y="788" width="2" height="15" fill="rgb(210,185,40)"/><text x="56.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="804" width="2" height="15" fill="rgb(213,10,1)"/><text x="56.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.18%)</title><rect x="53" y="820" width="2" height="15" fill="rgb(214,44,25)"/><text x="56.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="836" width="2" height="15" fill="rgb(231,84,10)"/><text x="56.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="852" width="2" height="15" fill="rgb(215,103,31)"/><text x="56.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="868" width="2" height="15" fill="rgb(234,147,49)"/><text x="56.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="53" y="884" width="2" height="15" fill="rgb(247,209,7)"/><text x="56.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="900" width="2" height="15" fill="rgb(219,113,19)"/><text x="56.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.18%)</title><rect x="53" y="916" width="2" height="15" fill="rgb(230,87,1)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="932" width="2" height="15" fill="rgb(220,121,42)"/><text x="56.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="948" width="2" height="15" fill="rgb(240,41,33)"/><text x="56.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="964" width="2" height="15" fill="rgb(217,39,14)"/><text x="56.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="980" width="2" height="15" fill="rgb(222,159,19)"/><text x="56.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="996" width="2" height="15" fill="rgb(249,186,7)"/><text x="56.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="1012" width="2" height="15" fill="rgb(225,153,15)"/><text x="56.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="53" y="1028" width="2" height="15" fill="rgb(243,134,2)"/><text x="56.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="1044" width="2" height="15" fill="rgb(244,183,40)"/><text x="56.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.18%)</title><rect x="53" y="1060" width="2" height="15" fill="rgb(249,111,13)"/><text x="56.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="1076" width="2" height="15" fill="rgb(218,104,54)"/><text x="56.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="1092" width="2" height="15" fill="rgb(217,108,28)"/><text x="56.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="53" y="1108" width="2" height="15" fill="rgb(210,17,27)"/><text x="56.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="53" y="1124" width="2" height="15" fill="rgb(218,41,31)"/><text x="56.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="53" y="1140" width="2" height="15" fill="rgb(249,148,29)"/><text x="56.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="53" y="1156" width="2" height="15" fill="rgb(235,191,41)"/><text x="56.00" y="1166.50"></text></g><g><title>0x7fe0ff2b1bc6 (libc-2.29.so) (3 samples, 0.53%)</title><rect x="101" y="132" width="6" height="15" fill="rgb(226,93,54)"/><text x="104.00" y="142.50"></text></g><g><title>0x7fe0ff2b1bdf (libc-2.29.so) (2 samples, 0.35%)</title><rect x="107" y="132" width="4" height="15" fill="rgb(224,109,38)"/><text x="110.00" y="142.50"></text></g><g><title>0x7fe0ff2b1c19 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="111" y="132" width="2" height="15" fill="rgb(220,17,33)"/><text x="114.00" y="142.50"></text></g><g><title>0x7fe0ff2b1c1c (libc-2.29.so) (1 samples, 0.18%)</title><rect x="113" y="132" width="2" height="15" fill="rgb(248,102,31)"/><text x="116.00" y="142.50"></text></g><g><title>0x7fe0ff2b1c20 (libc-2.29.so) (2 samples, 0.35%)</title><rect x="115" y="132" width="5" height="15" fill="rgb(244,50,38)"/><text x="118.00" y="142.50"></text></g><g><title>0x7fe0ff2b1c49 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="120" y="132" width="2" height="15" fill="rgb(252,52,3)"/><text x="123.00" y="142.50"></text></g><g><title>0x7fe0ff2b1c4d (libc-2.29.so) (1 samples, 0.18%)</title><rect x="122" y="132" width="2" height="15" fill="rgb(250,194,31)"/><text x="125.00" y="142.50"></text></g><g><title>0x7fe0ff2b1c5a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="124" y="132" width="2" height="15" fill="rgb(222,196,26)"/><text x="127.00" y="142.50"></text></g><g><title>0x7fe0ff2b1c6a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="126" y="132" width="2" height="15" fill="rgb(236,167,45)"/><text x="129.00" y="142.50"></text></g><g><title>0x7fe0ff2b1ac1 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="128" y="148" width="2" height="15" fill="rgb(209,132,43)"/><text x="131.00" y="158.50"></text></g><g><title>0x7fe0ff2b1c73 (libc-2.29.so) (2 samples, 0.35%)</title><rect x="128" y="132" width="4" height="15" fill="rgb(251,168,36)"/><text x="131.00" y="142.50"></text></g><g><title>0x7fe0ff2b1acd (libc-2.29.so) (1 samples, 0.18%)</title><rect x="130" y="148" width="2" height="15" fill="rgb(248,119,32)"/><text x="133.00" y="158.50"></text></g><g><title>0x7fe0ff2b1aa0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="132" y="148" width="2" height="15" fill="rgb(252,32,37)"/><text x="135.00" y="158.50"></text></g><g><title>0x7fe0ff2b2eb0 (libc-2.29.so) (17 samples, 2.99%)</title><rect x="101" y="116" width="35" height="15" fill="rgb(251,194,0)"/><text x="104.00" y="126.50">0x..</text></g><g><title>0x7fe0ff2b1ca7 (libc-2.29.so) (2 samples, 0.35%)</title><rect x="132" y="132" width="4" height="15" fill="rgb(234,196,11)"/><text x="135.00" y="142.50"></text></g><g><title>0x7fe0ff2b1b0e (libc-2.29.so) (1 samples, 0.18%)</title><rect x="134" y="148" width="2" height="15" fill="rgb(254,29,19)"/><text x="137.00" y="158.50"></text></g><g><title>0x7fe0bf322ff9 (?) (1 samples, 0.18%)</title><rect x="138" y="212" width="2" height="15" fill="rgb(241,193,5)"/><text x="141.00" y="222.50"></text></g><g><title>0x7fe0bf31def6 (?) (1 samples, 0.18%)</title><rect x="138" y="228" width="2" height="15" fill="rgb(228,70,23)"/><text x="141.00" y="238.50"></text></g><g><title>0x7fe0bf312962 (?) (1 samples, 0.18%)</title><rect x="138" y="244" width="2" height="15" fill="rgb(220,146,36)"/><text x="141.00" y="254.50"></text></g><g><title>0x7fe0bf3467a7 (?) (1 samples, 0.18%)</title><rect x="138" y="260" width="2" height="15" fill="rgb(221,124,50)"/><text x="141.00" y="270.50"></text></g><g><title>0x7fe0bf346379 (?) (1 samples, 0.18%)</title><rect x="138" y="276" width="2" height="15" fill="rgb(242,179,48)"/><text x="141.00" y="286.50"></text></g><g><title>0x7fe0bf7a48b8 (?) (1 samples, 0.18%)</title><rect x="138" y="292" width="2" height="15" fill="rgb(206,10,33)"/><text x="141.00" y="302.50"></text></g><g><title>0x7fe0bf7a2c7f (?) (1 samples, 0.18%)</title><rect x="138" y="308" width="2" height="15" fill="rgb(209,229,6)"/><text x="141.00" y="318.50"></text></g><g><title>0x7fe0bf7b599c (?) (1 samples, 0.18%)</title><rect x="138" y="324" width="2" height="15" fill="rgb(228,76,5)"/><text x="141.00" y="334.50"></text></g><g><title>0x7fe0bf49aad5 (?) (1 samples, 0.18%)</title><rect x="138" y="340" width="2" height="15" fill="rgb(243,140,32)"/><text x="141.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.18%)</title><rect x="140" y="212" width="2" height="15" fill="rgb(215,169,16)"/><text x="143.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="140" y="228" width="2" height="15" fill="rgb(236,98,20)"/><text x="143.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="140" y="244" width="2" height="15" fill="rgb(216,138,34)"/><text x="143.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="140" y="260" width="2" height="15" fill="rgb(250,45,43)"/><text x="143.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="140" y="276" width="2" height="15" fill="rgb(217,178,47)"/><text x="143.00" y="286.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="140" y="292" width="2" height="15" fill="rgb(211,200,13)"/><text x="143.00" y="302.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="142" y="228" width="3" height="15" fill="rgb(211,51,38)"/><text x="145.00" y="238.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="151" y="292" width="2" height="15" fill="rgb(213,57,24)"/><text x="154.00" y="302.50"></text></g><g><title>0x7fe0ff2b2991 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="151" y="308" width="2" height="15" fill="rgb(238,47,54)"/><text x="154.00" y="318.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="153" y="340" width="2" height="15" fill="rgb(229,153,0)"/><text x="156.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="153" y="356" width="2" height="15" fill="rgb(206,63,16)"/><text x="156.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="153" y="372" width="2" height="15" fill="rgb(236,71,3)"/><text x="156.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="153" y="388" width="2" height="15" fill="rgb(241,35,0)"/><text x="156.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="153" y="404" width="2" height="15" fill="rgb(206,105,10)"/><text x="156.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="153" y="420" width="2" height="15" fill="rgb(251,188,18)"/><text x="156.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="153" y="436" width="2" height="15" fill="rgb(242,124,1)"/><text x="156.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.35%)</title><rect x="155" y="340" width="4" height="15" fill="rgb(241,115,44)"/><text x="158.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="157" y="356" width="2" height="15" fill="rgb(218,186,17)"/><text x="160.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="157" y="372" width="2" height="15" fill="rgb(220,158,22)"/><text x="160.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="159" y="340" width="2" height="15" fill="rgb(212,209,46)"/><text x="162.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="161" y="340" width="2" height="15" fill="rgb(248,30,41)"/><text x="164.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="161" y="356" width="2" height="15" fill="rgb(213,119,12)"/><text x="164.00" y="366.50"></text></g><g><title>0x7fe0ff2d2dae (libc-2.29.so) (2 samples, 0.35%)</title><rect x="217" y="372" width="4" height="15" fill="rgb(252,212,48)"/><text x="220.00" y="382.50"></text></g><g><title>0x7fe0ff2d2db3 (libc-2.29.so) (3 samples, 0.53%)</title><rect x="221" y="372" width="7" height="15" fill="rgb(234,168,4)"/><text x="224.00" y="382.50"></text></g><g><title>0x7fe0ff2d2dbb (libc-2.29.so) (1 samples, 0.18%)</title><rect x="228" y="372" width="2" height="15" fill="rgb(233,134,10)"/><text x="231.00" y="382.50"></text></g><g><title>0x7fe0ff431e00 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="230" y="372" width="2" height="15" fill="rgb(252,190,13)"/><text x="233.00" y="382.50"></text></g><g><title>0x7fe0ff431e0a (libm-2.29.so) (2 samples, 0.35%)</title><rect x="232" y="372" width="4" height="15" fill="rgb(230,161,3)"/><text x="235.00" y="382.50"></text></g><g><title>0x7fe0ff431e14 (libm-2.29.so) (2 samples, 0.35%)</title><rect x="236" y="372" width="4" height="15" fill="rgb(207,36,42)"/><text x="239.00" y="382.50"></text></g><g><title>0x7fe0ff431e5f (libm-2.29.so) (1 samples, 0.18%)</title><rect x="240" y="372" width="2" height="15" fill="rgb(205,19,29)"/><text x="243.00" y="382.50"></text></g><g><title>0x7fe0ff431e7a (libm-2.29.so) (1 samples, 0.18%)</title><rect x="242" y="372" width="2" height="15" fill="rgb(216,14,12)"/><text x="245.00" y="382.50"></text></g><g><title>0x7fe0ff431e86 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="244" y="372" width="2" height="15" fill="rgb(252,36,16)"/><text x="247.00" y="382.50"></text></g><g><title>0x7fe0ff431e96 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="246" y="372" width="2" height="15" fill="rgb(249,43,43)"/><text x="249.00" y="382.50"></text></g><g><title>0x7fe0ff431e9e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="248" y="372" width="2" height="15" fill="rgb(213,105,1)"/><text x="251.00" y="382.50"></text></g><g><title>0x7fe0ff431ea2 (libm-2.29.so) (2 samples, 0.35%)</title><rect x="250" y="372" width="5" height="15" fill="rgb(224,137,39)"/><text x="253.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 8.27%)</title><rect x="163" y="340" width="98" height="15" fill="rgb(210,142,38)"/><text x="166.00" y="350.50">onnxruntime..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 4.93%)</title><rect x="203" y="356" width="58" height="15" fill="rgb(221,81,36)"/><text x="206.00" y="366.50">onnxru..</text></g><g><title>0x7fe0ff431ea6 (libm-2.29.so) (3 samples, 0.53%)</title><rect x="255" y="372" width="6" height="15" fill="rgb(252,17,37)"/><text x="258.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.46%)</title><rect x="261" y="340" width="29" height="15" fill="rgb(231,13,51)"/><text x="264.00" y="350.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.46%)</title><rect x="261" y="356" width="29" height="15" fill="rgb(241,38,43)"/><text x="264.00" y="366.50">on..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.35%)</title><rect x="286" y="372" width="4" height="15" fill="rgb(221,123,40)"/><text x="289.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.35%)</title><rect x="286" y="388" width="4" height="15" fill="rgb(223,160,39)"/><text x="289.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.35%)</title><rect x="286" y="404" width="4" height="15" fill="rgb(227,18,6)"/><text x="289.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="288" y="420" width="2" height="15" fill="rgb(207,133,28)"/><text x="291.00" y="430.50"></text></g><g><title>onnxruntime::TensorType&lt;float&gt;::GetElementType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="288" y="436" width="2" height="15" fill="rgb(239,104,44)"/><text x="291.00" y="446.50"></text></g><g><title>0x7fe0bf2eaba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="309" y="356" width="2" height="15" fill="rgb(254,132,33)"/><text x="312.00" y="366.50"></text></g><g><title>0x7fe0eed7ed50 (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="313" y="372" width="2" height="15" fill="rgb(215,211,24)"/><text x="316.00" y="382.50"></text></g><g><title>0x7fe0ff2b3b1c (libc-2.29.so) (1 samples, 0.18%)</title><rect x="398" y="388" width="2" height="15" fill="rgb(231,195,33)"/><text x="401.00" y="398.50"></text></g><g><title>0x7fe0ff2b3b49 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="400" y="388" width="2" height="15" fill="rgb(215,166,54)"/><text x="403.00" y="398.50"></text></g><g><title>0x7fe0ff2b3d36 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="402" y="388" width="2" height="15" fill="rgb(240,30,3)"/><text x="405.00" y="398.50"></text></g><g><title>0x7fe0ff2b3d48 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="404" y="388" width="2" height="15" fill="rgb(234,170,19)"/><text x="407.00" y="398.50"></text></g><g><title>0x7fe0ff2b3d67 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="406" y="388" width="2" height="15" fill="rgb(232,12,7)"/><text x="409.00" y="398.50"></text></g><g><title>0x7fe0ff2b3d81 (libc-2.29.so) (2 samples, 0.35%)</title><rect x="408" y="388" width="5" height="15" fill="rgb(247,88,36)"/><text x="411.00" y="398.50"></text></g><g><title>0x7fe0ff2b3d9f (libc-2.29.so) (1 samples, 0.18%)</title><rect x="413" y="388" width="2" height="15" fill="rgb(244,139,23)"/><text x="416.00" y="398.50"></text></g><g><title>0x7fe0ff2b3dd2 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="415" y="388" width="2" height="15" fill="rgb(215,109,44)"/><text x="418.00" y="398.50"></text></g><g><title>0x7fe0ff2b3dec (libc-2.29.so) (2 samples, 0.35%)</title><rect x="417" y="388" width="4" height="15" fill="rgb(236,202,32)"/><text x="420.00" y="398.50"></text></g><g><title>0x7fe0ff2b3fdc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="421" y="388" width="2" height="15" fill="rgb(228,187,17)"/><text x="424.00" y="398.50"></text></g><g><title>0x7fe0ff2b3fe2 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="423" y="388" width="2" height="15" fill="rgb(220,183,38)"/><text x="426.00" y="398.50"></text></g><g><title>0x7fe0ff2b4033 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="425" y="388" width="2" height="15" fill="rgb(205,227,29)"/><text x="428.00" y="398.50"></text></g><g><title>0x7fe0ff2b4040 (libc-2.29.so) (2 samples, 0.35%)</title><rect x="427" y="388" width="4" height="15" fill="rgb(212,163,52)"/><text x="430.00" y="398.50"></text></g><g><title>0x7fe0ff2b4050 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="431" y="388" width="2" height="15" fill="rgb(210,122,47)"/><text x="434.00" y="398.50"></text></g><g><title>0x7fe0ff2b406d (libc-2.29.so) (1 samples, 0.18%)</title><rect x="433" y="388" width="2" height="15" fill="rgb(205,17,38)"/><text x="436.00" y="398.50"></text></g><g><title>0x7fe0ff2b407f (libc-2.29.so) (1 samples, 0.18%)</title><rect x="435" y="388" width="2" height="15" fill="rgb(251,55,24)"/><text x="438.00" y="398.50"></text></g><g><title>0x7fe0ff2b4368 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="437" y="388" width="3" height="15" fill="rgb(205,153,33)"/><text x="440.00" y="398.50"></text></g><g><title>0x7fe0ff2b4384 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="440" y="388" width="2" height="15" fill="rgb(242,132,6)"/><text x="443.00" y="398.50"></text></g><g><title>0x7fe0ff2b4395 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="442" y="388" width="2" height="15" fill="rgb(246,196,10)"/><text x="445.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (65 samples, 11.44%)</title><rect x="311" y="356" width="135" height="15" fill="rgb(243,122,33)"/><text x="314.00" y="366.50">operator new (lib..</text></g><g><title>malloc (libc-2.29.so) (63 samples, 11.09%)</title><rect x="315" y="372" width="131" height="15" fill="rgb(230,61,39)"/><text x="318.00" y="382.50">malloc (libc-2.2..</text></g><g><title>0x7fe0ff2b43d1 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="444" y="388" width="2" height="15" fill="rgb(219,11,9)"/><text x="447.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.70%)</title><rect x="446" y="356" width="8" height="15" fill="rgb(205,211,11)"/><text x="449.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="452" y="372" width="2" height="15" fill="rgb(247,126,39)"/><text x="455.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (5 samples, 0.88%)</title><rect x="454" y="356" width="10" height="15" fill="rgb(234,117,35)"/><text x="457.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (153 samples, 26.94%)</title><rect x="153" y="308" width="318" height="15" fill="rgb(254,66,48)"/><text x="156.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (153 samples, 26.94%)</title><rect x="153" y="324" width="318" height="15" fill="rgb(210,141,10)"/><text x="156.00" y="334.50">onnxruntime::SequentialExecutor::Execute (..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (87 samples, 15.32%)</title><rect x="290" y="340" width="181" height="15" fill="rgb(217,79,33)"/><text x="293.00" y="350.50">onnxruntime::ml::ZipMap..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.53%)</title><rect x="464" y="356" width="7" height="15" fill="rgb(246,92,4)"/><text x="467.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (156 samples, 27.46%)</title><rect x="149" y="260" width="324" height="15" fill="rgb(215,182,33)"/><text x="152.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrun..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (155 samples, 27.29%)</title><rect x="151" y="276" width="322" height="15" fill="rgb(247,105,21)"/><text x="154.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (154 samples, 27.11%)</title><rect x="153" y="292" width="320" height="15" fill="rgb(212,28,2)"/><text x="156.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxrunti..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="471" y="308" width="2" height="15" fill="rgb(226,218,2)"/><text x="474.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="471" y="324" width="2" height="15" fill="rgb(242,56,16)"/><text x="474.00" y="334.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="473" y="260" width="2" height="15" fill="rgb(218,194,45)"/><text x="476.00" y="270.50"></text></g><g><title>array_finalize_get (getset.c) (1 samples, 0.18%)</title><rect x="473" y="276" width="2" height="15" fill="rgb(251,12,54)"/><text x="476.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.52%)</title><rect x="616" y="276" width="42" height="15" fill="rgb(227,60,53)"/><text x="619.00" y="286.50">pyb..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (90 samples, 15.85%)</title><rect x="475" y="260" width="187" height="15" fill="rgb(235,216,25)"/><text x="478.00" y="270.50">pybind11::detail::map_ca..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.35%)</title><rect x="658" y="276" width="4" height="15" fill="rgb(245,142,10)"/><text x="661.00" y="286.50"></text></g><g><title>0x7fe0ff2b2906 (libc-2.29.so) (2 samples, 0.35%)</title><rect x="662" y="292" width="4" height="15" fill="rgb(238,117,28)"/><text x="665.00" y="302.50"></text></g><g><title>0x7fe0ff2b291e (libc-2.29.so) (1 samples, 0.18%)</title><rect x="666" y="292" width="2" height="15" fill="rgb(212,106,35)"/><text x="669.00" y="302.50"></text></g><g><title>0x7fe0ff2b292c (libc-2.29.so) (1 samples, 0.18%)</title><rect x="668" y="292" width="2" height="15" fill="rgb(211,161,4)"/><text x="671.00" y="302.50"></text></g><g><title>0x7fe0ff2b2961 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="670" y="292" width="2" height="15" fill="rgb(242,204,43)"/><text x="673.00" y="302.50"></text></g><g><title>0x7fe0ff2b2971 (libc-2.29.so) (2 samples, 0.35%)</title><rect x="672" y="292" width="4" height="15" fill="rgb(220,42,52)"/><text x="675.00" y="302.50"></text></g><g><title>0x7fe0ff2b2982 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="676" y="292" width="2" height="15" fill="rgb(222,199,18)"/><text x="679.00" y="302.50"></text></g><g><title>0x7fe0ff2b29d3 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="678" y="292" width="3" height="15" fill="rgb(235,34,2)"/><text x="681.00" y="302.50"></text></g><g><title>0x7fe0ff2b2a51 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="681" y="292" width="2" height="15" fill="rgb(253,133,35)"/><text x="684.00" y="302.50"></text></g><g><title>0x7fe0ff2b2d02 (libc-2.29.so) (2 samples, 0.35%)</title><rect x="683" y="292" width="4" height="15" fill="rgb(222,68,28)"/><text x="686.00" y="302.50"></text></g><g><title>0x7fe0ff2b2d07 (libc-2.29.so) (10 samples, 1.76%)</title><rect x="687" y="292" width="21" height="15" fill="rgb(219,211,43)"/><text x="690.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="708" y="292" width="2" height="15" fill="rgb(216,111,35)"/><text x="711.00" y="302.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="710" y="292" width="2" height="15" fill="rgb(239,177,30)"/><text x="713.00" y="302.50"></text></g><g><title>0x7fe0eed7f7a0 (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="720" y="308" width="2" height="15" fill="rgb(224,61,45)"/><text x="723.00" y="318.50"></text></g><g><title>0x7fe0ff2b2a01 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="722" y="308" width="2" height="15" fill="rgb(226,110,45)"/><text x="725.00" y="318.50"></text></g><g><title>0x7fe0ff2b2a51 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="724" y="308" width="2" height="15" fill="rgb(251,36,3)"/><text x="727.00" y="318.50"></text></g><g><title>0x7fe0ff2b2d07 (libc-2.29.so) (3 samples, 0.53%)</title><rect x="726" y="308" width="6" height="15" fill="rgb(214,167,12)"/><text x="729.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.35%)</title><rect x="732" y="308" width="5" height="15" fill="rgb(222,23,34)"/><text x="735.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (286 samples, 50.35%)</title><rect x="145" y="244" width="594" height="15" fill="rgb(216,189,44)"/><text x="148.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::In..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (37 samples, 6.51%)</title><rect x="662" y="260" width="77" height="15" fill="rgb(222,150,41)"/><text x="665.00" y="270.50">std::vec..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (37 samples, 6.51%)</title><rect x="662" y="276" width="77" height="15" fill="rgb(214,219,16)"/><text x="665.00" y="286.50">onnxrunt..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 2.29%)</title><rect x="712" y="292" width="27" height="15" fill="rgb(222,187,41)"/><text x="715.00" y="302.50">s..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="737" y="308" width="2" height="15" fill="rgb(221,101,18)"/><text x="740.00" y="318.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="739" y="244" width="2" height="15" fill="rgb(238,221,36)"/><text x="742.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="741" y="244" width="2" height="15" fill="rgb(207,29,9)"/><text x="744.00" y="254.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="741" y="260" width="2" height="15" fill="rgb(235,3,51)"/><text x="744.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="743" y="244" width="2" height="15" fill="rgb(250,17,54)"/><text x="746.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="743" y="260" width="2" height="15" fill="rgb(212,24,32)"/><text x="746.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (294 samples, 51.76%)</title><rect x="136" y="132" width="611" height="15" fill="rgb(210,126,43)"/><text x="139.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (294 samples, 51.76%)</title><rect x="136" y="148" width="611" height="15" fill="rgb(252,84,15)"/><text x="139.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (294 samples, 51.76%)</title><rect x="136" y="164" width="611" height="15" fill="rgb(253,203,45)"/><text x="139.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (294 samples, 51.76%)</title><rect x="136" y="180" width="611" height="15" fill="rgb(245,199,33)"/><text x="139.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (294 samples, 51.76%)</title><rect x="136" y="196" width="611" height="15" fill="rgb(244,228,46)"/><text x="139.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (291 samples, 51.23%)</title><rect x="142" y="212" width="605" height="15" fill="rgb(247,63,35)"/><text x="145.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (290 samples, 51.06%)</title><rect x="145" y="228" width="602" height="15" fill="rgb(230,138,8)"/><text x="148.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybin..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="745" y="244" width="2" height="15" fill="rgb(222,75,52)"/><text x="748.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="745" y="260" width="2" height="15" fill="rgb(205,107,35)"/><text x="748.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="745" y="276" width="2" height="15" fill="rgb(225,96,20)"/><text x="748.00" y="286.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py) (334 samples, 58.80%)</title><rect x="55" y="68" width="694" height="15" fill="rgb(231,140,48)"/><text x="58.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py) (334 samples, 58.80%)</title><rect x="55" y="84" width="694" height="15" fill="rgb(254,192,54)"/><text x="58.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py)</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py) (334 samples, 58.80%)</title><rect x="55" y="100" width="694" height="15" fill="rgb(229,116,38)"/><text x="58.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (295 samples, 51.94%)</title><rect x="136" y="116" width="613" height="15" fill="rgb(245,71,14)"/><text x="139.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.18%)</title><rect x="747" y="132" width="2" height="15" fill="rgb(224,65,27)"/><text x="750.00" y="142.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.18%)</title><rect x="791" y="196" width="2" height="15" fill="rgb(229,204,20)"/><text x="794.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.53%)</title><rect x="793" y="212" width="6" height="15" fill="rgb(213,2,25)"/><text x="796.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.35%)</title><rect x="795" y="228" width="4" height="15" fill="rgb(251,188,45)"/><text x="798.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.35%)</title><rect x="795" y="244" width="4" height="15" fill="rgb(239,170,13)"/><text x="798.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.18%)</title><rect x="797" y="260" width="2" height="15" fill="rgb(225,36,23)"/><text x="800.00" y="270.50"></text></g><g><title>0x7fe0ff2d3120 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="803" y="244" width="2" height="15" fill="rgb(221,180,44)"/><text x="806.00" y="254.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (4 samples, 0.70%)</title><rect x="805" y="244" width="8" height="15" fill="rgb(237,107,27)"/><text x="808.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.70%)</title><rect x="805" y="260" width="8" height="15" fill="rgb(209,64,8)"/><text x="808.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (4 samples, 0.70%)</title><rect x="805" y="276" width="8" height="15" fill="rgb(232,179,22)"/><text x="808.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 0.70%)</title><rect x="805" y="292" width="8" height="15" fill="rgb(245,53,47)"/><text x="808.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (4 samples, 0.70%)</title><rect x="805" y="308" width="8" height="15" fill="rgb(215,18,45)"/><text x="808.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (4 samples, 0.70%)</title><rect x="805" y="324" width="8" height="15" fill="rgb(217,72,5)"/><text x="808.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (3 samples, 0.53%)</title><rect x="807" y="340" width="6" height="15" fill="rgb(252,111,27)"/><text x="810.00" y="350.50"></text></g><g><title>gemm (cblasfuncs.c) (3 samples, 0.53%)</title><rect x="813" y="340" width="7" height="15" fill="rgb(205,64,46)"/><text x="816.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.53%)</title><rect x="813" y="356" width="7" height="15" fill="rgb(223,95,15)"/><text x="816.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.53%)</title><rect x="813" y="372" width="7" height="15" fill="rgb(244,181,40)"/><text x="816.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.53%)</title><rect x="813" y="388" width="7" height="15" fill="rgb(236,47,30)"/><text x="816.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.70%)</title><rect x="813" y="276" width="9" height="15" fill="rgb(244,6,4)"/><text x="816.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (4 samples, 0.70%)</title><rect x="813" y="292" width="9" height="15" fill="rgb(221,158,30)"/><text x="816.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (4 samples, 0.70%)</title><rect x="813" y="308" width="9" height="15" fill="rgb(249,153,45)"/><text x="816.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (4 samples, 0.70%)</title><rect x="813" y="324" width="9" height="15" fill="rgb(214,3,30)"/><text x="816.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.18%)</title><rect x="820" y="340" width="2" height="15" fill="rgb(224,7,16)"/><text x="823.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.18%)</title><rect x="820" y="356" width="2" height="15" fill="rgb(249,151,47)"/><text x="823.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="820" y="372" width="2" height="15" fill="rgb(226,91,47)"/><text x="823.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="820" y="388" width="2" height="15" fill="rgb(245,22,39)"/><text x="823.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="820" y="404" width="2" height="15" fill="rgb(233,32,14)"/><text x="823.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.18%)</title><rect x="820" y="420" width="2" height="15" fill="rgb(229,207,33)"/><text x="823.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="820" y="436" width="2" height="15" fill="rgb(238,32,47)"/><text x="823.00" y="446.50"></text></g><g><title>0x7fe0ff2b3d44 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="820" y="452" width="2" height="15" fill="rgb(253,34,51)"/><text x="823.00" y="462.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.18%)</title><rect x="822" y="276" width="2" height="15" fill="rgb(234,156,9)"/><text x="825.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (10 samples, 1.76%)</title><rect x="813" y="244" width="21" height="15" fill="rgb(220,157,9)"/><text x="816.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;) (10 samples, 1.76%)</title><rect x="813" y="260" width="21" height="15" fill="rgb(207,43,30)"/><text x="816.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.88%)</title><rect x="824" y="276" width="10" height="15" fill="rgb(233,186,11)"/><text x="827.00" y="286.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.18%)</title><rect x="836" y="356" width="2" height="15" fill="rgb(227,58,4)"/><text x="839.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.18%)</title><rect x="836" y="372" width="2" height="15" fill="rgb(245,3,28)"/><text x="839.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.35%)</title><rect x="836" y="292" width="4" height="15" fill="rgb(244,171,6)"/><text x="839.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.35%)</title><rect x="836" y="308" width="4" height="15" fill="rgb(251,200,21)"/><text x="839.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.35%)</title><rect x="836" y="324" width="4" height="15" fill="rgb(245,59,17)"/><text x="839.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.35%)</title><rect x="836" y="340" width="4" height="15" fill="rgb(205,67,34)"/><text x="839.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.18%)</title><rect x="838" y="356" width="2" height="15" fill="rgb(226,133,44)"/><text x="841.00" y="366.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.18%)</title><rect x="840" y="324" width="3" height="15" fill="rgb(239,226,18)"/><text x="843.00" y="334.50"></text></g><g><title>0x7fe0ff2d2d50 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="847" y="356" width="2" height="15" fill="rgb(242,49,35)"/><text x="850.00" y="366.50"></text></g><g><title>0x7fe0ff2d2dbb (libc-2.29.so) (2 samples, 0.35%)</title><rect x="849" y="356" width="4" height="15" fill="rgb(215,180,0)"/><text x="852.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.23%)</title><rect x="840" y="292" width="15" height="15" fill="rgb(208,90,53)"/><text x="843.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 1.23%)</title><rect x="840" y="308" width="15" height="15" fill="rgb(205,114,33)"/><text x="843.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 1.06%)</title><rect x="843" y="324" width="12" height="15" fill="rgb(210,142,47)"/><text x="846.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (6 samples, 1.06%)</title><rect x="843" y="340" width="12" height="15" fill="rgb(232,84,40)"/><text x="846.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="853" y="356" width="2" height="15" fill="rgb(250,156,6)"/><text x="856.00" y="366.50"></text></g><g><title>0x7fe0ea59a33a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="855" y="308" width="2" height="15" fill="rgb(251,97,0)"/><text x="858.00" y="318.50"></text></g><g><title>0x7fe0ff431e37 (libm-2.29.so) (2 samples, 0.35%)</title><rect x="863" y="356" width="4" height="15" fill="rgb(227,87,44)"/><text x="866.00" y="366.50"></text></g><g><title>0x7fe0ff431e7e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="867" y="356" width="3" height="15" fill="rgb(219,80,41)"/><text x="870.00" y="366.50"></text></g><g><title>0x7fe0ea5bc214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.23%)</title><rect x="857" y="324" width="15" height="15" fill="rgb(210,169,30)"/><text x="860.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (6 samples, 1.06%)</title><rect x="859" y="340" width="13" height="15" fill="rgb(214,47,8)"/><text x="862.00" y="350.50"></text></g><g><title>0x7fe0ff431e96 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="870" y="356" width="2" height="15" fill="rgb(237,227,51)"/><text x="873.00" y="366.50"></text></g><g><title>0x7fe0ea5bc224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="872" y="324" width="4" height="15" fill="rgb(232,223,18)"/><text x="875.00" y="334.50"></text></g><g><title>0x7fe0ea59a33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.64%)</title><rect x="857" y="308" width="31" height="15" fill="rgb(244,169,51)"/><text x="860.00" y="318.50">0x..</text></g><g><title>0x7fe0ea5bc228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.06%)</title><rect x="876" y="324" width="12" height="15" fill="rgb(247,174,46)"/><text x="879.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (27 samples, 4.75%)</title><rect x="834" y="260" width="56" height="15" fill="rgb(215,13,2)"/><text x="837.00" y="270.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (26 samples, 4.58%)</title><rect x="836" y="276" width="54" height="15" fill="rgb(205,226,7)"/><text x="839.00" y="286.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (17 samples, 2.99%)</title><rect x="855" y="292" width="35" height="15" fill="rgb(242,130,50)"/><text x="858.00" y="302.50">tr..</text></g><g><title>0x7fe0ea59a345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="888" y="308" width="2" height="15" fill="rgb(209,161,47)"/><text x="891.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (44 samples, 7.75%)</title><rect x="801" y="228" width="91" height="15" fill="rgb(206,126,3)"/><text x="804.00" y="238.50">_run (mlpr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (28 samples, 4.93%)</title><rect x="834" y="244" width="58" height="15" fill="rgb(207,167,52)"/><text x="837.00" y="254.50">ufunc_..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.18%)</title><rect x="890" y="260" width="2" height="15" fill="rgb(251,104,17)"/><text x="893.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="895" y="260" width="2" height="15" fill="rgb(243,31,28)"/><text x="898.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="895" y="276" width="2" height="15" fill="rgb(218,49,23)"/><text x="898.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="895" y="292" width="2" height="15" fill="rgb(238,201,23)"/><text x="898.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="895" y="308" width="2" height="15" fill="rgb(231,44,28)"/><text x="898.00" y="318.50"></text></g><g><title>0x7fe0ff2d314a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="899" y="388" width="2" height="15" fill="rgb(217,31,29)"/><text x="902.00" y="398.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.18%)</title><rect x="901" y="388" width="2" height="15" fill="rgb(215,16,17)"/><text x="904.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.53%)</title><rect x="899" y="372" width="6" height="15" fill="rgb(205,52,27)"/><text x="902.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.18%)</title><rect x="903" y="388" width="2" height="15" fill="rgb(247,186,26)"/><text x="906.00" y="398.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c) (1 samples, 0.18%)</title><rect x="905" y="372" width="2" height="15" fill="rgb(248,190,29)"/><text x="908.00" y="382.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.18%)</title><rect x="907" y="372" width="2" height="15" fill="rgb(242,41,40)"/><text x="910.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (7 samples, 1.23%)</title><rect x="911" y="388" width="15" height="15" fill="rgb(232,226,50)"/><text x="914.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (4 samples, 0.70%)</title><rect x="917" y="404" width="9" height="15" fill="rgb(205,152,30)"/><text x="920.00" y="414.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="926" y="388" width="2" height="15" fill="rgb(210,24,30)"/><text x="929.00" y="398.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="928" y="388" width="2" height="15" fill="rgb(245,78,43)"/><text x="931.00" y="398.50"></text></g><g><title>array_sum (methods.c) (19 samples, 3.35%)</title><rect x="897" y="260" width="39" height="15" fill="rgb(213,108,6)"/><text x="900.00" y="270.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (19 samples, 3.35%)</title><rect x="897" y="276" width="39" height="15" fill="rgb(212,62,32)"/><text x="900.00" y="286.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (18 samples, 3.17%)</title><rect x="899" y="292" width="37" height="15" fill="rgb(231,42,2)"/><text x="902.00" y="302.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (18 samples, 3.17%)</title><rect x="899" y="308" width="37" height="15" fill="rgb(219,100,45)"/><text x="902.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (18 samples, 3.17%)</title><rect x="899" y="324" width="37" height="15" fill="rgb(238,139,34)"/><text x="902.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (18 samples, 3.17%)</title><rect x="899" y="340" width="37" height="15" fill="rgb(245,153,53)"/><text x="902.00" y="350.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (18 samples, 3.17%)</title><rect x="899" y="356" width="37" height="15" fill="rgb(223,103,43)"/><text x="902.00" y="366.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (13 samples, 2.29%)</title><rect x="909" y="372" width="27" height="15" fill="rgb(219,220,47)"/><text x="912.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.53%)</title><rect x="930" y="388" width="6" height="15" fill="rgb(228,213,34)"/><text x="933.00" y="398.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.18%)</title><rect x="934" y="404" width="2" height="15" fill="rgb(239,216,38)"/><text x="937.00" y="414.50"></text></g><g><title>PyUFunc_AbsoluteTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="936" y="292" width="2" height="15" fill="rgb(206,203,27)"/><text x="939.00" y="302.50"></text></g><g><title>FLOAT_divide (loops.c.src) (1 samples, 0.18%)</title><rect x="938" y="324" width="2" height="15" fill="rgb(226,205,26)"/><text x="941.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (1 samples, 0.18%)</title><rect x="938" y="340" width="2" height="15" fill="rgb(240,229,28)"/><text x="941.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (1 samples, 0.18%)</title><rect x="938" y="356" width="2" height="15" fill="rgb(215,96,8)"/><text x="941.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.18%)</title><rect x="938" y="372" width="2" height="15" fill="rgb(242,174,4)"/><text x="941.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="940" y="324" width="2" height="15" fill="rgb(235,54,6)"/><text x="943.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.18%)</title><rect x="940" y="340" width="2" height="15" fill="rgb(239,214,9)"/><text x="943.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="940" y="356" width="2" height="15" fill="rgb(233,19,34)"/><text x="943.00" y="366.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="940" y="372" width="2" height="15" fill="rgb(243,211,4)"/><text x="943.00" y="382.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="940" y="388" width="2" height="15" fill="rgb(240,154,54)"/><text x="943.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.18%)</title><rect x="942" y="324" width="2" height="15" fill="rgb(213,106,23)"/><text x="945.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="942" y="340" width="2" height="15" fill="rgb(229,16,35)"/><text x="945.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.06%)</title><rect x="938" y="308" width="13" height="15" fill="rgb(226,43,37)"/><text x="941.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.53%)</title><rect x="944" y="324" width="7" height="15" fill="rgb(239,179,6)"/><text x="947.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.53%)</title><rect x="944" y="340" width="7" height="15" fill="rgb(206,59,14)"/><text x="947.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.53%)</title><rect x="944" y="356" width="7" height="15" fill="rgb(228,219,20)"/><text x="947.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="949" y="372" width="2" height="15" fill="rgb(233,35,48)"/><text x="952.00" y="382.50"></text></g><g><title>FLOAT_absolute (loops.c.src) (1 samples, 0.18%)</title><rect x="951" y="324" width="2" height="15" fill="rgb(237,40,51)"/><text x="954.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src) (1 samples, 0.18%)</title><rect x="951" y="340" width="2" height="15" fill="rgb(226,89,12)"/><text x="954.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src) (1 samples, 0.18%)</title><rect x="951" y="356" width="2" height="15" fill="rgb(214,190,39)"/><text x="954.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.18%)</title><rect x="951" y="372" width="2" height="15" fill="rgb(225,116,6)"/><text x="954.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 1.41%)</title><rect x="938" y="292" width="17" height="15" fill="rgb(239,116,33)"/><text x="941.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.35%)</title><rect x="951" y="308" width="4" height="15" fill="rgb(250,105,7)"/><text x="954.00" y="318.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="953" y="324" width="2" height="15" fill="rgb(250,15,1)"/><text x="956.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 1.76%)</title><rect x="936" y="276" width="21" height="15" fill="rgb(248,132,41)"/><text x="939.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="955" y="292" width="2" height="15" fill="rgb(238,134,20)"/><text x="958.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="955" y="308" width="2" height="15" fill="rgb(238,219,30)"/><text x="958.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (101 samples, 17.78%)</title><rect x="749" y="132" width="210" height="15" fill="rgb(245,14,21)"/><text x="752.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (101 samples, 17.78%)</title><rect x="749" y="148" width="210" height="15" fill="rgb(217,164,48)"/><text x="752.00" y="158.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (100 samples, 17.61%)</title><rect x="751" y="164" width="208" height="15" fill="rgb(247,115,35)"/><text x="754.00" y="174.50">_run_sequence_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (94 samples, 16.55%)</title><rect x="764" y="180" width="195" height="15" fill="rgb(228,128,2)"/><text x="767.00" y="190.50">run (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (80 samples, 14.08%)</title><rect x="793" y="196" width="166" height="15" fill="rgb(231,78,27)"/><text x="796.00" y="206.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (77 samples, 13.56%)</title><rect x="799" y="212" width="160" height="15" fill="rgb(234,220,12)"/><text x="802.00" y="222.50">run (mlprodict/onnxr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (32 samples, 5.63%)</title><rect x="892" y="228" width="67" height="15" fill="rgb(232,119,50)"/><text x="895.00" y="238.50">_run (m..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (32 samples, 5.63%)</title><rect x="892" y="244" width="67" height="15" fill="rgb(207,185,41)"/><text x="895.00" y="254.50">norm_l1..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 1.94%)</title><rect x="936" y="260" width="23" height="15" fill="rgb(244,228,44)"/><text x="939.00" y="270.50">u..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.18%)</title><rect x="957" y="276" width="2" height="15" fill="rgb(241,42,31)"/><text x="960.00" y="286.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py) (102 samples, 17.96%)</title><rect x="749" y="100" width="212" height="15" fill="rgb(252,96,52)"/><text x="752.00" y="110.50">profile (bench_LogisticRegr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (102 samples, 17.96%)</title><rect x="749" y="116" width="212" height="15" fill="rgb(243,133,33)"/><text x="752.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="959" y="132" width="2" height="15" fill="rgb(230,80,28)"/><text x="962.00" y="142.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py) (103 samples, 18.13%)</title><rect x="749" y="68" width="214" height="15" fill="rgb(238,90,30)"/><text x="752.00" y="78.50">profile_pyrt (bench_Logistic..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py) (103 samples, 18.13%)</title><rect x="749" y="84" width="214" height="15" fill="rgb(250,223,3)"/><text x="752.00" y="94.50">setup_profile (bench_Logisti..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.18%)</title><rect x="961" y="100" width="2" height="15" fill="rgb(246,227,52)"/><text x="964.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.18%)</title><rect x="961" y="116" width="2" height="15" fill="rgb(244,68,27)"/><text x="964.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.18%)</title><rect x="961" y="132" width="2" height="15" fill="rgb(214,143,30)"/><text x="964.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.18%)</title><rect x="961" y="148" width="2" height="15" fill="rgb(234,101,20)"/><text x="964.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.18%)</title><rect x="961" y="164" width="2" height="15" fill="rgb(246,120,16)"/><text x="964.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.18%)</title><rect x="961" y="180" width="2" height="15" fill="rgb(231,149,32)"/><text x="964.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.18%)</title><rect x="961" y="196" width="2" height="15" fill="rgb(235,85,7)"/><text x="964.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="961" y="212" width="2" height="15" fill="rgb(244,135,43)"/><text x="964.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="961" y="228" width="2" height="15" fill="rgb(241,14,20)"/><text x="964.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="961" y="244" width="2" height="15" fill="rgb(214,132,36)"/><text x="964.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="961" y="260" width="2" height="15" fill="rgb(222,30,47)"/><text x="964.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="961" y="276" width="2" height="15" fill="rgb(240,199,2)"/><text x="964.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.18%)</title><rect x="961" y="292" width="2" height="15" fill="rgb(227,58,42)"/><text x="964.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="961" y="308" width="2" height="15" fill="rgb(247,6,1)"/><text x="964.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="961" y="324" width="2" height="15" fill="rgb(236,179,36)"/><text x="964.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="961" y="340" width="2" height="15" fill="rgb(239,209,53)"/><text x="964.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="961" y="356" width="2" height="15" fill="rgb(234,208,31)"/><text x="964.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="961" y="372" width="2" height="15" fill="rgb(249,71,28)"/><text x="964.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.18%)</title><rect x="961" y="388" width="2" height="15" fill="rgb(237,47,12)"/><text x="964.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.18%)</title><rect x="961" y="404" width="2" height="15" fill="rgb(218,168,0)"/><text x="964.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.18%)</title><rect x="961" y="420" width="2" height="15" fill="rgb(210,38,24)"/><text x="964.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="961" y="436" width="2" height="15" fill="rgb(237,114,19)"/><text x="964.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.18%)</title><rect x="961" y="452" width="2" height="15" fill="rgb(211,188,33)"/><text x="964.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.18%)</title><rect x="961" y="468" width="2" height="15" fill="rgb(233,67,42)"/><text x="964.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="961" y="484" width="2" height="15" fill="rgb(242,170,44)"/><text x="964.00" y="494.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="961" y="500" width="2" height="15" fill="rgb(221,154,1)"/><text x="964.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="961" y="516" width="2" height="15" fill="rgb(209,18,21)"/><text x="964.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="961" y="532" width="2" height="15" fill="rgb(235,119,12)"/><text x="964.00" y="542.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.18%)</title><rect x="967" y="180" width="2" height="15" fill="rgb(220,159,51)"/><text x="970.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.18%)</title><rect x="967" y="196" width="2" height="15" fill="rgb(215,35,14)"/><text x="970.00" y="206.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.18%)</title><rect x="967" y="212" width="2" height="15" fill="rgb(217,55,15)"/><text x="970.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.18%)</title><rect x="971" y="244" width="2" height="15" fill="rgb(227,96,7)"/><text x="974.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.18%)</title><rect x="971" y="260" width="2" height="15" fill="rgb(219,200,33)"/><text x="974.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.18%)</title><rect x="971" y="276" width="2" height="15" fill="rgb(228,119,6)"/><text x="974.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.18%)</title><rect x="971" y="292" width="2" height="15" fill="rgb(224,8,7)"/><text x="974.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.18%)</title><rect x="971" y="308" width="2" height="15" fill="rgb(237,89,26)"/><text x="974.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="978" y="292" width="2" height="15" fill="rgb(235,23,49)"/><text x="981.00" y="302.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.35%)</title><rect x="980" y="292" width="4" height="15" fill="rgb(211,107,37)"/><text x="983.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.35%)</title><rect x="980" y="308" width="4" height="15" fill="rgb(251,107,48)"/><text x="983.00" y="318.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (2 samples, 0.35%)</title><rect x="980" y="324" width="4" height="15" fill="rgb(222,220,11)"/><text x="983.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="982" y="340" width="2" height="15" fill="rgb(208,72,19)"/><text x="985.00" y="350.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="982" y="356" width="2" height="15" fill="rgb(241,46,28)"/><text x="985.00" y="366.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="982" y="372" width="2" height="15" fill="rgb(226,76,39)"/><text x="985.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src) (3 samples, 0.53%)</title><rect x="986" y="308" width="6" height="15" fill="rgb(235,228,2)"/><text x="989.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.18%)</title><rect x="990" y="324" width="2" height="15" fill="rgb(249,124,0)"/><text x="993.00" y="334.50"></text></g><g><title>array_sum (methods.c) (13 samples, 2.29%)</title><rect x="969" y="180" width="27" height="15" fill="rgb(248,52,33)"/><text x="972.00" y="190.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (13 samples, 2.29%)</title><rect x="969" y="196" width="27" height="15" fill="rgb(213,169,25)"/><text x="972.00" y="206.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (12 samples, 2.11%)</title><rect x="971" y="212" width="25" height="15" fill="rgb(223,34,50)"/><text x="974.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 2.11%)</title><rect x="971" y="228" width="25" height="15" fill="rgb(205,21,23)"/><text x="974.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 1.94%)</title><rect x="973" y="244" width="23" height="15" fill="rgb(244,42,33)"/><text x="976.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 1.76%)</title><rect x="976" y="260" width="20" height="15" fill="rgb(221,173,49)"/><text x="979.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (10 samples, 1.76%)</title><rect x="976" y="276" width="20" height="15" fill="rgb(228,42,20)"/><text x="979.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c) (6 samples, 1.06%)</title><rect x="984" y="292" width="12" height="15" fill="rgb(252,130,49)"/><text x="987.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.35%)</title><rect x="992" y="308" width="4" height="15" fill="rgb(208,66,12)"/><text x="995.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.18%)</title><rect x="1005" y="324" width="2" height="15" fill="rgb(239,37,50)"/><text x="1008.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.35%)</title><rect x="1005" y="276" width="4" height="15" fill="rgb(235,201,53)"/><text x="1008.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (2 samples, 0.35%)</title><rect x="1005" y="292" width="4" height="15" fill="rgb(230,217,8)"/><text x="1008.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (2 samples, 0.35%)</title><rect x="1005" y="308" width="4" height="15" fill="rgb(207,174,35)"/><text x="1008.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.18%)</title><rect x="1007" y="324" width="2" height="15" fill="rgb(253,136,39)"/><text x="1010.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1009" y="276" width="2" height="15" fill="rgb(245,171,6)"/><text x="1012.00" y="286.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.18%)</title><rect x="1009" y="292" width="2" height="15" fill="rgb(222,179,51)"/><text x="1012.00" y="302.50"></text></g><g><title>0x7fe0ff2d2d6a (libc-2.29.so) (3 samples, 0.53%)</title><rect x="1015" y="324" width="6" height="15" fill="rgb(218,167,27)"/><text x="1018.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.58%)</title><rect x="1005" y="228" width="18" height="15" fill="rgb(234,69,11)"/><text x="1008.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 1.58%)</title><rect x="1005" y="244" width="18" height="15" fill="rgb(231,181,31)"/><text x="1008.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 1.58%)</title><rect x="1005" y="260" width="18" height="15" fill="rgb(215,47,31)"/><text x="1008.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 1.06%)</title><rect x="1011" y="276" width="12" height="15" fill="rgb(218,136,39)"/><text x="1014.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 1.06%)</title><rect x="1011" y="292" width="12" height="15" fill="rgb(215,177,36)"/><text x="1014.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.88%)</title><rect x="1013" y="308" width="10" height="15" fill="rgb(220,55,49)"/><text x="1016.00" y="318.50"></text></g><g><title>0x7fe0ff2d2d6f (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1021" y="324" width="2" height="15" fill="rgb(223,126,3)"/><text x="1024.00" y="334.50"></text></g><g><title>array_add (number.c) (10 samples, 1.76%)</title><rect x="1005" y="196" width="20" height="15" fill="rgb(247,216,42)"/><text x="1008.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.76%)</title><rect x="1005" y="212" width="20" height="15" fill="rgb(237,222,27)"/><text x="1008.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1023" y="228" width="2" height="15" fill="rgb(216,104,26)"/><text x="1026.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.18%)</title><rect x="1044" y="212" width="2" height="15" fill="rgb(208,14,23)"/><text x="1047.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (4 samples, 0.70%)</title><rect x="1046" y="212" width="8" height="15" fill="rgb(220,124,15)"/><text x="1049.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.53%)</title><rect x="1048" y="228" width="6" height="15" fill="rgb(206,186,29)"/><text x="1051.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (8 samples, 1.41%)</title><rect x="1054" y="212" width="17" height="15" fill="rgb(205,180,42)"/><text x="1057.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.53%)</title><rect x="1065" y="228" width="6" height="15" fill="rgb(229,107,11)"/><text x="1068.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.18%)</title><rect x="1071" y="228" width="2" height="15" fill="rgb(222,111,9)"/><text x="1074.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (24 samples, 4.23%)</title><rect x="1025" y="196" width="50" height="15" fill="rgb(250,49,48)"/><text x="1028.00" y="206.50">check..</text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.35%)</title><rect x="1071" y="212" width="4" height="15" fill="rgb(245,165,9)"/><text x="1074.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.18%)</title><rect x="1073" y="228" width="2" height="15" fill="rgb(233,21,15)"/><text x="1076.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.18%)</title><rect x="1079" y="228" width="2" height="15" fill="rgb(237,67,28)"/><text x="1082.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (5 samples, 0.88%)</title><rect x="1075" y="196" width="11" height="15" fill="rgb(249,126,22)"/><text x="1078.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 0.88%)</title><rect x="1075" y="212" width="11" height="15" fill="rgb(238,203,51)"/><text x="1078.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.35%)</title><rect x="1081" y="228" width="5" height="15" fill="rgb(251,28,29)"/><text x="1084.00" y="238.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.35%)</title><rect x="1090" y="212" width="4" height="15" fill="rgb(241,42,5)"/><text x="1093.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.18%)</title><rect x="1094" y="212" width="2" height="15" fill="rgb(207,25,18)"/><text x="1097.00" y="222.50"></text></g><g><title>0x7fe0ff2d3120 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1096" y="260" width="2" height="15" fill="rgb(210,76,50)"/><text x="1099.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.18%)</title><rect x="1098" y="292" width="2" height="15" fill="rgb(205,202,43)"/><text x="1101.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.18%)</title><rect x="1098" y="308" width="2" height="15" fill="rgb(214,85,28)"/><text x="1101.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="1098" y="324" width="2" height="15" fill="rgb(226,204,9)"/><text x="1101.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.35%)</title><rect x="1098" y="260" width="4" height="15" fill="rgb(219,3,14)"/><text x="1101.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.35%)</title><rect x="1098" y="276" width="4" height="15" fill="rgb(249,54,17)"/><text x="1101.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1100" y="292" width="2" height="15" fill="rgb(220,84,20)"/><text x="1103.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="1100" y="308" width="2" height="15" fill="rgb(248,49,6)"/><text x="1103.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="1100" y="324" width="2" height="15" fill="rgb(236,225,49)"/><text x="1103.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.18%)</title><rect x="1100" y="340" width="2" height="15" fill="rgb(238,156,6)"/><text x="1103.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1100" y="356" width="2" height="15" fill="rgb(239,211,1)"/><text x="1103.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1102" y="260" width="2" height="15" fill="rgb(242,11,7)"/><text x="1105.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="1102" y="276" width="2" height="15" fill="rgb(239,100,25)"/><text x="1105.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1102" y="292" width="2" height="15" fill="rgb(231,151,3)"/><text x="1105.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1102" y="308" width="2" height="15" fill="rgb(210,114,24)"/><text x="1105.00" y="318.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.18%)</title><rect x="1102" y="324" width="2" height="15" fill="rgb(216,201,30)"/><text x="1105.00" y="334.50"></text></g><g><title>0x7fe0ff2b2aa7 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1102" y="340" width="2" height="15" fill="rgb(251,168,14)"/><text x="1105.00" y="350.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (53 samples, 9.33%)</title><rect x="996" y="180" width="110" height="15" fill="rgb(254,220,18)"/><text x="999.00" y="190.50">decision_func..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (10 samples, 1.76%)</title><rect x="1086" y="196" width="20" height="15" fill="rgb(238,173,30)"/><text x="1089.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.88%)</title><rect x="1096" y="212" width="10" height="15" fill="rgb(225,42,8)"/><text x="1099.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.88%)</title><rect x="1096" y="228" width="10" height="15" fill="rgb(209,228,9)"/><text x="1099.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (5 samples, 0.88%)</title><rect x="1096" y="244" width="10" height="15" fill="rgb(229,191,33)"/><text x="1099.00" y="254.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1104" y="260" width="2" height="15" fill="rgb(236,72,25)"/><text x="1107.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.35%)</title><rect x="1106" y="196" width="5" height="15" fill="rgb(212,72,7)"/><text x="1109.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.35%)</title><rect x="1106" y="212" width="5" height="15" fill="rgb(205,176,37)"/><text x="1109.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.18%)</title><rect x="1111" y="228" width="2" height="15" fill="rgb(231,166,45)"/><text x="1114.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.18%)</title><rect x="1111" y="244" width="2" height="15" fill="rgb(240,52,48)"/><text x="1114.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.18%)</title><rect x="1111" y="260" width="2" height="15" fill="rgb(206,3,20)"/><text x="1114.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.18%)</title><rect x="1111" y="276" width="2" height="15" fill="rgb(226,22,2)"/><text x="1114.00" y="286.50"></text></g><g><title>safe_mul (npy_extint128.h) (1 samples, 0.18%)</title><rect x="1111" y="292" width="2" height="15" fill="rgb(234,79,48)"/><text x="1114.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (5 samples, 0.88%)</title><rect x="1113" y="244" width="10" height="15" fill="rgb(243,207,45)"/><text x="1116.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (5 samples, 0.88%)</title><rect x="1113" y="260" width="10" height="15" fill="rgb(250,178,42)"/><text x="1116.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (5 samples, 0.88%)</title><rect x="1113" y="276" width="10" height="15" fill="rgb(251,52,49)"/><text x="1116.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (5 samples, 0.88%)</title><rect x="1113" y="292" width="10" height="15" fill="rgb(234,12,45)"/><text x="1116.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1123" y="244" width="2" height="15" fill="rgb(233,83,3)"/><text x="1126.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1123" y="260" width="2" height="15" fill="rgb(254,105,11)"/><text x="1126.00" y="270.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.18%)</title><rect x="1123" y="276" width="2" height="15" fill="rgb(211,194,33)"/><text x="1126.00" y="286.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.18%)</title><rect x="1123" y="292" width="2" height="15" fill="rgb(226,35,39)"/><text x="1126.00" y="302.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.18%)</title><rect x="1123" y="308" width="2" height="15" fill="rgb(231,38,45)"/><text x="1126.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c) (10 samples, 1.76%)</title><rect x="1113" y="228" width="20" height="15" fill="rgb(227,199,45)"/><text x="1116.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.70%)</title><rect x="1125" y="244" width="8" height="15" fill="rgb(252,34,39)"/><text x="1128.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.70%)</title><rect x="1125" y="260" width="8" height="15" fill="rgb(210,97,48)"/><text x="1128.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.70%)</title><rect x="1125" y="276" width="8" height="15" fill="rgb(227,7,31)"/><text x="1128.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.35%)</title><rect x="1129" y="292" width="4" height="15" fill="rgb(246,158,19)"/><text x="1132.00" y="302.50"></text></g><g><title>0x7fe0ea59b9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.53%)</title><rect x="1133" y="244" width="7" height="15" fill="rgb(225,110,54)"/><text x="1136.00" y="254.50"></text></g><g><title>0x7fe0ea59b9dd (?) (1 samples, 0.18%)</title><rect x="1140" y="244" width="2" height="15" fill="rgb(210,163,54)"/><text x="1143.00" y="254.50"></text></g><g><title>0x7fe0ea5bc265 (?) (1 samples, 0.18%)</title><rect x="1140" y="260" width="2" height="15" fill="rgb(236,150,26)"/><text x="1143.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1140" y="276" width="2" height="15" fill="rgb(224,201,0)"/><text x="1143.00" y="286.50"></text></g><g><title>0x7fe0ea579fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1142" y="276" width="2" height="15" fill="rgb(206,163,47)"/><text x="1145.00" y="286.50"></text></g><g><title>0x7fe0ff3fe1b0 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1146" y="292" width="2" height="15" fill="rgb(225,73,44)"/><text x="1149.00" y="302.50"></text></g><g><title>0x7fe0ff484ba0 (libm-2.29.so) (2 samples, 0.35%)</title><rect x="1148" y="292" width="4" height="15" fill="rgb(224,5,15)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7fe0ff484bb4 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1152" y="292" width="2" height="15" fill="rgb(248,33,11)"/><text x="1155.00" y="302.50"></text></g><g><title>0x7fe0ff484bf9 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1154" y="292" width="2" height="15" fill="rgb(215,118,8)"/><text x="1157.00" y="302.50"></text></g><g><title>0x7fe0ff484c18 (libm-2.29.so) (2 samples, 0.35%)</title><rect x="1156" y="292" width="4" height="15" fill="rgb(244,1,6)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7fe0ea5bc265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.76%)</title><rect x="1142" y="260" width="20" height="15" fill="rgb(211,93,17)"/><text x="1145.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (9 samples, 1.58%)</title><rect x="1144" y="276" width="18" height="15" fill="rgb(229,223,44)"/><text x="1147.00" y="286.50"></text></g><g><title>0x7fe0ff484c7b (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1160" y="292" width="2" height="15" fill="rgb(253,20,27)"/><text x="1163.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (30 samples, 5.28%)</title><rect x="1111" y="212" width="62" height="15" fill="rgb(221,83,10)"/><text x="1114.00" y="222.50">execut..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (19 samples, 3.35%)</title><rect x="1133" y="228" width="40" height="15" fill="rgb(231,130,21)"/><text x="1136.00" y="238.50">tri..</text></g><g><title>0x7fe0ea59b9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.64%)</title><rect x="1142" y="244" width="31" height="15" fill="rgb(230,55,2)"/><text x="1145.00" y="254.50">0x..</text></g><g><title>0x7fe0ea5bc279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.88%)</title><rect x="1162" y="260" width="11" height="15" fill="rgb(215,124,36)"/><text x="1165.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (31 samples, 5.46%)</title><rect x="1111" y="196" width="64" height="15" fill="rgb(250,92,34)"/><text x="1114.00" y="206.50">PyUFunc..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.18%)</title><rect x="1173" y="212" width="2" height="15" fill="rgb(216,29,3)"/><text x="1176.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (101 samples, 17.78%)</title><rect x="967" y="164" width="210" height="15" fill="rgb(225,25,12)"/><text x="970.00" y="174.50">_predict_proba_lr (sklearn/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (34 samples, 5.99%)</title><rect x="1106" y="180" width="71" height="15" fill="rgb(219,133,34)"/><text x="1109.00" y="190.50">ufunc_ge..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1175" y="196" width="2" height="15" fill="rgb(251,148,30)"/><text x="1178.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.18%)</title><rect x="1183" y="196" width="2" height="15" fill="rgb(222,5,21)"/><text x="1186.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (106 samples, 18.66%)</title><rect x="967" y="132" width="220" height="15" fill="rgb(212,84,20)"/><text x="970.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (106 samples, 18.66%)</title><rect x="967" y="148" width="220" height="15" fill="rgb(247,19,3)"/><text x="970.00" y="158.50">predict_proba (sklearn/linear..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (5 samples, 0.88%)</title><rect x="1177" y="164" width="10" height="15" fill="rgb(249,123,14)"/><text x="1180.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 0.88%)</title><rect x="1177" y="180" width="10" height="15" fill="rgb(220,220,7)"/><text x="1180.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.18%)</title><rect x="1185" y="196" width="2" height="15" fill="rgb(246,169,24)"/><text x="1188.00" y="206.50"></text></g><g><title>all (568 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(223,141,34)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py) (567 samples, 99.82%)</title><rect x="12" y="52" width="1178" height="15" fill="rgb(216,205,6)"/><text x="15.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py) (109 samples, 19.19%)</title><rect x="963" y="68" width="227" height="15" fill="rgb(215,8,42)"/><text x="966.00" y="78.50">profile_skl (bench_LogisticReg..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py) (109 samples, 19.19%)</title><rect x="963" y="84" width="227" height="15" fill="rgb(242,200,31)"/><text x="966.00" y="94.50">setup_profile (bench_LogisticR..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py) (109 samples, 19.19%)</title><rect x="963" y="100" width="227" height="15" fill="rgb(245,229,22)"/><text x="966.00" y="110.50">profile (bench_LogisticRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (109 samples, 19.19%)</title><rect x="963" y="116" width="227" height="15" fill="rgb(240,203,26)"/><text x="966.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(214,47,10)"/><text x="1190.00" y="142.50"></text></g></g></svg>