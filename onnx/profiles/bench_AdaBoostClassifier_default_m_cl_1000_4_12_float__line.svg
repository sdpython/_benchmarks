<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2182" onload="init(evt)" viewBox="0 0 1200 2182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2182" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2165.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2165.00"> </text><g id="frames"><g><title>fit (sklearn/tree/_classes.py:143) (1 samples, 0.11%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(228,209,10)"/><text x="13.00" y="206.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.11%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(240,224,4)"/><text x="13.00" y="222.50"></text></g><g><title>__init__ (mtrand.c:3210) (1 samples, 0.11%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(245,33,41)"/><text x="13.00" y="238.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (1 samples, 0.11%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(223,71,11)"/><text x="13.00" y="254.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (1 samples, 0.11%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(252,142,40)"/><text x="13.00" y="270.50"></text></g><g><title>__init__ (mt19937.c:2381) (1 samples, 0.11%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(215,47,34)"/><text x="13.00" y="286.50"></text></g><g><title>MT19937___init__ (mt19937.c:2558) (1 samples, 0.11%)</title><rect x="10" y="292" width="1" height="15" fill="rgb(221,218,8)"/><text x="13.00" y="302.50"></text></g><g><title>__Pyx_GetItemInt_Fast (mt19937.c:8049) (1 samples, 0.11%)</title><rect x="10" y="308" width="1" height="15" fill="rgb(235,151,32)"/><text x="13.00" y="318.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.11%)</title><rect x="10" y="324" width="1" height="15" fill="rgb(251,8,19)"/><text x="13.00" y="334.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:693) (1 samples, 0.11%)</title><rect x="10" y="340" width="1" height="15" fill="rgb(214,119,48)"/><text x="13.00" y="350.50"></text></g><g><title>gentype_alloc (scalartypes.c.src:129) (1 samples, 0.11%)</title><rect x="10" y="356" width="1" height="15" fill="rgb(214,99,20)"/><text x="13.00" y="366.50"></text></g><g><title>_safe_accumulator_op (sklearn/utils/extmath.py:704) (1 samples, 0.11%)</title><rect x="11" y="244" width="1" height="15" fill="rgb(251,161,4)"/><text x="14.00" y="254.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="11" y="260" width="1" height="15" fill="rgb(243,135,3)"/><text x="14.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="11" y="276" width="1" height="15" fill="rgb(214,131,46)"/><text x="14.00" y="286.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.11%)</title><rect x="11" y="292" width="1" height="15" fill="rgb(213,89,22)"/><text x="14.00" y="302.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.11%)</title><rect x="11" y="308" width="1" height="15" fill="rgb(210,183,31)"/><text x="14.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.11%)</title><rect x="11" y="324" width="1" height="15" fill="rgb(243,37,16)"/><text x="14.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (1 samples, 0.11%)</title><rect x="11" y="340" width="1" height="15" fill="rgb(238,221,53)"/><text x="14.00" y="350.50"></text></g><g><title>PyArray_Return (scalarapi.c:864) (1 samples, 0.11%)</title><rect x="11" y="356" width="1" height="15" fill="rgb(250,16,12)"/><text x="14.00" y="366.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:836) (1 samples, 0.11%)</title><rect x="11" y="372" width="1" height="15" fill="rgb(226,68,53)"/><text x="14.00" y="382.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src:1924) (1 samples, 0.11%)</title><rect x="11" y="388" width="1" height="15" fill="rgb(223,95,13)"/><text x="14.00" y="398.50"></text></g><g><title>_basic_copy (arraytypes.c.src:1890) (1 samples, 0.11%)</title><rect x="11" y="404" width="1" height="15" fill="rgb(229,41,2)"/><text x="14.00" y="414.50"></text></g><g><title>fit (sklearn/tree/_classes.py:149) (2 samples, 0.22%)</title><rect x="11" y="196" width="2" height="15" fill="rgb(210,49,15)"/><text x="14.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.22%)</title><rect x="11" y="212" width="2" height="15" fill="rgb(207,131,53)"/><text x="14.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:50) (2 samples, 0.22%)</title><rect x="11" y="228" width="2" height="15" fill="rgb(211,137,7)"/><text x="14.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="12" y="244" width="1" height="15" fill="rgb(241,169,54)"/><text x="15.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="12" y="260" width="1" height="15" fill="rgb(221,87,18)"/><text x="15.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="12" y="276" width="1" height="15" fill="rgb(238,165,37)"/><text x="15.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.11%)</title><rect x="12" y="292" width="1" height="15" fill="rgb(218,85,38)"/><text x="15.00" y="302.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.11%)</title><rect x="12" y="308" width="1" height="15" fill="rgb(227,18,48)"/><text x="15.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="12" y="324" width="1" height="15" fill="rgb(224,165,8)"/><text x="15.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.11%)</title><rect x="12" y="340" width="1" height="15" fill="rgb(234,134,24)"/><text x="15.00" y="350.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (4 samples, 0.44%)</title><rect x="10" y="164" width="5" height="15" fill="rgb(237,61,47)"/><text x="13.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (4 samples, 0.44%)</title><rect x="10" y="180" width="5" height="15" fill="rgb(247,107,5)"/><text x="13.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:150) (1 samples, 0.11%)</title><rect x="13" y="196" width="2" height="15" fill="rgb(254,0,41)"/><text x="16.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.11%)</title><rect x="13" y="212" width="2" height="15" fill="rgb(246,115,16)"/><text x="16.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.11%)</title><rect x="13" y="228" width="2" height="15" fill="rgb(233,70,50)"/><text x="16.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.11%)</title><rect x="13" y="244" width="2" height="15" fill="rgb(232,7,10)"/><text x="16.00" y="254.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (6 samples, 0.66%)</title><rect x="10" y="100" width="7" height="15" fill="rgb(254,147,16)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (6 samples, 0.66%)</title><rect x="10" y="116" width="7" height="15" fill="rgb(235,28,23)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (6 samples, 0.66%)</title><rect x="10" y="132" width="7" height="15" fill="rgb(219,30,51)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (6 samples, 0.66%)</title><rect x="10" y="148" width="7" height="15" fill="rgb(230,26,46)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:515) (2 samples, 0.22%)</title><rect x="15" y="164" width="2" height="15" fill="rgb(233,218,41)"/><text x="18.00" y="174.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (2 samples, 0.22%)</title><rect x="15" y="180" width="2" height="15" fill="rgb(239,5,32)"/><text x="18.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (1 samples, 0.11%)</title><rect x="16" y="196" width="1" height="15" fill="rgb(236,173,19)"/><text x="19.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:31) (7 samples, 0.77%)</title><rect x="10" y="52" width="9" height="15" fill="rgb(214,68,54)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:11) (7 samples, 0.77%)</title><rect x="10" y="68" width="9" height="15" fill="rgb(234,162,43)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:39) (7 samples, 0.77%)</title><rect x="10" y="84" width="9" height="15" fill="rgb(249,59,34)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:155) (1 samples, 0.11%)</title><rect x="17" y="100" width="2" height="15" fill="rgb(253,184,20)"/><text x="20.00" y="110.50"></text></g><g><title>_pickle_dump (_pickle.c.h:408) (1 samples, 0.11%)</title><rect x="17" y="116" width="2" height="15" fill="rgb(219,101,42)"/><text x="20.00" y="126.50"></text></g><g><title>_pickle_dump_impl (_pickle.c:7214) (1 samples, 0.11%)</title><rect x="17" y="132" width="2" height="15" fill="rgb(234,134,50)"/><text x="20.00" y="142.50"></text></g><g><title>dump (_pickle.c:4160) (1 samples, 0.11%)</title><rect x="17" y="148" width="2" height="15" fill="rgb(244,41,0)"/><text x="20.00" y="158.50"></text></g><g><title>save (_pickle.c:4006) (1 samples, 0.11%)</title><rect x="17" y="164" width="2" height="15" fill="rgb(250,127,10)"/><text x="20.00" y="174.50"></text></g><g><title>save_dict (_pickle.c:3046) (1 samples, 0.11%)</title><rect x="17" y="180" width="2" height="15" fill="rgb(248,189,25)"/><text x="20.00" y="190.50"></text></g><g><title>batch_dict_exact (_pickle.c:2992) (1 samples, 0.11%)</title><rect x="17" y="196" width="2" height="15" fill="rgb(209,54,1)"/><text x="20.00" y="206.50"></text></g><g><title>save (_pickle.c:4128) (1 samples, 0.11%)</title><rect x="17" y="212" width="2" height="15" fill="rgb(218,118,10)"/><text x="20.00" y="222.50"></text></g><g><title>save_reduce (_pickle.c:3928) (1 samples, 0.11%)</title><rect x="17" y="228" width="2" height="15" fill="rgb(233,0,20)"/><text x="20.00" y="238.50"></text></g><g><title>save (_pickle.c:4006) (1 samples, 0.11%)</title><rect x="17" y="244" width="2" height="15" fill="rgb(218,184,14)"/><text x="20.00" y="254.50"></text></g><g><title>save_dict (_pickle.c:3046) (1 samples, 0.11%)</title><rect x="17" y="260" width="2" height="15" fill="rgb(213,39,43)"/><text x="20.00" y="270.50"></text></g><g><title>batch_dict_exact (_pickle.c:2992) (1 samples, 0.11%)</title><rect x="17" y="276" width="2" height="15" fill="rgb(235,165,37)"/><text x="20.00" y="286.50"></text></g><g><title>save (_pickle.c:4018) (1 samples, 0.11%)</title><rect x="17" y="292" width="2" height="15" fill="rgb(230,105,32)"/><text x="20.00" y="302.50"></text></g><g><title>save_list (_pickle.c:2787) (1 samples, 0.11%)</title><rect x="17" y="308" width="2" height="15" fill="rgb(221,129,12)"/><text x="20.00" y="318.50"></text></g><g><title>batch_list_exact (_pickle.c:2737) (1 samples, 0.11%)</title><rect x="17" y="324" width="2" height="15" fill="rgb(228,187,20)"/><text x="20.00" y="334.50"></text></g><g><title>save (_pickle.c:4128) (1 samples, 0.11%)</title><rect x="17" y="340" width="2" height="15" fill="rgb(223,163,44)"/><text x="20.00" y="350.50"></text></g><g><title>save_reduce (_pickle.c:3928) (1 samples, 0.11%)</title><rect x="17" y="356" width="2" height="15" fill="rgb(239,78,17)"/><text x="20.00" y="366.50"></text></g><g><title>save (_pickle.c:4006) (1 samples, 0.11%)</title><rect x="17" y="372" width="2" height="15" fill="rgb(245,188,39)"/><text x="20.00" y="382.50"></text></g><g><title>save_dict (_pickle.c:3046) (1 samples, 0.11%)</title><rect x="17" y="388" width="2" height="15" fill="rgb(251,177,31)"/><text x="20.00" y="398.50"></text></g><g><title>batch_dict_exact (_pickle.c:2992) (1 samples, 0.11%)</title><rect x="17" y="404" width="2" height="15" fill="rgb(238,178,52)"/><text x="20.00" y="414.50"></text></g><g><title>save (_pickle.c:4128) (1 samples, 0.11%)</title><rect x="17" y="420" width="2" height="15" fill="rgb(247,113,43)"/><text x="20.00" y="430.50"></text></g><g><title>save_reduce (_pickle.c:3893) (1 samples, 0.11%)</title><rect x="17" y="436" width="2" height="15" fill="rgb(247,89,9)"/><text x="20.00" y="446.50"></text></g><g><title>save (_pickle.c:4022) (1 samples, 0.11%)</title><rect x="17" y="452" width="2" height="15" fill="rgb(205,217,0)"/><text x="20.00" y="462.50"></text></g><g><title>save_tuple (_pickle.c:2522) (1 samples, 0.11%)</title><rect x="17" y="468" width="2" height="15" fill="rgb(217,68,27)"/><text x="20.00" y="478.50"></text></g><g><title>store_tuple_elements (_pickle.c:2471) (1 samples, 0.11%)</title><rect x="17" y="484" width="2" height="15" fill="rgb(244,1,6)"/><text x="20.00" y="494.50"></text></g><g><title>save (_pickle.c:4093) (1 samples, 0.11%)</title><rect x="17" y="500" width="2" height="15" fill="rgb(253,77,4)"/><text x="20.00" y="510.50"></text></g><g><title>_Pickle_FastCall (_pickle.c:353) (1 samples, 0.11%)</title><rect x="17" y="516" width="2" height="15" fill="rgb(225,83,27)"/><text x="20.00" y="526.50"></text></g><g><title>array_reduce_ex (methods.c:1867) (1 samples, 0.11%)</title><rect x="17" y="532" width="2" height="15" fill="rgb(215,213,3)"/><text x="20.00" y="542.50"></text></g><g><title>array_reduce_ex_picklebuffer (methods.c:1818) (1 samples, 0.11%)</title><rect x="17" y="548" width="2" height="15" fill="rgb(214,124,1)"/><text x="20.00" y="558.50"></text></g><g><title>array_reduce_ex_regular (methods.c:1744) (1 samples, 0.11%)</title><rect x="17" y="564" width="2" height="15" fill="rgb(246,171,7)"/><text x="20.00" y="574.50"></text></g><g><title>array_reduce (methods.c:1664) (1 samples, 0.11%)</title><rect x="17" y="580" width="2" height="15" fill="rgb(222,149,20)"/><text x="20.00" y="590.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.22%)</title><rect x="19" y="228" width="2" height="15" fill="rgb(243,82,50)"/><text x="22.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.22%)</title><rect x="19" y="244" width="2" height="15" fill="rgb(239,92,40)"/><text x="22.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.11%)</title><rect x="21" y="244" width="1" height="15" fill="rgb(235,81,16)"/><text x="24.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.22%)</title><rect x="22" y="244" width="3" height="15" fill="rgb(253,190,22)"/><text x="25.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (6 samples, 0.66%)</title><rect x="19" y="212" width="7" height="15" fill="rgb(207,197,15)"/><text x="22.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.44%)</title><rect x="21" y="228" width="5" height="15" fill="rgb(212,39,20)"/><text x="24.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.11%)</title><rect x="25" y="244" width="1" height="15" fill="rgb(207,146,2)"/><text x="28.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="25" y="260" width="1" height="15" fill="rgb(251,210,45)"/><text x="28.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.22%)</title><rect x="26" y="244" width="3" height="15" fill="rgb(250,229,20)"/><text x="29.00" y="254.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.11%)</title><rect x="28" y="260" width="1" height="15" fill="rgb(249,56,30)"/><text x="31.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.22%)</title><rect x="29" y="244" width="3" height="15" fill="rgb(237,117,6)"/><text x="32.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.11%)</title><rect x="30" y="260" width="2" height="15" fill="rgb(237,225,38)"/><text x="33.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.11%)</title><rect x="30" y="276" width="2" height="15" fill="rgb(247,222,8)"/><text x="33.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.22%)</title><rect x="32" y="244" width="2" height="15" fill="rgb(230,222,23)"/><text x="35.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.11%)</title><rect x="33" y="260" width="1" height="15" fill="rgb(205,158,31)"/><text x="36.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.11%)</title><rect x="33" y="276" width="1" height="15" fill="rgb(241,54,28)"/><text x="36.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:427) (1 samples, 0.11%)</title><rect x="33" y="292" width="1" height="15" fill="rgb(232,164,7)"/><text x="36.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.11%)</title><rect x="34" y="244" width="1" height="15" fill="rgb(228,193,53)"/><text x="37.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="34" y="260" width="1" height="15" fill="rgb(217,61,13)"/><text x="37.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.11%)</title><rect x="35" y="244" width="2" height="15" fill="rgb(214,200,19)"/><text x="38.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.11%)</title><rect x="35" y="260" width="2" height="15" fill="rgb(213,36,32)"/><text x="38.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.44%)</title><rect x="37" y="244" width="5" height="15" fill="rgb(220,114,25)"/><text x="40.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.33%)</title><rect x="38" y="260" width="4" height="15" fill="rgb(237,38,4)"/><text x="41.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.11%)</title><rect x="42" y="260" width="1" height="15" fill="rgb(244,117,2)"/><text x="45.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (15 samples, 1.65%)</title><rect x="26" y="212" width="20" height="15" fill="rgb(244,62,38)"/><text x="29.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (15 samples, 1.65%)</title><rect x="26" y="228" width="20" height="15" fill="rgb(245,10,36)"/><text x="29.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.33%)</title><rect x="42" y="244" width="4" height="15" fill="rgb(223,133,33)"/><text x="45.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.22%)</title><rect x="43" y="260" width="3" height="15" fill="rgb(217,199,18)"/><text x="46.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.22%)</title><rect x="43" y="276" width="3" height="15" fill="rgb(231,121,42)"/><text x="46.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.11%)</title><rect x="45" y="292" width="1" height="15" fill="rgb(251,212,9)"/><text x="48.00" y="302.50"></text></g><g><title>0x7f81f8c3af55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="47" y="244" width="1" height="15" fill="rgb(205,215,39)"/><text x="50.00" y="254.50"></text></g><g><title>0x7f81f8c2ad33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="47" y="260" width="1" height="15" fill="rgb(250,222,37)"/><text x="50.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.11%)</title><rect x="47" y="276" width="1" height="15" fill="rgb(229,210,9)"/><text x="50.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1190) (1 samples, 0.11%)</title><rect x="47" y="292" width="1" height="15" fill="rgb(236,188,23)"/><text x="50.00" y="302.50"></text></g><g><title>0x7f81f8c492df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="48" y="276" width="2" height="15" fill="rgb(226,140,43)"/><text x="51.00" y="286.50"></text></g><g><title>0x7f81f8c2dd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="48" y="292" width="2" height="15" fill="rgb(213,24,18)"/><text x="51.00" y="302.50"></text></g><g><title>0x7f81f8c2d666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="48" y="308" width="2" height="15" fill="rgb(239,198,39)"/><text x="51.00" y="318.50"></text></g><g><title>0x7f81f8c232fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="48" y="324" width="2" height="15" fill="rgb(221,170,23)"/><text x="51.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="48" y="340" width="2" height="15" fill="rgb(226,160,28)"/><text x="51.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.11%)</title><rect x="48" y="356" width="2" height="15" fill="rgb(209,43,12)"/><text x="51.00" y="366.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (1 samples, 0.11%)</title><rect x="48" y="372" width="2" height="15" fill="rgb(227,112,49)"/><text x="51.00" y="382.50"></text></g><g><title>0x7f821f2066a2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="48" y="388" width="2" height="15" fill="rgb(212,39,27)"/><text x="51.00" y="398.50"></text></g><g><title>0x7f81f8c49436 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="50" y="276" width="2" height="15" fill="rgb(254,25,39)"/><text x="53.00" y="286.50"></text></g><g><title>0x7f81f8c49592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="52" y="276" width="2" height="15" fill="rgb(206,113,47)"/><text x="55.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.11%)</title><rect x="52" y="292" width="2" height="15" fill="rgb(240,92,20)"/><text x="55.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="52" y="308" width="2" height="15" fill="rgb(236,152,18)"/><text x="55.00" y="318.50"></text></g><g><title>0x7f81f8c49684 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="54" y="276" width="1" height="15" fill="rgb(229,48,39)"/><text x="57.00" y="286.50"></text></g><g><title>0x7f81f8c49687 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="55" y="276" width="1" height="15" fill="rgb(212,147,22)"/><text x="58.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:641) (1 samples, 0.11%)</title><rect x="56" y="324" width="2" height="15" fill="rgb(249,111,39)"/><text x="59.00" y="334.50"></text></g><g><title>0x7f81f8c3afa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.88%)</title><rect x="48" y="244" width="11" height="15" fill="rgb(231,218,48)"/><text x="51.00" y="254.50"></text></g><g><title>0x7f81f8c4a405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.88%)</title><rect x="48" y="260" width="11" height="15" fill="rgb(222,161,38)"/><text x="51.00" y="270.50"></text></g><g><title>0x7f81f8c49c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="56" y="276" width="3" height="15" fill="rgb(225,203,45)"/><text x="59.00" y="286.50"></text></g><g><title>0x7f81f8c21529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="56" y="292" width="3" height="15" fill="rgb(248,158,51)"/><text x="59.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.22%)</title><rect x="56" y="308" width="3" height="15" fill="rgb(239,30,13)"/><text x="59.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:694) (1 samples, 0.11%)</title><rect x="58" y="324" width="1" height="15" fill="rgb(246,112,42)"/><text x="61.00" y="334.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.11%)</title><rect x="59" y="292" width="1" height="15" fill="rgb(245,138,35)"/><text x="62.00" y="302.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (2 samples, 0.22%)</title><rect x="60" y="292" width="3" height="15" fill="rgb(246,107,49)"/><text x="63.00" y="302.50"></text></g><g><title>0x7f81f8c3b05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.44%)</title><rect x="59" y="244" width="5" height="15" fill="rgb(223,216,26)"/><text x="62.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (4 samples, 0.44%)</title><rect x="59" y="260" width="5" height="15" fill="rgb(245,33,13)"/><text x="62.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (4 samples, 0.44%)</title><rect x="59" y="276" width="5" height="15" fill="rgb(216,214,39)"/><text x="62.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3961) (1 samples, 0.11%)</title><rect x="63" y="292" width="1" height="15" fill="rgb(247,45,1)"/><text x="66.00" y="302.50"></text></g><g><title>0x7f81f8c3b14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="64" y="244" width="1" height="15" fill="rgb(238,183,43)"/><text x="67.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="64" y="260" width="1" height="15" fill="rgb(231,27,22)"/><text x="67.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="64" y="276" width="1" height="15" fill="rgb(231,96,41)"/><text x="67.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="64" y="292" width="1" height="15" fill="rgb(215,98,27)"/><text x="67.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.11%)</title><rect x="65" y="276" width="2" height="15" fill="rgb(240,216,13)"/><text x="68.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (17 samples, 1.87%)</title><rect x="46" y="212" width="22" height="15" fill="rgb(234,29,29)"/><text x="49.00" y="222.50">p..</text></g><g><title>0x7f81f8c3bd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 1.76%)</title><rect x="47" y="228" width="21" height="15" fill="rgb(223,186,49)"/><text x="50.00" y="238.50"></text></g><g><title>0x7f81f8c3b328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="65" y="244" width="3" height="15" fill="rgb(230,216,21)"/><text x="68.00" y="254.50"></text></g><g><title>array_reshape (methods.c:201) (2 samples, 0.22%)</title><rect x="65" y="260" width="3" height="15" fill="rgb(207,205,54)"/><text x="68.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.11%)</title><rect x="67" y="276" width="1" height="15" fill="rgb(252,105,54)"/><text x="70.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.11%)</title><rect x="67" y="292" width="1" height="15" fill="rgb(225,48,51)"/><text x="70.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.11%)</title><rect x="68" y="212" width="1" height="15" fill="rgb(216,116,23)"/><text x="71.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.11%)</title><rect x="68" y="228" width="1" height="15" fill="rgb(206,122,46)"/><text x="71.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.11%)</title><rect x="68" y="244" width="1" height="15" fill="rgb(249,14,25)"/><text x="71.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.11%)</title><rect x="68" y="260" width="1" height="15" fill="rgb(209,179,11)"/><text x="71.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.11%)</title><rect x="68" y="276" width="1" height="15" fill="rgb(253,101,21)"/><text x="71.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.11%)</title><rect x="69" y="276" width="2" height="15" fill="rgb(253,39,0)"/><text x="72.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.11%)</title><rect x="69" y="292" width="2" height="15" fill="rgb(227,161,1)"/><text x="72.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="71" y="356" width="1" height="15" fill="rgb(225,184,17)"/><text x="74.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="73" y="372" width="1" height="15" fill="rgb(237,173,36)"/><text x="76.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.33%)</title><rect x="72" y="356" width="4" height="15" fill="rgb(236,78,12)"/><text x="75.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.11%)</title><rect x="74" y="372" width="2" height="15" fill="rgb(236,185,4)"/><text x="77.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.11%)</title><rect x="76" y="356" width="1" height="15" fill="rgb(248,145,37)"/><text x="79.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (7 samples, 0.77%)</title><rect x="69" y="212" width="9" height="15" fill="rgb(254,124,40)"/><text x="72.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (7 samples, 0.77%)</title><rect x="69" y="228" width="9" height="15" fill="rgb(240,150,11)"/><text x="72.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (7 samples, 0.77%)</title><rect x="69" y="244" width="9" height="15" fill="rgb(247,226,38)"/><text x="72.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (7 samples, 0.77%)</title><rect x="69" y="260" width="9" height="15" fill="rgb(208,9,42)"/><text x="72.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 0.66%)</title><rect x="71" y="276" width="7" height="15" fill="rgb(225,165,41)"/><text x="74.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 0.66%)</title><rect x="71" y="292" width="7" height="15" fill="rgb(235,98,19)"/><text x="74.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 0.66%)</title><rect x="71" y="308" width="7" height="15" fill="rgb(252,222,31)"/><text x="74.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (6 samples, 0.66%)</title><rect x="71" y="324" width="7" height="15" fill="rgb(222,124,5)"/><text x="74.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 0.66%)</title><rect x="71" y="340" width="7" height="15" fill="rgb(217,17,20)"/><text x="74.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:244) (1 samples, 0.11%)</title><rect x="77" y="356" width="1" height="15" fill="rgb(224,169,26)"/><text x="80.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.11%)</title><rect x="78" y="228" width="2" height="15" fill="rgb(233,219,18)"/><text x="81.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.11%)</title><rect x="78" y="244" width="2" height="15" fill="rgb(233,70,22)"/><text x="81.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c:2067) (1 samples, 0.11%)</title><rect x="78" y="260" width="2" height="15" fill="rgb(228,74,47)"/><text x="81.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.11%)</title><rect x="80" y="276" width="1" height="15" fill="rgb(233,43,53)"/><text x="83.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="81" y="276" width="1" height="15" fill="rgb(229,203,39)"/><text x="84.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.11%)</title><rect x="81" y="292" width="1" height="15" fill="rgb(226,1,19)"/><text x="84.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.11%)</title><rect x="81" y="308" width="1" height="15" fill="rgb(230,57,5)"/><text x="84.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.11%)</title><rect x="81" y="324" width="1" height="15" fill="rgb(248,24,5)"/><text x="84.00" y="334.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:63) (1 samples, 0.11%)</title><rect x="81" y="340" width="1" height="15" fill="rgb(211,89,4)"/><text x="84.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.33%)</title><rect x="80" y="260" width="3" height="15" fill="rgb(239,179,54)"/><text x="83.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1099) (1 samples, 0.11%)</title><rect x="82" y="276" width="1" height="15" fill="rgb(254,50,17)"/><text x="85.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="83" y="260" width="2" height="15" fill="rgb(249,154,10)"/><text x="86.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:412) (1 samples, 0.11%)</title><rect x="83" y="276" width="2" height="15" fill="rgb(238,173,49)"/><text x="86.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:255) (1 samples, 0.11%)</title><rect x="83" y="292" width="2" height="15" fill="rgb(242,134,34)"/><text x="86.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.11%)</title><rect x="85" y="260" width="1" height="15" fill="rgb(205,26,29)"/><text x="88.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.11%)</title><rect x="85" y="276" width="1" height="15" fill="rgb(219,169,16)"/><text x="88.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.11%)</title><rect x="85" y="292" width="1" height="15" fill="rgb(217,32,2)"/><text x="88.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.11%)</title><rect x="86" y="276" width="1" height="15" fill="rgb(229,217,41)"/><text x="89.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.11%)</title><rect x="86" y="292" width="1" height="15" fill="rgb(225,96,9)"/><text x="89.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (8 samples, 0.88%)</title><rect x="78" y="212" width="11" height="15" fill="rgb(252,83,32)"/><text x="81.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (7 samples, 0.77%)</title><rect x="80" y="228" width="9" height="15" fill="rgb(217,121,1)"/><text x="83.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.77%)</title><rect x="80" y="244" width="9" height="15" fill="rgb(225,37,53)"/><text x="83.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="86" y="260" width="3" height="15" fill="rgb(207,157,36)"/><text x="89.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="87" y="276" width="2" height="15" fill="rgb(214,132,21)"/><text x="90.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.11%)</title><rect x="87" y="292" width="2" height="15" fill="rgb(235,58,51)"/><text x="90.00" y="302.50"></text></g><g><title>DOUBLE_equal (loops.c.src:1773) (1 samples, 0.11%)</title><rect x="87" y="308" width="2" height="15" fill="rgb(214,148,22)"/><text x="90.00" y="318.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src:295) (1 samples, 0.11%)</title><rect x="87" y="324" width="2" height="15" fill="rgb(208,53,53)"/><text x="90.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src:981) (1 samples, 0.11%)</title><rect x="87" y="340" width="2" height="15" fill="rgb(242,148,19)"/><text x="90.00" y="350.50"></text></g><g><title>_mm_cmpeq_pd (emmintrin.h:339) (1 samples, 0.11%)</title><rect x="87" y="356" width="2" height="15" fill="rgb(243,15,11)"/><text x="90.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="89" y="276" width="1" height="15" fill="rgb(224,46,14)"/><text x="92.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="89" y="292" width="1" height="15" fill="rgb(223,162,31)"/><text x="92.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3103) (1 samples, 0.11%)</title><rect x="89" y="308" width="1" height="15" fill="rgb(249,211,51)"/><text x="92.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.11%)</title><rect x="90" y="292" width="1" height="15" fill="rgb(246,62,41)"/><text x="93.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.11%)</title><rect x="90" y="308" width="1" height="15" fill="rgb(237,83,1)"/><text x="93.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.11%)</title><rect x="91" y="324" width="2" height="15" fill="rgb(213,114,35)"/><text x="94.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="93" y="324" width="1" height="15" fill="rgb(254,101,50)"/><text x="96.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.11%)</title><rect x="94" y="324" width="1" height="15" fill="rgb(243,180,41)"/><text x="97.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.11%)</title><rect x="95" y="340" width="1" height="15" fill="rgb(245,155,32)"/><text x="98.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 0.66%)</title><rect x="90" y="276" width="8" height="15" fill="rgb(249,101,3)"/><text x="93.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.55%)</title><rect x="91" y="292" width="7" height="15" fill="rgb(237,86,19)"/><text x="94.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.55%)</title><rect x="91" y="308" width="7" height="15" fill="rgb(252,186,49)"/><text x="94.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.22%)</title><rect x="95" y="324" width="3" height="15" fill="rgb(206,206,5)"/><text x="98.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.11%)</title><rect x="96" y="340" width="2" height="15" fill="rgb(223,95,27)"/><text x="99.00" y="350.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="98" y="292" width="1" height="15" fill="rgb(211,7,9)"/><text x="101.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (65 samples, 7.15%)</title><rect x="19" y="196" width="84" height="15" fill="rgb(208,190,31)"/><text x="22.00" y="206.50">_samme_pr..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (11 samples, 1.21%)</title><rect x="89" y="212" width="14" height="15" fill="rgb(245,14,0)"/><text x="92.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.21%)</title><rect x="89" y="228" width="14" height="15" fill="rgb(230,2,22)"/><text x="92.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.21%)</title><rect x="89" y="244" width="14" height="15" fill="rgb(215,92,5)"/><text x="92.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 1.21%)</title><rect x="89" y="260" width="14" height="15" fill="rgb(214,97,21)"/><text x="92.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.44%)</title><rect x="98" y="276" width="5" height="15" fill="rgb(251,32,27)"/><text x="101.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (3 samples, 0.33%)</title><rect x="99" y="292" width="4" height="15" fill="rgb(206,34,30)"/><text x="102.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (3 samples, 0.33%)</title><rect x="99" y="308" width="4" height="15" fill="rgb(220,92,3)"/><text x="102.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (3 samples, 0.33%)</title><rect x="99" y="324" width="4" height="15" fill="rgb(238,96,5)"/><text x="102.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 0.33%)</title><rect x="99" y="340" width="4" height="15" fill="rgb(224,51,43)"/><text x="102.00" y="350.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.11%)</title><rect x="104" y="212" width="2" height="15" fill="rgb(251,98,54)"/><text x="107.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.11%)</title><rect x="104" y="228" width="2" height="15" fill="rgb(212,3,38)"/><text x="107.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.11%)</title><rect x="106" y="228" width="1" height="15" fill="rgb(205,218,21)"/><text x="109.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.11%)</title><rect x="106" y="244" width="1" height="15" fill="rgb(246,227,44)"/><text x="109.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.11%)</title><rect x="106" y="260" width="1" height="15" fill="rgb(226,33,30)"/><text x="109.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="106" y="276" width="1" height="15" fill="rgb(207,50,41)"/><text x="109.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="106" y="292" width="1" height="15" fill="rgb(214,220,28)"/><text x="109.00" y="302.50"></text></g><g><title>0x7f821f20de50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="106" y="308" width="1" height="15" fill="rgb(221,24,24)"/><text x="109.00" y="318.50"></text></g><g><title>0x7f821f21812f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="107" y="260" width="1" height="15" fill="rgb(205,72,9)"/><text x="110.00" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.11%)</title><rect x="108" y="308" width="1" height="15" fill="rgb(251,17,28)"/><text x="111.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:73) (1 samples, 0.11%)</title><rect x="108" y="324" width="1" height="15" fill="rgb(207,183,28)"/><text x="111.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.33%)</title><rect x="111" y="324" width="4" height="15" fill="rgb(243,161,30)"/><text x="114.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="115" y="340" width="1" height="15" fill="rgb(241,10,25)"/><text x="118.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="115" y="356" width="1" height="15" fill="rgb(248,125,49)"/><text x="118.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.11%)</title><rect x="115" y="372" width="1" height="15" fill="rgb(227,171,49)"/><text x="118.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (6 samples, 0.66%)</title><rect x="109" y="308" width="8" height="15" fill="rgb(235,39,27)"/><text x="112.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.22%)</title><rect x="115" y="324" width="2" height="15" fill="rgb(252,201,29)"/><text x="118.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.11%)</title><rect x="116" y="340" width="1" height="15" fill="rgb(240,15,29)"/><text x="119.00" y="350.50"></text></g><g><title>PyArray_Return (scalarapi.c:864) (1 samples, 0.11%)</title><rect x="116" y="356" width="1" height="15" fill="rgb(246,1,7)"/><text x="119.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="116" y="372" width="1" height="15" fill="rgb(223,180,5)"/><text x="119.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="116" y="388" width="1" height="15" fill="rgb(215,94,14)"/><text x="119.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="116" y="404" width="1" height="15" fill="rgb(222,105,24)"/><text x="119.00" y="414.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.22%)</title><rect x="117" y="324" width="3" height="15" fill="rgb(218,44,39)"/><text x="120.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.22%)</title><rect x="117" y="340" width="3" height="15" fill="rgb(215,112,14)"/><text x="120.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.22%)</title><rect x="117" y="356" width="3" height="15" fill="rgb(250,7,53)"/><text x="120.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.22%)</title><rect x="117" y="372" width="3" height="15" fill="rgb(241,57,48)"/><text x="120.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.22%)</title><rect x="117" y="388" width="3" height="15" fill="rgb(231,6,52)"/><text x="120.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.11%)</title><rect x="119" y="404" width="1" height="15" fill="rgb(225,183,29)"/><text x="122.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.11%)</title><rect x="119" y="420" width="1" height="15" fill="rgb(248,69,46)"/><text x="122.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="119" y="436" width="1" height="15" fill="rgb(254,226,0)"/><text x="122.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.11%)</title><rect x="119" y="452" width="1" height="15" fill="rgb(243,93,43)"/><text x="122.00" y="462.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (1 samples, 0.11%)</title><rect x="119" y="468" width="1" height="15" fill="rgb(232,52,28)"/><text x="122.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.22%)</title><rect x="120" y="356" width="2" height="15" fill="rgb(220,203,53)"/><text x="123.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (2 samples, 0.22%)</title><rect x="120" y="372" width="2" height="15" fill="rgb(239,12,46)"/><text x="123.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="122" y="356" width="2" height="15" fill="rgb(213,200,1)"/><text x="125.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (1 samples, 0.11%)</title><rect x="122" y="372" width="2" height="15" fill="rgb(214,62,10)"/><text x="125.00" y="382.50"></text></g><g><title>0x7f821f20de7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="122" y="388" width="2" height="15" fill="rgb(247,92,40)"/><text x="125.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (6 samples, 0.66%)</title><rect x="117" y="308" width="8" height="15" fill="rgb(210,47,11)"/><text x="120.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.44%)</title><rect x="120" y="324" width="5" height="15" fill="rgb(215,106,34)"/><text x="123.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.44%)</title><rect x="120" y="340" width="5" height="15" fill="rgb(244,133,32)"/><text x="123.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3296) (1 samples, 0.11%)</title><rect x="124" y="356" width="1" height="15" fill="rgb(231,28,11)"/><text x="127.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:527) (1 samples, 0.11%)</title><rect x="124" y="372" width="1" height="15" fill="rgb(251,58,26)"/><text x="127.00" y="382.50"></text></g><g><title>PyArray_XDECREF (refcount.c:234) (1 samples, 0.11%)</title><rect x="124" y="388" width="1" height="15" fill="rgb(216,181,44)"/><text x="127.00" y="398.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:149) (1 samples, 0.11%)</title><rect x="124" y="404" width="1" height="15" fill="rgb(220,68,51)"/><text x="127.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:124) (1 samples, 0.11%)</title><rect x="125" y="308" width="1" height="15" fill="rgb(221,52,14)"/><text x="128.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.11%)</title><rect x="126" y="356" width="2" height="15" fill="rgb(246,206,41)"/><text x="129.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1967) (1 samples, 0.11%)</title><rect x="126" y="372" width="2" height="15" fill="rgb(213,113,31)"/><text x="129.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.11%)</title><rect x="128" y="356" width="1" height="15" fill="rgb(217,99,40)"/><text x="131.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.11%)</title><rect x="128" y="372" width="1" height="15" fill="rgb(237,6,6)"/><text x="131.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.11%)</title><rect x="128" y="388" width="1" height="15" fill="rgb(221,109,18)"/><text x="131.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.11%)</title><rect x="129" y="372" width="1" height="15" fill="rgb(228,33,40)"/><text x="132.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.11%)</title><rect x="129" y="388" width="1" height="15" fill="rgb(247,211,30)"/><text x="132.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.11%)</title><rect x="130" y="372" width="2" height="15" fill="rgb(247,163,6)"/><text x="133.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.11%)</title><rect x="130" y="388" width="2" height="15" fill="rgb(209,131,36)"/><text x="133.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.11%)</title><rect x="130" y="404" width="2" height="15" fill="rgb(223,119,39)"/><text x="133.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.11%)</title><rect x="130" y="420" width="2" height="15" fill="rgb(237,95,13)"/><text x="133.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:454) (1 samples, 0.11%)</title><rect x="130" y="436" width="2" height="15" fill="rgb(229,194,37)"/><text x="133.00" y="446.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:376) (1 samples, 0.11%)</title><rect x="130" y="452" width="2" height="15" fill="rgb(246,173,52)"/><text x="133.00" y="462.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.11%)</title><rect x="130" y="468" width="2" height="15" fill="rgb(237,180,27)"/><text x="133.00" y="478.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.11%)</title><rect x="130" y="484" width="2" height="15" fill="rgb(234,206,28)"/><text x="133.00" y="494.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (2 samples, 0.22%)</title><rect x="132" y="404" width="2" height="15" fill="rgb(221,23,38)"/><text x="135.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (26 samples, 2.86%)</title><rect x="103" y="196" width="34" height="15" fill="rgb(219,99,14)"/><text x="106.00" y="206.50">_s..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (24 samples, 2.64%)</title><rect x="106" y="212" width="31" height="15" fill="rgb(230,4,23)"/><text x="109.00" y="222.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (23 samples, 2.53%)</title><rect x="107" y="228" width="30" height="15" fill="rgb(220,93,53)"/><text x="110.00" y="238.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (23 samples, 2.53%)</title><rect x="107" y="244" width="30" height="15" fill="rgb(247,24,3)"/><text x="110.00" y="254.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (22 samples, 2.42%)</title><rect x="108" y="260" width="29" height="15" fill="rgb(250,2,36)"/><text x="111.00" y="270.50">_w..</text></g><g><title>array_clip (methods.c:2381) (22 samples, 2.42%)</title><rect x="108" y="276" width="29" height="15" fill="rgb(236,185,18)"/><text x="111.00" y="286.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (22 samples, 2.42%)</title><rect x="108" y="292" width="29" height="15" fill="rgb(254,52,30)"/><text x="111.00" y="302.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:129) (8 samples, 0.88%)</title><rect x="126" y="308" width="11" height="15" fill="rgb(217,207,42)"/><text x="129.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (8 samples, 0.88%)</title><rect x="126" y="324" width="11" height="15" fill="rgb(223,93,17)"/><text x="129.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 0.88%)</title><rect x="126" y="340" width="11" height="15" fill="rgb(234,151,49)"/><text x="129.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.66%)</title><rect x="129" y="356" width="8" height="15" fill="rgb(249,12,17)"/><text x="132.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (4 samples, 0.44%)</title><rect x="132" y="372" width="5" height="15" fill="rgb(225,75,29)"/><text x="135.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (4 samples, 0.44%)</title><rect x="132" y="388" width="5" height="15" fill="rgb(232,120,35)"/><text x="135.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (2 samples, 0.22%)</title><rect x="134" y="404" width="3" height="15" fill="rgb(222,113,18)"/><text x="137.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3162) (1 samples, 0.11%)</title><rect x="137" y="228" width="1" height="15" fill="rgb(248,32,22)"/><text x="140.00" y="238.50"></text></g><g><title>0x7f821f3c9dd0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="139" y="292" width="2" height="15" fill="rgb(222,42,32)"/><text x="142.00" y="302.50"></text></g><g><title>0x7f821f3c9e01 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="141" y="292" width="2" height="15" fill="rgb(251,79,46)"/><text x="144.00" y="302.50"></text></g><g><title>0x7f821f3c9e25 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="143" y="292" width="2" height="15" fill="rgb(246,154,37)"/><text x="146.00" y="302.50"></text></g><g><title>0x7f821f3c9e4d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="145" y="292" width="1" height="15" fill="rgb(205,58,54)"/><text x="148.00" y="302.50"></text></g><g><title>0x7f821f3c9e7e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="146" y="292" width="1" height="15" fill="rgb(230,163,5)"/><text x="149.00" y="302.50"></text></g><g><title>0x7f821f3c9eb6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="147" y="292" width="1" height="15" fill="rgb(232,5,3)"/><text x="150.00" y="302.50"></text></g><g><title>0x7f821f3c9eee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="148" y="292" width="2" height="15" fill="rgb(239,50,40)"/><text x="151.00" y="302.50"></text></g><g><title>0x7f821f3c9ef6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="150" y="292" width="1" height="15" fill="rgb(242,181,33)"/><text x="153.00" y="302.50"></text></g><g><title>0x7f821f3c9efa (libm-2.29.so) (1 samples, 0.11%)</title><rect x="151" y="292" width="1" height="15" fill="rgb(247,42,21)"/><text x="154.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (13 samples, 1.43%)</title><rect x="137" y="196" width="17" height="15" fill="rgb(222,28,44)"/><text x="140.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 1.43%)</title><rect x="137" y="212" width="17" height="15" fill="rgb(246,10,26)"/><text x="140.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 1.32%)</title><rect x="138" y="228" width="16" height="15" fill="rgb(212,54,49)"/><text x="141.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (12 samples, 1.32%)</title><rect x="138" y="244" width="16" height="15" fill="rgb(241,46,8)"/><text x="141.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (12 samples, 1.32%)</title><rect x="138" y="260" width="16" height="15" fill="rgb(211,181,27)"/><text x="141.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (12 samples, 1.32%)</title><rect x="138" y="276" width="16" height="15" fill="rgb(246,0,30)"/><text x="141.00" y="286.50"></text></g><g><title>0x7f821f3c9f43 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="152" y="292" width="2" height="15" fill="rgb(241,150,38)"/><text x="155.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4707) (1 samples, 0.11%)</title><rect x="154" y="228" width="1" height="15" fill="rgb(220,160,42)"/><text x="157.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.11%)</title><rect x="155" y="244" width="1" height="15" fill="rgb(205,78,37)"/><text x="158.00" y="254.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.11%)</title><rect x="155" y="260" width="1" height="15" fill="rgb(242,6,18)"/><text x="158.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="156" y="244" width="1" height="15" fill="rgb(217,173,30)"/><text x="159.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.11%)</title><rect x="156" y="260" width="1" height="15" fill="rgb(254,76,12)"/><text x="159.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.11%)</title><rect x="156" y="276" width="1" height="15" fill="rgb(217,193,0)"/><text x="159.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.11%)</title><rect x="156" y="292" width="1" height="15" fill="rgb(230,110,2)"/><text x="159.00" y="302.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1594) (1 samples, 0.11%)</title><rect x="156" y="308" width="1" height="15" fill="rgb(212,210,10)"/><text x="159.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.11%)</title><rect x="157" y="244" width="2" height="15" fill="rgb(223,218,29)"/><text x="160.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.11%)</title><rect x="157" y="260" width="2" height="15" fill="rgb(244,10,25)"/><text x="160.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.11%)</title><rect x="157" y="276" width="2" height="15" fill="rgb(217,138,12)"/><text x="160.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.11%)</title><rect x="157" y="292" width="2" height="15" fill="rgb(206,0,25)"/><text x="160.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="157" y="308" width="2" height="15" fill="rgb(223,217,51)"/><text x="160.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.11%)</title><rect x="157" y="324" width="2" height="15" fill="rgb(208,118,42)"/><text x="160.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.44%)</title><rect x="155" y="228" width="5" height="15" fill="rgb(234,15,39)"/><text x="158.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="159" y="244" width="1" height="15" fill="rgb(205,96,11)"/><text x="162.00" y="254.50"></text></g><g><title>array_multiply (number.c:354) (6 samples, 0.66%)</title><rect x="154" y="212" width="7" height="15" fill="rgb(229,182,21)"/><text x="157.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="160" y="228" width="1" height="15" fill="rgb(233,77,43)"/><text x="163.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="160" y="244" width="1" height="15" fill="rgb(244,64,13)"/><text x="163.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="160" y="260" width="1" height="15" fill="rgb(232,101,51)"/><text x="163.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="160" y="276" width="1" height="15" fill="rgb(238,160,36)"/><text x="163.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (1 samples, 0.11%)</title><rect x="161" y="228" width="2" height="15" fill="rgb(223,25,11)"/><text x="164.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="163" y="244" width="1" height="15" fill="rgb(208,171,54)"/><text x="166.00" y="254.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.11%)</title><rect x="163" y="260" width="1" height="15" fill="rgb(248,210,12)"/><text x="166.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.11%)</title><rect x="163" y="276" width="1" height="15" fill="rgb(248,51,22)"/><text x="166.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.11%)</title><rect x="163" y="292" width="1" height="15" fill="rgb(247,57,23)"/><text x="166.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1676) (1 samples, 0.11%)</title><rect x="164" y="260" width="1" height="15" fill="rgb(249,117,52)"/><text x="167.00" y="270.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:205) (1 samples, 0.11%)</title><rect x="164" y="276" width="1" height="15" fill="rgb(244,151,37)"/><text x="167.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.11%)</title><rect x="165" y="292" width="2" height="15" fill="rgb(243,221,44)"/><text x="168.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.11%)</title><rect x="165" y="308" width="2" height="15" fill="rgb(249,208,52)"/><text x="168.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="167" y="324" width="1" height="15" fill="rgb(227,3,53)"/><text x="170.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.11%)</title><rect x="168" y="340" width="1" height="15" fill="rgb(222,25,1)"/><text x="171.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.55%)</title><rect x="165" y="276" width="7" height="15" fill="rgb(241,198,0)"/><text x="168.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.44%)</title><rect x="167" y="292" width="5" height="15" fill="rgb(241,37,43)"/><text x="170.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.44%)</title><rect x="167" y="308" width="5" height="15" fill="rgb(224,176,6)"/><text x="170.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.33%)</title><rect x="168" y="324" width="4" height="15" fill="rgb(233,47,15)"/><text x="171.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.22%)</title><rect x="169" y="340" width="3" height="15" fill="rgb(208,99,28)"/><text x="172.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="172" y="276" width="1" height="15" fill="rgb(237,210,16)"/><text x="175.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="172" y="292" width="1" height="15" fill="rgb(210,196,9)"/><text x="175.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="172" y="308" width="1" height="15" fill="rgb(234,0,6)"/><text x="175.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="172" y="324" width="1" height="15" fill="rgb(228,158,25)"/><text x="175.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h:241) (1 samples, 0.11%)</title><rect x="172" y="340" width="1" height="15" fill="rgb(222,123,8)"/><text x="175.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (10 samples, 1.10%)</title><rect x="161" y="212" width="13" height="15" fill="rgb(230,199,35)"/><text x="164.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 0.99%)</title><rect x="163" y="228" width="11" height="15" fill="rgb(216,34,50)"/><text x="166.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.88%)</title><rect x="164" y="244" width="10" height="15" fill="rgb(227,44,23)"/><text x="167.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 0.77%)</title><rect x="165" y="260" width="9" height="15" fill="rgb(252,19,10)"/><text x="168.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="173" y="276" width="1" height="15" fill="rgb(208,120,18)"/><text x="176.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.11%)</title><rect x="173" y="292" width="1" height="15" fill="rgb(238,91,29)"/><text x="176.00" y="302.50"></text></g><g><title>0x7f821f1f7a71 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="173" y="308" width="1" height="15" fill="rgb(222,128,4)"/><text x="176.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.11%)</title><rect x="174" y="260" width="2" height="15" fill="rgb(230,47,12)"/><text x="177.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="174" y="276" width="2" height="15" fill="rgb(232,157,28)"/><text x="177.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="174" y="292" width="2" height="15" fill="rgb(211,98,5)"/><text x="177.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="174" y="308" width="2" height="15" fill="rgb(226,109,4)"/><text x="177.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="174" y="324" width="2" height="15" fill="rgb(224,33,9)"/><text x="177.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.11%)</title><rect x="174" y="340" width="2" height="15" fill="rgb(208,188,11)"/><text x="177.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.11%)</title><rect x="176" y="324" width="1" height="15" fill="rgb(213,59,13)"/><text x="179.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.11%)</title><rect x="177" y="324" width="1" height="15" fill="rgb(206,34,16)"/><text x="180.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="178" y="340" width="2" height="15" fill="rgb(248,69,2)"/><text x="181.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="180" y="340" width="1" height="15" fill="rgb(249,134,17)"/><text x="183.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.22%)</title><rect x="181" y="340" width="2" height="15" fill="rgb(242,172,10)"/><text x="184.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.11%)</title><rect x="183" y="340" width="2" height="15" fill="rgb(235,172,38)"/><text x="186.00" y="350.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:2004) (1 samples, 0.11%)</title><rect x="183" y="356" width="2" height="15" fill="rgb(252,76,10)"/><text x="186.00" y="366.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (129 samples, 14.19%)</title><rect x="19" y="180" width="167" height="15" fill="rgb(208,207,8)"/><text x="22.00" y="190.50">&lt;genexpr&gt; (sklearn/en..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (25 samples, 2.75%)</title><rect x="154" y="196" width="32" height="15" fill="rgb(224,7,4)"/><text x="157.00" y="206.50">_s..</text></g><g><title>array_sum (methods.c:2215) (9 samples, 0.99%)</title><rect x="174" y="212" width="12" height="15" fill="rgb(224,186,51)"/><text x="177.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 0.99%)</title><rect x="174" y="228" width="12" height="15" fill="rgb(219,36,26)"/><text x="177.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (9 samples, 0.99%)</title><rect x="174" y="244" width="12" height="15" fill="rgb(240,184,32)"/><text x="177.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 0.88%)</title><rect x="176" y="260" width="10" height="15" fill="rgb(248,176,53)"/><text x="179.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 0.88%)</title><rect x="176" y="276" width="10" height="15" fill="rgb(248,164,4)"/><text x="179.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 0.88%)</title><rect x="176" y="292" width="10" height="15" fill="rgb(247,39,54)"/><text x="179.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (8 samples, 0.88%)</title><rect x="176" y="308" width="10" height="15" fill="rgb(253,72,1)"/><text x="179.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 0.66%)</title><rect x="178" y="324" width="8" height="15" fill="rgb(237,28,7)"/><text x="181.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.11%)</title><rect x="185" y="340" width="1" height="15" fill="rgb(219,102,39)"/><text x="188.00" y="350.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (130 samples, 14.30%)</title><rect x="19" y="148" width="168" height="15" fill="rgb(216,223,0)"/><text x="22.00" y="158.50">predict_proba (sklear..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (130 samples, 14.30%)</title><rect x="19" y="164" width="168" height="15" fill="rgb(220,75,33)"/><text x="22.00" y="174.50">decision_function (sk..</text></g><g><title>array_add (number.c:330) (1 samples, 0.11%)</title><rect x="186" y="180" width="1" height="15" fill="rgb(237,28,46)"/><text x="189.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="186" y="196" width="1" height="15" fill="rgb(236,128,51)"/><text x="189.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="186" y="212" width="1" height="15" fill="rgb(227,144,46)"/><text x="189.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="186" y="228" width="1" height="15" fill="rgb(222,87,0)"/><text x="189.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.11%)</title><rect x="186" y="244" width="1" height="15" fill="rgb(216,30,20)"/><text x="189.00" y="254.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="186" y="260" width="1" height="15" fill="rgb(227,208,36)"/><text x="189.00" y="270.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (1 samples, 0.11%)</title><rect x="187" y="180" width="2" height="15" fill="rgb(231,177,19)"/><text x="190.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="187" y="196" width="2" height="15" fill="rgb(209,224,47)"/><text x="190.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="187" y="212" width="2" height="15" fill="rgb(206,2,33)"/><text x="190.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (1 samples, 0.11%)</title><rect x="187" y="228" width="2" height="15" fill="rgb(220,130,38)"/><text x="190.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.11%)</title><rect x="187" y="244" width="2" height="15" fill="rgb(208,124,21)"/><text x="190.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.11%)</title><rect x="187" y="260" width="2" height="15" fill="rgb(214,27,25)"/><text x="190.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.11%)</title><rect x="187" y="276" width="2" height="15" fill="rgb(224,195,12)"/><text x="190.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="187" y="292" width="2" height="15" fill="rgb(228,30,52)"/><text x="190.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="187" y="308" width="2" height="15" fill="rgb(214,188,42)"/><text x="190.00" y="318.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:18) (132 samples, 14.52%)</title><rect x="19" y="100" width="171" height="15" fill="rgb(226,179,21)"/><text x="22.00" y="110.50">profile (bench_AdaBoos..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (132 samples, 14.52%)</title><rect x="19" y="116" width="171" height="15" fill="rgb(240,144,44)"/><text x="22.00" y="126.50">time_predict (mlprodic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (132 samples, 14.52%)</title><rect x="19" y="132" width="171" height="15" fill="rgb(241,142,11)"/><text x="22.00" y="142.50">&lt;lambda&gt; (mlprodict/as..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (2 samples, 0.22%)</title><rect x="187" y="148" width="3" height="15" fill="rgb(230,56,10)"/><text x="190.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (2 samples, 0.22%)</title><rect x="187" y="164" width="3" height="15" fill="rgb(241,127,45)"/><text x="190.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:612) (1 samples, 0.11%)</title><rect x="189" y="180" width="1" height="15" fill="rgb(234,218,30)"/><text x="192.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.11%)</title><rect x="189" y="196" width="1" height="15" fill="rgb(213,7,29)"/><text x="192.00" y="206.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.11%)</title><rect x="190" y="148" width="1" height="15" fill="rgb(221,170,13)"/><text x="193.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.11%)</title><rect x="190" y="164" width="1" height="15" fill="rgb(212,109,49)"/><text x="193.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.11%)</title><rect x="190" y="180" width="1" height="15" fill="rgb(214,229,15)"/><text x="193.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.11%)</title><rect x="190" y="196" width="1" height="15" fill="rgb(251,211,50)"/><text x="193.00" y="206.50"></text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:689) (1 samples, 0.11%)</title><rect x="191" y="164" width="2" height="15" fill="rgb(245,104,30)"/><text x="194.00" y="174.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.11%)</title><rect x="191" y="180" width="2" height="15" fill="rgb(233,83,41)"/><text x="194.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.11%)</title><rect x="191" y="196" width="2" height="15" fill="rgb(223,79,36)"/><text x="194.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.11%)</title><rect x="191" y="212" width="2" height="15" fill="rgb(240,201,22)"/><text x="194.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 0.66%)</title><rect x="196" y="244" width="8" height="15" fill="rgb(213,54,52)"/><text x="199.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.22%)</title><rect x="202" y="260" width="2" height="15" fill="rgb(250,155,18)"/><text x="205.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (8 samples, 0.88%)</title><rect x="196" y="212" width="11" height="15" fill="rgb(246,62,9)"/><text x="199.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 0.88%)</title><rect x="196" y="228" width="11" height="15" fill="rgb(232,26,34)"/><text x="199.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.22%)</title><rect x="204" y="244" width="3" height="15" fill="rgb(217,1,11)"/><text x="207.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.11%)</title><rect x="207" y="244" width="1" height="15" fill="rgb(252,18,23)"/><text x="210.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.11%)</title><rect x="208" y="244" width="1" height="15" fill="rgb(226,54,20)"/><text x="211.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.11%)</title><rect x="209" y="244" width="2" height="15" fill="rgb(229,61,9)"/><text x="212.00" y="254.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.11%)</title><rect x="209" y="260" width="2" height="15" fill="rgb(238,216,29)"/><text x="212.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.11%)</title><rect x="211" y="260" width="1" height="15" fill="rgb(206,129,1)"/><text x="214.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.11%)</title><rect x="212" y="260" width="1" height="15" fill="rgb(206,96,4)"/><text x="215.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.11%)</title><rect x="213" y="260" width="2" height="15" fill="rgb(222,176,54)"/><text x="216.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.11%)</title><rect x="215" y="260" width="1" height="15" fill="rgb(208,69,16)"/><text x="218.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (5 samples, 0.55%)</title><rect x="211" y="244" width="6" height="15" fill="rgb(214,146,18)"/><text x="214.00" y="254.50"></text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.11%)</title><rect x="216" y="260" width="1" height="15" fill="rgb(247,61,28)"/><text x="219.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.11%)</title><rect x="217" y="260" width="1" height="15" fill="rgb(227,114,26)"/><text x="220.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 0.33%)</title><rect x="217" y="244" width="4" height="15" fill="rgb(226,19,10)"/><text x="220.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.22%)</title><rect x="218" y="260" width="3" height="15" fill="rgb(242,184,14)"/><text x="221.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.11%)</title><rect x="220" y="276" width="1" height="15" fill="rgb(251,166,2)"/><text x="223.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.22%)</title><rect x="221" y="244" width="3" height="15" fill="rgb(223,200,53)"/><text x="224.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.22%)</title><rect x="221" y="260" width="3" height="15" fill="rgb(217,8,26)"/><text x="224.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.11%)</title><rect x="224" y="244" width="1" height="15" fill="rgb(212,203,5)"/><text x="227.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.11%)</title><rect x="224" y="260" width="1" height="15" fill="rgb(230,180,37)"/><text x="227.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.11%)</title><rect x="225" y="244" width="1" height="15" fill="rgb(254,180,22)"/><text x="228.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.11%)</title><rect x="226" y="244" width="2" height="15" fill="rgb(224,178,15)"/><text x="229.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.11%)</title><rect x="226" y="260" width="2" height="15" fill="rgb(229,115,36)"/><text x="229.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (5 samples, 0.55%)</title><rect x="228" y="244" width="6" height="15" fill="rgb(245,73,32)"/><text x="231.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 0.55%)</title><rect x="228" y="260" width="6" height="15" fill="rgb(219,215,46)"/><text x="231.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 0.33%)</title><rect x="230" y="276" width="4" height="15" fill="rgb(206,118,20)"/><text x="233.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.22%)</title><rect x="231" y="292" width="3" height="15" fill="rgb(211,26,27)"/><text x="234.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (22 samples, 2.42%)</title><rect x="207" y="228" width="28" height="15" fill="rgb(254,88,18)"/><text x="210.00" y="238.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:566) (1 samples, 0.11%)</title><rect x="234" y="244" width="1" height="15" fill="rgb(248,164,11)"/><text x="237.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (23 samples, 2.53%)</title><rect x="207" y="212" width="30" height="15" fill="rgb(227,4,35)"/><text x="210.00" y="222.50">pr..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.11%)</title><rect x="235" y="228" width="2" height="15" fill="rgb(238,220,31)"/><text x="238.00" y="238.50"></text></g><g><title>0x7f81f8c2ad33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="237" y="260" width="1" height="15" fill="rgb(243,110,41)"/><text x="240.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.11%)</title><rect x="237" y="276" width="1" height="15" fill="rgb(250,213,38)"/><text x="240.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.11%)</title><rect x="237" y="292" width="1" height="15" fill="rgb(251,71,36)"/><text x="240.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.11%)</title><rect x="237" y="308" width="1" height="15" fill="rgb(247,93,21)"/><text x="240.00" y="318.50"></text></g><g><title>0x7f81f8c3af55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="237" y="244" width="2" height="15" fill="rgb(248,195,0)"/><text x="240.00" y="254.50"></text></g><g><title>0x7f81f8c2ad7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="238" y="260" width="1" height="15" fill="rgb(239,55,24)"/><text x="241.00" y="270.50"></text></g><g><title>0x7f81f8c17bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="238" y="276" width="1" height="15" fill="rgb(223,225,40)"/><text x="241.00" y="286.50"></text></g><g><title>0x7f81f8c1ed60 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="238" y="292" width="1" height="15" fill="rgb(236,167,24)"/><text x="241.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.11%)</title><rect x="239" y="372" width="2" height="15" fill="rgb(243,222,25)"/><text x="242.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="239" y="388" width="2" height="15" fill="rgb(226,145,16)"/><text x="242.00" y="398.50"></text></g><g><title>_buffer_format_string (buffer.c:365) (1 samples, 0.11%)</title><rect x="241" y="388" width="1" height="15" fill="rgb(233,63,23)"/><text x="244.00" y="398.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:215) (1 samples, 0.11%)</title><rect x="241" y="404" width="1" height="15" fill="rgb(215,36,25)"/><text x="244.00" y="414.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (3 samples, 0.33%)</title><rect x="239" y="356" width="4" height="15" fill="rgb(215,105,50)"/><text x="242.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (2 samples, 0.22%)</title><rect x="241" y="372" width="2" height="15" fill="rgb(249,165,8)"/><text x="244.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (1 samples, 0.11%)</title><rect x="242" y="388" width="1" height="15" fill="rgb(254,136,16)"/><text x="245.00" y="398.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.11%)</title><rect x="242" y="404" width="1" height="15" fill="rgb(245,228,51)"/><text x="245.00" y="414.50"></text></g><g><title>0x7f821e41ad50 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="242" y="420" width="1" height="15" fill="rgb(222,171,7)"/><text x="245.00" y="430.50"></text></g><g><title>0x7f81f8c492df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.44%)</title><rect x="239" y="276" width="5" height="15" fill="rgb(235,151,33)"/><text x="242.00" y="286.50"></text></g><g><title>0x7f81f8c2dd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.44%)</title><rect x="239" y="292" width="5" height="15" fill="rgb(249,202,1)"/><text x="242.00" y="302.50"></text></g><g><title>0x7f81f8c2d666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.44%)</title><rect x="239" y="308" width="5" height="15" fill="rgb(215,96,45)"/><text x="242.00" y="318.50"></text></g><g><title>0x7f81f8c232fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.44%)</title><rect x="239" y="324" width="5" height="15" fill="rgb(250,124,24)"/><text x="242.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (4 samples, 0.44%)</title><rect x="239" y="340" width="5" height="15" fill="rgb(253,48,7)"/><text x="242.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.11%)</title><rect x="243" y="356" width="1" height="15" fill="rgb(232,176,6)"/><text x="246.00" y="366.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.11%)</title><rect x="243" y="372" width="1" height="15" fill="rgb(215,57,9)"/><text x="246.00" y="382.50"></text></g><g><title>0x7f821f1f7902 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="243" y="388" width="1" height="15" fill="rgb(236,43,31)"/><text x="246.00" y="398.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.11%)</title><rect x="246" y="292" width="1" height="15" fill="rgb(254,215,44)"/><text x="249.00" y="302.50"></text></g><g><title>0x7f81f8c49592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.33%)</title><rect x="244" y="276" width="4" height="15" fill="rgb(224,40,47)"/><text x="247.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.11%)</title><rect x="247" y="292" width="1" height="15" fill="rgb(230,201,34)"/><text x="250.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.11%)</title><rect x="247" y="308" width="1" height="15" fill="rgb(233,5,13)"/><text x="250.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.11%)</title><rect x="247" y="324" width="1" height="15" fill="rgb(245,154,29)"/><text x="250.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.11%)</title><rect x="247" y="340" width="1" height="15" fill="rgb(206,222,3)"/><text x="250.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.11%)</title><rect x="247" y="356" width="1" height="15" fill="rgb(224,52,17)"/><text x="250.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.11%)</title><rect x="247" y="372" width="1" height="15" fill="rgb(223,12,44)"/><text x="250.00" y="382.50"></text></g><g><title>0x7f821e41a970 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="247" y="388" width="1" height="15" fill="rgb(235,68,3)"/><text x="250.00" y="398.50"></text></g><g><title>0x7f81f8c49972 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="248" y="276" width="2" height="15" fill="rgb(239,44,36)"/><text x="251.00" y="286.50"></text></g><g><title>0x7f81f8c4a405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 0.99%)</title><rect x="239" y="260" width="12" height="15" fill="rgb(219,215,10)"/><text x="242.00" y="270.50"></text></g><g><title>0x7f81f8c49c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="250" y="276" width="1" height="15" fill="rgb(249,127,17)"/><text x="253.00" y="286.50"></text></g><g><title>0x7f81f8c21529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="250" y="292" width="1" height="15" fill="rgb(208,24,23)"/><text x="253.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="250" y="308" width="1" height="15" fill="rgb(212,13,4)"/><text x="253.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.11%)</title><rect x="250" y="324" width="1" height="15" fill="rgb(240,167,26)"/><text x="253.00" y="334.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.11%)</title><rect x="250" y="340" width="1" height="15" fill="rgb(248,220,10)"/><text x="253.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="250" y="356" width="1" height="15" fill="rgb(205,153,45)"/><text x="253.00" y="366.50"></text></g><g><title>0x7f81f8c3afa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.10%)</title><rect x="239" y="244" width="13" height="15" fill="rgb(238,51,53)"/><text x="242.00" y="254.50"></text></g><g><title>0x7f81f8c4a540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="251" y="260" width="1" height="15" fill="rgb(229,46,43)"/><text x="254.00" y="270.50"></text></g><g><title>0x7f81f8c1f2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="251" y="276" width="1" height="15" fill="rgb(240,27,10)"/><text x="254.00" y="286.50"></text></g><g><title>0x7f81f8c1e530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="251" y="292" width="1" height="15" fill="rgb(209,199,32)"/><text x="254.00" y="302.50"></text></g><g><title>array_take (methods.c:138) (2 samples, 0.22%)</title><rect x="252" y="260" width="3" height="15" fill="rgb(212,108,31)"/><text x="255.00" y="270.50"></text></g><g><title>0x7f821f20d757 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="254" y="276" width="1" height="15" fill="rgb(224,97,5)"/><text x="257.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.11%)</title><rect x="255" y="292" width="1" height="15" fill="rgb(238,219,23)"/><text x="258.00" y="302.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.22%)</title><rect x="255" y="276" width="2" height="15" fill="rgb(248,1,44)"/><text x="258.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3961) (1 samples, 0.11%)</title><rect x="256" y="292" width="1" height="15" fill="rgb(215,222,8)"/><text x="259.00" y="302.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.33%)</title><rect x="255" y="260" width="4" height="15" fill="rgb(215,5,34)"/><text x="258.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.11%)</title><rect x="257" y="276" width="2" height="15" fill="rgb(214,204,25)"/><text x="260.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.11%)</title><rect x="257" y="292" width="2" height="15" fill="rgb(227,49,53)"/><text x="260.00" y="302.50"></text></g><g><title>PyArray_FromArray (ctors.c:2142) (1 samples, 0.11%)</title><rect x="257" y="308" width="2" height="15" fill="rgb(208,71,24)"/><text x="260.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (18 samples, 1.98%)</title><rect x="237" y="212" width="23" height="15" fill="rgb(209,48,43)"/><text x="240.00" y="222.50">p..</text></g><g><title>0x7f81f8c3bd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 1.98%)</title><rect x="237" y="228" width="23" height="15" fill="rgb(250,56,54)"/><text x="240.00" y="238.50">0..</text></g><g><title>0x7f81f8c3b05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.66%)</title><rect x="252" y="244" width="8" height="15" fill="rgb(244,202,53)"/><text x="255.00" y="254.50"></text></g><g><title>array_take (methods.c:147) (1 samples, 0.11%)</title><rect x="259" y="260" width="1" height="15" fill="rgb(245,193,38)"/><text x="262.00" y="270.50"></text></g><g><title>PyArray_Return (scalarapi.c:849) (1 samples, 0.11%)</title><rect x="259" y="276" width="1" height="15" fill="rgb(243,203,31)"/><text x="262.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.11%)</title><rect x="260" y="228" width="1" height="15" fill="rgb(238,226,39)"/><text x="263.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:614) (1 samples, 0.11%)</title><rect x="260" y="244" width="1" height="15" fill="rgb(214,116,7)"/><text x="263.00" y="254.50"></text></g><g><title>_nonzero_indices (mapping.c:2127) (1 samples, 0.11%)</title><rect x="260" y="260" width="1" height="15" fill="rgb(248,145,54)"/><text x="263.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.22%)</title><rect x="260" y="212" width="3" height="15" fill="rgb(249,87,16)"/><text x="263.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.11%)</title><rect x="261" y="228" width="2" height="15" fill="rgb(254,7,24)"/><text x="264.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:953) (1 samples, 0.11%)</title><rect x="261" y="244" width="2" height="15" fill="rgb(230,135,23)"/><text x="264.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.11%)</title><rect x="263" y="228" width="1" height="15" fill="rgb(226,185,2)"/><text x="266.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:931) (1 samples, 0.11%)</title><rect x="263" y="244" width="1" height="15" fill="rgb(216,11,20)"/><text x="266.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.11%)</title><rect x="265" y="292" width="2" height="15" fill="rgb(252,35,29)"/><text x="268.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.11%)</title><rect x="267" y="292" width="1" height="15" fill="rgb(216,136,49)"/><text x="270.00" y="302.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.11%)</title><rect x="267" y="308" width="1" height="15" fill="rgb(231,95,18)"/><text x="270.00" y="318.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.11%)</title><rect x="267" y="324" width="1" height="15" fill="rgb(250,195,46)"/><text x="270.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.11%)</title><rect x="267" y="340" width="1" height="15" fill="rgb(209,80,19)"/><text x="270.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="268" y="308" width="1" height="15" fill="rgb(210,192,20)"/><text x="271.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="268" y="324" width="1" height="15" fill="rgb(246,21,33)"/><text x="271.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.11%)</title><rect x="268" y="340" width="1" height="15" fill="rgb(223,174,16)"/><text x="271.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.11%)</title><rect x="268" y="356" width="1" height="15" fill="rgb(249,202,32)"/><text x="271.00" y="366.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.11%)</title><rect x="268" y="372" width="1" height="15" fill="rgb(224,137,30)"/><text x="271.00" y="382.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.11%)</title><rect x="268" y="388" width="1" height="15" fill="rgb(235,15,5)"/><text x="271.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.11%)</title><rect x="269" y="324" width="1" height="15" fill="rgb(216,220,17)"/><text x="272.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.11%)</title><rect x="269" y="340" width="1" height="15" fill="rgb(238,204,13)"/><text x="272.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="269" y="356" width="1" height="15" fill="rgb(219,199,21)"/><text x="272.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:36) (1 samples, 0.11%)</title><rect x="269" y="372" width="1" height="15" fill="rgb(252,151,26)"/><text x="272.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.11%)</title><rect x="270" y="340" width="2" height="15" fill="rgb(209,202,48)"/><text x="273.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="272" y="356" width="1" height="15" fill="rgb(244,192,20)"/><text x="275.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.11%)</title><rect x="274" y="372" width="2" height="15" fill="rgb(244,17,39)"/><text x="277.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.33%)</title><rect x="273" y="356" width="4" height="15" fill="rgb(222,123,18)"/><text x="276.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.11%)</title><rect x="276" y="372" width="1" height="15" fill="rgb(218,95,24)"/><text x="279.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.11%)</title><rect x="277" y="356" width="1" height="15" fill="rgb(233,88,13)"/><text x="280.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.11%)</title><rect x="278" y="356" width="2" height="15" fill="rgb(251,105,30)"/><text x="281.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (2 samples, 0.22%)</title><rect x="280" y="356" width="2" height="15" fill="rgb(224,222,45)"/><text x="283.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.11%)</title><rect x="282" y="356" width="1" height="15" fill="rgb(208,25,7)"/><text x="285.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (17 samples, 1.87%)</title><rect x="263" y="212" width="22" height="15" fill="rgb(221,205,51)"/><text x="266.00" y="222.50">p..</text></g><g><title>array_sum (methods.c:2215) (16 samples, 1.76%)</title><rect x="264" y="228" width="21" height="15" fill="rgb(232,162,43)"/><text x="267.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (16 samples, 1.76%)</title><rect x="264" y="244" width="21" height="15" fill="rgb(215,168,29)"/><text x="267.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (16 samples, 1.76%)</title><rect x="264" y="260" width="21" height="15" fill="rgb(253,54,20)"/><text x="267.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (15 samples, 1.65%)</title><rect x="265" y="276" width="20" height="15" fill="rgb(224,177,29)"/><text x="268.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (13 samples, 1.43%)</title><rect x="268" y="292" width="17" height="15" fill="rgb(233,196,35)"/><text x="271.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (12 samples, 1.32%)</title><rect x="269" y="308" width="16" height="15" fill="rgb(219,16,6)"/><text x="272.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (11 samples, 1.21%)</title><rect x="270" y="324" width="15" height="15" fill="rgb(234,110,15)"/><text x="273.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (10 samples, 1.10%)</title><rect x="272" y="340" width="13" height="15" fill="rgb(230,218,30)"/><text x="275.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:244) (1 samples, 0.11%)</title><rect x="283" y="356" width="2" height="15" fill="rgb(236,174,5)"/><text x="286.00" y="366.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.11%)</title><rect x="285" y="244" width="1" height="15" fill="rgb(239,199,3)"/><text x="288.00" y="254.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (2 samples, 0.22%)</title><rect x="285" y="228" width="2" height="15" fill="rgb(214,190,6)"/><text x="288.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:567) (1 samples, 0.11%)</title><rect x="286" y="244" width="1" height="15" fill="rgb(223,203,2)"/><text x="289.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="287" y="276" width="2" height="15" fill="rgb(217,51,39)"/><text x="290.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.11%)</title><rect x="287" y="292" width="2" height="15" fill="rgb(251,103,28)"/><text x="290.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.11%)</title><rect x="287" y="308" width="2" height="15" fill="rgb(211,195,14)"/><text x="290.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.11%)</title><rect x="287" y="324" width="2" height="15" fill="rgb(233,99,44)"/><text x="290.00" y="334.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:71) (1 samples, 0.11%)</title><rect x="287" y="340" width="2" height="15" fill="rgb(215,86,3)"/><text x="290.00" y="350.50"></text></g><g><title>0x7f821e41a350 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="287" y="356" width="2" height="15" fill="rgb(225,140,5)"/><text x="290.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.22%)</title><rect x="287" y="260" width="3" height="15" fill="rgb(222,25,1)"/><text x="290.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1119) (1 samples, 0.11%)</title><rect x="289" y="276" width="1" height="15" fill="rgb(243,195,53)"/><text x="292.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.11%)</title><rect x="290" y="260" width="1" height="15" fill="rgb(228,73,17)"/><text x="293.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.11%)</title><rect x="290" y="276" width="1" height="15" fill="rgb(230,102,5)"/><text x="293.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (6 samples, 0.66%)</title><rect x="285" y="212" width="7" height="15" fill="rgb(222,35,4)"/><text x="288.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (4 samples, 0.44%)</title><rect x="287" y="228" width="5" height="15" fill="rgb(234,198,36)"/><text x="290.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.44%)</title><rect x="287" y="244" width="5" height="15" fill="rgb(246,167,42)"/><text x="290.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="291" y="260" width="1" height="15" fill="rgb(219,70,47)"/><text x="294.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.11%)</title><rect x="291" y="276" width="1" height="15" fill="rgb(229,13,31)"/><text x="294.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1848) (1 samples, 0.11%)</title><rect x="291" y="292" width="1" height="15" fill="rgb(230,33,36)"/><text x="294.00" y="302.50"></text></g><g><title>array_inplace_true_divide (number.c:839) (1 samples, 0.11%)</title><rect x="292" y="228" width="2" height="15" fill="rgb(231,51,22)"/><text x="295.00" y="238.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.11%)</title><rect x="294" y="324" width="1" height="15" fill="rgb(223,123,11)"/><text x="297.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="295" y="324" width="1" height="15" fill="rgb(245,215,53)"/><text x="298.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="296" y="340" width="2" height="15" fill="rgb(217,48,4)"/><text x="299.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.11%)</title><rect x="298" y="340" width="1" height="15" fill="rgb(208,175,54)"/><text x="301.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 0.66%)</title><rect x="294" y="276" width="8" height="15" fill="rgb(224,127,49)"/><text x="297.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 0.66%)</title><rect x="294" y="292" width="8" height="15" fill="rgb(248,32,16)"/><text x="297.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 0.66%)</title><rect x="294" y="308" width="8" height="15" fill="rgb(229,117,54)"/><text x="297.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 0.44%)</title><rect x="296" y="324" width="6" height="15" fill="rgb(214,152,48)"/><text x="299.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (2 samples, 0.22%)</title><rect x="299" y="340" width="3" height="15" fill="rgb(249,39,4)"/><text x="302.00" y="350.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (5 samples, 0.55%)</title><rect x="302" y="292" width="6" height="15" fill="rgb(209,227,28)"/><text x="305.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (5 samples, 0.55%)</title><rect x="302" y="308" width="6" height="15" fill="rgb(220,113,17)"/><text x="305.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (5 samples, 0.55%)</title><rect x="302" y="324" width="6" height="15" fill="rgb(232,228,37)"/><text x="305.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (5 samples, 0.55%)</title><rect x="302" y="340" width="6" height="15" fill="rgb(247,201,4)"/><text x="305.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (89 samples, 9.79%)</title><rect x="194" y="196" width="115" height="15" fill="rgb(215,224,7)"/><text x="197.00" y="206.50">_samme_proba (..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (13 samples, 1.43%)</title><rect x="292" y="212" width="17" height="15" fill="rgb(218,115,38)"/><text x="295.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 1.32%)</title><rect x="294" y="228" width="15" height="15" fill="rgb(229,63,45)"/><text x="297.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 1.32%)</title><rect x="294" y="244" width="15" height="15" fill="rgb(218,49,7)"/><text x="297.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (12 samples, 1.32%)</title><rect x="294" y="260" width="15" height="15" fill="rgb(209,56,52)"/><text x="297.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (6 samples, 0.66%)</title><rect x="302" y="276" width="7" height="15" fill="rgb(229,42,31)"/><text x="305.00" y="286.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:278) (1 samples, 0.11%)</title><rect x="308" y="292" width="1" height="15" fill="rgb(254,16,41)"/><text x="311.00" y="302.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.11%)</title><rect x="311" y="212" width="1" height="15" fill="rgb(227,70,23)"/><text x="314.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.11%)</title><rect x="311" y="228" width="1" height="15" fill="rgb(219,118,13)"/><text x="314.00" y="238.50"></text></g><g><title>0x7f821f20d757 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="311" y="244" width="1" height="15" fill="rgb(232,56,39)"/><text x="314.00" y="254.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="312" y="212" width="1" height="15" fill="rgb(230,171,12)"/><text x="315.00" y="222.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py:1971) (1 samples, 0.11%)</title><rect x="312" y="228" width="1" height="15" fill="rgb(211,163,4)"/><text x="315.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.22%)</title><rect x="313" y="228" width="3" height="15" fill="rgb(231,218,11)"/><text x="316.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.22%)</title><rect x="313" y="244" width="3" height="15" fill="rgb(247,87,18)"/><text x="316.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.22%)</title><rect x="313" y="260" width="3" height="15" fill="rgb(228,178,5)"/><text x="316.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.22%)</title><rect x="313" y="276" width="3" height="15" fill="rgb(224,189,4)"/><text x="316.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.22%)</title><rect x="313" y="292" width="3" height="15" fill="rgb(224,12,47)"/><text x="316.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.11%)</title><rect x="316" y="260" width="1" height="15" fill="rgb(210,144,8)"/><text x="319.00" y="270.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="318" y="324" width="2" height="15" fill="rgb(248,131,53)"/><text x="321.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="318" y="340" width="2" height="15" fill="rgb(227,105,11)"/><text x="321.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.11%)</title><rect x="320" y="324" width="1" height="15" fill="rgb(206,22,45)"/><text x="323.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="321" y="340" width="1" height="15" fill="rgb(235,176,9)"/><text x="324.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="321" y="356" width="1" height="15" fill="rgb(208,169,21)"/><text x="324.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="321" y="372" width="1" height="15" fill="rgb(233,189,45)"/><text x="324.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="321" y="388" width="1" height="15" fill="rgb(217,77,52)"/><text x="324.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="321" y="404" width="1" height="15" fill="rgb(220,189,34)"/><text x="324.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.11%)</title><rect x="321" y="420" width="1" height="15" fill="rgb(206,31,14)"/><text x="324.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="322" y="356" width="2" height="15" fill="rgb(205,161,33)"/><text x="325.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.11%)</title><rect x="322" y="372" width="2" height="15" fill="rgb(240,7,5)"/><text x="325.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (5 samples, 0.55%)</title><rect x="318" y="308" width="7" height="15" fill="rgb(218,144,45)"/><text x="321.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.33%)</title><rect x="321" y="324" width="4" height="15" fill="rgb(254,64,53)"/><text x="324.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="322" y="340" width="3" height="15" fill="rgb(215,98,27)"/><text x="325.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="324" y="356" width="1" height="15" fill="rgb(225,53,33)"/><text x="327.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="324" y="372" width="1" height="15" fill="rgb(245,187,21)"/><text x="327.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.11%)</title><rect x="324" y="388" width="1" height="15" fill="rgb(243,126,44)"/><text x="327.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.11%)</title><rect x="324" y="404" width="1" height="15" fill="rgb(208,115,30)"/><text x="327.00" y="414.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="325" y="340" width="1" height="15" fill="rgb(222,48,14)"/><text x="328.00" y="350.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py:2982) (1 samples, 0.11%)</title><rect x="325" y="356" width="1" height="15" fill="rgb(254,204,39)"/><text x="328.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (2 samples, 0.22%)</title><rect x="326" y="372" width="3" height="15" fill="rgb(248,183,52)"/><text x="329.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (4 samples, 0.44%)</title><rect x="325" y="324" width="5" height="15" fill="rgb(206,82,48)"/><text x="328.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.33%)</title><rect x="326" y="340" width="4" height="15" fill="rgb(251,77,46)"/><text x="329.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.33%)</title><rect x="326" y="356" width="4" height="15" fill="rgb(210,76,18)"/><text x="329.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.11%)</title><rect x="329" y="372" width="1" height="15" fill="rgb(228,171,42)"/><text x="332.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="329" y="388" width="1" height="15" fill="rgb(222,183,17)"/><text x="332.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1724) (1 samples, 0.11%)</title><rect x="329" y="404" width="1" height="15" fill="rgb(214,152,5)"/><text x="332.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (7 samples, 0.77%)</title><rect x="325" y="308" width="9" height="15" fill="rgb(239,222,38)"/><text x="328.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.33%)</title><rect x="330" y="324" width="4" height="15" fill="rgb(219,54,1)"/><text x="333.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="333" y="340" width="1" height="15" fill="rgb(206,127,10)"/><text x="336.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="333" y="356" width="1" height="15" fill="rgb(215,137,14)"/><text x="336.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (1 samples, 0.11%)</title><rect x="333" y="372" width="1" height="15" fill="rgb(238,12,40)"/><text x="336.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="337" y="340" width="1" height="15" fill="rgb(235,79,36)"/><text x="340.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="337" y="356" width="1" height="15" fill="rgb(238,88,30)"/><text x="340.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="337" y="372" width="1" height="15" fill="rgb(207,189,13)"/><text x="340.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="337" y="388" width="1" height="15" fill="rgb(220,217,8)"/><text x="340.00" y="398.50"></text></g><g><title>0x7f821f20de50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="337" y="404" width="1" height="15" fill="rgb(239,27,6)"/><text x="340.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3162) (1 samples, 0.11%)</title><rect x="338" y="356" width="1" height="15" fill="rgb(212,216,38)"/><text x="341.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="339" y="356" width="2" height="15" fill="rgb(243,148,29)"/><text x="342.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.11%)</title><rect x="339" y="372" width="2" height="15" fill="rgb(234,52,42)"/><text x="342.00" y="382.50"></text></g><g><title>_set_out_array (ufunc_object.c:824) (1 samples, 0.11%)</title><rect x="339" y="388" width="2" height="15" fill="rgb(209,7,44)"/><text x="342.00" y="398.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.11%)</title><rect x="339" y="404" width="2" height="15" fill="rgb(226,147,29)"/><text x="342.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.11%)</title><rect x="341" y="356" width="1" height="15" fill="rgb(239,27,37)"/><text x="344.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.11%)</title><rect x="342" y="372" width="1" height="15" fill="rgb(208,8,54)"/><text x="345.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.11%)</title><rect x="342" y="388" width="1" height="15" fill="rgb(209,50,3)"/><text x="345.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.11%)</title><rect x="342" y="404" width="1" height="15" fill="rgb(230,88,15)"/><text x="345.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.11%)</title><rect x="342" y="420" width="1" height="15" fill="rgb(239,143,17)"/><text x="345.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="342" y="436" width="1" height="15" fill="rgb(236,92,0)"/><text x="345.00" y="446.50"></text></g><g><title>0x7f821f1afa74 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="342" y="452" width="1" height="15" fill="rgb(212,197,50)"/><text x="345.00" y="462.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (1 samples, 0.11%)</title><rect x="343" y="404" width="1" height="15" fill="rgb(253,117,3)"/><text x="346.00" y="414.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1868) (1 samples, 0.11%)</title><rect x="344" y="404" width="2" height="15" fill="rgb(205,128,22)"/><text x="347.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.77%)</title><rect x="338" y="340" width="9" height="15" fill="rgb(254,50,39)"/><text x="341.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.44%)</title><rect x="342" y="356" width="5" height="15" fill="rgb(232,91,5)"/><text x="345.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.33%)</title><rect x="343" y="372" width="4" height="15" fill="rgb(252,179,53)"/><text x="346.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (3 samples, 0.33%)</title><rect x="343" y="388" width="4" height="15" fill="rgb(253,70,40)"/><text x="346.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (1 samples, 0.11%)</title><rect x="346" y="404" width="1" height="15" fill="rgb(208,172,41)"/><text x="349.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="347" y="388" width="1" height="15" fill="rgb(233,115,19)"/><text x="350.00" y="398.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (31 samples, 3.41%)</title><rect x="309" y="196" width="41" height="15" fill="rgb(209,10,6)"/><text x="312.00" y="206.50">_sa..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (28 samples, 3.08%)</title><rect x="313" y="212" width="37" height="15" fill="rgb(208,16,42)"/><text x="316.00" y="222.50">cli..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (26 samples, 2.86%)</title><rect x="316" y="228" width="34" height="15" fill="rgb(241,160,8)"/><text x="319.00" y="238.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (26 samples, 2.86%)</title><rect x="316" y="244" width="34" height="15" fill="rgb(227,178,19)"/><text x="319.00" y="254.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (25 samples, 2.75%)</title><rect x="317" y="260" width="33" height="15" fill="rgb(220,145,14)"/><text x="320.00" y="270.50">_w..</text></g><g><title>array_clip (methods.c:2381) (25 samples, 2.75%)</title><rect x="317" y="276" width="33" height="15" fill="rgb(218,175,53)"/><text x="320.00" y="286.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (24 samples, 2.64%)</title><rect x="318" y="292" width="32" height="15" fill="rgb(252,128,48)"/><text x="321.00" y="302.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:129) (12 samples, 1.32%)</title><rect x="334" y="308" width="16" height="15" fill="rgb(234,51,29)"/><text x="337.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (10 samples, 1.10%)</title><rect x="337" y="324" width="13" height="15" fill="rgb(238,114,30)"/><text x="340.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (2 samples, 0.22%)</title><rect x="347" y="340" width="3" height="15" fill="rgb(208,196,5)"/><text x="350.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.22%)</title><rect x="347" y="356" width="3" height="15" fill="rgb(253,142,47)"/><text x="350.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.22%)</title><rect x="347" y="372" width="3" height="15" fill="rgb(245,48,36)"/><text x="350.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="348" y="388" width="2" height="15" fill="rgb(232,223,33)"/><text x="351.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="350" y="212" width="1" height="15" fill="rgb(222,142,26)"/><text x="353.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.11%)</title><rect x="350" y="228" width="1" height="15" fill="rgb(211,177,9)"/><text x="353.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.11%)</title><rect x="351" y="228" width="1" height="15" fill="rgb(206,23,42)"/><text x="354.00" y="238.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.11%)</title><rect x="351" y="244" width="1" height="15" fill="rgb(228,186,44)"/><text x="354.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.11%)</title><rect x="352" y="244" width="2" height="15" fill="rgb(237,64,28)"/><text x="355.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="352" y="260" width="2" height="15" fill="rgb(230,94,34)"/><text x="355.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.11%)</title><rect x="352" y="276" width="2" height="15" fill="rgb(228,201,2)"/><text x="355.00" y="286.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:37) (1 samples, 0.11%)</title><rect x="352" y="292" width="2" height="15" fill="rgb(247,198,46)"/><text x="355.00" y="302.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.11%)</title><rect x="354" y="276" width="1" height="15" fill="rgb(228,197,27)"/><text x="357.00" y="286.50"></text></g><g><title>0x7f821e41b0c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.44%)</title><rect x="355" y="292" width="5" height="15" fill="rgb(243,124,27)"/><text x="358.00" y="302.50"></text></g><g><title>0x7f821f3c9dee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="360" y="292" width="1" height="15" fill="rgb(242,121,43)"/><text x="363.00" y="302.50"></text></g><g><title>0x7f821f3c9e25 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="361" y="292" width="2" height="15" fill="rgb(223,119,46)"/><text x="364.00" y="302.50"></text></g><g><title>0x7f821f3c9e4d (libm-2.29.so) (2 samples, 0.22%)</title><rect x="363" y="292" width="2" height="15" fill="rgb(233,105,27)"/><text x="366.00" y="302.50"></text></g><g><title>0x7f821f3c9e61 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="365" y="292" width="1" height="15" fill="rgb(216,2,6)"/><text x="368.00" y="302.50"></text></g><g><title>0x7f821f3c9e6e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="366" y="292" width="2" height="15" fill="rgb(238,228,15)"/><text x="369.00" y="302.50"></text></g><g><title>0x7f821f3c9e7e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="368" y="292" width="1" height="15" fill="rgb(227,104,48)"/><text x="371.00" y="302.50"></text></g><g><title>0x7f821f3c9e8d (libm-2.29.so) (4 samples, 0.44%)</title><rect x="369" y="292" width="5" height="15" fill="rgb(205,87,35)"/><text x="372.00" y="302.50"></text></g><g><title>0x7f821f3c9e91 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="374" y="292" width="3" height="15" fill="rgb(205,46,47)"/><text x="377.00" y="302.50"></text></g><g><title>0x7f821f3c9eca (libm-2.29.so) (1 samples, 0.11%)</title><rect x="377" y="292" width="1" height="15" fill="rgb(237,61,35)"/><text x="380.00" y="302.50"></text></g><g><title>0x7f821f3c9ece (libm-2.29.so) (1 samples, 0.11%)</title><rect x="378" y="292" width="1" height="15" fill="rgb(251,35,4)"/><text x="381.00" y="302.50"></text></g><g><title>0x7f821f3c9ee6 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="379" y="292" width="3" height="15" fill="rgb(207,165,3)"/><text x="382.00" y="302.50"></text></g><g><title>0x7f821f3c9eee (libm-2.29.so) (2 samples, 0.22%)</title><rect x="382" y="292" width="3" height="15" fill="rgb(231,54,7)"/><text x="385.00" y="302.50"></text></g><g><title>0x7f821f3c9ef6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="385" y="292" width="1" height="15" fill="rgb(246,46,10)"/><text x="388.00" y="302.50"></text></g><g><title>0x7f821f3c9fb7 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="386" y="292" width="1" height="15" fill="rgb(226,179,43)"/><text x="389.00" y="302.50"></text></g><g><title>0x7f821f3c9fbf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="387" y="292" width="2" height="15" fill="rgb(249,16,6)"/><text x="390.00" y="302.50"></text></g><g><title>0x7f821f3ca013 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="389" y="292" width="1" height="15" fill="rgb(212,33,2)"/><text x="392.00" y="302.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.11%)</title><rect x="390" y="292" width="1" height="15" fill="rgb(236,61,51)"/><text x="393.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (30 samples, 3.30%)</title><rect x="354" y="244" width="38" height="15" fill="rgb(249,36,38)"/><text x="357.00" y="254.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (30 samples, 3.30%)</title><rect x="354" y="260" width="38" height="15" fill="rgb(223,2,4)"/><text x="357.00" y="270.50">tri..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (29 samples, 3.19%)</title><rect x="355" y="276" width="37" height="15" fill="rgb(205,219,49)"/><text x="358.00" y="286.50">PyU..</text></g><g><title>npy_log (npy_math_internal.h.src:469) (1 samples, 0.11%)</title><rect x="391" y="292" width="1" height="15" fill="rgb(232,3,51)"/><text x="394.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (33 samples, 3.63%)</title><rect x="351" y="212" width="43" height="15" fill="rgb(243,199,18)"/><text x="354.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (32 samples, 3.52%)</title><rect x="352" y="228" width="42" height="15" fill="rgb(241,22,38)"/><text x="355.00" y="238.50">PyU..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.11%)</title><rect x="392" y="244" width="2" height="15" fill="rgb(243,219,54)"/><text x="395.00" y="254.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.11%)</title><rect x="392" y="260" width="2" height="15" fill="rgb(249,211,40)"/><text x="395.00" y="270.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="392" y="276" width="2" height="15" fill="rgb(212,20,53)"/><text x="395.00" y="286.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (35 samples, 3.85%)</title><rect x="350" y="196" width="45" height="15" fill="rgb(228,183,3)"/><text x="353.00" y="206.50">_sam..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.11%)</title><rect x="394" y="212" width="1" height="15" fill="rgb(232,163,16)"/><text x="397.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.11%)</title><rect x="394" y="228" width="1" height="15" fill="rgb(246,3,0)"/><text x="397.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3136) (1 samples, 0.11%)</title><rect x="396" y="244" width="2" height="15" fill="rgb(250,73,38)"/><text x="399.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.11%)</title><rect x="398" y="260" width="1" height="15" fill="rgb(211,61,38)"/><text x="401.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.11%)</title><rect x="398" y="276" width="1" height="15" fill="rgb(224,153,38)"/><text x="401.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.11%)</title><rect x="398" y="292" width="1" height="15" fill="rgb(244,47,15)"/><text x="401.00" y="302.50"></text></g><g><title>LONG_copyswap (arraytypes.c.src:1924) (1 samples, 0.11%)</title><rect x="398" y="308" width="1" height="15" fill="rgb(218,186,39)"/><text x="401.00" y="318.50"></text></g><g><title>_basic_copy (arraytypes.c.src:1890) (1 samples, 0.11%)</title><rect x="398" y="324" width="1" height="15" fill="rgb(247,36,40)"/><text x="401.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.22%)</title><rect x="398" y="244" width="2" height="15" fill="rgb(222,121,18)"/><text x="401.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.11%)</title><rect x="399" y="260" width="1" height="15" fill="rgb(242,20,1)"/><text x="402.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.11%)</title><rect x="399" y="276" width="1" height="15" fill="rgb(221,39,26)"/><text x="402.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.11%)</title><rect x="399" y="292" width="1" height="15" fill="rgb(235,30,6)"/><text x="402.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:952) (1 samples, 0.11%)</title><rect x="399" y="308" width="1" height="15" fill="rgb(218,103,8)"/><text x="402.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.11%)</title><rect x="399" y="324" width="1" height="15" fill="rgb(245,68,19)"/><text x="402.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1522) (1 samples, 0.11%)</title><rect x="399" y="340" width="1" height="15" fill="rgb(237,204,23)"/><text x="402.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.11%)</title><rect x="400" y="244" width="2" height="15" fill="rgb(213,121,18)"/><text x="403.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.11%)</title><rect x="400" y="260" width="2" height="15" fill="rgb(205,190,45)"/><text x="403.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.11%)</title><rect x="402" y="244" width="1" height="15" fill="rgb(246,108,35)"/><text x="405.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3260) (1 samples, 0.11%)</title><rect x="403" y="244" width="1" height="15" fill="rgb(245,196,5)"/><text x="406.00" y="254.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:696) (2 samples, 0.22%)</title><rect x="404" y="292" width="3" height="15" fill="rgb(245,170,38)"/><text x="407.00" y="302.50"></text></g><g><title>array_multiply (number.c:354) (11 samples, 1.21%)</title><rect x="395" y="212" width="14" height="15" fill="rgb(224,114,43)"/><text x="398.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.10%)</title><rect x="396" y="228" width="13" height="15" fill="rgb(213,182,18)"/><text x="399.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.44%)</title><rect x="404" y="244" width="5" height="15" fill="rgb(221,44,51)"/><text x="407.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (4 samples, 0.44%)</title><rect x="404" y="260" width="5" height="15" fill="rgb(221,52,50)"/><text x="407.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (4 samples, 0.44%)</title><rect x="404" y="276" width="5" height="15" fill="rgb(205,176,34)"/><text x="407.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:698) (2 samples, 0.22%)</title><rect x="407" y="292" width="2" height="15" fill="rgb(217,94,25)"/><text x="410.00" y="302.50"></text></g><g><title>_mm_mul_pd (emmintrin.h:253) (2 samples, 0.22%)</title><rect x="407" y="308" width="2" height="15" fill="rgb(223,74,4)"/><text x="410.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="409" y="292" width="2" height="15" fill="rgb(233,119,34)"/><text x="412.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1455) (1 samples, 0.11%)</title><rect x="409" y="308" width="2" height="15" fill="rgb(242,34,10)"/><text x="412.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="409" y="276" width="3" height="15" fill="rgb(240,164,47)"/><text x="412.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="411" y="292" width="1" height="15" fill="rgb(228,142,17)"/><text x="414.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.11%)</title><rect x="411" y="308" width="1" height="15" fill="rgb(235,7,25)"/><text x="414.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.11%)</title><rect x="411" y="324" width="1" height="15" fill="rgb(218,211,41)"/><text x="414.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="411" y="340" width="1" height="15" fill="rgb(254,202,28)"/><text x="414.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.11%)</title><rect x="411" y="356" width="1" height="15" fill="rgb(249,173,48)"/><text x="414.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.11%)</title><rect x="411" y="372" width="1" height="15" fill="rgb(222,222,38)"/><text x="414.00" y="382.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.11%)</title><rect x="411" y="388" width="1" height="15" fill="rgb(237,7,3)"/><text x="414.00" y="398.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:106) (1 samples, 0.11%)</title><rect x="411" y="404" width="1" height="15" fill="rgb(228,129,8)"/><text x="414.00" y="414.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="412" y="276" width="1" height="15" fill="rgb(233,128,34)"/><text x="415.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="412" y="292" width="1" height="15" fill="rgb(225,150,25)"/><text x="415.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="412" y="308" width="1" height="15" fill="rgb(211,144,33)"/><text x="415.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="412" y="324" width="1" height="15" fill="rgb(232,25,43)"/><text x="415.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h:241) (1 samples, 0.11%)</title><rect x="412" y="340" width="1" height="15" fill="rgb(232,113,19)"/><text x="415.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (4 samples, 0.44%)</title><rect x="409" y="212" width="6" height="15" fill="rgb(215,41,18)"/><text x="412.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.44%)</title><rect x="409" y="228" width="6" height="15" fill="rgb(245,191,52)"/><text x="412.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.44%)</title><rect x="409" y="244" width="6" height="15" fill="rgb(225,9,44)"/><text x="412.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.44%)</title><rect x="409" y="260" width="6" height="15" fill="rgb(251,0,46)"/><text x="412.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="413" y="276" width="2" height="15" fill="rgb(238,175,21)"/><text x="416.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.11%)</title><rect x="413" y="292" width="2" height="15" fill="rgb(209,200,14)"/><text x="416.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.11%)</title><rect x="417" y="276" width="1" height="15" fill="rgb(236,185,34)"/><text x="420.00" y="286.50"></text></g><g><title>0x7f821f20d73b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="417" y="292" width="1" height="15" fill="rgb(237,203,23)"/><text x="420.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="418" y="292" width="2" height="15" fill="rgb(246,84,19)"/><text x="421.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="418" y="308" width="2" height="15" fill="rgb(243,170,45)"/><text x="421.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:488) (1 samples, 0.11%)</title><rect x="418" y="324" width="2" height="15" fill="rgb(227,180,48)"/><text x="421.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.11%)</title><rect x="420" y="324" width="1" height="15" fill="rgb(208,73,7)"/><text x="423.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.11%)</title><rect x="421" y="324" width="1" height="15" fill="rgb(242,225,7)"/><text x="424.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="424" y="340" width="1" height="15" fill="rgb(218,186,46)"/><text x="427.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="425" y="340" width="1" height="15" fill="rgb(222,50,13)"/><text x="428.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.22%)</title><rect x="427" y="356" width="3" height="15" fill="rgb(218,158,3)"/><text x="430.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 0.44%)</title><rect x="426" y="340" width="5" height="15" fill="rgb(253,0,0)"/><text x="429.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.11%)</title><rect x="430" y="356" width="1" height="15" fill="rgb(222,114,42)"/><text x="433.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.11%)</title><rect x="431" y="340" width="2" height="15" fill="rgb(253,160,41)"/><text x="434.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.11%)</title><rect x="433" y="340" width="1" height="15" fill="rgb(205,114,17)"/><text x="436.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (10 samples, 1.10%)</title><rect x="422" y="324" width="13" height="15" fill="rgb(206,46,0)"/><text x="425.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.11%)</title><rect x="434" y="340" width="1" height="15" fill="rgb(236,41,45)"/><text x="437.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (188 samples, 20.68%)</title><rect x="193" y="180" width="244" height="15" fill="rgb(249,29,15)"/><text x="196.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_wei..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (32 samples, 3.52%)</title><rect x="395" y="196" width="42" height="15" fill="rgb(228,1,11)"/><text x="398.00" y="206.50">_sa..</text></g><g><title>array_sum (methods.c:2215) (17 samples, 1.87%)</title><rect x="415" y="212" width="22" height="15" fill="rgb(210,1,24)"/><text x="418.00" y="222.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 1.87%)</title><rect x="415" y="228" width="22" height="15" fill="rgb(244,99,11)"/><text x="418.00" y="238.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (15 samples, 1.65%)</title><rect x="417" y="244" width="20" height="15" fill="rgb(220,41,38)"/><text x="420.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (15 samples, 1.65%)</title><rect x="417" y="260" width="20" height="15" fill="rgb(226,21,9)"/><text x="420.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (14 samples, 1.54%)</title><rect x="418" y="276" width="19" height="15" fill="rgb(220,150,44)"/><text x="421.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (13 samples, 1.43%)</title><rect x="420" y="292" width="17" height="15" fill="rgb(206,33,15)"/><text x="423.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (13 samples, 1.43%)</title><rect x="420" y="308" width="17" height="15" fill="rgb(245,196,6)"/><text x="423.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.11%)</title><rect x="435" y="324" width="2" height="15" fill="rgb(227,155,42)"/><text x="438.00" y="334.50"></text></g><g><title>0x7f821e419b20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="435" y="340" width="2" height="15" fill="rgb(207,72,29)"/><text x="438.00" y="350.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="438" y="292" width="1" height="15" fill="rgb(243,12,35)"/><text x="441.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.11%)</title><rect x="438" y="308" width="1" height="15" fill="rgb(247,89,27)"/><text x="441.00" y="318.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (192 samples, 21.12%)</title><rect x="191" y="148" width="249" height="15" fill="rgb(254,174,9)"/><text x="194.00" y="158.50">predict_proba (sklearn/ensemble/_..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (191 samples, 21.01%)</title><rect x="193" y="164" width="247" height="15" fill="rgb(209,131,41)"/><text x="196.00" y="174.50">decision_function (sklearn/ensem..</text></g><g><title>array_add (number.c:330) (3 samples, 0.33%)</title><rect x="437" y="180" width="3" height="15" fill="rgb(245,225,32)"/><text x="440.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="438" y="196" width="2" height="15" fill="rgb(211,91,8)"/><text x="441.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="438" y="212" width="2" height="15" fill="rgb(226,3,42)"/><text x="441.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.22%)</title><rect x="438" y="228" width="2" height="15" fill="rgb(218,184,42)"/><text x="441.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.22%)</title><rect x="438" y="244" width="2" height="15" fill="rgb(235,113,10)"/><text x="441.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.22%)</title><rect x="438" y="260" width="2" height="15" fill="rgb(224,98,47)"/><text x="441.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.22%)</title><rect x="438" y="276" width="2" height="15" fill="rgb(214,200,23)"/><text x="441.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.11%)</title><rect x="439" y="292" width="1" height="15" fill="rgb(230,94,38)"/><text x="442.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="439" y="308" width="1" height="15" fill="rgb(212,160,40)"/><text x="442.00" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.11%)</title><rect x="440" y="244" width="2" height="15" fill="rgb(231,53,16)"/><text x="443.00" y="254.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1857) (1 samples, 0.11%)</title><rect x="442" y="340" width="1" height="15" fill="rgb(222,33,8)"/><text x="445.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src:195) (1 samples, 0.11%)</title><rect x="442" y="356" width="1" height="15" fill="rgb(210,192,53)"/><text x="445.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1117) (1 samples, 0.11%)</title><rect x="442" y="372" width="1" height="15" fill="rgb(236,77,46)"/><text x="445.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.11%)</title><rect x="442" y="388" width="1" height="15" fill="rgb(217,181,6)"/><text x="445.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.11%)</title><rect x="442" y="404" width="1" height="15" fill="rgb(244,112,46)"/><text x="445.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="442" y="420" width="1" height="15" fill="rgb(241,19,48)"/><text x="445.00" y="430.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (3 samples, 0.33%)</title><rect x="440" y="180" width="4" height="15" fill="rgb(224,144,33)"/><text x="443.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (3 samples, 0.33%)</title><rect x="440" y="196" width="4" height="15" fill="rgb(253,209,9)"/><text x="443.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.33%)</title><rect x="440" y="212" width="4" height="15" fill="rgb(219,2,21)"/><text x="443.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (3 samples, 0.33%)</title><rect x="440" y="228" width="4" height="15" fill="rgb(231,122,13)"/><text x="443.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (2 samples, 0.22%)</title><rect x="442" y="244" width="2" height="15" fill="rgb(211,38,33)"/><text x="445.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.22%)</title><rect x="442" y="260" width="2" height="15" fill="rgb(207,136,23)"/><text x="445.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.22%)</title><rect x="442" y="276" width="2" height="15" fill="rgb(209,125,12)"/><text x="445.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.22%)</title><rect x="442" y="292" width="2" height="15" fill="rgb(227,32,9)"/><text x="445.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.22%)</title><rect x="442" y="308" width="2" height="15" fill="rgb(240,204,50)"/><text x="445.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (2 samples, 0.22%)</title><rect x="442" y="324" width="2" height="15" fill="rgb(243,48,36)"/><text x="445.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1876) (1 samples, 0.11%)</title><rect x="443" y="340" width="1" height="15" fill="rgb(224,104,36)"/><text x="446.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:812) (1 samples, 0.11%)</title><rect x="443" y="356" width="1" height="15" fill="rgb(224,128,7)"/><text x="446.00" y="366.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:38) (329 samples, 36.19%)</title><rect x="19" y="52" width="427" height="15" fill="rgb(243,218,30)"/><text x="22.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_..</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:37) (329 samples, 36.19%)</title><rect x="19" y="68" width="427" height="15" fill="rgb(211,130,18)"/><text x="22.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1000_4_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:29) (329 samples, 36.19%)</title><rect x="19" y="84" width="427" height="15" fill="rgb(223,222,20)"/><text x="22.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:23) (197 samples, 21.67%)</title><rect x="190" y="100" width="256" height="15" fill="rgb(214,15,32)"/><text x="193.00" y="110.50">profile (bench_AdaBoostClassifier_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (197 samples, 21.67%)</title><rect x="190" y="116" width="256" height="15" fill="rgb(233,16,54)"/><text x="193.00" y="126.50">time_predict (mlprodict/asv_benchm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (197 samples, 21.67%)</title><rect x="190" y="132" width="256" height="15" fill="rgb(217,177,26)"/><text x="193.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (4 samples, 0.44%)</title><rect x="440" y="148" width="6" height="15" fill="rgb(211,40,6)"/><text x="443.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (4 samples, 0.44%)</title><rect x="440" y="164" width="6" height="15" fill="rgb(246,153,12)"/><text x="443.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:612) (1 samples, 0.11%)</title><rect x="444" y="180" width="2" height="15" fill="rgb(222,160,33)"/><text x="447.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="444" y="196" width="2" height="15" fill="rgb(207,102,43)"/><text x="447.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="444" y="212" width="2" height="15" fill="rgb(227,141,12)"/><text x="447.00" y="222.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.11%)</title><rect x="444" y="228" width="2" height="15" fill="rgb(254,172,39)"/><text x="447.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.11%)</title><rect x="444" y="244" width="2" height="15" fill="rgb(240,176,35)"/><text x="447.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.11%)</title><rect x="444" y="260" width="2" height="15" fill="rgb(227,58,51)"/><text x="447.00" y="270.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.11%)</title><rect x="444" y="276" width="2" height="15" fill="rgb(229,217,40)"/><text x="447.00" y="286.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.11%)</title><rect x="444" y="292" width="2" height="15" fill="rgb(230,177,15)"/><text x="447.00" y="302.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.11%)</title><rect x="446" y="852" width="1" height="15" fill="rgb(222,146,45)"/><text x="449.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.11%)</title><rect x="446" y="868" width="1" height="15" fill="rgb(213,7,53)"/><text x="449.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2780) (1 samples, 0.11%)</title><rect x="446" y="884" width="1" height="15" fill="rgb(206,210,28)"/><text x="449.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py:2896) (1 samples, 0.11%)</title><rect x="446" y="900" width="1" height="15" fill="rgb(228,39,8)"/><text x="449.00" y="910.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2896) (1 samples, 0.11%)</title><rect x="446" y="916" width="1" height="15" fill="rgb(242,105,51)"/><text x="449.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:2) (2 samples, 0.22%)</title><rect x="446" y="148" width="2" height="15" fill="rgb(216,80,32)"/><text x="449.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="446" y="164" width="2" height="15" fill="rgb(209,164,29)"/><text x="449.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.22%)</title><rect x="446" y="180" width="2" height="15" fill="rgb(212,118,21)"/><text x="449.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="446" y="196" width="2" height="15" fill="rgb(236,150,8)"/><text x="449.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="446" y="212" width="2" height="15" fill="rgb(243,187,34)"/><text x="449.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="446" y="228" width="2" height="15" fill="rgb(216,179,52)"/><text x="449.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="446" y="244" width="2" height="15" fill="rgb(252,4,25)"/><text x="449.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="446" y="260" width="2" height="15" fill="rgb(228,77,41)"/><text x="449.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="446" y="276" width="2" height="15" fill="rgb(218,192,23)"/><text x="449.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.22%)</title><rect x="446" y="292" width="2" height="15" fill="rgb(207,184,48)"/><text x="449.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="446" y="308" width="2" height="15" fill="rgb(220,129,0)"/><text x="449.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="446" y="324" width="2" height="15" fill="rgb(215,221,34)"/><text x="449.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="446" y="340" width="2" height="15" fill="rgb(217,96,18)"/><text x="449.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="446" y="356" width="2" height="15" fill="rgb(228,154,21)"/><text x="449.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="446" y="372" width="2" height="15" fill="rgb(207,207,54)"/><text x="449.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.22%)</title><rect x="446" y="388" width="2" height="15" fill="rgb(245,133,41)"/><text x="449.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="446" y="404" width="2" height="15" fill="rgb(247,56,50)"/><text x="449.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="446" y="420" width="2" height="15" fill="rgb(254,78,10)"/><text x="449.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="446" y="436" width="2" height="15" fill="rgb(236,54,15)"/><text x="449.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="446" y="452" width="2" height="15" fill="rgb(226,73,41)"/><text x="449.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="446" y="468" width="2" height="15" fill="rgb(244,31,16)"/><text x="449.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.22%)</title><rect x="446" y="484" width="2" height="15" fill="rgb(247,196,23)"/><text x="449.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="446" y="500" width="2" height="15" fill="rgb(240,215,50)"/><text x="449.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="446" y="516" width="2" height="15" fill="rgb(214,77,38)"/><text x="449.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="446" y="532" width="2" height="15" fill="rgb(212,185,43)"/><text x="449.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="446" y="548" width="2" height="15" fill="rgb(207,88,52)"/><text x="449.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="446" y="564" width="2" height="15" fill="rgb(215,217,33)"/><text x="449.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.22%)</title><rect x="446" y="580" width="2" height="15" fill="rgb(222,182,11)"/><text x="449.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="446" y="596" width="2" height="15" fill="rgb(240,2,41)"/><text x="449.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.22%)</title><rect x="446" y="612" width="2" height="15" fill="rgb(238,143,15)"/><text x="449.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="446" y="628" width="2" height="15" fill="rgb(214,120,2)"/><text x="449.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="446" y="644" width="2" height="15" fill="rgb(252,220,16)"/><text x="449.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="446" y="660" width="2" height="15" fill="rgb(239,37,23)"/><text x="449.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="446" y="676" width="2" height="15" fill="rgb(215,15,52)"/><text x="449.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="446" y="692" width="2" height="15" fill="rgb(212,217,14)"/><text x="449.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="446" y="708" width="2" height="15" fill="rgb(254,55,14)"/><text x="449.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.22%)</title><rect x="446" y="724" width="2" height="15" fill="rgb(236,11,28)"/><text x="449.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="446" y="740" width="2" height="15" fill="rgb(205,154,34)"/><text x="449.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="446" y="756" width="2" height="15" fill="rgb(250,30,1)"/><text x="449.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="446" y="772" width="2" height="15" fill="rgb(210,44,0)"/><text x="449.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="446" y="788" width="2" height="15" fill="rgb(234,174,52)"/><text x="449.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="446" y="804" width="2" height="15" fill="rgb(245,120,34)"/><text x="449.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.22%)</title><rect x="446" y="820" width="2" height="15" fill="rgb(235,132,34)"/><text x="449.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.22%)</title><rect x="446" y="836" width="2" height="15" fill="rgb(206,5,36)"/><text x="449.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.11%)</title><rect x="447" y="852" width="1" height="15" fill="rgb(239,186,10)"/><text x="450.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.11%)</title><rect x="447" y="868" width="1" height="15" fill="rgb(227,136,9)"/><text x="450.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.11%)</title><rect x="447" y="884" width="1" height="15" fill="rgb(206,131,7)"/><text x="450.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.11%)</title><rect x="447" y="900" width="1" height="15" fill="rgb(233,151,42)"/><text x="450.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.11%)</title><rect x="447" y="916" width="1" height="15" fill="rgb(213,215,19)"/><text x="450.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.11%)</title><rect x="447" y="932" width="1" height="15" fill="rgb(232,84,1)"/><text x="450.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.11%)</title><rect x="447" y="948" width="1" height="15" fill="rgb(251,147,13)"/><text x="450.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:213) (1 samples, 0.11%)</title><rect x="447" y="964" width="1" height="15" fill="rgb(254,76,20)"/><text x="450.00" y="974.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.11%)</title><rect x="447" y="980" width="1" height="15" fill="rgb(234,115,14)"/><text x="450.00" y="990.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.11%)</title><rect x="448" y="244" width="2" height="15" fill="rgb(231,77,8)"/><text x="451.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="448" y="260" width="2" height="15" fill="rgb(235,202,39)"/><text x="451.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="448" y="276" width="2" height="15" fill="rgb(251,135,35)"/><text x="451.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="448" y="292" width="2" height="15" fill="rgb(224,56,45)"/><text x="451.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="448" y="308" width="2" height="15" fill="rgb(233,129,41)"/><text x="451.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="448" y="324" width="2" height="15" fill="rgb(228,43,6)"/><text x="451.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.11%)</title><rect x="448" y="340" width="2" height="15" fill="rgb(230,147,45)"/><text x="451.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="448" y="356" width="2" height="15" fill="rgb(213,152,37)"/><text x="451.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="448" y="372" width="2" height="15" fill="rgb(217,34,37)"/><text x="451.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="448" y="388" width="2" height="15" fill="rgb(223,187,10)"/><text x="451.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="448" y="404" width="2" height="15" fill="rgb(250,22,15)"/><text x="451.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="448" y="420" width="2" height="15" fill="rgb(209,135,26)"/><text x="451.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="448" y="436" width="2" height="15" fill="rgb(245,85,8)"/><text x="451.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="448" y="452" width="2" height="15" fill="rgb(242,111,34)"/><text x="451.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="448" y="468" width="2" height="15" fill="rgb(225,203,17)"/><text x="451.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.11%)</title><rect x="448" y="484" width="2" height="15" fill="rgb(230,28,31)"/><text x="451.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="448" y="500" width="2" height="15" fill="rgb(208,158,5)"/><text x="451.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="448" y="516" width="2" height="15" fill="rgb(243,126,27)"/><text x="451.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="448" y="532" width="2" height="15" fill="rgb(240,27,48)"/><text x="451.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="448" y="548" width="2" height="15" fill="rgb(215,158,43)"/><text x="451.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="448" y="564" width="2" height="15" fill="rgb(217,164,21)"/><text x="451.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.11%)</title><rect x="448" y="580" width="2" height="15" fill="rgb(205,22,49)"/><text x="451.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="448" y="596" width="2" height="15" fill="rgb(212,199,20)"/><text x="451.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="448" y="612" width="2" height="15" fill="rgb(221,107,27)"/><text x="451.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="448" y="628" width="2" height="15" fill="rgb(209,197,54)"/><text x="451.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="448" y="644" width="2" height="15" fill="rgb(249,198,19)"/><text x="451.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="448" y="660" width="2" height="15" fill="rgb(217,176,2)"/><text x="451.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.11%)</title><rect x="448" y="676" width="2" height="15" fill="rgb(223,72,26)"/><text x="451.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="448" y="692" width="2" height="15" fill="rgb(221,80,53)"/><text x="451.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="448" y="708" width="2" height="15" fill="rgb(215,206,42)"/><text x="451.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="448" y="724" width="2" height="15" fill="rgb(207,102,9)"/><text x="451.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="448" y="740" width="2" height="15" fill="rgb(250,140,3)"/><text x="451.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="448" y="756" width="2" height="15" fill="rgb(235,16,29)"/><text x="451.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.11%)</title><rect x="448" y="772" width="2" height="15" fill="rgb(223,174,6)"/><text x="451.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="448" y="788" width="2" height="15" fill="rgb(241,122,23)"/><text x="451.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="448" y="804" width="2" height="15" fill="rgb(229,115,53)"/><text x="451.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="448" y="820" width="2" height="15" fill="rgb(210,125,26)"/><text x="451.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="448" y="836" width="2" height="15" fill="rgb(232,46,3)"/><text x="451.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="448" y="852" width="2" height="15" fill="rgb(237,16,49)"/><text x="451.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="448" y="868" width="2" height="15" fill="rgb(254,10,53)"/><text x="451.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="448" y="884" width="2" height="15" fill="rgb(205,8,36)"/><text x="451.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.11%)</title><rect x="448" y="900" width="2" height="15" fill="rgb(247,51,30)"/><text x="451.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="448" y="916" width="2" height="15" fill="rgb(242,123,10)"/><text x="451.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="448" y="932" width="2" height="15" fill="rgb(240,5,25)"/><text x="451.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="448" y="948" width="2" height="15" fill="rgb(246,149,19)"/><text x="451.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="448" y="964" width="2" height="15" fill="rgb(221,202,17)"/><text x="451.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="448" y="980" width="2" height="15" fill="rgb(241,30,29)"/><text x="451.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.11%)</title><rect x="448" y="996" width="2" height="15" fill="rgb(215,73,11)"/><text x="451.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="448" y="1012" width="2" height="15" fill="rgb(250,99,4)"/><text x="451.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="448" y="1028" width="2" height="15" fill="rgb(212,130,40)"/><text x="451.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="448" y="1044" width="2" height="15" fill="rgb(209,23,47)"/><text x="451.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="448" y="1060" width="2" height="15" fill="rgb(231,23,14)"/><text x="451.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="448" y="1076" width="2" height="15" fill="rgb(217,205,28)"/><text x="451.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:112) (1 samples, 0.11%)</title><rect x="448" y="1092" width="2" height="15" fill="rgb(252,15,7)"/><text x="451.00" y="1102.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.11%)</title><rect x="448" y="1108" width="2" height="15" fill="rgb(238,134,7)"/><text x="451.00" y="1118.50"></text></g><g><title>verify_interface (cryptography/utils.py:107) (1 samples, 0.11%)</title><rect x="448" y="1124" width="2" height="15" fill="rgb(251,20,32)"/><text x="451.00" y="1134.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.11%)</title><rect x="450" y="340" width="1" height="15" fill="rgb(236,83,4)"/><text x="453.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="450" y="356" width="1" height="15" fill="rgb(223,92,50)"/><text x="453.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="450" y="372" width="1" height="15" fill="rgb(230,147,2)"/><text x="453.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="450" y="388" width="1" height="15" fill="rgb(228,52,17)"/><text x="453.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="450" y="404" width="1" height="15" fill="rgb(224,107,51)"/><text x="453.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="450" y="420" width="1" height="15" fill="rgb(229,112,19)"/><text x="453.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:6) (1 samples, 0.11%)</title><rect x="450" y="436" width="1" height="15" fill="rgb(218,117,23)"/><text x="453.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="450" y="452" width="1" height="15" fill="rgb(215,227,40)"/><text x="453.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="450" y="468" width="1" height="15" fill="rgb(246,121,53)"/><text x="453.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="450" y="484" width="1" height="15" fill="rgb(224,190,45)"/><text x="453.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="450" y="500" width="1" height="15" fill="rgb(235,123,27)"/><text x="453.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="450" y="516" width="1" height="15" fill="rgb(240,160,28)"/><text x="453.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py:23) (1 samples, 0.11%)</title><rect x="450" y="532" width="1" height="15" fill="rgb(229,52,41)"/><text x="453.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="450" y="548" width="1" height="15" fill="rgb(222,51,44)"/><text x="453.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="450" y="564" width="1" height="15" fill="rgb(227,65,26)"/><text x="453.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="450" y="580" width="1" height="15" fill="rgb(223,206,26)"/><text x="453.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="450" y="596" width="1" height="15" fill="rgb(248,59,45)"/><text x="453.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="450" y="612" width="1" height="15" fill="rgb(235,40,48)"/><text x="453.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py:630) (1 samples, 0.11%)</title><rect x="450" y="628" width="1" height="15" fill="rgb(235,225,4)"/><text x="453.00" y="638.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.11%)</title><rect x="451" y="628" width="1" height="15" fill="rgb(225,216,20)"/><text x="454.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="644" width="1" height="15" fill="rgb(243,14,39)"/><text x="454.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="660" width="1" height="15" fill="rgb(209,220,35)"/><text x="454.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="676" width="1" height="15" fill="rgb(209,136,16)"/><text x="454.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="692" width="1" height="15" fill="rgb(241,32,30)"/><text x="454.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="708" width="1" height="15" fill="rgb(223,111,15)"/><text x="454.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:8) (1 samples, 0.11%)</title><rect x="451" y="724" width="1" height="15" fill="rgb(236,126,18)"/><text x="454.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="740" width="1" height="15" fill="rgb(210,56,42)"/><text x="454.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="756" width="1" height="15" fill="rgb(239,22,14)"/><text x="454.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="772" width="1" height="15" fill="rgb(254,66,41)"/><text x="454.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="788" width="1" height="15" fill="rgb(215,164,31)"/><text x="454.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="804" width="1" height="15" fill="rgb(245,140,9)"/><text x="454.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py:1) (1 samples, 0.11%)</title><rect x="451" y="820" width="1" height="15" fill="rgb(233,0,25)"/><text x="454.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="451" y="836" width="1" height="15" fill="rgb(208,69,16)"/><text x="454.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="451" y="852" width="1" height="15" fill="rgb(243,61,28)"/><text x="454.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="451" y="868" width="1" height="15" fill="rgb(219,85,34)"/><text x="454.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="451" y="884" width="1" height="15" fill="rgb(219,14,26)"/><text x="454.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="451" y="900" width="1" height="15" fill="rgb(233,133,46)"/><text x="454.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py:299) (1 samples, 0.11%)</title><rect x="451" y="916" width="1" height="15" fill="rgb(205,153,34)"/><text x="454.00" y="926.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.11%)</title><rect x="451" y="932" width="1" height="15" fill="rgb(223,9,14)"/><text x="454.00" y="942.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.11%)</title><rect x="451" y="948" width="1" height="15" fill="rgb(244,14,25)"/><text x="454.00" y="958.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.11%)</title><rect x="451" y="964" width="1" height="15" fill="rgb(209,169,28)"/><text x="454.00" y="974.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.11%)</title><rect x="451" y="980" width="1" height="15" fill="rgb(221,169,39)"/><text x="454.00" y="990.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.11%)</title><rect x="451" y="996" width="1" height="15" fill="rgb(218,19,19)"/><text x="454.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.11%)</title><rect x="452" y="724" width="1" height="15" fill="rgb(240,228,44)"/><text x="455.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="740" width="1" height="15" fill="rgb(248,82,48)"/><text x="455.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="756" width="1" height="15" fill="rgb(238,110,32)"/><text x="455.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="772" width="1" height="15" fill="rgb(253,20,17)"/><text x="455.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="788" width="1" height="15" fill="rgb(252,35,41)"/><text x="455.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="804" width="1" height="15" fill="rgb(226,6,7)"/><text x="455.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.11%)</title><rect x="452" y="820" width="1" height="15" fill="rgb(215,170,5)"/><text x="455.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="836" width="1" height="15" fill="rgb(252,221,3)"/><text x="455.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="852" width="1" height="15" fill="rgb(246,141,47)"/><text x="455.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="868" width="1" height="15" fill="rgb(224,16,45)"/><text x="455.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="884" width="1" height="15" fill="rgb(227,103,36)"/><text x="455.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="900" width="1" height="15" fill="rgb(250,30,19)"/><text x="455.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.11%)</title><rect x="452" y="916" width="1" height="15" fill="rgb(206,102,40)"/><text x="455.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="932" width="1" height="15" fill="rgb(230,227,5)"/><text x="455.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="948" width="1" height="15" fill="rgb(219,59,3)"/><text x="455.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="964" width="1" height="15" fill="rgb(219,208,16)"/><text x="455.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="980" width="1" height="15" fill="rgb(246,99,16)"/><text x="455.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="996" width="1" height="15" fill="rgb(228,165,9)"/><text x="455.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.11%)</title><rect x="452" y="1012" width="1" height="15" fill="rgb(252,148,43)"/><text x="455.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1028" width="1" height="15" fill="rgb(223,143,12)"/><text x="455.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1044" width="1" height="15" fill="rgb(231,96,44)"/><text x="455.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1060" width="1" height="15" fill="rgb(227,164,28)"/><text x="455.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1076" width="1" height="15" fill="rgb(207,84,3)"/><text x="455.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1092" width="1" height="15" fill="rgb(236,69,6)"/><text x="455.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.11%)</title><rect x="452" y="1108" width="1" height="15" fill="rgb(246,181,5)"/><text x="455.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1124" width="1" height="15" fill="rgb(207,42,19)"/><text x="455.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1140" width="1" height="15" fill="rgb(220,26,39)"/><text x="455.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1156" width="1" height="15" fill="rgb(223,112,22)"/><text x="455.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1172" width="1" height="15" fill="rgb(236,84,21)"/><text x="455.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1188" width="1" height="15" fill="rgb(249,104,51)"/><text x="455.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.11%)</title><rect x="452" y="1204" width="1" height="15" fill="rgb(238,90,54)"/><text x="455.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1220" width="1" height="15" fill="rgb(214,65,9)"/><text x="455.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1236" width="1" height="15" fill="rgb(231,196,38)"/><text x="455.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1252" width="1" height="15" fill="rgb(224,134,3)"/><text x="455.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1268" width="1" height="15" fill="rgb(222,148,13)"/><text x="455.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1284" width="1" height="15" fill="rgb(211,224,50)"/><text x="455.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.11%)</title><rect x="452" y="1300" width="1" height="15" fill="rgb(211,58,28)"/><text x="455.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1316" width="1" height="15" fill="rgb(215,132,38)"/><text x="455.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1332" width="1" height="15" fill="rgb(234,172,28)"/><text x="455.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1348" width="1" height="15" fill="rgb(211,137,32)"/><text x="455.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1364" width="1" height="15" fill="rgb(230,37,17)"/><text x="455.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1380" width="1" height="15" fill="rgb(244,6,21)"/><text x="455.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.11%)</title><rect x="452" y="1396" width="1" height="15" fill="rgb(212,163,17)"/><text x="455.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1412" width="1" height="15" fill="rgb(212,73,22)"/><text x="455.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1428" width="1" height="15" fill="rgb(210,188,28)"/><text x="455.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1444" width="1" height="15" fill="rgb(231,115,26)"/><text x="455.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1460" width="1" height="15" fill="rgb(219,128,14)"/><text x="455.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1476" width="1" height="15" fill="rgb(221,84,19)"/><text x="455.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.11%)</title><rect x="452" y="1492" width="1" height="15" fill="rgb(206,131,24)"/><text x="455.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1508" width="1" height="15" fill="rgb(228,132,8)"/><text x="455.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="452" y="1524" width="1" height="15" fill="rgb(252,22,47)"/><text x="455.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1540" width="1" height="15" fill="rgb(217,115,45)"/><text x="455.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1556" width="1" height="15" fill="rgb(254,138,45)"/><text x="455.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1572" width="1" height="15" fill="rgb(247,119,35)"/><text x="455.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1588" width="1" height="15" fill="rgb(211,132,35)"/><text x="455.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1604" width="1" height="15" fill="rgb(254,115,48)"/><text x="455.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1620" width="1" height="15" fill="rgb(208,161,28)"/><text x="455.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.11%)</title><rect x="452" y="1636" width="1" height="15" fill="rgb(254,110,0)"/><text x="455.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="452" y="1652" width="1" height="15" fill="rgb(226,104,11)"/><text x="455.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1668" width="1" height="15" fill="rgb(237,164,54)"/><text x="455.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1684" width="1" height="15" fill="rgb(207,32,54)"/><text x="455.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1700" width="1" height="15" fill="rgb(244,19,30)"/><text x="455.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1716" width="1" height="15" fill="rgb(209,190,22)"/><text x="455.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1732" width="1" height="15" fill="rgb(224,60,0)"/><text x="455.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1748" width="1" height="15" fill="rgb(224,96,51)"/><text x="455.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.11%)</title><rect x="452" y="1764" width="1" height="15" fill="rgb(226,22,15)"/><text x="455.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1780" width="1" height="15" fill="rgb(233,26,35)"/><text x="455.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1796" width="1" height="15" fill="rgb(250,101,11)"/><text x="455.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1812" width="1" height="15" fill="rgb(246,4,11)"/><text x="455.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1828" width="1" height="15" fill="rgb(220,34,20)"/><text x="455.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1844" width="1" height="15" fill="rgb(233,98,54)"/><text x="455.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.11%)</title><rect x="452" y="1860" width="1" height="15" fill="rgb(217,179,52)"/><text x="455.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="452" y="1876" width="1" height="15" fill="rgb(208,85,18)"/><text x="455.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="452" y="1892" width="1" height="15" fill="rgb(252,185,49)"/><text x="455.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="452" y="1908" width="1" height="15" fill="rgb(219,73,41)"/><text x="455.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="452" y="1924" width="1" height="15" fill="rgb(212,22,52)"/><text x="455.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="452" y="1940" width="1" height="15" fill="rgb(248,188,17)"/><text x="455.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6379) (1 samples, 0.11%)</title><rect x="452" y="1956" width="1" height="15" fill="rgb(245,207,48)"/><text x="455.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py:6666) (1 samples, 0.11%)</title><rect x="452" y="1972" width="1" height="15" fill="rgb(250,159,52)"/><text x="455.00" y="1982.50"></text></g><g><title>__init__ (pyparsing.py:5105) (1 samples, 0.11%)</title><rect x="452" y="1988" width="1" height="15" fill="rgb(223,115,20)"/><text x="455.00" y="1998.50"></text></g><g><title>leaveWhitespace (pyparsing.py:4451) (1 samples, 0.11%)</title><rect x="452" y="2004" width="1" height="15" fill="rgb(246,131,19)"/><text x="455.00" y="2014.50"></text></g><g><title>leaveWhitespace (pyparsing.py:4451) (1 samples, 0.11%)</title><rect x="452" y="2020" width="1" height="15" fill="rgb(212,5,43)"/><text x="455.00" y="2030.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3883) (1 samples, 0.11%)</title><rect x="452" y="2036" width="1" height="15" fill="rgb(232,3,50)"/><text x="455.00" y="2046.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py:3883) (1 samples, 0.11%)</title><rect x="452" y="2052" width="1" height="15" fill="rgb(213,9,20)"/><text x="455.00" y="2062.50"></text></g><g><title>copy (pyparsing.py:3952) (1 samples, 0.11%)</title><rect x="452" y="2068" width="1" height="15" fill="rgb(227,56,29)"/><text x="455.00" y="2078.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py:3952) (1 samples, 0.11%)</title><rect x="452" y="2084" width="1" height="15" fill="rgb(208,146,8)"/><text x="455.00" y="2094.50"></text></g><g><title>copy (pyparsing.py:3951) (1 samples, 0.11%)</title><rect x="452" y="2100" width="1" height="15" fill="rgb(205,21,17)"/><text x="455.00" y="2110.50"></text></g><g><title>copy (pyparsing.py:1437) (1 samples, 0.11%)</title><rect x="452" y="2116" width="1" height="15" fill="rgb(210,178,39)"/><text x="455.00" y="2126.50"></text></g><g><title>copy (copy.py:96) (1 samples, 0.11%)</title><rect x="452" y="2132" width="1" height="15" fill="rgb(215,163,42)"/><text x="455.00" y="2142.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.33%)</title><rect x="451" y="436" width="4" height="15" fill="rgb(254,26,20)"/><text x="454.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="451" y="452" width="4" height="15" fill="rgb(225,0,45)"/><text x="454.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="451" y="468" width="4" height="15" fill="rgb(239,82,25)"/><text x="454.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="451" y="484" width="4" height="15" fill="rgb(229,101,11)"/><text x="454.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="451" y="500" width="4" height="15" fill="rgb(214,91,44)"/><text x="454.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="451" y="516" width="4" height="15" fill="rgb(212,117,21)"/><text x="454.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.33%)</title><rect x="451" y="532" width="4" height="15" fill="rgb(209,139,10)"/><text x="454.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="451" y="548" width="4" height="15" fill="rgb(221,213,36)"/><text x="454.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="451" y="564" width="4" height="15" fill="rgb(217,128,37)"/><text x="454.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="451" y="580" width="4" height="15" fill="rgb(243,218,43)"/><text x="454.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="451" y="596" width="4" height="15" fill="rgb(219,98,33)"/><text x="454.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="451" y="612" width="4" height="15" fill="rgb(224,111,10)"/><text x="454.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.22%)</title><rect x="452" y="628" width="3" height="15" fill="rgb(221,147,13)"/><text x="455.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="452" y="644" width="3" height="15" fill="rgb(212,219,8)"/><text x="455.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="452" y="660" width="3" height="15" fill="rgb(237,58,21)"/><text x="455.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="452" y="676" width="3" height="15" fill="rgb(242,126,43)"/><text x="455.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="452" y="692" width="3" height="15" fill="rgb(222,45,29)"/><text x="455.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="452" y="708" width="3" height="15" fill="rgb(225,131,4)"/><text x="455.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.11%)</title><rect x="453" y="724" width="2" height="15" fill="rgb(206,101,36)"/><text x="456.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="453" y="740" width="2" height="15" fill="rgb(247,1,16)"/><text x="456.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="453" y="756" width="2" height="15" fill="rgb(216,92,37)"/><text x="456.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="453" y="772" width="2" height="15" fill="rgb(215,122,45)"/><text x="456.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="453" y="788" width="2" height="15" fill="rgb(224,96,32)"/><text x="456.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="453" y="804" width="2" height="15" fill="rgb(250,134,25)"/><text x="456.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="453" y="820" width="2" height="15" fill="rgb(247,79,25)"/><text x="456.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="453" y="836" width="2" height="15" fill="rgb(228,150,40)"/><text x="456.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="453" y="852" width="2" height="15" fill="rgb(221,86,11)"/><text x="456.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:7) (1 samples, 0.11%)</title><rect x="453" y="868" width="2" height="15" fill="rgb(213,219,19)"/><text x="456.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="453" y="884" width="2" height="15" fill="rgb(239,3,37)"/><text x="456.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="453" y="900" width="2" height="15" fill="rgb(252,6,29)"/><text x="456.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="453" y="916" width="2" height="15" fill="rgb(238,197,54)"/><text x="456.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="453" y="932" width="2" height="15" fill="rgb(236,121,54)"/><text x="456.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="453" y="948" width="2" height="15" fill="rgb(239,172,47)"/><text x="456.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/categorical.py:54) (1 samples, 0.11%)</title><rect x="453" y="964" width="2" height="15" fill="rgb(226,215,5)"/><text x="456.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="453" y="980" width="2" height="15" fill="rgb(208,4,24)"/><text x="456.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="453" y="996" width="2" height="15" fill="rgb(252,160,30)"/><text x="456.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="453" y="1012" width="2" height="15" fill="rgb(254,39,44)"/><text x="456.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="453" y="1028" width="2" height="15" fill="rgb(233,1,48)"/><text x="456.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="453" y="1044" width="2" height="15" fill="rgb(230,69,7)"/><text x="456.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/base.py:36) (1 samples, 0.11%)</title><rect x="453" y="1060" width="2" height="15" fill="rgb(205,2,17)"/><text x="456.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="453" y="1076" width="2" height="15" fill="rgb(234,134,49)"/><text x="456.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="453" y="1092" width="2" height="15" fill="rgb(223,117,7)"/><text x="456.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="453" y="1108" width="2" height="15" fill="rgb(223,8,25)"/><text x="456.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="453" y="1124" width="2" height="15" fill="rgb(223,102,46)"/><text x="456.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="453" y="1140" width="2" height="15" fill="rgb(224,174,50)"/><text x="456.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/nanops.py:38) (1 samples, 0.11%)</title><rect x="453" y="1156" width="2" height="15" fill="rgb(245,114,20)"/><text x="456.00" y="1166.50"></text></g><g><title>import_optional_dependency (pandas/compat/_optional.py:90) (1 samples, 0.11%)</title><rect x="453" y="1172" width="2" height="15" fill="rgb(232,107,31)"/><text x="456.00" y="1182.50"></text></g><g><title>import_module (importlib/__init__.py:127) (1 samples, 0.11%)</title><rect x="453" y="1188" width="2" height="15" fill="rgb(234,186,14)"/><text x="456.00" y="1198.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.11%)</title><rect x="453" y="1204" width="2" height="15" fill="rgb(242,167,2)"/><text x="456.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="453" y="1220" width="2" height="15" fill="rgb(208,200,44)"/><text x="456.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="453" y="1236" width="2" height="15" fill="rgb(206,71,33)"/><text x="456.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="453" y="1252" width="2" height="15" fill="rgb(243,215,32)"/><text x="456.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="453" y="1268" width="2" height="15" fill="rgb(254,44,45)"/><text x="456.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="453" y="1284" width="2" height="15" fill="rgb(221,98,30)"/><text x="456.00" y="1294.50"></text></g><g><title>&lt;module&gt; (bottleneck/__init__.py:24) (1 samples, 0.11%)</title><rect x="453" y="1300" width="2" height="15" fill="rgb(214,123,35)"/><text x="456.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="453" y="1316" width="2" height="15" fill="rgb(208,116,42)"/><text x="456.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.11%)</title><rect x="453" y="1332" width="2" height="15" fill="rgb(251,115,2)"/><text x="456.00" y="1342.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.11%)</title><rect x="453" y="1348" width="2" height="15" fill="rgb(218,161,51)"/><text x="456.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.11%)</title><rect x="453" y="1364" width="2" height="15" fill="rgb(247,61,19)"/><text x="456.00" y="1374.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.11%)</title><rect x="453" y="1380" width="2" height="15" fill="rgb(253,118,11)"/><text x="456.00" y="1390.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.11%)</title><rect x="453" y="1396" width="2" height="15" fill="rgb(206,149,18)"/><text x="456.00" y="1406.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.11%)</title><rect x="453" y="1412" width="2" height="15" fill="rgb(209,47,42)"/><text x="456.00" y="1422.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.11%)</title><rect x="453" y="1428" width="2" height="15" fill="rgb(230,88,7)"/><text x="456.00" y="1438.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:28) (1 samples, 0.11%)</title><rect x="455" y="1300" width="1" height="15" fill="rgb(230,106,24)"/><text x="458.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="455" y="1316" width="1" height="15" fill="rgb(224,165,6)"/><text x="458.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.11%)</title><rect x="455" y="1332" width="1" height="15" fill="rgb(212,26,32)"/><text x="458.00" y="1342.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.11%)</title><rect x="455" y="1348" width="1" height="15" fill="rgb(243,100,25)"/><text x="458.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.11%)</title><rect x="455" y="1364" width="1" height="15" fill="rgb(206,123,37)"/><text x="458.00" y="1374.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.11%)</title><rect x="455" y="1380" width="1" height="15" fill="rgb(254,66,47)"/><text x="458.00" y="1390.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.11%)</title><rect x="455" y="1396" width="1" height="15" fill="rgb(247,224,17)"/><text x="458.00" y="1406.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.11%)</title><rect x="455" y="1412" width="1" height="15" fill="rgb(238,83,49)"/><text x="458.00" y="1422.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="455" y="1428" width="1" height="15" fill="rgb(240,36,7)"/><text x="458.00" y="1438.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.11%)</title><rect x="455" y="1444" width="1" height="15" fill="rgb(252,63,54)"/><text x="458.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.22%)</title><rect x="455" y="1108" width="2" height="15" fill="rgb(243,144,4)"/><text x="458.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="455" y="1124" width="2" height="15" fill="rgb(220,128,53)"/><text x="458.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="455" y="1140" width="2" height="15" fill="rgb(218,211,24)"/><text x="458.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="455" y="1156" width="2" height="15" fill="rgb(224,15,23)"/><text x="458.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="455" y="1172" width="2" height="15" fill="rgb(212,202,6)"/><text x="458.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="455" y="1188" width="2" height="15" fill="rgb(239,111,47)"/><text x="458.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.22%)</title><rect x="455" y="1204" width="2" height="15" fill="rgb(213,116,18)"/><text x="458.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="455" y="1220" width="2" height="15" fill="rgb(216,25,53)"/><text x="458.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="455" y="1236" width="2" height="15" fill="rgb(216,165,50)"/><text x="458.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="455" y="1252" width="2" height="15" fill="rgb(218,3,29)"/><text x="458.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="455" y="1268" width="2" height="15" fill="rgb(253,205,1)"/><text x="458.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="455" y="1284" width="2" height="15" fill="rgb(254,93,16)"/><text x="458.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.11%)</title><rect x="456" y="1300" width="1" height="15" fill="rgb(246,140,7)"/><text x="459.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.11%)</title><rect x="456" y="1316" width="1" height="15" fill="rgb(219,218,48)"/><text x="459.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.11%)</title><rect x="456" y="1332" width="1" height="15" fill="rgb(212,176,27)"/><text x="459.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.11%)</title><rect x="456" y="1348" width="1" height="15" fill="rgb(223,89,19)"/><text x="459.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.11%)</title><rect x="456" y="1364" width="1" height="15" fill="rgb(227,151,47)"/><text x="459.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.11%)</title><rect x="456" y="1380" width="1" height="15" fill="rgb(243,90,51)"/><text x="459.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.11%)</title><rect x="456" y="1396" width="1" height="15" fill="rgb(241,147,7)"/><text x="459.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.11%)</title><rect x="456" y="1412" width="1" height="15" fill="rgb(245,95,18)"/><text x="459.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.11%)</title><rect x="456" y="1428" width="1" height="15" fill="rgb(226,34,45)"/><text x="459.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.11%)</title><rect x="456" y="1444" width="1" height="15" fill="rgb(224,38,47)"/><text x="459.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.11%)</title><rect x="456" y="1460" width="1" height="15" fill="rgb(244,30,24)"/><text x="459.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.11%)</title><rect x="456" y="1476" width="1" height="15" fill="rgb(228,131,54)"/><text x="459.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.11%)</title><rect x="456" y="1492" width="1" height="15" fill="rgb(208,135,9)"/><text x="459.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.11%)</title><rect x="456" y="1508" width="1" height="15" fill="rgb(243,176,54)"/><text x="459.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.11%)</title><rect x="456" y="1524" width="1" height="15" fill="rgb(251,10,54)"/><text x="459.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.11%)</title><rect x="456" y="1540" width="1" height="15" fill="rgb(210,26,31)"/><text x="459.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.11%)</title><rect x="456" y="1556" width="1" height="15" fill="rgb(209,38,28)"/><text x="459.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.11%)</title><rect x="456" y="1572" width="1" height="15" fill="rgb(232,126,39)"/><text x="459.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py:811) (1 samples, 0.11%)</title><rect x="456" y="1588" width="1" height="15" fill="rgb(214,32,10)"/><text x="459.00" y="1598.50"></text></g><g><title>opengroup (sre_parse.py:87) (1 samples, 0.11%)</title><rect x="456" y="1604" width="1" height="15" fill="rgb(220,84,50)"/><text x="459.00" y="1614.50"></text></g><g><title>root (&lt;template&gt;:22) (1 samples, 0.11%)</title><rect x="457" y="1572" width="2" height="15" fill="rgb(228,5,27)"/><text x="460.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:250) (1 samples, 0.11%)</title><rect x="457" y="1588" width="2" height="15" fill="rgb(222,17,22)"/><text x="460.00" y="1598.50"></text></g><g><title>root (&lt;template&gt;:78) (1 samples, 0.11%)</title><rect x="459" y="1572" width="1" height="15" fill="rgb(206,22,12)"/><text x="462.00" y="1582.50"></text></g><g><title>0x7f820d548c58 (?) (1 samples, 0.11%)</title><rect x="459" y="1588" width="1" height="15" fill="rgb(230,200,27)"/><text x="462.00" y="1598.50"></text></g><g><title>0x7f820d61b479 (?) (1 samples, 0.11%)</title><rect x="459" y="1604" width="1" height="15" fill="rgb(218,143,42)"/><text x="462.00" y="1614.50"></text></g><g><title>0x7f820d61b3dc (?) (1 samples, 0.11%)</title><rect x="459" y="1620" width="1" height="15" fill="rgb(245,160,10)"/><text x="462.00" y="1630.50"></text></g><g><title>0x7f820d61b103 (?) (1 samples, 0.11%)</title><rect x="459" y="1636" width="1" height="15" fill="rgb(240,23,19)"/><text x="462.00" y="1646.50"></text></g><g><title>0x7f820d61c6d3 (?) (1 samples, 0.11%)</title><rect x="459" y="1652" width="1" height="15" fill="rgb(226,19,34)"/><text x="462.00" y="1662.50"></text></g><g><title>0x7f820d61bee0 (?) (1 samples, 0.11%)</title><rect x="459" y="1668" width="1" height="15" fill="rgb(253,115,26)"/><text x="462.00" y="1678.50"></text></g><g><title>0x7f820d616381 (?) (1 samples, 0.11%)</title><rect x="459" y="1684" width="1" height="15" fill="rgb(234,105,24)"/><text x="462.00" y="1694.50"></text></g><g><title>0x7f820d61cbe4 (?) (1 samples, 0.11%)</title><rect x="459" y="1700" width="1" height="15" fill="rgb(220,142,28)"/><text x="462.00" y="1710.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 0.33%)</title><rect x="457" y="1460" width="4" height="15" fill="rgb(247,37,34)"/><text x="460.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 0.33%)</title><rect x="457" y="1476" width="4" height="15" fill="rgb(236,63,32)"/><text x="460.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 0.33%)</title><rect x="457" y="1492" width="4" height="15" fill="rgb(253,23,6)"/><text x="460.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 0.33%)</title><rect x="457" y="1508" width="4" height="15" fill="rgb(214,214,52)"/><text x="460.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 0.33%)</title><rect x="457" y="1524" width="4" height="15" fill="rgb(223,210,49)"/><text x="460.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 0.33%)</title><rect x="457" y="1540" width="4" height="15" fill="rgb(216,35,6)"/><text x="460.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.33%)</title><rect x="457" y="1556" width="4" height="15" fill="rgb(214,155,21)"/><text x="460.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:87) (1 samples, 0.11%)</title><rect x="460" y="1572" width="1" height="15" fill="rgb(217,108,36)"/><text x="463.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.11%)</title><rect x="460" y="1588" width="1" height="15" fill="rgb(237,14,4)"/><text x="463.00" y="1598.50"></text></g><g><title>parse_if (jinja2/parser.py:212) (1 samples, 0.11%)</title><rect x="461" y="1764" width="2" height="15" fill="rgb(232,228,1)"/><text x="464.00" y="1774.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.11%)</title><rect x="461" y="1780" width="2" height="15" fill="rgb(223,49,14)"/><text x="464.00" y="1790.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.11%)</title><rect x="461" y="1796" width="2" height="15" fill="rgb(225,47,20)"/><text x="464.00" y="1806.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.11%)</title><rect x="461" y="1812" width="2" height="15" fill="rgb(231,158,37)"/><text x="464.00" y="1822.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.11%)</title><rect x="461" y="1828" width="2" height="15" fill="rgb(212,26,44)"/><text x="464.00" y="1838.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.11%)</title><rect x="461" y="1844" width="2" height="15" fill="rgb(211,25,34)"/><text x="464.00" y="1854.50"></text></g><g><title>subparse (jinja2/parser.py:875) (1 samples, 0.11%)</title><rect x="461" y="1860" width="2" height="15" fill="rgb(234,113,44)"/><text x="464.00" y="1870.50"></text></g><g><title>parse_tuple (jinja2/parser.py:620) (1 samples, 0.11%)</title><rect x="461" y="1876" width="2" height="15" fill="rgb(205,66,38)"/><text x="464.00" y="1886.50"></text></g><g><title>parse_expression (jinja2/parser.py:432) (1 samples, 0.11%)</title><rect x="461" y="1892" width="2" height="15" fill="rgb(230,63,31)"/><text x="464.00" y="1902.50"></text></g><g><title>parse_condexpr (jinja2/parser.py:437) (1 samples, 0.11%)</title><rect x="461" y="1908" width="2" height="15" fill="rgb(221,169,54)"/><text x="464.00" y="1918.50"></text></g><g><title>parse_or (jinja2/parser.py:450) (1 samples, 0.11%)</title><rect x="461" y="1924" width="2" height="15" fill="rgb(214,104,11)"/><text x="464.00" y="1934.50"></text></g><g><title>parse_and (jinja2/parser.py:459) (1 samples, 0.11%)</title><rect x="461" y="1940" width="2" height="15" fill="rgb(217,26,27)"/><text x="464.00" y="1950.50"></text></g><g><title>parse_not (jinja2/parser.py:470) (1 samples, 0.11%)</title><rect x="461" y="1956" width="2" height="15" fill="rgb(225,121,6)"/><text x="464.00" y="1966.50"></text></g><g><title>parse_compare (jinja2/parser.py:474) (1 samples, 0.11%)</title><rect x="461" y="1972" width="2" height="15" fill="rgb(229,36,23)"/><text x="464.00" y="1982.50"></text></g><g><title>parse_math1 (jinja2/parser.py:496) (1 samples, 0.11%)</title><rect x="461" y="1988" width="2" height="15" fill="rgb(230,210,13)"/><text x="464.00" y="1998.50"></text></g><g><title>parse_concat (jinja2/parser.py:507) (1 samples, 0.11%)</title><rect x="461" y="2004" width="2" height="15" fill="rgb(207,176,37)"/><text x="464.00" y="2014.50"></text></g><g><title>parse_math2 (jinja2/parser.py:517) (1 samples, 0.11%)</title><rect x="461" y="2020" width="2" height="15" fill="rgb(220,157,20)"/><text x="464.00" y="2030.50"></text></g><g><title>parse_pow (jinja2/parser.py:528) (1 samples, 0.11%)</title><rect x="461" y="2036" width="2" height="15" fill="rgb(230,82,13)"/><text x="464.00" y="2046.50"></text></g><g><title>parse_unary (jinja2/parser.py:546) (1 samples, 0.11%)</title><rect x="461" y="2052" width="2" height="15" fill="rgb(245,151,44)"/><text x="464.00" y="2062.50"></text></g><g><title>parse_primary (jinja2/parser.py:562) (1 samples, 0.11%)</title><rect x="461" y="2068" width="2" height="15" fill="rgb(219,45,29)"/><text x="464.00" y="2078.50"></text></g><g><title>__next__ (jinja2/lexer.py:359) (1 samples, 0.11%)</title><rect x="461" y="2084" width="2" height="15" fill="rgb(209,72,19)"/><text x="464.00" y="2094.50"></text></g><g><title>wrap (jinja2/lexer.py:597) (1 samples, 0.11%)</title><rect x="461" y="2100" width="2" height="15" fill="rgb(209,194,11)"/><text x="464.00" y="2110.50"></text></g><g><title>__new__ (jinja2/lexer.py:238) (1 samples, 0.11%)</title><rect x="461" y="2116" width="2" height="15" fill="rgb(248,52,45)"/><text x="464.00" y="2126.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (2 samples, 0.22%)</title><rect x="461" y="1572" width="3" height="15" fill="rgb(224,164,29)"/><text x="464.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (2 samples, 0.22%)</title><rect x="461" y="1588" width="3" height="15" fill="rgb(233,228,32)"/><text x="464.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (2 samples, 0.22%)</title><rect x="461" y="1604" width="3" height="15" fill="rgb(245,196,8)"/><text x="464.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:579) (2 samples, 0.22%)</title><rect x="461" y="1620" width="3" height="15" fill="rgb(216,158,30)"/><text x="464.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py:497) (2 samples, 0.22%)</title><rect x="461" y="1636" width="3" height="15" fill="rgb(227,175,37)"/><text x="464.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py:901) (2 samples, 0.22%)</title><rect x="461" y="1652" width="3" height="15" fill="rgb(238,218,24)"/><text x="464.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py:883) (2 samples, 0.22%)</title><rect x="461" y="1668" width="3" height="15" fill="rgb(241,205,20)"/><text x="464.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (2 samples, 0.22%)</title><rect x="461" y="1684" width="3" height="15" fill="rgb(250,187,10)"/><text x="464.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (2 samples, 0.22%)</title><rect x="461" y="1700" width="3" height="15" fill="rgb(237,75,25)"/><text x="464.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (2 samples, 0.22%)</title><rect x="461" y="1716" width="3" height="15" fill="rgb(248,214,30)"/><text x="464.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py:883) (2 samples, 0.22%)</title><rect x="461" y="1732" width="3" height="15" fill="rgb(240,146,16)"/><text x="464.00" y="1742.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (2 samples, 0.22%)</title><rect x="461" y="1748" width="3" height="15" fill="rgb(223,59,6)"/><text x="464.00" y="1758.50"></text></g><g><title>parse_if (jinja2/parser.py:223) (1 samples, 0.11%)</title><rect x="463" y="1764" width="1" height="15" fill="rgb(242,160,31)"/><text x="466.00" y="1774.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.11%)</title><rect x="463" y="1780" width="1" height="15" fill="rgb(245,226,12)"/><text x="466.00" y="1790.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.11%)</title><rect x="463" y="1796" width="1" height="15" fill="rgb(239,220,53)"/><text x="466.00" y="1806.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.11%)</title><rect x="463" y="1812" width="1" height="15" fill="rgb(240,25,44)"/><text x="466.00" y="1822.50"></text></g><g><title>parse_if (jinja2/parser.py:211) (1 samples, 0.11%)</title><rect x="463" y="1828" width="1" height="15" fill="rgb(216,166,18)"/><text x="466.00" y="1838.50"></text></g><g><title>parse_tuple (jinja2/parser.py:620) (1 samples, 0.11%)</title><rect x="463" y="1844" width="1" height="15" fill="rgb(212,37,24)"/><text x="466.00" y="1854.50"></text></g><g><title>&lt;lambda&gt; (jinja2/parser.py:612) (1 samples, 0.11%)</title><rect x="463" y="1860" width="1" height="15" fill="rgb(241,54,14)"/><text x="466.00" y="1870.50"></text></g><g><title>parse_expression (jinja2/parser.py:433) (1 samples, 0.11%)</title><rect x="463" y="1876" width="1" height="15" fill="rgb(241,100,5)"/><text x="466.00" y="1886.50"></text></g><g><title>parse_or (jinja2/parser.py:450) (1 samples, 0.11%)</title><rect x="463" y="1892" width="1" height="15" fill="rgb(243,57,28)"/><text x="466.00" y="1902.50"></text></g><g><title>parse_and (jinja2/parser.py:459) (1 samples, 0.11%)</title><rect x="463" y="1908" width="1" height="15" fill="rgb(215,135,7)"/><text x="466.00" y="1918.50"></text></g><g><title>parse_not (jinja2/parser.py:470) (1 samples, 0.11%)</title><rect x="463" y="1924" width="1" height="15" fill="rgb(220,183,31)"/><text x="466.00" y="1934.50"></text></g><g><title>parse_compare (jinja2/parser.py:474) (1 samples, 0.11%)</title><rect x="463" y="1940" width="1" height="15" fill="rgb(235,0,7)"/><text x="466.00" y="1950.50"></text></g><g><title>parse_math1 (jinja2/parser.py:496) (1 samples, 0.11%)</title><rect x="463" y="1956" width="1" height="15" fill="rgb(253,152,27)"/><text x="466.00" y="1966.50"></text></g><g><title>parse_concat (jinja2/parser.py:507) (1 samples, 0.11%)</title><rect x="463" y="1972" width="1" height="15" fill="rgb(207,77,3)"/><text x="466.00" y="1982.50"></text></g><g><title>parse_math2 (jinja2/parser.py:517) (1 samples, 0.11%)</title><rect x="463" y="1988" width="1" height="15" fill="rgb(237,51,52)"/><text x="466.00" y="1998.50"></text></g><g><title>parse_pow (jinja2/parser.py:528) (1 samples, 0.11%)</title><rect x="463" y="2004" width="1" height="15" fill="rgb(243,60,15)"/><text x="466.00" y="2014.50"></text></g><g><title>parse_unary (jinja2/parser.py:546) (1 samples, 0.11%)</title><rect x="463" y="2020" width="1" height="15" fill="rgb(249,30,29)"/><text x="466.00" y="2030.50"></text></g><g><title>parse_primary (jinja2/parser.py:561) (1 samples, 0.11%)</title><rect x="463" y="2036" width="1" height="15" fill="rgb(254,101,48)"/><text x="466.00" y="2046.50"></text></g><g><title>__init__ (jinja2/nodes.py:141) (1 samples, 0.11%)</title><rect x="463" y="2052" width="1" height="15" fill="rgb(210,174,33)"/><text x="466.00" y="2062.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:4) (15 samples, 1.65%)</title><rect x="446" y="52" width="19" height="15" fill="rgb(234,228,36)"/><text x="449.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 1.65%)</title><rect x="446" y="68" width="19" height="15" fill="rgb(218,131,20)"/><text x="449.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 1.65%)</title><rect x="446" y="84" width="19" height="15" fill="rgb(233,163,38)"/><text x="449.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 1.65%)</title><rect x="446" y="100" width="19" height="15" fill="rgb(234,28,3)"/><text x="449.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 1.65%)</title><rect x="446" y="116" width="19" height="15" fill="rgb(240,80,43)"/><text x="449.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 1.65%)</title><rect x="446" y="132" width="19" height="15" fill="rgb(206,67,52)"/><text x="449.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:7) (13 samples, 1.43%)</title><rect x="448" y="148" width="17" height="15" fill="rgb(211,220,49)"/><text x="451.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 1.43%)</title><rect x="448" y="164" width="17" height="15" fill="rgb(242,81,11)"/><text x="451.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 1.43%)</title><rect x="448" y="180" width="17" height="15" fill="rgb(238,13,47)"/><text x="451.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 1.43%)</title><rect x="448" y="196" width="17" height="15" fill="rgb(237,55,18)"/><text x="451.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 1.43%)</title><rect x="448" y="212" width="17" height="15" fill="rgb(238,5,0)"/><text x="451.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 1.43%)</title><rect x="448" y="228" width="17" height="15" fill="rgb(242,54,37)"/><text x="451.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (12 samples, 1.32%)</title><rect x="450" y="244" width="15" height="15" fill="rgb(228,40,51)"/><text x="453.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 1.32%)</title><rect x="450" y="260" width="15" height="15" fill="rgb(227,161,46)"/><text x="453.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 1.32%)</title><rect x="450" y="276" width="15" height="15" fill="rgb(206,154,49)"/><text x="453.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 1.32%)</title><rect x="450" y="292" width="15" height="15" fill="rgb(248,12,39)"/><text x="453.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 1.32%)</title><rect x="450" y="308" width="15" height="15" fill="rgb(210,51,3)"/><text x="453.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 1.32%)</title><rect x="450" y="324" width="15" height="15" fill="rgb(225,79,42)"/><text x="453.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (11 samples, 1.21%)</title><rect x="451" y="340" width="14" height="15" fill="rgb(223,2,32)"/><text x="454.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 1.21%)</title><rect x="451" y="356" width="14" height="15" fill="rgb(240,174,49)"/><text x="454.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 1.21%)</title><rect x="451" y="372" width="14" height="15" fill="rgb(251,165,33)"/><text x="454.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 1.21%)</title><rect x="451" y="388" width="14" height="15" fill="rgb(224,188,31)"/><text x="454.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 1.21%)</title><rect x="451" y="404" width="14" height="15" fill="rgb(242,187,39)"/><text x="454.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 1.21%)</title><rect x="451" y="420" width="14" height="15" fill="rgb(208,160,28)"/><text x="454.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (8 samples, 0.88%)</title><rect x="455" y="436" width="10" height="15" fill="rgb(244,150,8)"/><text x="458.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.88%)</title><rect x="455" y="452" width="10" height="15" fill="rgb(220,22,45)"/><text x="458.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 0.88%)</title><rect x="455" y="468" width="10" height="15" fill="rgb(217,135,25)"/><text x="458.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.88%)</title><rect x="455" y="484" width="10" height="15" fill="rgb(253,46,9)"/><text x="458.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.88%)</title><rect x="455" y="500" width="10" height="15" fill="rgb(241,40,49)"/><text x="458.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.88%)</title><rect x="455" y="516" width="10" height="15" fill="rgb(208,143,39)"/><text x="458.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.88%)</title><rect x="455" y="532" width="10" height="15" fill="rgb(253,2,1)"/><text x="458.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.88%)</title><rect x="455" y="548" width="10" height="15" fill="rgb(221,15,35)"/><text x="458.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.88%)</title><rect x="455" y="564" width="10" height="15" fill="rgb(215,191,6)"/><text x="458.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (8 samples, 0.88%)</title><rect x="455" y="580" width="10" height="15" fill="rgb(226,100,13)"/><text x="458.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.88%)</title><rect x="455" y="596" width="10" height="15" fill="rgb(247,21,5)"/><text x="458.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.88%)</title><rect x="455" y="612" width="10" height="15" fill="rgb(209,82,36)"/><text x="458.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.88%)</title><rect x="455" y="628" width="10" height="15" fill="rgb(235,100,34)"/><text x="458.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.88%)</title><rect x="455" y="644" width="10" height="15" fill="rgb(228,4,9)"/><text x="458.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.88%)</title><rect x="455" y="660" width="10" height="15" fill="rgb(242,153,29)"/><text x="458.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (8 samples, 0.88%)</title><rect x="455" y="676" width="10" height="15" fill="rgb(248,107,52)"/><text x="458.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.88%)</title><rect x="455" y="692" width="10" height="15" fill="rgb(226,14,2)"/><text x="458.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.88%)</title><rect x="455" y="708" width="10" height="15" fill="rgb(246,24,24)"/><text x="458.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.88%)</title><rect x="455" y="724" width="10" height="15" fill="rgb(212,142,45)"/><text x="458.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.88%)</title><rect x="455" y="740" width="10" height="15" fill="rgb(243,216,39)"/><text x="458.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.88%)</title><rect x="455" y="756" width="10" height="15" fill="rgb(230,141,37)"/><text x="458.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (8 samples, 0.88%)</title><rect x="455" y="772" width="10" height="15" fill="rgb(214,43,27)"/><text x="458.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.88%)</title><rect x="455" y="788" width="10" height="15" fill="rgb(215,6,53)"/><text x="458.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.88%)</title><rect x="455" y="804" width="10" height="15" fill="rgb(218,156,21)"/><text x="458.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.88%)</title><rect x="455" y="820" width="10" height="15" fill="rgb(246,198,4)"/><text x="458.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.88%)</title><rect x="455" y="836" width="10" height="15" fill="rgb(243,24,3)"/><text x="458.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.88%)</title><rect x="455" y="852" width="10" height="15" fill="rgb(252,222,25)"/><text x="458.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (8 samples, 0.88%)</title><rect x="455" y="868" width="10" height="15" fill="rgb(207,79,46)"/><text x="458.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.88%)</title><rect x="455" y="884" width="10" height="15" fill="rgb(254,125,13)"/><text x="458.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 0.88%)</title><rect x="455" y="900" width="10" height="15" fill="rgb(209,121,25)"/><text x="458.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.88%)</title><rect x="455" y="916" width="10" height="15" fill="rgb(211,105,34)"/><text x="458.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.88%)</title><rect x="455" y="932" width="10" height="15" fill="rgb(243,180,50)"/><text x="458.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.88%)</title><rect x="455" y="948" width="10" height="15" fill="rgb(250,7,13)"/><text x="458.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.88%)</title><rect x="455" y="964" width="10" height="15" fill="rgb(250,221,30)"/><text x="458.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.88%)</title><rect x="455" y="980" width="10" height="15" fill="rgb(223,171,20)"/><text x="458.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.88%)</title><rect x="455" y="996" width="10" height="15" fill="rgb(232,108,46)"/><text x="458.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (8 samples, 0.88%)</title><rect x="455" y="1012" width="10" height="15" fill="rgb(248,43,7)"/><text x="458.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.88%)</title><rect x="455" y="1028" width="10" height="15" fill="rgb(227,134,51)"/><text x="458.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.88%)</title><rect x="455" y="1044" width="10" height="15" fill="rgb(224,222,11)"/><text x="458.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.88%)</title><rect x="455" y="1060" width="10" height="15" fill="rgb(214,213,23)"/><text x="458.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.88%)</title><rect x="455" y="1076" width="10" height="15" fill="rgb(249,71,38)"/><text x="458.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.88%)</title><rect x="455" y="1092" width="10" height="15" fill="rgb(206,125,35)"/><text x="458.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (6 samples, 0.66%)</title><rect x="457" y="1108" width="8" height="15" fill="rgb(213,175,26)"/><text x="460.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (6 samples, 0.66%)</title><rect x="457" y="1124" width="8" height="15" fill="rgb(217,45,52)"/><text x="460.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.66%)</title><rect x="457" y="1140" width="8" height="15" fill="rgb(219,222,35)"/><text x="460.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.66%)</title><rect x="457" y="1156" width="8" height="15" fill="rgb(226,198,10)"/><text x="460.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.66%)</title><rect x="457" y="1172" width="8" height="15" fill="rgb(245,205,23)"/><text x="460.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.66%)</title><rect x="457" y="1188" width="8" height="15" fill="rgb(242,104,47)"/><text x="460.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.66%)</title><rect x="457" y="1204" width="8" height="15" fill="rgb(240,107,32)"/><text x="460.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.66%)</title><rect x="457" y="1220" width="8" height="15" fill="rgb(238,116,34)"/><text x="460.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (6 samples, 0.66%)</title><rect x="457" y="1236" width="8" height="15" fill="rgb(216,14,10)"/><text x="460.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (6 samples, 0.66%)</title><rect x="457" y="1252" width="8" height="15" fill="rgb(241,180,51)"/><text x="460.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.66%)</title><rect x="457" y="1268" width="8" height="15" fill="rgb(218,176,32)"/><text x="460.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.66%)</title><rect x="457" y="1284" width="8" height="15" fill="rgb(220,151,22)"/><text x="460.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.66%)</title><rect x="457" y="1300" width="8" height="15" fill="rgb(224,99,23)"/><text x="460.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.66%)</title><rect x="457" y="1316" width="8" height="15" fill="rgb(218,149,43)"/><text x="460.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.66%)</title><rect x="457" y="1332" width="8" height="15" fill="rgb(253,188,36)"/><text x="460.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.66%)</title><rect x="457" y="1348" width="8" height="15" fill="rgb(215,11,0)"/><text x="460.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (6 samples, 0.66%)</title><rect x="457" y="1364" width="8" height="15" fill="rgb(218,22,5)"/><text x="460.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.66%)</title><rect x="457" y="1380" width="8" height="15" fill="rgb(214,140,53)"/><text x="460.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.66%)</title><rect x="457" y="1396" width="8" height="15" fill="rgb(214,27,12)"/><text x="460.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.66%)</title><rect x="457" y="1412" width="8" height="15" fill="rgb(229,47,28)"/><text x="460.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.66%)</title><rect x="457" y="1428" width="8" height="15" fill="rgb(213,200,6)"/><text x="460.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.66%)</title><rect x="457" y="1444" width="8" height="15" fill="rgb(242,187,41)"/><text x="460.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (3 samples, 0.33%)</title><rect x="461" y="1460" width="4" height="15" fill="rgb(248,15,38)"/><text x="464.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="461" y="1476" width="4" height="15" fill="rgb(229,162,44)"/><text x="464.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="461" y="1492" width="4" height="15" fill="rgb(228,220,34)"/><text x="464.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="461" y="1508" width="4" height="15" fill="rgb(230,44,43)"/><text x="464.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="461" y="1524" width="4" height="15" fill="rgb(222,167,23)"/><text x="464.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="461" y="1540" width="4" height="15" fill="rgb(215,127,10)"/><text x="464.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (3 samples, 0.33%)</title><rect x="461" y="1556" width="4" height="15" fill="rgb(206,59,21)"/><text x="464.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.11%)</title><rect x="464" y="1572" width="1" height="15" fill="rgb(249,191,23)"/><text x="467.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="464" y="1588" width="1" height="15" fill="rgb(249,174,25)"/><text x="467.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="464" y="1604" width="1" height="15" fill="rgb(215,109,32)"/><text x="467.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="464" y="1620" width="1" height="15" fill="rgb(228,151,33)"/><text x="467.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="464" y="1636" width="1" height="15" fill="rgb(247,216,42)"/><text x="467.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="464" y="1652" width="1" height="15" fill="rgb(246,22,51)"/><text x="467.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.11%)</title><rect x="464" y="1668" width="1" height="15" fill="rgb(225,171,51)"/><text x="467.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="464" y="1684" width="1" height="15" fill="rgb(245,207,36)"/><text x="467.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="464" y="1700" width="1" height="15" fill="rgb(216,136,0)"/><text x="467.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="464" y="1716" width="1" height="15" fill="rgb(236,185,8)"/><text x="467.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="464" y="1732" width="1" height="15" fill="rgb(247,136,1)"/><text x="467.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="464" y="1748" width="1" height="15" fill="rgb(224,207,27)"/><text x="467.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:16) (1 samples, 0.11%)</title><rect x="464" y="1764" width="1" height="15" fill="rgb(243,221,7)"/><text x="467.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="464" y="1780" width="1" height="15" fill="rgb(254,47,38)"/><text x="467.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="464" y="1796" width="1" height="15" fill="rgb(229,152,13)"/><text x="467.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="464" y="1812" width="1" height="15" fill="rgb(253,182,12)"/><text x="467.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="464" y="1828" width="1" height="15" fill="rgb(232,61,15)"/><text x="467.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="464" y="1844" width="1" height="15" fill="rgb(225,64,37)"/><text x="467.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/defaults.py:31) (1 samples, 0.11%)</title><rect x="464" y="1860" width="1" height="15" fill="rgb(224,31,26)"/><text x="467.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="464" y="1876" width="1" height="15" fill="rgb(249,2,10)"/><text x="467.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="464" y="1892" width="1" height="15" fill="rgb(252,101,48)"/><text x="467.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="464" y="1908" width="1" height="15" fill="rgb(227,137,46)"/><text x="467.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="464" y="1924" width="1" height="15" fill="rgb(247,69,18)"/><text x="467.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="464" y="1940" width="1" height="15" fill="rgb(217,28,11)"/><text x="467.00" y="1950.50"></text></g><g><title>&lt;module&gt; (jinja2/filters.py:807) (1 samples, 0.11%)</title><rect x="464" y="1956" width="1" height="15" fill="rgb(235,173,12)"/><text x="467.00" y="1966.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.11%)</title><rect x="466" y="164" width="2" height="15" fill="rgb(241,75,51)"/><text x="469.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.44%)</title><rect x="469" y="180" width="5" height="15" fill="rgb(216,19,15)"/><text x="472.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.11%)</title><rect x="473" y="196" width="1" height="15" fill="rgb(225,127,12)"/><text x="476.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.11%)</title><rect x="476" y="212" width="1" height="15" fill="rgb(254,153,0)"/><text x="479.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.11%)</title><rect x="476" y="228" width="1" height="15" fill="rgb(216,66,4)"/><text x="479.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.11%)</title><rect x="476" y="244" width="1" height="15" fill="rgb(254,110,25)"/><text x="479.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.11%)</title><rect x="476" y="260" width="1" height="15" fill="rgb(241,207,1)"/><text x="479.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.11%)</title><rect x="476" y="276" width="1" height="15" fill="rgb(234,134,20)"/><text x="479.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (1 samples, 0.11%)</title><rect x="476" y="292" width="1" height="15" fill="rgb(245,70,25)"/><text x="479.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.11%)</title><rect x="476" y="308" width="1" height="15" fill="rgb(214,55,47)"/><text x="479.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (2 samples, 0.22%)</title><rect x="476" y="196" width="2" height="15" fill="rgb(223,170,48)"/><text x="479.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.11%)</title><rect x="477" y="212" width="1" height="15" fill="rgb(235,30,26)"/><text x="480.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.11%)</title><rect x="477" y="228" width="1" height="15" fill="rgb(217,131,24)"/><text x="480.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.11%)</title><rect x="477" y="244" width="1" height="15" fill="rgb(232,97,7)"/><text x="480.00" y="254.50"></text></g><g><title>array_length (mapping.c:60) (1 samples, 0.11%)</title><rect x="477" y="260" width="1" height="15" fill="rgb(254,34,7)"/><text x="480.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (1 samples, 0.11%)</title><rect x="478" y="228" width="1" height="15" fill="rgb(208,136,15)"/><text x="481.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="478" y="244" width="1" height="15" fill="rgb(238,120,32)"/><text x="481.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="478" y="260" width="1" height="15" fill="rgb(253,55,11)"/><text x="481.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.11%)</title><rect x="478" y="276" width="1" height="15" fill="rgb(209,184,28)"/><text x="481.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.11%)</title><rect x="478" y="292" width="1" height="15" fill="rgb(239,25,53)"/><text x="481.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (1 samples, 0.11%)</title><rect x="478" y="308" width="1" height="15" fill="rgb(238,73,50)"/><text x="481.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="478" y="324" width="1" height="15" fill="rgb(249,202,30)"/><text x="481.00" y="334.50"></text></g><g><title>0x7f821f376ea6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="478" y="340" width="1" height="15" fill="rgb(238,208,36)"/><text x="481.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="479" y="260" width="2" height="15" fill="rgb(252,108,39)"/><text x="482.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.11%)</title><rect x="479" y="276" width="2" height="15" fill="rgb(246,132,25)"/><text x="482.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.11%)</title><rect x="481" y="276" width="1" height="15" fill="rgb(219,118,25)"/><text x="484.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.11%)</title><rect x="481" y="292" width="1" height="15" fill="rgb(218,56,24)"/><text x="484.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.11%)</title><rect x="481" y="308" width="1" height="15" fill="rgb(234,164,6)"/><text x="484.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:547) (1 samples, 0.11%)</title><rect x="481" y="324" width="1" height="15" fill="rgb(208,192,1)"/><text x="484.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="481" y="340" width="1" height="15" fill="rgb(236,220,16)"/><text x="484.00" y="350.50"></text></g><g><title>0x7f821f1f8f20 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="481" y="356" width="1" height="15" fill="rgb(219,160,20)"/><text x="484.00" y="366.50"></text></g><g><title>0x7f821f379979 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="482" y="324" width="1" height="15" fill="rgb(249,184,31)"/><text x="485.00" y="334.50"></text></g><g><title>0x7f821f3799a4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="483" y="324" width="2" height="15" fill="rgb(232,98,5)"/><text x="486.00" y="334.50"></text></g><g><title>0x7f821f3799e4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="485" y="324" width="1" height="15" fill="rgb(229,152,0)"/><text x="488.00" y="334.50"></text></g><g><title>0x7f821f379a04 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="486" y="324" width="3" height="15" fill="rgb(251,52,7)"/><text x="489.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (9 samples, 0.99%)</title><rect x="479" y="228" width="12" height="15" fill="rgb(221,201,18)"/><text x="482.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 0.99%)</title><rect x="479" y="244" width="12" height="15" fill="rgb(231,175,42)"/><text x="482.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.88%)</title><rect x="481" y="260" width="10" height="15" fill="rgb(228,55,31)"/><text x="484.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (7 samples, 0.77%)</title><rect x="482" y="276" width="9" height="15" fill="rgb(242,133,7)"/><text x="485.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (7 samples, 0.77%)</title><rect x="482" y="292" width="9" height="15" fill="rgb(211,131,38)"/><text x="485.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (7 samples, 0.77%)</title><rect x="482" y="308" width="9" height="15" fill="rgb(247,85,28)"/><text x="485.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (2 samples, 0.22%)</title><rect x="489" y="324" width="2" height="15" fill="rgb(232,82,34)"/><text x="492.00" y="334.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2181) (1 samples, 0.11%)</title><rect x="495" y="276" width="1" height="15" fill="rgb(254,97,37)"/><text x="498.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="498" y="340" width="1" height="15" fill="rgb(214,199,46)"/><text x="501.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3447) (1 samples, 0.11%)</title><rect x="498" y="356" width="1" height="15" fill="rgb(229,6,29)"/><text x="501.00" y="366.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.11%)</title><rect x="498" y="372" width="1" height="15" fill="rgb(243,221,29)"/><text x="501.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:196) (1 samples, 0.11%)</title><rect x="499" y="388" width="1" height="15" fill="rgb(205,79,36)"/><text x="502.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:36) (1 samples, 0.11%)</title><rect x="500" y="404" width="1" height="15" fill="rgb(209,149,52)"/><text x="503.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.33%)</title><rect x="499" y="356" width="4" height="15" fill="rgb(235,192,24)"/><text x="502.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 0.33%)</title><rect x="499" y="372" width="4" height="15" fill="rgb(208,133,15)"/><text x="502.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.22%)</title><rect x="500" y="388" width="3" height="15" fill="rgb(220,156,13)"/><text x="503.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.11%)</title><rect x="501" y="404" width="2" height="15" fill="rgb(224,225,22)"/><text x="504.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="501" y="420" width="2" height="15" fill="rgb(251,182,19)"/><text x="504.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.11%)</title><rect x="503" y="372" width="1" height="15" fill="rgb(221,13,25)"/><text x="506.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (23 samples, 2.53%)</title><rect x="478" y="196" width="30" height="15" fill="rgb(218,208,16)"/><text x="481.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (23 samples, 2.53%)</title><rect x="478" y="212" width="30" height="15" fill="rgb(240,40,48)"/><text x="481.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (13 samples, 1.43%)</title><rect x="491" y="228" width="17" height="15" fill="rgb(233,216,41)"/><text x="494.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (10 samples, 1.10%)</title><rect x="495" y="244" width="13" height="15" fill="rgb(209,186,22)"/><text x="498.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 1.10%)</title><rect x="495" y="260" width="13" height="15" fill="rgb(214,64,29)"/><text x="498.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (9 samples, 0.99%)</title><rect x="496" y="276" width="12" height="15" fill="rgb(231,227,4)"/><text x="499.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (8 samples, 0.88%)</title><rect x="498" y="292" width="10" height="15" fill="rgb(224,9,28)"/><text x="501.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 0.88%)</title><rect x="498" y="308" width="10" height="15" fill="rgb(251,47,5)"/><text x="501.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 0.88%)</title><rect x="498" y="324" width="10" height="15" fill="rgb(253,50,27)"/><text x="501.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 0.77%)</title><rect x="499" y="340" width="9" height="15" fill="rgb(205,63,13)"/><text x="502.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (4 samples, 0.44%)</title><rect x="503" y="356" width="5" height="15" fill="rgb(238,199,41)"/><text x="506.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (3 samples, 0.33%)</title><rect x="504" y="372" width="4" height="15" fill="rgb(247,81,29)"/><text x="507.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (1 samples, 0.11%)</title><rect x="507" y="388" width="1" height="15" fill="rgb(249,117,51)"/><text x="510.00" y="398.50"></text></g><g><title>0x7f81dfd55422 (?) (1 samples, 0.11%)</title><rect x="508" y="244" width="1" height="15" fill="rgb(244,51,29)"/><text x="511.00" y="254.50"></text></g><g><title>0x7f81dfd5b89e (?) (1 samples, 0.11%)</title><rect x="508" y="260" width="1" height="15" fill="rgb(234,56,12)"/><text x="511.00" y="270.50"></text></g><g><title>0x7f81dfd5b74f (?) (1 samples, 0.11%)</title><rect x="508" y="276" width="1" height="15" fill="rgb(245,199,27)"/><text x="511.00" y="286.50"></text></g><g><title>0x7f81dfd61a3a (?) (1 samples, 0.11%)</title><rect x="508" y="292" width="1" height="15" fill="rgb(247,88,10)"/><text x="511.00" y="302.50"></text></g><g><title>0x7f81e91bdab9 (?) (1 samples, 0.11%)</title><rect x="508" y="308" width="1" height="15" fill="rgb(248,213,6)"/><text x="511.00" y="318.50"></text></g><g><title>0x7f81e91beead (?) (1 samples, 0.11%)</title><rect x="508" y="324" width="1" height="15" fill="rgb(209,86,17)"/><text x="511.00" y="334.50"></text></g><g><title>0x7f81e91beea9 (libgomp.so.1.0.0) (10 samples, 1.10%)</title><rect x="509" y="468" width="13" height="15" fill="rgb(237,185,11)"/><text x="512.00" y="478.50"></text></g><g><title>0x7f81e91beeab (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="522" y="468" width="3" height="15" fill="rgb(237,199,1)"/><text x="525.00" y="478.50"></text></g><g><title>0x7f81e91bdab9 (libgomp.so.1.0.0) (21 samples, 2.31%)</title><rect x="509" y="452" width="28" height="15" fill="rgb(212,92,0)"/><text x="512.00" y="462.50">0..</text></g><g><title>0x7f81e91beead (libgomp.so.1.0.0) (9 samples, 0.99%)</title><rect x="525" y="468" width="12" height="15" fill="rgb(205,148,16)"/><text x="528.00" y="478.50"></text></g><g><title>0x7f81e91bcdaa (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="537" y="468" width="1" height="15" fill="rgb(214,72,0)"/><text x="540.00" y="478.50"></text></g><g><title>0x7f81e91becf9 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="537" y="484" width="1" height="15" fill="rgb(229,75,31)"/><text x="540.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (24 samples, 2.64%)</title><rect x="508" y="196" width="31" height="15" fill="rgb(248,146,10)"/><text x="511.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (24 samples, 2.64%)</title><rect x="508" y="212" width="31" height="15" fill="rgb(237,129,54)"/><text x="511.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (24 samples, 2.64%)</title><rect x="508" y="228" width="31" height="15" fill="rgb(248,229,33)"/><text x="511.00" y="238.50">_r..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (23 samples, 2.53%)</title><rect x="509" y="244" width="30" height="15" fill="rgb(249,190,19)"/><text x="512.00" y="254.50">py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (23 samples, 2.53%)</title><rect x="509" y="260" width="30" height="15" fill="rgb(245,138,16)"/><text x="512.00" y="270.50">vo..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (23 samples, 2.53%)</title><rect x="509" y="276" width="30" height="15" fill="rgb(205,71,28)"/><text x="512.00" y="286.50">vo..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (23 samples, 2.53%)</title><rect x="509" y="292" width="30" height="15" fill="rgb(220,202,52)"/><text x="512.00" y="302.50">py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (23 samples, 2.53%)</title><rect x="509" y="308" width="30" height="15" fill="rgb(215,5,8)"/><text x="512.00" y="318.50">py..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (23 samples, 2.53%)</title><rect x="509" y="324" width="30" height="15" fill="rgb(234,152,6)"/><text x="512.00" y="334.50">py..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (23 samples, 2.53%)</title><rect x="509" y="340" width="30" height="15" fill="rgb(215,44,51)"/><text x="512.00" y="350.50">py..</text></g><g><title>pybind11::array::~array (numpy.h:538) (23 samples, 2.53%)</title><rect x="509" y="356" width="30" height="15" fill="rgb(214,76,43)"/><text x="512.00" y="366.50">py..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (23 samples, 2.53%)</title><rect x="509" y="372" width="30" height="15" fill="rgb(252,99,28)"/><text x="512.00" y="382.50">py..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (23 samples, 2.53%)</title><rect x="509" y="388" width="30" height="15" fill="rgb(238,18,40)"/><text x="512.00" y="398.50">py..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (23 samples, 2.53%)</title><rect x="509" y="404" width="30" height="15" fill="rgb(206,163,6)"/><text x="512.00" y="414.50">py..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (23 samples, 2.53%)</title><rect x="509" y="420" width="30" height="15" fill="rgb(223,101,18)"/><text x="512.00" y="430.50">Ru..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (23 samples, 2.53%)</title><rect x="509" y="436" width="30" height="15" fill="rgb(235,202,26)"/><text x="512.00" y="446.50">py..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="537" y="452" width="2" height="15" fill="rgb(235,45,22)"/><text x="540.00" y="462.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:424) (1 samples, 0.11%)</title><rect x="538" y="468" width="1" height="15" fill="rgb(220,217,50)"/><text x="541.00" y="478.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::~vector (stl_bvector.h:677) (1 samples, 0.11%)</title><rect x="538" y="484" width="1" height="15" fill="rgb(243,4,6)"/><text x="541.00" y="494.50"></text></g><g><title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::~_Bvector_base (stl_bvector.h:485) (1 samples, 0.11%)</title><rect x="538" y="500" width="1" height="15" fill="rgb(213,159,3)"/><text x="541.00" y="510.50"></text></g><g><title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_deallocate (stl_bvector.h:497) (1 samples, 0.11%)</title><rect x="538" y="516" width="1" height="15" fill="rgb(238,173,31)"/><text x="541.00" y="526.50"></text></g><g><title>write_scores&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:206) (1 samples, 0.11%)</title><rect x="538" y="532" width="1" height="15" fill="rgb(250,194,4)"/><text x="541.00" y="542.50"></text></g><g><title>0x7f821f217d97 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="538" y="548" width="1" height="15" fill="rgb(235,147,43)"/><text x="541.00" y="558.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="540" y="244" width="2" height="15" fill="rgb(244,90,45)"/><text x="543.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="540" y="260" width="2" height="15" fill="rgb(222,175,11)"/><text x="543.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="540" y="276" width="2" height="15" fill="rgb(245,226,43)"/><text x="543.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="540" y="292" width="2" height="15" fill="rgb(224,131,30)"/><text x="543.00" y="302.50"></text></g><g><title>0x7f821f20de7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="540" y="308" width="2" height="15" fill="rgb(226,151,20)"/><text x="543.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.11%)</title><rect x="542" y="308" width="1" height="15" fill="rgb(238,218,54)"/><text x="545.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1704) (1 samples, 0.11%)</title><rect x="542" y="324" width="1" height="15" fill="rgb(242,56,26)"/><text x="545.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.22%)</title><rect x="542" y="292" width="2" height="15" fill="rgb(247,77,3)"/><text x="545.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:324) (1 samples, 0.11%)</title><rect x="543" y="308" width="1" height="15" fill="rgb(224,93,3)"/><text x="546.00" y="318.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1752) (1 samples, 0.11%)</title><rect x="543" y="324" width="1" height="15" fill="rgb(247,98,29)"/><text x="546.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.11%)</title><rect x="544" y="292" width="2" height="15" fill="rgb(207,85,44)"/><text x="547.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="544" y="308" width="2" height="15" fill="rgb(219,79,32)"/><text x="547.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.44%)</title><rect x="542" y="244" width="5" height="15" fill="rgb(211,178,13)"/><text x="545.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.44%)</title><rect x="542" y="260" width="5" height="15" fill="rgb(236,6,7)"/><text x="545.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.44%)</title><rect x="542" y="276" width="5" height="15" fill="rgb(223,208,40)"/><text x="545.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="546" y="292" width="1" height="15" fill="rgb(223,131,41)"/><text x="549.00" y="302.50"></text></g><g><title>FLOAT_multiply (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="546" y="308" width="1" height="15" fill="rgb(222,177,22)"/><text x="549.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (7 samples, 0.77%)</title><rect x="539" y="228" width="9" height="15" fill="rgb(208,75,31)"/><text x="542.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.11%)</title><rect x="547" y="244" width="1" height="15" fill="rgb(213,159,24)"/><text x="550.00" y="254.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:473) (1 samples, 0.11%)</title><rect x="547" y="260" width="1" height="15" fill="rgb(232,64,14)"/><text x="550.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:527) (1 samples, 0.11%)</title><rect x="548" y="228" width="2" height="15" fill="rgb(243,103,48)"/><text x="551.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.11%)</title><rect x="551" y="308" width="1" height="15" fill="rgb(205,145,26)"/><text x="554.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="551" y="324" width="1" height="15" fill="rgb(229,223,47)"/><text x="554.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="551" y="292" width="2" height="15" fill="rgb(232,98,17)"/><text x="554.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="552" y="308" width="1" height="15" fill="rgb(215,156,24)"/><text x="555.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.11%)</title><rect x="552" y="324" width="1" height="15" fill="rgb(230,59,0)"/><text x="555.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2703) (1 samples, 0.11%)</title><rect x="552" y="340" width="1" height="15" fill="rgb(207,52,14)"/><text x="555.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="553" y="340" width="2" height="15" fill="rgb(215,21,37)"/><text x="556.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.33%)</title><rect x="553" y="292" width="4" height="15" fill="rgb(216,12,53)"/><text x="556.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.33%)</title><rect x="553" y="308" width="4" height="15" fill="rgb(219,78,25)"/><text x="556.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.33%)</title><rect x="553" y="324" width="4" height="15" fill="rgb(213,145,43)"/><text x="556.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.22%)</title><rect x="555" y="340" width="2" height="15" fill="rgb(240,112,48)"/><text x="558.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.22%)</title><rect x="555" y="356" width="2" height="15" fill="rgb(233,190,51)"/><text x="558.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.11%)</title><rect x="557" y="292" width="2" height="15" fill="rgb(225,41,20)"/><text x="560.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="557" y="308" width="2" height="15" fill="rgb(254,159,17)"/><text x="560.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (16 samples, 1.76%)</title><rect x="539" y="196" width="21" height="15" fill="rgb(252,14,51)"/><text x="542.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (16 samples, 1.76%)</title><rect x="539" y="212" width="21" height="15" fill="rgb(208,155,26)"/><text x="542.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (8 samples, 0.88%)</title><rect x="550" y="228" width="10" height="15" fill="rgb(254,93,1)"/><text x="553.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.77%)</title><rect x="551" y="244" width="9" height="15" fill="rgb(251,215,9)"/><text x="554.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.77%)</title><rect x="551" y="260" width="9" height="15" fill="rgb(254,74,5)"/><text x="554.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 0.77%)</title><rect x="551" y="276" width="9" height="15" fill="rgb(221,190,47)"/><text x="554.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="559" y="292" width="1" height="15" fill="rgb(215,111,0)"/><text x="562.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="559" y="308" width="1" height="15" fill="rgb(216,49,36)"/><text x="562.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="559" y="324" width="1" height="15" fill="rgb(212,131,48)"/><text x="562.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:604) (1 samples, 0.11%)</title><rect x="559" y="340" width="1" height="15" fill="rgb(211,118,12)"/><text x="562.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.11%)</title><rect x="559" y="356" width="1" height="15" fill="rgb(236,42,30)"/><text x="562.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (2 samples, 0.22%)</title><rect x="560" y="196" width="3" height="15" fill="rgb(224,222,39)"/><text x="563.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3228) (1 samples, 0.11%)</title><rect x="561" y="212" width="2" height="15" fill="rgb(231,202,16)"/><text x="564.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:62) (1 samples, 0.11%)</title><rect x="563" y="212" width="1" height="15" fill="rgb(216,115,2)"/><text x="566.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.11%)</title><rect x="566" y="276" width="2" height="15" fill="rgb(239,12,15)"/><text x="569.00" y="286.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.11%)</title><rect x="568" y="324" width="1" height="15" fill="rgb(235,14,12)"/><text x="571.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.11%)</title><rect x="568" y="340" width="1" height="15" fill="rgb(212,209,19)"/><text x="571.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (1 samples, 0.11%)</title><rect x="569" y="324" width="1" height="15" fill="rgb(214,178,11)"/><text x="572.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="569" y="340" width="1" height="15" fill="rgb(211,183,51)"/><text x="572.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="570" y="340" width="2" height="15" fill="rgb(206,8,26)"/><text x="573.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="570" y="356" width="2" height="15" fill="rgb(207,145,23)"/><text x="573.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="572" y="356" width="1" height="15" fill="rgb(232,54,3)"/><text x="575.00" y="366.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py:2982) (1 samples, 0.11%)</title><rect x="572" y="372" width="1" height="15" fill="rgb(231,67,52)"/><text x="575.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2025) (1 samples, 0.11%)</title><rect x="574" y="436" width="1" height="15" fill="rgb(242,213,16)"/><text x="577.00" y="446.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (4 samples, 0.44%)</title><rect x="572" y="340" width="5" height="15" fill="rgb(254,97,20)"/><text x="575.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.33%)</title><rect x="573" y="356" width="4" height="15" fill="rgb(242,47,49)"/><text x="576.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.33%)</title><rect x="573" y="372" width="4" height="15" fill="rgb(230,20,45)"/><text x="576.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (3 samples, 0.33%)</title><rect x="573" y="388" width="4" height="15" fill="rgb(243,24,39)"/><text x="576.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.33%)</title><rect x="573" y="404" width="4" height="15" fill="rgb(212,25,16)"/><text x="576.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.22%)</title><rect x="574" y="420" width="3" height="15" fill="rgb(226,174,31)"/><text x="577.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.11%)</title><rect x="575" y="436" width="2" height="15" fill="rgb(222,48,23)"/><text x="578.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.11%)</title><rect x="575" y="452" width="2" height="15" fill="rgb(221,72,51)"/><text x="578.00" y="462.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2003) (1 samples, 0.11%)</title><rect x="577" y="388" width="1" height="15" fill="rgb(246,19,35)"/><text x="580.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.22%)</title><rect x="577" y="372" width="2" height="15" fill="rgb(242,119,16)"/><text x="580.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="578" y="388" width="1" height="15" fill="rgb(229,65,15)"/><text x="581.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.11%)</title><rect x="578" y="404" width="1" height="15" fill="rgb(219,78,26)"/><text x="581.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.11%)</title><rect x="578" y="420" width="1" height="15" fill="rgb(221,55,7)"/><text x="581.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.11%)</title><rect x="578" y="436" width="1" height="15" fill="rgb(219,119,20)"/><text x="581.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.33%)</title><rect x="577" y="356" width="4" height="15" fill="rgb(224,113,18)"/><text x="580.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.11%)</title><rect x="579" y="372" width="2" height="15" fill="rgb(206,109,23)"/><text x="582.00" y="382.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.11%)</title><rect x="579" y="388" width="2" height="15" fill="rgb(212,10,53)"/><text x="582.00" y="398.50"></text></g><g><title>0x7f821e419820 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="579" y="404" width="2" height="15" fill="rgb(216,65,5)"/><text x="582.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (9 samples, 0.99%)</title><rect x="570" y="324" width="12" height="15" fill="rgb(221,59,48)"/><text x="573.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.44%)</title><rect x="577" y="340" width="5" height="15" fill="rgb(253,62,15)"/><text x="580.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="581" y="356" width="1" height="15" fill="rgb(226,80,6)"/><text x="584.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="581" y="372" width="1" height="15" fill="rgb(222,90,3)"/><text x="584.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="581" y="388" width="1" height="15" fill="rgb(254,104,6)"/><text x="584.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="581" y="404" width="1" height="15" fill="rgb(209,99,50)"/><text x="584.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="582" y="356" width="1" height="15" fill="rgb(221,69,51)"/><text x="585.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="582" y="372" width="1" height="15" fill="rgb(248,69,32)"/><text x="585.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="582" y="388" width="1" height="15" fill="rgb(212,75,44)"/><text x="585.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="582" y="404" width="1" height="15" fill="rgb(231,135,52)"/><text x="585.00" y="414.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="582" y="420" width="1" height="15" fill="rgb(219,31,16)"/><text x="585.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="583" y="404" width="2" height="15" fill="rgb(215,15,22)"/><text x="586.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="583" y="420" width="2" height="15" fill="rgb(229,14,26)"/><text x="586.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2918) (1 samples, 0.11%)</title><rect x="583" y="436" width="2" height="15" fill="rgb(249,175,42)"/><text x="586.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.22%)</title><rect x="585" y="404" width="2" height="15" fill="rgb(242,93,9)"/><text x="588.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.22%)</title><rect x="585" y="420" width="2" height="15" fill="rgb(232,104,47)"/><text x="588.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.22%)</title><rect x="585" y="436" width="2" height="15" fill="rgb(237,49,51)"/><text x="588.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (2 samples, 0.22%)</title><rect x="585" y="452" width="2" height="15" fill="rgb(236,78,28)"/><text x="588.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (2 samples, 0.22%)</title><rect x="585" y="468" width="2" height="15" fill="rgb(207,123,21)"/><text x="588.00" y="478.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (2 samples, 0.22%)</title><rect x="587" y="420" width="3" height="15" fill="rgb(241,147,21)"/><text x="590.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.33%)</title><rect x="587" y="404" width="4" height="15" fill="rgb(254,124,13)"/><text x="590.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.11%)</title><rect x="590" y="420" width="1" height="15" fill="rgb(209,198,34)"/><text x="593.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1893) (1 samples, 0.11%)</title><rect x="590" y="436" width="1" height="15" fill="rgb(207,144,48)"/><text x="593.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src:1112) (1 samples, 0.11%)</title><rect x="590" y="452" width="1" height="15" fill="rgb(225,68,43)"/><text x="593.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src:855) (1 samples, 0.11%)</title><rect x="590" y="468" width="1" height="15" fill="rgb(213,154,16)"/><text x="593.00" y="478.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.77%)</title><rect x="583" y="356" width="9" height="15" fill="rgb(241,167,43)"/><text x="586.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.77%)</title><rect x="583" y="372" width="9" height="15" fill="rgb(240,167,1)"/><text x="586.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 0.77%)</title><rect x="583" y="388" width="9" height="15" fill="rgb(232,9,47)"/><text x="586.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.11%)</title><rect x="591" y="404" width="1" height="15" fill="rgb(213,12,32)"/><text x="594.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:707) (1 samples, 0.11%)</title><rect x="591" y="420" width="1" height="15" fill="rgb(229,44,12)"/><text x="594.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (92 samples, 10.12%)</title><rect x="474" y="180" width="120" height="15" fill="rgb(211,43,23)"/><text x="477.00" y="190.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (24 samples, 2.64%)</title><rect x="563" y="196" width="31" height="15" fill="rgb(251,85,4)"/><text x="566.00" y="206.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (23 samples, 2.53%)</title><rect x="564" y="212" width="30" height="15" fill="rgb(227,48,14)"/><text x="567.00" y="222.50">_r..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (22 samples, 2.42%)</title><rect x="565" y="228" width="29" height="15" fill="rgb(246,76,22)"/><text x="568.00" y="238.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (21 samples, 2.31%)</title><rect x="566" y="244" width="28" height="15" fill="rgb(246,165,25)"/><text x="569.00" y="254.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (21 samples, 2.31%)</title><rect x="566" y="260" width="28" height="15" fill="rgb(253,227,48)"/><text x="569.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (20 samples, 2.20%)</title><rect x="568" y="276" width="26" height="15" fill="rgb(231,182,36)"/><text x="571.00" y="286.50">_..</text></g><g><title>array_clip (methods.c:2381) (20 samples, 2.20%)</title><rect x="568" y="292" width="26" height="15" fill="rgb(225,133,47)"/><text x="571.00" y="302.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (20 samples, 2.20%)</title><rect x="568" y="308" width="26" height="15" fill="rgb(220,131,48)"/><text x="571.00" y="318.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:132) (9 samples, 0.99%)</title><rect x="582" y="324" width="12" height="15" fill="rgb(209,67,36)"/><text x="585.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (9 samples, 0.99%)</title><rect x="582" y="340" width="12" height="15" fill="rgb(214,30,16)"/><text x="585.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="592" y="356" width="2" height="15" fill="rgb(230,109,54)"/><text x="595.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="592" y="372" width="2" height="15" fill="rgb(247,135,1)"/><text x="595.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="592" y="388" width="2" height="15" fill="rgb(210,156,35)"/><text x="595.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="592" y="404" width="2" height="15" fill="rgb(227,36,23)"/><text x="595.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.11%)</title><rect x="594" y="180" width="1" height="15" fill="rgb(243,193,7)"/><text x="597.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.11%)</title><rect x="595" y="180" width="1" height="15" fill="rgb(232,190,18)"/><text x="598.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:18) (102 samples, 11.22%)</title><rect x="465" y="100" width="133" height="15" fill="rgb(231,81,5)"/><text x="468.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (101 samples, 11.11%)</title><rect x="466" y="116" width="132" height="15" fill="rgb(208,187,13)"/><text x="469.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (101 samples, 11.11%)</title><rect x="466" y="132" width="132" height="15" fill="rgb(227,118,18)"/><text x="469.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (101 samples, 11.11%)</title><rect x="466" y="148" width="132" height="15" fill="rgb(245,124,13)"/><text x="469.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (100 samples, 11.00%)</title><rect x="468" y="164" width="130" height="15" fill="rgb(250,1,27)"/><text x="471.00" y="174.50">_run_sequence_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.11%)</title><rect x="596" y="180" width="2" height="15" fill="rgb(244,63,42)"/><text x="599.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 0.55%)</title><rect x="604" y="180" width="7" height="15" fill="rgb(217,127,14)"/><text x="607.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.22%)</title><rect x="608" y="196" width="3" height="15" fill="rgb(226,157,28)"/><text x="611.00" y="206.50"></text></g><g><title>0x7f821f218120 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="613" y="196" width="1" height="15" fill="rgb(220,157,6)"/><text x="616.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:40) (1 samples, 0.11%)</title><rect x="614" y="212" width="2" height="15" fill="rgb(243,159,52)"/><text x="617.00" y="222.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (1 samples, 0.11%)</title><rect x="616" y="324" width="1" height="15" fill="rgb(213,2,0)"/><text x="619.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (1 samples, 0.11%)</title><rect x="616" y="340" width="1" height="15" fill="rgb(230,72,0)"/><text x="619.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4427) (1 samples, 0.11%)</title><rect x="616" y="356" width="1" height="15" fill="rgb(209,107,17)"/><text x="619.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.22%)</title><rect x="616" y="260" width="2" height="15" fill="rgb(241,33,19)"/><text x="619.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (2 samples, 0.22%)</title><rect x="616" y="276" width="2" height="15" fill="rgb(249,19,12)"/><text x="619.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (2 samples, 0.22%)</title><rect x="616" y="292" width="2" height="15" fill="rgb(249,88,17)"/><text x="619.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (2 samples, 0.22%)</title><rect x="616" y="308" width="2" height="15" fill="rgb(209,4,22)"/><text x="619.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:513) (1 samples, 0.11%)</title><rect x="617" y="324" width="1" height="15" fill="rgb(222,204,23)"/><text x="620.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (3 samples, 0.33%)</title><rect x="616" y="212" width="4" height="15" fill="rgb(241,67,12)"/><text x="619.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (3 samples, 0.33%)</title><rect x="616" y="228" width="4" height="15" fill="rgb(235,4,49)"/><text x="619.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (3 samples, 0.33%)</title><rect x="616" y="244" width="4" height="15" fill="rgb(223,209,15)"/><text x="619.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.11%)</title><rect x="618" y="260" width="2" height="15" fill="rgb(234,180,39)"/><text x="621.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.11%)</title><rect x="618" y="276" width="2" height="15" fill="rgb(206,76,40)"/><text x="621.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (1 samples, 0.11%)</title><rect x="618" y="292" width="2" height="15" fill="rgb(240,108,3)"/><text x="621.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.11%)</title><rect x="618" y="308" width="2" height="15" fill="rgb(225,107,15)"/><text x="621.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (1 samples, 0.11%)</title><rect x="618" y="324" width="2" height="15" fill="rgb(222,203,39)"/><text x="621.00" y="334.50"></text></g><g><title>0x7f821e41a0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="618" y="340" width="2" height="15" fill="rgb(246,173,47)"/><text x="621.00" y="350.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.11%)</title><rect x="620" y="228" width="1" height="15" fill="rgb(210,63,6)"/><text x="623.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (6 samples, 0.66%)</title><rect x="614" y="196" width="8" height="15" fill="rgb(215,18,2)"/><text x="617.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (2 samples, 0.22%)</title><rect x="620" y="212" width="2" height="15" fill="rgb(225,60,14)"/><text x="623.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.11%)</title><rect x="621" y="228" width="1" height="15" fill="rgb(213,53,0)"/><text x="624.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.11%)</title><rect x="621" y="244" width="1" height="15" fill="rgb(236,91,35)"/><text x="624.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.11%)</title><rect x="621" y="260" width="1" height="15" fill="rgb(225,166,36)"/><text x="624.00" y="270.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.11%)</title><rect x="621" y="276" width="1" height="15" fill="rgb(234,160,42)"/><text x="624.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:643) (1 samples, 0.11%)</title><rect x="621" y="292" width="1" height="15" fill="rgb(237,215,43)"/><text x="624.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="622" y="260" width="2" height="15" fill="rgb(210,129,13)"/><text x="625.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="622" y="276" width="2" height="15" fill="rgb(213,3,8)"/><text x="625.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.11%)</title><rect x="622" y="292" width="2" height="15" fill="rgb(221,165,10)"/><text x="625.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.11%)</title><rect x="622" y="308" width="2" height="15" fill="rgb(217,78,13)"/><text x="625.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.11%)</title><rect x="622" y="324" width="2" height="15" fill="rgb(216,113,54)"/><text x="625.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.11%)</title><rect x="624" y="260" width="1" height="15" fill="rgb(214,47,6)"/><text x="627.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.11%)</title><rect x="624" y="276" width="1" height="15" fill="rgb(228,49,2)"/><text x="627.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:229) (1 samples, 0.11%)</title><rect x="624" y="292" width="1" height="15" fill="rgb(230,13,49)"/><text x="627.00" y="302.50"></text></g><g><title>0x7f821f379997 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="627" y="324" width="2" height="15" fill="rgb(212,183,42)"/><text x="630.00" y="334.50"></text></g><g><title>0x7f821f3799a4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="629" y="324" width="1" height="15" fill="rgb(235,111,50)"/><text x="632.00" y="334.50"></text></g><g><title>0x7f821f3799bd (libm-2.29.so) (1 samples, 0.11%)</title><rect x="630" y="324" width="1" height="15" fill="rgb(251,151,49)"/><text x="633.00" y="334.50"></text></g><g><title>0x7f821f3799cc (libm-2.29.so) (2 samples, 0.22%)</title><rect x="631" y="324" width="3" height="15" fill="rgb(223,169,30)"/><text x="634.00" y="334.50"></text></g><g><title>0x7f821f3799e4 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="634" y="324" width="2" height="15" fill="rgb(226,100,38)"/><text x="637.00" y="334.50"></text></g><g><title>0x7f821f3799e8 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="636" y="324" width="2" height="15" fill="rgb(250,168,10)"/><text x="639.00" y="334.50"></text></g><g><title>0x7f821f3799f4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="638" y="324" width="1" height="15" fill="rgb(208,48,39)"/><text x="641.00" y="334.50"></text></g><g><title>0x7f821f3799f8 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="639" y="324" width="1" height="15" fill="rgb(215,23,28)"/><text x="642.00" y="334.50"></text></g><g><title>0x7f821f379a04 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="640" y="324" width="3" height="15" fill="rgb(231,98,28)"/><text x="643.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (18 samples, 1.98%)</title><rect x="622" y="228" width="24" height="15" fill="rgb(208,4,54)"/><text x="625.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (18 samples, 1.98%)</title><rect x="622" y="244" width="24" height="15" fill="rgb(217,113,24)"/><text x="625.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (16 samples, 1.76%)</title><rect x="625" y="260" width="21" height="15" fill="rgb(226,170,12)"/><text x="628.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (16 samples, 1.76%)</title><rect x="625" y="276" width="21" height="15" fill="rgb(234,190,22)"/><text x="628.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (16 samples, 1.76%)</title><rect x="625" y="292" width="21" height="15" fill="rgb(209,18,0)"/><text x="628.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (16 samples, 1.76%)</title><rect x="625" y="308" width="21" height="15" fill="rgb(217,21,19)"/><text x="628.00" y="318.50"></text></g><g><title>0x7f821f379a21 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="643" y="324" width="3" height="15" fill="rgb(240,122,24)"/><text x="646.00" y="334.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2168) (2 samples, 0.22%)</title><rect x="646" y="276" width="2" height="15" fill="rgb(246,25,37)"/><text x="649.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.22%)</title><rect x="649" y="292" width="3" height="15" fill="rgb(242,226,22)"/><text x="652.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.11%)</title><rect x="651" y="308" width="1" height="15" fill="rgb(222,30,44)"/><text x="654.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.22%)</title><rect x="652" y="308" width="3" height="15" fill="rgb(218,149,36)"/><text x="655.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.22%)</title><rect x="652" y="324" width="3" height="15" fill="rgb(206,83,26)"/><text x="655.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.22%)</title><rect x="652" y="340" width="3" height="15" fill="rgb(243,29,13)"/><text x="655.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.22%)</title><rect x="652" y="356" width="3" height="15" fill="rgb(254,94,42)"/><text x="655.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.22%)</title><rect x="652" y="372" width="3" height="15" fill="rgb(240,4,3)"/><text x="655.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.22%)</title><rect x="652" y="388" width="3" height="15" fill="rgb(211,76,43)"/><text x="655.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.22%)</title><rect x="655" y="324" width="2" height="15" fill="rgb(240,42,38)"/><text x="658.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.11%)</title><rect x="657" y="356" width="2" height="15" fill="rgb(229,200,35)"/><text x="660.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.11%)</title><rect x="657" y="372" width="2" height="15" fill="rgb(251,105,2)"/><text x="660.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.11%)</title><rect x="657" y="388" width="2" height="15" fill="rgb(213,4,14)"/><text x="660.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="657" y="404" width="2" height="15" fill="rgb(250,152,5)"/><text x="660.00" y="414.50"></text></g><g><title>0x7f821f217d50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="657" y="420" width="2" height="15" fill="rgb(245,97,10)"/><text x="660.00" y="430.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="661" y="388" width="1" height="15" fill="rgb(206,192,13)"/><text x="664.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (4 samples, 0.44%)</title><rect x="662" y="388" width="6" height="15" fill="rgb(205,115,41)"/><text x="665.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (2 samples, 0.22%)</title><rect x="665" y="404" width="3" height="15" fill="rgb(212,145,34)"/><text x="668.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (8 samples, 0.88%)</title><rect x="659" y="372" width="10" height="15" fill="rgb(236,36,24)"/><text x="662.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.11%)</title><rect x="668" y="388" width="1" height="15" fill="rgb(241,225,48)"/><text x="671.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (37 samples, 4.07%)</title><rect x="622" y="196" width="48" height="15" fill="rgb(221,44,41)"/><text x="625.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (37 samples, 4.07%)</title><rect x="622" y="212" width="48" height="15" fill="rgb(252,106,48)"/><text x="625.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (19 samples, 2.09%)</title><rect x="646" y="228" width="24" height="15" fill="rgb(240,151,15)"/><text x="649.00" y="238.50">_..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (19 samples, 2.09%)</title><rect x="646" y="244" width="24" height="15" fill="rgb(216,82,36)"/><text x="649.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (19 samples, 2.09%)</title><rect x="646" y="260" width="24" height="15" fill="rgb(238,178,31)"/><text x="649.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (17 samples, 1.87%)</title><rect x="648" y="276" width="22" height="15" fill="rgb(230,111,18)"/><text x="651.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (14 samples, 1.54%)</title><rect x="652" y="292" width="18" height="15" fill="rgb(230,2,15)"/><text x="655.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (12 samples, 1.32%)</title><rect x="655" y="308" width="15" height="15" fill="rgb(214,125,28)"/><text x="658.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (10 samples, 1.10%)</title><rect x="657" y="324" width="13" height="15" fill="rgb(244,158,10)"/><text x="660.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 1.10%)</title><rect x="657" y="340" width="13" height="15" fill="rgb(214,8,20)"/><text x="660.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (9 samples, 0.99%)</title><rect x="659" y="356" width="11" height="15" fill="rgb(205,5,51)"/><text x="662.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.11%)</title><rect x="669" y="372" width="1" height="15" fill="rgb(230,131,18)"/><text x="672.00" y="382.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="669" y="388" width="1" height="15" fill="rgb(251,84,25)"/><text x="672.00" y="398.50"></text></g><g><title>0x7f81e91beea0 (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="670" y="468" width="3" height="15" fill="rgb(219,63,28)"/><text x="673.00" y="478.50"></text></g><g><title>0x7f81e91beea9 (libgomp.so.1.0.0) (15 samples, 1.65%)</title><rect x="673" y="468" width="19" height="15" fill="rgb(247,112,1)"/><text x="676.00" y="478.50"></text></g><g><title>0x7f81e91beeab (libgomp.so.1.0.0) (9 samples, 0.99%)</title><rect x="692" y="468" width="12" height="15" fill="rgb(211,133,50)"/><text x="695.00" y="478.50"></text></g><g><title>0x7f81e91bdab9 (libgomp.so.1.0.0) (36 samples, 3.96%)</title><rect x="670" y="452" width="47" height="15" fill="rgb(218,45,23)"/><text x="673.00" y="462.50">0x7f..</text></g><g><title>0x7f81e91beead (libgomp.so.1.0.0) (10 samples, 1.10%)</title><rect x="704" y="468" width="13" height="15" fill="rgb(247,217,54)"/><text x="707.00" y="478.50"></text></g><g><title>0x7f81e91becf0 (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="717" y="484" width="3" height="15" fill="rgb(242,127,41)"/><text x="720.00" y="494.50"></text></g><g><title>0x7f81e91becf9 (libgomp.so.1.0.0) (3 samples, 0.33%)</title><rect x="720" y="484" width="3" height="15" fill="rgb(224,114,46)"/><text x="723.00" y="494.50"></text></g><g><title>0x7f81e91becfb (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="723" y="484" width="3" height="15" fill="rgb(224,7,22)"/><text x="726.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (47 samples, 5.17%)</title><rect x="670" y="196" width="61" height="15" fill="rgb(248,7,13)"/><text x="673.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (47 samples, 5.17%)</title><rect x="670" y="212" width="61" height="15" fill="rgb(232,215,11)"/><text x="673.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (47 samples, 5.17%)</title><rect x="670" y="228" width="61" height="15" fill="rgb(205,96,17)"/><text x="673.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (47 samples, 5.17%)</title><rect x="670" y="244" width="61" height="15" fill="rgb(241,224,35)"/><text x="673.00" y="254.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (47 samples, 5.17%)</title><rect x="670" y="260" width="61" height="15" fill="rgb(240,193,7)"/><text x="673.00" y="270.50">void p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (47 samples, 5.17%)</title><rect x="670" y="276" width="61" height="15" fill="rgb(221,207,51)"/><text x="673.00" y="286.50">void p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (47 samples, 5.17%)</title><rect x="670" y="292" width="61" height="15" fill="rgb(214,102,20)"/><text x="673.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (47 samples, 5.17%)</title><rect x="670" y="308" width="61" height="15" fill="rgb(219,116,28)"/><text x="673.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (47 samples, 5.17%)</title><rect x="670" y="324" width="61" height="15" fill="rgb(217,131,27)"/><text x="673.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (47 samples, 5.17%)</title><rect x="670" y="340" width="61" height="15" fill="rgb(241,11,28)"/><text x="673.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h:538) (47 samples, 5.17%)</title><rect x="670" y="356" width="61" height="15" fill="rgb(217,70,26)"/><text x="673.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (47 samples, 5.17%)</title><rect x="670" y="372" width="61" height="15" fill="rgb(229,116,29)"/><text x="673.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (47 samples, 5.17%)</title><rect x="670" y="388" width="61" height="15" fill="rgb(247,117,9)"/><text x="673.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (47 samples, 5.17%)</title><rect x="670" y="404" width="61" height="15" fill="rgb(220,150,52)"/><text x="673.00" y="414.50">pybind..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (47 samples, 5.17%)</title><rect x="670" y="420" width="61" height="15" fill="rgb(237,101,15)"/><text x="673.00" y="430.50">Runtim..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (47 samples, 5.17%)</title><rect x="670" y="436" width="61" height="15" fill="rgb(247,166,44)"/><text x="673.00" y="446.50">pybind..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (11 samples, 1.21%)</title><rect x="717" y="452" width="14" height="15" fill="rgb(214,95,48)"/><text x="720.00" y="462.50"></text></g><g><title>0x7f81e91bcdaa (libgomp.so.1.0.0) (11 samples, 1.21%)</title><rect x="717" y="468" width="14" height="15" fill="rgb(236,69,11)"/><text x="720.00" y="478.50"></text></g><g><title>0x7f81e91becfd (libgomp.so.1.0.0) (4 samples, 0.44%)</title><rect x="726" y="484" width="5" height="15" fill="rgb(242,72,37)"/><text x="729.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.11%)</title><rect x="731" y="212" width="2" height="15" fill="rgb(208,80,6)"/><text x="734.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (2 samples, 0.22%)</title><rect x="734" y="228" width="2" height="15" fill="rgb(214,5,11)"/><text x="737.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.11%)</title><rect x="736" y="228" width="2" height="15" fill="rgb(242,218,45)"/><text x="739.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.11%)</title><rect x="736" y="244" width="2" height="15" fill="rgb(251,154,28)"/><text x="739.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="740" y="244" width="2" height="15" fill="rgb(223,54,10)"/><text x="743.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="740" y="260" width="2" height="15" fill="rgb(245,166,48)"/><text x="743.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="740" y="276" width="2" height="15" fill="rgb(242,96,21)"/><text x="743.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="740" y="292" width="2" height="15" fill="rgb(246,13,5)"/><text x="743.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1120) (1 samples, 0.11%)</title><rect x="742" y="276" width="1" height="15" fill="rgb(225,184,13)"/><text x="745.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.22%)</title><rect x="742" y="260" width="2" height="15" fill="rgb(209,225,38)"/><text x="745.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.11%)</title><rect x="743" y="276" width="1" height="15" fill="rgb(215,60,5)"/><text x="746.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:927) (1 samples, 0.11%)</title><rect x="743" y="292" width="1" height="15" fill="rgb(252,61,46)"/><text x="746.00" y="302.50"></text></g><g><title>_borrowed_reference (ufunc_object.c:1022) (1 samples, 0.11%)</title><rect x="743" y="308" width="1" height="15" fill="rgb(234,127,15)"/><text x="746.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.11%)</title><rect x="744" y="276" width="2" height="15" fill="rgb(235,184,47)"/><text x="747.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.11%)</title><rect x="744" y="292" width="2" height="15" fill="rgb(231,223,19)"/><text x="747.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.11%)</title><rect x="746" y="308" width="1" height="15" fill="rgb(244,225,44)"/><text x="749.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.11%)</title><rect x="746" y="324" width="1" height="15" fill="rgb(228,108,46)"/><text x="749.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.11%)</title><rect x="746" y="340" width="1" height="15" fill="rgb(246,98,20)"/><text x="749.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.11%)</title><rect x="746" y="356" width="1" height="15" fill="rgb(214,164,2)"/><text x="749.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:117) (1 samples, 0.11%)</title><rect x="746" y="372" width="1" height="15" fill="rgb(222,199,39)"/><text x="749.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (8 samples, 0.88%)</title><rect x="738" y="228" width="10" height="15" fill="rgb(213,173,0)"/><text x="741.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.55%)</title><rect x="742" y="244" width="6" height="15" fill="rgb(215,206,3)"/><text x="745.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.33%)</title><rect x="744" y="260" width="4" height="15" fill="rgb(217,156,0)"/><text x="747.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.22%)</title><rect x="746" y="276" width="2" height="15" fill="rgb(223,178,31)"/><text x="749.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="746" y="292" width="2" height="15" fill="rgb(225,130,32)"/><text x="749.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="747" y="308" width="1" height="15" fill="rgb(215,216,34)"/><text x="750.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.11%)</title><rect x="747" y="324" width="1" height="15" fill="rgb(205,191,41)"/><text x="750.00" y="334.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.11%)</title><rect x="747" y="340" width="1" height="15" fill="rgb(250,135,1)"/><text x="750.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:527) (1 samples, 0.11%)</title><rect x="748" y="228" width="1" height="15" fill="rgb(210,214,43)"/><text x="751.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.11%)</title><rect x="749" y="260" width="2" height="15" fill="rgb(211,109,32)"/><text x="752.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.11%)</title><rect x="751" y="260" width="1" height="15" fill="rgb(240,49,43)"/><text x="754.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.11%)</title><rect x="751" y="276" width="1" height="15" fill="rgb(216,214,18)"/><text x="754.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.11%)</title><rect x="752" y="308" width="1" height="15" fill="rgb(220,20,24)"/><text x="755.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.11%)</title><rect x="752" y="324" width="1" height="15" fill="rgb(217,45,13)"/><text x="755.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1069) (1 samples, 0.11%)</title><rect x="752" y="340" width="1" height="15" fill="rgb(206,117,43)"/><text x="755.00" y="350.50"></text></g><g><title>PyArray_BYTES (ndarraytypes.h:1492) (1 samples, 0.11%)</title><rect x="752" y="356" width="1" height="15" fill="rgb(248,4,44)"/><text x="755.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="752" y="292" width="3" height="15" fill="rgb(225,130,16)"/><text x="755.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="753" y="308" width="2" height="15" fill="rgb(220,26,45)"/><text x="756.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2858) (1 samples, 0.11%)</title><rect x="753" y="324" width="2" height="15" fill="rgb(226,164,52)"/><text x="756.00" y="334.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1926) (1 samples, 0.11%)</title><rect x="753" y="340" width="2" height="15" fill="rgb(225,214,2)"/><text x="756.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="755" y="356" width="1" height="15" fill="rgb(240,124,31)"/><text x="758.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.11%)</title><rect x="756" y="356" width="1" height="15" fill="rgb(251,19,0)"/><text x="759.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (21 samples, 2.31%)</title><rect x="731" y="196" width="28" height="15" fill="rgb(225,76,3)"/><text x="734.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (20 samples, 2.20%)</title><rect x="733" y="212" width="26" height="15" fill="rgb(222,203,35)"/><text x="736.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (7 samples, 0.77%)</title><rect x="749" y="228" width="10" height="15" fill="rgb(253,45,26)"/><text x="752.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.77%)</title><rect x="749" y="244" width="10" height="15" fill="rgb(214,75,48)"/><text x="752.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.55%)</title><rect x="752" y="260" width="7" height="15" fill="rgb(205,172,16)"/><text x="755.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.55%)</title><rect x="752" y="276" width="7" height="15" fill="rgb(247,72,29)"/><text x="755.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.33%)</title><rect x="755" y="292" width="4" height="15" fill="rgb(242,17,51)"/><text x="758.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.33%)</title><rect x="755" y="308" width="4" height="15" fill="rgb(251,10,29)"/><text x="758.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.33%)</title><rect x="755" y="324" width="4" height="15" fill="rgb(251,228,9)"/><text x="758.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.33%)</title><rect x="755" y="340" width="4" height="15" fill="rgb(247,210,23)"/><text x="758.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.11%)</title><rect x="757" y="356" width="2" height="15" fill="rgb(209,95,11)"/><text x="760.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.11%)</title><rect x="759" y="196" width="1" height="15" fill="rgb(242,220,0)"/><text x="762.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:63) (1 samples, 0.11%)</title><rect x="760" y="212" width="1" height="15" fill="rgb(211,49,21)"/><text x="763.00" y="222.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.11%)</title><rect x="766" y="324" width="2" height="15" fill="rgb(212,103,15)"/><text x="769.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:73) (1 samples, 0.11%)</title><rect x="766" y="340" width="2" height="15" fill="rgb(252,194,31)"/><text x="769.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (4 samples, 0.44%)</title><rect x="768" y="340" width="5" height="15" fill="rgb(235,7,51)"/><text x="771.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="772" y="356" width="1" height="15" fill="rgb(218,62,29)"/><text x="775.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (5 samples, 0.55%)</title><rect x="768" y="324" width="6" height="15" fill="rgb(213,172,13)"/><text x="771.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.11%)</title><rect x="773" y="340" width="1" height="15" fill="rgb(252,176,6)"/><text x="776.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="773" y="356" width="1" height="15" fill="rgb(220,157,41)"/><text x="776.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.11%)</title><rect x="773" y="372" width="1" height="15" fill="rgb(224,144,38)"/><text x="776.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="774" y="340" width="1" height="15" fill="rgb(225,1,8)"/><text x="777.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="774" y="356" width="1" height="15" fill="rgb(243,164,7)"/><text x="777.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.22%)</title><rect x="775" y="340" width="3" height="15" fill="rgb(253,144,49)"/><text x="778.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.22%)</title><rect x="775" y="356" width="3" height="15" fill="rgb(225,125,33)"/><text x="778.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.22%)</title><rect x="775" y="372" width="3" height="15" fill="rgb(236,164,17)"/><text x="778.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.11%)</title><rect x="777" y="388" width="1" height="15" fill="rgb(217,207,0)"/><text x="780.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="777" y="404" width="1" height="15" fill="rgb(239,73,34)"/><text x="780.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.11%)</title><rect x="777" y="420" width="1" height="15" fill="rgb(239,155,32)"/><text x="780.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.11%)</title><rect x="777" y="436" width="1" height="15" fill="rgb(209,38,7)"/><text x="780.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="777" y="452" width="1" height="15" fill="rgb(251,34,53)"/><text x="780.00" y="462.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.11%)</title><rect x="777" y="468" width="1" height="15" fill="rgb(243,205,1)"/><text x="780.00" y="478.50"></text></g><g><title>_array_find_python_scalar_type (common.c:77) (1 samples, 0.11%)</title><rect x="777" y="484" width="1" height="15" fill="rgb(240,112,47)"/><text x="780.00" y="494.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.11%)</title><rect x="777" y="500" width="1" height="15" fill="rgb(231,154,49)"/><text x="780.00" y="510.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="778" y="372" width="1" height="15" fill="rgb(215,103,1)"/><text x="781.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="778" y="388" width="1" height="15" fill="rgb(236,153,4)"/><text x="781.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.11%)</title><rect x="778" y="404" width="1" height="15" fill="rgb(205,28,5)"/><text x="781.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.11%)</title><rect x="778" y="420" width="1" height="15" fill="rgb(248,101,47)"/><text x="781.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.11%)</title><rect x="778" y="436" width="1" height="15" fill="rgb(250,159,22)"/><text x="781.00" y="446.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.11%)</title><rect x="778" y="452" width="1" height="15" fill="rgb(205,139,13)"/><text x="781.00" y="462.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:126) (1 samples, 0.11%)</title><rect x="778" y="468" width="1" height="15" fill="rgb(213,218,33)"/><text x="781.00" y="478.50"></text></g><g><title>npy_is_aligned (common.h:207) (1 samples, 0.11%)</title><rect x="778" y="484" width="1" height="15" fill="rgb(236,142,3)"/><text x="781.00" y="494.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.22%)</title><rect x="778" y="340" width="3" height="15" fill="rgb(217,71,43)"/><text x="781.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="778" y="356" width="3" height="15" fill="rgb(217,131,31)"/><text x="781.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="779" y="372" width="2" height="15" fill="rgb(234,74,9)"/><text x="782.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="779" y="388" width="2" height="15" fill="rgb(214,221,15)"/><text x="782.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.11%)</title><rect x="779" y="404" width="2" height="15" fill="rgb(209,124,29)"/><text x="782.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.11%)</title><rect x="779" y="420" width="2" height="15" fill="rgb(252,182,16)"/><text x="782.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.11%)</title><rect x="779" y="436" width="2" height="15" fill="rgb(242,117,45)"/><text x="782.00" y="446.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1495) (1 samples, 0.11%)</title><rect x="779" y="452" width="2" height="15" fill="rgb(207,39,18)"/><text x="782.00" y="462.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (6 samples, 0.66%)</title><rect x="774" y="324" width="8" height="15" fill="rgb(215,172,48)"/><text x="777.00" y="334.50"></text></g><g><title>bool_arrtype_nonzero (scalartypes.c.src:3017) (1 samples, 0.11%)</title><rect x="781" y="340" width="1" height="15" fill="rgb(254,144,23)"/><text x="784.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.11%)</title><rect x="782" y="420" width="1" height="15" fill="rgb(245,17,39)"/><text x="785.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.11%)</title><rect x="782" y="436" width="1" height="15" fill="rgb(216,206,14)"/><text x="785.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="782" y="452" width="1" height="15" fill="rgb(225,15,7)"/><text x="785.00" y="462.50"></text></g><g><title>0x7f821f1f8b49 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="782" y="468" width="1" height="15" fill="rgb(225,226,28)"/><text x="785.00" y="478.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:872) (1 samples, 0.11%)</title><rect x="783" y="468" width="1" height="15" fill="rgb(223,178,39)"/><text x="786.00" y="478.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:873) (1 samples, 0.11%)</title><rect x="784" y="468" width="2" height="15" fill="rgb(244,22,50)"/><text x="787.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.44%)</title><rect x="782" y="404" width="5" height="15" fill="rgb(237,47,8)"/><text x="785.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.33%)</title><rect x="783" y="420" width="4" height="15" fill="rgb(212,152,8)"/><text x="786.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.33%)</title><rect x="783" y="436" width="4" height="15" fill="rgb(237,161,14)"/><text x="786.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (3 samples, 0.33%)</title><rect x="783" y="452" width="4" height="15" fill="rgb(233,126,48)"/><text x="786.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.11%)</title><rect x="786" y="468" width="1" height="15" fill="rgb(222,126,48)"/><text x="789.00" y="478.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (6 samples, 0.66%)</title><rect x="787" y="420" width="8" height="15" fill="rgb(220,92,11)"/><text x="790.00" y="430.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (27 samples, 2.97%)</title><rect x="761" y="212" width="35" height="15" fill="rgb(234,84,10)"/><text x="764.00" y="222.50">_r..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (25 samples, 2.75%)</title><rect x="764" y="228" width="32" height="15" fill="rgb(221,199,17)"/><text x="767.00" y="238.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (25 samples, 2.75%)</title><rect x="764" y="244" width="32" height="15" fill="rgb(224,115,49)"/><text x="767.00" y="254.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (23 samples, 2.53%)</title><rect x="766" y="260" width="30" height="15" fill="rgb(232,56,19)"/><text x="769.00" y="270.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (23 samples, 2.53%)</title><rect x="766" y="276" width="30" height="15" fill="rgb(252,9,49)"/><text x="769.00" y="286.50">_w..</text></g><g><title>array_clip (methods.c:2381) (23 samples, 2.53%)</title><rect x="766" y="292" width="30" height="15" fill="rgb(210,101,2)"/><text x="769.00" y="302.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (23 samples, 2.53%)</title><rect x="766" y="308" width="30" height="15" fill="rgb(223,214,8)"/><text x="769.00" y="318.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:132) (11 samples, 1.21%)</title><rect x="782" y="324" width="14" height="15" fill="rgb(229,44,37)"/><text x="785.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (11 samples, 1.21%)</title><rect x="782" y="340" width="14" height="15" fill="rgb(217,26,51)"/><text x="785.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.21%)</title><rect x="782" y="356" width="14" height="15" fill="rgb(236,167,4)"/><text x="785.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.21%)</title><rect x="782" y="372" width="14" height="15" fill="rgb(224,111,16)"/><text x="785.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 1.21%)</title><rect x="782" y="388" width="14" height="15" fill="rgb(243,33,52)"/><text x="785.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (7 samples, 0.77%)</title><rect x="787" y="404" width="9" height="15" fill="rgb(205,22,10)"/><text x="790.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.11%)</title><rect x="795" y="420" width="1" height="15" fill="rgb(220,78,29)"/><text x="798.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1893) (1 samples, 0.11%)</title><rect x="795" y="436" width="1" height="15" fill="rgb(248,168,23)"/><text x="798.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src:1209) (1 samples, 0.11%)</title><rect x="795" y="452" width="1" height="15" fill="rgb(254,123,31)"/><text x="798.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (144 samples, 15.84%)</title><rect x="611" y="180" width="186" height="15" fill="rgb(220,21,19)"/><text x="614.00" y="190.50">run (mlprodict/onnxrt/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (29 samples, 3.19%)</title><rect x="760" y="196" width="37" height="15" fill="rgb(232,65,35)"/><text x="763.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:67) (1 samples, 0.11%)</title><rect x="796" y="212" width="1" height="15" fill="rgb(208,120,24)"/><text x="799.00" y="222.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (157 samples, 17.27%)</title><rect x="599" y="164" width="204" height="15" fill="rgb(233,151,42)"/><text x="602.00" y="174.50">_run_sequence_runtime (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 0.44%)</title><rect x="797" y="180" width="6" height="15" fill="rgb(250,175,15)"/><text x="800.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:45) (261 samples, 28.71%)</title><rect x="465" y="52" width="339" height="15" fill="rgb(212,169,6)"/><text x="468.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_..</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:44) (261 samples, 28.71%)</title><rect x="465" y="68" width="339" height="15" fill="rgb(219,40,9)"/><text x="468.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_defaul..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:29) (261 samples, 28.71%)</title><rect x="465" y="84" width="339" height="15" fill="rgb(233,113,49)"/><text x="468.00" y="94.50">setup_profile (bench_AdaBoostClassifier_defau..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:23) (159 samples, 17.49%)</title><rect x="598" y="100" width="206" height="15" fill="rgb(242,127,51)"/><text x="601.00" y="110.50">profile (bench_AdaBoostClas..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (159 samples, 17.49%)</title><rect x="598" y="116" width="206" height="15" fill="rgb(233,159,48)"/><text x="601.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (159 samples, 17.49%)</title><rect x="598" y="132" width="206" height="15" fill="rgb(220,104,54)"/><text x="601.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (158 samples, 17.38%)</title><rect x="599" y="148" width="205" height="15" fill="rgb(254,228,31)"/><text x="602.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="803" y="164" width="1" height="15" fill="rgb(239,139,13)"/><text x="806.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="803" y="180" width="1" height="15" fill="rgb(245,38,7)"/><text x="806.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="803" y="196" width="1" height="15" fill="rgb(252,44,44)"/><text x="806.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="803" y="212" width="1" height="15" fill="rgb(214,103,31)"/><text x="806.00" y="222.50"></text></g><g><title>0x7f821f1f7eb0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="803" y="228" width="1" height="15" fill="rgb(247,116,12)"/><text x="806.00" y="238.50"></text></g><g><title>0x7f821f1f6c2d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="803" y="244" width="1" height="15" fill="rgb(206,152,17)"/><text x="806.00" y="254.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.11%)</title><rect x="804" y="196" width="1" height="15" fill="rgb(248,20,29)"/><text x="807.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:57) (1 samples, 0.11%)</title><rect x="804" y="212" width="1" height="15" fill="rgb(226,225,0)"/><text x="807.00" y="222.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py:321) (1 samples, 0.11%)</title><rect x="804" y="228" width="1" height="15" fill="rgb(214,24,20)"/><text x="807.00" y="238.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:508) (1 samples, 0.11%)</title><rect x="804" y="244" width="1" height="15" fill="rgb(253,10,20)"/><text x="807.00" y="254.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:28) (2 samples, 0.22%)</title><rect x="804" y="84" width="3" height="15" fill="rgb(216,52,18)"/><text x="807.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.22%)</title><rect x="804" y="100" width="3" height="15" fill="rgb(205,73,24)"/><text x="807.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.22%)</title><rect x="804" y="116" width="3" height="15" fill="rgb(214,15,22)"/><text x="807.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.22%)</title><rect x="804" y="132" width="3" height="15" fill="rgb(254,133,3)"/><text x="807.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.22%)</title><rect x="804" y="148" width="3" height="15" fill="rgb(218,98,18)"/><text x="807.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.22%)</title><rect x="804" y="164" width="3" height="15" fill="rgb(215,71,40)"/><text x="807.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.22%)</title><rect x="804" y="180" width="3" height="15" fill="rgb(210,36,38)"/><text x="807.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (1 samples, 0.11%)</title><rect x="805" y="196" width="2" height="15" fill="rgb(215,129,36)"/><text x="808.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.11%)</title><rect x="805" y="212" width="2" height="15" fill="rgb(222,102,32)"/><text x="808.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.11%)</title><rect x="805" y="228" width="2" height="15" fill="rgb(207,195,23)"/><text x="808.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="805" y="244" width="2" height="15" fill="rgb(231,150,35)"/><text x="808.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.11%)</title><rect x="805" y="260" width="2" height="15" fill="rgb(243,113,13)"/><text x="808.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:93) (1 samples, 0.11%)</title><rect x="805" y="276" width="2" height="15" fill="rgb(207,1,31)"/><text x="808.00" y="286.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.11%)</title><rect x="805" y="292" width="2" height="15" fill="rgb(236,75,25)"/><text x="808.00" y="302.50"></text></g><g><title>0x7f81deeb5ff9 (?) (1 samples, 0.11%)</title><rect x="809" y="212" width="1" height="15" fill="rgb(211,133,54)"/><text x="812.00" y="222.50"></text></g><g><title>0x7f81deeb0ef6 (?) (1 samples, 0.11%)</title><rect x="809" y="228" width="1" height="15" fill="rgb(215,98,34)"/><text x="812.00" y="238.50"></text></g><g><title>0x7f81deea5962 (?) (1 samples, 0.11%)</title><rect x="809" y="244" width="1" height="15" fill="rgb(248,52,11)"/><text x="812.00" y="254.50"></text></g><g><title>0x7f81deed97a7 (?) (1 samples, 0.11%)</title><rect x="809" y="260" width="1" height="15" fill="rgb(213,148,17)"/><text x="812.00" y="270.50"></text></g><g><title>0x7f81deed9379 (?) (1 samples, 0.11%)</title><rect x="809" y="276" width="1" height="15" fill="rgb(249,54,28)"/><text x="812.00" y="286.50"></text></g><g><title>0x7f81df3378b8 (?) (1 samples, 0.11%)</title><rect x="809" y="292" width="1" height="15" fill="rgb(210,204,50)"/><text x="812.00" y="302.50"></text></g><g><title>0x7f81df335c7f (?) (1 samples, 0.11%)</title><rect x="809" y="308" width="1" height="15" fill="rgb(225,126,44)"/><text x="812.00" y="318.50"></text></g><g><title>0x7f81df34899c (?) (1 samples, 0.11%)</title><rect x="809" y="324" width="1" height="15" fill="rgb(211,62,32)"/><text x="812.00" y="334.50"></text></g><g><title>0x7f81df0664b8 (?) (1 samples, 0.11%)</title><rect x="809" y="340" width="1" height="15" fill="rgb(247,20,8)"/><text x="812.00" y="350.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="813" y="340" width="1" height="15" fill="rgb(253,34,51)"/><text x="816.00" y="350.50"></text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="814" y="340" width="2" height="15" fill="rgb(230,208,36)"/><text x="817.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="816" y="340" width="1" height="15" fill="rgb(251,139,52)"/><text x="819.00" y="350.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="817" y="340" width="4" height="15" fill="rgb(251,123,47)"/><text x="820.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.44%)</title><rect x="821" y="372" width="5" height="15" fill="rgb(205,114,7)"/><text x="824.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="823" y="388" width="3" height="15" fill="rgb(243,106,6)"/><text x="826.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.55%)</title><rect x="821" y="340" width="6" height="15" fill="rgb(215,93,8)"/><text x="824.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.55%)</title><rect x="821" y="356" width="6" height="15" fill="rgb(227,177,51)"/><text x="824.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="826" y="372" width="1" height="15" fill="rgb(238,169,51)"/><text x="829.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="826" y="388" width="1" height="15" fill="rgb(228,224,6)"/><text x="829.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="826" y="404" width="1" height="15" fill="rgb(230,69,18)"/><text x="829.00" y="414.50"></text></g><g><title>0x7f821f1f900a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="826" y="420" width="1" height="15" fill="rgb(234,184,40)"/><text x="829.00" y="430.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="827" y="340" width="2" height="15" fill="rgb(230,42,33)"/><text x="830.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="827" y="356" width="2" height="15" fill="rgb(218,137,2)"/><text x="830.00" y="366.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.10%)</title><rect x="829" y="340" width="13" height="15" fill="rgb(253,85,26)"/><text x="832.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.10%)</title><rect x="829" y="356" width="13" height="15" fill="rgb(209,190,21)"/><text x="832.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.10%)</title><rect x="829" y="372" width="13" height="15" fill="rgb(237,27,39)"/><text x="832.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.44%)</title><rect x="836" y="388" width="6" height="15" fill="rgb(245,56,29)"/><text x="839.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="860" y="356" width="2" height="15" fill="rgb(221,186,49)"/><text x="863.00" y="366.50"></text></g><g><title>0x7f81dee7c930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="907" y="388" width="2" height="15" fill="rgb(228,53,38)"/><text x="910.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.44%)</title><rect x="909" y="388" width="5" height="15" fill="rgb(244,56,4)"/><text x="912.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.44%)</title><rect x="909" y="404" width="5" height="15" fill="rgb(205,214,52)"/><text x="912.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (48 samples, 5.28%)</title><rect x="862" y="356" width="63" height="15" fill="rgb(219,182,40)"/><text x="865.00" y="366.50">onnxru..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 2.42%)</title><rect x="896" y="372" width="29" height="15" fill="rgb(222,89,43)"/><text x="899.00" y="382.50">st..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (8 samples, 0.88%)</title><rect x="914" y="388" width="11" height="15" fill="rgb(216,15,53)"/><text x="917.00" y="398.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.44%)</title><rect x="925" y="356" width="5" height="15" fill="rgb(243,127,49)"/><text x="928.00" y="366.50"></text></g><g><title>0x7f821f217dbb (libc-2.29.so) (1 samples, 0.11%)</title><rect x="929" y="372" width="1" height="15" fill="rgb(207,83,5)"/><text x="932.00" y="382.50"></text></g><g><title>0x7f820ecc47a0 (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="935" y="372" width="3" height="15" fill="rgb(219,18,11)"/><text x="938.00" y="382.50"></text></g><g><title>0x7f821f1f7906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="938" y="372" width="1" height="15" fill="rgb(220,216,5)"/><text x="941.00" y="382.50"></text></g><g><title>0x7f821f1f791e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="939" y="372" width="1" height="15" fill="rgb(224,130,40)"/><text x="942.00" y="382.50"></text></g><g><title>0x7f821f1f7945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="940" y="372" width="2" height="15" fill="rgb(245,142,25)"/><text x="943.00" y="382.50"></text></g><g><title>0x7f821f1f7965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="942" y="372" width="1" height="15" fill="rgb(218,126,27)"/><text x="945.00" y="382.50"></text></g><g><title>0x7f821f1f796a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="943" y="372" width="1" height="15" fill="rgb(209,89,46)"/><text x="946.00" y="382.50"></text></g><g><title>0x7f821f1f7991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="944" y="372" width="1" height="15" fill="rgb(212,166,6)"/><text x="947.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="945" y="372" width="2" height="15" fill="rgb(219,139,17)"/><text x="948.00" y="382.50"></text></g><g><title>0x7f821f1f7929 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="949" y="388" width="2" height="15" fill="rgb(223,142,22)"/><text x="952.00" y="398.50"></text></g><g><title>0x7f821f1f7991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="951" y="388" width="1" height="15" fill="rgb(215,192,45)"/><text x="954.00" y="398.50"></text></g><g><title>0x7f821f1f7a4d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="952" y="388" width="1" height="15" fill="rgb(247,98,3)"/><text x="955.00" y="398.50"></text></g><g><title>0x7f821f1f7a55 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="953" y="388" width="2" height="15" fill="rgb(233,2,0)"/><text x="956.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 2.20%)</title><rect x="930" y="356" width="26" height="15" fill="rgb(233,50,16)"/><text x="933.00" y="366.50">s..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.77%)</title><rect x="947" y="372" width="9" height="15" fill="rgb(217,140,25)"/><text x="950.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="955" y="388" width="1" height="15" fill="rgb(213,38,17)"/><text x="958.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (94 samples, 10.34%)</title><rect x="842" y="340" width="122" height="15" fill="rgb(206,73,10)"/><text x="845.00" y="350.50">onnxruntime::ml..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (6 samples, 0.66%)</title><rect x="956" y="356" width="8" height="15" fill="rgb(237,83,20)"/><text x="959.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (118 samples, 12.98%)</title><rect x="812" y="260" width="153" height="15" fill="rgb(253,59,42)"/><text x="815.00" y="270.50">onnxruntime::Infere..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (118 samples, 12.98%)</title><rect x="812" y="276" width="153" height="15" fill="rgb(225,40,27)"/><text x="815.00" y="286.50">onnxruntime::Infere..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (118 samples, 12.98%)</title><rect x="812" y="292" width="153" height="15" fill="rgb(230,151,13)"/><text x="815.00" y="302.50">onnxruntime::utils:..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (118 samples, 12.98%)</title><rect x="812" y="308" width="153" height="15" fill="rgb(210,115,31)"/><text x="815.00" y="318.50">onnxruntime::utils:..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (118 samples, 12.98%)</title><rect x="812" y="324" width="153" height="15" fill="rgb(245,192,36)"/><text x="815.00" y="334.50">onnxruntime::Sequen..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="964" y="340" width="1" height="15" fill="rgb(230,35,21)"/><text x="967.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="964" y="356" width="1" height="15" fill="rgb(209,134,51)"/><text x="967.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="964" y="372" width="1" height="15" fill="rgb(215,161,54)"/><text x="967.00" y="382.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="965" y="260" width="1" height="15" fill="rgb(225,146,36)"/><text x="968.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="965" y="276" width="1" height="15" fill="rgb(216,228,26)"/><text x="968.00" y="286.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:18) (124 samples, 13.64%)</title><rect x="807" y="100" width="161" height="15" fill="rgb(226,53,52)"/><text x="810.00" y="110.50">profile (bench_AdaBo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (122 samples, 13.42%)</title><rect x="809" y="116" width="159" height="15" fill="rgb(231,0,21)"/><text x="812.00" y="126.50">time_predict (mlprod..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (122 samples, 13.42%)</title><rect x="809" y="132" width="159" height="15" fill="rgb(209,8,53)"/><text x="812.00" y="142.50">&lt;lambda&gt; (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (122 samples, 13.42%)</title><rect x="809" y="148" width="159" height="15" fill="rgb(251,86,54)"/><text x="812.00" y="158.50">run (mlprodict/onnxr..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (122 samples, 13.42%)</title><rect x="809" y="164" width="159" height="15" fill="rgb(218,44,49)"/><text x="812.00" y="174.50">_run_whole_runtime (..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (122 samples, 13.42%)</title><rect x="809" y="180" width="159" height="15" fill="rgb(210,206,41)"/><text x="812.00" y="190.50">run (mlprodict/onnxr..</text></g><g><title>run (onnxruntime/capi/session.py:136) (122 samples, 13.42%)</title><rect x="809" y="196" width="159" height="15" fill="rgb(206,116,49)"/><text x="812.00" y="206.50">run (onnxruntime/cap..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 13.31%)</title><rect x="810" y="212" width="158" height="15" fill="rgb(243,37,34)"/><text x="813.00" y="222.50">pybind11::cpp_functi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 13.31%)</title><rect x="810" y="228" width="158" height="15" fill="rgb(207,23,23)"/><text x="813.00" y="238.50">void pybind11::cpp_f..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 13.31%)</title><rect x="810" y="244" width="158" height="15" fill="rgb(248,9,19)"/><text x="813.00" y="254.50">onnxruntime::python:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="966" y="260" width="2" height="15" fill="rgb(229,6,12)"/><text x="969.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="966" y="276" width="2" height="15" fill="rgb(250,35,12)"/><text x="969.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="966" y="292" width="2" height="15" fill="rgb(229,129,16)"/><text x="969.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="966" y="308" width="2" height="15" fill="rgb(206,123,51)"/><text x="969.00" y="318.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="968" y="340" width="1" height="15" fill="rgb(207,58,20)"/><text x="971.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="969" y="340" width="1" height="15" fill="rgb(240,123,15)"/><text x="972.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="969" y="356" width="1" height="15" fill="rgb(212,86,39)"/><text x="972.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="969" y="372" width="1" height="15" fill="rgb(249,161,8)"/><text x="972.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="969" y="388" width="1" height="15" fill="rgb(221,19,17)"/><text x="972.00" y="398.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.44%)</title><rect x="970" y="340" width="5" height="15" fill="rgb(207,227,34)"/><text x="973.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.76%)</title><rect x="975" y="372" width="21" height="15" fill="rgb(253,2,38)"/><text x="978.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="992" y="388" width="4" height="15" fill="rgb(245,221,19)"/><text x="995.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.87%)</title><rect x="975" y="340" width="22" height="15" fill="rgb(237,43,22)"/><text x="978.00" y="350.50">o..</text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.87%)</title><rect x="975" y="356" width="22" height="15" fill="rgb(232,180,25)"/><text x="978.00" y="366.50">o..</text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="996" y="372" width="1" height="15" fill="rgb(205,120,16)"/><text x="999.00" y="382.50"></text></g><g><title>0x7f821f1f7906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="996" y="388" width="1" height="15" fill="rgb(218,226,17)"/><text x="999.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="997" y="340" width="3" height="15" fill="rgb(253,218,19)"/><text x="1000.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="999" y="356" width="1" height="15" fill="rgb(232,165,43)"/><text x="1002.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="999" y="372" width="1" height="15" fill="rgb(210,19,27)"/><text x="1002.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="999" y="388" width="1" height="15" fill="rgb(229,220,21)"/><text x="1002.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="999" y="404" width="1" height="15" fill="rgb(219,124,35)"/><text x="1002.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="999" y="420" width="1" height="15" fill="rgb(228,44,24)"/><text x="1002.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="999" y="436" width="1" height="15" fill="rgb(221,51,8)"/><text x="1002.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="999" y="452" width="1" height="15" fill="rgb(210,37,2)"/><text x="1002.00" y="462.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1000" y="340" width="3" height="15" fill="rgb(215,89,19)"/><text x="1003.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1000" y="356" width="3" height="15" fill="rgb(253,70,46)"/><text x="1003.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1000" y="372" width="3" height="15" fill="rgb(211,86,53)"/><text x="1003.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1001" y="388" width="2" height="15" fill="rgb(250,173,33)"/><text x="1004.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1001" y="404" width="2" height="15" fill="rgb(223,192,18)"/><text x="1004.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1001" y="420" width="2" height="15" fill="rgb(219,142,54)"/><text x="1004.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1001" y="436" width="2" height="15" fill="rgb(233,58,44)"/><text x="1004.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1001" y="452" width="2" height="15" fill="rgb(211,15,30)"/><text x="1004.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1001" y="468" width="2" height="15" fill="rgb(236,180,20)"/><text x="1004.00" y="478.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.43%)</title><rect x="1003" y="340" width="16" height="15" fill="rgb(235,112,28)"/><text x="1006.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.43%)</title><rect x="1003" y="356" width="16" height="15" fill="rgb(209,60,17)"/><text x="1006.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.43%)</title><rect x="1003" y="372" width="16" height="15" fill="rgb(254,123,32)"/><text x="1006.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.88%)</title><rect x="1009" y="388" width="10" height="15" fill="rgb(250,93,19)"/><text x="1012.00" y="398.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1019" y="340" width="2" height="15" fill="rgb(240,161,32)"/><text x="1022.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1019" y="356" width="2" height="15" fill="rgb(223,156,31)"/><text x="1022.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1019" y="372" width="2" height="15" fill="rgb(214,197,41)"/><text x="1022.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1044" y="356" width="1" height="15" fill="rgb(214,33,2)"/><text x="1047.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 0.77%)</title><rect x="1113" y="388" width="9" height="15" fill="rgb(235,128,25)"/><text x="1116.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 0.77%)</title><rect x="1113" y="404" width="9" height="15" fill="rgb(225,78,40)"/><text x="1116.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (67 samples, 7.37%)</title><rect x="1045" y="356" width="87" height="15" fill="rgb(207,106,32)"/><text x="1048.00" y="366.50">onnxruntim..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 3.30%)</title><rect x="1093" y="372" width="39" height="15" fill="rgb(232,112,7)"/><text x="1096.00" y="382.50">std..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (8 samples, 0.88%)</title><rect x="1122" y="388" width="10" height="15" fill="rgb(214,100,41)"/><text x="1125.00" y="398.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.44%)</title><rect x="1132" y="356" width="6" height="15" fill="rgb(251,38,40)"/><text x="1135.00" y="366.50"></text></g><g><title>0x7f821f217dae (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1136" y="372" width="2" height="15" fill="rgb(220,181,50)"/><text x="1139.00" y="382.50"></text></g><g><title>0x7f820ecc47a0 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1143" y="372" width="1" height="15" fill="rgb(211,168,5)"/><text x="1146.00" y="382.50"></text></g><g><title>0x7f821f1f7991 (libc-2.29.so) (4 samples, 0.44%)</title><rect x="1144" y="372" width="5" height="15" fill="rgb(251,136,17)"/><text x="1147.00" y="382.50"></text></g><g><title>0x7f821f1f7998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1149" y="372" width="2" height="15" fill="rgb(218,145,10)"/><text x="1152.00" y="382.50"></text></g><g><title>0x7f821f1f7a53 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1151" y="372" width="1" height="15" fill="rgb(220,160,9)"/><text x="1154.00" y="382.50"></text></g><g><title>0x7f821f1f7bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1152" y="372" width="1" height="15" fill="rgb(241,91,9)"/><text x="1155.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1153" y="372" width="3" height="15" fill="rgb(252,72,15)"/><text x="1156.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="1156" y="372" width="2" height="15" fill="rgb(251,128,36)"/><text x="1159.00" y="382.50"></text></g><g><title>0x7f821f1f7902 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1169" y="388" width="1" height="15" fill="rgb(224,89,35)"/><text x="1172.00" y="398.50"></text></g><g><title>0x7f821f1f7929 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1170" y="388" width="1" height="15" fill="rgb(241,46,32)"/><text x="1173.00" y="398.50"></text></g><g><title>0x7f821f1f7965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1171" y="388" width="2" height="15" fill="rgb(230,189,9)"/><text x="1174.00" y="398.50"></text></g><g><title>0x7f821f1f7991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1173" y="388" width="1" height="15" fill="rgb(223,179,32)"/><text x="1176.00" y="398.50"></text></g><g><title>0x7f821f1f7998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1174" y="388" width="1" height="15" fill="rgb(222,8,5)"/><text x="1177.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 3.30%)</title><rect x="1138" y="356" width="39" height="15" fill="rgb(247,169,25)"/><text x="1141.00" y="366.50">std..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.54%)</title><rect x="1158" y="372" width="19" height="15" fill="rgb(246,144,29)"/><text x="1161.00" y="382.50"></text></g><g><title>0x7f821f1f7a4d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1175" y="388" width="2" height="15" fill="rgb(237,60,16)"/><text x="1178.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (166 samples, 18.26%)</title><rect x="968" y="260" width="215" height="15" fill="rgb(205,214,18)"/><text x="971.00" y="270.50">onnxruntime::InferenceSessio..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (166 samples, 18.26%)</title><rect x="968" y="276" width="215" height="15" fill="rgb(251,187,12)"/><text x="971.00" y="286.50">onnxruntime::InferenceSessio..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (166 samples, 18.26%)</title><rect x="968" y="292" width="215" height="15" fill="rgb(208,44,31)"/><text x="971.00" y="302.50">onnxruntime::utils::ExecuteG..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (166 samples, 18.26%)</title><rect x="968" y="308" width="215" height="15" fill="rgb(232,135,3)"/><text x="971.00" y="318.50">onnxruntime::utils::ExecuteG..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (166 samples, 18.26%)</title><rect x="968" y="324" width="215" height="15" fill="rgb(216,162,5)"/><text x="971.00" y="334.50">onnxruntime::SequentialExecu..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (125 samples, 13.75%)</title><rect x="1021" y="340" width="162" height="15" fill="rgb(213,167,53)"/><text x="1024.00" y="350.50">onnxruntime::ml::Tre..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (5 samples, 0.55%)</title><rect x="1177" y="356" width="6" height="15" fill="rgb(248,161,43)"/><text x="1180.00" y="366.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1183" y="260" width="1" height="15" fill="rgb(232,203,18)"/><text x="1186.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.11%)</title><rect x="1183" y="276" width="1" height="15" fill="rgb(208,3,23)"/><text x="1186.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="1183" y="292" width="1" height="15" fill="rgb(245,184,24)"/><text x="1186.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="1183" y="308" width="1" height="15" fill="rgb(235,209,5)"/><text x="1186.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="1183" y="324" width="1" height="15" fill="rgb(209,113,44)"/><text x="1186.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:230) (1 samples, 0.11%)</title><rect x="1183" y="340" width="1" height="15" fill="rgb(222,163,32)"/><text x="1186.00" y="350.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="1184" y="260" width="4" height="15" fill="rgb(239,99,28)"/><text x="1187.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1187" y="276" width="1" height="15" fill="rgb(250,228,52)"/><text x="1190.00" y="286.50"></text></g><g><title>all (909 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(219,171,42)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:52) (297 samples, 32.67%)</title><rect x="804" y="52" width="386" height="15" fill="rgb(232,141,11)"/><text x="807.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:51) (297 samples, 32.67%)</title><rect x="804" y="68" width="386" height="15" fill="rgb(246,196,30)"/><text x="807.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_m_cl_1..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:29) (295 samples, 32.45%)</title><rect x="807" y="84" width="383" height="15" fill="rgb(205,19,46)"/><text x="810.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:23) (171 samples, 18.81%)</title><rect x="968" y="100" width="222" height="15" fill="rgb(218,222,4)"/><text x="971.00" y="110.50">profile (bench_AdaBoostClassi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (171 samples, 18.81%)</title><rect x="968" y="116" width="222" height="15" fill="rgb(233,29,24)"/><text x="971.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (171 samples, 18.81%)</title><rect x="968" y="132" width="222" height="15" fill="rgb(218,99,29)"/><text x="971.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (171 samples, 18.81%)</title><rect x="968" y="148" width="222" height="15" fill="rgb(242,78,34)"/><text x="971.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (171 samples, 18.81%)</title><rect x="968" y="164" width="222" height="15" fill="rgb(237,219,3)"/><text x="971.00" y="174.50">_run_whole_runtime (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (171 samples, 18.81%)</title><rect x="968" y="180" width="222" height="15" fill="rgb(226,46,48)"/><text x="971.00" y="190.50">run (mlprodict/onnxrt/ops_who..</text></g><g><title>run (onnxruntime/capi/session.py:136) (171 samples, 18.81%)</title><rect x="968" y="196" width="222" height="15" fill="rgb(212,187,33)"/><text x="971.00" y="206.50">run (onnxruntime/capi/session..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (171 samples, 18.81%)</title><rect x="968" y="212" width="222" height="15" fill="rgb(214,157,36)"/><text x="971.00" y="222.50">pybind11::cpp_function::dispa..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (171 samples, 18.81%)</title><rect x="968" y="228" width="222" height="15" fill="rgb(219,144,44)"/><text x="971.00" y="238.50">void pybind11::cpp_function::..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (171 samples, 18.81%)</title><rect x="968" y="244" width="222" height="15" fill="rgb(206,215,21)"/><text x="971.00" y="254.50">onnxruntime::python::addObjec..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(228,137,29)"/><text x="1191.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(239,35,47)"/><text x="1191.00" y="286.50"></text></g><g><title>0x7f821f1f7d07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(224,173,13)"/><text x="1191.00" y="302.50"></text></g></g></svg>