<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2070" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2053.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2053.00"> </text><g id="frames"><g><title>load_data (sklearn/datasets/_base.py:233) (1 samples, 0.11%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(227,157,40)"/><text x="13.00" y="158.50"></text></g><g><title>__init__ (codecs.py:310) (1 samples, 0.11%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(210,52,9)"/><text x="13.00" y="174.50"></text></g><g><title>__init__ (codecs.py:268) (1 samples, 0.11%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(213,7,5)"/><text x="13.00" y="190.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (2 samples, 0.22%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(239,24,16)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (2 samples, 0.22%)</title><rect x="10" y="116" width="2" height="15" fill="rgb(227,168,54)"/><text x="13.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:384) (2 samples, 0.22%)</title><rect x="10" y="132" width="2" height="15" fill="rgb(250,2,35)"/><text x="13.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py:235) (1 samples, 0.11%)</title><rect x="11" y="148" width="1" height="15" fill="rgb(250,123,26)"/><text x="14.00" y="158.50"></text></g><g><title>Reader_iternext (_csv.c:792) (1 samples, 0.11%)</title><rect x="11" y="164" width="1" height="15" fill="rgb(218,104,33)"/><text x="14.00" y="174.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:505) (1 samples, 0.11%)</title><rect x="12" y="164" width="1" height="15" fill="rgb(208,38,47)"/><text x="15.00" y="174.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (1 samples, 0.11%)</title><rect x="12" y="180" width="1" height="15" fill="rgb(240,22,6)"/><text x="15.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:72) (1 samples, 0.11%)</title><rect x="12" y="196" width="1" height="15" fill="rgb(245,9,18)"/><text x="15.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.11%)</title><rect x="12" y="212" width="1" height="15" fill="rgb(212,95,17)"/><text x="15.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.11%)</title><rect x="12" y="228" width="1" height="15" fill="rgb(209,163,19)"/><text x="15.00" y="238.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.11%)</title><rect x="12" y="244" width="1" height="15" fill="rgb(239,16,11)"/><text x="15.00" y="254.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.11%)</title><rect x="12" y="260" width="1" height="15" fill="rgb(207,79,39)"/><text x="15.00" y="270.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.11%)</title><rect x="12" y="276" width="1" height="15" fill="rgb(243,186,5)"/><text x="15.00" y="286.50"></text></g><g><title>_signature_from_function (inspect.py:2161) (1 samples, 0.11%)</title><rect x="12" y="292" width="1" height="15" fill="rgb(208,161,53)"/><text x="15.00" y="302.50"></text></g><g><title>__init__ (inspect.py:2469) (1 samples, 0.11%)</title><rect x="12" y="308" width="1" height="15" fill="rgb(214,129,52)"/><text x="15.00" y="318.50"></text></g><g><title>__call__ (enum.py:309) (1 samples, 0.11%)</title><rect x="12" y="324" width="1" height="15" fill="rgb(233,218,2)"/><text x="15.00" y="334.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:31) (4 samples, 0.45%)</title><rect x="10" y="52" width="5" height="15" fill="rgb(205,207,13)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:11) (4 samples, 0.45%)</title><rect x="10" y="68" width="5" height="15" fill="rgb(225,60,17)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:39) (4 samples, 0.45%)</title><rect x="10" y="84" width="5" height="15" fill="rgb(221,226,24)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.22%)</title><rect x="12" y="100" width="3" height="15" fill="rgb(246,30,25)"/><text x="15.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (2 samples, 0.22%)</title><rect x="12" y="116" width="3" height="15" fill="rgb(247,101,22)"/><text x="15.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (2 samples, 0.22%)</title><rect x="12" y="132" width="3" height="15" fill="rgb(236,139,23)"/><text x="15.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (2 samples, 0.22%)</title><rect x="12" y="148" width="3" height="15" fill="rgb(246,123,45)"/><text x="15.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (1 samples, 0.11%)</title><rect x="13" y="164" width="2" height="15" fill="rgb(249,168,32)"/><text x="16.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (1 samples, 0.11%)</title><rect x="13" y="180" width="2" height="15" fill="rgb(251,8,20)"/><text x="16.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (1 samples, 0.11%)</title><rect x="13" y="196" width="2" height="15" fill="rgb(222,130,2)"/><text x="16.00" y="206.50"></text></g><g><title>0x7f4687d67b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="13" y="212" width="2" height="15" fill="rgb(211,89,38)"/><text x="16.00" y="222.50"></text></g><g><title>0x7f4687d98ee8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="13" y="228" width="2" height="15" fill="rgb(229,209,33)"/><text x="16.00" y="238.50"></text></g><g><title>0x7f4687fc9100 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="13" y="244" width="2" height="15" fill="rgb(245,184,51)"/><text x="16.00" y="254.50"></text></g><g><title>0x7f4687fd2a47 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="13" y="260" width="2" height="15" fill="rgb(238,137,12)"/><text x="16.00" y="270.50"></text></g><g><title>randint (mtrand.c:6007) (1 samples, 0.11%)</title><rect x="13" y="276" width="2" height="15" fill="rgb(237,24,6)"/><text x="16.00" y="286.50"></text></g><g><title>randint (mtrand.c:6250) (1 samples, 0.11%)</title><rect x="13" y="292" width="2" height="15" fill="rgb(211,31,9)"/><text x="16.00" y="302.50"></text></g><g><title>bounded_integers__rand_int64 (bounded_integers.c:16737) (1 samples, 0.11%)</title><rect x="13" y="308" width="2" height="15" fill="rgb(213,102,47)"/><text x="16.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (bounded_integers.c:23895) (1 samples, 0.11%)</title><rect x="13" y="324" width="2" height="15" fill="rgb(249,109,13)"/><text x="16.00" y="334.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.11%)</title><rect x="13" y="340" width="2" height="15" fill="rgb(213,197,23)"/><text x="16.00" y="350.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:28) (1 samples, 0.11%)</title><rect x="15" y="84" width="1" height="15" fill="rgb(233,114,48)"/><text x="18.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.11%)</title><rect x="15" y="100" width="1" height="15" fill="rgb(228,158,27)"/><text x="18.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.11%)</title><rect x="15" y="116" width="1" height="15" fill="rgb(236,77,13)"/><text x="18.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.11%)</title><rect x="15" y="132" width="1" height="15" fill="rgb(243,18,46)"/><text x="18.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.11%)</title><rect x="15" y="148" width="1" height="15" fill="rgb(230,157,3)"/><text x="18.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.11%)</title><rect x="15" y="164" width="1" height="15" fill="rgb(236,208,5)"/><text x="18.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.11%)</title><rect x="15" y="180" width="1" height="15" fill="rgb(248,129,26)"/><text x="18.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (1 samples, 0.11%)</title><rect x="15" y="196" width="1" height="15" fill="rgb(240,104,20)"/><text x="18.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="17" y="212" width="2" height="15" fill="rgb(252,149,46)"/><text x="20.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="17" y="228" width="2" height="15" fill="rgb(209,69,3)"/><text x="20.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="17" y="244" width="2" height="15" fill="rgb(215,172,12)"/><text x="20.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.22%)</title><rect x="19" y="228" width="2" height="15" fill="rgb(209,220,1)"/><text x="22.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.11%)</title><rect x="20" y="244" width="1" height="15" fill="rgb(244,154,36)"/><text x="23.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.11%)</title><rect x="21" y="244" width="2" height="15" fill="rgb(246,95,42)"/><text x="24.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (4 samples, 0.45%)</title><rect x="19" y="212" width="5" height="15" fill="rgb(222,149,0)"/><text x="22.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.22%)</title><rect x="21" y="228" width="3" height="15" fill="rgb(218,76,5)"/><text x="24.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.11%)</title><rect x="23" y="244" width="1" height="15" fill="rgb(249,186,34)"/><text x="26.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.11%)</title><rect x="24" y="244" width="1" height="15" fill="rgb(232,7,42)"/><text x="27.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.11%)</title><rect x="25" y="244" width="2" height="15" fill="rgb(235,203,11)"/><text x="28.00" y="254.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.11%)</title><rect x="25" y="260" width="2" height="15" fill="rgb(223,155,15)"/><text x="28.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.11%)</title><rect x="27" y="244" width="1" height="15" fill="rgb(223,191,30)"/><text x="30.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.11%)</title><rect x="27" y="260" width="1" height="15" fill="rgb(206,133,51)"/><text x="30.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.11%)</title><rect x="27" y="276" width="1" height="15" fill="rgb(222,38,3)"/><text x="30.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.22%)</title><rect x="28" y="244" width="3" height="15" fill="rgb(208,70,22)"/><text x="31.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.22%)</title><rect x="28" y="260" width="3" height="15" fill="rgb(238,172,52)"/><text x="31.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.22%)</title><rect x="28" y="276" width="3" height="15" fill="rgb(243,192,6)"/><text x="31.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="29" y="292" width="2" height="15" fill="rgb(239,154,17)"/><text x="32.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.11%)</title><rect x="31" y="244" width="1" height="15" fill="rgb(241,60,34)"/><text x="34.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.11%)</title><rect x="31" y="260" width="1" height="15" fill="rgb(227,53,35)"/><text x="34.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.11%)</title><rect x="32" y="244" width="1" height="15" fill="rgb(207,188,26)"/><text x="35.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.11%)</title><rect x="33" y="260" width="2" height="15" fill="rgb(213,0,50)"/><text x="36.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (9 samples, 1.01%)</title><rect x="24" y="212" width="12" height="15" fill="rgb(206,159,8)"/><text x="27.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (9 samples, 1.01%)</title><rect x="24" y="228" width="12" height="15" fill="rgb(231,25,2)"/><text x="27.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.22%)</title><rect x="33" y="244" width="3" height="15" fill="rgb(208,80,25)"/><text x="36.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.11%)</title><rect x="35" y="260" width="1" height="15" fill="rgb(211,125,23)"/><text x="38.00" y="270.50"></text></g><g><title>0x7f4687d812df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="36" y="276" width="1" height="15" fill="rgb(238,98,27)"/><text x="39.00" y="286.50"></text></g><g><title>0x7f4687d65d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="36" y="292" width="1" height="15" fill="rgb(236,25,51)"/><text x="39.00" y="302.50"></text></g><g><title>0x7f4687d65666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="36" y="308" width="1" height="15" fill="rgb(231,131,49)"/><text x="39.00" y="318.50"></text></g><g><title>0x7f4687d5b2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="36" y="324" width="1" height="15" fill="rgb(228,95,4)"/><text x="39.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="36" y="340" width="1" height="15" fill="rgb(226,177,45)"/><text x="39.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:669) (1 samples, 0.11%)</title><rect x="36" y="356" width="1" height="15" fill="rgb(205,97,50)"/><text x="39.00" y="366.50"></text></g><g><title>0x7f4687d8154f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="37" y="276" width="2" height="15" fill="rgb(231,37,8)"/><text x="40.00" y="286.50"></text></g><g><title>0x7f4687d816aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="39" y="276" width="1" height="15" fill="rgb(239,222,46)"/><text x="42.00" y="286.50"></text></g><g><title>0x7f4687d816cf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="40" y="276" width="1" height="15" fill="rgb(248,130,17)"/><text x="43.00" y="286.50"></text></g><g><title>0x7f4687d816e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="41" y="276" width="2" height="15" fill="rgb(205,206,22)"/><text x="44.00" y="286.50"></text></g><g><title>0x7f4687d817b0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="43" y="276" width="1" height="15" fill="rgb(238,27,2)"/><text x="46.00" y="286.50"></text></g><g><title>0x7f4687d72fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.78%)</title><rect x="36" y="244" width="9" height="15" fill="rgb(210,130,16)"/><text x="39.00" y="254.50"></text></g><g><title>0x7f4687d82405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.78%)</title><rect x="36" y="260" width="9" height="15" fill="rgb(247,226,8)"/><text x="39.00" y="270.50"></text></g><g><title>0x7f4687d81c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="44" y="276" width="1" height="15" fill="rgb(236,191,48)"/><text x="47.00" y="286.50"></text></g><g><title>0x7f4687d59529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="44" y="292" width="1" height="15" fill="rgb(243,8,46)"/><text x="47.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="44" y="308" width="1" height="15" fill="rgb(227,132,41)"/><text x="47.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.11%)</title><rect x="44" y="324" width="1" height="15" fill="rgb(218,136,15)"/><text x="47.00" y="334.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.11%)</title><rect x="44" y="340" width="1" height="15" fill="rgb(254,212,23)"/><text x="47.00" y="350.50"></text></g><g><title>_buffer_format_string (buffer.c:406) (1 samples, 0.11%)</title><rect x="44" y="356" width="1" height="15" fill="rgb(243,124,27)"/><text x="47.00" y="366.50"></text></g><g><title>0x7f4687d7305a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="45" y="244" width="3" height="15" fill="rgb(217,46,7)"/><text x="48.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.22%)</title><rect x="45" y="260" width="3" height="15" fill="rgb(242,218,34)"/><text x="48.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.22%)</title><rect x="45" y="276" width="3" height="15" fill="rgb(218,53,4)"/><text x="48.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (2 samples, 0.22%)</title><rect x="45" y="292" width="3" height="15" fill="rgb(254,13,20)"/><text x="48.00" y="302.50"></text></g><g><title>0x7f4687d7313a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="48" y="244" width="1" height="15" fill="rgb(247,91,42)"/><text x="51.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="48" y="260" width="1" height="15" fill="rgb(223,17,30)"/><text x="51.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.11%)</title><rect x="48" y="276" width="1" height="15" fill="rgb(230,138,21)"/><text x="51.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (11 samples, 1.23%)</title><rect x="36" y="212" width="15" height="15" fill="rgb(252,47,48)"/><text x="39.00" y="222.50"></text></g><g><title>0x7f4687d73d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.23%)</title><rect x="36" y="228" width="15" height="15" fill="rgb(232,199,17)"/><text x="39.00" y="238.50"></text></g><g><title>0x7f4687d731bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="49" y="244" width="2" height="15" fill="rgb(220,147,45)"/><text x="52.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.22%)</title><rect x="51" y="212" width="2" height="15" fill="rgb(227,136,44)"/><text x="54.00" y="222.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.11%)</title><rect x="56" y="292" width="1" height="15" fill="rgb(246,202,9)"/><text x="59.00" y="302.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:809) (1 samples, 0.11%)</title><rect x="56" y="308" width="1" height="15" fill="rgb(221,22,15)"/><text x="59.00" y="318.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.11%)</title><rect x="57" y="372" width="1" height="15" fill="rgb(220,114,25)"/><text x="60.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.11%)</title><rect x="57" y="388" width="1" height="15" fill="rgb(253,16,28)"/><text x="60.00" y="398.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.11%)</title><rect x="57" y="404" width="1" height="15" fill="rgb(227,2,48)"/><text x="60.00" y="414.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.11%)</title><rect x="57" y="420" width="1" height="15" fill="rgb(205,108,48)"/><text x="60.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.22%)</title><rect x="57" y="324" width="3" height="15" fill="rgb(222,43,1)"/><text x="60.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.22%)</title><rect x="57" y="340" width="3" height="15" fill="rgb(215,12,46)"/><text x="60.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (2 samples, 0.22%)</title><rect x="57" y="356" width="3" height="15" fill="rgb(210,228,31)"/><text x="60.00" y="366.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3813) (1 samples, 0.11%)</title><rect x="58" y="372" width="2" height="15" fill="rgb(242,166,21)"/><text x="61.00" y="382.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.11%)</title><rect x="58" y="388" width="2" height="15" fill="rgb(222,163,12)"/><text x="61.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:451) (1 samples, 0.11%)</title><rect x="60" y="340" width="1" height="15" fill="rgb(234,160,36)"/><text x="63.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.22%)</title><rect x="60" y="324" width="2" height="15" fill="rgb(210,163,1)"/><text x="63.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.11%)</title><rect x="61" y="340" width="1" height="15" fill="rgb(215,131,6)"/><text x="64.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2264) (1 samples, 0.11%)</title><rect x="61" y="356" width="1" height="15" fill="rgb(247,160,4)"/><text x="64.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.11%)</title><rect x="62" y="340" width="2" height="15" fill="rgb(241,40,9)"/><text x="65.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.11%)</title><rect x="65" y="372" width="1" height="15" fill="rgb(240,30,13)"/><text x="68.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (11 samples, 1.23%)</title><rect x="53" y="212" width="15" height="15" fill="rgb(225,217,4)"/><text x="56.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (10 samples, 1.12%)</title><rect x="54" y="228" width="14" height="15" fill="rgb(243,42,54)"/><text x="57.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 1.12%)</title><rect x="54" y="244" width="14" height="15" fill="rgb(224,14,39)"/><text x="57.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (9 samples, 1.01%)</title><rect x="56" y="260" width="12" height="15" fill="rgb(222,42,26)"/><text x="59.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 1.01%)</title><rect x="56" y="276" width="12" height="15" fill="rgb(242,134,54)"/><text x="59.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 0.90%)</title><rect x="57" y="292" width="11" height="15" fill="rgb(237,119,44)"/><text x="60.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 0.90%)</title><rect x="57" y="308" width="11" height="15" fill="rgb(242,43,29)"/><text x="60.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (4 samples, 0.45%)</title><rect x="62" y="324" width="6" height="15" fill="rgb(247,221,34)"/><text x="65.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (3 samples, 0.34%)</title><rect x="64" y="340" width="4" height="15" fill="rgb(236,61,7)"/><text x="67.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.34%)</title><rect x="64" y="356" width="4" height="15" fill="rgb(239,198,22)"/><text x="67.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="66" y="372" width="2" height="15" fill="rgb(225,70,47)"/><text x="69.00" y="382.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.11%)</title><rect x="68" y="228" width="1" height="15" fill="rgb(250,225,44)"/><text x="71.00" y="238.50"></text></g><g><title>binop_should_defer (binop_override.h:146) (1 samples, 0.11%)</title><rect x="68" y="244" width="1" height="15" fill="rgb(219,6,8)"/><text x="71.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="69" y="244" width="1" height="15" fill="rgb(237,210,23)"/><text x="72.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="69" y="260" width="1" height="15" fill="rgb(225,53,16)"/><text x="72.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="69" y="276" width="1" height="15" fill="rgb(246,73,17)"/><text x="72.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.11%)</title><rect x="69" y="292" width="1" height="15" fill="rgb(238,16,46)"/><text x="72.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.11%)</title><rect x="69" y="308" width="1" height="15" fill="rgb(224,88,16)"/><text x="72.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.11%)</title><rect x="69" y="324" width="1" height="15" fill="rgb(214,152,0)"/><text x="72.00" y="334.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:71) (1 samples, 0.11%)</title><rect x="69" y="340" width="1" height="15" fill="rgb(223,78,3)"/><text x="72.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (3 samples, 0.34%)</title><rect x="68" y="212" width="4" height="15" fill="rgb(205,157,5)"/><text x="71.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.22%)</title><rect x="69" y="228" width="3" height="15" fill="rgb(222,199,0)"/><text x="72.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="70" y="244" width="2" height="15" fill="rgb(225,79,32)"/><text x="73.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="70" y="260" width="2" height="15" fill="rgb(235,151,15)"/><text x="73.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="70" y="276" width="2" height="15" fill="rgb(238,130,2)"/><text x="73.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="70" y="292" width="2" height="15" fill="rgb(224,52,34)"/><text x="73.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="72" y="276" width="1" height="15" fill="rgb(232,66,3)"/><text x="75.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="72" y="292" width="1" height="15" fill="rgb(237,37,46)"/><text x="75.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.11%)</title><rect x="72" y="308" width="1" height="15" fill="rgb(214,116,47)"/><text x="75.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2034) (1 samples, 0.11%)</title><rect x="73" y="308" width="1" height="15" fill="rgb(233,113,41)"/><text x="76.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="74" y="324" width="2" height="15" fill="rgb(215,163,0)"/><text x="77.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.11%)</title><rect x="76" y="324" width="1" height="15" fill="rgb(246,161,38)"/><text x="79.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="77" y="340" width="1" height="15" fill="rgb(252,113,21)"/><text x="80.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.56%)</title><rect x="73" y="276" width="7" height="15" fill="rgb(218,165,25)"/><text x="76.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.56%)</title><rect x="73" y="292" width="7" height="15" fill="rgb(219,34,30)"/><text x="76.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.45%)</title><rect x="74" y="308" width="6" height="15" fill="rgb(216,146,4)"/><text x="77.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.22%)</title><rect x="77" y="324" width="3" height="15" fill="rgb(237,22,49)"/><text x="80.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.11%)</title><rect x="78" y="340" width="2" height="15" fill="rgb(243,220,52)"/><text x="81.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (51 samples, 5.72%)</title><rect x="16" y="196" width="68" height="15" fill="rgb(218,79,9)"/><text x="19.00" y="206.50">_samme_..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (9 samples, 1.01%)</title><rect x="72" y="212" width="12" height="15" fill="rgb(222,82,34)"/><text x="75.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.01%)</title><rect x="72" y="228" width="12" height="15" fill="rgb(247,207,9)"/><text x="75.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 1.01%)</title><rect x="72" y="244" width="12" height="15" fill="rgb(224,193,1)"/><text x="75.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (9 samples, 1.01%)</title><rect x="72" y="260" width="12" height="15" fill="rgb(207,69,32)"/><text x="75.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.34%)</title><rect x="80" y="276" width="4" height="15" fill="rgb(234,16,46)"/><text x="83.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (3 samples, 0.34%)</title><rect x="80" y="292" width="4" height="15" fill="rgb(212,54,40)"/><text x="83.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (3 samples, 0.34%)</title><rect x="80" y="308" width="4" height="15" fill="rgb(246,225,11)"/><text x="83.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (3 samples, 0.34%)</title><rect x="80" y="324" width="4" height="15" fill="rgb(242,228,17)"/><text x="83.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 0.34%)</title><rect x="80" y="340" width="4" height="15" fill="rgb(235,206,22)"/><text x="83.00" y="350.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.11%)</title><rect x="85" y="212" width="1" height="15" fill="rgb(240,133,34)"/><text x="88.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.22%)</title><rect x="86" y="228" width="3" height="15" fill="rgb(251,24,52)"/><text x="89.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.22%)</title><rect x="86" y="244" width="3" height="15" fill="rgb(241,37,36)"/><text x="89.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.22%)</title><rect x="86" y="260" width="3" height="15" fill="rgb(236,59,14)"/><text x="89.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.22%)</title><rect x="86" y="276" width="3" height="15" fill="rgb(223,71,41)"/><text x="89.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.22%)</title><rect x="86" y="292" width="3" height="15" fill="rgb(224,44,9)"/><text x="89.00" y="302.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.34%)</title><rect x="90" y="324" width="4" height="15" fill="rgb(247,156,40)"/><text x="93.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="93" y="340" width="1" height="15" fill="rgb(213,16,17)"/><text x="96.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.45%)</title><rect x="90" y="308" width="5" height="15" fill="rgb(225,59,44)"/><text x="93.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.11%)</title><rect x="94" y="324" width="1" height="15" fill="rgb(209,12,51)"/><text x="97.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="95" y="324" width="2" height="15" fill="rgb(207,19,2)"/><text x="98.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="95" y="340" width="2" height="15" fill="rgb(224,91,54)"/><text x="98.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (2 samples, 0.22%)</title><rect x="95" y="308" width="3" height="15" fill="rgb(205,185,26)"/><text x="98.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.11%)</title><rect x="97" y="324" width="1" height="15" fill="rgb(234,190,2)"/><text x="100.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="97" y="340" width="1" height="15" fill="rgb(209,217,53)"/><text x="100.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.11%)</title><rect x="97" y="356" width="1" height="15" fill="rgb(228,152,48)"/><text x="100.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="99" y="340" width="2" height="15" fill="rgb(215,202,17)"/><text x="102.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="99" y="356" width="2" height="15" fill="rgb(214,175,43)"/><text x="102.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="99" y="372" width="2" height="15" fill="rgb(244,201,45)"/><text x="102.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="99" y="388" width="2" height="15" fill="rgb(249,217,22)"/><text x="102.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="99" y="404" width="2" height="15" fill="rgb(234,119,14)"/><text x="102.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="99" y="420" width="2" height="15" fill="rgb(250,30,3)"/><text x="102.00" y="430.50"></text></g><g><title>0x7f46ae40dfa8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="99" y="436" width="2" height="15" fill="rgb(243,78,38)"/><text x="102.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="101" y="356" width="1" height="15" fill="rgb(208,69,12)"/><text x="104.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.11%)</title><rect x="101" y="372" width="1" height="15" fill="rgb(235,119,1)"/><text x="104.00" y="382.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:601) (1 samples, 0.11%)</title><rect x="102" y="420" width="1" height="15" fill="rgb(220,28,12)"/><text x="105.00" y="430.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (2 samples, 0.22%)</title><rect x="102" y="404" width="3" height="15" fill="rgb(206,202,11)"/><text x="105.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.11%)</title><rect x="103" y="420" width="2" height="15" fill="rgb(241,44,6)"/><text x="106.00" y="430.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.11%)</title><rect x="103" y="436" width="2" height="15" fill="rgb(216,180,31)"/><text x="106.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (3 samples, 0.34%)</title><rect x="102" y="372" width="4" height="15" fill="rgb(245,141,26)"/><text x="105.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 0.34%)</title><rect x="102" y="388" width="4" height="15" fill="rgb(210,49,34)"/><text x="105.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.11%)</title><rect x="105" y="404" width="1" height="15" fill="rgb(248,161,34)"/><text x="108.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.11%)</title><rect x="105" y="420" width="1" height="15" fill="rgb(206,130,9)"/><text x="108.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:454) (1 samples, 0.11%)</title><rect x="105" y="436" width="1" height="15" fill="rgb(215,41,49)"/><text x="108.00" y="446.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:399) (1 samples, 0.11%)</title><rect x="105" y="452" width="1" height="15" fill="rgb(205,182,27)"/><text x="108.00" y="462.50"></text></g><g><title>sub_128 (npy_extint128.h:185) (1 samples, 0.11%)</title><rect x="105" y="468" width="1" height="15" fill="rgb(218,22,48)"/><text x="108.00" y="478.50"></text></g><g><title>add_128 (npy_extint128.h:155) (1 samples, 0.11%)</title><rect x="105" y="484" width="1" height="15" fill="rgb(212,78,16)"/><text x="108.00" y="494.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.11%)</title><rect x="106" y="388" width="1" height="15" fill="rgb(207,159,2)"/><text x="109.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.90%)</title><rect x="102" y="356" width="11" height="15" fill="rgb(237,11,5)"/><text x="105.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (5 samples, 0.56%)</title><rect x="106" y="372" width="7" height="15" fill="rgb(241,153,10)"/><text x="109.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (4 samples, 0.45%)</title><rect x="107" y="388" width="6" height="15" fill="rgb(211,196,31)"/><text x="110.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (4 samples, 0.45%)</title><rect x="107" y="404" width="6" height="15" fill="rgb(223,115,5)"/><text x="110.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (23 samples, 2.58%)</title><rect x="84" y="196" width="30" height="15" fill="rgb(225,15,45)"/><text x="87.00" y="206.50">_s..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (21 samples, 2.35%)</title><rect x="86" y="212" width="28" height="15" fill="rgb(245,93,13)"/><text x="89.00" y="222.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (19 samples, 2.13%)</title><rect x="89" y="228" width="25" height="15" fill="rgb(226,184,34)"/><text x="92.00" y="238.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (19 samples, 2.13%)</title><rect x="89" y="244" width="25" height="15" fill="rgb(205,189,38)"/><text x="92.00" y="254.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (18 samples, 2.02%)</title><rect x="90" y="260" width="24" height="15" fill="rgb(223,81,1)"/><text x="93.00" y="270.50">_..</text></g><g><title>array_clip (methods.c:2381) (18 samples, 2.02%)</title><rect x="90" y="276" width="24" height="15" fill="rgb(210,52,37)"/><text x="93.00" y="286.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (18 samples, 2.02%)</title><rect x="90" y="292" width="24" height="15" fill="rgb(207,104,43)"/><text x="93.00" y="302.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:129) (12 samples, 1.35%)</title><rect x="98" y="308" width="16" height="15" fill="rgb(229,35,19)"/><text x="101.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (11 samples, 1.23%)</title><rect x="99" y="324" width="15" height="15" fill="rgb(249,47,47)"/><text x="102.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.12%)</title><rect x="101" y="340" width="13" height="15" fill="rgb(238,226,31)"/><text x="104.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.11%)</title><rect x="113" y="356" width="1" height="15" fill="rgb(220,183,31)"/><text x="116.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="114" y="212" width="1" height="15" fill="rgb(218,71,45)"/><text x="117.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="114" y="228" width="1" height="15" fill="rgb(221,81,28)"/><text x="117.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="114" y="244" width="1" height="15" fill="rgb(212,22,52)"/><text x="117.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.11%)</title><rect x="114" y="260" width="1" height="15" fill="rgb(219,63,52)"/><text x="117.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.11%)</title><rect x="115" y="276" width="2" height="15" fill="rgb(210,186,50)"/><text x="118.00" y="286.50"></text></g><g><title>0x7f46ae501e4d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="118" y="292" width="1" height="15" fill="rgb(228,212,15)"/><text x="121.00" y="302.50"></text></g><g><title>0x7f46ae501e61 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="119" y="292" width="2" height="15" fill="rgb(226,40,32)"/><text x="122.00" y="302.50"></text></g><g><title>0x7f46ae501e8d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="121" y="292" width="1" height="15" fill="rgb(230,91,4)"/><text x="124.00" y="302.50"></text></g><g><title>0x7f46ae501e91 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="122" y="292" width="1" height="15" fill="rgb(252,186,16)"/><text x="125.00" y="302.50"></text></g><g><title>0x7f46ae501eb6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="123" y="292" width="2" height="15" fill="rgb(227,31,7)"/><text x="126.00" y="302.50"></text></g><g><title>0x7f46ae501eda (libm-2.29.so) (1 samples, 0.11%)</title><rect x="125" y="292" width="1" height="15" fill="rgb(235,190,48)"/><text x="128.00" y="302.50"></text></g><g><title>0x7f46ae501ef6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="126" y="292" width="1" height="15" fill="rgb(206,215,19)"/><text x="129.00" y="302.50"></text></g><g><title>0x7f46ae501efa (libm-2.29.so) (2 samples, 0.22%)</title><rect x="127" y="292" width="3" height="15" fill="rgb(210,154,18)"/><text x="130.00" y="302.50"></text></g><g><title>0x7f46ae501fb7 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="130" y="292" width="1" height="15" fill="rgb(217,66,52)"/><text x="133.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (14 samples, 1.57%)</title><rect x="114" y="196" width="19" height="15" fill="rgb(212,10,43)"/><text x="117.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 1.46%)</title><rect x="115" y="212" width="18" height="15" fill="rgb(231,115,19)"/><text x="118.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (13 samples, 1.46%)</title><rect x="115" y="228" width="18" height="15" fill="rgb(239,124,18)"/><text x="118.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (13 samples, 1.46%)</title><rect x="115" y="244" width="18" height="15" fill="rgb(248,126,29)"/><text x="118.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (13 samples, 1.46%)</title><rect x="115" y="260" width="18" height="15" fill="rgb(207,209,11)"/><text x="118.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (12 samples, 1.35%)</title><rect x="117" y="276" width="16" height="15" fill="rgb(210,220,38)"/><text x="120.00" y="286.50"></text></g><g><title>0x7f46ae501fd3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="131" y="292" width="2" height="15" fill="rgb(247,43,3)"/><text x="134.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="134" y="244" width="1" height="15" fill="rgb(223,8,28)"/><text x="137.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="134" y="260" width="1" height="15" fill="rgb(247,188,44)"/><text x="137.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.11%)</title><rect x="134" y="276" width="1" height="15" fill="rgb(209,169,18)"/><text x="137.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.11%)</title><rect x="134" y="292" width="1" height="15" fill="rgb(210,179,52)"/><text x="137.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (1 samples, 0.11%)</title><rect x="134" y="308" width="1" height="15" fill="rgb(241,128,48)"/><text x="137.00" y="318.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (1 samples, 0.11%)</title><rect x="134" y="324" width="1" height="15" fill="rgb(226,222,11)"/><text x="137.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.11%)</title><rect x="135" y="260" width="1" height="15" fill="rgb(218,64,2)"/><text x="138.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="135" y="276" width="1" height="15" fill="rgb(226,153,36)"/><text x="138.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="135" y="292" width="1" height="15" fill="rgb(212,202,37)"/><text x="138.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="135" y="308" width="1" height="15" fill="rgb(236,186,44)"/><text x="138.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.11%)</title><rect x="135" y="324" width="1" height="15" fill="rgb(212,70,37)"/><text x="138.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.11%)</title><rect x="136" y="276" width="2" height="15" fill="rgb(220,194,33)"/><text x="139.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="136" y="292" width="2" height="15" fill="rgb(235,203,16)"/><text x="139.00" y="302.50"></text></g><g><title>DOUBLE_multiply (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="138" y="292" width="1" height="15" fill="rgb(249,45,25)"/><text x="141.00" y="302.50"></text></g><g><title>array_multiply (number.c:354) (7 samples, 0.78%)</title><rect x="133" y="212" width="9" height="15" fill="rgb(214,71,54)"/><text x="136.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.67%)</title><rect x="134" y="228" width="8" height="15" fill="rgb(245,151,42)"/><text x="137.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.56%)</title><rect x="135" y="244" width="7" height="15" fill="rgb(241,15,31)"/><text x="138.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (4 samples, 0.45%)</title><rect x="136" y="260" width="6" height="15" fill="rgb(236,113,20)"/><text x="139.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (3 samples, 0.34%)</title><rect x="138" y="276" width="4" height="15" fill="rgb(235,113,29)"/><text x="141.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:698) (2 samples, 0.22%)</title><rect x="139" y="292" width="3" height="15" fill="rgb(240,53,41)"/><text x="142.00" y="302.50"></text></g><g><title>_mm_mul_pd (emmintrin.h:253) (2 samples, 0.22%)</title><rect x="139" y="308" width="3" height="15" fill="rgb(235,122,30)"/><text x="142.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.11%)</title><rect x="142" y="244" width="1" height="15" fill="rgb(222,199,46)"/><text x="145.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:296) (1 samples, 0.11%)</title><rect x="142" y="260" width="1" height="15" fill="rgb(216,85,1)"/><text x="145.00" y="270.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="143" y="340" width="1" height="15" fill="rgb(249,74,25)"/><text x="146.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (3 samples, 0.34%)</title><rect x="142" y="212" width="4" height="15" fill="rgb(242,144,41)"/><text x="145.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.34%)</title><rect x="142" y="228" width="4" height="15" fill="rgb(252,13,0)"/><text x="145.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="143" y="244" width="3" height="15" fill="rgb(236,27,29)"/><text x="146.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.22%)</title><rect x="143" y="260" width="3" height="15" fill="rgb(229,7,42)"/><text x="146.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.22%)</title><rect x="143" y="276" width="3" height="15" fill="rgb(220,141,35)"/><text x="146.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.22%)</title><rect x="143" y="292" width="3" height="15" fill="rgb(237,177,38)"/><text x="146.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.22%)</title><rect x="143" y="308" width="3" height="15" fill="rgb(207,4,25)"/><text x="146.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.22%)</title><rect x="143" y="324" width="3" height="15" fill="rgb(237,31,1)"/><text x="146.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.11%)</title><rect x="144" y="340" width="2" height="15" fill="rgb(244,27,6)"/><text x="147.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.11%)</title><rect x="146" y="260" width="1" height="15" fill="rgb(237,178,17)"/><text x="149.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="146" y="276" width="1" height="15" fill="rgb(209,21,47)"/><text x="149.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="146" y="292" width="1" height="15" fill="rgb(213,178,21)"/><text x="149.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="146" y="308" width="1" height="15" fill="rgb(230,67,38)"/><text x="149.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="146" y="324" width="1" height="15" fill="rgb(223,124,7)"/><text x="149.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.11%)</title><rect x="146" y="340" width="1" height="15" fill="rgb(241,71,41)"/><text x="149.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.11%)</title><rect x="147" y="276" width="1" height="15" fill="rgb(235,164,27)"/><text x="150.00" y="286.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.11%)</title><rect x="147" y="292" width="1" height="15" fill="rgb(242,20,41)"/><text x="150.00" y="302.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.11%)</title><rect x="147" y="308" width="1" height="15" fill="rgb(206,172,13)"/><text x="150.00" y="318.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:849) (1 samples, 0.11%)</title><rect x="147" y="324" width="1" height="15" fill="rgb(213,225,17)"/><text x="150.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.11%)</title><rect x="148" y="308" width="2" height="15" fill="rgb(208,5,46)"/><text x="151.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.11%)</title><rect x="148" y="324" width="2" height="15" fill="rgb(251,166,6)"/><text x="151.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2066) (1 samples, 0.11%)</title><rect x="148" y="340" width="2" height="15" fill="rgb(217,109,1)"/><text x="151.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (2 samples, 0.22%)</title><rect x="150" y="340" width="2" height="15" fill="rgb(254,86,30)"/><text x="153.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="152" y="356" width="2" height="15" fill="rgb(243,54,54)"/><text x="155.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (4 samples, 0.45%)</title><rect x="150" y="308" width="5" height="15" fill="rgb(242,29,46)"/><text x="153.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (4 samples, 0.45%)</title><rect x="150" y="324" width="5" height="15" fill="rgb(254,37,30)"/><text x="153.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.22%)</title><rect x="152" y="340" width="3" height="15" fill="rgb(227,198,18)"/><text x="155.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.11%)</title><rect x="154" y="356" width="1" height="15" fill="rgb(218,19,39)"/><text x="157.00" y="366.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (106 samples, 11.88%)</title><rect x="16" y="180" width="140" height="15" fill="rgb(240,151,36)"/><text x="19.00" y="190.50">&lt;genexpr&gt; (sklear..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (18 samples, 2.02%)</title><rect x="133" y="196" width="23" height="15" fill="rgb(205,181,33)"/><text x="136.00" y="206.50">_..</text></g><g><title>array_sum (methods.c:2215) (8 samples, 0.90%)</title><rect x="146" y="212" width="10" height="15" fill="rgb(214,26,49)"/><text x="149.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (8 samples, 0.90%)</title><rect x="146" y="228" width="10" height="15" fill="rgb(217,50,15)"/><text x="149.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (8 samples, 0.90%)</title><rect x="146" y="244" width="10" height="15" fill="rgb(251,79,4)"/><text x="149.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 0.78%)</title><rect x="147" y="260" width="9" height="15" fill="rgb(245,186,10)"/><text x="150.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 0.67%)</title><rect x="148" y="276" width="8" height="15" fill="rgb(222,105,14)"/><text x="151.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 0.67%)</title><rect x="148" y="292" width="8" height="15" fill="rgb(214,77,10)"/><text x="151.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.11%)</title><rect x="155" y="308" width="1" height="15" fill="rgb(215,195,45)"/><text x="158.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:706) (1 samples, 0.11%)</title><rect x="155" y="324" width="1" height="15" fill="rgb(232,153,34)"/><text x="158.00" y="334.50"></text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (107 samples, 12.00%)</title><rect x="16" y="164" width="142" height="15" fill="rgb(229,75,37)"/><text x="19.00" y="174.50">decision_function ..</text></g><g><title>array_add (number.c:330) (1 samples, 0.11%)</title><rect x="156" y="180" width="2" height="15" fill="rgb(248,11,45)"/><text x="159.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="156" y="196" width="2" height="15" fill="rgb(226,71,24)"/><text x="159.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="156" y="212" width="2" height="15" fill="rgb(207,9,48)"/><text x="159.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="156" y="228" width="2" height="15" fill="rgb(232,49,23)"/><text x="159.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.11%)</title><rect x="156" y="244" width="2" height="15" fill="rgb(223,210,12)"/><text x="159.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="156" y="260" width="2" height="15" fill="rgb(243,57,28)"/><text x="159.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="156" y="276" width="2" height="15" fill="rgb(242,58,22)"/><text x="159.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="156" y="292" width="2" height="15" fill="rgb(230,127,50)"/><text x="159.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.11%)</title><rect x="156" y="308" width="2" height="15" fill="rgb(244,55,19)"/><text x="159.00" y="318.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (108 samples, 12.11%)</title><rect x="16" y="148" width="143" height="15" fill="rgb(222,148,33)"/><text x="19.00" y="158.50">predict_proba (skl..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:703) (1 samples, 0.11%)</title><rect x="158" y="164" width="1" height="15" fill="rgb(234,145,50)"/><text x="161.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="158" y="180" width="1" height="15" fill="rgb(250,183,12)"/><text x="161.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="158" y="196" width="1" height="15" fill="rgb(225,45,49)"/><text x="161.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="158" y="212" width="1" height="15" fill="rgb(238,41,51)"/><text x="161.00" y="222.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.11%)</title><rect x="158" y="228" width="1" height="15" fill="rgb(216,44,46)"/><text x="161.00" y="238.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:766) (1 samples, 0.11%)</title><rect x="158" y="244" width="1" height="15" fill="rgb(224,205,13)"/><text x="161.00" y="254.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="158" y="260" width="1" height="15" fill="rgb(219,180,41)"/><text x="161.00" y="270.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:613) (1 samples, 0.11%)</title><rect x="159" y="180" width="1" height="15" fill="rgb(245,220,10)"/><text x="162.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="159" y="196" width="1" height="15" fill="rgb(246,58,32)"/><text x="162.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="159" y="212" width="1" height="15" fill="rgb(249,188,45)"/><text x="162.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.11%)</title><rect x="159" y="228" width="1" height="15" fill="rgb(205,134,20)"/><text x="162.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.11%)</title><rect x="159" y="244" width="1" height="15" fill="rgb(241,93,52)"/><text x="162.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (1 samples, 0.11%)</title><rect x="159" y="260" width="1" height="15" fill="rgb(253,223,15)"/><text x="162.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.11%)</title><rect x="159" y="276" width="1" height="15" fill="rgb(226,61,43)"/><text x="162.00" y="286.50"></text></g><g><title>0x7f46ae501c7b (libm-2.29.so) (1 samples, 0.11%)</title><rect x="159" y="292" width="1" height="15" fill="rgb(224,84,6)"/><text x="162.00" y="302.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:18) (110 samples, 12.33%)</title><rect x="16" y="100" width="146" height="15" fill="rgb(212,45,45)"/><text x="19.00" y="110.50">profile (bench_Ada..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (110 samples, 12.33%)</title><rect x="16" y="116" width="146" height="15" fill="rgb(233,156,25)"/><text x="19.00" y="126.50">time_predict (mlpr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (110 samples, 12.33%)</title><rect x="16" y="132" width="146" height="15" fill="rgb(243,121,51)"/><text x="19.00" y="142.50">&lt;lambda&gt; (mlprodic..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (2 samples, 0.22%)</title><rect x="159" y="148" width="3" height="15" fill="rgb(208,107,12)"/><text x="162.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (2 samples, 0.22%)</title><rect x="159" y="164" width="3" height="15" fill="rgb(209,207,11)"/><text x="162.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (1 samples, 0.11%)</title><rect x="160" y="180" width="2" height="15" fill="rgb(215,195,1)"/><text x="163.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="160" y="196" width="2" height="15" fill="rgb(240,54,14)"/><text x="163.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="160" y="212" width="2" height="15" fill="rgb(222,169,1)"/><text x="163.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.11%)</title><rect x="160" y="228" width="2" height="15" fill="rgb(217,38,5)"/><text x="163.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.11%)</title><rect x="160" y="244" width="2" height="15" fill="rgb(235,117,46)"/><text x="163.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.11%)</title><rect x="160" y="260" width="2" height="15" fill="rgb(250,111,33)"/><text x="163.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.11%)</title><rect x="160" y="276" width="2" height="15" fill="rgb(213,85,1)"/><text x="163.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.11%)</title><rect x="160" y="292" width="2" height="15" fill="rgb(205,221,4)"/><text x="163.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.11%)</title><rect x="160" y="308" width="2" height="15" fill="rgb(230,217,32)"/><text x="163.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.11%)</title><rect x="160" y="324" width="2" height="15" fill="rgb(247,177,0)"/><text x="163.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.11%)</title><rect x="160" y="340" width="2" height="15" fill="rgb(211,176,45)"/><text x="163.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="160" y="356" width="2" height="15" fill="rgb(233,151,48)"/><text x="163.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.11%)</title><rect x="163" y="212" width="1" height="15" fill="rgb(207,181,41)"/><text x="166.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="163" y="228" width="1" height="15" fill="rgb(216,228,35)"/><text x="166.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="163" y="244" width="1" height="15" fill="rgb(231,87,41)"/><text x="166.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="163" y="260" width="1" height="15" fill="rgb(210,111,1)"/><text x="166.00" y="270.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="163" y="276" width="1" height="15" fill="rgb(219,24,13)"/><text x="166.00" y="286.50"></text></g><g><title>0x7f46ae32fb87 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="163" y="292" width="1" height="15" fill="rgb(229,41,36)"/><text x="166.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.11%)</title><rect x="164" y="244" width="2" height="15" fill="rgb(234,134,45)"/><text x="167.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.11%)</title><rect x="168" y="260" width="2" height="15" fill="rgb(233,176,5)"/><text x="171.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 0.56%)</title><rect x="166" y="244" width="6" height="15" fill="rgb(249,70,39)"/><text x="169.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.22%)</title><rect x="170" y="260" width="2" height="15" fill="rgb(231,85,2)"/><text x="173.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (9 samples, 1.01%)</title><rect x="164" y="212" width="12" height="15" fill="rgb(227,97,48)"/><text x="167.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 1.01%)</title><rect x="164" y="228" width="12" height="15" fill="rgb(228,141,19)"/><text x="167.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 0.34%)</title><rect x="172" y="244" width="4" height="15" fill="rgb(206,128,46)"/><text x="175.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.11%)</title><rect x="176" y="244" width="2" height="15" fill="rgb(220,150,24)"/><text x="179.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.11%)</title><rect x="178" y="244" width="1" height="15" fill="rgb(240,197,14)"/><text x="181.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.34%)</title><rect x="179" y="244" width="4" height="15" fill="rgb(224,196,46)"/><text x="182.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.22%)</title><rect x="180" y="260" width="3" height="15" fill="rgb(245,100,47)"/><text x="183.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (7 samples, 0.78%)</title><rect x="183" y="244" width="9" height="15" fill="rgb(215,149,19)"/><text x="186.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (7 samples, 0.78%)</title><rect x="183" y="260" width="9" height="15" fill="rgb(239,181,13)"/><text x="186.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (5 samples, 0.56%)</title><rect x="185" y="276" width="7" height="15" fill="rgb(210,83,15)"/><text x="188.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (3 samples, 0.34%)</title><rect x="192" y="244" width="4" height="15" fill="rgb(248,178,51)"/><text x="195.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.11%)</title><rect x="195" y="260" width="1" height="15" fill="rgb(244,61,50)"/><text x="198.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1579) (1 samples, 0.11%)</title><rect x="196" y="276" width="1" height="15" fill="rgb(250,9,36)"/><text x="199.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.22%)</title><rect x="196" y="244" width="3" height="15" fill="rgb(209,176,31)"/><text x="199.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.22%)</title><rect x="196" y="260" width="3" height="15" fill="rgb(218,73,24)"/><text x="199.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.11%)</title><rect x="197" y="276" width="2" height="15" fill="rgb(224,138,8)"/><text x="200.00" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.22%)</title><rect x="201" y="276" width="3" height="15" fill="rgb(217,11,25)"/><text x="204.00" y="286.50"></text></g><g><title>0x7f46ae345e7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="203" y="292" width="1" height="15" fill="rgb(225,123,51)"/><text x="206.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 0.56%)</title><rect x="199" y="244" width="6" height="15" fill="rgb(233,142,48)"/><text x="202.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 0.56%)</title><rect x="199" y="260" width="6" height="15" fill="rgb(207,141,32)"/><text x="202.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.11%)</title><rect x="204" y="276" width="1" height="15" fill="rgb(246,112,42)"/><text x="207.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.22%)</title><rect x="205" y="260" width="3" height="15" fill="rgb(207,211,4)"/><text x="208.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (2 samples, 0.22%)</title><rect x="208" y="260" width="3" height="15" fill="rgb(224,170,30)"/><text x="211.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.11%)</title><rect x="211" y="260" width="1" height="15" fill="rgb(252,179,6)"/><text x="214.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (10 samples, 1.12%)</title><rect x="205" y="244" width="14" height="15" fill="rgb(253,25,41)"/><text x="208.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 0.56%)</title><rect x="212" y="260" width="7" height="15" fill="rgb(220,56,30)"/><text x="215.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (33 samples, 3.70%)</title><rect x="176" y="228" width="44" height="15" fill="rgb(213,96,10)"/><text x="179.00" y="238.50">_val..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.11%)</title><rect x="219" y="244" width="1" height="15" fill="rgb(251,132,41)"/><text x="222.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.11%)</title><rect x="219" y="260" width="1" height="15" fill="rgb(220,71,13)"/><text x="222.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (34 samples, 3.81%)</title><rect x="176" y="212" width="45" height="15" fill="rgb(232,34,18)"/><text x="179.00" y="222.50">pred..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.11%)</title><rect x="220" y="228" width="1" height="15" fill="rgb(250,187,22)"/><text x="223.00" y="238.50"></text></g><g><title>0x7f4687d72f12 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="224" y="244" width="1" height="15" fill="rgb(223,9,47)"/><text x="227.00" y="254.50"></text></g><g><title>0x7f4687d812df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="225" y="276" width="1" height="15" fill="rgb(212,20,12)"/><text x="228.00" y="286.50"></text></g><g><title>0x7f4687d65d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="225" y="292" width="1" height="15" fill="rgb(233,140,20)"/><text x="228.00" y="302.50"></text></g><g><title>0x7f4687d65666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="225" y="308" width="1" height="15" fill="rgb(217,61,13)"/><text x="228.00" y="318.50"></text></g><g><title>0x7f4687d5b2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="225" y="324" width="1" height="15" fill="rgb(224,114,52)"/><text x="228.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="225" y="340" width="1" height="15" fill="rgb(224,197,37)"/><text x="228.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.11%)</title><rect x="225" y="356" width="1" height="15" fill="rgb(206,136,22)"/><text x="228.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.11%)</title><rect x="226" y="292" width="2" height="15" fill="rgb(246,218,6)"/><text x="229.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.11%)</title><rect x="226" y="308" width="2" height="15" fill="rgb(228,87,46)"/><text x="229.00" y="318.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.11%)</title><rect x="226" y="324" width="2" height="15" fill="rgb(209,65,44)"/><text x="229.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.11%)</title><rect x="226" y="340" width="2" height="15" fill="rgb(213,4,37)"/><text x="229.00" y="350.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.11%)</title><rect x="226" y="356" width="2" height="15" fill="rgb(237,85,9)"/><text x="229.00" y="366.50"></text></g><g><title>0x7f4687d81592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="226" y="276" width="3" height="15" fill="rgb(205,35,13)"/><text x="229.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.11%)</title><rect x="228" y="292" width="1" height="15" fill="rgb(242,130,51)"/><text x="231.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.11%)</title><rect x="228" y="308" width="1" height="15" fill="rgb(243,183,38)"/><text x="231.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.11%)</title><rect x="228" y="324" width="1" height="15" fill="rgb(211,223,36)"/><text x="231.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.11%)</title><rect x="228" y="340" width="1" height="15" fill="rgb(217,23,4)"/><text x="231.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:128) (1 samples, 0.11%)</title><rect x="228" y="356" width="1" height="15" fill="rgb(213,4,27)"/><text x="231.00" y="366.50"></text></g><g><title>0x7f4687d81693 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="229" y="276" width="1" height="15" fill="rgb(219,151,1)"/><text x="232.00" y="286.50"></text></g><g><title>0x7f4687d816fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="230" y="276" width="2" height="15" fill="rgb(245,10,38)"/><text x="233.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="230" y="292" width="2" height="15" fill="rgb(250,126,33)"/><text x="233.00" y="302.50"></text></g><g><title>0x7f4687d817b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="232" y="276" width="1" height="15" fill="rgb(228,90,25)"/><text x="235.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.11%)</title><rect x="233" y="324" width="1" height="15" fill="rgb(206,31,51)"/><text x="236.00" y="334.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.11%)</title><rect x="233" y="340" width="1" height="15" fill="rgb(237,3,43)"/><text x="236.00" y="350.50"></text></g><g><title>_buffer_format_string (buffer.c:406) (1 samples, 0.11%)</title><rect x="233" y="356" width="1" height="15" fill="rgb(208,220,7)"/><text x="236.00" y="366.50"></text></g><g><title>_buffer_get_info (buffer.c:679) (1 samples, 0.11%)</title><rect x="234" y="324" width="2" height="15" fill="rgb(225,125,22)"/><text x="237.00" y="334.50"></text></g><g><title>0x7f4687d72fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.01%)</title><rect x="225" y="244" width="12" height="15" fill="rgb(224,13,29)"/><text x="228.00" y="254.50"></text></g><g><title>0x7f4687d82405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.01%)</title><rect x="225" y="260" width="12" height="15" fill="rgb(211,36,21)"/><text x="228.00" y="270.50"></text></g><g><title>0x7f4687d81c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.34%)</title><rect x="233" y="276" width="4" height="15" fill="rgb(246,78,17)"/><text x="236.00" y="286.50"></text></g><g><title>0x7f4687d59529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.34%)</title><rect x="233" y="292" width="4" height="15" fill="rgb(218,178,25)"/><text x="236.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.34%)</title><rect x="233" y="308" width="4" height="15" fill="rgb(242,198,7)"/><text x="236.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.11%)</title><rect x="236" y="324" width="1" height="15" fill="rgb(252,153,16)"/><text x="239.00" y="334.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.11%)</title><rect x="237" y="260" width="1" height="15" fill="rgb(210,155,28)"/><text x="240.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.11%)</title><rect x="237" y="276" width="1" height="15" fill="rgb(245,167,5)"/><text x="240.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (2 samples, 0.22%)</title><rect x="238" y="292" width="3" height="15" fill="rgb(208,144,1)"/><text x="241.00" y="302.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (3 samples, 0.34%)</title><rect x="238" y="276" width="4" height="15" fill="rgb(240,86,5)"/><text x="241.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3972) (1 samples, 0.11%)</title><rect x="241" y="292" width="1" height="15" fill="rgb(237,12,3)"/><text x="244.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="241" y="308" width="1" height="15" fill="rgb(226,180,18)"/><text x="244.00" y="318.50"></text></g><g><title>0x7f4687d7305a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.56%)</title><rect x="237" y="244" width="7" height="15" fill="rgb(213,59,43)"/><text x="240.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (4 samples, 0.45%)</title><rect x="238" y="260" width="6" height="15" fill="rgb(208,203,51)"/><text x="241.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.11%)</title><rect x="242" y="276" width="2" height="15" fill="rgb(251,139,22)"/><text x="245.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="242" y="292" width="2" height="15" fill="rgb(223,4,36)"/><text x="245.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:994) (1 samples, 0.11%)</title><rect x="242" y="308" width="2" height="15" fill="rgb(214,203,16)"/><text x="245.00" y="318.50"></text></g><g><title>0x7f4687d7314f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="244" y="244" width="2" height="15" fill="rgb(243,3,8)"/><text x="247.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="245" y="260" width="1" height="15" fill="rgb(245,84,29)"/><text x="248.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="245" y="276" width="1" height="15" fill="rgb(218,74,43)"/><text x="248.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="245" y="292" width="1" height="15" fill="rgb(212,102,38)"/><text x="248.00" y="302.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="245" y="308" width="1" height="15" fill="rgb(244,214,44)"/><text x="248.00" y="318.50"></text></g><g><title>0x7f46ae32fb89 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="245" y="324" width="1" height="15" fill="rgb(239,34,4)"/><text x="248.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (20 samples, 2.24%)</title><rect x="221" y="212" width="27" height="15" fill="rgb(224,27,12)"/><text x="224.00" y="222.50">p..</text></g><g><title>0x7f4687d73d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.02%)</title><rect x="224" y="228" width="24" height="15" fill="rgb(206,46,3)"/><text x="227.00" y="238.50">0..</text></g><g><title>0x7f4687d73328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="246" y="244" width="2" height="15" fill="rgb(215,129,26)"/><text x="249.00" y="254.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.11%)</title><rect x="246" y="260" width="2" height="15" fill="rgb(252,99,50)"/><text x="249.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:45) (1 samples, 0.11%)</title><rect x="246" y="276" width="2" height="15" fill="rgb(236,117,51)"/><text x="249.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.22%)</title><rect x="248" y="212" width="2" height="15" fill="rgb(207,19,52)"/><text x="251.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.11%)</title><rect x="249" y="228" width="1" height="15" fill="rgb(251,118,0)"/><text x="252.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:555) (1 samples, 0.11%)</title><rect x="249" y="244" width="1" height="15" fill="rgb(254,15,8)"/><text x="252.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.11%)</title><rect x="250" y="228" width="2" height="15" fill="rgb(242,34,23)"/><text x="253.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.11%)</title><rect x="250" y="244" width="2" height="15" fill="rgb(219,155,4)"/><text x="253.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.11%)</title><rect x="250" y="260" width="2" height="15" fill="rgb(241,148,23)"/><text x="253.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.11%)</title><rect x="252" y="276" width="1" height="15" fill="rgb(215,179,1)"/><text x="255.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="252" y="292" width="1" height="15" fill="rgb(230,91,28)"/><text x="255.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="252" y="308" width="1" height="15" fill="rgb(235,119,49)"/><text x="255.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="252" y="324" width="1" height="15" fill="rgb(222,191,48)"/><text x="255.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="252" y="340" width="1" height="15" fill="rgb(214,126,17)"/><text x="255.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="252" y="356" width="1" height="15" fill="rgb(214,119,48)"/><text x="255.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.11%)</title><rect x="253" y="292" width="1" height="15" fill="rgb(234,33,33)"/><text x="256.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:463) (1 samples, 0.11%)</title><rect x="254" y="324" width="2" height="15" fill="rgb(228,121,50)"/><text x="257.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.11%)</title><rect x="256" y="324" width="1" height="15" fill="rgb(249,82,10)"/><text x="259.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.11%)</title><rect x="256" y="340" width="1" height="15" fill="rgb(225,189,9)"/><text x="259.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="256" y="356" width="1" height="15" fill="rgb(221,155,35)"/><text x="259.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.11%)</title><rect x="256" y="372" width="1" height="15" fill="rgb(227,19,16)"/><text x="259.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.11%)</title><rect x="256" y="388" width="1" height="15" fill="rgb(210,100,25)"/><text x="259.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.11%)</title><rect x="257" y="324" width="1" height="15" fill="rgb(218,129,53)"/><text x="260.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.11%)</title><rect x="257" y="340" width="1" height="15" fill="rgb(238,145,27)"/><text x="260.00" y="350.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.11%)</title><rect x="257" y="356" width="1" height="15" fill="rgb(253,43,30)"/><text x="260.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="257" y="372" width="1" height="15" fill="rgb(245,159,54)"/><text x="260.00" y="382.50"></text></g><g><title>0x7f46ae331214 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="257" y="388" width="1" height="15" fill="rgb(228,28,48)"/><text x="260.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3491) (1 samples, 0.11%)</title><rect x="258" y="340" width="2" height="15" fill="rgb(251,149,11)"/><text x="261.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="258" y="356" width="2" height="15" fill="rgb(228,144,50)"/><text x="261.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.11%)</title><rect x="260" y="340" width="1" height="15" fill="rgb(244,220,53)"/><text x="263.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.11%)</title><rect x="261" y="340" width="1" height="15" fill="rgb(235,75,29)"/><text x="264.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.11%)</title><rect x="262" y="340" width="1" height="15" fill="rgb(221,2,17)"/><text x="265.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="263" y="356" width="2" height="15" fill="rgb(252,6,30)"/><text x="266.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (2 samples, 0.22%)</title><rect x="265" y="356" width="2" height="15" fill="rgb(230,82,50)"/><text x="268.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.22%)</title><rect x="270" y="372" width="3" height="15" fill="rgb(219,11,28)"/><text x="273.00" y="382.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="273" y="372" width="1" height="15" fill="rgb(241,99,40)"/><text x="276.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (6 samples, 0.67%)</title><rect x="267" y="356" width="8" height="15" fill="rgb(220,50,30)"/><text x="270.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.11%)</title><rect x="274" y="372" width="1" height="15" fill="rgb(211,31,14)"/><text x="277.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.11%)</title><rect x="275" y="356" width="2" height="15" fill="rgb(244,125,28)"/><text x="278.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (2 samples, 0.22%)</title><rect x="277" y="356" width="2" height="15" fill="rgb(237,129,43)"/><text x="280.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.11%)</title><rect x="279" y="356" width="2" height="15" fill="rgb(211,190,4)"/><text x="282.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.11%)</title><rect x="281" y="356" width="1" height="15" fill="rgb(253,151,3)"/><text x="284.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (15 samples, 1.68%)</title><rect x="263" y="340" width="20" height="15" fill="rgb(215,120,34)"/><text x="266.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.11%)</title><rect x="282" y="356" width="1" height="15" fill="rgb(206,198,17)"/><text x="285.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (26 samples, 2.91%)</title><rect x="250" y="212" width="35" height="15" fill="rgb(213,119,12)"/><text x="253.00" y="222.50">pr..</text></g><g><title>array_sum (methods.c:2215) (25 samples, 2.80%)</title><rect x="252" y="228" width="33" height="15" fill="rgb(254,27,22)"/><text x="255.00" y="238.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (25 samples, 2.80%)</title><rect x="252" y="244" width="33" height="15" fill="rgb(224,48,45)"/><text x="255.00" y="254.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (25 samples, 2.80%)</title><rect x="252" y="260" width="33" height="15" fill="rgb(213,92,35)"/><text x="255.00" y="270.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (24 samples, 2.69%)</title><rect x="253" y="276" width="32" height="15" fill="rgb(247,48,43)"/><text x="256.00" y="286.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (23 samples, 2.58%)</title><rect x="254" y="292" width="31" height="15" fill="rgb(244,20,12)"/><text x="257.00" y="302.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (23 samples, 2.58%)</title><rect x="254" y="308" width="31" height="15" fill="rgb(218,190,19)"/><text x="257.00" y="318.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (20 samples, 2.24%)</title><rect x="258" y="324" width="27" height="15" fill="rgb(236,119,34)"/><text x="261.00" y="334.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.11%)</title><rect x="283" y="340" width="2" height="15" fill="rgb(222,68,50)"/><text x="286.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="283" y="356" width="2" height="15" fill="rgb(248,23,3)"/><text x="286.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.11%)</title><rect x="286" y="228" width="1" height="15" fill="rgb(211,226,24)"/><text x="289.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:376) (1 samples, 0.11%)</title><rect x="286" y="244" width="1" height="15" fill="rgb(215,226,54)"/><text x="289.00" y="254.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:212) (1 samples, 0.11%)</title><rect x="289" y="324" width="1" height="15" fill="rgb(241,119,2)"/><text x="292.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (6 samples, 0.67%)</title><rect x="285" y="212" width="8" height="15" fill="rgb(207,196,26)"/><text x="288.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (4 samples, 0.45%)</title><rect x="287" y="228" width="6" height="15" fill="rgb(217,143,38)"/><text x="290.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.34%)</title><rect x="289" y="244" width="4" height="15" fill="rgb(251,114,6)"/><text x="292.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.34%)</title><rect x="289" y="260" width="4" height="15" fill="rgb(233,20,14)"/><text x="292.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (3 samples, 0.34%)</title><rect x="289" y="276" width="4" height="15" fill="rgb(218,170,47)"/><text x="292.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (3 samples, 0.34%)</title><rect x="289" y="292" width="4" height="15" fill="rgb(209,128,53)"/><text x="292.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (3 samples, 0.34%)</title><rect x="289" y="308" width="4" height="15" fill="rgb(253,84,7)"/><text x="292.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:218) (2 samples, 0.22%)</title><rect x="290" y="324" width="3" height="15" fill="rgb(212,119,35)"/><text x="293.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.11%)</title><rect x="293" y="276" width="1" height="15" fill="rgb(214,207,34)"/><text x="296.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="294" y="276" width="1" height="15" fill="rgb(236,112,35)"/><text x="297.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.11%)</title><rect x="294" y="292" width="1" height="15" fill="rgb(249,90,20)"/><text x="297.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.11%)</title><rect x="294" y="308" width="1" height="15" fill="rgb(239,119,40)"/><text x="297.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.11%)</title><rect x="294" y="324" width="1" height="15" fill="rgb(229,190,47)"/><text x="297.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.11%)</title><rect x="295" y="324" width="2" height="15" fill="rgb(237,142,7)"/><text x="298.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.34%)</title><rect x="295" y="276" width="4" height="15" fill="rgb(231,24,4)"/><text x="298.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.34%)</title><rect x="295" y="292" width="4" height="15" fill="rgb(243,162,51)"/><text x="298.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.34%)</title><rect x="295" y="308" width="4" height="15" fill="rgb(219,122,44)"/><text x="298.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.22%)</title><rect x="297" y="324" width="2" height="15" fill="rgb(217,60,46)"/><text x="300.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (2 samples, 0.22%)</title><rect x="297" y="340" width="2" height="15" fill="rgb(218,155,7)"/><text x="300.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (107 samples, 12.00%)</title><rect x="162" y="196" width="141" height="15" fill="rgb(238,180,25)"/><text x="165.00" y="206.50">_samme_proba (skl..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (8 samples, 0.90%)</title><rect x="293" y="212" width="10" height="15" fill="rgb(238,136,34)"/><text x="296.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 0.90%)</title><rect x="293" y="228" width="10" height="15" fill="rgb(253,160,25)"/><text x="296.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.90%)</title><rect x="293" y="244" width="10" height="15" fill="rgb(228,143,12)"/><text x="296.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 0.90%)</title><rect x="293" y="260" width="10" height="15" fill="rgb(212,56,7)"/><text x="296.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.34%)</title><rect x="299" y="276" width="4" height="15" fill="rgb(229,141,23)"/><text x="302.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (3 samples, 0.34%)</title><rect x="299" y="292" width="4" height="15" fill="rgb(243,43,8)"/><text x="302.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (3 samples, 0.34%)</title><rect x="299" y="308" width="4" height="15" fill="rgb(207,49,4)"/><text x="302.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (3 samples, 0.34%)</title><rect x="299" y="324" width="4" height="15" fill="rgb(215,163,28)"/><text x="302.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 0.34%)</title><rect x="299" y="340" width="4" height="15" fill="rgb(231,67,13)"/><text x="302.00" y="350.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.11%)</title><rect x="305" y="212" width="1" height="15" fill="rgb(223,3,13)"/><text x="308.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.11%)</title><rect x="311" y="260" width="1" height="15" fill="rgb(221,190,3)"/><text x="314.00" y="270.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (4 samples, 0.45%)</title><rect x="312" y="324" width="6" height="15" fill="rgb(206,223,45)"/><text x="315.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="318" y="340" width="1" height="15" fill="rgb(233,199,25)"/><text x="321.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.22%)</title><rect x="318" y="324" width="2" height="15" fill="rgb(224,125,29)"/><text x="321.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="319" y="340" width="1" height="15" fill="rgb(240,32,37)"/><text x="322.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="320" y="340" width="2" height="15" fill="rgb(250,101,36)"/><text x="323.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="320" y="356" width="2" height="15" fill="rgb(209,134,38)"/><text x="323.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="320" y="372" width="2" height="15" fill="rgb(222,229,50)"/><text x="323.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="320" y="388" width="2" height="15" fill="rgb(210,178,16)"/><text x="323.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="320" y="404" width="2" height="15" fill="rgb(238,99,10)"/><text x="323.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="320" y="420" width="2" height="15" fill="rgb(233,186,29)"/><text x="323.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="320" y="436" width="2" height="15" fill="rgb(211,76,16)"/><text x="323.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="322" y="356" width="1" height="15" fill="rgb(242,55,8)"/><text x="325.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="322" y="372" width="1" height="15" fill="rgb(210,169,17)"/><text x="325.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.11%)</title><rect x="322" y="388" width="1" height="15" fill="rgb(243,20,31)"/><text x="325.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.11%)</title><rect x="322" y="404" width="1" height="15" fill="rgb(218,74,9)"/><text x="325.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (9 samples, 1.01%)</title><rect x="312" y="308" width="12" height="15" fill="rgb(219,86,6)"/><text x="315.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.34%)</title><rect x="320" y="324" width="4" height="15" fill="rgb(220,33,36)"/><text x="323.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="322" y="340" width="2" height="15" fill="rgb(235,92,4)"/><text x="325.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="323" y="356" width="1" height="15" fill="rgb(234,41,54)"/><text x="326.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.11%)</title><rect x="323" y="372" width="1" height="15" fill="rgb(227,90,34)"/><text x="326.00" y="382.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.11%)</title><rect x="323" y="388" width="1" height="15" fill="rgb(207,99,20)"/><text x="326.00" y="398.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.11%)</title><rect x="323" y="404" width="1" height="15" fill="rgb(235,27,40)"/><text x="326.00" y="414.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.11%)</title><rect x="323" y="420" width="1" height="15" fill="rgb(248,70,20)"/><text x="326.00" y="430.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="323" y="436" width="1" height="15" fill="rgb(219,22,41)"/><text x="326.00" y="446.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="324" y="324" width="2" height="15" fill="rgb(253,90,52)"/><text x="327.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="324" y="340" width="2" height="15" fill="rgb(218,59,25)"/><text x="327.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.11%)</title><rect x="327" y="372" width="1" height="15" fill="rgb(241,43,46)"/><text x="330.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (4 samples, 0.45%)</title><rect x="326" y="324" width="5" height="15" fill="rgb(250,123,44)"/><text x="329.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (4 samples, 0.45%)</title><rect x="326" y="340" width="5" height="15" fill="rgb(218,189,53)"/><text x="329.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.34%)</title><rect x="327" y="356" width="4" height="15" fill="rgb(236,22,12)"/><text x="330.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.22%)</title><rect x="328" y="372" width="3" height="15" fill="rgb(250,202,33)"/><text x="331.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.22%)</title><rect x="328" y="388" width="3" height="15" fill="rgb(205,56,15)"/><text x="331.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.11%)</title><rect x="330" y="404" width="1" height="15" fill="rgb(219,123,51)"/><text x="333.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.11%)</title><rect x="330" y="420" width="1" height="15" fill="rgb(206,154,53)"/><text x="333.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="330" y="436" width="1" height="15" fill="rgb(207,32,48)"/><text x="333.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.11%)</title><rect x="330" y="452" width="1" height="15" fill="rgb(208,26,1)"/><text x="333.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="331" y="356" width="1" height="15" fill="rgb(242,206,54)"/><text x="334.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="331" y="372" width="1" height="15" fill="rgb(247,36,43)"/><text x="334.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.11%)</title><rect x="331" y="388" width="1" height="15" fill="rgb(236,126,11)"/><text x="334.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1015) (1 samples, 0.11%)</title><rect x="331" y="404" width="1" height="15" fill="rgb(222,217,49)"/><text x="334.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (8 samples, 0.90%)</title><rect x="324" y="308" width="11" height="15" fill="rgb(209,36,41)"/><text x="327.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.34%)</title><rect x="331" y="324" width="4" height="15" fill="rgb(215,172,14)"/><text x="334.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.34%)</title><rect x="331" y="340" width="4" height="15" fill="rgb(207,86,15)"/><text x="334.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.22%)</title><rect x="332" y="356" width="3" height="15" fill="rgb(234,112,54)"/><text x="335.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (2 samples, 0.22%)</title><rect x="332" y="372" width="3" height="15" fill="rgb(219,137,6)"/><text x="335.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="336" y="340" width="2" height="15" fill="rgb(215,65,46)"/><text x="339.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="336" y="356" width="2" height="15" fill="rgb(242,141,28)"/><text x="339.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="336" y="372" width="2" height="15" fill="rgb(245,56,47)"/><text x="339.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="336" y="388" width="2" height="15" fill="rgb(205,164,22)"/><text x="339.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="336" y="404" width="2" height="15" fill="rgb(213,138,27)"/><text x="339.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.11%)</title><rect x="336" y="420" width="2" height="15" fill="rgb(226,179,4)"/><text x="339.00" y="430.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.11%)</title><rect x="336" y="436" width="2" height="15" fill="rgb(212,135,7)"/><text x="339.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="338" y="356" width="1" height="15" fill="rgb(227,127,14)"/><text x="341.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.11%)</title><rect x="338" y="372" width="1" height="15" fill="rgb(225,192,52)"/><text x="341.00" y="382.50"></text></g><g><title>_set_out_array (ufunc_object.c:818) (1 samples, 0.11%)</title><rect x="338" y="388" width="1" height="15" fill="rgb(238,213,21)"/><text x="341.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:811) (1 samples, 0.11%)</title><rect x="339" y="404" width="1" height="15" fill="rgb(247,159,45)"/><text x="342.00" y="414.50"></text></g><g><title>strides_to_terms (mem_overlap.c:735) (1 samples, 0.11%)</title><rect x="339" y="420" width="1" height="15" fill="rgb(237,34,17)"/><text x="342.00" y="430.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:596) (1 samples, 0.11%)</title><rect x="340" y="420" width="2" height="15" fill="rgb(227,216,52)"/><text x="343.00" y="430.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (2 samples, 0.22%)</title><rect x="340" y="404" width="3" height="15" fill="rgb(245,47,44)"/><text x="343.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.11%)</title><rect x="342" y="420" width="1" height="15" fill="rgb(220,51,38)"/><text x="345.00" y="430.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.11%)</title><rect x="342" y="436" width="1" height="15" fill="rgb(236,209,27)"/><text x="345.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (4 samples, 0.45%)</title><rect x="339" y="372" width="5" height="15" fill="rgb(224,49,28)"/><text x="342.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (4 samples, 0.45%)</title><rect x="339" y="388" width="5" height="15" fill="rgb(227,112,21)"/><text x="342.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.11%)</title><rect x="343" y="404" width="1" height="15" fill="rgb(216,181,16)"/><text x="346.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.11%)</title><rect x="343" y="420" width="1" height="15" fill="rgb(231,39,19)"/><text x="346.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:375) (1 samples, 0.11%)</title><rect x="343" y="436" width="1" height="15" fill="rgb(229,12,23)"/><text x="346.00" y="446.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.11%)</title><rect x="343" y="452" width="1" height="15" fill="rgb(205,8,34)"/><text x="346.00" y="462.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.11%)</title><rect x="343" y="468" width="1" height="15" fill="rgb(224,49,44)"/><text x="346.00" y="478.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (1 samples, 0.11%)</title><rect x="344" y="404" width="2" height="15" fill="rgb(248,126,26)"/><text x="347.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (34 samples, 3.81%)</title><rect x="303" y="196" width="45" height="15" fill="rgb(210,13,48)"/><text x="306.00" y="206.50">_sam..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (32 samples, 3.59%)</title><rect x="306" y="212" width="42" height="15" fill="rgb(208,46,38)"/><text x="309.00" y="222.50">cli..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (31 samples, 3.48%)</title><rect x="307" y="228" width="41" height="15" fill="rgb(246,195,54)"/><text x="310.00" y="238.50">arr..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (31 samples, 3.48%)</title><rect x="307" y="244" width="41" height="15" fill="rgb(235,214,24)"/><text x="310.00" y="254.50">cli..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (27 samples, 3.03%)</title><rect x="312" y="260" width="36" height="15" fill="rgb(234,175,53)"/><text x="315.00" y="270.50">_wr..</text></g><g><title>array_clip (methods.c:2381) (27 samples, 3.03%)</title><rect x="312" y="276" width="36" height="15" fill="rgb(238,53,29)"/><text x="315.00" y="286.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (27 samples, 3.03%)</title><rect x="312" y="292" width="36" height="15" fill="rgb(221,153,20)"/><text x="315.00" y="302.50">for..</text></g><g><title>_clip (numpy/core/_methods.py:129) (10 samples, 1.12%)</title><rect x="335" y="308" width="13" height="15" fill="rgb(225,62,30)"/><text x="338.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (9 samples, 1.01%)</title><rect x="336" y="324" width="12" height="15" fill="rgb(207,202,38)"/><text x="339.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 0.90%)</title><rect x="338" y="340" width="10" height="15" fill="rgb(229,92,43)"/><text x="341.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.78%)</title><rect x="339" y="356" width="9" height="15" fill="rgb(220,47,18)"/><text x="342.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.34%)</title><rect x="344" y="372" width="4" height="15" fill="rgb(248,212,14)"/><text x="347.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (3 samples, 0.34%)</title><rect x="344" y="388" width="4" height="15" fill="rgb(237,134,7)"/><text x="347.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (2 samples, 0.22%)</title><rect x="346" y="404" width="2" height="15" fill="rgb(248,84,53)"/><text x="349.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.11%)</title><rect x="349" y="228" width="2" height="15" fill="rgb(229,12,21)"/><text x="352.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1297) (1 samples, 0.11%)</title><rect x="349" y="244" width="2" height="15" fill="rgb(223,160,18)"/><text x="352.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.11%)</title><rect x="351" y="244" width="1" height="15" fill="rgb(253,228,28)"/><text x="354.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="351" y="260" width="1" height="15" fill="rgb(248,226,53)"/><text x="354.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.11%)</title><rect x="351" y="276" width="1" height="15" fill="rgb(251,122,23)"/><text x="354.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.11%)</title><rect x="351" y="292" width="1" height="15" fill="rgb(220,46,21)"/><text x="354.00" y="302.50"></text></g><g><title>0x7f46ae501dd0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="353" y="292" width="2" height="15" fill="rgb(230,97,44)"/><text x="356.00" y="302.50"></text></g><g><title>0x7f46ae501e01 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="355" y="292" width="1" height="15" fill="rgb(242,225,32)"/><text x="358.00" y="302.50"></text></g><g><title>0x7f46ae501e40 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="356" y="292" width="1" height="15" fill="rgb(251,180,2)"/><text x="359.00" y="302.50"></text></g><g><title>0x7f46ae501e4d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="357" y="292" width="2" height="15" fill="rgb(220,179,49)"/><text x="360.00" y="302.50"></text></g><g><title>0x7f46ae501e8d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="359" y="292" width="1" height="15" fill="rgb(227,125,33)"/><text x="362.00" y="302.50"></text></g><g><title>0x7f46ae501ea2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="360" y="292" width="1" height="15" fill="rgb(242,82,49)"/><text x="363.00" y="302.50"></text></g><g><title>0x7f46ae501eb6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="361" y="292" width="2" height="15" fill="rgb(234,98,13)"/><text x="364.00" y="302.50"></text></g><g><title>0x7f46ae501ec6 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="363" y="292" width="2" height="15" fill="rgb(217,109,32)"/><text x="366.00" y="302.50"></text></g><g><title>0x7f46ae501eca (libm-2.29.so) (1 samples, 0.11%)</title><rect x="365" y="292" width="2" height="15" fill="rgb(238,67,8)"/><text x="368.00" y="302.50"></text></g><g><title>0x7f46ae501eee (libm-2.29.so) (3 samples, 0.34%)</title><rect x="367" y="292" width="4" height="15" fill="rgb(226,90,39)"/><text x="370.00" y="302.50"></text></g><g><title>0x7f46ae501ef6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="371" y="292" width="1" height="15" fill="rgb(218,75,17)"/><text x="374.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (16 samples, 1.79%)</title><rect x="352" y="260" width="21" height="15" fill="rgb(253,177,18)"/><text x="355.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (16 samples, 1.79%)</title><rect x="352" y="276" width="21" height="15" fill="rgb(229,201,20)"/><text x="355.00" y="286.50"></text></g><g><title>0x7f46ae501f6b (libm-2.29.so) (1 samples, 0.11%)</title><rect x="372" y="292" width="1" height="15" fill="rgb(233,16,21)"/><text x="375.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (20 samples, 2.24%)</title><rect x="348" y="196" width="27" height="15" fill="rgb(206,92,31)"/><text x="351.00" y="206.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (19 samples, 2.13%)</title><rect x="349" y="212" width="26" height="15" fill="rgb(233,17,0)"/><text x="352.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (18 samples, 2.02%)</title><rect x="351" y="228" width="24" height="15" fill="rgb(238,4,30)"/><text x="354.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (17 samples, 1.91%)</title><rect x="352" y="244" width="23" height="15" fill="rgb(238,144,29)"/><text x="355.00" y="254.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.11%)</title><rect x="373" y="260" width="2" height="15" fill="rgb(237,93,49)"/><text x="376.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="379" y="212" width="1" height="15" fill="rgb(246,220,28)"/><text x="382.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="379" y="228" width="1" height="15" fill="rgb(248,95,39)"/><text x="382.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="379" y="244" width="1" height="15" fill="rgb(211,147,13)"/><text x="382.00" y="254.50"></text></g><g><title>array_multiply (number.c:350) (1 samples, 0.11%)</title><rect x="380" y="212" width="1" height="15" fill="rgb(253,2,49)"/><text x="383.00" y="222.50"></text></g><g><title>try_binary_elide (temp_elide.c:349) (1 samples, 0.11%)</title><rect x="380" y="228" width="1" height="15" fill="rgb(233,14,16)"/><text x="383.00" y="238.50"></text></g><g><title>can_elide_temp (temp_elide.c:293) (1 samples, 0.11%)</title><rect x="380" y="244" width="1" height="15" fill="rgb(243,222,12)"/><text x="383.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.11%)</title><rect x="380" y="260" width="1" height="15" fill="rgb(252,145,13)"/><text x="383.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="381" y="244" width="2" height="15" fill="rgb(238,190,6)"/><text x="384.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="381" y="260" width="2" height="15" fill="rgb(210,128,20)"/><text x="384.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="381" y="276" width="2" height="15" fill="rgb(207,39,28)"/><text x="384.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1600) (1 samples, 0.11%)</title><rect x="381" y="292" width="2" height="15" fill="rgb(233,94,20)"/><text x="384.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:488) (1 samples, 0.11%)</title><rect x="383" y="260" width="1" height="15" fill="rgb(235,157,24)"/><text x="386.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.22%)</title><rect x="383" y="244" width="2" height="15" fill="rgb(240,90,9)"/><text x="386.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.11%)</title><rect x="384" y="260" width="1" height="15" fill="rgb(250,66,7)"/><text x="387.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.11%)</title><rect x="384" y="276" width="1" height="15" fill="rgb(247,34,48)"/><text x="387.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.11%)</title><rect x="384" y="292" width="1" height="15" fill="rgb(246,156,35)"/><text x="387.00" y="302.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:51) (1 samples, 0.11%)</title><rect x="385" y="276" width="2" height="15" fill="rgb(249,170,29)"/><text x="388.00" y="286.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:363) (1 samples, 0.11%)</title><rect x="385" y="292" width="2" height="15" fill="rgb(206,68,33)"/><text x="388.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (2 samples, 0.22%)</title><rect x="385" y="244" width="3" height="15" fill="rgb(212,60,43)"/><text x="388.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (2 samples, 0.22%)</title><rect x="385" y="260" width="3" height="15" fill="rgb(251,118,9)"/><text x="388.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.11%)</title><rect x="387" y="276" width="1" height="15" fill="rgb(209,158,49)"/><text x="390.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.11%)</title><rect x="387" y="292" width="1" height="15" fill="rgb(213,123,40)"/><text x="390.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="387" y="308" width="1" height="15" fill="rgb(248,192,9)"/><text x="390.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.11%)</title><rect x="387" y="324" width="1" height="15" fill="rgb(247,159,28)"/><text x="390.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.11%)</title><rect x="387" y="340" width="1" height="15" fill="rgb(215,130,46)"/><text x="390.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:948) (1 samples, 0.11%)</title><rect x="387" y="356" width="1" height="15" fill="rgb(226,122,11)"/><text x="390.00" y="366.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:650) (1 samples, 0.11%)</title><rect x="388" y="292" width="1" height="15" fill="rgb(212,98,38)"/><text x="391.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.78%)</title><rect x="381" y="228" width="9" height="15" fill="rgb(232,120,3)"/><text x="384.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="388" y="244" width="2" height="15" fill="rgb(231,40,43)"/><text x="391.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.22%)</title><rect x="388" y="260" width="2" height="15" fill="rgb(209,108,33)"/><text x="391.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.22%)</title><rect x="388" y="276" width="2" height="15" fill="rgb(229,187,52)"/><text x="391.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:699) (1 samples, 0.11%)</title><rect x="389" y="292" width="1" height="15" fill="rgb(237,179,39)"/><text x="392.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="389" y="308" width="1" height="15" fill="rgb(253,48,34)"/><text x="392.00" y="318.50"></text></g><g><title>array_multiply (number.c:354) (8 samples, 0.90%)</title><rect x="381" y="212" width="11" height="15" fill="rgb(246,70,30)"/><text x="384.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.11%)</title><rect x="390" y="228" width="2" height="15" fill="rgb(223,2,11)"/><text x="393.00" y="238.50"></text></g><g><title>PyArray_Return (scalarapi.c:854) (1 samples, 0.11%)</title><rect x="390" y="244" width="2" height="15" fill="rgb(211,58,11)"/><text x="393.00" y="254.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.11%)</title><rect x="392" y="324" width="1" height="15" fill="rgb(222,128,12)"/><text x="395.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="393" y="324" width="1" height="15" fill="rgb(233,112,16)"/><text x="396.00" y="334.50"></text></g><g><title>array_subtract (number.c:342) (3 samples, 0.34%)</title><rect x="392" y="212" width="4" height="15" fill="rgb(248,125,42)"/><text x="395.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.34%)</title><rect x="392" y="228" width="4" height="15" fill="rgb(239,49,30)"/><text x="395.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.34%)</title><rect x="392" y="244" width="4" height="15" fill="rgb(231,42,48)"/><text x="395.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.34%)</title><rect x="392" y="260" width="4" height="15" fill="rgb(228,103,23)"/><text x="395.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.34%)</title><rect x="392" y="276" width="4" height="15" fill="rgb(213,209,6)"/><text x="395.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.34%)</title><rect x="392" y="292" width="4" height="15" fill="rgb(237,26,39)"/><text x="395.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.34%)</title><rect x="392" y="308" width="4" height="15" fill="rgb(243,91,28)"/><text x="395.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.11%)</title><rect x="394" y="324" width="2" height="15" fill="rgb(223,172,7)"/><text x="397.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="394" y="340" width="2" height="15" fill="rgb(244,38,32)"/><text x="397.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.11%)</title><rect x="397" y="340" width="1" height="15" fill="rgb(216,149,4)"/><text x="400.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="397" y="356" width="1" height="15" fill="rgb(231,130,54)"/><text x="400.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="397" y="372" width="1" height="15" fill="rgb(213,57,38)"/><text x="400.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.22%)</title><rect x="397" y="308" width="3" height="15" fill="rgb(252,196,45)"/><text x="400.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.22%)</title><rect x="397" y="324" width="3" height="15" fill="rgb(234,86,1)"/><text x="400.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.11%)</title><rect x="398" y="340" width="2" height="15" fill="rgb(233,169,23)"/><text x="401.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="398" y="356" width="2" height="15" fill="rgb(253,164,2)"/><text x="401.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.11%)</title><rect x="398" y="372" width="2" height="15" fill="rgb(242,160,18)"/><text x="401.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.11%)</title><rect x="400" y="324" width="1" height="15" fill="rgb(208,97,36)"/><text x="403.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1629) (1 samples, 0.11%)</title><rect x="400" y="340" width="1" height="15" fill="rgb(251,46,19)"/><text x="403.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.11%)</title><rect x="401" y="324" width="1" height="15" fill="rgb(232,193,2)"/><text x="404.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3153) (1 samples, 0.11%)</title><rect x="401" y="340" width="1" height="15" fill="rgb(229,185,20)"/><text x="404.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.34%)</title><rect x="400" y="308" width="4" height="15" fill="rgb(236,23,10)"/><text x="403.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.11%)</title><rect x="402" y="324" width="2" height="15" fill="rgb(229,125,29)"/><text x="405.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.11%)</title><rect x="402" y="340" width="2" height="15" fill="rgb(217,159,7)"/><text x="405.00" y="350.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2605) (1 samples, 0.11%)</title><rect x="402" y="356" width="2" height="15" fill="rgb(224,140,45)"/><text x="405.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.11%)</title><rect x="404" y="324" width="1" height="15" fill="rgb(224,3,48)"/><text x="407.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.11%)</title><rect x="405" y="324" width="1" height="15" fill="rgb(221,192,12)"/><text x="408.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (2 samples, 0.22%)</title><rect x="406" y="340" width="3" height="15" fill="rgb(246,52,46)"/><text x="409.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.22%)</title><rect x="409" y="340" width="3" height="15" fill="rgb(237,153,15)"/><text x="412.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="410" y="356" width="2" height="15" fill="rgb(245,63,2)"/><text x="413.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.11%)</title><rect x="412" y="340" width="1" height="15" fill="rgb(246,188,31)"/><text x="415.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.11%)</title><rect x="413" y="340" width="1" height="15" fill="rgb(208,139,18)"/><text x="416.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.11%)</title><rect x="414" y="340" width="2" height="15" fill="rgb(247,17,20)"/><text x="417.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (32 samples, 3.59%)</title><rect x="375" y="196" width="42" height="15" fill="rgb(226,98,50)"/><text x="378.00" y="206.50">_sa..</text></g><g><title>array_sum (methods.c:2215) (16 samples, 1.79%)</title><rect x="396" y="212" width="21" height="15" fill="rgb(224,166,35)"/><text x="399.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (16 samples, 1.79%)</title><rect x="396" y="228" width="21" height="15" fill="rgb(240,28,36)"/><text x="399.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (16 samples, 1.79%)</title><rect x="396" y="244" width="21" height="15" fill="rgb(235,132,6)"/><text x="399.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (15 samples, 1.68%)</title><rect x="397" y="260" width="20" height="15" fill="rgb(227,101,52)"/><text x="400.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (15 samples, 1.68%)</title><rect x="397" y="276" width="20" height="15" fill="rgb(220,85,7)"/><text x="400.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (15 samples, 1.68%)</title><rect x="397" y="292" width="20" height="15" fill="rgb(227,109,53)"/><text x="400.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (10 samples, 1.12%)</title><rect x="404" y="308" width="13" height="15" fill="rgb(223,165,33)"/><text x="407.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (8 samples, 0.90%)</title><rect x="406" y="324" width="11" height="15" fill="rgb(231,194,52)"/><text x="409.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.11%)</title><rect x="416" y="340" width="1" height="15" fill="rgb(211,147,40)"/><text x="419.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (194 samples, 21.75%)</title><rect x="162" y="180" width="256" height="15" fill="rgb(250,64,42)"/><text x="165.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weigh..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="417" y="196" width="1" height="15" fill="rgb(240,42,4)"/><text x="420.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="417" y="212" width="1" height="15" fill="rgb(250,148,34)"/><text x="420.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="417" y="228" width="1" height="15" fill="rgb(235,2,43)"/><text x="420.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:38) (308 samples, 34.53%)</title><rect x="15" y="52" width="407" height="15" fill="rgb(252,169,54)"/><text x="18.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_..</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:37) (308 samples, 34.53%)</title><rect x="15" y="68" width="407" height="15" fill="rgb(209,96,28)"/><text x="18.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1000..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:29) (307 samples, 34.42%)</title><rect x="16" y="84" width="406" height="15" fill="rgb(220,82,20)"/><text x="19.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_10..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:23) (197 samples, 22.09%)</title><rect x="162" y="100" width="260" height="15" fill="rgb(248,48,21)"/><text x="165.00" y="110.50">profile (bench_AdaBoostClassifier_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (197 samples, 22.09%)</title><rect x="162" y="116" width="260" height="15" fill="rgb(237,114,41)"/><text x="165.00" y="126.50">time_predict (mlprodict/asv_benchm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (197 samples, 22.09%)</title><rect x="162" y="132" width="260" height="15" fill="rgb(220,98,34)"/><text x="165.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (197 samples, 22.09%)</title><rect x="162" y="148" width="260" height="15" fill="rgb(247,211,48)"/><text x="165.00" y="158.50">predict_proba (sklearn/ensemble/_w..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (197 samples, 22.09%)</title><rect x="162" y="164" width="260" height="15" fill="rgb(234,33,11)"/><text x="165.00" y="174.50">decision_function (sklearn/ensembl..</text></g><g><title>array_add (number.c:330) (3 samples, 0.34%)</title><rect x="418" y="180" width="4" height="15" fill="rgb(248,52,48)"/><text x="421.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="421" y="196" width="1" height="15" fill="rgb(232,115,39)"/><text x="424.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="421" y="212" width="1" height="15" fill="rgb(229,155,47)"/><text x="424.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1058) (1 samples, 0.11%)</title><rect x="421" y="228" width="1" height="15" fill="rgb(224,74,16)"/><text x="424.00" y="238.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:1) (1 samples, 0.11%)</title><rect x="422" y="148" width="2" height="15" fill="rgb(238,20,53)"/><text x="425.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="422" y="164" width="2" height="15" fill="rgb(248,89,31)"/><text x="425.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="422" y="180" width="2" height="15" fill="rgb(229,11,16)"/><text x="425.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="422" y="196" width="2" height="15" fill="rgb(247,157,43)"/><text x="425.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="422" y="212" width="2" height="15" fill="rgb(215,164,33)"/><text x="425.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="422" y="228" width="2" height="15" fill="rgb(228,174,34)"/><text x="425.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:148) (1 samples, 0.11%)</title><rect x="422" y="244" width="2" height="15" fill="rgb(216,55,34)"/><text x="425.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="422" y="260" width="2" height="15" fill="rgb(227,155,45)"/><text x="425.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="422" y="276" width="2" height="15" fill="rgb(240,202,54)"/><text x="425.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="422" y="292" width="2" height="15" fill="rgb(254,228,31)"/><text x="425.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="422" y="308" width="2" height="15" fill="rgb(213,104,0)"/><text x="425.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="422" y="324" width="2" height="15" fill="rgb(227,170,19)"/><text x="425.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="422" y="340" width="2" height="15" fill="rgb(214,10,50)"/><text x="425.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="422" y="356" width="2" height="15" fill="rgb(223,222,3)"/><text x="425.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/fft/__init__.py:188) (1 samples, 0.11%)</title><rect x="422" y="372" width="2" height="15" fill="rgb(241,97,45)"/><text x="425.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="422" y="388" width="2" height="15" fill="rgb(218,212,53)"/><text x="425.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="422" y="404" width="2" height="15" fill="rgb(245,131,41)"/><text x="425.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="422" y="420" width="2" height="15" fill="rgb(239,168,37)"/><text x="425.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="422" y="436" width="2" height="15" fill="rgb(209,80,6)"/><text x="425.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="422" y="452" width="2" height="15" fill="rgb(227,75,51)"/><text x="425.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/fft/_pocketfft.py:762) (1 samples, 0.11%)</title><rect x="422" y="468" width="2" height="15" fill="rgb(247,45,39)"/><text x="425.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py:172) (1 samples, 0.11%)</title><rect x="422" y="484" width="2" height="15" fill="rgb(234,148,25)"/><text x="425.00" y="494.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.11%)</title><rect x="422" y="500" width="2" height="15" fill="rgb(228,218,47)"/><text x="425.00" y="510.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.11%)</title><rect x="422" y="516" width="2" height="15" fill="rgb(224,213,48)"/><text x="425.00" y="526.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.11%)</title><rect x="422" y="532" width="2" height="15" fill="rgb(209,149,31)"/><text x="425.00" y="542.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2200) (1 samples, 0.11%)</title><rect x="424" y="916" width="1" height="15" fill="rgb(223,168,49)"/><text x="427.00" y="926.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.11%)</title><rect x="424" y="932" width="1" height="15" fill="rgb(234,126,40)"/><text x="427.00" y="942.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.11%)</title><rect x="424" y="948" width="1" height="15" fill="rgb(222,11,3)"/><text x="427.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1379) (1 samples, 0.11%)</title><rect x="425" y="964" width="1" height="15" fill="rgb(221,98,23)"/><text x="428.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.11%)</title><rect x="425" y="980" width="1" height="15" fill="rgb(215,130,8)"/><text x="428.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 0.34%)</title><rect x="424" y="852" width="4" height="15" fill="rgb(227,213,43)"/><text x="427.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 0.34%)</title><rect x="424" y="868" width="4" height="15" fill="rgb(237,5,19)"/><text x="427.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (3 samples, 0.34%)</title><rect x="424" y="884" width="4" height="15" fill="rgb(225,148,54)"/><text x="427.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (3 samples, 0.34%)</title><rect x="424" y="900" width="4" height="15" fill="rgb(211,196,22)"/><text x="427.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.22%)</title><rect x="425" y="916" width="3" height="15" fill="rgb(216,6,6)"/><text x="428.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.22%)</title><rect x="425" y="932" width="3" height="15" fill="rgb(221,22,44)"/><text x="428.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.22%)</title><rect x="425" y="948" width="3" height="15" fill="rgb(249,83,6)"/><text x="428.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.11%)</title><rect x="426" y="964" width="2" height="15" fill="rgb(238,37,52)"/><text x="429.00" y="974.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;:224) (1 samples, 0.11%)</title><rect x="426" y="980" width="2" height="15" fill="rgb(210,156,7)"/><text x="429.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 0.45%)</title><rect x="424" y="388" width="5" height="15" fill="rgb(215,160,44)"/><text x="427.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="424" y="404" width="5" height="15" fill="rgb(222,102,39)"/><text x="427.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="424" y="420" width="5" height="15" fill="rgb(251,59,36)"/><text x="427.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="424" y="436" width="5" height="15" fill="rgb(242,130,6)"/><text x="427.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="424" y="452" width="5" height="15" fill="rgb(250,105,30)"/><text x="427.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="424" y="468" width="5" height="15" fill="rgb(244,10,20)"/><text x="427.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 0.45%)</title><rect x="424" y="484" width="5" height="15" fill="rgb(243,192,30)"/><text x="427.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="424" y="500" width="5" height="15" fill="rgb(234,104,32)"/><text x="427.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="424" y="516" width="5" height="15" fill="rgb(225,191,4)"/><text x="427.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="424" y="532" width="5" height="15" fill="rgb(241,171,35)"/><text x="427.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="424" y="548" width="5" height="15" fill="rgb(223,161,42)"/><text x="427.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="424" y="564" width="5" height="15" fill="rgb(219,30,53)"/><text x="427.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 0.45%)</title><rect x="424" y="580" width="5" height="15" fill="rgb(240,220,48)"/><text x="427.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="424" y="596" width="5" height="15" fill="rgb(244,115,19)"/><text x="427.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.45%)</title><rect x="424" y="612" width="5" height="15" fill="rgb(244,60,6)"/><text x="427.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="424" y="628" width="5" height="15" fill="rgb(209,115,5)"/><text x="427.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="424" y="644" width="5" height="15" fill="rgb(233,52,20)"/><text x="427.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="424" y="660" width="5" height="15" fill="rgb(206,134,11)"/><text x="427.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="424" y="676" width="5" height="15" fill="rgb(217,138,15)"/><text x="427.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="424" y="692" width="5" height="15" fill="rgb(234,208,44)"/><text x="427.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="424" y="708" width="5" height="15" fill="rgb(226,32,45)"/><text x="427.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 0.45%)</title><rect x="424" y="724" width="5" height="15" fill="rgb(233,33,12)"/><text x="427.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="424" y="740" width="5" height="15" fill="rgb(218,51,26)"/><text x="427.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="424" y="756" width="5" height="15" fill="rgb(243,126,22)"/><text x="427.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="424" y="772" width="5" height="15" fill="rgb(243,4,34)"/><text x="427.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="424" y="788" width="5" height="15" fill="rgb(237,209,52)"/><text x="427.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="424" y="804" width="5" height="15" fill="rgb(207,26,25)"/><text x="427.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.45%)</title><rect x="424" y="820" width="5" height="15" fill="rgb(211,59,3)"/><text x="427.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.45%)</title><rect x="424" y="836" width="5" height="15" fill="rgb(229,146,8)"/><text x="427.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.11%)</title><rect x="428" y="852" width="1" height="15" fill="rgb(229,42,34)"/><text x="431.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.11%)</title><rect x="428" y="868" width="1" height="15" fill="rgb(245,114,21)"/><text x="431.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.11%)</title><rect x="428" y="884" width="1" height="15" fill="rgb(232,164,45)"/><text x="431.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.11%)</title><rect x="428" y="900" width="1" height="15" fill="rgb(253,205,8)"/><text x="431.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.11%)</title><rect x="428" y="916" width="1" height="15" fill="rgb(229,120,1)"/><text x="431.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.11%)</title><rect x="428" y="932" width="1" height="15" fill="rgb(207,64,0)"/><text x="431.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.11%)</title><rect x="428" y="948" width="1" height="15" fill="rgb(243,193,36)"/><text x="431.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.11%)</title><rect x="428" y="964" width="1" height="15" fill="rgb(241,135,33)"/><text x="431.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.11%)</title><rect x="428" y="980" width="1" height="15" fill="rgb(253,154,8)"/><text x="431.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:2) (5 samples, 0.56%)</title><rect x="424" y="148" width="6" height="15" fill="rgb(239,181,29)"/><text x="427.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="424" y="164" width="6" height="15" fill="rgb(205,202,27)"/><text x="427.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.56%)</title><rect x="424" y="180" width="6" height="15" fill="rgb(228,91,30)"/><text x="427.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.56%)</title><rect x="424" y="196" width="6" height="15" fill="rgb(207,162,6)"/><text x="427.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="424" y="212" width="6" height="15" fill="rgb(211,145,16)"/><text x="427.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.56%)</title><rect x="424" y="228" width="6" height="15" fill="rgb(233,5,24)"/><text x="427.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.56%)</title><rect x="424" y="244" width="6" height="15" fill="rgb(222,97,4)"/><text x="427.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.56%)</title><rect x="424" y="260" width="6" height="15" fill="rgb(248,207,51)"/><text x="427.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.56%)</title><rect x="424" y="276" width="6" height="15" fill="rgb(242,141,14)"/><text x="427.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.56%)</title><rect x="424" y="292" width="6" height="15" fill="rgb(242,55,26)"/><text x="427.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="424" y="308" width="6" height="15" fill="rgb(205,161,39)"/><text x="427.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.56%)</title><rect x="424" y="324" width="6" height="15" fill="rgb(229,83,46)"/><text x="427.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.56%)</title><rect x="424" y="340" width="6" height="15" fill="rgb(219,77,16)"/><text x="427.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.56%)</title><rect x="424" y="356" width="6" height="15" fill="rgb(248,162,43)"/><text x="427.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.56%)</title><rect x="424" y="372" width="6" height="15" fill="rgb(245,5,16)"/><text x="427.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:6) (1 samples, 0.11%)</title><rect x="429" y="388" width="1" height="15" fill="rgb(239,94,6)"/><text x="432.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="429" y="404" width="1" height="15" fill="rgb(224,71,53)"/><text x="432.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="429" y="420" width="1" height="15" fill="rgb(220,118,10)"/><text x="432.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="429" y="436" width="1" height="15" fill="rgb(216,147,3)"/><text x="432.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="429" y="452" width="1" height="15" fill="rgb(228,53,44)"/><text x="432.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.11%)</title><rect x="429" y="468" width="1" height="15" fill="rgb(233,201,34)"/><text x="432.00" y="478.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.11%)</title><rect x="429" y="484" width="1" height="15" fill="rgb(212,69,25)"/><text x="432.00" y="494.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="429" y="500" width="1" height="15" fill="rgb(241,40,39)"/><text x="432.00" y="510.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.11%)</title><rect x="430" y="1124" width="1" height="15" fill="rgb(207,53,24)"/><text x="433.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="430" y="1140" width="1" height="15" fill="rgb(247,1,54)"/><text x="433.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="430" y="1156" width="1" height="15" fill="rgb(215,26,13)"/><text x="433.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="430" y="1172" width="1" height="15" fill="rgb(213,40,37)"/><text x="433.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="430" y="1188" width="1" height="15" fill="rgb(228,16,6)"/><text x="433.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="430" y="1204" width="1" height="15" fill="rgb(207,140,24)"/><text x="433.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:30) (1 samples, 0.11%)</title><rect x="430" y="1220" width="1" height="15" fill="rgb(253,142,53)"/><text x="433.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="430" y="1236" width="1" height="15" fill="rgb(226,198,51)"/><text x="433.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="430" y="1252" width="1" height="15" fill="rgb(242,212,34)"/><text x="433.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="430" y="1268" width="1" height="15" fill="rgb(247,34,15)"/><text x="433.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="430" y="1284" width="1" height="15" fill="rgb(229,117,0)"/><text x="433.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="430" y="1300" width="1" height="15" fill="rgb(224,216,37)"/><text x="433.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py:4) (1 samples, 0.11%)</title><rect x="430" y="1316" width="1" height="15" fill="rgb(216,138,17)"/><text x="433.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="430" y="1332" width="1" height="15" fill="rgb(249,187,6)"/><text x="433.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="430" y="1348" width="1" height="15" fill="rgb(212,211,39)"/><text x="433.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="430" y="1364" width="1" height="15" fill="rgb(206,115,19)"/><text x="433.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="430" y="1380" width="1" height="15" fill="rgb(244,29,11)"/><text x="433.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="430" y="1396" width="1" height="15" fill="rgb(217,64,23)"/><text x="433.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:4) (1 samples, 0.11%)</title><rect x="430" y="1412" width="1" height="15" fill="rgb(245,89,3)"/><text x="433.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="430" y="1428" width="1" height="15" fill="rgb(232,190,11)"/><text x="433.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="430" y="1444" width="1" height="15" fill="rgb(211,212,31)"/><text x="433.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="430" y="1460" width="1" height="15" fill="rgb(250,176,23)"/><text x="433.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="430" y="1476" width="1" height="15" fill="rgb(209,155,44)"/><text x="433.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="430" y="1492" width="1" height="15" fill="rgb(243,32,32)"/><text x="433.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py:113) (1 samples, 0.11%)</title><rect x="430" y="1508" width="1" height="15" fill="rgb(232,28,20)"/><text x="433.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="430" y="1524" width="1" height="15" fill="rgb(237,117,51)"/><text x="433.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="430" y="1540" width="1" height="15" fill="rgb(211,219,38)"/><text x="433.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="430" y="1556" width="1" height="15" fill="rgb(236,42,27)"/><text x="433.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="430" y="1572" width="1" height="15" fill="rgb(229,214,29)"/><text x="433.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="430" y="1588" width="1" height="15" fill="rgb(224,205,53)"/><text x="433.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/__init__.py:6) (1 samples, 0.11%)</title><rect x="430" y="1604" width="1" height="15" fill="rgb(254,90,37)"/><text x="433.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="430" y="1620" width="1" height="15" fill="rgb(205,150,38)"/><text x="433.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="430" y="1636" width="1" height="15" fill="rgb(250,199,10)"/><text x="433.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="430" y="1652" width="1" height="15" fill="rgb(237,24,28)"/><text x="433.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="430" y="1668" width="1" height="15" fill="rgb(207,225,3)"/><text x="433.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="430" y="1684" width="1" height="15" fill="rgb(248,64,24)"/><text x="433.00" y="1694.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/iterative.py:15) (1 samples, 0.11%)</title><rect x="430" y="1700" width="1" height="15" fill="rgb(238,186,49)"/><text x="433.00" y="1710.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="430" y="1716" width="1" height="15" fill="rgb(211,162,46)"/><text x="433.00" y="1726.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="430" y="1732" width="1" height="15" fill="rgb(247,171,5)"/><text x="433.00" y="1742.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="430" y="1748" width="1" height="15" fill="rgb(241,16,15)"/><text x="433.00" y="1758.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="430" y="1764" width="1" height="15" fill="rgb(214,144,53)"/><text x="433.00" y="1774.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="430" y="1780" width="1" height="15" fill="rgb(218,3,26)"/><text x="433.00" y="1790.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/_threadsafety.py:5) (1 samples, 0.11%)</title><rect x="430" y="1796" width="1" height="15" fill="rgb(250,68,12)"/><text x="433.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="430" y="1812" width="1" height="15" fill="rgb(230,127,47)"/><text x="433.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="430" y="1828" width="1" height="15" fill="rgb(209,45,39)"/><text x="433.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="430" y="1844" width="1" height="15" fill="rgb(241,23,38)"/><text x="433.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="430" y="1860" width="1" height="15" fill="rgb(254,9,20)"/><text x="433.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="430" y="1876" width="1" height="15" fill="rgb(248,127,26)"/><text x="433.00" y="1886.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/decorator.py:81) (1 samples, 0.11%)</title><rect x="430" y="1892" width="1" height="15" fill="rgb(235,76,9)"/><text x="433.00" y="1902.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.11%)</title><rect x="430" y="1908" width="1" height="15" fill="rgb(205,214,25)"/><text x="433.00" y="1918.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.11%)</title><rect x="430" y="1924" width="1" height="15" fill="rgb(246,198,36)"/><text x="433.00" y="1934.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.11%)</title><rect x="430" y="1940" width="1" height="15" fill="rgb(205,51,10)"/><text x="433.00" y="1950.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.11%)</title><rect x="430" y="1956" width="1" height="15" fill="rgb(207,223,23)"/><text x="433.00" y="1966.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.11%)</title><rect x="430" y="1972" width="1" height="15" fill="rgb(206,127,32)"/><text x="433.00" y="1982.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.11%)</title><rect x="430" y="1988" width="1" height="15" fill="rgb(217,163,37)"/><text x="433.00" y="1998.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.11%)</title><rect x="430" y="2004" width="1" height="15" fill="rgb(234,59,25)"/><text x="433.00" y="2014.50"></text></g><g><title>_optimize_charset (sre_compile.py:355) (1 samples, 0.11%)</title><rect x="430" y="2020" width="1" height="15" fill="rgb(209,39,7)"/><text x="433.00" y="2030.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:392) (1 samples, 0.11%)</title><rect x="431" y="1124" width="2" height="15" fill="rgb(230,214,40)"/><text x="434.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="431" y="1140" width="2" height="15" fill="rgb(254,72,26)"/><text x="434.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="431" y="1156" width="2" height="15" fill="rgb(218,221,45)"/><text x="434.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="431" y="1172" width="2" height="15" fill="rgb(211,207,19)"/><text x="434.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="431" y="1188" width="2" height="15" fill="rgb(232,165,29)"/><text x="434.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.11%)</title><rect x="431" y="1204" width="2" height="15" fill="rgb(247,73,20)"/><text x="434.00" y="1214.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.11%)</title><rect x="431" y="1220" width="2" height="15" fill="rgb(246,96,27)"/><text x="434.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.34%)</title><rect x="430" y="180" width="4" height="15" fill="rgb(218,55,6)"/><text x="433.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="430" y="196" width="4" height="15" fill="rgb(238,142,40)"/><text x="433.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="430" y="212" width="4" height="15" fill="rgb(211,118,30)"/><text x="433.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="430" y="228" width="4" height="15" fill="rgb(234,107,51)"/><text x="433.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="430" y="244" width="4" height="15" fill="rgb(208,124,31)"/><text x="433.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="430" y="260" width="4" height="15" fill="rgb(212,8,29)"/><text x="433.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="430" y="276" width="4" height="15" fill="rgb(219,19,44)"/><text x="433.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.34%)</title><rect x="430" y="292" width="4" height="15" fill="rgb(230,173,12)"/><text x="433.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="430" y="308" width="4" height="15" fill="rgb(236,61,19)"/><text x="433.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="430" y="324" width="4" height="15" fill="rgb(247,3,7)"/><text x="433.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="430" y="340" width="4" height="15" fill="rgb(213,176,4)"/><text x="433.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="430" y="356" width="4" height="15" fill="rgb(231,199,20)"/><text x="433.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="430" y="372" width="4" height="15" fill="rgb(246,82,32)"/><text x="433.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.34%)</title><rect x="430" y="388" width="4" height="15" fill="rgb(235,16,0)"/><text x="433.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="430" y="404" width="4" height="15" fill="rgb(215,36,40)"/><text x="433.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="430" y="420" width="4" height="15" fill="rgb(236,83,50)"/><text x="433.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="430" y="436" width="4" height="15" fill="rgb(224,101,50)"/><text x="433.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="430" y="452" width="4" height="15" fill="rgb(213,163,10)"/><text x="433.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="430" y="468" width="4" height="15" fill="rgb(252,2,11)"/><text x="433.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 0.34%)</title><rect x="430" y="484" width="4" height="15" fill="rgb(251,174,19)"/><text x="433.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="430" y="500" width="4" height="15" fill="rgb(245,110,18)"/><text x="433.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="430" y="516" width="4" height="15" fill="rgb(234,210,18)"/><text x="433.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="430" y="532" width="4" height="15" fill="rgb(235,6,3)"/><text x="433.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="430" y="548" width="4" height="15" fill="rgb(245,102,49)"/><text x="433.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="430" y="564" width="4" height="15" fill="rgb(231,159,1)"/><text x="433.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.34%)</title><rect x="430" y="580" width="4" height="15" fill="rgb(252,21,43)"/><text x="433.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="430" y="596" width="4" height="15" fill="rgb(238,122,2)"/><text x="433.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="430" y="612" width="4" height="15" fill="rgb(230,33,46)"/><text x="433.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="430" y="628" width="4" height="15" fill="rgb(254,197,13)"/><text x="433.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="430" y="644" width="4" height="15" fill="rgb(211,12,52)"/><text x="433.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="430" y="660" width="4" height="15" fill="rgb(231,145,50)"/><text x="433.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 0.34%)</title><rect x="430" y="676" width="4" height="15" fill="rgb(243,183,52)"/><text x="433.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="430" y="692" width="4" height="15" fill="rgb(217,192,45)"/><text x="433.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="430" y="708" width="4" height="15" fill="rgb(221,91,36)"/><text x="433.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="430" y="724" width="4" height="15" fill="rgb(251,147,41)"/><text x="433.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="430" y="740" width="4" height="15" fill="rgb(209,189,53)"/><text x="433.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="430" y="756" width="4" height="15" fill="rgb(239,204,5)"/><text x="433.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (3 samples, 0.34%)</title><rect x="430" y="772" width="4" height="15" fill="rgb(232,177,54)"/><text x="433.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.34%)</title><rect x="430" y="788" width="4" height="15" fill="rgb(222,29,48)"/><text x="433.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="430" y="804" width="4" height="15" fill="rgb(206,48,36)"/><text x="433.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="430" y="820" width="4" height="15" fill="rgb(210,185,6)"/><text x="433.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="430" y="836" width="4" height="15" fill="rgb(230,183,2)"/><text x="433.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="430" y="852" width="4" height="15" fill="rgb(242,228,30)"/><text x="433.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="430" y="868" width="4" height="15" fill="rgb(217,175,50)"/><text x="433.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="430" y="884" width="4" height="15" fill="rgb(228,186,48)"/><text x="433.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (3 samples, 0.34%)</title><rect x="430" y="900" width="4" height="15" fill="rgb(244,222,12)"/><text x="433.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="430" y="916" width="4" height="15" fill="rgb(247,108,21)"/><text x="433.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="430" y="932" width="4" height="15" fill="rgb(250,9,17)"/><text x="433.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="430" y="948" width="4" height="15" fill="rgb(237,68,0)"/><text x="433.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="430" y="964" width="4" height="15" fill="rgb(217,49,34)"/><text x="433.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="430" y="980" width="4" height="15" fill="rgb(246,96,41)"/><text x="433.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (3 samples, 0.34%)</title><rect x="430" y="996" width="4" height="15" fill="rgb(234,82,26)"/><text x="433.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.34%)</title><rect x="430" y="1012" width="4" height="15" fill="rgb(245,228,37)"/><text x="433.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="430" y="1028" width="4" height="15" fill="rgb(226,121,53)"/><text x="433.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="430" y="1044" width="4" height="15" fill="rgb(229,170,3)"/><text x="433.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="430" y="1060" width="4" height="15" fill="rgb(223,210,39)"/><text x="433.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="430" y="1076" width="4" height="15" fill="rgb(242,213,1)"/><text x="433.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="430" y="1092" width="4" height="15" fill="rgb(212,7,10)"/><text x="433.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="430" y="1108" width="4" height="15" fill="rgb(218,80,32)"/><text x="433.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:411) (1 samples, 0.11%)</title><rect x="433" y="1124" width="1" height="15" fill="rgb(208,106,43)"/><text x="436.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="433" y="1140" width="1" height="15" fill="rgb(218,168,37)"/><text x="436.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="433" y="1156" width="1" height="15" fill="rgb(211,150,3)"/><text x="436.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="433" y="1172" width="1" height="15" fill="rgb(217,154,31)"/><text x="436.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="433" y="1188" width="1" height="15" fill="rgb(250,80,8)"/><text x="436.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="433" y="1204" width="1" height="15" fill="rgb(208,168,49)"/><text x="436.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_shgo.py:11) (1 samples, 0.11%)</title><rect x="433" y="1220" width="1" height="15" fill="rgb(244,188,17)"/><text x="436.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="433" y="1236" width="1" height="15" fill="rgb(209,206,20)"/><text x="436.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="433" y="1252" width="1" height="15" fill="rgb(213,81,42)"/><text x="436.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="433" y="1268" width="1" height="15" fill="rgb(238,35,3)"/><text x="436.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="433" y="1284" width="1" height="15" fill="rgb(222,78,14)"/><text x="436.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="433" y="1300" width="1" height="15" fill="rgb(224,181,50)"/><text x="436.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="433" y="1316" width="1" height="15" fill="rgb(215,154,17)"/><text x="436.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="433" y="1332" width="1" height="15" fill="rgb(233,185,39)"/><text x="436.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/__init__.py:99) (1 samples, 0.11%)</title><rect x="433" y="1348" width="1" height="15" fill="rgb(252,117,52)"/><text x="436.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="433" y="1364" width="1" height="15" fill="rgb(232,131,38)"/><text x="436.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.11%)</title><rect x="433" y="1380" width="1" height="15" fill="rgb(210,215,18)"/><text x="436.00" y="1390.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.11%)</title><rect x="433" y="1396" width="1" height="15" fill="rgb(230,1,43)"/><text x="436.00" y="1406.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.11%)</title><rect x="433" y="1412" width="1" height="15" fill="rgb(249,184,50)"/><text x="436.00" y="1422.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.11%)</title><rect x="433" y="1428" width="1" height="15" fill="rgb(244,161,29)"/><text x="436.00" y="1438.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1368) (1 samples, 0.11%)</title><rect x="433" y="1444" width="1" height="15" fill="rgb(215,69,41)"/><text x="436.00" y="1454.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;:1408) (1 samples, 0.11%)</title><rect x="433" y="1460" width="1" height="15" fill="rgb(225,134,13)"/><text x="436.00" y="1470.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.11%)</title><rect x="433" y="1476" width="1" height="15" fill="rgb(227,216,8)"/><text x="436.00" y="1486.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="433" y="1492" width="1" height="15" fill="rgb(216,189,25)"/><text x="436.00" y="1502.50"></text></g><g><title>0x7f46ae36f237 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="433" y="1508" width="1" height="15" fill="rgb(226,185,13)"/><text x="436.00" y="1518.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:4) (4 samples, 0.45%)</title><rect x="430" y="148" width="5" height="15" fill="rgb(207,187,6)"/><text x="433.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="430" y="164" width="5" height="15" fill="rgb(243,98,29)"/><text x="433.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="434" y="180" width="1" height="15" fill="rgb(233,17,29)"/><text x="437.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="434" y="196" width="1" height="15" fill="rgb(216,50,41)"/><text x="437.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="434" y="212" width="1" height="15" fill="rgb(235,110,15)"/><text x="437.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="434" y="228" width="1" height="15" fill="rgb(212,223,28)"/><text x="437.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (1 samples, 0.11%)</title><rect x="434" y="244" width="1" height="15" fill="rgb(223,85,26)"/><text x="437.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="434" y="260" width="1" height="15" fill="rgb(236,69,30)"/><text x="437.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="434" y="276" width="1" height="15" fill="rgb(223,7,21)"/><text x="437.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="434" y="292" width="1" height="15" fill="rgb(236,66,31)"/><text x="437.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="434" y="308" width="1" height="15" fill="rgb(226,18,7)"/><text x="437.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="434" y="324" width="1" height="15" fill="rgb(218,108,21)"/><text x="437.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:56) (1 samples, 0.11%)</title><rect x="434" y="340" width="1" height="15" fill="rgb(237,84,41)"/><text x="437.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="434" y="356" width="1" height="15" fill="rgb(229,98,9)"/><text x="437.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="434" y="372" width="1" height="15" fill="rgb(208,51,33)"/><text x="437.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="434" y="388" width="1" height="15" fill="rgb(209,184,45)"/><text x="437.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="434" y="404" width="1" height="15" fill="rgb(253,136,3)"/><text x="437.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="434" y="420" width="1" height="15" fill="rgb(242,128,39)"/><text x="437.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (1 samples, 0.11%)</title><rect x="434" y="436" width="1" height="15" fill="rgb(229,209,14)"/><text x="437.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="434" y="452" width="1" height="15" fill="rgb(223,92,53)"/><text x="437.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="434" y="468" width="1" height="15" fill="rgb(226,42,3)"/><text x="437.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="434" y="484" width="1" height="15" fill="rgb(253,139,36)"/><text x="437.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="434" y="500" width="1" height="15" fill="rgb(215,228,43)"/><text x="437.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="434" y="516" width="1" height="15" fill="rgb(223,170,37)"/><text x="437.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:40) (1 samples, 0.11%)</title><rect x="434" y="532" width="1" height="15" fill="rgb(234,55,17)"/><text x="437.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="434" y="548" width="1" height="15" fill="rgb(220,131,9)"/><text x="437.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="434" y="564" width="1" height="15" fill="rgb(244,138,45)"/><text x="437.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="434" y="580" width="1" height="15" fill="rgb(243,200,37)"/><text x="437.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="434" y="596" width="1" height="15" fill="rgb(225,214,3)"/><text x="437.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="434" y="612" width="1" height="15" fill="rgb(215,166,26)"/><text x="437.00" y="622.50"></text></g><g><title>0x7f46881f6373 (?) (1 samples, 0.11%)</title><rect x="434" y="628" width="1" height="15" fill="rgb(250,177,53)"/><text x="437.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="434" y="644" width="1" height="15" fill="rgb(229,205,42)"/><text x="437.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="434" y="660" width="1" height="15" fill="rgb(220,216,0)"/><text x="437.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="434" y="676" width="1" height="15" fill="rgb(234,52,37)"/><text x="437.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="434" y="692" width="1" height="15" fill="rgb(244,215,9)"/><text x="437.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="434" y="708" width="1" height="15" fill="rgb(219,154,28)"/><text x="437.00" y="718.50"></text></g><g><title>0x7f4687fb9eea (?) (1 samples, 0.11%)</title><rect x="434" y="724" width="1" height="15" fill="rgb(225,158,22)"/><text x="437.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="434" y="740" width="1" height="15" fill="rgb(232,91,40)"/><text x="437.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="434" y="756" width="1" height="15" fill="rgb(234,157,8)"/><text x="437.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="434" y="772" width="1" height="15" fill="rgb(221,189,34)"/><text x="437.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="434" y="788" width="1" height="15" fill="rgb(230,184,22)"/><text x="437.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="434" y="804" width="1" height="15" fill="rgb(217,223,24)"/><text x="437.00" y="814.50"></text></g><g><title>0x7f4687d52887 (?) (1 samples, 0.11%)</title><rect x="434" y="820" width="1" height="15" fill="rgb(243,149,6)"/><text x="437.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="434" y="836" width="1" height="15" fill="rgb(248,35,16)"/><text x="437.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="434" y="852" width="1" height="15" fill="rgb(225,79,30)"/><text x="437.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="434" y="868" width="1" height="15" fill="rgb(220,146,19)"/><text x="437.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="434" y="884" width="1" height="15" fill="rgb(208,98,6)"/><text x="437.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="434" y="900" width="1" height="15" fill="rgb(242,22,50)"/><text x="437.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="434" y="916" width="1" height="15" fill="rgb(208,139,3)"/><text x="437.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="434" y="932" width="1" height="15" fill="rgb(221,206,39)"/><text x="437.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="434" y="948" width="1" height="15" fill="rgb(219,135,6)"/><text x="437.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (1 samples, 0.11%)</title><rect x="434" y="964" width="1" height="15" fill="rgb(252,15,54)"/><text x="437.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="434" y="980" width="1" height="15" fill="rgb(253,101,10)"/><text x="437.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="434" y="996" width="1" height="15" fill="rgb(216,173,34)"/><text x="437.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="434" y="1012" width="1" height="15" fill="rgb(211,82,0)"/><text x="437.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="434" y="1028" width="1" height="15" fill="rgb(206,189,19)"/><text x="437.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="434" y="1044" width="1" height="15" fill="rgb(251,57,23)"/><text x="437.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (1 samples, 0.11%)</title><rect x="434" y="1060" width="1" height="15" fill="rgb(232,39,52)"/><text x="437.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="434" y="1076" width="1" height="15" fill="rgb(210,57,33)"/><text x="437.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="434" y="1092" width="1" height="15" fill="rgb(233,167,54)"/><text x="437.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="434" y="1108" width="1" height="15" fill="rgb(247,91,45)"/><text x="437.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="434" y="1124" width="1" height="15" fill="rgb(245,149,45)"/><text x="437.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="434" y="1140" width="1" height="15" fill="rgb(246,21,23)"/><text x="437.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:11) (1 samples, 0.11%)</title><rect x="434" y="1156" width="1" height="15" fill="rgb(249,72,20)"/><text x="437.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="434" y="1172" width="1" height="15" fill="rgb(239,228,30)"/><text x="437.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="434" y="1188" width="1" height="15" fill="rgb(234,150,34)"/><text x="437.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="434" y="1204" width="1" height="15" fill="rgb(209,110,17)"/><text x="437.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="434" y="1220" width="1" height="15" fill="rgb(210,105,24)"/><text x="437.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="434" y="1236" width="1" height="15" fill="rgb(221,175,9)"/><text x="437.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py:11) (1 samples, 0.11%)</title><rect x="434" y="1252" width="1" height="15" fill="rgb(229,98,22)"/><text x="437.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="434" y="1268" width="1" height="15" fill="rgb(208,11,8)"/><text x="437.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="434" y="1284" width="1" height="15" fill="rgb(246,11,14)"/><text x="437.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="434" y="1300" width="1" height="15" fill="rgb(240,116,8)"/><text x="437.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="434" y="1316" width="1" height="15" fill="rgb(235,209,49)"/><text x="437.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="434" y="1332" width="1" height="15" fill="rgb(242,107,45)"/><text x="437.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:19) (1 samples, 0.11%)</title><rect x="434" y="1348" width="1" height="15" fill="rgb(245,213,45)"/><text x="437.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="434" y="1364" width="1" height="15" fill="rgb(243,139,46)"/><text x="437.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="434" y="1380" width="1" height="15" fill="rgb(236,25,53)"/><text x="437.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="434" y="1396" width="1" height="15" fill="rgb(243,83,23)"/><text x="437.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.11%)</title><rect x="434" y="1412" width="1" height="15" fill="rgb(234,98,21)"/><text x="437.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="434" y="1428" width="1" height="15" fill="rgb(251,73,46)"/><text x="437.00" y="1438.50"></text></g><g><title>0x7f468637622a (?) (1 samples, 0.11%)</title><rect x="434" y="1444" width="1" height="15" fill="rgb(214,202,17)"/><text x="437.00" y="1454.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.11%)</title><rect x="435" y="244" width="2" height="15" fill="rgb(231,77,0)"/><text x="438.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="260" width="2" height="15" fill="rgb(231,47,36)"/><text x="438.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="435" y="276" width="2" height="15" fill="rgb(237,82,53)"/><text x="438.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="435" y="292" width="2" height="15" fill="rgb(205,193,38)"/><text x="438.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="435" y="308" width="2" height="15" fill="rgb(224,103,7)"/><text x="438.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="324" width="2" height="15" fill="rgb(238,128,29)"/><text x="438.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.11%)</title><rect x="435" y="340" width="2" height="15" fill="rgb(212,55,8)"/><text x="438.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="356" width="2" height="15" fill="rgb(208,67,22)"/><text x="438.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="435" y="372" width="2" height="15" fill="rgb(250,124,17)"/><text x="438.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="388" width="2" height="15" fill="rgb(235,145,23)"/><text x="438.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="404" width="2" height="15" fill="rgb(235,55,42)"/><text x="438.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="435" y="420" width="2" height="15" fill="rgb(214,111,3)"/><text x="438.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="435" y="436" width="2" height="15" fill="rgb(225,97,17)"/><text x="438.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="435" y="452" width="2" height="15" fill="rgb(244,13,12)"/><text x="438.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="468" width="2" height="15" fill="rgb(225,41,20)"/><text x="438.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.11%)</title><rect x="435" y="484" width="2" height="15" fill="rgb(245,41,33)"/><text x="438.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="500" width="2" height="15" fill="rgb(252,66,23)"/><text x="438.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="435" y="516" width="2" height="15" fill="rgb(205,57,5)"/><text x="438.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="435" y="532" width="2" height="15" fill="rgb(218,197,6)"/><text x="438.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="435" y="548" width="2" height="15" fill="rgb(240,121,28)"/><text x="438.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="564" width="2" height="15" fill="rgb(210,218,15)"/><text x="438.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.11%)</title><rect x="435" y="580" width="2" height="15" fill="rgb(243,133,11)"/><text x="438.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="596" width="2" height="15" fill="rgb(216,23,49)"/><text x="438.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="435" y="612" width="2" height="15" fill="rgb(226,226,42)"/><text x="438.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="628" width="2" height="15" fill="rgb(220,52,3)"/><text x="438.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="644" width="2" height="15" fill="rgb(223,147,37)"/><text x="438.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="435" y="660" width="2" height="15" fill="rgb(249,208,23)"/><text x="438.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="435" y="676" width="2" height="15" fill="rgb(223,133,16)"/><text x="438.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="435" y="692" width="2" height="15" fill="rgb(209,152,40)"/><text x="438.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="708" width="2" height="15" fill="rgb(220,40,42)"/><text x="438.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.11%)</title><rect x="435" y="724" width="2" height="15" fill="rgb(216,166,12)"/><text x="438.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="740" width="2" height="15" fill="rgb(214,43,32)"/><text x="438.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="435" y="756" width="2" height="15" fill="rgb(246,10,36)"/><text x="438.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="435" y="772" width="2" height="15" fill="rgb(213,205,20)"/><text x="438.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="435" y="788" width="2" height="15" fill="rgb(238,147,33)"/><text x="438.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="804" width="2" height="15" fill="rgb(247,195,49)"/><text x="438.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.11%)</title><rect x="435" y="820" width="2" height="15" fill="rgb(238,104,0)"/><text x="438.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="836" width="2" height="15" fill="rgb(246,150,6)"/><text x="438.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="435" y="852" width="2" height="15" fill="rgb(240,123,27)"/><text x="438.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="435" y="868" width="2" height="15" fill="rgb(212,79,14)"/><text x="438.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="435" y="884" width="2" height="15" fill="rgb(246,65,10)"/><text x="438.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="900" width="2" height="15" fill="rgb(234,21,16)"/><text x="438.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.11%)</title><rect x="435" y="916" width="2" height="15" fill="rgb(249,114,42)"/><text x="438.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="932" width="2" height="15" fill="rgb(219,217,5)"/><text x="438.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="435" y="948" width="2" height="15" fill="rgb(244,57,53)"/><text x="438.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="964" width="2" height="15" fill="rgb(212,215,8)"/><text x="438.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="980" width="2" height="15" fill="rgb(228,50,14)"/><text x="438.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="435" y="996" width="2" height="15" fill="rgb(238,225,6)"/><text x="438.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="435" y="1012" width="2" height="15" fill="rgb(245,211,37)"/><text x="438.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="435" y="1028" width="2" height="15" fill="rgb(224,196,29)"/><text x="438.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="1044" width="2" height="15" fill="rgb(232,56,10)"/><text x="438.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.11%)</title><rect x="435" y="1060" width="2" height="15" fill="rgb(245,88,51)"/><text x="438.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="1076" width="2" height="15" fill="rgb(216,164,13)"/><text x="438.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="435" y="1092" width="2" height="15" fill="rgb(248,126,42)"/><text x="438.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="435" y="1108" width="2" height="15" fill="rgb(243,118,51)"/><text x="438.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="435" y="1124" width="2" height="15" fill="rgb(217,90,19)"/><text x="438.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="1140" width="2" height="15" fill="rgb(247,62,49)"/><text x="438.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/flog.py:38) (1 samples, 0.11%)</title><rect x="435" y="1156" width="2" height="15" fill="rgb(211,179,49)"/><text x="438.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="1172" width="2" height="15" fill="rgb(206,142,34)"/><text x="438.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="435" y="1188" width="2" height="15" fill="rgb(209,210,7)"/><text x="438.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="435" y="1204" width="2" height="15" fill="rgb(230,161,40)"/><text x="438.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="435" y="1220" width="2" height="15" fill="rgb(234,160,12)"/><text x="438.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="435" y="1236" width="2" height="15" fill="rgb(250,155,40)"/><text x="438.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/flog_fake_classes.py:7) (1 samples, 0.11%)</title><rect x="435" y="1252" width="2" height="15" fill="rgb(212,65,17)"/><text x="438.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="435" y="1268" width="2" height="15" fill="rgb(209,204,1)"/><text x="438.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="435" y="1284" width="2" height="15" fill="rgb(248,116,28)"/><text x="438.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="435" y="1300" width="2" height="15" fill="rgb(233,176,7)"/><text x="438.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="435" y="1316" width="2" height="15" fill="rgb(239,28,40)"/><text x="438.00" y="1326.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:854) (1 samples, 0.11%)</title><rect x="435" y="1332" width="2" height="15" fill="rgb(240,187,6)"/><text x="438.00" y="1342.50"></text></g><g><title>root (&lt;template&gt;:122) (1 samples, 0.11%)</title><rect x="437" y="1572" width="1" height="15" fill="rgb(238,154,1)"/><text x="440.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:245) (1 samples, 0.11%)</title><rect x="437" y="1588" width="1" height="15" fill="rgb(243,83,3)"/><text x="440.00" y="1598.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.22%)</title><rect x="437" y="676" width="2" height="15" fill="rgb(227,221,5)"/><text x="440.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="692" width="2" height="15" fill="rgb(239,114,38)"/><text x="440.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="437" y="708" width="2" height="15" fill="rgb(229,9,47)"/><text x="440.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="437" y="724" width="2" height="15" fill="rgb(249,226,24)"/><text x="440.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="437" y="740" width="2" height="15" fill="rgb(254,17,38)"/><text x="440.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="756" width="2" height="15" fill="rgb(243,75,27)"/><text x="440.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.22%)</title><rect x="437" y="772" width="2" height="15" fill="rgb(227,92,16)"/><text x="440.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="788" width="2" height="15" fill="rgb(252,203,9)"/><text x="440.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="437" y="804" width="2" height="15" fill="rgb(234,161,30)"/><text x="440.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="437" y="820" width="2" height="15" fill="rgb(226,64,40)"/><text x="440.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="437" y="836" width="2" height="15" fill="rgb(208,227,51)"/><text x="440.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="852" width="2" height="15" fill="rgb(226,149,47)"/><text x="440.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.22%)</title><rect x="437" y="868" width="2" height="15" fill="rgb(210,158,9)"/><text x="440.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="884" width="2" height="15" fill="rgb(239,47,15)"/><text x="440.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.22%)</title><rect x="437" y="900" width="2" height="15" fill="rgb(213,89,38)"/><text x="440.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="916" width="2" height="15" fill="rgb(237,98,6)"/><text x="440.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="932" width="2" height="15" fill="rgb(226,16,26)"/><text x="440.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="437" y="948" width="2" height="15" fill="rgb(218,36,9)"/><text x="440.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="437" y="964" width="2" height="15" fill="rgb(212,215,11)"/><text x="440.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="437" y="980" width="2" height="15" fill="rgb(244,196,30)"/><text x="440.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="996" width="2" height="15" fill="rgb(237,171,40)"/><text x="440.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.22%)</title><rect x="437" y="1012" width="2" height="15" fill="rgb(224,94,25)"/><text x="440.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="1028" width="2" height="15" fill="rgb(227,225,21)"/><text x="440.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="437" y="1044" width="2" height="15" fill="rgb(220,35,10)"/><text x="440.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="437" y="1060" width="2" height="15" fill="rgb(215,110,29)"/><text x="440.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="437" y="1076" width="2" height="15" fill="rgb(241,222,31)"/><text x="440.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="1092" width="2" height="15" fill="rgb(218,173,0)"/><text x="440.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.22%)</title><rect x="437" y="1108" width="2" height="15" fill="rgb(237,219,8)"/><text x="440.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.22%)</title><rect x="437" y="1124" width="2" height="15" fill="rgb(242,125,20)"/><text x="440.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="1140" width="2" height="15" fill="rgb(239,115,33)"/><text x="440.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="1156" width="2" height="15" fill="rgb(233,165,38)"/><text x="440.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="437" y="1172" width="2" height="15" fill="rgb(210,119,29)"/><text x="440.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="437" y="1188" width="2" height="15" fill="rgb(247,88,25)"/><text x="440.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="437" y="1204" width="2" height="15" fill="rgb(246,36,33)"/><text x="440.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="1220" width="2" height="15" fill="rgb(240,4,10)"/><text x="440.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.22%)</title><rect x="437" y="1236" width="2" height="15" fill="rgb(205,200,28)"/><text x="440.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.22%)</title><rect x="437" y="1252" width="2" height="15" fill="rgb(219,218,10)"/><text x="440.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="1268" width="2" height="15" fill="rgb(216,183,27)"/><text x="440.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="1284" width="2" height="15" fill="rgb(254,168,21)"/><text x="440.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="437" y="1300" width="2" height="15" fill="rgb(242,80,28)"/><text x="440.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="437" y="1316" width="2" height="15" fill="rgb(215,156,21)"/><text x="440.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="437" y="1332" width="2" height="15" fill="rgb(215,185,4)"/><text x="440.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="1348" width="2" height="15" fill="rgb(234,196,12)"/><text x="440.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.22%)</title><rect x="437" y="1364" width="2" height="15" fill="rgb(226,56,20)"/><text x="440.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="437" y="1380" width="2" height="15" fill="rgb(230,51,39)"/><text x="440.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="437" y="1396" width="2" height="15" fill="rgb(232,173,50)"/><text x="440.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="437" y="1412" width="2" height="15" fill="rgb(217,5,48)"/><text x="440.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="437" y="1428" width="2" height="15" fill="rgb(209,12,23)"/><text x="440.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="437" y="1444" width="2" height="15" fill="rgb(245,95,7)"/><text x="440.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.22%)</title><rect x="437" y="1460" width="2" height="15" fill="rgb(227,12,40)"/><text x="440.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.22%)</title><rect x="437" y="1476" width="2" height="15" fill="rgb(208,24,29)"/><text x="440.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.22%)</title><rect x="437" y="1492" width="2" height="15" fill="rgb(246,13,35)"/><text x="440.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.22%)</title><rect x="437" y="1508" width="2" height="15" fill="rgb(249,131,22)"/><text x="440.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.22%)</title><rect x="437" y="1524" width="2" height="15" fill="rgb(243,73,48)"/><text x="440.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.22%)</title><rect x="437" y="1540" width="2" height="15" fill="rgb(216,162,42)"/><text x="440.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.22%)</title><rect x="437" y="1556" width="2" height="15" fill="rgb(252,133,48)"/><text x="440.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:84) (1 samples, 0.11%)</title><rect x="438" y="1572" width="1" height="15" fill="rgb(215,30,3)"/><text x="441.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.11%)</title><rect x="438" y="1588" width="1" height="15" fill="rgb(207,123,32)"/><text x="441.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="438" y="1604" width="1" height="15" fill="rgb(222,136,17)"/><text x="441.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="438" y="1620" width="1" height="15" fill="rgb(228,17,12)"/><text x="441.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="438" y="1636" width="1" height="15" fill="rgb(234,149,52)"/><text x="441.00" y="1646.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="438" y="1652" width="1" height="15" fill="rgb(240,131,19)"/><text x="441.00" y="1662.50"></text></g><g><title>pybind11::detail::keep_alive_impl (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="438" y="1668" width="1" height="15" fill="rgb(226,211,32)"/><text x="441.00" y="1678.50"></text></g><g><title>std::_Hashtable&lt;_object const*, std::pair&lt;_object const* const, std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;_object const* const, std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;_object const*&gt;, std::hash&lt;_object const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="438" y="1684" width="1" height="15" fill="rgb(205,162,27)"/><text x="441.00" y="1694.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:4) (14 samples, 1.57%)</title><rect x="422" y="52" width="19" height="15" fill="rgb(233,167,2)"/><text x="425.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 1.57%)</title><rect x="422" y="68" width="19" height="15" fill="rgb(230,59,9)"/><text x="425.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 1.57%)</title><rect x="422" y="84" width="19" height="15" fill="rgb(212,47,5)"/><text x="425.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 1.57%)</title><rect x="422" y="100" width="19" height="15" fill="rgb(235,56,7)"/><text x="425.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 1.57%)</title><rect x="422" y="116" width="19" height="15" fill="rgb(231,99,16)"/><text x="425.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 1.57%)</title><rect x="422" y="132" width="19" height="15" fill="rgb(238,79,36)"/><text x="425.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:7) (4 samples, 0.45%)</title><rect x="435" y="148" width="6" height="15" fill="rgb(247,99,40)"/><text x="438.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="435" y="164" width="6" height="15" fill="rgb(240,97,37)"/><text x="438.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="435" y="180" width="6" height="15" fill="rgb(238,47,0)"/><text x="438.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="435" y="196" width="6" height="15" fill="rgb(220,76,36)"/><text x="438.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="435" y="212" width="6" height="15" fill="rgb(211,10,27)"/><text x="438.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="435" y="228" width="6" height="15" fill="rgb(215,60,14)"/><text x="438.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.34%)</title><rect x="437" y="244" width="4" height="15" fill="rgb(218,173,7)"/><text x="440.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="437" y="260" width="4" height="15" fill="rgb(221,212,47)"/><text x="440.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="437" y="276" width="4" height="15" fill="rgb(228,6,48)"/><text x="440.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="437" y="292" width="4" height="15" fill="rgb(232,183,51)"/><text x="440.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="437" y="308" width="4" height="15" fill="rgb(240,227,40)"/><text x="440.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="437" y="324" width="4" height="15" fill="rgb(227,216,41)"/><text x="440.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.34%)</title><rect x="437" y="340" width="4" height="15" fill="rgb(239,16,4)"/><text x="440.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="437" y="356" width="4" height="15" fill="rgb(249,194,33)"/><text x="440.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="437" y="372" width="4" height="15" fill="rgb(209,142,34)"/><text x="440.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="437" y="388" width="4" height="15" fill="rgb(248,36,2)"/><text x="440.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="437" y="404" width="4" height="15" fill="rgb(242,191,21)"/><text x="440.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="437" y="420" width="4" height="15" fill="rgb(246,55,30)"/><text x="440.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.34%)</title><rect x="437" y="436" width="4" height="15" fill="rgb(234,9,40)"/><text x="440.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="437" y="452" width="4" height="15" fill="rgb(231,62,54)"/><text x="440.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.34%)</title><rect x="437" y="468" width="4" height="15" fill="rgb(227,102,0)"/><text x="440.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="437" y="484" width="4" height="15" fill="rgb(215,28,28)"/><text x="440.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="437" y="500" width="4" height="15" fill="rgb(244,143,0)"/><text x="440.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="437" y="516" width="4" height="15" fill="rgb(253,165,10)"/><text x="440.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="437" y="532" width="4" height="15" fill="rgb(215,11,5)"/><text x="440.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="437" y="548" width="4" height="15" fill="rgb(227,8,49)"/><text x="440.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="437" y="564" width="4" height="15" fill="rgb(229,95,47)"/><text x="440.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.34%)</title><rect x="437" y="580" width="4" height="15" fill="rgb(251,35,41)"/><text x="440.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.34%)</title><rect x="437" y="596" width="4" height="15" fill="rgb(239,135,9)"/><text x="440.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.34%)</title><rect x="437" y="612" width="4" height="15" fill="rgb(246,149,11)"/><text x="440.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.34%)</title><rect x="437" y="628" width="4" height="15" fill="rgb(209,103,21)"/><text x="440.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.34%)</title><rect x="437" y="644" width="4" height="15" fill="rgb(227,223,43)"/><text x="440.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.34%)</title><rect x="437" y="660" width="4" height="15" fill="rgb(246,150,41)"/><text x="440.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:17) (1 samples, 0.11%)</title><rect x="439" y="676" width="2" height="15" fill="rgb(217,229,25)"/><text x="442.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="439" y="692" width="2" height="15" fill="rgb(208,157,20)"/><text x="442.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="439" y="708" width="2" height="15" fill="rgb(213,36,26)"/><text x="442.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="439" y="724" width="2" height="15" fill="rgb(230,177,20)"/><text x="442.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="439" y="740" width="2" height="15" fill="rgb(234,68,25)"/><text x="442.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="439" y="756" width="2" height="15" fill="rgb(246,25,24)"/><text x="442.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="439" y="772" width="2" height="15" fill="rgb(252,89,50)"/><text x="442.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="439" y="788" width="2" height="15" fill="rgb(217,99,8)"/><text x="442.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="439" y="804" width="2" height="15" fill="rgb(205,182,35)"/><text x="442.00" y="814.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/__init__.py:5) (1 samples, 0.11%)</title><rect x="439" y="820" width="2" height="15" fill="rgb(218,113,44)"/><text x="442.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="439" y="836" width="2" height="15" fill="rgb(214,85,42)"/><text x="442.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="439" y="852" width="2" height="15" fill="rgb(233,229,29)"/><text x="442.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="439" y="868" width="2" height="15" fill="rgb(243,44,10)"/><text x="442.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="439" y="884" width="2" height="15" fill="rgb(228,70,54)"/><text x="442.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="439" y="900" width="2" height="15" fill="rgb(235,68,45)"/><text x="442.00" y="910.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/onnx_helper.py:6) (1 samples, 0.11%)</title><rect x="439" y="916" width="2" height="15" fill="rgb(231,214,45)"/><text x="442.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="439" y="932" width="2" height="15" fill="rgb(254,7,31)"/><text x="442.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="439" y="948" width="2" height="15" fill="rgb(208,98,48)"/><text x="442.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="439" y="964" width="2" height="15" fill="rgb(211,88,29)"/><text x="442.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="439" y="980" width="2" height="15" fill="rgb(223,222,16)"/><text x="442.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="439" y="996" width="2" height="15" fill="rgb(221,180,40)"/><text x="442.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/onnx_optimisation.py:6) (1 samples, 0.11%)</title><rect x="439" y="1012" width="2" height="15" fill="rgb(212,49,12)"/><text x="442.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="439" y="1028" width="2" height="15" fill="rgb(223,151,35)"/><text x="442.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="439" y="1044" width="2" height="15" fill="rgb(220,155,38)"/><text x="442.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="439" y="1060" width="2" height="15" fill="rgb(219,211,27)"/><text x="442.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="439" y="1076" width="2" height="15" fill="rgb(249,159,18)"/><text x="442.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.11%)</title><rect x="439" y="1092" width="2" height="15" fill="rgb(221,91,27)"/><text x="442.00" y="1102.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.11%)</title><rect x="439" y="1108" width="2" height="15" fill="rgb(230,214,3)"/><text x="442.00" y="1118.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="439" y="1124" width="2" height="15" fill="rgb(211,119,53)"/><text x="442.00" y="1134.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:28) (1 samples, 0.11%)</title><rect x="441" y="84" width="1" height="15" fill="rgb(217,57,24)"/><text x="444.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.11%)</title><rect x="441" y="100" width="1" height="15" fill="rgb(221,173,16)"/><text x="444.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.11%)</title><rect x="441" y="116" width="1" height="15" fill="rgb(213,88,1)"/><text x="444.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.11%)</title><rect x="441" y="132" width="1" height="15" fill="rgb(224,220,51)"/><text x="444.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.11%)</title><rect x="441" y="148" width="1" height="15" fill="rgb(208,63,11)"/><text x="444.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.11%)</title><rect x="441" y="164" width="1" height="15" fill="rgb(220,151,23)"/><text x="444.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.11%)</title><rect x="441" y="180" width="1" height="15" fill="rgb(243,116,0)"/><text x="444.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.11%)</title><rect x="441" y="196" width="1" height="15" fill="rgb(250,60,48)"/><text x="444.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:89) (1 samples, 0.11%)</title><rect x="441" y="212" width="1" height="15" fill="rgb(247,163,10)"/><text x="444.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py:416) (1 samples, 0.11%)</title><rect x="441" y="228" width="1" height="15" fill="rgb(216,178,16)"/><text x="444.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py:55) (1 samples, 0.11%)</title><rect x="441" y="244" width="1" height="15" fill="rgb(215,58,8)"/><text x="444.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:404) (1 samples, 0.11%)</title><rect x="441" y="260" width="1" height="15" fill="rgb(254,126,14)"/><text x="444.00" y="270.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.11%)</title><rect x="442" y="164" width="1" height="15" fill="rgb(233,216,6)"/><text x="445.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.34%)</title><rect x="445" y="180" width="4" height="15" fill="rgb(253,228,14)"/><text x="448.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.11%)</title><rect x="447" y="196" width="2" height="15" fill="rgb(246,12,22)"/><text x="450.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.11%)</title><rect x="453" y="212" width="1" height="15" fill="rgb(208,96,5)"/><text x="456.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.11%)</title><rect x="453" y="228" width="1" height="15" fill="rgb(206,40,31)"/><text x="456.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.11%)</title><rect x="453" y="244" width="1" height="15" fill="rgb(236,63,17)"/><text x="456.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="453" y="260" width="1" height="15" fill="rgb(232,181,7)"/><text x="456.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.11%)</title><rect x="453" y="276" width="1" height="15" fill="rgb(241,222,30)"/><text x="456.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.11%)</title><rect x="453" y="292" width="1" height="15" fill="rgb(223,81,40)"/><text x="456.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (1 samples, 0.11%)</title><rect x="453" y="308" width="1" height="15" fill="rgb(251,46,10)"/><text x="456.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (1 samples, 0.11%)</title><rect x="453" y="324" width="1" height="15" fill="rgb(209,168,16)"/><text x="456.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (1 samples, 0.11%)</title><rect x="453" y="340" width="1" height="15" fill="rgb(229,55,26)"/><text x="456.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (2 samples, 0.22%)</title><rect x="453" y="196" width="2" height="15" fill="rgb(240,19,32)"/><text x="456.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.11%)</title><rect x="454" y="212" width="1" height="15" fill="rgb(241,195,11)"/><text x="457.00" y="222.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.11%)</title><rect x="454" y="228" width="1" height="15" fill="rgb(214,158,5)"/><text x="457.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.11%)</title><rect x="454" y="244" width="1" height="15" fill="rgb(209,205,32)"/><text x="457.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (1 samples, 0.11%)</title><rect x="455" y="228" width="2" height="15" fill="rgb(246,194,54)"/><text x="458.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="455" y="244" width="2" height="15" fill="rgb(233,81,11)"/><text x="458.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="455" y="260" width="2" height="15" fill="rgb(230,23,43)"/><text x="458.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.11%)</title><rect x="455" y="276" width="2" height="15" fill="rgb(227,34,16)"/><text x="458.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.11%)</title><rect x="455" y="292" width="2" height="15" fill="rgb(226,37,13)"/><text x="458.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (1 samples, 0.11%)</title><rect x="455" y="308" width="2" height="15" fill="rgb(250,178,2)"/><text x="458.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="455" y="324" width="2" height="15" fill="rgb(243,227,6)"/><text x="458.00" y="334.50"></text></g><g><title>0x7f46ae4aee00 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="455" y="340" width="2" height="15" fill="rgb(242,57,40)"/><text x="458.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.11%)</title><rect x="459" y="260" width="2" height="15" fill="rgb(244,229,3)"/><text x="462.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.11%)</title><rect x="459" y="276" width="2" height="15" fill="rgb(240,85,54)"/><text x="462.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:811) (1 samples, 0.11%)</title><rect x="461" y="308" width="1" height="15" fill="rgb(217,12,15)"/><text x="464.00" y="318.50"></text></g><g><title>strides_to_terms (mem_overlap.c:726) (1 samples, 0.11%)</title><rect x="461" y="324" width="1" height="15" fill="rgb(240,32,43)"/><text x="464.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.22%)</title><rect x="461" y="276" width="2" height="15" fill="rgb(219,227,53)"/><text x="464.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.22%)</title><rect x="461" y="292" width="2" height="15" fill="rgb(217,154,42)"/><text x="464.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.11%)</title><rect x="462" y="308" width="1" height="15" fill="rgb(243,127,1)"/><text x="465.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:541) (1 samples, 0.11%)</title><rect x="462" y="324" width="1" height="15" fill="rgb(224,133,41)"/><text x="465.00" y="334.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1349) (1 samples, 0.11%)</title><rect x="463" y="292" width="2" height="15" fill="rgb(254,197,33)"/><text x="466.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="463" y="308" width="2" height="15" fill="rgb(240,98,24)"/><text x="466.00" y="318.50"></text></g><g><title>0x7f46ae4b1960 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="465" y="324" width="2" height="15" fill="rgb(249,121,46)"/><text x="468.00" y="334.50"></text></g><g><title>0x7f46ae4b1997 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="467" y="324" width="2" height="15" fill="rgb(218,191,0)"/><text x="470.00" y="334.50"></text></g><g><title>0x7f46ae4b19bd (libm-2.29.so) (1 samples, 0.11%)</title><rect x="469" y="324" width="1" height="15" fill="rgb(219,66,13)"/><text x="472.00" y="334.50"></text></g><g><title>0x7f46ae4b19cc (libm-2.29.so) (1 samples, 0.11%)</title><rect x="470" y="324" width="1" height="15" fill="rgb(239,52,30)"/><text x="473.00" y="334.50"></text></g><g><title>0x7f46ae4b1a1d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="471" y="324" width="2" height="15" fill="rgb(229,5,7)"/><text x="474.00" y="334.50"></text></g><g><title>0x7f46ae4b1a21 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="473" y="324" width="1" height="15" fill="rgb(209,36,17)"/><text x="476.00" y="334.50"></text></g><g><title>0x7f46ae4b1a28 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="474" y="324" width="1" height="15" fill="rgb(234,208,53)"/><text x="477.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (15 samples, 1.68%)</title><rect x="457" y="228" width="19" height="15" fill="rgb(231,46,49)"/><text x="460.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 1.46%)</title><rect x="459" y="244" width="17" height="15" fill="rgb(227,21,5)"/><text x="462.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 1.35%)</title><rect x="461" y="260" width="15" height="15" fill="rgb(233,88,12)"/><text x="464.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (10 samples, 1.12%)</title><rect x="463" y="276" width="13" height="15" fill="rgb(232,39,17)"/><text x="466.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (9 samples, 1.01%)</title><rect x="465" y="292" width="11" height="15" fill="rgb(254,156,9)"/><text x="468.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (9 samples, 1.01%)</title><rect x="465" y="308" width="11" height="15" fill="rgb(238,72,34)"/><text x="468.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="475" y="324" width="1" height="15" fill="rgb(250,48,21)"/><text x="478.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:27) (1 samples, 0.11%)</title><rect x="476" y="228" width="2" height="15" fill="rgb(225,34,22)"/><text x="479.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="478" y="244" width="1" height="15" fill="rgb(206,160,23)"/><text x="481.00" y="254.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.22%)</title><rect x="479" y="292" width="3" height="15" fill="rgb(233,214,11)"/><text x="482.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (2 samples, 0.22%)</title><rect x="479" y="308" width="3" height="15" fill="rgb(239,59,31)"/><text x="482.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="482" y="340" width="1" height="15" fill="rgb(237,65,46)"/><text x="485.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="482" y="356" width="1" height="15" fill="rgb(240,91,5)"/><text x="485.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.11%)</title><rect x="482" y="372" width="1" height="15" fill="rgb(232,153,4)"/><text x="485.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.11%)</title><rect x="482" y="388" width="1" height="15" fill="rgb(222,63,18)"/><text x="485.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.11%)</title><rect x="482" y="404" width="1" height="15" fill="rgb(207,50,37)"/><text x="485.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.11%)</title><rect x="482" y="420" width="1" height="15" fill="rgb(241,71,38)"/><text x="485.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="483" y="372" width="1" height="15" fill="rgb(222,217,9)"/><text x="486.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3027) (1 samples, 0.11%)</title><rect x="483" y="388" width="1" height="15" fill="rgb(220,97,11)"/><text x="486.00" y="398.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2144) (1 samples, 0.11%)</title><rect x="484" y="388" width="2" height="15" fill="rgb(233,166,45)"/><text x="487.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.34%)</title><rect x="483" y="356" width="4" height="15" fill="rgb(254,48,27)"/><text x="486.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (2 samples, 0.22%)</title><rect x="484" y="372" width="3" height="15" fill="rgb(220,22,26)"/><text x="487.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2260) (1 samples, 0.11%)</title><rect x="486" y="388" width="1" height="15" fill="rgb(224,40,33)"/><text x="489.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="487" y="388" width="1" height="15" fill="rgb(248,184,9)"/><text x="490.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (2 samples, 0.22%)</title><rect x="488" y="388" width="3" height="15" fill="rgb(226,82,17)"/><text x="491.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.11%)</title><rect x="490" y="404" width="1" height="15" fill="rgb(249,174,39)"/><text x="493.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.11%)</title><rect x="491" y="388" width="1" height="15" fill="rgb(231,61,27)"/><text x="494.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.11%)</title><rect x="492" y="388" width="2" height="15" fill="rgb(246,154,37)"/><text x="495.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (30 samples, 3.36%)</title><rect x="455" y="196" width="40" height="15" fill="rgb(240,161,54)"/><text x="458.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (30 samples, 3.36%)</title><rect x="455" y="212" width="40" height="15" fill="rgb(227,224,14)"/><text x="458.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (13 samples, 1.46%)</title><rect x="478" y="228" width="17" height="15" fill="rgb(208,44,3)"/><text x="481.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (12 samples, 1.35%)</title><rect x="479" y="244" width="16" height="15" fill="rgb(222,156,16)"/><text x="482.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 1.35%)</title><rect x="479" y="260" width="16" height="15" fill="rgb(238,219,40)"/><text x="482.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (12 samples, 1.35%)</title><rect x="479" y="276" width="16" height="15" fill="rgb(207,218,39)"/><text x="482.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (10 samples, 1.12%)</title><rect x="482" y="292" width="13" height="15" fill="rgb(234,208,10)"/><text x="485.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 1.12%)</title><rect x="482" y="308" width="13" height="15" fill="rgb(228,81,19)"/><text x="485.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (10 samples, 1.12%)</title><rect x="482" y="324" width="13" height="15" fill="rgb(253,91,45)"/><text x="485.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (9 samples, 1.01%)</title><rect x="483" y="340" width="12" height="15" fill="rgb(215,20,2)"/><text x="486.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (6 samples, 0.67%)</title><rect x="487" y="356" width="8" height="15" fill="rgb(254,73,17)"/><text x="490.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 0.67%)</title><rect x="487" y="372" width="8" height="15" fill="rgb(207,44,29)"/><text x="490.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.11%)</title><rect x="494" y="388" width="1" height="15" fill="rgb(242,227,21)"/><text x="497.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (2 samples, 0.22%)</title><rect x="495" y="196" width="3" height="15" fill="rgb(210,129,30)"/><text x="498.00" y="206.50"></text></g><g><title>0x7f466ee8d422 (?) (1 samples, 0.11%)</title><rect x="498" y="244" width="1" height="15" fill="rgb(246,197,2)"/><text x="501.00" y="254.50"></text></g><g><title>0x7f466ee9389e (?) (1 samples, 0.11%)</title><rect x="498" y="260" width="1" height="15" fill="rgb(246,62,54)"/><text x="501.00" y="270.50"></text></g><g><title>0x7f466ee9374f (?) (1 samples, 0.11%)</title><rect x="498" y="276" width="1" height="15" fill="rgb(232,120,51)"/><text x="501.00" y="286.50"></text></g><g><title>0x7f466ee99a3a (?) (1 samples, 0.11%)</title><rect x="498" y="292" width="1" height="15" fill="rgb(211,199,17)"/><text x="501.00" y="302.50"></text></g><g><title>0x7f46782f5ab9 (?) (1 samples, 0.11%)</title><rect x="498" y="308" width="1" height="15" fill="rgb(208,181,30)"/><text x="501.00" y="318.50"></text></g><g><title>0x7f46782f6eab (?) (1 samples, 0.11%)</title><rect x="498" y="324" width="1" height="15" fill="rgb(250,163,41)"/><text x="501.00" y="334.50"></text></g><g><title>0x7f46782f6ea9 (libgomp.so.1.0.0) (6 samples, 0.67%)</title><rect x="499" y="468" width="8" height="15" fill="rgb(206,161,14)"/><text x="502.00" y="478.50"></text></g><g><title>0x7f46782f6eab (libgomp.so.1.0.0) (8 samples, 0.90%)</title><rect x="507" y="468" width="10" height="15" fill="rgb(249,122,26)"/><text x="510.00" y="478.50"></text></g><g><title>0x7f46782f5ab9 (libgomp.so.1.0.0) (20 samples, 2.24%)</title><rect x="499" y="452" width="26" height="15" fill="rgb(234,126,14)"/><text x="502.00" y="462.50">0..</text></g><g><title>0x7f46782f6ead (libgomp.so.1.0.0) (6 samples, 0.67%)</title><rect x="517" y="468" width="8" height="15" fill="rgb(224,146,25)"/><text x="520.00" y="478.50"></text></g><g><title>0x7f46782f6cf0 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="525" y="484" width="2" height="15" fill="rgb(206,15,4)"/><text x="528.00" y="494.50"></text></g><g><title>0x7f46782f6cf9 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="527" y="484" width="1" height="15" fill="rgb(206,126,21)"/><text x="530.00" y="494.50"></text></g><g><title>0x7f46782f6cfb (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="528" y="484" width="1" height="15" fill="rgb(216,71,31)"/><text x="531.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (27 samples, 3.03%)</title><rect x="498" y="196" width="35" height="15" fill="rgb(241,203,18)"/><text x="501.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (27 samples, 3.03%)</title><rect x="498" y="212" width="35" height="15" fill="rgb(237,229,43)"/><text x="501.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (27 samples, 3.03%)</title><rect x="498" y="228" width="35" height="15" fill="rgb(218,14,51)"/><text x="501.00" y="238.50">_r..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (26 samples, 2.91%)</title><rect x="499" y="244" width="34" height="15" fill="rgb(220,14,51)"/><text x="502.00" y="254.50">py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (26 samples, 2.91%)</title><rect x="499" y="260" width="34" height="15" fill="rgb(236,85,18)"/><text x="502.00" y="270.50">vo..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (26 samples, 2.91%)</title><rect x="499" y="276" width="34" height="15" fill="rgb(223,64,2)"/><text x="502.00" y="286.50">vo..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (26 samples, 2.91%)</title><rect x="499" y="292" width="34" height="15" fill="rgb(238,216,11)"/><text x="502.00" y="302.50">py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (26 samples, 2.91%)</title><rect x="499" y="308" width="34" height="15" fill="rgb(207,66,19)"/><text x="502.00" y="318.50">py..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (26 samples, 2.91%)</title><rect x="499" y="324" width="34" height="15" fill="rgb(245,54,22)"/><text x="502.00" y="334.50">py..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (26 samples, 2.91%)</title><rect x="499" y="340" width="34" height="15" fill="rgb(219,45,5)"/><text x="502.00" y="350.50">py..</text></g><g><title>pybind11::array::~array (numpy.h:538) (26 samples, 2.91%)</title><rect x="499" y="356" width="34" height="15" fill="rgb(220,54,10)"/><text x="502.00" y="366.50">py..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (26 samples, 2.91%)</title><rect x="499" y="372" width="34" height="15" fill="rgb(220,193,29)"/><text x="502.00" y="382.50">py..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (26 samples, 2.91%)</title><rect x="499" y="388" width="34" height="15" fill="rgb(235,73,44)"/><text x="502.00" y="398.50">py..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (26 samples, 2.91%)</title><rect x="499" y="404" width="34" height="15" fill="rgb(246,12,29)"/><text x="502.00" y="414.50">py..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (26 samples, 2.91%)</title><rect x="499" y="420" width="34" height="15" fill="rgb(222,124,24)"/><text x="502.00" y="430.50">Ru..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (26 samples, 2.91%)</title><rect x="499" y="436" width="34" height="15" fill="rgb(213,91,21)"/><text x="502.00" y="446.50">py..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (6 samples, 0.67%)</title><rect x="525" y="452" width="8" height="15" fill="rgb(253,18,17)"/><text x="528.00" y="462.50"></text></g><g><title>0x7f46782f4daa (libgomp.so.1.0.0) (6 samples, 0.67%)</title><rect x="525" y="468" width="8" height="15" fill="rgb(221,108,5)"/><text x="528.00" y="478.50"></text></g><g><title>0x7f46782f6cfd (libgomp.so.1.0.0) (3 samples, 0.34%)</title><rect x="529" y="484" width="4" height="15" fill="rgb(216,87,38)"/><text x="532.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.11%)</title><rect x="533" y="212" width="2" height="15" fill="rgb(254,98,2)"/><text x="536.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3210) (1 samples, 0.11%)</title><rect x="533" y="228" width="2" height="15" fill="rgb(210,167,5)"/><text x="536.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:518) (1 samples, 0.11%)</title><rect x="535" y="228" width="1" height="15" fill="rgb(209,103,17)"/><text x="538.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.11%)</title><rect x="536" y="228" width="1" height="15" fill="rgb(221,80,53)"/><text x="539.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="539" y="244" width="1" height="15" fill="rgb(251,127,23)"/><text x="542.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="539" y="260" width="1" height="15" fill="rgb(219,30,16)"/><text x="542.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="539" y="276" width="1" height="15" fill="rgb(253,192,30)"/><text x="542.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="539" y="292" width="1" height="15" fill="rgb(221,208,13)"/><text x="542.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.11%)</title><rect x="539" y="308" width="1" height="15" fill="rgb(236,120,39)"/><text x="542.00" y="318.50"></text></g><g><title>0x7f46ae40d130 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="539" y="324" width="1" height="15" fill="rgb(231,185,16)"/><text x="542.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.11%)</title><rect x="540" y="308" width="1" height="15" fill="rgb(235,79,51)"/><text x="543.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="540" y="324" width="1" height="15" fill="rgb(215,136,19)"/><text x="543.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="540" y="292" width="3" height="15" fill="rgb(224,180,1)"/><text x="543.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="541" y="308" width="2" height="15" fill="rgb(218,214,40)"/><text x="544.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2781) (1 samples, 0.11%)</title><rect x="541" y="324" width="2" height="15" fill="rgb(248,50,2)"/><text x="544.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (5 samples, 0.56%)</title><rect x="537" y="228" width="7" height="15" fill="rgb(215,89,30)"/><text x="540.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.34%)</title><rect x="540" y="244" width="4" height="15" fill="rgb(238,85,49)"/><text x="543.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.34%)</title><rect x="540" y="260" width="4" height="15" fill="rgb(211,7,16)"/><text x="543.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.34%)</title><rect x="540" y="276" width="4" height="15" fill="rgb(218,151,24)"/><text x="543.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="543" y="292" width="1" height="15" fill="rgb(252,68,8)"/><text x="546.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:275) (1 samples, 0.11%)</title><rect x="543" y="308" width="1" height="15" fill="rgb(207,169,22)"/><text x="546.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.11%)</title><rect x="544" y="276" width="1" height="15" fill="rgb(210,213,15)"/><text x="547.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.11%)</title><rect x="544" y="292" width="1" height="15" fill="rgb(233,119,40)"/><text x="547.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (3 samples, 0.34%)</title><rect x="545" y="340" width="4" height="15" fill="rgb(211,134,4)"/><text x="548.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.45%)</title><rect x="545" y="324" width="6" height="15" fill="rgb(241,47,14)"/><text x="548.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.11%)</title><rect x="549" y="340" width="2" height="15" fill="rgb(254,73,14)"/><text x="552.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.11%)</title><rect x="549" y="356" width="2" height="15" fill="rgb(234,52,4)"/><text x="552.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.67%)</title><rect x="544" y="244" width="8" height="15" fill="rgb(225,179,12)"/><text x="547.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.67%)</title><rect x="544" y="260" width="8" height="15" fill="rgb(237,13,41)"/><text x="547.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.56%)</title><rect x="545" y="276" width="7" height="15" fill="rgb(207,74,29)"/><text x="548.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.56%)</title><rect x="545" y="292" width="7" height="15" fill="rgb(220,13,26)"/><text x="548.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.56%)</title><rect x="545" y="308" width="7" height="15" fill="rgb(205,52,44)"/><text x="548.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.11%)</title><rect x="551" y="324" width="1" height="15" fill="rgb(239,228,18)"/><text x="554.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (15 samples, 1.68%)</title><rect x="533" y="196" width="20" height="15" fill="rgb(229,60,27)"/><text x="536.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (14 samples, 1.57%)</title><rect x="535" y="212" width="18" height="15" fill="rgb(234,207,45)"/><text x="538.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (7 samples, 0.78%)</title><rect x="544" y="228" width="9" height="15" fill="rgb(234,37,39)"/><text x="547.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.11%)</title><rect x="552" y="244" width="1" height="15" fill="rgb(211,17,0)"/><text x="555.00" y="254.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.34%)</title><rect x="555" y="340" width="3" height="15" fill="rgb(246,114,17)"/><text x="558.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.22%)</title><rect x="556" y="356" width="2" height="15" fill="rgb(233,4,10)"/><text x="559.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.45%)</title><rect x="555" y="324" width="5" height="15" fill="rgb(250,89,35)"/><text x="558.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.11%)</title><rect x="558" y="340" width="2" height="15" fill="rgb(233,178,20)"/><text x="561.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.11%)</title><rect x="560" y="388" width="1" height="15" fill="rgb(217,103,35)"/><text x="563.00" y="398.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.11%)</title><rect x="561" y="388" width="1" height="15" fill="rgb(214,43,39)"/><text x="564.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (4 samples, 0.45%)</title><rect x="560" y="340" width="5" height="15" fill="rgb(254,68,24)"/><text x="563.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (4 samples, 0.45%)</title><rect x="560" y="356" width="5" height="15" fill="rgb(229,137,30)"/><text x="563.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.45%)</title><rect x="560" y="372" width="5" height="15" fill="rgb(206,161,26)"/><text x="563.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.22%)</title><rect x="562" y="388" width="3" height="15" fill="rgb(244,23,37)"/><text x="565.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="564" y="404" width="1" height="15" fill="rgb(236,125,51)"/><text x="567.00" y="414.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="566" y="372" width="2" height="15" fill="rgb(234,169,2)"/><text x="569.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.11%)</title><rect x="566" y="388" width="2" height="15" fill="rgb(238,83,38)"/><text x="569.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.22%)</title><rect x="566" y="356" width="3" height="15" fill="rgb(254,107,23)"/><text x="569.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:460) (1 samples, 0.11%)</title><rect x="568" y="372" width="1" height="15" fill="rgb(226,101,14)"/><text x="571.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="569" y="356" width="1" height="15" fill="rgb(218,179,33)"/><text x="572.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="569" y="372" width="1" height="15" fill="rgb(225,63,6)"/><text x="572.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="569" y="388" width="1" height="15" fill="rgb(250,164,38)"/><text x="572.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.11%)</title><rect x="569" y="404" width="1" height="15" fill="rgb(224,191,41)"/><text x="572.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.11%)</title><rect x="569" y="420" width="1" height="15" fill="rgb(229,134,7)"/><text x="572.00" y="430.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (9 samples, 1.01%)</title><rect x="560" y="324" width="12" height="15" fill="rgb(209,24,24)"/><text x="563.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 0.56%)</title><rect x="565" y="340" width="7" height="15" fill="rgb(223,130,2)"/><text x="568.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.11%)</title><rect x="570" y="356" width="2" height="15" fill="rgb(244,43,48)"/><text x="573.00" y="366.50"></text></g><g><title>PyArray_Return (scalarapi.c:864) (1 samples, 0.11%)</title><rect x="570" y="372" width="2" height="15" fill="rgb(236,135,42)"/><text x="573.00" y="382.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:634) (1 samples, 0.11%)</title><rect x="570" y="388" width="2" height="15" fill="rgb(243,6,9)"/><text x="573.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="573" y="372" width="1" height="15" fill="rgb(235,205,31)"/><text x="576.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.11%)</title><rect x="573" y="388" width="1" height="15" fill="rgb(212,91,8)"/><text x="576.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.11%)</title><rect x="573" y="404" width="1" height="15" fill="rgb(254,90,41)"/><text x="576.00" y="414.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.11%)</title><rect x="573" y="420" width="1" height="15" fill="rgb(250,117,12)"/><text x="576.00" y="430.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.11%)</title><rect x="573" y="436" width="1" height="15" fill="rgb(221,40,33)"/><text x="576.00" y="446.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.11%)</title><rect x="574" y="420" width="2" height="15" fill="rgb(242,179,13)"/><text x="577.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.11%)</title><rect x="574" y="436" width="2" height="15" fill="rgb(238,223,44)"/><text x="577.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="574" y="452" width="2" height="15" fill="rgb(216,78,40)"/><text x="577.00" y="462.50"></text></g><g><title>0x7f46ae330dac (libc-2.29.so) (1 samples, 0.11%)</title><rect x="574" y="468" width="2" height="15" fill="rgb(254,123,0)"/><text x="577.00" y="478.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:872) (1 samples, 0.11%)</title><rect x="576" y="468" width="1" height="15" fill="rgb(237,208,34)"/><text x="579.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.34%)</title><rect x="574" y="404" width="4" height="15" fill="rgb(247,118,43)"/><text x="577.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.22%)</title><rect x="576" y="420" width="2" height="15" fill="rgb(232,10,30)"/><text x="579.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.22%)</title><rect x="576" y="436" width="2" height="15" fill="rgb(223,110,23)"/><text x="579.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (2 samples, 0.22%)</title><rect x="576" y="452" width="2" height="15" fill="rgb(251,146,15)"/><text x="579.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.11%)</title><rect x="577" y="468" width="1" height="15" fill="rgb(209,156,5)"/><text x="580.00" y="478.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="578" y="420" width="2" height="15" fill="rgb(229,220,11)"/><text x="581.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (2 samples, 0.22%)</title><rect x="578" y="404" width="3" height="15" fill="rgb(229,223,16)"/><text x="581.00" y="414.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="580" y="420" width="1" height="15" fill="rgb(223,156,20)"/><text x="583.00" y="430.50"></text></g><g><title>DOUBLE_clip (clip.c.src:107) (1 samples, 0.11%)</title><rect x="581" y="420" width="1" height="15" fill="rgb(249,226,52)"/><text x="584.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.12%)</title><rect x="573" y="356" width="13" height="15" fill="rgb(240,177,15)"/><text x="576.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 1.01%)</title><rect x="574" y="372" width="12" height="15" fill="rgb(253,1,32)"/><text x="577.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (9 samples, 1.01%)</title><rect x="574" y="388" width="12" height="15" fill="rgb(241,160,50)"/><text x="577.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.45%)</title><rect x="581" y="404" width="5" height="15" fill="rgb(207,202,30)"/><text x="584.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (3 samples, 0.34%)</title><rect x="582" y="420" width="4" height="15" fill="rgb(238,111,22)"/><text x="585.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (105 samples, 11.77%)</title><rect x="449" y="180" width="139" height="15" fill="rgb(211,22,38)"/><text x="452.00" y="190.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (26 samples, 2.91%)</title><rect x="553" y="196" width="35" height="15" fill="rgb(253,135,27)"/><text x="556.00" y="206.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (26 samples, 2.91%)</title><rect x="553" y="212" width="35" height="15" fill="rgb(240,128,26)"/><text x="556.00" y="222.50">_r..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (25 samples, 2.80%)</title><rect x="555" y="228" width="33" height="15" fill="rgb(249,221,25)"/><text x="558.00" y="238.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (25 samples, 2.80%)</title><rect x="555" y="244" width="33" height="15" fill="rgb(223,221,10)"/><text x="558.00" y="254.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (25 samples, 2.80%)</title><rect x="555" y="260" width="33" height="15" fill="rgb(232,177,5)"/><text x="558.00" y="270.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (25 samples, 2.80%)</title><rect x="555" y="276" width="33" height="15" fill="rgb(250,17,26)"/><text x="558.00" y="286.50">_w..</text></g><g><title>array_clip (methods.c:2381) (25 samples, 2.80%)</title><rect x="555" y="292" width="33" height="15" fill="rgb(215,55,25)"/><text x="558.00" y="302.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (25 samples, 2.80%)</title><rect x="555" y="308" width="33" height="15" fill="rgb(249,183,16)"/><text x="558.00" y="318.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:132) (12 samples, 1.35%)</title><rect x="572" y="324" width="16" height="15" fill="rgb(212,120,54)"/><text x="575.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (12 samples, 1.35%)</title><rect x="572" y="340" width="16" height="15" fill="rgb(240,75,40)"/><text x="575.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="586" y="356" width="2" height="15" fill="rgb(213,134,22)"/><text x="589.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="586" y="372" width="2" height="15" fill="rgb(231,123,47)"/><text x="589.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="586" y="388" width="2" height="15" fill="rgb(221,142,11)"/><text x="589.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="586" y="404" width="2" height="15" fill="rgb(231,180,48)"/><text x="589.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 0.34%)</title><rect x="588" y="180" width="4" height="15" fill="rgb(238,222,0)"/><text x="591.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:18) (114 samples, 12.78%)</title><rect x="442" y="100" width="151" height="15" fill="rgb(252,168,47)"/><text x="445.00" y="110.50">profile (bench_AdaB..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (114 samples, 12.78%)</title><rect x="442" y="116" width="151" height="15" fill="rgb(243,64,23)"/><text x="445.00" y="126.50">time_predict (mlpro..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (114 samples, 12.78%)</title><rect x="442" y="132" width="151" height="15" fill="rgb(226,12,5)"/><text x="445.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (114 samples, 12.78%)</title><rect x="442" y="148" width="151" height="15" fill="rgb(211,221,20)"/><text x="445.00" y="158.50">run (mlprodict/onnx..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (113 samples, 12.67%)</title><rect x="443" y="164" width="150" height="15" fill="rgb(217,46,2)"/><text x="446.00" y="174.50">_run_sequence_runti..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.11%)</title><rect x="592" y="180" width="1" height="15" fill="rgb(241,192,37)"/><text x="595.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (7 samples, 0.78%)</title><rect x="597" y="180" width="9" height="15" fill="rgb(235,45,48)"/><text x="600.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.22%)</title><rect x="603" y="196" width="3" height="15" fill="rgb(234,114,43)"/><text x="606.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (1 samples, 0.11%)</title><rect x="614" y="212" width="1" height="15" fill="rgb(231,211,45)"/><text x="617.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.11%)</title><rect x="614" y="228" width="1" height="15" fill="rgb(237,64,10)"/><text x="617.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (1 samples, 0.11%)</title><rect x="614" y="244" width="1" height="15" fill="rgb(248,49,54)"/><text x="617.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:83) (1 samples, 0.11%)</title><rect x="614" y="260" width="1" height="15" fill="rgb(209,162,25)"/><text x="617.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.11%)</title><rect x="615" y="276" width="2" height="15" fill="rgb(210,82,15)"/><text x="618.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.11%)</title><rect x="615" y="292" width="2" height="15" fill="rgb(226,225,53)"/><text x="618.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (1 samples, 0.11%)</title><rect x="615" y="308" width="2" height="15" fill="rgb(215,58,19)"/><text x="618.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (1 samples, 0.11%)</title><rect x="615" y="324" width="2" height="15" fill="rgb(237,180,14)"/><text x="618.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.22%)</title><rect x="615" y="260" width="3" height="15" fill="rgb(220,130,5)"/><text x="618.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.11%)</title><rect x="617" y="276" width="1" height="15" fill="rgb(213,133,43)"/><text x="620.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:884) (1 samples, 0.11%)</title><rect x="617" y="292" width="1" height="15" fill="rgb(244,75,7)"/><text x="620.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:693) (1 samples, 0.11%)</title><rect x="617" y="308" width="1" height="15" fill="rgb(231,56,49)"/><text x="620.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (3 samples, 0.34%)</title><rect x="615" y="212" width="4" height="15" fill="rgb(210,19,13)"/><text x="618.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (3 samples, 0.34%)</title><rect x="615" y="228" width="4" height="15" fill="rgb(249,65,7)"/><text x="618.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (3 samples, 0.34%)</title><rect x="615" y="244" width="4" height="15" fill="rgb(224,155,6)"/><text x="618.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.11%)</title><rect x="618" y="260" width="1" height="15" fill="rgb(212,39,6)"/><text x="621.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.11%)</title><rect x="618" y="276" width="1" height="15" fill="rgb(205,149,28)"/><text x="621.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (1 samples, 0.11%)</title><rect x="618" y="292" width="1" height="15" fill="rgb(250,125,27)"/><text x="621.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.11%)</title><rect x="618" y="308" width="1" height="15" fill="rgb(209,56,25)"/><text x="621.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (1 samples, 0.11%)</title><rect x="618" y="324" width="1" height="15" fill="rgb(245,84,6)"/><text x="621.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (1 samples, 0.11%)</title><rect x="618" y="340" width="1" height="15" fill="rgb(216,17,29)"/><text x="621.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="619" y="260" width="2" height="15" fill="rgb(252,179,54)"/><text x="622.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="621" y="260" width="1" height="15" fill="rgb(240,70,32)"/><text x="624.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.11%)</title><rect x="621" y="276" width="1" height="15" fill="rgb(237,132,52)"/><text x="624.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="621" y="292" width="1" height="15" fill="rgb(224,86,26)"/><text x="624.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.11%)</title><rect x="621" y="308" width="1" height="15" fill="rgb(216,50,40)"/><text x="624.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.11%)</title><rect x="621" y="324" width="1" height="15" fill="rgb(238,93,0)"/><text x="624.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:145) (1 samples, 0.11%)</title><rect x="621" y="340" width="1" height="15" fill="rgb(249,187,39)"/><text x="624.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (7 samples, 0.78%)</title><rect x="614" y="196" width="9" height="15" fill="rgb(235,104,35)"/><text x="617.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (3 samples, 0.34%)</title><rect x="619" y="212" width="4" height="15" fill="rgb(210,99,44)"/><text x="622.00" y="222.50"></text></g><g><title>array_add (number.c:330) (3 samples, 0.34%)</title><rect x="619" y="228" width="4" height="15" fill="rgb(205,87,3)"/><text x="622.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.34%)</title><rect x="619" y="244" width="4" height="15" fill="rgb(226,211,12)"/><text x="622.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.11%)</title><rect x="622" y="260" width="1" height="15" fill="rgb(213,175,23)"/><text x="625.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.11%)</title><rect x="622" y="276" width="1" height="15" fill="rgb(251,186,12)"/><text x="625.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:803) (1 samples, 0.11%)</title><rect x="622" y="292" width="1" height="15" fill="rgb(231,69,39)"/><text x="625.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:18) (1 samples, 0.11%)</title><rect x="625" y="228" width="1" height="15" fill="rgb(253,114,53)"/><text x="628.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.11%)</title><rect x="626" y="260" width="1" height="15" fill="rgb(225,158,36)"/><text x="629.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.11%)</title><rect x="626" y="276" width="1" height="15" fill="rgb(239,214,32)"/><text x="629.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:234) (1 samples, 0.11%)</title><rect x="626" y="292" width="1" height="15" fill="rgb(211,126,34)"/><text x="629.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.11%)</title><rect x="627" y="260" width="2" height="15" fill="rgb(245,69,7)"/><text x="630.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.11%)</title><rect x="629" y="276" width="1" height="15" fill="rgb(219,226,34)"/><text x="632.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.11%)</title><rect x="629" y="292" width="1" height="15" fill="rgb(238,46,15)"/><text x="632.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.11%)</title><rect x="629" y="308" width="1" height="15" fill="rgb(233,140,32)"/><text x="632.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.11%)</title><rect x="629" y="324" width="1" height="15" fill="rgb(209,222,52)"/><text x="632.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:370) (1 samples, 0.11%)</title><rect x="629" y="340" width="1" height="15" fill="rgb(253,79,15)"/><text x="632.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h:120) (1 samples, 0.11%)</title><rect x="629" y="356" width="1" height="15" fill="rgb(243,33,18)"/><text x="632.00" y="366.50"></text></g><g><title>0x7f46ae47b170 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="630" y="324" width="1" height="15" fill="rgb(213,114,34)"/><text x="633.00" y="334.50"></text></g><g><title>0x7f46ae4b1997 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="631" y="324" width="3" height="15" fill="rgb(254,223,44)"/><text x="634.00" y="334.50"></text></g><g><title>0x7f46ae4b19a4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="634" y="324" width="1" height="15" fill="rgb(235,88,7)"/><text x="637.00" y="334.50"></text></g><g><title>0x7f46ae4b19af (libm-2.29.so) (1 samples, 0.11%)</title><rect x="635" y="324" width="2" height="15" fill="rgb(235,210,13)"/><text x="638.00" y="334.50"></text></g><g><title>0x7f46ae4b19cc (libm-2.29.so) (1 samples, 0.11%)</title><rect x="637" y="324" width="1" height="15" fill="rgb(218,22,34)"/><text x="640.00" y="334.50"></text></g><g><title>0x7f46ae4b19e0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="638" y="324" width="1" height="15" fill="rgb(210,69,22)"/><text x="641.00" y="334.50"></text></g><g><title>0x7f46ae4b19e4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="639" y="324" width="2" height="15" fill="rgb(237,148,16)"/><text x="642.00" y="334.50"></text></g><g><title>0x7f46ae4b1a15 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="641" y="324" width="2" height="15" fill="rgb(213,51,38)"/><text x="644.00" y="334.50"></text></g><g><title>0x7f46ae4b1a1d (libm-2.29.so) (3 samples, 0.34%)</title><rect x="643" y="324" width="4" height="15" fill="rgb(247,196,24)"/><text x="646.00" y="334.50"></text></g><g><title>0x7f46ae4b1a21 (libm-2.29.so) (4 samples, 0.45%)</title><rect x="647" y="324" width="5" height="15" fill="rgb(245,14,10)"/><text x="650.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (18 samples, 2.02%)</title><rect x="630" y="308" width="24" height="15" fill="rgb(232,192,8)"/><text x="633.00" y="318.50">F..</text></g><g><title>logf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="652" y="324" width="2" height="15" fill="rgb(253,16,48)"/><text x="655.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (22 samples, 2.47%)</title><rect x="626" y="244" width="29" height="15" fill="rgb(252,139,17)"/><text x="629.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (20 samples, 2.24%)</title><rect x="629" y="260" width="26" height="15" fill="rgb(244,7,4)"/><text x="632.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (19 samples, 2.13%)</title><rect x="630" y="276" width="25" height="15" fill="rgb(227,139,26)"/><text x="633.00" y="286.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (19 samples, 2.13%)</title><rect x="630" y="292" width="25" height="15" fill="rgb(220,100,54)"/><text x="633.00" y="302.50">t..</text></g><g><title>FLOAT_log (loops.c.src:1604) (1 samples, 0.11%)</title><rect x="654" y="308" width="1" height="15" fill="rgb(244,161,24)"/><text x="657.00" y="318.50"></text></g><g><title>npy_logf (npy_math_internal.h.src:469) (1 samples, 0.11%)</title><rect x="654" y="324" width="1" height="15" fill="rgb(207,43,23)"/><text x="657.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (23 samples, 2.58%)</title><rect x="626" y="228" width="30" height="15" fill="rgb(248,222,0)"/><text x="629.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.11%)</title><rect x="655" y="244" width="1" height="15" fill="rgb(239,144,17)"/><text x="658.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.11%)</title><rect x="656" y="308" width="2" height="15" fill="rgb(250,15,6)"/><text x="659.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="656" y="324" width="2" height="15" fill="rgb(254,182,11)"/><text x="659.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="656" y="340" width="2" height="15" fill="rgb(249,217,41)"/><text x="659.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="656" y="356" width="2" height="15" fill="rgb(225,75,33)"/><text x="659.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="656" y="372" width="2" height="15" fill="rgb(217,91,23)"/><text x="659.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.11%)</title><rect x="656" y="388" width="2" height="15" fill="rgb(221,76,44)"/><text x="659.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.22%)</title><rect x="658" y="324" width="2" height="15" fill="rgb(239,124,22)"/><text x="661.00" y="334.50"></text></g><g><title>0x7f46ae345782 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="659" y="340" width="1" height="15" fill="rgb(206,116,9)"/><text x="662.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.11%)</title><rect x="660" y="356" width="2" height="15" fill="rgb(234,108,20)"/><text x="663.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.11%)</title><rect x="660" y="372" width="2" height="15" fill="rgb(242,72,0)"/><text x="663.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.11%)</title><rect x="660" y="388" width="2" height="15" fill="rgb(243,57,14)"/><text x="663.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="660" y="404" width="2" height="15" fill="rgb(214,64,36)"/><text x="663.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.11%)</title><rect x="660" y="420" width="2" height="15" fill="rgb(215,45,44)"/><text x="663.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.11%)</title><rect x="660" y="436" width="2" height="15" fill="rgb(242,30,26)"/><text x="663.00" y="446.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:199) (1 samples, 0.11%)</title><rect x="662" y="388" width="1" height="15" fill="rgb(244,64,45)"/><text x="665.00" y="398.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:700) (1 samples, 0.11%)</title><rect x="662" y="404" width="1" height="15" fill="rgb(229,183,12)"/><text x="665.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.22%)</title><rect x="662" y="356" width="2" height="15" fill="rgb(252,156,39)"/><text x="665.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.22%)</title><rect x="662" y="372" width="2" height="15" fill="rgb(221,8,17)"/><text x="665.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="663" y="388" width="1" height="15" fill="rgb(248,122,9)"/><text x="666.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.11%)</title><rect x="663" y="404" width="1" height="15" fill="rgb(235,194,29)"/><text x="666.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="663" y="420" width="1" height="15" fill="rgb(234,4,13)"/><text x="666.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.11%)</title><rect x="664" y="372" width="2" height="15" fill="rgb(240,207,1)"/><text x="667.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.11%)</title><rect x="666" y="372" width="1" height="15" fill="rgb(225,77,32)"/><text x="669.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.11%)</title><rect x="667" y="372" width="1" height="15" fill="rgb(219,50,0)"/><text x="670.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.11%)</title><rect x="668" y="372" width="2" height="15" fill="rgb(208,51,40)"/><text x="671.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.11%)</title><rect x="670" y="372" width="1" height="15" fill="rgb(234,171,40)"/><text x="673.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (2 samples, 0.22%)</title><rect x="672" y="388" width="3" height="15" fill="rgb(252,45,20)"/><text x="675.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (3 samples, 0.34%)</title><rect x="675" y="388" width="4" height="15" fill="rgb(246,34,53)"/><text x="678.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1668) (2 samples, 0.22%)</title><rect x="676" y="404" width="3" height="15" fill="rgb(207,14,48)"/><text x="679.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1762) (1 samples, 0.11%)</title><rect x="679" y="388" width="1" height="15" fill="rgb(206,147,38)"/><text x="682.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (44 samples, 4.93%)</title><rect x="623" y="196" width="59" height="15" fill="rgb(254,32,54)"/><text x="626.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (44 samples, 4.93%)</title><rect x="623" y="212" width="59" height="15" fill="rgb(234,11,45)"/><text x="626.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (19 samples, 2.13%)</title><rect x="656" y="228" width="26" height="15" fill="rgb(217,164,43)"/><text x="659.00" y="238.50">_..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (19 samples, 2.13%)</title><rect x="656" y="244" width="26" height="15" fill="rgb(235,115,45)"/><text x="659.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (19 samples, 2.13%)</title><rect x="656" y="260" width="26" height="15" fill="rgb(225,198,4)"/><text x="659.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (19 samples, 2.13%)</title><rect x="656" y="276" width="26" height="15" fill="rgb(220,27,49)"/><text x="659.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (19 samples, 2.13%)</title><rect x="656" y="292" width="26" height="15" fill="rgb(236,150,42)"/><text x="659.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (18 samples, 2.02%)</title><rect x="658" y="308" width="24" height="15" fill="rgb(213,120,34)"/><text x="661.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (16 samples, 1.79%)</title><rect x="660" y="324" width="22" height="15" fill="rgb(230,76,48)"/><text x="663.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (16 samples, 1.79%)</title><rect x="660" y="340" width="22" height="15" fill="rgb(223,84,7)"/><text x="663.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (13 samples, 1.46%)</title><rect x="664" y="356" width="18" height="15" fill="rgb(221,79,17)"/><text x="667.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (8 samples, 0.90%)</title><rect x="671" y="372" width="11" height="15" fill="rgb(237,139,12)"/><text x="674.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.11%)</title><rect x="680" y="388" width="2" height="15" fill="rgb(219,4,48)"/><text x="683.00" y="398.50"></text></g><g><title>0x7f46782f6ea0 (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="682" y="468" width="2" height="15" fill="rgb(227,165,43)"/><text x="685.00" y="478.50"></text></g><g><title>0x7f46782f6ea9 (libgomp.so.1.0.0) (11 samples, 1.23%)</title><rect x="684" y="468" width="15" height="15" fill="rgb(215,116,50)"/><text x="687.00" y="478.50"></text></g><g><title>0x7f46782f6eab (libgomp.so.1.0.0) (10 samples, 1.12%)</title><rect x="699" y="468" width="13" height="15" fill="rgb(211,51,5)"/><text x="702.00" y="478.50"></text></g><g><title>0x7f46782f5ab9 (libgomp.so.1.0.0) (31 samples, 3.48%)</title><rect x="682" y="452" width="41" height="15" fill="rgb(208,182,16)"/><text x="685.00" y="462.50">0x7..</text></g><g><title>0x7f46782f6ead (libgomp.so.1.0.0) (8 samples, 0.90%)</title><rect x="712" y="468" width="11" height="15" fill="rgb(240,206,26)"/><text x="715.00" y="478.50"></text></g><g><title>0x7f46782f6cfb (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="723" y="484" width="1" height="15" fill="rgb(236,117,36)"/><text x="726.00" y="494.50"></text></g><g><title>0x7f46782f4daa (libgomp.so.1.0.0) (5 samples, 0.56%)</title><rect x="723" y="468" width="6" height="15" fill="rgb(251,68,42)"/><text x="726.00" y="478.50"></text></g><g><title>0x7f46782f6cfd (libgomp.so.1.0.0) (4 samples, 0.45%)</title><rect x="724" y="484" width="5" height="15" fill="rgb(209,186,51)"/><text x="727.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (37 samples, 4.15%)</title><rect x="682" y="196" width="48" height="15" fill="rgb(242,215,38)"/><text x="685.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (37 samples, 4.15%)</title><rect x="682" y="212" width="48" height="15" fill="rgb(243,184,28)"/><text x="685.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (37 samples, 4.15%)</title><rect x="682" y="228" width="48" height="15" fill="rgb(207,203,16)"/><text x="685.00" y="238.50">_run..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (37 samples, 4.15%)</title><rect x="682" y="244" width="48" height="15" fill="rgb(218,4,26)"/><text x="685.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (37 samples, 4.15%)</title><rect x="682" y="260" width="48" height="15" fill="rgb(254,58,41)"/><text x="685.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (37 samples, 4.15%)</title><rect x="682" y="276" width="48" height="15" fill="rgb(221,178,20)"/><text x="685.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (37 samples, 4.15%)</title><rect x="682" y="292" width="48" height="15" fill="rgb(243,159,34)"/><text x="685.00" y="302.50">pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (37 samples, 4.15%)</title><rect x="682" y="308" width="48" height="15" fill="rgb(254,83,5)"/><text x="685.00" y="318.50">pybi..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (37 samples, 4.15%)</title><rect x="682" y="324" width="48" height="15" fill="rgb(245,64,7)"/><text x="685.00" y="334.50">pybi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (37 samples, 4.15%)</title><rect x="682" y="340" width="48" height="15" fill="rgb(240,125,20)"/><text x="685.00" y="350.50">pybi..</text></g><g><title>pybind11::array::~array (numpy.h:538) (37 samples, 4.15%)</title><rect x="682" y="356" width="48" height="15" fill="rgb(252,77,3)"/><text x="685.00" y="366.50">pybi..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (37 samples, 4.15%)</title><rect x="682" y="372" width="48" height="15" fill="rgb(227,20,13)"/><text x="685.00" y="382.50">pybi..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (37 samples, 4.15%)</title><rect x="682" y="388" width="48" height="15" fill="rgb(209,139,11)"/><text x="685.00" y="398.50">pybi..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (37 samples, 4.15%)</title><rect x="682" y="404" width="48" height="15" fill="rgb(245,191,25)"/><text x="685.00" y="414.50">pybi..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (37 samples, 4.15%)</title><rect x="682" y="420" width="48" height="15" fill="rgb(210,209,22)"/><text x="685.00" y="430.50">Runt..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (37 samples, 4.15%)</title><rect x="682" y="436" width="48" height="15" fill="rgb(239,51,26)"/><text x="685.00" y="446.50">pybi..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (6 samples, 0.67%)</title><rect x="723" y="452" width="7" height="15" fill="rgb(218,3,3)"/><text x="726.00" y="462.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:424) (1 samples, 0.11%)</title><rect x="729" y="468" width="1" height="15" fill="rgb(247,167,3)"/><text x="732.00" y="478.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::vector (stl_bvector.h:595) (1 samples, 0.11%)</title><rect x="729" y="484" width="1" height="15" fill="rgb(223,112,15)"/><text x="732.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_initialize (stl_bvector.h:1084) (1 samples, 0.11%)</title><rect x="729" y="500" width="1" height="15" fill="rgb(212,47,29)"/><text x="732.00" y="510.50"></text></g><g><title>std::_Bit_iterator::operator+ (stl_bvector.h:281) (1 samples, 0.11%)</title><rect x="729" y="516" width="1" height="15" fill="rgb(242,34,45)"/><text x="732.00" y="526.50"></text></g><g><title>std::_Bit_iterator::operator+= (stl_bvector.h:266) (1 samples, 0.11%)</title><rect x="729" y="532" width="1" height="15" fill="rgb(245,151,17)"/><text x="732.00" y="542.50"></text></g><g><title>std::_Bit_iterator_base::_M_incr (stl_bvector.h:169) (1 samples, 0.11%)</title><rect x="729" y="548" width="1" height="15" fill="rgb(238,1,32)"/><text x="732.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="729" y="564" width="1" height="15" fill="rgb(238,173,43)"/><text x="732.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="729" y="580" width="1" height="15" fill="rgb(206,133,19)"/><text x="732.00" y="590.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:431) (1 samples, 0.11%)</title><rect x="730" y="212" width="2" height="15" fill="rgb(254,94,50)"/><text x="733.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (2 samples, 0.22%)</title><rect x="732" y="228" width="2" height="15" fill="rgb(219,191,13)"/><text x="735.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="736" y="244" width="1" height="15" fill="rgb(252,72,43)"/><text x="739.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="736" y="260" width="1" height="15" fill="rgb(223,10,19)"/><text x="739.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="736" y="276" width="1" height="15" fill="rgb(206,126,16)"/><text x="739.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="736" y="292" width="1" height="15" fill="rgb(241,111,13)"/><text x="739.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.11%)</title><rect x="737" y="260" width="1" height="15" fill="rgb(224,59,50)"/><text x="740.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.11%)</title><rect x="737" y="276" width="1" height="15" fill="rgb(225,155,39)"/><text x="740.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="738" y="292" width="2" height="15" fill="rgb(216,49,17)"/><text x="741.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.11%)</title><rect x="738" y="308" width="2" height="15" fill="rgb(252,216,16)"/><text x="741.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="738" y="324" width="2" height="15" fill="rgb(236,175,15)"/><text x="741.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.11%)</title><rect x="740" y="292" width="1" height="15" fill="rgb(236,157,49)"/><text x="743.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="740" y="308" width="1" height="15" fill="rgb(214,46,37)"/><text x="743.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2039) (1 samples, 0.11%)</title><rect x="740" y="324" width="1" height="15" fill="rgb(210,112,34)"/><text x="743.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="741" y="292" width="1" height="15" fill="rgb(215,87,52)"/><text x="744.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src:765) (1 samples, 0.11%)</title><rect x="741" y="308" width="1" height="15" fill="rgb(235,127,14)"/><text x="744.00" y="318.50"></text></g><g><title>_mm_mul_ps (xmmintrin.h:169) (1 samples, 0.11%)</title><rect x="741" y="324" width="1" height="15" fill="rgb(209,110,37)"/><text x="744.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.56%)</title><rect x="738" y="276" width="7" height="15" fill="rgb(206,99,28)"/><text x="741.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.22%)</title><rect x="742" y="292" width="3" height="15" fill="rgb(253,135,3)"/><text x="745.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="744" y="308" width="1" height="15" fill="rgb(243,162,6)"/><text x="747.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.78%)</title><rect x="737" y="244" width="9" height="15" fill="rgb(244,122,35)"/><text x="740.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.67%)</title><rect x="738" y="260" width="8" height="15" fill="rgb(226,168,39)"/><text x="741.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.11%)</title><rect x="745" y="276" width="1" height="15" fill="rgb(236,147,49)"/><text x="748.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.11%)</title><rect x="745" y="292" width="1" height="15" fill="rgb(214,82,46)"/><text x="748.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="745" y="308" width="1" height="15" fill="rgb(220,25,40)"/><text x="748.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (10 samples, 1.12%)</title><rect x="734" y="228" width="14" height="15" fill="rgb(212,81,52)"/><text x="737.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.11%)</title><rect x="746" y="244" width="2" height="15" fill="rgb(245,67,7)"/><text x="749.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.11%)</title><rect x="746" y="260" width="2" height="15" fill="rgb(217,101,29)"/><text x="749.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.11%)</title><rect x="748" y="324" width="1" height="15" fill="rgb(205,176,53)"/><text x="751.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (1 samples, 0.11%)</title><rect x="748" y="340" width="1" height="15" fill="rgb(253,58,4)"/><text x="751.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="748" y="292" width="2" height="15" fill="rgb(233,158,52)"/><text x="751.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.22%)</title><rect x="748" y="308" width="2" height="15" fill="rgb(252,182,19)"/><text x="751.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3071) (1 samples, 0.11%)</title><rect x="749" y="324" width="1" height="15" fill="rgb(227,215,53)"/><text x="752.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1532) (1 samples, 0.11%)</title><rect x="750" y="292" width="2" height="15" fill="rgb(218,143,20)"/><text x="753.00" y="302.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c:1402) (1 samples, 0.11%)</title><rect x="750" y="308" width="2" height="15" fill="rgb(212,213,19)"/><text x="753.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.22%)</title><rect x="752" y="340" width="2" height="15" fill="rgb(247,161,41)"/><text x="755.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.11%)</title><rect x="754" y="356" width="2" height="15" fill="rgb(212,87,13)"/><text x="757.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.56%)</title><rect x="752" y="292" width="6" height="15" fill="rgb(234,62,41)"/><text x="755.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.56%)</title><rect x="752" y="308" width="6" height="15" fill="rgb(221,50,14)"/><text x="755.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.56%)</title><rect x="752" y="324" width="6" height="15" fill="rgb(229,129,21)"/><text x="755.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.34%)</title><rect x="754" y="340" width="4" height="15" fill="rgb(209,101,49)"/><text x="757.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (2 samples, 0.22%)</title><rect x="756" y="356" width="2" height="15" fill="rgb(236,199,47)"/><text x="759.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (22 samples, 2.47%)</title><rect x="730" y="196" width="30" height="15" fill="rgb(207,21,19)"/><text x="733.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (21 samples, 2.35%)</title><rect x="732" y="212" width="28" height="15" fill="rgb(244,99,51)"/><text x="735.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (9 samples, 1.01%)</title><rect x="748" y="228" width="12" height="15" fill="rgb(254,37,21)"/><text x="751.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.01%)</title><rect x="748" y="244" width="12" height="15" fill="rgb(226,170,31)"/><text x="751.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 1.01%)</title><rect x="748" y="260" width="12" height="15" fill="rgb(251,6,20)"/><text x="751.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (9 samples, 1.01%)</title><rect x="748" y="276" width="12" height="15" fill="rgb(208,152,6)"/><text x="751.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="758" y="292" width="2" height="15" fill="rgb(232,121,41)"/><text x="761.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="758" y="308" width="2" height="15" fill="rgb(227,92,16)"/><text x="761.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="758" y="324" width="2" height="15" fill="rgb(225,171,50)"/><text x="761.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="758" y="340" width="2" height="15" fill="rgb(219,225,14)"/><text x="761.00" y="350.50"></text></g><g><title>_mm_sub_ps (xmmintrin.h:163) (1 samples, 0.11%)</title><rect x="758" y="356" width="2" height="15" fill="rgb(218,187,16)"/><text x="761.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:63) (1 samples, 0.11%)</title><rect x="761" y="212" width="1" height="15" fill="rgb(226,20,53)"/><text x="764.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="766" y="228" width="2" height="15" fill="rgb(220,67,21)"/><text x="769.00" y="238.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="766" y="244" width="2" height="15" fill="rgb(206,176,32)"/><text x="769.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.11%)</title><rect x="766" y="260" width="2" height="15" fill="rgb(217,161,0)"/><text x="769.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.11%)</title><rect x="766" y="276" width="2" height="15" fill="rgb(207,170,21)"/><text x="769.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.11%)</title><rect x="766" y="292" width="2" height="15" fill="rgb(244,155,16)"/><text x="769.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.11%)</title><rect x="766" y="308" width="2" height="15" fill="rgb(220,10,37)"/><text x="769.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (1 samples, 0.11%)</title><rect x="766" y="324" width="2" height="15" fill="rgb(243,184,34)"/><text x="769.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.11%)</title><rect x="766" y="340" width="2" height="15" fill="rgb(233,42,45)"/><text x="769.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="766" y="356" width="2" height="15" fill="rgb(234,3,46)"/><text x="769.00" y="366.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="768" y="228" width="1" height="15" fill="rgb(221,70,1)"/><text x="771.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.11%)</title><rect x="773" y="244" width="1" height="15" fill="rgb(220,41,47)"/><text x="776.00" y="254.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:94) (1 samples, 0.11%)</title><rect x="773" y="260" width="1" height="15" fill="rgb(219,118,30)"/><text x="776.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:55) (1 samples, 0.11%)</title><rect x="777" y="276" width="1" height="15" fill="rgb(253,18,53)"/><text x="780.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.11%)</title><rect x="778" y="276" width="1" height="15" fill="rgb(245,184,16)"/><text x="781.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (1 samples, 0.11%)</title><rect x="779" y="276" width="2" height="15" fill="rgb(250,115,11)"/><text x="782.00" y="286.50"></text></g><g><title>array_clip (methods.c:2380) (1 samples, 0.11%)</title><rect x="781" y="292" width="1" height="15" fill="rgb(208,82,20)"/><text x="784.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (1 samples, 0.11%)</title><rect x="782" y="324" width="1" height="15" fill="rgb(243,221,23)"/><text x="785.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.11%)</title><rect x="782" y="340" width="1" height="15" fill="rgb(216,79,53)"/><text x="785.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="783" y="356" width="2" height="15" fill="rgb(224,164,24)"/><text x="786.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.11%)</title><rect x="785" y="388" width="1" height="15" fill="rgb(212,181,0)"/><text x="788.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="786" y="404" width="1" height="15" fill="rgb(214,199,12)"/><text x="789.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="786" y="420" width="1" height="15" fill="rgb(209,134,34)"/><text x="789.00" y="430.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="786" y="436" width="1" height="15" fill="rgb(208,148,15)"/><text x="789.00" y="446.50"></text></g><g><title>0x7f46ae345757 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="787" y="436" width="2" height="15" fill="rgb(206,157,52)"/><text x="790.00" y="446.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (5 samples, 0.56%)</title><rect x="783" y="340" width="7" height="15" fill="rgb(240,189,53)"/><text x="786.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (4 samples, 0.45%)</title><rect x="785" y="356" width="5" height="15" fill="rgb(215,16,9)"/><text x="788.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.45%)</title><rect x="785" y="372" width="5" height="15" fill="rgb(224,72,2)"/><text x="788.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (3 samples, 0.34%)</title><rect x="786" y="388" width="4" height="15" fill="rgb(208,63,49)"/><text x="789.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.22%)</title><rect x="787" y="404" width="3" height="15" fill="rgb(214,59,49)"/><text x="790.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.22%)</title><rect x="787" y="420" width="3" height="15" fill="rgb(216,100,48)"/><text x="790.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="789" y="436" width="1" height="15" fill="rgb(253,26,36)"/><text x="792.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="790" y="356" width="1" height="15" fill="rgb(238,62,43)"/><text x="793.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="790" y="372" width="1" height="15" fill="rgb(246,106,30)"/><text x="793.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="790" y="388" width="1" height="15" fill="rgb(222,110,45)"/><text x="793.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.11%)</title><rect x="790" y="404" width="1" height="15" fill="rgb(250,26,0)"/><text x="793.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (7 samples, 0.78%)</title><rect x="783" y="324" width="10" height="15" fill="rgb(216,197,39)"/><text x="786.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.22%)</title><rect x="790" y="340" width="3" height="15" fill="rgb(254,27,41)"/><text x="793.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.11%)</title><rect x="791" y="356" width="2" height="15" fill="rgb(243,34,43)"/><text x="794.00" y="366.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:440) (1 samples, 0.11%)</title><rect x="791" y="372" width="2" height="15" fill="rgb(223,183,42)"/><text x="794.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="794" y="372" width="1" height="15" fill="rgb(223,73,33)"/><text x="797.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="794" y="388" width="1" height="15" fill="rgb(224,17,34)"/><text x="797.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.11%)</title><rect x="794" y="404" width="1" height="15" fill="rgb(211,10,24)"/><text x="797.00" y="414.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.11%)</title><rect x="794" y="420" width="1" height="15" fill="rgb(242,28,5)"/><text x="797.00" y="430.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.11%)</title><rect x="794" y="436" width="1" height="15" fill="rgb(214,133,36)"/><text x="797.00" y="446.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:71) (1 samples, 0.11%)</title><rect x="794" y="452" width="1" height="15" fill="rgb(225,14,16)"/><text x="797.00" y="462.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.11%)</title><rect x="795" y="420" width="2" height="15" fill="rgb(252,102,26)"/><text x="798.00" y="430.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1625) (1 samples, 0.11%)</title><rect x="795" y="436" width="2" height="15" fill="rgb(210,42,3)"/><text x="798.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:464) (1 samples, 0.11%)</title><rect x="797" y="420" width="1" height="15" fill="rgb(228,228,13)"/><text x="800.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.34%)</title><rect x="795" y="404" width="4" height="15" fill="rgb(228,172,24)"/><text x="798.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.11%)</title><rect x="798" y="420" width="1" height="15" fill="rgb(234,143,24)"/><text x="801.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3158) (1 samples, 0.11%)</title><rect x="798" y="436" width="1" height="15" fill="rgb(233,144,52)"/><text x="801.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.22%)</title><rect x="799" y="404" width="3" height="15" fill="rgb(221,181,43)"/><text x="802.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.22%)</title><rect x="799" y="420" width="3" height="15" fill="rgb(233,42,38)"/><text x="802.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.22%)</title><rect x="799" y="436" width="3" height="15" fill="rgb(238,71,40)"/><text x="802.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (2 samples, 0.22%)</title><rect x="799" y="452" width="3" height="15" fill="rgb(223,198,9)"/><text x="802.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (2 samples, 0.22%)</title><rect x="799" y="468" width="3" height="15" fill="rgb(221,12,1)"/><text x="802.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1574) (1 samples, 0.11%)</title><rect x="802" y="404" width="1" height="15" fill="rgb(224,91,31)"/><text x="805.00" y="414.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1218) (1 samples, 0.11%)</title><rect x="802" y="420" width="1" height="15" fill="rgb(236,3,2)"/><text x="805.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 1.01%)</title><rect x="795" y="372" width="12" height="15" fill="rgb(210,109,42)"/><text x="798.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (9 samples, 1.01%)</title><rect x="795" y="388" width="12" height="15" fill="rgb(224,26,26)"/><text x="798.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.34%)</title><rect x="803" y="404" width="4" height="15" fill="rgb(229,127,33)"/><text x="806.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (3 samples, 0.34%)</title><rect x="803" y="420" width="4" height="15" fill="rgb(210,19,42)"/><text x="806.00" y="430.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (35 samples, 3.92%)</title><rect x="762" y="212" width="47" height="15" fill="rgb(246,206,27)"/><text x="765.00" y="222.50">_run..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (30 samples, 3.36%)</title><rect x="769" y="228" width="40" height="15" fill="rgb(252,19,6)"/><text x="772.00" y="238.50">cli..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (26 samples, 2.91%)</title><rect x="774" y="244" width="35" height="15" fill="rgb(240,186,0)"/><text x="777.00" y="254.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (25 samples, 2.80%)</title><rect x="775" y="260" width="34" height="15" fill="rgb(205,52,37)"/><text x="778.00" y="270.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (21 samples, 2.35%)</title><rect x="781" y="276" width="28" height="15" fill="rgb(236,122,46)"/><text x="784.00" y="286.50">_..</text></g><g><title>array_clip (methods.c:2381) (20 samples, 2.24%)</title><rect x="782" y="292" width="27" height="15" fill="rgb(209,217,2)"/><text x="785.00" y="302.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (20 samples, 2.24%)</title><rect x="782" y="308" width="27" height="15" fill="rgb(250,27,26)"/><text x="785.00" y="318.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:132) (12 samples, 1.35%)</title><rect x="793" y="324" width="16" height="15" fill="rgb(205,122,12)"/><text x="796.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (11 samples, 1.23%)</title><rect x="794" y="340" width="15" height="15" fill="rgb(249,98,33)"/><text x="797.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.23%)</title><rect x="794" y="356" width="15" height="15" fill="rgb(220,89,42)"/><text x="797.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.11%)</title><rect x="807" y="372" width="2" height="15" fill="rgb(241,179,50)"/><text x="810.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (154 samples, 17.26%)</title><rect x="606" y="180" width="204" height="15" fill="rgb(247,2,2)"/><text x="609.00" y="190.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (38 samples, 4.26%)</title><rect x="760" y="196" width="50" height="15" fill="rgb(236,136,6)"/><text x="763.00" y="206.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:67) (1 samples, 0.11%)</title><rect x="809" y="212" width="1" height="15" fill="rgb(248,95,33)"/><text x="812.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.11%)</title><rect x="810" y="180" width="1" height="15" fill="rgb(239,128,24)"/><text x="813.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (6 samples, 0.67%)</title><rect x="811" y="180" width="8" height="15" fill="rgb(211,206,51)"/><text x="814.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (8 samples, 0.90%)</title><rect x="819" y="180" width="11" height="15" fill="rgb(207,19,54)"/><text x="822.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:45) (296 samples, 33.18%)</title><rect x="441" y="52" width="391" height="15" fill="rgb(217,119,4)"/><text x="444.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_..</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:44) (296 samples, 33.18%)</title><rect x="441" y="68" width="391" height="15" fill="rgb(242,220,27)"/><text x="444.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:29) (295 samples, 33.07%)</title><rect x="442" y="84" width="390" height="15" fill="rgb(223,35,51)"/><text x="445.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:23) (181 samples, 20.29%)</title><rect x="593" y="100" width="239" height="15" fill="rgb(219,145,33)"/><text x="596.00" y="110.50">profile (bench_AdaBoostClassifi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (181 samples, 20.29%)</title><rect x="593" y="116" width="239" height="15" fill="rgb(228,39,43)"/><text x="596.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (181 samples, 20.29%)</title><rect x="593" y="132" width="239" height="15" fill="rgb(250,164,32)"/><text x="596.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchma..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (181 samples, 20.29%)</title><rect x="593" y="148" width="239" height="15" fill="rgb(222,122,10)"/><text x="596.00" y="158.50">run (mlprodict/onnxrt/onnx_infe..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (181 samples, 20.29%)</title><rect x="593" y="164" width="239" height="15" fill="rgb(206,102,26)"/><text x="596.00" y="174.50">_run_sequence_runtime (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.22%)</title><rect x="830" y="180" width="2" height="15" fill="rgb(248,71,46)"/><text x="833.00" y="190.50"></text></g><g><title>0x7f466dfedff9 (?) (1 samples, 0.11%)</title><rect x="832" y="212" width="2" height="15" fill="rgb(246,53,11)"/><text x="835.00" y="222.50"></text></g><g><title>0x7f466dfe8ef6 (?) (1 samples, 0.11%)</title><rect x="832" y="228" width="2" height="15" fill="rgb(211,109,16)"/><text x="835.00" y="238.50"></text></g><g><title>0x7f466dfdd962 (?) (1 samples, 0.11%)</title><rect x="832" y="244" width="2" height="15" fill="rgb(249,28,24)"/><text x="835.00" y="254.50"></text></g><g><title>0x7f466e0117a7 (?) (1 samples, 0.11%)</title><rect x="832" y="260" width="2" height="15" fill="rgb(254,159,48)"/><text x="835.00" y="270.50"></text></g><g><title>0x7f466e011379 (?) (1 samples, 0.11%)</title><rect x="832" y="276" width="2" height="15" fill="rgb(230,101,7)"/><text x="835.00" y="286.50"></text></g><g><title>0x7f466e46f8b8 (?) (1 samples, 0.11%)</title><rect x="832" y="292" width="2" height="15" fill="rgb(221,81,3)"/><text x="835.00" y="302.50"></text></g><g><title>0x7f466e46dc7f (?) (1 samples, 0.11%)</title><rect x="832" y="308" width="2" height="15" fill="rgb(253,157,38)"/><text x="835.00" y="318.50"></text></g><g><title>0x7f466e48099c (?) (1 samples, 0.11%)</title><rect x="832" y="324" width="2" height="15" fill="rgb(224,211,54)"/><text x="835.00" y="334.50"></text></g><g><title>0x7f466e19e396 (?) (1 samples, 0.11%)</title><rect x="832" y="340" width="2" height="15" fill="rgb(250,40,42)"/><text x="835.00" y="350.50"></text></g><g><title>0x7f466dfcbe08 (?) (1 samples, 0.11%)</title><rect x="832" y="356" width="2" height="15" fill="rgb(244,128,18)"/><text x="835.00" y="366.50"></text></g><g><title>0x7f46ae32fbe4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="832" y="372" width="2" height="15" fill="rgb(230,223,22)"/><text x="835.00" y="382.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="834" y="340" width="4" height="15" fill="rgb(243,116,42)"/><text x="837.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="838" y="372" width="8" height="15" fill="rgb(222,170,44)"/><text x="841.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="839" y="388" width="7" height="15" fill="rgb(253,197,33)"/><text x="842.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.78%)</title><rect x="838" y="340" width="9" height="15" fill="rgb(253,104,23)"/><text x="841.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.78%)</title><rect x="838" y="356" width="9" height="15" fill="rgb(252,17,47)"/><text x="841.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; [clone .constprop.2247] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="846" y="372" width="1" height="15" fill="rgb(206,154,41)"/><text x="849.00" y="382.50"></text></g><g><title>OrtValue::Get&lt;onnxruntime::Tensor&gt; [clone .localalias.13] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="846" y="388" width="1" height="15" fill="rgb(216,192,30)"/><text x="849.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="847" y="340" width="1" height="15" fill="rgb(247,47,35)"/><text x="850.00" y="350.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.45%)</title><rect x="848" y="340" width="5" height="15" fill="rgb(238,97,33)"/><text x="851.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="850" y="356" width="3" height="15" fill="rgb(247,174,9)"/><text x="853.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="850" y="372" width="3" height="15" fill="rgb(233,80,35)"/><text x="853.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="851" y="388" width="2" height="15" fill="rgb(231,57,49)"/><text x="854.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="872" y="356" width="1" height="15" fill="rgb(227,63,13)"/><text x="875.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="872" y="372" width="1" height="15" fill="rgb(211,167,46)"/><text x="875.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="873" y="356" width="2" height="15" fill="rgb(252,181,4)"/><text x="876.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (13 samples, 1.46%)</title><rect x="909" y="388" width="17" height="15" fill="rgb(244,80,43)"/><text x="912.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (11 samples, 1.23%)</title><rect x="912" y="404" width="14" height="15" fill="rgb(209,68,54)"/><text x="915.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (42 samples, 4.71%)</title><rect x="875" y="356" width="55" height="15" fill="rgb(233,138,50)"/><text x="878.00" y="366.50">onnxr..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 2.24%)</title><rect x="904" y="372" width="26" height="15" fill="rgb(230,26,0)"/><text x="907.00" y="382.50">s..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (3 samples, 0.34%)</title><rect x="926" y="388" width="4" height="15" fill="rgb(230,35,15)"/><text x="929.00" y="398.50"></text></g><g><title>0x7f46ae34fd97 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="934" y="372" width="2" height="15" fill="rgb(227,141,11)"/><text x="937.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="930" y="356" width="7" height="15" fill="rgb(213,116,32)"/><text x="933.00" y="366.50"></text></g><g><title>0x7f46ae34fdbb (libc-2.29.so) (1 samples, 0.11%)</title><rect x="936" y="372" width="1" height="15" fill="rgb(254,188,45)"/><text x="939.00" y="382.50"></text></g><g><title>0x7f469ddfc7a0 (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="938" y="372" width="3" height="15" fill="rgb(205,40,21)"/><text x="941.00" y="382.50"></text></g><g><title>0x7f46ae32f90e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="941" y="372" width="1" height="15" fill="rgb(251,49,4)"/><text x="944.00" y="382.50"></text></g><g><title>0x7f46ae32f998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="942" y="372" width="1" height="15" fill="rgb(250,105,34)"/><text x="945.00" y="382.50"></text></g><g><title>0x7f46ae32fa38 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="943" y="372" width="2" height="15" fill="rgb(206,126,38)"/><text x="946.00" y="382.50"></text></g><g><title>0x7f46ae32fa4c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="945" y="372" width="1" height="15" fill="rgb(239,53,1)"/><text x="948.00" y="382.50"></text></g><g><title>0x7f46ae32fbe8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="946" y="372" width="1" height="15" fill="rgb(235,204,37)"/><text x="949.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.34%)</title><rect x="947" y="372" width="4" height="15" fill="rgb(223,110,22)"/><text x="950.00" y="382.50"></text></g><g><title>0x7f46ae32f902 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="954" y="388" width="1" height="15" fill="rgb(252,214,11)"/><text x="957.00" y="398.50"></text></g><g><title>0x7f46ae32f957 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="955" y="388" width="2" height="15" fill="rgb(209,90,17)"/><text x="958.00" y="398.50"></text></g><g><title>0x7f46ae32f965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="957" y="388" width="1" height="15" fill="rgb(234,191,34)"/><text x="960.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.91%)</title><rect x="937" y="356" width="22" height="15" fill="rgb(233,37,21)"/><text x="940.00" y="366.50">s..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="951" y="372" width="8" height="15" fill="rgb(232,181,37)"/><text x="954.00" y="382.50"></text></g><g><title>0x7f46ae32fa41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="958" y="388" width="1" height="15" fill="rgb(237,60,19)"/><text x="961.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (82 samples, 9.19%)</title><rect x="853" y="340" width="109" height="15" fill="rgb(218,111,1)"/><text x="856.00" y="350.50">onnxruntime::..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="959" y="356" width="3" height="15" fill="rgb(218,177,31)"/><text x="962.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 11.21%)</title><rect x="834" y="260" width="132" height="15" fill="rgb(252,128,33)"/><text x="837.00" y="270.50">onnxruntime::Inf..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 11.21%)</title><rect x="834" y="276" width="132" height="15" fill="rgb(239,51,12)"/><text x="837.00" y="286.50">onnxruntime::Inf..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 11.21%)</title><rect x="834" y="292" width="132" height="15" fill="rgb(232,77,40)"/><text x="837.00" y="302.50">onnxruntime::uti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 11.21%)</title><rect x="834" y="308" width="132" height="15" fill="rgb(219,168,9)"/><text x="837.00" y="318.50">onnxruntime::uti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 11.21%)</title><rect x="834" y="324" width="132" height="15" fill="rgb(207,6,24)"/><text x="837.00" y="334.50">onnxruntime::Seq..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="962" y="340" width="4" height="15" fill="rgb(248,157,50)"/><text x="965.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="963" y="356" width="3" height="15" fill="rgb(249,124,15)"/><text x="966.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="963" y="372" width="3" height="15" fill="rgb(236,21,13)"/><text x="966.00" y="382.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:18) (105 samples, 11.77%)</title><rect x="832" y="100" width="139" height="15" fill="rgb(248,225,24)"/><text x="835.00" y="110.50">profile (bench_Ad..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (105 samples, 11.77%)</title><rect x="832" y="116" width="139" height="15" fill="rgb(206,224,38)"/><text x="835.00" y="126.50">time_predict (mlp..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (105 samples, 11.77%)</title><rect x="832" y="132" width="139" height="15" fill="rgb(210,189,32)"/><text x="835.00" y="142.50">&lt;lambda&gt; (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (105 samples, 11.77%)</title><rect x="832" y="148" width="139" height="15" fill="rgb(217,222,0)"/><text x="835.00" y="158.50">run (mlprodict/on..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (105 samples, 11.77%)</title><rect x="832" y="164" width="139" height="15" fill="rgb(232,174,35)"/><text x="835.00" y="174.50">_run_whole_runtim..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (105 samples, 11.77%)</title><rect x="832" y="180" width="139" height="15" fill="rgb(250,146,45)"/><text x="835.00" y="190.50">run (mlprodict/on..</text></g><g><title>run (onnxruntime/capi/session.py:136) (105 samples, 11.77%)</title><rect x="832" y="196" width="139" height="15" fill="rgb(233,26,0)"/><text x="835.00" y="206.50">run (onnxruntime/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 11.66%)</title><rect x="834" y="212" width="137" height="15" fill="rgb(211,121,43)"/><text x="837.00" y="222.50">pybind11::cpp_fun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 11.66%)</title><rect x="834" y="228" width="137" height="15" fill="rgb(224,202,25)"/><text x="837.00" y="238.50">void pybind11::cp..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 11.66%)</title><rect x="834" y="244" width="137" height="15" fill="rgb(239,26,23)"/><text x="837.00" y="254.50">onnxruntime::pyth..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.45%)</title><rect x="966" y="260" width="5" height="15" fill="rgb(230,202,14)"/><text x="969.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="970" y="276" width="1" height="15" fill="rgb(225,74,37)"/><text x="973.00" y="286.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="975" y="340" width="2" height="15" fill="rgb(225,152,10)"/><text x="978.00" y="350.50"></text></g><g><title>onnxruntime::Div&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="977" y="340" width="1" height="15" fill="rgb(229,186,44)"/><text x="980.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="977" y="356" width="1" height="15" fill="rgb(253,213,53)"/><text x="980.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="977" y="372" width="1" height="15" fill="rgb(245,226,29)"/><text x="980.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="978" y="340" width="1" height="15" fill="rgb(224,20,28)"/><text x="981.00" y="350.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.90%)</title><rect x="979" y="340" width="11" height="15" fill="rgb(221,227,44)"/><text x="982.00" y="350.50"></text></g><g><title>0x7f46ae32f9ed (libc-2.29.so) (1 samples, 0.11%)</title><rect x="990" y="372" width="1" height="15" fill="rgb(248,193,45)"/><text x="993.00" y="382.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.23%)</title><rect x="990" y="340" width="14" height="15" fill="rgb(246,59,17)"/><text x="993.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.23%)</title><rect x="990" y="356" width="14" height="15" fill="rgb(251,148,30)"/><text x="993.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.12%)</title><rect x="991" y="372" width="13" height="15" fill="rgb(235,227,42)"/><text x="994.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="1000" y="388" width="4" height="15" fill="rgb(244,87,27)"/><text x="1003.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1004" y="340" width="2" height="15" fill="rgb(252,201,10)"/><text x="1007.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="1006" y="372" width="8" height="15" fill="rgb(216,212,49)"/><text x="1009.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="1010" y="388" width="4" height="15" fill="rgb(214,141,31)"/><text x="1013.00" y="398.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.78%)</title><rect x="1006" y="340" width="9" height="15" fill="rgb(236,63,25)"/><text x="1009.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.78%)</title><rect x="1006" y="356" width="9" height="15" fill="rgb(234,80,44)"/><text x="1009.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1014" y="372" width="1" height="15" fill="rgb(229,137,9)"/><text x="1017.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1014" y="388" width="1" height="15" fill="rgb(238,13,20)"/><text x="1017.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1014" y="404" width="1" height="15" fill="rgb(249,77,6)"/><text x="1017.00" y="414.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1045" y="356" width="3" height="15" fill="rgb(252,96,22)"/><text x="1048.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (14 samples, 1.57%)</title><rect x="1102" y="388" width="19" height="15" fill="rgb(252,188,11)"/><text x="1105.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (12 samples, 1.35%)</title><rect x="1105" y="404" width="16" height="15" fill="rgb(217,31,23)"/><text x="1108.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 7.06%)</title><rect x="1048" y="356" width="83" height="15" fill="rgb(235,63,4)"/><text x="1051.00" y="366.50">onnxrunti..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 3.70%)</title><rect x="1088" y="372" width="43" height="15" fill="rgb(215,58,47)"/><text x="1091.00" y="382.50">std:..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (8 samples, 0.90%)</title><rect x="1121" y="388" width="10" height="15" fill="rgb(251,20,38)"/><text x="1124.00" y="398.50"></text></g><g><title>0x7f46ae34fdae (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1139" y="372" width="2" height="15" fill="rgb(206,47,49)"/><text x="1142.00" y="382.50"></text></g><g><title>0x7f46ae34fdbb (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1141" y="372" width="1" height="15" fill="rgb(232,191,17)"/><text x="1144.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.01%)</title><rect x="1131" y="356" width="12" height="15" fill="rgb(221,219,7)"/><text x="1134.00" y="366.50"></text></g><g><title>0x7f46ae34fdbe (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1142" y="372" width="1" height="15" fill="rgb(240,16,2)"/><text x="1145.00" y="382.50"></text></g><g><title>0x7f469ddfc7a0 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1145" y="372" width="1" height="15" fill="rgb(221,2,40)"/><text x="1148.00" y="382.50"></text></g><g><title>0x7f46ae32f91c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1146" y="372" width="1" height="15" fill="rgb(249,118,12)"/><text x="1149.00" y="382.50"></text></g><g><title>0x7f46ae32f991 (libc-2.29.so) (3 samples, 0.34%)</title><rect x="1147" y="372" width="4" height="15" fill="rgb(254,108,19)"/><text x="1150.00" y="382.50"></text></g><g><title>0x7f46ae32f998 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1151" y="372" width="3" height="15" fill="rgb(252,144,48)"/><text x="1154.00" y="382.50"></text></g><g><title>0x7f46ae32fbe8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1154" y="372" width="1" height="15" fill="rgb(241,217,46)"/><text x="1157.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.56%)</title><rect x="1155" y="372" width="7" height="15" fill="rgb(215,48,21)"/><text x="1158.00" y="382.50"></text></g><g><title>0x7f46ae32f93b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1166" y="388" width="1" height="15" fill="rgb(249,181,53)"/><text x="1169.00" y="398.50"></text></g><g><title>0x7f46ae32f998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1167" y="388" width="1" height="15" fill="rgb(240,107,49)"/><text x="1170.00" y="398.50"></text></g><g><title>0x7f46ae32fa41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1168" y="388" width="2" height="15" fill="rgb(225,5,38)"/><text x="1171.00" y="398.50"></text></g><g><title>0x7f46ae32fa4d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1170" y="388" width="1" height="15" fill="rgb(205,6,13)"/><text x="1173.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 2.58%)</title><rect x="1143" y="356" width="31" height="15" fill="rgb(214,201,53)"/><text x="1146.00" y="366.50">st..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.01%)</title><rect x="1162" y="372" width="12" height="15" fill="rgb(232,37,2)"/><text x="1165.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1171" y="388" width="3" height="15" fill="rgb(217,202,33)"/><text x="1174.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (125 samples, 14.01%)</title><rect x="1015" y="340" width="165" height="15" fill="rgb(229,117,34)"/><text x="1018.00" y="350.50">onnxruntime::ml::Tree..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (5 samples, 0.56%)</title><rect x="1174" y="356" width="6" height="15" fill="rgb(224,108,32)"/><text x="1177.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 17.94%)</title><rect x="975" y="260" width="212" height="15" fill="rgb(236,78,31)"/><text x="978.00" y="270.50">onnxruntime::InferenceSessi..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 17.94%)</title><rect x="975" y="276" width="212" height="15" fill="rgb(242,207,25)"/><text x="978.00" y="286.50">onnxruntime::InferenceSessi..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 17.94%)</title><rect x="975" y="292" width="212" height="15" fill="rgb(228,162,35)"/><text x="978.00" y="302.50">onnxruntime::utils::Execute..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 17.94%)</title><rect x="975" y="308" width="212" height="15" fill="rgb(225,21,16)"/><text x="978.00" y="318.50">onnxruntime::utils::Execute..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 17.94%)</title><rect x="975" y="324" width="212" height="15" fill="rgb(208,166,18)"/><text x="978.00" y="334.50">onnxruntime::SequentialExec..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="1180" y="340" width="7" height="15" fill="rgb(228,3,38)"/><text x="1183.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.56%)</title><rect x="1180" y="356" width="7" height="15" fill="rgb(208,195,21)"/><text x="1183.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.56%)</title><rect x="1180" y="372" width="7" height="15" fill="rgb(233,107,24)"/><text x="1183.00" y="382.50"></text></g><g><title>0x7f46ae330dec (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1186" y="388" width="1" height="15" fill="rgb(224,99,19)"/><text x="1189.00" y="398.50"></text></g><g><title>all (892 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(234,61,5)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:52) (270 samples, 30.27%)</title><rect x="832" y="52" width="358" height="15" fill="rgb(247,123,38)"/><text x="835.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:51) (270 samples, 30.27%)</title><rect x="832" y="68" width="358" height="15" fill="rgb(230,12,24)"/><text x="835.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_m_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:29) (270 samples, 30.27%)</title><rect x="832" y="84" width="358" height="15" fill="rgb(250,93,10)"/><text x="835.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_4_12_float_.py:23) (165 samples, 18.50%)</title><rect x="971" y="100" width="219" height="15" fill="rgb(251,146,51)"/><text x="974.00" y="110.50">profile (bench_AdaBoostClass..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (164 samples, 18.39%)</title><rect x="973" y="116" width="217" height="15" fill="rgb(238,26,22)"/><text x="976.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (164 samples, 18.39%)</title><rect x="973" y="132" width="217" height="15" fill="rgb(232,224,53)"/><text x="976.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (162 samples, 18.16%)</title><rect x="975" y="148" width="215" height="15" fill="rgb(248,16,18)"/><text x="978.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (162 samples, 18.16%)</title><rect x="975" y="164" width="215" height="15" fill="rgb(224,54,43)"/><text x="978.00" y="174.50">_run_whole_runtime (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (162 samples, 18.16%)</title><rect x="975" y="180" width="215" height="15" fill="rgb(240,105,2)"/><text x="978.00" y="190.50">run (mlprodict/onnxrt/ops_wh..</text></g><g><title>run (onnxruntime/capi/session.py:136) (162 samples, 18.16%)</title><rect x="975" y="196" width="215" height="15" fill="rgb(254,184,32)"/><text x="978.00" y="206.50">run (onnxruntime/capi/sessio..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (162 samples, 18.16%)</title><rect x="975" y="212" width="215" height="15" fill="rgb(232,196,25)"/><text x="978.00" y="222.50">pybind11::cpp_function::disp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (162 samples, 18.16%)</title><rect x="975" y="228" width="215" height="15" fill="rgb(211,31,4)"/><text x="978.00" y="238.50">void pybind11::cpp_function:..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (162 samples, 18.16%)</title><rect x="975" y="244" width="215" height="15" fill="rgb(236,187,22)"/><text x="978.00" y="254.50">onnxruntime::python::addObje..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(210,18,7)"/><text x="1190.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(242,38,18)"/><text x="1190.00" y="286.50"></text></g></g></svg>