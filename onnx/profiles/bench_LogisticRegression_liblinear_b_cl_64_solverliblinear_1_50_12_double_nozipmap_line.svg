<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1910" onload="init(evt)" viewBox="0 0 1200 1910" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1910" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1893.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1893.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozipmap.py:31) (1 samples, 0.34%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(250,49,30)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozipmap.py:11) (1 samples, 0.34%)</title><rect x="10" y="68" width="4" height="15" fill="rgb(242,44,10)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:39) (1 samples, 0.34%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(221,8,47)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.34%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(232,42,54)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (1 samples, 0.34%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(229,86,40)"/><text x="13.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:384) (1 samples, 0.34%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(236,118,19)"/><text x="13.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py:244) (1 samples, 0.34%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(225,227,11)"/><text x="13.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.34%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(223,125,10)"/><text x="13.00" y="174.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.34%)</title><rect x="14" y="100" width="4" height="15" fill="rgb(250,95,4)"/><text x="17.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.34%)</title><rect x="14" y="116" width="4" height="15" fill="rgb(239,85,18)"/><text x="17.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (1 samples, 0.34%)</title><rect x="14" y="132" width="4" height="15" fill="rgb(209,12,48)"/><text x="17.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="14" y="148" width="4" height="15" fill="rgb(245,152,48)"/><text x="17.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="14" y="164" width="4" height="15" fill="rgb(213,173,13)"/><text x="17.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="14" y="180" width="4" height="15" fill="rgb(211,200,1)"/><text x="17.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="14" y="196" width="4" height="15" fill="rgb(221,153,41)"/><text x="17.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="14" y="212" width="4" height="15" fill="rgb(243,144,40)"/><text x="17.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:16) (1 samples, 0.34%)</title><rect x="14" y="228" width="4" height="15" fill="rgb(225,58,3)"/><text x="17.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="14" y="244" width="4" height="15" fill="rgb(249,196,43)"/><text x="17.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="14" y="260" width="4" height="15" fill="rgb(223,132,16)"/><text x="17.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="14" y="276" width="4" height="15" fill="rgb(251,183,32)"/><text x="17.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="14" y="292" width="4" height="15" fill="rgb(237,45,41)"/><text x="17.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="14" y="308" width="4" height="15" fill="rgb(239,9,8)"/><text x="17.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/sklearn.py:16) (1 samples, 0.34%)</title><rect x="14" y="324" width="4" height="15" fill="rgb(252,70,23)"/><text x="17.00" y="334.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozipmap.py:28) (2 samples, 0.69%)</title><rect x="14" y="84" width="8" height="15" fill="rgb(222,21,1)"/><text x="17.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.34%)</title><rect x="18" y="100" width="4" height="15" fill="rgb(245,75,30)"/><text x="21.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.34%)</title><rect x="18" y="116" width="4" height="15" fill="rgb(208,104,37)"/><text x="21.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:108) (1 samples, 0.34%)</title><rect x="18" y="132" width="4" height="15" fill="rgb(254,2,4)"/><text x="21.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.34%)</title><rect x="18" y="148" width="4" height="15" fill="rgb(218,158,38)"/><text x="21.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.34%)</title><rect x="18" y="164" width="4" height="15" fill="rgb(218,186,36)"/><text x="21.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.34%)</title><rect x="18" y="180" width="4" height="15" fill="rgb(243,23,26)"/><text x="21.00" y="190.50"></text></g><g><title>convert_sklearn_linear_classifier (skl2onnx/operator_converters/linear_classifier.py:112) (1 samples, 0.34%)</title><rect x="18" y="196" width="4" height="15" fill="rgb(224,22,12)"/><text x="21.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.34%)</title><rect x="18" y="212" width="4" height="15" fill="rgb(240,164,7)"/><text x="21.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.34%)</title><rect x="18" y="228" width="4" height="15" fill="rgb(209,52,10)"/><text x="21.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="18" y="244" width="4" height="15" fill="rgb(241,47,19)"/><text x="21.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.34%)</title><rect x="18" y="260" width="4" height="15" fill="rgb(238,35,51)"/><text x="21.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:93) (1 samples, 0.34%)</title><rect x="18" y="276" width="4" height="15" fill="rgb(215,84,37)"/><text x="21.00" y="286.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.34%)</title><rect x="18" y="292" width="4" height="15" fill="rgb(209,166,19)"/><text x="21.00" y="302.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.34%)</title><rect x="18" y="308" width="4" height="15" fill="rgb(209,8,25)"/><text x="21.00" y="318.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.34%)</title><rect x="18" y="324" width="4" height="15" fill="rgb(250,141,41)"/><text x="21.00" y="334.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.34%)</title><rect x="18" y="340" width="4" height="15" fill="rgb(218,103,15)"/><text x="21.00" y="350.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.34%)</title><rect x="18" y="356" width="4" height="15" fill="rgb(247,27,48)"/><text x="21.00" y="366.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozipmap.py:22) (1 samples, 0.34%)</title><rect x="22" y="100" width="4" height="15" fill="rgb(242,107,42)"/><text x="25.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.34%)</title><rect x="30" y="116" width="4" height="15" fill="rgb(233,115,42)"/><text x="33.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.34%)</title><rect x="30" y="132" width="4" height="15" fill="rgb(244,129,41)"/><text x="33.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.34%)</title><rect x="30" y="148" width="4" height="15" fill="rgb(225,162,20)"/><text x="33.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.69%)</title><rect x="38" y="164" width="8" height="15" fill="rgb(220,53,32)"/><text x="41.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.69%)</title><rect x="38" y="180" width="8" height="15" fill="rgb(217,111,2)"/><text x="41.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (2 samples, 0.69%)</title><rect x="46" y="164" width="8" height="15" fill="rgb(226,156,21)"/><text x="49.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (3 samples, 1.03%)</title><rect x="66" y="180" width="13" height="15" fill="rgb(218,71,25)"/><text x="69.00" y="190.50"></text></g><g><title>0x7f715f74312f (libc-2.29.so) (1 samples, 0.34%)</title><rect x="99" y="196" width="4" height="15" fill="rgb(243,136,5)"/><text x="102.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.72%)</title><rect x="103" y="196" width="20" height="15" fill="rgb(226,89,22)"/><text x="106.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (22 samples, 7.59%)</title><rect x="38" y="148" width="89" height="15" fill="rgb(234,41,38)"/><text x="41.00" y="158.50">predict_pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (18 samples, 6.21%)</title><rect x="54" y="164" width="73" height="15" fill="rgb(205,135,52)"/><text x="57.00" y="174.50">check_is..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (12 samples, 4.14%)</title><rect x="79" y="180" width="48" height="15" fill="rgb(233,216,20)"/><text x="82.00" y="190.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.34%)</title><rect x="123" y="196" width="4" height="15" fill="rgb(208,34,37)"/><text x="126.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.34%)</title><rect x="127" y="148" width="5" height="15" fill="rgb(228,10,20)"/><text x="130.00" y="158.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.34%)</title><rect x="132" y="148" width="4" height="15" fill="rgb(212,157,42)"/><text x="135.00" y="158.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 2.76%)</title><rect x="140" y="212" width="32" height="15" fill="rgb(229,143,29)"/><text x="143.00" y="222.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.69%)</title><rect x="164" y="228" width="8" height="15" fill="rgb(211,77,9)"/><text x="167.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (9 samples, 3.10%)</title><rect x="140" y="180" width="36" height="15" fill="rgb(218,0,20)"/><text x="143.00" y="190.50">dec..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 3.10%)</title><rect x="140" y="196" width="36" height="15" fill="rgb(238,62,26)"/><text x="143.00" y="206.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.34%)</title><rect x="172" y="212" width="4" height="15" fill="rgb(236,58,7)"/><text x="175.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.34%)</title><rect x="172" y="228" width="4" height="15" fill="rgb(240,93,14)"/><text x="175.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.34%)</title><rect x="176" y="196" width="4" height="15" fill="rgb(210,61,16)"/><text x="179.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.34%)</title><rect x="180" y="196" width="4" height="15" fill="rgb(219,75,14)"/><text x="183.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.69%)</title><rect x="184" y="196" width="9" height="15" fill="rgb(249,143,25)"/><text x="187.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1189) (1 samples, 0.34%)</title><rect x="189" y="212" width="4" height="15" fill="rgb(222,213,53)"/><text x="192.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.34%)</title><rect x="205" y="212" width="4" height="15" fill="rgb(230,207,20)"/><text x="208.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.34%)</title><rect x="209" y="212" width="4" height="15" fill="rgb(238,145,16)"/><text x="212.00" y="222.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.34%)</title><rect x="213" y="212" width="4" height="15" fill="rgb(216,84,50)"/><text x="216.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (7 samples, 2.41%)</title><rect x="193" y="196" width="28" height="15" fill="rgb(239,214,51)"/><text x="196.00" y="206.50">c..</text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.34%)</title><rect x="217" y="212" width="4" height="15" fill="rgb(208,43,53)"/><text x="220.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.34%)</title><rect x="221" y="212" width="4" height="15" fill="rgb(238,52,34)"/><text x="224.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.38%)</title><rect x="221" y="196" width="16" height="15" fill="rgb(227,218,18)"/><text x="224.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 1.03%)</title><rect x="225" y="212" width="12" height="15" fill="rgb(239,142,39)"/><text x="228.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 1.03%)</title><rect x="225" y="228" width="12" height="15" fill="rgb(224,171,35)"/><text x="228.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.69%)</title><rect x="237" y="196" width="8" height="15" fill="rgb(234,78,16)"/><text x="240.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.69%)</title><rect x="237" y="212" width="8" height="15" fill="rgb(252,104,16)"/><text x="240.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1630) (1 samples, 0.34%)</title><rect x="241" y="228" width="4" height="15" fill="rgb(210,72,18)"/><text x="244.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.34%)</title><rect x="245" y="212" width="5" height="15" fill="rgb(206,28,50)"/><text x="248.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.34%)</title><rect x="250" y="212" width="4" height="15" fill="rgb(235,186,51)"/><text x="253.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 1.03%)</title><rect x="245" y="196" width="13" height="15" fill="rgb(205,25,20)"/><text x="248.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.34%)</title><rect x="254" y="212" width="4" height="15" fill="rgb(241,142,0)"/><text x="257.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (3 samples, 1.03%)</title><rect x="258" y="212" width="12" height="15" fill="rgb(238,165,23)"/><text x="261.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (4 samples, 1.38%)</title><rect x="258" y="196" width="16" height="15" fill="rgb(237,52,7)"/><text x="261.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:336) (1 samples, 0.34%)</title><rect x="270" y="212" width="4" height="15" fill="rgb(253,218,17)"/><text x="273.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.34%)</title><rect x="274" y="196" width="4" height="15" fill="rgb(214,67,42)"/><text x="277.00" y="206.50"></text></g><g><title>array_ndim_get (getset.c:30) (1 samples, 0.34%)</title><rect x="274" y="212" width="4" height="15" fill="rgb(218,57,47)"/><text x="277.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (4 samples, 1.38%)</title><rect x="282" y="212" width="16" height="15" fill="rgb(253,192,51)"/><text x="285.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (4 samples, 1.38%)</title><rect x="282" y="228" width="16" height="15" fill="rgb(226,143,17)"/><text x="285.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (7 samples, 2.41%)</title><rect x="278" y="196" width="29" height="15" fill="rgb(235,125,34)"/><text x="281.00" y="206.50">ch..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (2 samples, 0.69%)</title><rect x="298" y="212" width="9" height="15" fill="rgb(205,13,0)"/><text x="301.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.34%)</title><rect x="307" y="196" width="4" height="15" fill="rgb(247,87,26)"/><text x="310.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (2 samples, 0.69%)</title><rect x="311" y="196" width="8" height="15" fill="rgb(242,205,3)"/><text x="314.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.34%)</title><rect x="347" y="228" width="4" height="15" fill="rgb(224,64,48)"/><text x="350.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.34%)</title><rect x="351" y="228" width="4" height="15" fill="rgb(213,88,29)"/><text x="354.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (10 samples, 3.45%)</title><rect x="331" y="212" width="41" height="15" fill="rgb(205,1,43)"/><text x="334.00" y="222.50">_as..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (4 samples, 1.38%)</title><rect x="355" y="228" width="17" height="15" fill="rgb(243,140,11)"/><text x="358.00" y="238.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.34%)</title><rect x="368" y="244" width="4" height="15" fill="rgb(221,41,35)"/><text x="371.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (14 samples, 4.83%)</title><rect x="319" y="196" width="57" height="15" fill="rgb(232,111,25)"/><text x="322.00" y="206.50">check_..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.34%)</title><rect x="372" y="212" width="4" height="15" fill="rgb(205,180,7)"/><text x="375.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 1.03%)</title><rect x="376" y="212" width="12" height="15" fill="rgb(231,48,26)"/><text x="379.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="384" y="228" width="4" height="15" fill="rgb(254,166,27)"/><text x="387.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.34%)</title><rect x="388" y="212" width="4" height="15" fill="rgb(209,194,50)"/><text x="391.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 1.38%)</title><rect x="392" y="212" width="16" height="15" fill="rgb(217,205,25)"/><text x="395.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 1.38%)</title><rect x="392" y="228" width="16" height="15" fill="rgb(240,85,20)"/><text x="395.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.69%)</title><rect x="400" y="244" width="8" height="15" fill="rgb(221,178,32)"/><text x="403.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (9 samples, 3.10%)</title><rect x="376" y="196" width="36" height="15" fill="rgb(252,12,20)"/><text x="379.00" y="206.50">che..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.34%)</title><rect x="408" y="212" width="4" height="15" fill="rgb(224,164,43)"/><text x="411.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.34%)</title><rect x="408" y="228" width="4" height="15" fill="rgb(252,29,47)"/><text x="411.00" y="238.50"></text></g><g><title>0x7f715f743124 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="408" y="244" width="4" height="15" fill="rgb(222,140,0)"/><text x="411.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:574) (1 samples, 0.34%)</title><rect x="412" y="196" width="4" height="15" fill="rgb(218,95,33)"/><text x="415.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (60 samples, 20.69%)</title><rect x="176" y="180" width="244" height="15" fill="rgb(250,171,28)"/><text x="179.00" y="190.50">decision_function (sklearn/linea..</text></g><g><title>check_array (sklearn/utils/validation.py:588) (1 samples, 0.34%)</title><rect x="416" y="196" width="4" height="15" fill="rgb(223,207,0)"/><text x="419.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (2 samples, 0.69%)</title><rect x="420" y="180" width="9" height="15" fill="rgb(211,205,41)"/><text x="423.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (2 samples, 0.69%)</title><rect x="420" y="196" width="9" height="15" fill="rgb(205,170,1)"/><text x="423.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (2 samples, 0.69%)</title><rect x="420" y="212" width="9" height="15" fill="rgb(225,229,47)"/><text x="423.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (2 samples, 0.69%)</title><rect x="420" y="228" width="9" height="15" fill="rgb(235,176,39)"/><text x="423.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (2 samples, 0.69%)</title><rect x="420" y="244" width="9" height="15" fill="rgb(215,107,31)"/><text x="423.00" y="254.50"></text></g><g><title>array_add (number.c:326) (1 samples, 0.34%)</title><rect x="429" y="196" width="4" height="15" fill="rgb(209,47,4)"/><text x="432.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3155) (1 samples, 0.34%)</title><rect x="433" y="228" width="4" height="15" fill="rgb(249,121,41)"/><text x="436.00" y="238.50"></text></g><g><title>0x7f715f743120 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="433" y="244" width="4" height="15" fill="rgb(207,203,12)"/><text x="436.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.34%)</title><rect x="437" y="228" width="4" height="15" fill="rgb(237,61,38)"/><text x="440.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.34%)</title><rect x="437" y="244" width="4" height="15" fill="rgb(244,110,20)"/><text x="440.00" y="254.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.34%)</title><rect x="437" y="260" width="4" height="15" fill="rgb(249,21,1)"/><text x="440.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:201) (1 samples, 0.34%)</title><rect x="441" y="276" width="4" height="15" fill="rgb(252,23,54)"/><text x="444.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2477) (1 samples, 0.34%)</title><rect x="445" y="308" width="4" height="15" fill="rgb(247,95,38)"/><text x="448.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 1.03%)</title><rect x="441" y="260" width="12" height="15" fill="rgb(228,112,13)"/><text x="444.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.69%)</title><rect x="445" y="276" width="8" height="15" fill="rgb(239,167,9)"/><text x="448.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.69%)</title><rect x="445" y="292" width="8" height="15" fill="rgb(253,212,41)"/><text x="448.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2597) (1 samples, 0.34%)</title><rect x="449" y="308" width="4" height="15" fill="rgb(224,217,35)"/><text x="452.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.07%)</title><rect x="433" y="212" width="24" height="15" fill="rgb(251,57,41)"/><text x="436.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.38%)</title><rect x="441" y="228" width="16" height="15" fill="rgb(211,162,38)"/><text x="444.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.38%)</title><rect x="441" y="244" width="16" height="15" fill="rgb(213,148,12)"/><text x="444.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.34%)</title><rect x="453" y="260" width="4" height="15" fill="rgb(212,82,33)"/><text x="456.00" y="270.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.34%)</title><rect x="453" y="276" width="4" height="15" fill="rgb(239,97,16)"/><text x="456.00" y="286.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1843) (1 samples, 0.34%)</title><rect x="453" y="292" width="4" height="15" fill="rgb(244,65,0)"/><text x="456.00" y="302.50"></text></g><g><title>array_add (number.c:330) (7 samples, 2.41%)</title><rect x="433" y="196" width="28" height="15" fill="rgb(218,96,44)"/><text x="436.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.34%)</title><rect x="457" y="212" width="4" height="15" fill="rgb(228,105,16)"/><text x="460.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.34%)</title><rect x="461" y="228" width="4" height="15" fill="rgb(251,29,54)"/><text x="464.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.69%)</title><rect x="461" y="196" width="8" height="15" fill="rgb(252,149,31)"/><text x="464.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.69%)</title><rect x="461" y="212" width="8" height="15" fill="rgb(244,93,2)"/><text x="464.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.34%)</title><rect x="465" y="228" width="4" height="15" fill="rgb(210,169,40)"/><text x="468.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.34%)</title><rect x="469" y="212" width="4" height="15" fill="rgb(240,100,18)"/><text x="472.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="469" y="228" width="4" height="15" fill="rgb(240,95,19)"/><text x="472.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.34%)</title><rect x="469" y="244" width="4" height="15" fill="rgb(245,169,50)"/><text x="472.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:96) (1 samples, 0.34%)</title><rect x="469" y="260" width="4" height="15" fill="rgb(213,77,8)"/><text x="472.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2689) (1 samples, 0.34%)</title><rect x="473" y="244" width="4" height="15" fill="rgb(211,176,6)"/><text x="476.00" y="254.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c:2431) (1 samples, 0.34%)</title><rect x="473" y="260" width="4" height="15" fill="rgb(236,31,29)"/><text x="476.00" y="270.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.34%)</title><rect x="477" y="260" width="4" height="15" fill="rgb(245,106,34)"/><text x="480.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2819) (2 samples, 0.69%)</title><rect x="477" y="244" width="9" height="15" fill="rgb(216,216,51)"/><text x="480.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.34%)</title><rect x="481" y="260" width="5" height="15" fill="rgb(241,18,45)"/><text x="484.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2846) (1 samples, 0.34%)</title><rect x="486" y="244" width="4" height="15" fill="rgb(207,184,22)"/><text x="489.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.34%)</title><rect x="490" y="260" width="4" height="15" fill="rgb(228,29,5)"/><text x="493.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.34%)</title><rect x="490" y="276" width="4" height="15" fill="rgb(232,119,52)"/><text x="493.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.34%)</title><rect x="490" y="292" width="4" height="15" fill="rgb(234,53,54)"/><text x="493.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2825) (1 samples, 0.34%)</title><rect x="494" y="276" width="4" height="15" fill="rgb(242,29,19)"/><text x="497.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (3 samples, 1.03%)</title><rect x="490" y="244" width="12" height="15" fill="rgb(226,202,6)"/><text x="493.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.69%)</title><rect x="494" y="260" width="8" height="15" fill="rgb(236,112,8)"/><text x="497.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.34%)</title><rect x="498" y="276" width="4" height="15" fill="rgb(228,141,18)"/><text x="501.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.34%)</title><rect x="498" y="292" width="4" height="15" fill="rgb(252,39,46)"/><text x="501.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.34%)</title><rect x="498" y="308" width="4" height="15" fill="rgb(247,50,12)"/><text x="501.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.34%)</title><rect x="498" y="324" width="4" height="15" fill="rgb(243,103,32)"/><text x="501.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.34%)</title><rect x="498" y="340" width="4" height="15" fill="rgb(230,166,15)"/><text x="501.00" y="350.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (9 samples, 3.10%)</title><rect x="469" y="196" width="37" height="15" fill="rgb(250,112,16)"/><text x="472.00" y="206.50">saf..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 2.76%)</title><rect x="473" y="212" width="33" height="15" fill="rgb(254,90,26)"/><text x="476.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (8 samples, 2.76%)</title><rect x="473" y="228" width="33" height="15" fill="rgb(248,46,16)"/><text x="476.00" y="238.50">Py..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.34%)</title><rect x="502" y="244" width="4" height="15" fill="rgb(212,32,37)"/><text x="505.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.34%)</title><rect x="502" y="260" width="4" height="15" fill="rgb(254,155,32)"/><text x="505.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.34%)</title><rect x="502" y="276" width="4" height="15" fill="rgb(209,180,12)"/><text x="505.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="502" y="292" width="4" height="15" fill="rgb(233,35,2)"/><text x="505.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (92 samples, 31.72%)</title><rect x="136" y="164" width="374" height="15" fill="rgb(242,16,34)"/><text x="139.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py:3..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (20 samples, 6.90%)</title><rect x="429" y="180" width="81" height="15" fill="rgb(225,59,26)"/><text x="432.00" y="190.50">decision_..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.34%)</title><rect x="506" y="196" width="4" height="15" fill="rgb(223,69,41)"/><text x="509.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.34%)</title><rect x="506" y="212" width="4" height="15" fill="rgb(227,54,27)"/><text x="509.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.34%)</title><rect x="514" y="212" width="4" height="15" fill="rgb(249,98,19)"/><text x="517.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.69%)</title><rect x="514" y="180" width="8" height="15" fill="rgb(209,48,42)"/><text x="517.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.69%)</title><rect x="514" y="196" width="8" height="15" fill="rgb(251,58,34)"/><text x="517.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1230) (1 samples, 0.34%)</title><rect x="518" y="212" width="4" height="15" fill="rgb(222,7,8)"/><text x="521.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (4 samples, 1.38%)</title><rect x="510" y="164" width="16" height="15" fill="rgb(239,55,39)"/><text x="513.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.34%)</title><rect x="522" y="180" width="4" height="15" fill="rgb(244,14,40)"/><text x="525.00" y="190.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.34%)</title><rect x="522" y="196" width="4" height="15" fill="rgb(249,91,16)"/><text x="525.00" y="206.50"></text></g><g><title>array_inplace_true_divide (number.c:842) (1 samples, 0.34%)</title><rect x="538" y="180" width="5" height="15" fill="rgb(217,0,25)"/><text x="541.00" y="190.50"></text></g><g><title>PyArray_GenericInplaceBinaryFunction (number.c:303) (1 samples, 0.34%)</title><rect x="538" y="196" width="5" height="15" fill="rgb(240,169,34)"/><text x="541.00" y="206.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.69%)</title><rect x="543" y="180" width="8" height="15" fill="rgb(245,100,45)"/><text x="546.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.34%)</title><rect x="547" y="196" width="4" height="15" fill="rgb(232,41,28)"/><text x="550.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.34%)</title><rect x="547" y="212" width="4" height="15" fill="rgb(206,26,21)"/><text x="550.00" y="222.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.34%)</title><rect x="547" y="228" width="4" height="15" fill="rgb(223,140,49)"/><text x="550.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.34%)</title><rect x="547" y="244" width="4" height="15" fill="rgb(240,201,42)"/><text x="550.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.34%)</title><rect x="551" y="180" width="4" height="15" fill="rgb(209,139,35)"/><text x="554.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.34%)</title><rect x="551" y="196" width="4" height="15" fill="rgb(214,97,19)"/><text x="554.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.34%)</title><rect x="551" y="212" width="4" height="15" fill="rgb(212,148,0)"/><text x="554.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.34%)</title><rect x="551" y="228" width="4" height="15" fill="rgb(225,28,2)"/><text x="554.00" y="238.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.34%)</title><rect x="551" y="244" width="4" height="15" fill="rgb(246,30,46)"/><text x="554.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.34%)</title><rect x="551" y="260" width="4" height="15" fill="rgb(229,54,3)"/><text x="554.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="551" y="276" width="4" height="15" fill="rgb(250,217,14)"/><text x="554.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 1.03%)</title><rect x="567" y="276" width="12" height="15" fill="rgb(223,75,9)"/><text x="570.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 1.03%)</title><rect x="567" y="292" width="12" height="15" fill="rgb(244,142,31)"/><text x="570.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 1.03%)</title><rect x="567" y="308" width="12" height="15" fill="rgb(249,0,38)"/><text x="570.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (4 samples, 1.38%)</title><rect x="567" y="228" width="16" height="15" fill="rgb(246,40,18)"/><text x="570.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 1.38%)</title><rect x="567" y="244" width="16" height="15" fill="rgb(223,156,14)"/><text x="570.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (4 samples, 1.38%)</title><rect x="567" y="260" width="16" height="15" fill="rgb(236,78,10)"/><text x="570.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:47) (1 samples, 0.34%)</title><rect x="579" y="276" width="4" height="15" fill="rgb(250,172,14)"/><text x="582.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3626) (1 samples, 0.34%)</title><rect x="583" y="260" width="4" height="15" fill="rgb(210,194,54)"/><text x="586.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.69%)</title><rect x="587" y="260" width="8" height="15" fill="rgb(240,53,6)"/><text x="590.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.69%)</title><rect x="587" y="276" width="8" height="15" fill="rgb(253,86,41)"/><text x="590.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.34%)</title><rect x="591" y="292" width="4" height="15" fill="rgb(207,68,18)"/><text x="594.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2200) (1 samples, 0.34%)</title><rect x="591" y="308" width="4" height="15" fill="rgb(242,201,48)"/><text x="594.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.34%)</title><rect x="595" y="276" width="5" height="15" fill="rgb(252,13,0)"/><text x="598.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.34%)</title><rect x="595" y="292" width="5" height="15" fill="rgb(246,2,42)"/><text x="598.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:58) (1 samples, 0.34%)</title><rect x="595" y="308" width="5" height="15" fill="rgb(209,117,27)"/><text x="598.00" y="318.50"></text></g><g><title>0x7f715e9451c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="595" y="324" width="5" height="15" fill="rgb(210,142,17)"/><text x="598.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.34%)</title><rect x="600" y="276" width="4" height="15" fill="rgb(209,92,4)"/><text x="603.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.34%)</title><rect x="600" y="292" width="4" height="15" fill="rgb(253,92,21)"/><text x="603.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.34%)</title><rect x="600" y="308" width="4" height="15" fill="rgb(247,124,41)"/><text x="603.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.34%)</title><rect x="600" y="324" width="4" height="15" fill="rgb(249,82,47)"/><text x="603.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.34%)</title><rect x="600" y="340" width="4" height="15" fill="rgb(210,132,21)"/><text x="603.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="600" y="356" width="4" height="15" fill="rgb(205,80,31)"/><text x="603.00" y="366.50"></text></g><g><title>0x7f715f6daa19 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="600" y="372" width="4" height="15" fill="rgb(213,143,1)"/><text x="603.00" y="382.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:753) (1 samples, 0.34%)</title><rect x="600" y="388" width="4" height="15" fill="rgb(209,186,47)"/><text x="603.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.34%)</title><rect x="604" y="276" width="4" height="15" fill="rgb(249,222,54)"/><text x="607.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.34%)</title><rect x="604" y="292" width="4" height="15" fill="rgb(230,51,27)"/><text x="607.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3040) (1 samples, 0.34%)</title><rect x="604" y="308" width="4" height="15" fill="rgb(215,8,13)"/><text x="607.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.34%)</title><rect x="608" y="308" width="4" height="15" fill="rgb(223,67,23)"/><text x="611.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (15 samples, 5.17%)</title><rect x="555" y="180" width="61" height="15" fill="rgb(236,82,54)"/><text x="558.00" y="190.50">array_..</text></g><g><title>forward_ndarray_method (methods.c:108) (15 samples, 5.17%)</title><rect x="555" y="196" width="61" height="15" fill="rgb(245,151,0)"/><text x="558.00" y="206.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py:38) (15 samples, 5.17%)</title><rect x="555" y="212" width="61" height="15" fill="rgb(212,198,2)"/><text x="558.00" y="222.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 2.76%)</title><rect x="583" y="228" width="33" height="15" fill="rgb(221,79,32)"/><text x="586.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 2.76%)</title><rect x="583" y="244" width="33" height="15" fill="rgb(221,38,10)"/><text x="586.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.72%)</title><rect x="595" y="260" width="21" height="15" fill="rgb(230,127,10)"/><text x="598.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.69%)</title><rect x="608" y="276" width="8" height="15" fill="rgb(242,89,29)"/><text x="611.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (2 samples, 0.69%)</title><rect x="608" y="292" width="8" height="15" fill="rgb(218,208,41)"/><text x="611.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.34%)</title><rect x="612" y="308" width="4" height="15" fill="rgb(228,135,9)"/><text x="615.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1969) (1 samples, 0.34%)</title><rect x="612" y="324" width="4" height="15" fill="rgb(210,217,26)"/><text x="615.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.34%)</title><rect x="616" y="180" width="4" height="15" fill="rgb(251,174,46)"/><text x="619.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="616" y="196" width="4" height="15" fill="rgb(237,224,30)"/><text x="619.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.34%)</title><rect x="616" y="212" width="4" height="15" fill="rgb(251,138,1)"/><text x="619.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.34%)</title><rect x="616" y="228" width="4" height="15" fill="rgb(233,119,51)"/><text x="619.00" y="238.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1346) (1 samples, 0.34%)</title><rect x="620" y="212" width="4" height="15" fill="rgb(248,16,9)"/><text x="623.00" y="222.50"></text></g><g><title>PyUFunc_DivisionTypeResolver (ufunc_type_resolution.c:1165) (1 samples, 0.34%)</title><rect x="620" y="228" width="4" height="15" fill="rgb(211,96,39)"/><text x="623.00" y="238.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:288) (1 samples, 0.34%)</title><rect x="620" y="244" width="4" height="15" fill="rgb(205,220,23)"/><text x="623.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.69%)</title><rect x="620" y="196" width="8" height="15" fill="rgb(222,209,41)"/><text x="623.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2049) (1 samples, 0.34%)</title><rect x="624" y="212" width="4" height="15" fill="rgb(205,229,23)"/><text x="627.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (2 samples, 0.69%)</title><rect x="628" y="196" width="8" height="15" fill="rgb(252,33,50)"/><text x="631.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (2 samples, 0.69%)</title><rect x="628" y="212" width="8" height="15" fill="rgb(236,220,14)"/><text x="631.00" y="222.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.34%)</title><rect x="636" y="260" width="4" height="15" fill="rgb(223,204,43)"/><text x="639.00" y="270.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:947) (1 samples, 0.34%)</title><rect x="636" y="276" width="4" height="15" fill="rgb(211,160,9)"/><text x="639.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.69%)</title><rect x="636" y="244" width="8" height="15" fill="rgb(242,141,13)"/><text x="639.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.34%)</title><rect x="640" y="260" width="4" height="15" fill="rgb(254,3,11)"/><text x="643.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.34%)</title><rect x="640" y="276" width="4" height="15" fill="rgb(211,94,24)"/><text x="643.00" y="286.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.34%)</title><rect x="640" y="292" width="4" height="15" fill="rgb(250,48,9)"/><text x="643.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.34%)</title><rect x="644" y="244" width="4" height="15" fill="rgb(235,55,3)"/><text x="647.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3024) (1 samples, 0.34%)</title><rect x="644" y="260" width="4" height="15" fill="rgb(215,46,11)"/><text x="647.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.38%)</title><rect x="636" y="228" width="16" height="15" fill="rgb(229,149,49)"/><text x="639.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.34%)</title><rect x="648" y="244" width="4" height="15" fill="rgb(212,153,7)"/><text x="651.00" y="254.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.34%)</title><rect x="648" y="260" width="4" height="15" fill="rgb(228,128,21)"/><text x="651.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.34%)</title><rect x="652" y="228" width="4" height="15" fill="rgb(223,226,48)"/><text x="655.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.34%)</title><rect x="652" y="244" width="4" height="15" fill="rgb(235,102,42)"/><text x="655.00" y="254.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1707) (1 samples, 0.34%)</title><rect x="652" y="260" width="4" height="15" fill="rgb(247,192,22)"/><text x="655.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (153 samples, 52.76%)</title><rect x="38" y="132" width="623" height="15" fill="rgb(248,187,42)"/><text x="41.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (129 samples, 44.48%)</title><rect x="136" y="148" width="525" height="15" fill="rgb(227,114,9)"/><text x="139.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (33 samples, 11.38%)</title><rect x="526" y="164" width="135" height="15" fill="rgb(221,89,22)"/><text x="529.00" y="174.50">_predict_proba_lr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 3.45%)</title><rect x="620" y="180" width="41" height="15" fill="rgb(246,115,15)"/><text x="623.00" y="190.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 2.07%)</title><rect x="636" y="196" width="25" height="15" fill="rgb(244,49,43)"/><text x="639.00" y="206.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 2.07%)</title><rect x="636" y="212" width="25" height="15" fill="rgb(212,80,20)"/><text x="639.00" y="222.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.34%)</title><rect x="656" y="228" width="5" height="15" fill="rgb(238,226,53)"/><text x="659.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (1 samples, 0.34%)</title><rect x="656" y="244" width="5" height="15" fill="rgb(240,177,19)"/><text x="659.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:245) (1 samples, 0.34%)</title><rect x="656" y="260" width="5" height="15" fill="rgb(218,117,20)"/><text x="659.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozipmap.py:38) (160 samples, 55.17%)</title><rect x="14" y="52" width="651" height="15" fill="rgb(245,42,49)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozip..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozipmap.py:37) (160 samples, 55.17%)</title><rect x="14" y="68" width="651" height="15" fill="rgb(220,52,28)"/><text x="17.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_no..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozipmap.py:29) (158 samples, 54.48%)</title><rect x="22" y="84" width="643" height="15" fill="rgb(243,154,30)"/><text x="25.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozipmap.py:23) (157 samples, 54.14%)</title><rect x="26" y="100" width="639" height="15" fill="rgb(242,176,48)"/><text x="29.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozip..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (155 samples, 53.45%)</title><rect x="34" y="116" width="631" height="15" fill="rgb(219,117,36)"/><text x="37.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.34%)</title><rect x="661" y="132" width="4" height="15" fill="rgb(217,221,50)"/><text x="664.00" y="142.50"></text></g><g><title>0x7f715f800e7d (libc-2.29.so) (1 samples, 0.34%)</title><rect x="661" y="148" width="4" height="15" fill="rgb(224,200,1)"/><text x="664.00" y="158.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.34%)</title><rect x="665" y="244" width="4" height="15" fill="rgb(247,181,19)"/><text x="668.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="665" y="260" width="4" height="15" fill="rgb(216,68,48)"/><text x="668.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="665" y="276" width="4" height="15" fill="rgb(230,47,12)"/><text x="668.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="665" y="292" width="4" height="15" fill="rgb(214,97,39)"/><text x="668.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="665" y="308" width="4" height="15" fill="rgb(242,59,1)"/><text x="668.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="665" y="324" width="4" height="15" fill="rgb(235,39,7)"/><text x="668.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="665" y="340" width="4" height="15" fill="rgb(238,169,8)"/><text x="668.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="665" y="356" width="4" height="15" fill="rgb(217,149,13)"/><text x="668.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:78) (1 samples, 0.34%)</title><rect x="665" y="372" width="4" height="15" fill="rgb(210,131,15)"/><text x="668.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="665" y="388" width="4" height="15" fill="rgb(217,189,50)"/><text x="668.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="665" y="404" width="4" height="15" fill="rgb(235,212,10)"/><text x="668.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (1 samples, 0.34%)</title><rect x="665" y="420" width="4" height="15" fill="rgb(229,120,53)"/><text x="668.00" y="430.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:315) (1 samples, 0.34%)</title><rect x="665" y="436" width="4" height="15" fill="rgb(214,2,31)"/><text x="668.00" y="446.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:1) (2 samples, 0.69%)</title><rect x="665" y="148" width="8" height="15" fill="rgb(222,199,43)"/><text x="668.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="665" y="164" width="8" height="15" fill="rgb(218,163,46)"/><text x="668.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="665" y="180" width="8" height="15" fill="rgb(215,174,48)"/><text x="668.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="665" y="196" width="8" height="15" fill="rgb(211,223,29)"/><text x="668.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="665" y="212" width="8" height="15" fill="rgb(222,201,7)"/><text x="668.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="665" y="228" width="8" height="15" fill="rgb(236,39,33)"/><text x="668.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:148) (1 samples, 0.34%)</title><rect x="669" y="244" width="4" height="15" fill="rgb(243,174,14)"/><text x="672.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="669" y="260" width="4" height="15" fill="rgb(250,79,1)"/><text x="672.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="669" y="276" width="4" height="15" fill="rgb(230,92,22)"/><text x="672.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="669" y="292" width="4" height="15" fill="rgb(208,85,38)"/><text x="672.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="669" y="308" width="4" height="15" fill="rgb(230,123,15)"/><text x="672.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="669" y="324" width="4" height="15" fill="rgb(207,167,47)"/><text x="672.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="669" y="340" width="4" height="15" fill="rgb(221,137,8)"/><text x="672.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="669" y="356" width="4" height="15" fill="rgb(236,5,34)"/><text x="672.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/fft/__init__.py:188) (1 samples, 0.34%)</title><rect x="669" y="372" width="4" height="15" fill="rgb(225,102,44)"/><text x="672.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="669" y="388" width="4" height="15" fill="rgb(226,119,48)"/><text x="672.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="669" y="404" width="4" height="15" fill="rgb(220,191,54)"/><text x="672.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="669" y="420" width="4" height="15" fill="rgb(250,15,31)"/><text x="672.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="669" y="436" width="4" height="15" fill="rgb(240,35,7)"/><text x="672.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="669" y="452" width="4" height="15" fill="rgb(222,226,23)"/><text x="672.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/fft/_pocketfft.py:951) (1 samples, 0.34%)</title><rect x="669" y="468" width="4" height="15" fill="rgb(250,228,29)"/><text x="672.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py:156) (1 samples, 0.34%)</title><rect x="669" y="484" width="4" height="15" fill="rgb(212,18,21)"/><text x="672.00" y="494.50"></text></g><g><title>verify_matching_signatures (numpy/core/overrides.py:75) (1 samples, 0.34%)</title><rect x="669" y="500" width="4" height="15" fill="rgb(209,152,3)"/><text x="672.00" y="510.50"></text></g><g><title>getargspec (numpy/compat/_inspect.py:112) (1 samples, 0.34%)</title><rect x="669" y="516" width="4" height="15" fill="rgb(221,26,24)"/><text x="672.00" y="526.50"></text></g><g><title>getargs (numpy/compat/_inspect.py:86) (1 samples, 0.34%)</title><rect x="669" y="532" width="4" height="15" fill="rgb(219,44,18)"/><text x="672.00" y="542.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.34%)</title><rect x="673" y="916" width="4" height="15" fill="rgb(212,211,4)"/><text x="676.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.34%)</title><rect x="673" y="932" width="4" height="15" fill="rgb(237,17,51)"/><text x="676.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.34%)</title><rect x="673" y="948" width="4" height="15" fill="rgb(249,44,5)"/><text x="676.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.34%)</title><rect x="673" y="964" width="4" height="15" fill="rgb(244,84,15)"/><text x="676.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.34%)</title><rect x="673" y="980" width="4" height="15" fill="rgb(235,161,17)"/><text x="676.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.34%)</title><rect x="673" y="996" width="4" height="15" fill="rgb(231,71,45)"/><text x="676.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.34%)</title><rect x="673" y="1012" width="4" height="15" fill="rgb(229,160,54)"/><text x="676.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.34%)</title><rect x="673" y="1028" width="4" height="15" fill="rgb(213,50,47)"/><text x="676.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.34%)</title><rect x="673" y="1044" width="4" height="15" fill="rgb(248,54,12)"/><text x="676.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.69%)</title><rect x="673" y="852" width="8" height="15" fill="rgb(208,52,54)"/><text x="676.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.69%)</title><rect x="673" y="868" width="8" height="15" fill="rgb(219,99,34)"/><text x="676.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.69%)</title><rect x="673" y="884" width="8" height="15" fill="rgb(248,56,10)"/><text x="676.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.69%)</title><rect x="673" y="900" width="8" height="15" fill="rgb(237,2,24)"/><text x="676.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.34%)</title><rect x="677" y="916" width="4" height="15" fill="rgb(245,44,51)"/><text x="680.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.34%)</title><rect x="677" y="932" width="4" height="15" fill="rgb(253,65,38)"/><text x="680.00" y="942.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.34%)</title><rect x="677" y="948" width="4" height="15" fill="rgb(221,163,47)"/><text x="680.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.34%)</title><rect x="677" y="964" width="4" height="15" fill="rgb(236,53,16)"/><text x="680.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:2) (3 samples, 1.03%)</title><rect x="673" y="148" width="12" height="15" fill="rgb(234,146,30)"/><text x="676.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="673" y="164" width="12" height="15" fill="rgb(222,100,11)"/><text x="676.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.03%)</title><rect x="673" y="180" width="12" height="15" fill="rgb(207,78,42)"/><text x="676.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="673" y="196" width="12" height="15" fill="rgb(205,208,23)"/><text x="676.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="673" y="212" width="12" height="15" fill="rgb(232,130,27)"/><text x="676.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="673" y="228" width="12" height="15" fill="rgb(224,181,30)"/><text x="676.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="673" y="244" width="12" height="15" fill="rgb(213,229,42)"/><text x="676.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="673" y="260" width="12" height="15" fill="rgb(223,100,5)"/><text x="676.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="673" y="276" width="12" height="15" fill="rgb(206,11,49)"/><text x="676.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 1.03%)</title><rect x="673" y="292" width="12" height="15" fill="rgb(253,188,52)"/><text x="676.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="673" y="308" width="12" height="15" fill="rgb(239,48,27)"/><text x="676.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="673" y="324" width="12" height="15" fill="rgb(233,123,9)"/><text x="676.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="673" y="340" width="12" height="15" fill="rgb(207,25,43)"/><text x="676.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="673" y="356" width="12" height="15" fill="rgb(252,105,50)"/><text x="676.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="673" y="372" width="12" height="15" fill="rgb(228,72,31)"/><text x="676.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.03%)</title><rect x="673" y="388" width="12" height="15" fill="rgb(229,30,35)"/><text x="676.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="673" y="404" width="12" height="15" fill="rgb(234,81,49)"/><text x="676.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="673" y="420" width="12" height="15" fill="rgb(208,120,52)"/><text x="676.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="673" y="436" width="12" height="15" fill="rgb(224,191,30)"/><text x="676.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="673" y="452" width="12" height="15" fill="rgb(253,116,39)"/><text x="676.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="673" y="468" width="12" height="15" fill="rgb(234,174,36)"/><text x="676.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.03%)</title><rect x="673" y="484" width="12" height="15" fill="rgb(224,100,50)"/><text x="676.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="673" y="500" width="12" height="15" fill="rgb(209,47,31)"/><text x="676.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="673" y="516" width="12" height="15" fill="rgb(251,29,48)"/><text x="676.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="673" y="532" width="12" height="15" fill="rgb(238,76,40)"/><text x="676.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="673" y="548" width="12" height="15" fill="rgb(254,59,22)"/><text x="676.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="673" y="564" width="12" height="15" fill="rgb(210,47,1)"/><text x="676.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 1.03%)</title><rect x="673" y="580" width="12" height="15" fill="rgb(211,98,47)"/><text x="676.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="673" y="596" width="12" height="15" fill="rgb(242,42,40)"/><text x="676.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.03%)</title><rect x="673" y="612" width="12" height="15" fill="rgb(222,82,50)"/><text x="676.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="673" y="628" width="12" height="15" fill="rgb(213,214,9)"/><text x="676.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="673" y="644" width="12" height="15" fill="rgb(234,65,30)"/><text x="676.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="673" y="660" width="12" height="15" fill="rgb(248,189,54)"/><text x="676.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="673" y="676" width="12" height="15" fill="rgb(254,203,36)"/><text x="676.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="673" y="692" width="12" height="15" fill="rgb(234,120,5)"/><text x="676.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="673" y="708" width="12" height="15" fill="rgb(210,58,44)"/><text x="676.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 1.03%)</title><rect x="673" y="724" width="12" height="15" fill="rgb(247,205,29)"/><text x="676.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="673" y="740" width="12" height="15" fill="rgb(210,185,51)"/><text x="676.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="673" y="756" width="12" height="15" fill="rgb(253,111,4)"/><text x="676.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="673" y="772" width="12" height="15" fill="rgb(220,155,31)"/><text x="676.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="673" y="788" width="12" height="15" fill="rgb(239,166,30)"/><text x="676.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="673" y="804" width="12" height="15" fill="rgb(209,221,50)"/><text x="676.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 1.03%)</title><rect x="673" y="820" width="12" height="15" fill="rgb(210,180,39)"/><text x="676.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 1.03%)</title><rect x="673" y="836" width="12" height="15" fill="rgb(233,201,17)"/><text x="676.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.34%)</title><rect x="681" y="852" width="4" height="15" fill="rgb(212,177,51)"/><text x="684.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.34%)</title><rect x="681" y="868" width="4" height="15" fill="rgb(236,149,29)"/><text x="684.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.34%)</title><rect x="681" y="884" width="4" height="15" fill="rgb(221,12,18)"/><text x="684.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.34%)</title><rect x="681" y="900" width="4" height="15" fill="rgb(221,33,2)"/><text x="684.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:18) (1 samples, 0.34%)</title><rect x="685" y="484" width="4" height="15" fill="rgb(247,224,0)"/><text x="688.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="685" y="500" width="4" height="15" fill="rgb(240,136,42)"/><text x="688.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="685" y="516" width="4" height="15" fill="rgb(221,45,24)"/><text x="688.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="685" y="532" width="4" height="15" fill="rgb(209,143,12)"/><text x="688.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="685" y="548" width="4" height="15" fill="rgb(253,170,1)"/><text x="688.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="685" y="564" width="4" height="15" fill="rgb(210,193,2)"/><text x="688.00" y="574.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:230) (1 samples, 0.34%)</title><rect x="685" y="580" width="4" height="15" fill="rgb(243,176,46)"/><text x="688.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="685" y="596" width="4" height="15" fill="rgb(212,172,54)"/><text x="688.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="685" y="612" width="4" height="15" fill="rgb(233,92,30)"/><text x="688.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="685" y="628" width="4" height="15" fill="rgb(246,1,47)"/><text x="688.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="685" y="644" width="4" height="15" fill="rgb(252,85,49)"/><text x="688.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="685" y="660" width="4" height="15" fill="rgb(238,160,47)"/><text x="688.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csr.py:17) (1 samples, 0.34%)</title><rect x="685" y="676" width="4" height="15" fill="rgb(239,98,11)"/><text x="688.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="685" y="692" width="4" height="15" fill="rgb(221,133,24)"/><text x="688.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="685" y="708" width="4" height="15" fill="rgb(221,134,20)"/><text x="688.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="685" y="724" width="4" height="15" fill="rgb(208,159,29)"/><text x="688.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="685" y="740" width="4" height="15" fill="rgb(231,32,17)"/><text x="688.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="685" y="756" width="4" height="15" fill="rgb(244,14,11)"/><text x="688.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/compressed.py:14) (1 samples, 0.34%)</title><rect x="685" y="772" width="4" height="15" fill="rgb(211,125,8)"/><text x="688.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="685" y="788" width="4" height="15" fill="rgb(242,187,39)"/><text x="688.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.34%)</title><rect x="685" y="804" width="4" height="15" fill="rgb(223,141,20)"/><text x="688.00" y="814.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.34%)</title><rect x="685" y="820" width="4" height="15" fill="rgb(249,34,52)"/><text x="688.00" y="830.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.34%)</title><rect x="685" y="836" width="4" height="15" fill="rgb(232,191,42)"/><text x="688.00" y="846.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.34%)</title><rect x="685" y="852" width="4" height="15" fill="rgb(252,206,46)"/><text x="688.00" y="862.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.34%)</title><rect x="685" y="868" width="4" height="15" fill="rgb(241,115,24)"/><text x="688.00" y="878.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.34%)</title><rect x="685" y="884" width="4" height="15" fill="rgb(230,169,43)"/><text x="688.00" y="894.50"></text></g><g><title>0x7f71408d5857 (?) (1 samples, 0.34%)</title><rect x="689" y="1556" width="4" height="15" fill="rgb(223,31,41)"/><text x="692.00" y="1566.50"></text></g><g><title>0x7f71408d64f2 (?) (1 samples, 0.34%)</title><rect x="689" y="1572" width="4" height="15" fill="rgb(246,74,39)"/><text x="692.00" y="1582.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.69%)</title><rect x="689" y="676" width="8" height="15" fill="rgb(208,77,37)"/><text x="692.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="689" y="692" width="8" height="15" fill="rgb(246,119,32)"/><text x="692.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="689" y="708" width="8" height="15" fill="rgb(220,222,8)"/><text x="692.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="689" y="724" width="8" height="15" fill="rgb(229,199,29)"/><text x="692.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="689" y="740" width="8" height="15" fill="rgb(253,87,29)"/><text x="692.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="689" y="756" width="8" height="15" fill="rgb(253,201,5)"/><text x="692.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (2 samples, 0.69%)</title><rect x="689" y="772" width="8" height="15" fill="rgb(244,48,23)"/><text x="692.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="689" y="788" width="8" height="15" fill="rgb(246,61,41)"/><text x="692.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="689" y="804" width="8" height="15" fill="rgb(210,137,2)"/><text x="692.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="689" y="820" width="8" height="15" fill="rgb(237,105,42)"/><text x="692.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="689" y="836" width="8" height="15" fill="rgb(221,100,13)"/><text x="692.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="689" y="852" width="8" height="15" fill="rgb(247,221,0)"/><text x="692.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:643) (2 samples, 0.69%)</title><rect x="689" y="868" width="8" height="15" fill="rgb(245,177,52)"/><text x="692.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="689" y="884" width="8" height="15" fill="rgb(231,8,32)"/><text x="692.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="689" y="900" width="8" height="15" fill="rgb(227,168,5)"/><text x="692.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="689" y="916" width="8" height="15" fill="rgb(209,111,30)"/><text x="692.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="689" y="932" width="8" height="15" fill="rgb(227,208,21)"/><text x="692.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="689" y="948" width="8" height="15" fill="rgb(220,6,15)"/><text x="692.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py:19) (2 samples, 0.69%)</title><rect x="689" y="964" width="8" height="15" fill="rgb(230,84,27)"/><text x="692.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.69%)</title><rect x="689" y="980" width="8" height="15" fill="rgb(211,101,51)"/><text x="692.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="689" y="996" width="8" height="15" fill="rgb(224,229,12)"/><text x="692.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="689" y="1012" width="8" height="15" fill="rgb(222,17,42)"/><text x="692.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="689" y="1028" width="8" height="15" fill="rgb(251,112,17)"/><text x="692.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="689" y="1044" width="8" height="15" fill="rgb(218,83,54)"/><text x="692.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="689" y="1060" width="8" height="15" fill="rgb(225,154,36)"/><text x="692.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="689" y="1076" width="8" height="15" fill="rgb(220,178,41)"/><text x="692.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py:83) (2 samples, 0.69%)</title><rect x="689" y="1092" width="8" height="15" fill="rgb(245,183,27)"/><text x="692.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.69%)</title><rect x="689" y="1108" width="8" height="15" fill="rgb(252,128,31)"/><text x="692.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="689" y="1124" width="8" height="15" fill="rgb(245,127,7)"/><text x="692.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="689" y="1140" width="8" height="15" fill="rgb(246,8,41)"/><text x="692.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="689" y="1156" width="8" height="15" fill="rgb(222,105,46)"/><text x="692.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="689" y="1172" width="8" height="15" fill="rgb(225,186,11)"/><text x="692.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="689" y="1188" width="8" height="15" fill="rgb(234,137,11)"/><text x="692.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="689" y="1204" width="8" height="15" fill="rgb(234,167,27)"/><text x="692.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py:195) (2 samples, 0.69%)</title><rect x="689" y="1220" width="8" height="15" fill="rgb(253,204,31)"/><text x="692.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="689" y="1236" width="8" height="15" fill="rgb(233,129,28)"/><text x="692.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="689" y="1252" width="8" height="15" fill="rgb(239,146,2)"/><text x="692.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="689" y="1268" width="8" height="15" fill="rgb(207,137,44)"/><text x="692.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="689" y="1284" width="8" height="15" fill="rgb(217,206,36)"/><text x="692.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="689" y="1300" width="8" height="15" fill="rgb(252,123,26)"/><text x="692.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/misc.py:6) (2 samples, 0.69%)</title><rect x="689" y="1316" width="8" height="15" fill="rgb(252,199,50)"/><text x="692.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="689" y="1332" width="8" height="15" fill="rgb(222,209,46)"/><text x="692.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="689" y="1348" width="8" height="15" fill="rgb(223,37,13)"/><text x="692.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="689" y="1364" width="8" height="15" fill="rgb(224,108,8)"/><text x="692.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="689" y="1380" width="8" height="15" fill="rgb(224,92,40)"/><text x="692.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="689" y="1396" width="8" height="15" fill="rgb(214,182,14)"/><text x="692.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/lapack.py:616) (2 samples, 0.69%)</title><rect x="689" y="1412" width="8" height="15" fill="rgb(219,158,51)"/><text x="692.00" y="1422.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.69%)</title><rect x="689" y="1428" width="8" height="15" fill="rgb(239,38,11)"/><text x="692.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="689" y="1444" width="8" height="15" fill="rgb(239,43,18)"/><text x="692.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="689" y="1460" width="8" height="15" fill="rgb(225,101,18)"/><text x="692.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="689" y="1476" width="8" height="15" fill="rgb(253,136,33)"/><text x="692.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (2 samples, 0.69%)</title><rect x="689" y="1492" width="8" height="15" fill="rgb(232,45,48)"/><text x="692.00" y="1502.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (2 samples, 0.69%)</title><rect x="689" y="1508" width="8" height="15" fill="rgb(246,68,38)"/><text x="692.00" y="1518.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (2 samples, 0.69%)</title><rect x="689" y="1524" width="8" height="15" fill="rgb(205,58,15)"/><text x="692.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="689" y="1540" width="8" height="15" fill="rgb(241,108,12)"/><text x="692.00" y="1550.50"></text></g><g><title>PyInit__flapack (scipy/linalg/_flapack.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="693" y="1556" width="4" height="15" fill="rgb(231,185,46)"/><text x="696.00" y="1566.50"></text></g><g><title>0x7f715f738ee4 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="693" y="1572" width="4" height="15" fill="rgb(206,71,47)"/><text x="696.00" y="1582.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:4) (4 samples, 1.38%)</title><rect x="685" y="148" width="16" height="15" fill="rgb(243,196,47)"/><text x="688.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.38%)</title><rect x="685" y="164" width="16" height="15" fill="rgb(241,226,28)"/><text x="688.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.38%)</title><rect x="685" y="180" width="16" height="15" fill="rgb(254,105,46)"/><text x="688.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.38%)</title><rect x="685" y="196" width="16" height="15" fill="rgb(248,144,8)"/><text x="688.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.38%)</title><rect x="685" y="212" width="16" height="15" fill="rgb(244,99,45)"/><text x="688.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.38%)</title><rect x="685" y="228" width="16" height="15" fill="rgb(211,46,31)"/><text x="688.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.38%)</title><rect x="685" y="244" width="16" height="15" fill="rgb(211,50,44)"/><text x="688.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.38%)</title><rect x="685" y="260" width="16" height="15" fill="rgb(209,203,45)"/><text x="688.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.38%)</title><rect x="685" y="276" width="16" height="15" fill="rgb(224,174,21)"/><text x="688.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (4 samples, 1.38%)</title><rect x="685" y="292" width="16" height="15" fill="rgb(208,1,8)"/><text x="688.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.38%)</title><rect x="685" y="308" width="16" height="15" fill="rgb(216,101,17)"/><text x="688.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.38%)</title><rect x="685" y="324" width="16" height="15" fill="rgb(225,149,35)"/><text x="688.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.38%)</title><rect x="685" y="340" width="16" height="15" fill="rgb(211,188,14)"/><text x="688.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.38%)</title><rect x="685" y="356" width="16" height="15" fill="rgb(239,13,33)"/><text x="688.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.38%)</title><rect x="685" y="372" width="16" height="15" fill="rgb(244,71,42)"/><text x="688.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 1.38%)</title><rect x="685" y="388" width="16" height="15" fill="rgb(254,135,28)"/><text x="688.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.38%)</title><rect x="685" y="404" width="16" height="15" fill="rgb(216,29,31)"/><text x="688.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.38%)</title><rect x="685" y="420" width="16" height="15" fill="rgb(216,47,30)"/><text x="688.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.38%)</title><rect x="685" y="436" width="16" height="15" fill="rgb(228,212,12)"/><text x="688.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.38%)</title><rect x="685" y="452" width="16" height="15" fill="rgb(236,102,35)"/><text x="688.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.38%)</title><rect x="685" y="468" width="16" height="15" fill="rgb(241,198,43)"/><text x="688.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 1.03%)</title><rect x="689" y="484" width="12" height="15" fill="rgb(238,32,46)"/><text x="692.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="689" y="500" width="12" height="15" fill="rgb(219,159,49)"/><text x="692.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="689" y="516" width="12" height="15" fill="rgb(214,212,10)"/><text x="692.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="689" y="532" width="12" height="15" fill="rgb(214,9,36)"/><text x="692.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="689" y="548" width="12" height="15" fill="rgb(247,174,42)"/><text x="692.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="689" y="564" width="12" height="15" fill="rgb(250,119,15)"/><text x="692.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 1.03%)</title><rect x="689" y="580" width="12" height="15" fill="rgb(247,53,11)"/><text x="692.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="689" y="596" width="12" height="15" fill="rgb(247,198,21)"/><text x="692.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="689" y="612" width="12" height="15" fill="rgb(213,128,21)"/><text x="692.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="689" y="628" width="12" height="15" fill="rgb(223,20,8)"/><text x="692.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="689" y="644" width="12" height="15" fill="rgb(206,161,30)"/><text x="692.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="689" y="660" width="12" height="15" fill="rgb(207,197,50)"/><text x="692.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:381) (1 samples, 0.34%)</title><rect x="697" y="676" width="4" height="15" fill="rgb(208,178,16)"/><text x="700.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="697" y="692" width="4" height="15" fill="rgb(221,124,53)"/><text x="700.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="697" y="708" width="4" height="15" fill="rgb(234,9,33)"/><text x="700.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="697" y="724" width="4" height="15" fill="rgb(247,82,14)"/><text x="700.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="697" y="740" width="4" height="15" fill="rgb(244,199,9)"/><text x="700.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="697" y="756" width="4" height="15" fill="rgb(216,181,39)"/><text x="700.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/morestats.py:2152) (1 samples, 0.34%)</title><rect x="697" y="772" width="4" height="15" fill="rgb(242,27,22)"/><text x="700.00" y="782.50"></text></g><g><title>namedtuple (collections/__init__.py:464) (1 samples, 0.34%)</title><rect x="697" y="788" width="4" height="15" fill="rgb(247,169,38)"/><text x="700.00" y="798.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.34%)</title><rect x="701" y="628" width="4" height="15" fill="rgb(223,216,4)"/><text x="704.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="701" y="644" width="4" height="15" fill="rgb(219,70,14)"/><text x="704.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="701" y="660" width="4" height="15" fill="rgb(249,57,25)"/><text x="704.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="701" y="676" width="4" height="15" fill="rgb(213,116,46)"/><text x="704.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="701" y="692" width="4" height="15" fill="rgb(241,78,51)"/><text x="704.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="701" y="708" width="4" height="15" fill="rgb(221,100,46)"/><text x="704.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:17) (1 samples, 0.34%)</title><rect x="701" y="724" width="4" height="15" fill="rgb(239,69,51)"/><text x="704.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="701" y="740" width="4" height="15" fill="rgb(209,186,42)"/><text x="704.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="701" y="756" width="4" height="15" fill="rgb(215,114,19)"/><text x="704.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="701" y="772" width="4" height="15" fill="rgb(205,162,23)"/><text x="704.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="701" y="788" width="4" height="15" fill="rgb(232,37,39)"/><text x="704.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="701" y="804" width="4" height="15" fill="rgb(209,120,9)"/><text x="704.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/pytables.py:53) (1 samples, 0.34%)</title><rect x="701" y="820" width="4" height="15" fill="rgb(232,38,41)"/><text x="704.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="701" y="836" width="4" height="15" fill="rgb(232,215,18)"/><text x="704.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="701" y="852" width="4" height="15" fill="rgb(222,183,41)"/><text x="704.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="701" y="868" width="4" height="15" fill="rgb(227,186,22)"/><text x="704.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="701" y="884" width="4" height="15" fill="rgb(242,98,50)"/><text x="704.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="701" y="900" width="4" height="15" fill="rgb(223,37,8)"/><text x="704.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/pytables.py:16) (1 samples, 0.34%)</title><rect x="701" y="916" width="4" height="15" fill="rgb(253,198,39)"/><text x="704.00" y="926.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="701" y="932" width="4" height="15" fill="rgb(213,78,15)"/><text x="704.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="701" y="948" width="4" height="15" fill="rgb(251,209,38)"/><text x="704.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="701" y="964" width="4" height="15" fill="rgb(243,156,11)"/><text x="704.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="701" y="980" width="4" height="15" fill="rgb(225,124,27)"/><text x="704.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="701" y="996" width="4" height="15" fill="rgb(232,27,21)"/><text x="704.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="701" y="1012" width="4" height="15" fill="rgb(243,19,46)"/><text x="704.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="701" y="1028" width="4" height="15" fill="rgb(239,154,33)"/><text x="704.00" y="1038.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/expr.py:369) (1 samples, 0.34%)</title><rect x="701" y="1044" width="4" height="15" fill="rgb(243,58,28)"/><text x="704.00" y="1054.50"></text></g><g><title>disallowed (pandas/core/computation/expr.py:318) (1 samples, 0.34%)</title><rect x="701" y="1060" width="4" height="15" fill="rgb(228,54,23)"/><text x="704.00" y="1070.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.34%)</title><rect x="705" y="628" width="4" height="15" fill="rgb(243,97,4)"/><text x="708.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="705" y="644" width="4" height="15" fill="rgb(210,39,40)"/><text x="708.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="705" y="660" width="4" height="15" fill="rgb(221,96,9)"/><text x="708.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="705" y="676" width="4" height="15" fill="rgb(230,217,5)"/><text x="708.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="705" y="692" width="4" height="15" fill="rgb(214,213,49)"/><text x="708.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="705" y="708" width="4" height="15" fill="rgb(223,131,48)"/><text x="708.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.34%)</title><rect x="705" y="724" width="4" height="15" fill="rgb(235,70,13)"/><text x="708.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="705" y="740" width="4" height="15" fill="rgb(230,100,40)"/><text x="708.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="705" y="756" width="4" height="15" fill="rgb(230,54,10)"/><text x="708.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="705" y="772" width="4" height="15" fill="rgb(219,203,32)"/><text x="708.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="705" y="788" width="4" height="15" fill="rgb(207,50,1)"/><text x="708.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="705" y="804" width="4" height="15" fill="rgb(219,55,54)"/><text x="708.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.34%)</title><rect x="705" y="820" width="4" height="15" fill="rgb(230,185,47)"/><text x="708.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="705" y="836" width="4" height="15" fill="rgb(249,141,27)"/><text x="708.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="705" y="852" width="4" height="15" fill="rgb(245,81,45)"/><text x="708.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="705" y="868" width="4" height="15" fill="rgb(225,156,7)"/><text x="708.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.34%)</title><rect x="705" y="884" width="4" height="15" fill="rgb(245,197,13)"/><text x="708.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="705" y="900" width="4" height="15" fill="rgb(206,186,37)"/><text x="708.00" y="910.50"></text></g><g><title>0x7f71368a940e (?) (1 samples, 0.34%)</title><rect x="705" y="916" width="4" height="15" fill="rgb(234,113,36)"/><text x="708.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="705" y="932" width="4" height="15" fill="rgb(221,84,0)"/><text x="708.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="705" y="948" width="4" height="15" fill="rgb(213,224,1)"/><text x="708.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="705" y="964" width="4" height="15" fill="rgb(216,200,50)"/><text x="708.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.34%)</title><rect x="705" y="980" width="4" height="15" fill="rgb(216,51,24)"/><text x="708.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="705" y="996" width="4" height="15" fill="rgb(220,110,35)"/><text x="708.00" y="1006.50"></text></g><g><title>0x7f713666289c (?) (1 samples, 0.34%)</title><rect x="705" y="1012" width="4" height="15" fill="rgb(243,7,20)"/><text x="708.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="705" y="1028" width="4" height="15" fill="rgb(238,74,5)"/><text x="708.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="705" y="1044" width="4" height="15" fill="rgb(245,223,18)"/><text x="708.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="705" y="1060" width="4" height="15" fill="rgb(230,198,49)"/><text x="708.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.34%)</title><rect x="705" y="1076" width="4" height="15" fill="rgb(242,66,36)"/><text x="708.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="705" y="1092" width="4" height="15" fill="rgb(244,213,43)"/><text x="708.00" y="1102.50"></text></g><g><title>0x7f7136436e38 (?) (1 samples, 0.34%)</title><rect x="705" y="1108" width="4" height="15" fill="rgb(229,120,23)"/><text x="708.00" y="1118.50"></text></g><g><title>0x7f713643d83e (?) (1 samples, 0.34%)</title><rect x="705" y="1124" width="4" height="15" fill="rgb(249,135,13)"/><text x="708.00" y="1134.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 1.03%)</title><rect x="701" y="436" width="12" height="15" fill="rgb(247,173,41)"/><text x="704.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="701" y="452" width="12" height="15" fill="rgb(254,186,47)"/><text x="704.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="701" y="468" width="12" height="15" fill="rgb(206,109,42)"/><text x="704.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="701" y="484" width="12" height="15" fill="rgb(205,189,27)"/><text x="704.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="701" y="500" width="12" height="15" fill="rgb(252,144,33)"/><text x="704.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="701" y="516" width="12" height="15" fill="rgb(226,78,42)"/><text x="704.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 1.03%)</title><rect x="701" y="532" width="12" height="15" fill="rgb(212,184,20)"/><text x="704.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="701" y="548" width="12" height="15" fill="rgb(210,103,34)"/><text x="704.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="701" y="564" width="12" height="15" fill="rgb(212,40,16)"/><text x="704.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="701" y="580" width="12" height="15" fill="rgb(241,47,46)"/><text x="704.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="701" y="596" width="12" height="15" fill="rgb(248,147,25)"/><text x="704.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="701" y="612" width="12" height="15" fill="rgb(217,18,22)"/><text x="704.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.34%)</title><rect x="709" y="628" width="4" height="15" fill="rgb(242,214,45)"/><text x="712.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="709" y="644" width="4" height="15" fill="rgb(233,143,49)"/><text x="712.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="709" y="660" width="4" height="15" fill="rgb(247,96,21)"/><text x="712.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="709" y="676" width="4" height="15" fill="rgb(226,98,17)"/><text x="712.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="709" y="692" width="4" height="15" fill="rgb(250,169,20)"/><text x="712.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="709" y="708" width="4" height="15" fill="rgb(226,156,42)"/><text x="712.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.34%)</title><rect x="709" y="724" width="4" height="15" fill="rgb(246,125,2)"/><text x="712.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="709" y="740" width="4" height="15" fill="rgb(207,80,53)"/><text x="712.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="709" y="756" width="4" height="15" fill="rgb(222,161,49)"/><text x="712.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="709" y="772" width="4" height="15" fill="rgb(233,13,34)"/><text x="712.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="709" y="788" width="4" height="15" fill="rgb(238,102,19)"/><text x="712.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="709" y="804" width="4" height="15" fill="rgb(227,106,45)"/><text x="712.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.34%)</title><rect x="709" y="820" width="4" height="15" fill="rgb(221,97,54)"/><text x="712.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="709" y="836" width="4" height="15" fill="rgb(214,27,5)"/><text x="712.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="709" y="852" width="4" height="15" fill="rgb(236,97,31)"/><text x="712.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="709" y="868" width="4" height="15" fill="rgb(227,96,32)"/><text x="712.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="709" y="884" width="4" height="15" fill="rgb(240,7,14)"/><text x="712.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="709" y="900" width="4" height="15" fill="rgb(251,104,52)"/><text x="712.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.34%)</title><rect x="709" y="916" width="4" height="15" fill="rgb(222,145,32)"/><text x="712.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="709" y="932" width="4" height="15" fill="rgb(227,9,13)"/><text x="712.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="709" y="948" width="4" height="15" fill="rgb(244,130,38)"/><text x="712.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="709" y="964" width="4" height="15" fill="rgb(219,118,49)"/><text x="712.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="709" y="980" width="4" height="15" fill="rgb(230,210,10)"/><text x="712.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="709" y="996" width="4" height="15" fill="rgb(223,36,51)"/><text x="712.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.34%)</title><rect x="709" y="1012" width="4" height="15" fill="rgb(205,90,7)"/><text x="712.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="709" y="1028" width="4" height="15" fill="rgb(253,43,33)"/><text x="712.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="709" y="1044" width="4" height="15" fill="rgb(230,173,33)"/><text x="712.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="709" y="1060" width="4" height="15" fill="rgb(211,155,24)"/><text x="712.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="709" y="1076" width="4" height="15" fill="rgb(254,171,18)"/><text x="712.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="709" y="1092" width="4" height="15" fill="rgb(243,201,31)"/><text x="712.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.34%)</title><rect x="709" y="1108" width="4" height="15" fill="rgb(212,108,7)"/><text x="712.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="709" y="1124" width="4" height="15" fill="rgb(232,158,19)"/><text x="712.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="709" y="1140" width="4" height="15" fill="rgb(251,1,10)"/><text x="712.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="709" y="1156" width="4" height="15" fill="rgb(230,192,40)"/><text x="712.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="709" y="1172" width="4" height="15" fill="rgb(208,82,47)"/><text x="712.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="709" y="1188" width="4" height="15" fill="rgb(251,85,18)"/><text x="712.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.34%)</title><rect x="709" y="1204" width="4" height="15" fill="rgb(224,224,2)"/><text x="712.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="709" y="1220" width="4" height="15" fill="rgb(208,172,3)"/><text x="712.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="709" y="1236" width="4" height="15" fill="rgb(254,75,50)"/><text x="712.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="709" y="1252" width="4" height="15" fill="rgb(225,194,13)"/><text x="712.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="709" y="1268" width="4" height="15" fill="rgb(240,220,2)"/><text x="712.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="709" y="1284" width="4" height="15" fill="rgb(220,146,16)"/><text x="712.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.34%)</title><rect x="709" y="1300" width="4" height="15" fill="rgb(241,90,47)"/><text x="712.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="709" y="1316" width="4" height="15" fill="rgb(253,146,34)"/><text x="712.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="709" y="1332" width="4" height="15" fill="rgb(253,181,15)"/><text x="712.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="709" y="1348" width="4" height="15" fill="rgb(254,171,13)"/><text x="712.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="709" y="1364" width="4" height="15" fill="rgb(250,61,1)"/><text x="712.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="709" y="1380" width="4" height="15" fill="rgb(218,71,9)"/><text x="712.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.34%)</title><rect x="709" y="1396" width="4" height="15" fill="rgb(223,83,27)"/><text x="712.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="709" y="1412" width="4" height="15" fill="rgb(205,52,16)"/><text x="712.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="709" y="1428" width="4" height="15" fill="rgb(214,106,26)"/><text x="712.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="709" y="1444" width="4" height="15" fill="rgb(252,124,34)"/><text x="712.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="709" y="1460" width="4" height="15" fill="rgb(218,155,18)"/><text x="712.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="709" y="1476" width="4" height="15" fill="rgb(217,154,18)"/><text x="712.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.34%)</title><rect x="709" y="1492" width="4" height="15" fill="rgb(224,207,1)"/><text x="712.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="709" y="1508" width="4" height="15" fill="rgb(248,59,35)"/><text x="712.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="709" y="1524" width="4" height="15" fill="rgb(220,179,50)"/><text x="712.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="709" y="1540" width="4" height="15" fill="rgb(245,60,2)"/><text x="712.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="709" y="1556" width="4" height="15" fill="rgb(230,196,14)"/><text x="712.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="709" y="1572" width="4" height="15" fill="rgb(252,178,35)"/><text x="712.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.34%)</title><rect x="709" y="1588" width="4" height="15" fill="rgb(237,201,0)"/><text x="712.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="709" y="1604" width="4" height="15" fill="rgb(212,20,3)"/><text x="712.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="709" y="1620" width="4" height="15" fill="rgb(232,36,23)"/><text x="712.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="709" y="1636" width="4" height="15" fill="rgb(211,2,42)"/><text x="712.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="709" y="1652" width="4" height="15" fill="rgb(219,212,14)"/><text x="712.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="709" y="1668" width="4" height="15" fill="rgb(219,197,6)"/><text x="712.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.34%)</title><rect x="709" y="1684" width="4" height="15" fill="rgb(209,154,39)"/><text x="712.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="709" y="1700" width="4" height="15" fill="rgb(230,135,2)"/><text x="712.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="709" y="1716" width="4" height="15" fill="rgb(232,225,11)"/><text x="712.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="709" y="1732" width="4" height="15" fill="rgb(211,87,43)"/><text x="712.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="709" y="1748" width="4" height="15" fill="rgb(247,65,15)"/><text x="712.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="709" y="1764" width="4" height="15" fill="rgb(252,105,33)"/><text x="712.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:106) (1 samples, 0.34%)</title><rect x="709" y="1780" width="4" height="15" fill="rgb(252,21,5)"/><text x="712.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py:93) (1 samples, 0.34%)</title><rect x="709" y="1796" width="4" height="15" fill="rgb(245,179,22)"/><text x="712.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py:752) (1 samples, 0.34%)</title><rect x="709" y="1812" width="4" height="15" fill="rgb(241,95,5)"/><text x="712.00" y="1822.50"></text></g><g><title>to_rgba (matplotlib/colors.py:177) (1 samples, 0.34%)</title><rect x="709" y="1828" width="4" height="15" fill="rgb(223,0,6)"/><text x="712.00" y="1838.50"></text></g><g><title>_to_rgba_no_colorcycle (matplotlib/colors.py:236) (1 samples, 0.34%)</title><rect x="709" y="1844" width="4" height="15" fill="rgb(248,153,14)"/><text x="712.00" y="1854.50"></text></g><g><title>can_cast (&lt;__array_function__ internals&gt;:6) (1 samples, 0.34%)</title><rect x="709" y="1860" width="4" height="15" fill="rgb(253,177,37)"/><text x="712.00" y="1870.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:11) (1 samples, 0.34%)</title><rect x="713" y="1204" width="5" height="15" fill="rgb(206,192,2)"/><text x="716.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="713" y="1220" width="5" height="15" fill="rgb(247,221,19)"/><text x="716.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.34%)</title><rect x="713" y="1236" width="5" height="15" fill="rgb(241,197,20)"/><text x="716.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="713" y="1252" width="5" height="15" fill="rgb(225,18,43)"/><text x="716.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="713" y="1268" width="5" height="15" fill="rgb(218,165,37)"/><text x="716.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="713" y="1284" width="5" height="15" fill="rgb(254,47,35)"/><text x="716.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="713" y="1300" width="5" height="15" fill="rgb(231,43,34)"/><text x="716.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="713" y="1316" width="5" height="15" fill="rgb(207,82,54)"/><text x="716.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="713" y="1332" width="5" height="15" fill="rgb(207,96,25)"/><text x="716.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py:20) (1 samples, 0.34%)</title><rect x="713" y="1348" width="5" height="15" fill="rgb(232,156,45)"/><text x="716.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="713" y="1364" width="5" height="15" fill="rgb(230,26,1)"/><text x="716.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="713" y="1380" width="5" height="15" fill="rgb(217,101,40)"/><text x="716.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="713" y="1396" width="5" height="15" fill="rgb(209,217,30)"/><text x="716.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.34%)</title><rect x="713" y="1412" width="5" height="15" fill="rgb(212,205,33)"/><text x="716.00" y="1422.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.34%)</title><rect x="713" y="1428" width="5" height="15" fill="rgb(243,3,51)"/><text x="716.00" y="1438.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.34%)</title><rect x="713" y="1444" width="5" height="15" fill="rgb(226,176,38)"/><text x="716.00" y="1454.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozipmap.py:4) (14 samples, 4.83%)</title><rect x="665" y="52" width="57" height="15" fill="rgb(253,199,30)"/><text x="668.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 4.83%)</title><rect x="665" y="68" width="57" height="15" fill="rgb(246,124,32)"/><text x="668.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 4.83%)</title><rect x="665" y="84" width="57" height="15" fill="rgb(240,185,3)"/><text x="668.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 4.83%)</title><rect x="665" y="100" width="57" height="15" fill="rgb(253,172,43)"/><text x="668.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 4.83%)</title><rect x="665" y="116" width="57" height="15" fill="rgb(238,89,12)"/><text x="668.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 4.83%)</title><rect x="665" y="132" width="57" height="15" fill="rgb(207,93,16)"/><text x="668.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:7) (5 samples, 1.72%)</title><rect x="701" y="148" width="21" height="15" fill="rgb(222,186,4)"/><text x="704.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.72%)</title><rect x="701" y="164" width="21" height="15" fill="rgb(211,106,33)"/><text x="704.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.72%)</title><rect x="701" y="180" width="21" height="15" fill="rgb(247,38,54)"/><text x="704.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.72%)</title><rect x="701" y="196" width="21" height="15" fill="rgb(213,182,12)"/><text x="704.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.72%)</title><rect x="701" y="212" width="21" height="15" fill="rgb(248,68,44)"/><text x="704.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.72%)</title><rect x="701" y="228" width="21" height="15" fill="rgb(237,129,44)"/><text x="704.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 1.72%)</title><rect x="701" y="244" width="21" height="15" fill="rgb(240,159,42)"/><text x="704.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.72%)</title><rect x="701" y="260" width="21" height="15" fill="rgb(210,200,9)"/><text x="704.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.72%)</title><rect x="701" y="276" width="21" height="15" fill="rgb(243,8,34)"/><text x="704.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.72%)</title><rect x="701" y="292" width="21" height="15" fill="rgb(220,41,44)"/><text x="704.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.72%)</title><rect x="701" y="308" width="21" height="15" fill="rgb(224,166,52)"/><text x="704.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.72%)</title><rect x="701" y="324" width="21" height="15" fill="rgb(246,142,17)"/><text x="704.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 1.72%)</title><rect x="701" y="340" width="21" height="15" fill="rgb(233,147,34)"/><text x="704.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.72%)</title><rect x="701" y="356" width="21" height="15" fill="rgb(250,28,25)"/><text x="704.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.72%)</title><rect x="701" y="372" width="21" height="15" fill="rgb(221,135,54)"/><text x="704.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.72%)</title><rect x="701" y="388" width="21" height="15" fill="rgb(221,123,43)"/><text x="704.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.72%)</title><rect x="701" y="404" width="21" height="15" fill="rgb(229,119,51)"/><text x="704.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.72%)</title><rect x="701" y="420" width="21" height="15" fill="rgb(219,161,13)"/><text x="704.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.69%)</title><rect x="713" y="436" width="9" height="15" fill="rgb(222,37,44)"/><text x="716.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="713" y="452" width="9" height="15" fill="rgb(208,135,13)"/><text x="716.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.69%)</title><rect x="713" y="468" width="9" height="15" fill="rgb(251,61,34)"/><text x="716.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="713" y="484" width="9" height="15" fill="rgb(251,192,50)"/><text x="716.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="713" y="500" width="9" height="15" fill="rgb(238,89,12)"/><text x="716.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="713" y="516" width="9" height="15" fill="rgb(210,53,29)"/><text x="716.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="713" y="532" width="9" height="15" fill="rgb(214,80,45)"/><text x="716.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="713" y="548" width="9" height="15" fill="rgb(243,182,43)"/><text x="716.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="713" y="564" width="9" height="15" fill="rgb(219,35,42)"/><text x="716.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.69%)</title><rect x="713" y="580" width="9" height="15" fill="rgb(240,133,48)"/><text x="716.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="713" y="596" width="9" height="15" fill="rgb(247,94,44)"/><text x="716.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="713" y="612" width="9" height="15" fill="rgb(223,205,45)"/><text x="716.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="713" y="628" width="9" height="15" fill="rgb(235,225,28)"/><text x="716.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="713" y="644" width="9" height="15" fill="rgb(213,61,43)"/><text x="716.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="713" y="660" width="9" height="15" fill="rgb(209,78,24)"/><text x="716.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.69%)</title><rect x="713" y="676" width="9" height="15" fill="rgb(251,182,2)"/><text x="716.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="713" y="692" width="9" height="15" fill="rgb(252,15,17)"/><text x="716.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="713" y="708" width="9" height="15" fill="rgb(214,96,28)"/><text x="716.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="713" y="724" width="9" height="15" fill="rgb(240,100,8)"/><text x="716.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="713" y="740" width="9" height="15" fill="rgb(231,150,15)"/><text x="716.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="713" y="756" width="9" height="15" fill="rgb(206,63,37)"/><text x="716.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.69%)</title><rect x="713" y="772" width="9" height="15" fill="rgb(237,197,35)"/><text x="716.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="713" y="788" width="9" height="15" fill="rgb(254,156,24)"/><text x="716.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="713" y="804" width="9" height="15" fill="rgb(215,12,0)"/><text x="716.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="713" y="820" width="9" height="15" fill="rgb(206,143,3)"/><text x="716.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="713" y="836" width="9" height="15" fill="rgb(209,42,4)"/><text x="716.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="713" y="852" width="9" height="15" fill="rgb(220,29,8)"/><text x="716.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.69%)</title><rect x="713" y="868" width="9" height="15" fill="rgb(223,107,28)"/><text x="716.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="713" y="884" width="9" height="15" fill="rgb(237,209,25)"/><text x="716.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.69%)</title><rect x="713" y="900" width="9" height="15" fill="rgb(210,134,6)"/><text x="716.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="713" y="916" width="9" height="15" fill="rgb(234,25,47)"/><text x="716.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="713" y="932" width="9" height="15" fill="rgb(235,168,7)"/><text x="716.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="713" y="948" width="9" height="15" fill="rgb(227,42,39)"/><text x="716.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="713" y="964" width="9" height="15" fill="rgb(238,224,40)"/><text x="716.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="713" y="980" width="9" height="15" fill="rgb(221,156,24)"/><text x="716.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="713" y="996" width="9" height="15" fill="rgb(251,29,45)"/><text x="716.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.69%)</title><rect x="713" y="1012" width="9" height="15" fill="rgb(206,126,42)"/><text x="716.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="713" y="1028" width="9" height="15" fill="rgb(250,174,50)"/><text x="716.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="713" y="1044" width="9" height="15" fill="rgb(235,100,25)"/><text x="716.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="713" y="1060" width="9" height="15" fill="rgb(238,181,38)"/><text x="716.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="713" y="1076" width="9" height="15" fill="rgb(209,198,35)"/><text x="716.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="713" y="1092" width="9" height="15" fill="rgb(249,80,13)"/><text x="716.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.69%)</title><rect x="713" y="1108" width="9" height="15" fill="rgb(227,84,1)"/><text x="716.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.69%)</title><rect x="713" y="1124" width="9" height="15" fill="rgb(240,46,32)"/><text x="716.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.69%)</title><rect x="713" y="1140" width="9" height="15" fill="rgb(215,191,23)"/><text x="716.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.69%)</title><rect x="713" y="1156" width="9" height="15" fill="rgb(234,157,47)"/><text x="716.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.69%)</title><rect x="713" y="1172" width="9" height="15" fill="rgb(241,161,9)"/><text x="716.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.69%)</title><rect x="713" y="1188" width="9" height="15" fill="rgb(227,83,45)"/><text x="716.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.34%)</title><rect x="718" y="1204" width="4" height="15" fill="rgb(236,148,8)"/><text x="721.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="718" y="1220" width="4" height="15" fill="rgb(248,135,33)"/><text x="721.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="718" y="1236" width="4" height="15" fill="rgb(237,112,36)"/><text x="721.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="718" y="1252" width="4" height="15" fill="rgb(250,166,34)"/><text x="721.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="718" y="1268" width="4" height="15" fill="rgb(238,36,34)"/><text x="721.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="718" y="1284" width="4" height="15" fill="rgb(233,136,53)"/><text x="721.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.34%)</title><rect x="718" y="1300" width="4" height="15" fill="rgb(213,221,3)"/><text x="721.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.34%)</title><rect x="718" y="1316" width="4" height="15" fill="rgb(242,144,36)"/><text x="721.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.34%)</title><rect x="718" y="1332" width="4" height="15" fill="rgb(213,213,15)"/><text x="721.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.34%)</title><rect x="718" y="1348" width="4" height="15" fill="rgb(213,69,12)"/><text x="721.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.34%)</title><rect x="718" y="1364" width="4" height="15" fill="rgb(221,23,2)"/><text x="721.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.34%)</title><rect x="718" y="1380" width="4" height="15" fill="rgb(212,74,48)"/><text x="721.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.34%)</title><rect x="718" y="1396" width="4" height="15" fill="rgb(232,156,16)"/><text x="721.00" y="1406.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.34%)</title><rect x="726" y="116" width="4" height="15" fill="rgb(234,191,32)"/><text x="729.00" y="126.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.34%)</title><rect x="726" y="132" width="4" height="15" fill="rgb(243,187,5)"/><text x="729.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.69%)</title><rect x="742" y="148" width="8" height="15" fill="rgb(222,108,41)"/><text x="745.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.34%)</title><rect x="754" y="164" width="4" height="15" fill="rgb(216,180,46)"/><text x="757.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (2 samples, 0.69%)</title><rect x="758" y="164" width="8" height="15" fill="rgb(240,59,0)"/><text x="761.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:448) (1 samples, 0.34%)</title><rect x="766" y="164" width="4" height="15" fill="rgb(220,133,12)"/><text x="769.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.34%)</title><rect x="779" y="180" width="4" height="15" fill="rgb(252,10,31)"/><text x="782.00" y="190.50"></text></g><g><title>0x7f715f743124 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="799" y="196" width="4" height="15" fill="rgb(213,9,16)"/><text x="802.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (6 samples, 2.07%)</title><rect x="783" y="180" width="24" height="15" fill="rgb(211,209,8)"/><text x="786.00" y="190.50">r..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.34%)</title><rect x="803" y="196" width="4" height="15" fill="rgb(252,120,7)"/><text x="806.00" y="206.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.34%)</title><rect x="831" y="260" width="4" height="15" fill="rgb(220,205,9)"/><text x="834.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.34%)</title><rect x="831" y="276" width="4" height="15" fill="rgb(246,62,4)"/><text x="834.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.34%)</title><rect x="831" y="292" width="4" height="15" fill="rgb(245,41,47)"/><text x="834.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.34%)</title><rect x="848" y="388" width="4" height="15" fill="rgb(232,144,31)"/><text x="851.00" y="398.50"></text></g><g><title>0x7f715f738e54 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="848" y="404" width="4" height="15" fill="rgb(241,64,24)"/><text x="851.00" y="414.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (4 samples, 1.38%)</title><rect x="848" y="308" width="16" height="15" fill="rgb(247,179,38)"/><text x="851.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 1.38%)</title><rect x="848" y="324" width="16" height="15" fill="rgb(229,16,24)"/><text x="851.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (4 samples, 1.38%)</title><rect x="848" y="340" width="16" height="15" fill="rgb(225,126,0)"/><text x="851.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (4 samples, 1.38%)</title><rect x="848" y="356" width="16" height="15" fill="rgb(221,146,3)"/><text x="851.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (4 samples, 1.38%)</title><rect x="848" y="372" width="16" height="15" fill="rgb(243,6,46)"/><text x="851.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 1.03%)</title><rect x="852" y="388" width="12" height="15" fill="rgb(243,65,11)"/><text x="855.00" y="398.50"></text></g><g><title>0x7f715f738e50 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="860" y="404" width="4" height="15" fill="rgb(234,171,48)"/><text x="863.00" y="414.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.34%)</title><rect x="864" y="324" width="4" height="15" fill="rgb(239,182,1)"/><text x="867.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.69%)</title><rect x="868" y="340" width="8" height="15" fill="rgb(207,109,29)"/><text x="871.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.69%)</title><rect x="868" y="356" width="8" height="15" fill="rgb(228,132,34)"/><text x="871.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.69%)</title><rect x="868" y="372" width="8" height="15" fill="rgb(208,125,16)"/><text x="871.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2195) (2 samples, 0.69%)</title><rect x="868" y="388" width="8" height="15" fill="rgb(229,164,7)"/><text x="871.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.34%)</title><rect x="876" y="356" width="4" height="15" fill="rgb(245,11,14)"/><text x="879.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.34%)</title><rect x="876" y="372" width="4" height="15" fill="rgb(227,99,24)"/><text x="879.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.34%)</title><rect x="876" y="388" width="4" height="15" fill="rgb(208,7,47)"/><text x="879.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.34%)</title><rect x="876" y="404" width="4" height="15" fill="rgb(220,106,9)"/><text x="879.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.34%)</title><rect x="876" y="420" width="4" height="15" fill="rgb(207,115,35)"/><text x="879.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.34%)</title><rect x="876" y="436" width="4" height="15" fill="rgb(235,70,34)"/><text x="879.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.34%)</title><rect x="880" y="372" width="4" height="15" fill="rgb(252,152,4)"/><text x="883.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.34%)</title><rect x="884" y="372" width="4" height="15" fill="rgb(245,120,20)"/><text x="887.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3069) (1 samples, 0.34%)</title><rect x="884" y="388" width="4" height="15" fill="rgb(221,179,36)"/><text x="887.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 1.03%)</title><rect x="880" y="356" width="12" height="15" fill="rgb(253,12,0)"/><text x="883.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.34%)</title><rect x="888" y="372" width="4" height="15" fill="rgb(237,67,1)"/><text x="891.00" y="382.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.34%)</title><rect x="888" y="388" width="4" height="15" fill="rgb(243,101,16)"/><text x="891.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.34%)</title><rect x="892" y="356" width="5" height="15" fill="rgb(226,199,18)"/><text x="895.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.34%)</title><rect x="892" y="372" width="5" height="15" fill="rgb(238,15,28)"/><text x="895.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.34%)</title><rect x="892" y="388" width="5" height="15" fill="rgb(229,173,7)"/><text x="895.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (16 samples, 5.52%)</title><rect x="835" y="260" width="66" height="15" fill="rgb(242,121,19)"/><text x="838.00" y="270.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:108) (16 samples, 5.52%)</title><rect x="835" y="276" width="66" height="15" fill="rgb(217,125,50)"/><text x="838.00" y="286.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 4.83%)</title><rect x="844" y="292" width="57" height="15" fill="rgb(227,73,49)"/><text x="847.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 3.10%)</title><rect x="864" y="308" width="37" height="15" fill="rgb(216,1,18)"/><text x="867.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 2.76%)</title><rect x="868" y="324" width="33" height="15" fill="rgb(214,164,22)"/><text x="871.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 2.07%)</title><rect x="876" y="340" width="25" height="15" fill="rgb(242,119,48)"/><text x="879.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:595) (1 samples, 0.34%)</title><rect x="897" y="356" width="4" height="15" fill="rgb(213,125,26)"/><text x="900.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.34%)</title><rect x="897" y="372" width="4" height="15" fill="rgb(237,78,53)"/><text x="900.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.34%)</title><rect x="901" y="276" width="4" height="15" fill="rgb(206,131,32)"/><text x="904.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1077) (1 samples, 0.34%)</title><rect x="901" y="292" width="4" height="15" fill="rgb(206,190,27)"/><text x="904.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="905" y="276" width="4" height="15" fill="rgb(229,106,13)"/><text x="908.00" y="286.50"></text></g><g><title>PyUFunc_AbsoluteTypeResolver (ufunc_type_resolution.c:589) (1 samples, 0.34%)</title><rect x="905" y="292" width="4" height="15" fill="rgb(220,178,1)"/><text x="908.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.03%)</title><rect x="901" y="260" width="12" height="15" fill="rgb(253,218,27)"/><text x="904.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.34%)</title><rect x="909" y="276" width="4" height="15" fill="rgb(244,16,31)"/><text x="912.00" y="286.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:307) (1 samples, 0.34%)</title><rect x="909" y="292" width="4" height="15" fill="rgb(244,130,44)"/><text x="912.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.34%)</title><rect x="913" y="260" width="4" height="15" fill="rgb(249,121,50)"/><text x="916.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.34%)</title><rect x="913" y="276" width="4" height="15" fill="rgb(215,228,43)"/><text x="916.00" y="286.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (24 samples, 8.28%)</title><rect x="823" y="244" width="98" height="15" fill="rgb(250,72,26)"/><text x="826.00" y="254.50">norm_l1 (ml..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.34%)</title><rect x="917" y="260" width="4" height="15" fill="rgb(248,84,22)"/><text x="920.00" y="270.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:467) (1 samples, 0.34%)</title><rect x="917" y="276" width="4" height="15" fill="rgb(253,58,27)"/><text x="920.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.34%)</title><rect x="921" y="276" width="4" height="15" fill="rgb(234,206,9)"/><text x="924.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.34%)</title><rect x="921" y="292" width="4" height="15" fill="rgb(227,26,6)"/><text x="924.00" y="302.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:903) (1 samples, 0.34%)</title><rect x="921" y="308" width="4" height="15" fill="rgb(241,24,53)"/><text x="924.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.34%)</title><rect x="925" y="276" width="4" height="15" fill="rgb(253,182,15)"/><text x="928.00" y="286.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.34%)</title><rect x="925" y="292" width="4" height="15" fill="rgb(223,174,5)"/><text x="928.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.34%)</title><rect x="929" y="308" width="4" height="15" fill="rgb(217,147,20)"/><text x="932.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.34%)</title><rect x="929" y="324" width="4" height="15" fill="rgb(241,57,11)"/><text x="932.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="929" y="340" width="4" height="15" fill="rgb(205,28,18)"/><text x="932.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.69%)</title><rect x="929" y="276" width="8" height="15" fill="rgb(239,87,28)"/><text x="932.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.69%)</title><rect x="929" y="292" width="8" height="15" fill="rgb(215,228,11)"/><text x="932.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.34%)</title><rect x="933" y="308" width="4" height="15" fill="rgb(215,41,11)"/><text x="936.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:765) (1 samples, 0.34%)</title><rect x="933" y="324" width="4" height="15" fill="rgb(228,43,36)"/><text x="936.00" y="334.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.34%)</title><rect x="933" y="340" width="4" height="15" fill="rgb(246,88,34)"/><text x="936.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.72%)</title><rect x="921" y="260" width="20" height="15" fill="rgb(214,16,32)"/><text x="924.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.34%)</title><rect x="937" y="276" width="4" height="15" fill="rgb(208,204,50)"/><text x="940.00" y="286.50"></text></g><g><title>0x7f715e9447c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="937" y="292" width="4" height="15" fill="rgb(212,135,2)"/><text x="940.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (33 samples, 11.38%)</title><rect x="811" y="196" width="134" height="15" fill="rgb(233,193,26)"/><text x="814.00" y="206.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (32 samples, 11.03%)</title><rect x="815" y="212" width="130" height="15" fill="rgb(207,44,48)"/><text x="818.00" y="222.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (32 samples, 11.03%)</title><rect x="815" y="228" width="130" height="15" fill="rgb(227,107,33)"/><text x="818.00" y="238.50">_run (mlprodict/..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (6 samples, 2.07%)</title><rect x="921" y="244" width="24" height="15" fill="rgb(244,35,3)"/><text x="924.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.34%)</title><rect x="941" y="260" width="4" height="15" fill="rgb(249,54,5)"/><text x="944.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:447) (1 samples, 0.34%)</title><rect x="941" y="276" width="4" height="15" fill="rgb(249,20,20)"/><text x="944.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:229) (1 samples, 0.34%)</title><rect x="941" y="292" width="4" height="15" fill="rgb(234,81,50)"/><text x="944.00" y="302.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (2 samples, 0.69%)</title><rect x="958" y="260" width="8" height="15" fill="rgb(254,139,10)"/><text x="961.00" y="270.50"></text></g><g><title>0x5647f91a1e50 (?) (1 samples, 0.34%)</title><rect x="970" y="276" width="4" height="15" fill="rgb(206,128,23)"/><text x="973.00" y="286.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.34%)</title><rect x="970" y="292" width="4" height="15" fill="rgb(230,154,45)"/><text x="973.00" y="302.50"></text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="970" y="308" width="4" height="15" fill="rgb(216,204,29)"/><text x="973.00" y="318.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.34%)</title><rect x="974" y="276" width="4" height="15" fill="rgb(253,72,25)"/><text x="977.00" y="286.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:94) (1 samples, 0.34%)</title><rect x="974" y="292" width="4" height="15" fill="rgb(211,192,17)"/><text x="977.00" y="302.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.34%)</title><rect x="978" y="292" width="4" height="15" fill="rgb(231,62,21)"/><text x="981.00" y="302.50"></text></g><g><title>0x7f715f738730 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="978" y="308" width="4" height="15" fill="rgb(220,204,9)"/><text x="981.00" y="318.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.34%)</title><rect x="982" y="308" width="4" height="15" fill="rgb(247,209,1)"/><text x="985.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.34%)</title><rect x="982" y="324" width="4" height="15" fill="rgb(223,22,48)"/><text x="985.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.34%)</title><rect x="982" y="340" width="4" height="15" fill="rgb(228,191,35)"/><text x="985.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.34%)</title><rect x="986" y="324" width="4" height="15" fill="rgb(222,79,9)"/><text x="989.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.34%)</title><rect x="986" y="340" width="4" height="15" fill="rgb(242,100,31)"/><text x="989.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.34%)</title><rect x="986" y="356" width="4" height="15" fill="rgb(207,124,14)"/><text x="989.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.34%)</title><rect x="986" y="372" width="4" height="15" fill="rgb(210,61,12)"/><text x="989.00" y="382.50"></text></g><g><title>_array_fill_strides (ctors.c:4124) (1 samples, 0.34%)</title><rect x="986" y="388" width="4" height="15" fill="rgb(243,111,39)"/><text x="989.00" y="398.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:578) (1 samples, 0.34%)</title><rect x="990" y="324" width="4" height="15" fill="rgb(236,178,20)"/><text x="993.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.72%)</title><rect x="978" y="276" width="20" height="15" fill="rgb(241,152,2)"/><text x="981.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 1.38%)</title><rect x="982" y="292" width="16" height="15" fill="rgb(254,228,1)"/><text x="985.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 1.03%)</title><rect x="986" y="308" width="12" height="15" fill="rgb(221,208,4)"/><text x="989.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.34%)</title><rect x="994" y="324" width="4" height="15" fill="rgb(216,14,23)"/><text x="997.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.34%)</title><rect x="994" y="340" width="4" height="15" fill="rgb(249,160,40)"/><text x="997.00" y="350.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="994" y="356" width="4" height="15" fill="rgb(251,124,41)"/><text x="997.00" y="366.50"></text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="994" y="372" width="4" height="15" fill="rgb(229,199,28)"/><text x="997.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (12 samples, 4.14%)</title><rect x="953" y="228" width="49" height="15" fill="rgb(246,202,33)"/><text x="956.00" y="238.50">_run..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (11 samples, 3.79%)</title><rect x="958" y="244" width="44" height="15" fill="rgb(242,187,8)"/><text x="961.00" y="254.50">nump..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (9 samples, 3.10%)</title><rect x="966" y="260" width="36" height="15" fill="rgb(238,36,3)"/><text x="969.00" y="270.50">dot..</text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="998" y="276" width="4" height="15" fill="rgb(230,24,6)"/><text x="1001.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:40) (3 samples, 1.03%)</title><rect x="1002" y="228" width="13" height="15" fill="rgb(212,95,34)"/><text x="1005.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.34%)</title><rect x="1015" y="260" width="4" height="15" fill="rgb(234,220,2)"/><text x="1018.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.34%)</title><rect x="1015" y="276" width="4" height="15" fill="rgb(214,185,48)"/><text x="1018.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="1019" y="260" width="4" height="15" fill="rgb(252,53,8)"/><text x="1022.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.34%)</title><rect x="1019" y="276" width="4" height="15" fill="rgb(216,149,3)"/><text x="1022.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.34%)</title><rect x="1019" y="292" width="4" height="15" fill="rgb(219,33,35)"/><text x="1022.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.34%)</title><rect x="1023" y="260" width="4" height="15" fill="rgb(228,48,5)"/><text x="1026.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.34%)</title><rect x="1023" y="276" width="4" height="15" fill="rgb(213,119,9)"/><text x="1026.00" y="286.50"></text></g><g><title>0x7f715f74312b (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1023" y="292" width="4" height="15" fill="rgb(221,117,33)"/><text x="1026.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.34%)</title><rect x="1027" y="276" width="4" height="15" fill="rgb(211,8,50)"/><text x="1030.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.34%)</title><rect x="1027" y="292" width="4" height="15" fill="rgb(221,114,33)"/><text x="1030.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.34%)</title><rect x="1031" y="308" width="4" height="15" fill="rgb(234,49,31)"/><text x="1034.00" y="318.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:753) (1 samples, 0.34%)</title><rect x="1031" y="324" width="4" height="15" fill="rgb(227,45,51)"/><text x="1034.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.69%)</title><rect x="1031" y="292" width="8" height="15" fill="rgb(205,118,29)"/><text x="1034.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.34%)</title><rect x="1035" y="308" width="4" height="15" fill="rgb(211,164,49)"/><text x="1038.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2224) (1 samples, 0.34%)</title><rect x="1035" y="324" width="4" height="15" fill="rgb(211,92,20)"/><text x="1038.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.34%)</title><rect x="1039" y="292" width="4" height="15" fill="rgb(232,105,36)"/><text x="1042.00" y="302.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.34%)</title><rect x="1039" y="308" width="4" height="15" fill="rgb(238,42,30)"/><text x="1042.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (8 samples, 2.76%)</title><rect x="1015" y="228" width="32" height="15" fill="rgb(248,210,24)"/><text x="1018.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 2.76%)</title><rect x="1015" y="244" width="32" height="15" fill="rgb(208,45,32)"/><text x="1018.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.72%)</title><rect x="1027" y="260" width="20" height="15" fill="rgb(210,145,44)"/><text x="1030.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.38%)</title><rect x="1031" y="276" width="16" height="15" fill="rgb(246,120,47)"/><text x="1034.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.34%)</title><rect x="1043" y="292" width="4" height="15" fill="rgb(228,79,32)"/><text x="1046.00" y="302.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1371) (1 samples, 0.34%)</title><rect x="1043" y="308" width="4" height="15" fill="rgb(237,116,47)"/><text x="1046.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.34%)</title><rect x="1051" y="244" width="4" height="15" fill="rgb(233,64,6)"/><text x="1054.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="1051" y="260" width="4" height="15" fill="rgb(226,53,43)"/><text x="1054.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.34%)</title><rect x="1051" y="276" width="4" height="15" fill="rgb(238,81,54)"/><text x="1054.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.34%)</title><rect x="1051" y="292" width="4" height="15" fill="rgb(208,171,13)"/><text x="1054.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="1051" y="308" width="4" height="15" fill="rgb(238,101,51)"/><text x="1054.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="1055" y="260" width="4" height="15" fill="rgb(208,95,49)"/><text x="1058.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.34%)</title><rect x="1055" y="276" width="4" height="15" fill="rgb(211,170,24)"/><text x="1058.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.34%)</title><rect x="1055" y="292" width="4" height="15" fill="rgb(251,17,22)"/><text x="1058.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.34%)</title><rect x="1055" y="308" width="4" height="15" fill="rgb(241,78,12)"/><text x="1058.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.34%)</title><rect x="1059" y="308" width="4" height="15" fill="rgb(212,182,38)"/><text x="1062.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:602) (1 samples, 0.34%)</title><rect x="1059" y="324" width="4" height="15" fill="rgb(206,86,43)"/><text x="1062.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (5 samples, 1.72%)</title><rect x="1047" y="228" width="20" height="15" fill="rgb(220,194,5)"/><text x="1050.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.03%)</title><rect x="1055" y="244" width="12" height="15" fill="rgb(240,187,11)"/><text x="1058.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.69%)</title><rect x="1059" y="260" width="8" height="15" fill="rgb(208,180,15)"/><text x="1062.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.69%)</title><rect x="1059" y="276" width="8" height="15" fill="rgb(216,135,21)"/><text x="1062.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.69%)</title><rect x="1059" y="292" width="8" height="15" fill="rgb(231,11,15)"/><text x="1062.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.34%)</title><rect x="1063" y="308" width="4" height="15" fill="rgb(234,82,37)"/><text x="1066.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.34%)</title><rect x="1063" y="324" width="4" height="15" fill="rgb(216,50,0)"/><text x="1066.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:376) (1 samples, 0.34%)</title><rect x="1063" y="340" width="4" height="15" fill="rgb(232,216,28)"/><text x="1066.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.34%)</title><rect x="1063" y="356" width="4" height="15" fill="rgb(233,22,45)"/><text x="1066.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.34%)</title><rect x="1063" y="372" width="4" height="15" fill="rgb(205,12,49)"/><text x="1066.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.34%)</title><rect x="1067" y="228" width="5" height="15" fill="rgb(226,227,3)"/><text x="1070.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.34%)</title><rect x="1084" y="244" width="4" height="15" fill="rgb(242,111,11)"/><text x="1087.00" y="254.50"></text></g><g><title>array_argmax (methods.c:292) (1 samples, 0.34%)</title><rect x="1100" y="308" width="4" height="15" fill="rgb(233,106,31)"/><text x="1103.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.34%)</title><rect x="1108" y="324" width="4" height="15" fill="rgb(226,175,35)"/><text x="1111.00" y="334.50"></text></g><g><title>0x7f715f800130 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1108" y="340" width="4" height="15" fill="rgb(223,154,9)"/><text x="1111.00" y="350.50"></text></g><g><title>array_argmax (methods.c:297) (3 samples, 1.03%)</title><rect x="1104" y="308" width="12" height="15" fill="rgb(242,87,50)"/><text x="1107.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="1112" y="324" width="4" height="15" fill="rgb(235,163,29)"/><text x="1115.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (43 samples, 14.83%)</title><rect x="945" y="196" width="175" height="15" fill="rgb(251,142,13)"/><text x="948.00" y="206.50">run (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (43 samples, 14.83%)</title><rect x="945" y="212" width="175" height="15" fill="rgb(240,113,30)"/><text x="948.00" y="222.50">run (mlprodict/onnxrt/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (12 samples, 4.14%)</title><rect x="1072" y="228" width="48" height="15" fill="rgb(240,6,17)"/><text x="1075.00" y="238.50">_run..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (8 samples, 2.76%)</title><rect x="1088" y="244" width="32" height="15" fill="rgb(243,180,49)"/><text x="1091.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 2.76%)</title><rect x="1088" y="260" width="32" height="15" fill="rgb(236,38,40)"/><text x="1091.00" y="270.50">ar..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 2.07%)</title><rect x="1096" y="276" width="24" height="15" fill="rgb(212,12,38)"/><text x="1099.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 1.72%)</title><rect x="1100" y="292" width="20" height="15" fill="rgb(249,223,41)"/><text x="1103.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.34%)</title><rect x="1116" y="308" width="4" height="15" fill="rgb(210,1,35)"/><text x="1119.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:85) (1 samples, 0.34%)</title><rect x="1116" y="324" width="4" height="15" fill="rgb(223,157,51)"/><text x="1119.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.34%)</title><rect x="1116" y="340" width="4" height="15" fill="rgb(220,142,19)"/><text x="1119.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c:2094) (1 samples, 0.34%)</title><rect x="1116" y="356" width="4" height="15" fill="rgb(215,74,1)"/><text x="1119.00" y="366.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.34%)</title><rect x="1116" y="372" width="4" height="15" fill="rgb(251,180,13)"/><text x="1119.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (78 samples, 26.90%)</title><rect x="807" y="180" width="317" height="15" fill="rgb(208,130,46)"/><text x="810.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.34%)</title><rect x="1120" y="196" width="4" height="15" fill="rgb(238,18,30)"/><text x="1123.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.69%)</title><rect x="1124" y="180" width="9" height="15" fill="rgb(253,148,39)"/><text x="1127.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.69%)</title><rect x="1133" y="180" width="8" height="15" fill="rgb(225,36,14)"/><text x="1136.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (6 samples, 2.07%)</title><rect x="1141" y="180" width="24" height="15" fill="rgb(242,42,16)"/><text x="1144.00" y="190.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (101 samples, 34.83%)</title><rect x="770" y="164" width="411" height="15" fill="rgb(247,100,43)"/><text x="773.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (4 samples, 1.38%)</title><rect x="1165" y="180" width="16" height="15" fill="rgb(224,207,25)"/><text x="1168.00" y="190.50"></text></g><g><title>all (290 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(222,51,54)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozipmap.py:45) (115 samples, 39.66%)</title><rect x="722" y="52" width="468" height="15" fill="rgb(252,16,5)"/><text x="725.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverlibli..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozipmap.py:44) (115 samples, 39.66%)</title><rect x="722" y="68" width="468" height="15" fill="rgb(210,112,21)"/><text x="725.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozipmap.py:29) (115 samples, 39.66%)</title><rect x="722" y="84" width="468" height="15" fill="rgb(238,185,16)"/><text x="725.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solver..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_nozipmap.py:23) (115 samples, 39.66%)</title><rect x="722" y="100" width="468" height="15" fill="rgb(214,83,51)"/><text x="725.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblin..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (113 samples, 38.97%)</title><rect x="730" y="116" width="460" height="15" fill="rgb(209,14,37)"/><text x="733.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (112 samples, 38.62%)</title><rect x="734" y="132" width="456" height="15" fill="rgb(230,184,26)"/><text x="737.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (108 samples, 37.24%)</title><rect x="750" y="148" width="440" height="15" fill="rgb(233,187,21)"/><text x="753.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.69%)</title><rect x="1181" y="164" width="9" height="15" fill="rgb(250,128,40)"/><text x="1184.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.34%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(244,149,35)"/><text x="1188.00" y="190.50"></text></g></g></svg>