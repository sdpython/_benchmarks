<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1558" onload="init(evt)" viewBox="0 0 1200 1558" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1558" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1541.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1541.00"> </text><g id="frames"><g><title>&lt;listcomp&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.21%)</title><rect x="12" y="1364" width="3" height="15" fill="rgb(241,131,42)"/><text x="15.00" y="1374.50"></text></g><g><title>_c (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.21%)</title><rect x="12" y="1380" width="3" height="15" fill="rgb(229,78,5)"/><text x="15.00" y="1390.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="12" y="1396" width="3" height="15" fill="rgb(247,187,16)"/><text x="15.00" y="1406.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.64%)</title><rect x="10" y="628" width="7" height="15" fill="rgb(243,113,10)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="644" width="7" height="15" fill="rgb(245,74,37)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="660" width="7" height="15" fill="rgb(245,92,10)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="676" width="7" height="15" fill="rgb(231,21,43)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.64%)</title><rect x="10" y="692" width="7" height="15" fill="rgb(232,30,33)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="708" width="7" height="15" fill="rgb(253,167,25)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.64%)</title><rect x="10" y="724" width="7" height="15" fill="rgb(250,213,29)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="740" width="7" height="15" fill="rgb(236,146,1)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="756" width="7" height="15" fill="rgb(253,2,51)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="772" width="7" height="15" fill="rgb(248,190,11)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="788" width="7" height="15" fill="rgb(218,108,52)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="804" width="7" height="15" fill="rgb(238,218,19)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="820" width="7" height="15" fill="rgb(215,128,1)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.64%)</title><rect x="10" y="836" width="7" height="15" fill="rgb(227,152,54)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="852" width="7" height="15" fill="rgb(232,191,7)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.64%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(216,82,37)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(232,113,16)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="900" width="7" height="15" fill="rgb(229,162,30)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="916" width="7" height="15" fill="rgb(237,99,20)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.64%)</title><rect x="10" y="932" width="7" height="15" fill="rgb(250,33,39)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="948" width="7" height="15" fill="rgb(222,140,5)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.64%)</title><rect x="10" y="964" width="7" height="15" fill="rgb(219,10,46)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="980" width="7" height="15" fill="rgb(249,129,8)"/><text x="13.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="996" width="7" height="15" fill="rgb(222,200,20)"/><text x="13.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="1012" width="7" height="15" fill="rgb(236,40,54)"/><text x="13.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="1028" width="7" height="15" fill="rgb(249,123,22)"/><text x="13.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="1044" width="7" height="15" fill="rgb(244,126,39)"/><text x="13.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.64%)</title><rect x="10" y="1060" width="7" height="15" fill="rgb(254,215,46)"/><text x="13.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="1076" width="7" height="15" fill="rgb(222,1,20)"/><text x="13.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.64%)</title><rect x="10" y="1092" width="7" height="15" fill="rgb(223,212,43)"/><text x="13.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="1108" width="7" height="15" fill="rgb(239,183,30)"/><text x="13.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="1124" width="7" height="15" fill="rgb(220,178,18)"/><text x="13.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="10" y="1140" width="7" height="15" fill="rgb(211,121,20)"/><text x="13.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="1156" width="5" height="15" fill="rgb(223,64,5)"/><text x="15.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="1172" width="5" height="15" fill="rgb(227,42,48)"/><text x="15.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="12" y="1188" width="5" height="15" fill="rgb(238,61,47)"/><text x="15.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="1204" width="5" height="15" fill="rgb(215,11,38)"/><text x="15.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.42%)</title><rect x="12" y="1220" width="5" height="15" fill="rgb(213,143,53)"/><text x="15.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="1236" width="5" height="15" fill="rgb(233,3,25)"/><text x="15.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="1252" width="5" height="15" fill="rgb(245,205,1)"/><text x="15.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="1268" width="5" height="15" fill="rgb(213,95,16)"/><text x="15.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="12" y="1284" width="5" height="15" fill="rgb(222,13,28)"/><text x="15.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="1300" width="5" height="15" fill="rgb(250,42,18)"/><text x="15.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.42%)</title><rect x="12" y="1316" width="5" height="15" fill="rgb(211,223,39)"/><text x="15.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.42%)</title><rect x="12" y="1332" width="5" height="15" fill="rgb(205,11,21)"/><text x="15.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.42%)</title><rect x="12" y="1348" width="5" height="15" fill="rgb(245,199,31)"/><text x="15.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.21%)</title><rect x="15" y="1364" width="2" height="15" fill="rgb(226,145,3)"/><text x="18.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.21%)</title><rect x="15" y="1380" width="2" height="15" fill="rgb(206,4,51)"/><text x="18.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.21%)</title><rect x="15" y="1396" width="2" height="15" fill="rgb(218,176,24)"/><text x="18.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.21%)</title><rect x="15" y="1412" width="2" height="15" fill="rgb(247,122,52)"/><text x="18.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.21%)</title><rect x="15" y="1428" width="2" height="15" fill="rgb(212,130,29)"/><text x="18.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.21%)</title><rect x="15" y="1444" width="2" height="15" fill="rgb(207,68,20)"/><text x="18.00" y="1454.50"></text></g><g><title>format_name_with_domain (skl2onnx/algebra/automation.py) (1 samples, 0.21%)</title><rect x="15" y="1460" width="2" height="15" fill="rgb(219,143,36)"/><text x="18.00" y="1470.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="15" y="1476" width="2" height="15" fill="rgb(210,29,5)"/><text x="18.00" y="1486.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.21%)</title><rect x="17" y="932" width="3" height="15" fill="rgb(244,63,47)"/><text x="20.00" y="942.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.21%)</title><rect x="17" y="948" width="3" height="15" fill="rgb(233,98,37)"/><text x="20.00" y="958.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.21%)</title><rect x="17" y="964" width="3" height="15" fill="rgb(207,127,4)"/><text x="20.00" y="974.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py) (1 samples, 0.21%)</title><rect x="17" y="980" width="3" height="15" fill="rgb(211,130,47)"/><text x="20.00" y="990.50"></text></g><g><title>unicode_lstrip (python3.7) (1 samples, 0.21%)</title><rect x="17" y="996" width="3" height="15" fill="rgb(241,116,26)"/><text x="20.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.21%)</title><rect x="20" y="1364" width="2" height="15" fill="rgb(231,60,33)"/><text x="23.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.21%)</title><rect x="20" y="1380" width="2" height="15" fill="rgb(251,73,24)"/><text x="23.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.21%)</title><rect x="20" y="1396" width="2" height="15" fill="rgb(244,177,17)"/><text x="23.00" y="1406.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.21%)</title><rect x="20" y="1412" width="2" height="15" fill="rgb(205,221,19)"/><text x="23.00" y="1422.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.21%)</title><rect x="20" y="1428" width="2" height="15" fill="rgb(224,38,25)"/><text x="23.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.27%)</title><rect x="10" y="340" width="15" height="15" fill="rgb(212,80,22)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.27%)</title><rect x="10" y="356" width="15" height="15" fill="rgb(219,30,44)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.27%)</title><rect x="10" y="372" width="15" height="15" fill="rgb(228,134,15)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.27%)</title><rect x="10" y="388" width="15" height="15" fill="rgb(219,51,38)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.27%)</title><rect x="10" y="404" width="15" height="15" fill="rgb(220,217,52)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.27%)</title><rect x="10" y="420" width="15" height="15" fill="rgb(224,229,36)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 1.27%)</title><rect x="10" y="436" width="15" height="15" fill="rgb(209,91,32)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.27%)</title><rect x="10" y="452" width="15" height="15" fill="rgb(244,147,38)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.27%)</title><rect x="10" y="468" width="15" height="15" fill="rgb(238,145,53)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.27%)</title><rect x="10" y="484" width="15" height="15" fill="rgb(219,79,26)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.27%)</title><rect x="10" y="500" width="15" height="15" fill="rgb(254,227,21)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.27%)</title><rect x="10" y="516" width="15" height="15" fill="rgb(219,201,5)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 1.27%)</title><rect x="10" y="532" width="15" height="15" fill="rgb(252,54,12)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.27%)</title><rect x="10" y="548" width="15" height="15" fill="rgb(248,23,52)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.27%)</title><rect x="10" y="564" width="15" height="15" fill="rgb(208,229,21)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.27%)</title><rect x="10" y="580" width="15" height="15" fill="rgb(218,124,23)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.27%)</title><rect x="10" y="596" width="15" height="15" fill="rgb(243,83,2)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.27%)</title><rect x="10" y="612" width="15" height="15" fill="rgb(240,168,8)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.64%)</title><rect x="17" y="628" width="8" height="15" fill="rgb(225,80,19)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="17" y="644" width="8" height="15" fill="rgb(235,223,40)"/><text x="20.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="17" y="660" width="8" height="15" fill="rgb(238,96,51)"/><text x="20.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="17" y="676" width="8" height="15" fill="rgb(229,156,5)"/><text x="20.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.64%)</title><rect x="17" y="692" width="8" height="15" fill="rgb(244,28,44)"/><text x="20.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="17" y="708" width="8" height="15" fill="rgb(231,145,9)"/><text x="20.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.64%)</title><rect x="17" y="724" width="8" height="15" fill="rgb(214,88,42)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="17" y="740" width="8" height="15" fill="rgb(237,203,35)"/><text x="20.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="17" y="756" width="8" height="15" fill="rgb(211,40,52)"/><text x="20.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="17" y="772" width="8" height="15" fill="rgb(240,101,43)"/><text x="20.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.64%)</title><rect x="17" y="788" width="8" height="15" fill="rgb(249,4,16)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="17" y="804" width="8" height="15" fill="rgb(224,12,54)"/><text x="20.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.64%)</title><rect x="17" y="820" width="8" height="15" fill="rgb(237,156,25)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="17" y="836" width="8" height="15" fill="rgb(216,132,18)"/><text x="20.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="17" y="852" width="8" height="15" fill="rgb(211,25,7)"/><text x="20.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="17" y="868" width="8" height="15" fill="rgb(228,190,11)"/><text x="20.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.64%)</title><rect x="17" y="884" width="8" height="15" fill="rgb(224,74,49)"/><text x="20.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.64%)</title><rect x="17" y="900" width="8" height="15" fill="rgb(242,9,44)"/><text x="20.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 0.64%)</title><rect x="17" y="916" width="8" height="15" fill="rgb(207,112,15)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="932" width="5" height="15" fill="rgb(228,160,50)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="948" width="5" height="15" fill="rgb(237,126,3)"/><text x="23.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="964" width="5" height="15" fill="rgb(211,80,10)"/><text x="23.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="20" y="980" width="5" height="15" fill="rgb(234,162,24)"/><text x="23.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="996" width="5" height="15" fill="rgb(234,41,51)"/><text x="23.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.42%)</title><rect x="20" y="1012" width="5" height="15" fill="rgb(253,50,46)"/><text x="23.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1028" width="5" height="15" fill="rgb(245,206,13)"/><text x="23.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1044" width="5" height="15" fill="rgb(253,126,9)"/><text x="23.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1060" width="5" height="15" fill="rgb(208,161,49)"/><text x="23.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="20" y="1076" width="5" height="15" fill="rgb(210,92,2)"/><text x="23.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1092" width="5" height="15" fill="rgb(238,116,45)"/><text x="23.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.42%)</title><rect x="20" y="1108" width="5" height="15" fill="rgb(208,10,47)"/><text x="23.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1124" width="5" height="15" fill="rgb(209,11,48)"/><text x="23.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1140" width="5" height="15" fill="rgb(222,201,29)"/><text x="23.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1156" width="5" height="15" fill="rgb(215,212,31)"/><text x="23.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1172" width="5" height="15" fill="rgb(243,54,37)"/><text x="23.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1188" width="5" height="15" fill="rgb(225,9,12)"/><text x="23.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="20" y="1204" width="5" height="15" fill="rgb(243,56,19)"/><text x="23.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1220" width="5" height="15" fill="rgb(247,195,45)"/><text x="23.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.42%)</title><rect x="20" y="1236" width="5" height="15" fill="rgb(219,2,19)"/><text x="23.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1252" width="5" height="15" fill="rgb(205,164,53)"/><text x="23.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1268" width="5" height="15" fill="rgb(252,156,32)"/><text x="23.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1284" width="5" height="15" fill="rgb(254,1,15)"/><text x="23.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1300" width="5" height="15" fill="rgb(251,198,45)"/><text x="23.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1316" width="5" height="15" fill="rgb(226,28,0)"/><text x="23.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="20" y="1332" width="5" height="15" fill="rgb(213,50,54)"/><text x="23.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="20" y="1348" width="5" height="15" fill="rgb(254,116,26)"/><text x="23.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py) (1 samples, 0.21%)</title><rect x="22" y="1364" width="3" height="15" fill="rgb(205,89,30)"/><text x="25.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.21%)</title><rect x="22" y="1380" width="3" height="15" fill="rgb(221,77,15)"/><text x="25.00" y="1390.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py) (1 samples, 0.21%)</title><rect x="22" y="1396" width="3" height="15" fill="rgb(253,229,45)"/><text x="25.00" y="1406.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.21%)</title><rect x="22" y="1412" width="3" height="15" fill="rgb(248,195,42)"/><text x="25.00" y="1422.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.21%)</title><rect x="22" y="1428" width="3" height="15" fill="rgb(246,141,24)"/><text x="25.00" y="1438.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.21%)</title><rect x="22" y="1444" width="3" height="15" fill="rgb(207,45,24)"/><text x="25.00" y="1454.50"></text></g><g><title>0x7f340202b40e (?) (1 samples, 0.21%)</title><rect x="25" y="772" width="2" height="15" fill="rgb(249,210,11)"/><text x="28.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="25" y="788" width="2" height="15" fill="rgb(240,135,32)"/><text x="28.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="25" y="804" width="2" height="15" fill="rgb(248,43,47)"/><text x="28.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="25" y="820" width="2" height="15" fill="rgb(221,184,24)"/><text x="28.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="25" y="836" width="2" height="15" fill="rgb(244,117,11)"/><text x="28.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="25" y="852" width="2" height="15" fill="rgb(241,204,45)"/><text x="28.00" y="862.50"></text></g><g><title>0x7f3401de4104 (?) (1 samples, 0.21%)</title><rect x="25" y="868" width="2" height="15" fill="rgb(228,102,2)"/><text x="28.00" y="878.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 1.70%)</title><rect x="10" y="292" width="20" height="15" fill="rgb(221,201,45)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.70%)</title><rect x="10" y="308" width="20" height="15" fill="rgb(253,105,40)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.70%)</title><rect x="10" y="324" width="20" height="15" fill="rgb(230,44,13)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="340" width="5" height="15" fill="rgb(216,205,17)"/><text x="28.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="25" y="356" width="5" height="15" fill="rgb(226,227,34)"/><text x="28.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="372" width="5" height="15" fill="rgb(208,87,29)"/><text x="28.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.42%)</title><rect x="25" y="388" width="5" height="15" fill="rgb(241,28,48)"/><text x="28.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="404" width="5" height="15" fill="rgb(248,229,35)"/><text x="28.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="420" width="5" height="15" fill="rgb(253,19,11)"/><text x="28.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="436" width="5" height="15" fill="rgb(231,153,48)"/><text x="28.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="25" y="452" width="5" height="15" fill="rgb(237,174,53)"/><text x="28.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="468" width="5" height="15" fill="rgb(211,153,34)"/><text x="28.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.42%)</title><rect x="25" y="484" width="5" height="15" fill="rgb(250,12,49)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="500" width="5" height="15" fill="rgb(228,155,14)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="516" width="5" height="15" fill="rgb(252,61,16)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="532" width="5" height="15" fill="rgb(223,36,28)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="25" y="548" width="5" height="15" fill="rgb(241,208,6)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="564" width="5" height="15" fill="rgb(212,6,11)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (2 samples, 0.42%)</title><rect x="25" y="580" width="5" height="15" fill="rgb(238,168,15)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="596" width="5" height="15" fill="rgb(225,41,22)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="612" width="5" height="15" fill="rgb(223,206,23)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="628" width="5" height="15" fill="rgb(217,3,17)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="25" y="644" width="5" height="15" fill="rgb(248,107,12)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="660" width="5" height="15" fill="rgb(233,222,1)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (2 samples, 0.42%)</title><rect x="25" y="676" width="5" height="15" fill="rgb(236,214,45)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="692" width="5" height="15" fill="rgb(253,185,42)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="708" width="5" height="15" fill="rgb(217,5,19)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="724" width="5" height="15" fill="rgb(235,194,20)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="25" y="740" width="5" height="15" fill="rgb(232,176,13)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="25" y="756" width="5" height="15" fill="rgb(215,92,18)"/><text x="28.00" y="766.50"></text></g><g><title>0x7f340202b40e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="772" width="3" height="15" fill="rgb(239,34,19)"/><text x="30.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="788" width="3" height="15" fill="rgb(217,163,19)"/><text x="30.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="804" width="3" height="15" fill="rgb(253,28,47)"/><text x="30.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="820" width="3" height="15" fill="rgb(231,117,23)"/><text x="30.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="27" y="836" width="3" height="15" fill="rgb(238,35,8)"/><text x="30.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="852" width="3" height="15" fill="rgb(235,58,15)"/><text x="30.00" y="862.50"></text></g><g><title>0x7f3401de4cd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="868" width="3" height="15" fill="rgb(219,221,49)"/><text x="30.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="884" width="3" height="15" fill="rgb(252,205,21)"/><text x="30.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="900" width="3" height="15" fill="rgb(213,219,36)"/><text x="30.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="916" width="3" height="15" fill="rgb(216,154,20)"/><text x="30.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="27" y="932" width="3" height="15" fill="rgb(206,27,54)"/><text x="30.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="948" width="3" height="15" fill="rgb(226,180,23)"/><text x="30.00" y="958.50"></text></g><g><title>0x7f34014da0e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="964" width="3" height="15" fill="rgb(248,59,9)"/><text x="30.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="980" width="3" height="15" fill="rgb(233,223,1)"/><text x="30.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="996" width="3" height="15" fill="rgb(249,38,14)"/><text x="30.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1012" width="3" height="15" fill="rgb(219,199,54)"/><text x="30.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="27" y="1028" width="3" height="15" fill="rgb(230,55,50)"/><text x="30.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1044" width="3" height="15" fill="rgb(216,64,42)"/><text x="30.00" y="1054.50"></text></g><g><title>0x7f340125ee68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1060" width="3" height="15" fill="rgb(245,185,35)"/><text x="30.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1076" width="3" height="15" fill="rgb(244,99,21)"/><text x="30.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1092" width="3" height="15" fill="rgb(252,88,22)"/><text x="30.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1108" width="3" height="15" fill="rgb(206,211,53)"/><text x="30.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="27" y="1124" width="3" height="15" fill="rgb(254,2,15)"/><text x="30.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1140" width="3" height="15" fill="rgb(211,163,42)"/><text x="30.00" y="1150.50"></text></g><g><title>0x7f3400fef2fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1156" width="3" height="15" fill="rgb(207,24,14)"/><text x="30.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1172" width="3" height="15" fill="rgb(231,162,34)"/><text x="30.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1188" width="3" height="15" fill="rgb(252,107,33)"/><text x="30.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1204" width="3" height="15" fill="rgb(246,135,3)"/><text x="30.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="27" y="1220" width="3" height="15" fill="rgb(246,27,25)"/><text x="30.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1236" width="3" height="15" fill="rgb(245,12,46)"/><text x="30.00" y="1246.50"></text></g><g><title>0x7f3400dd3153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1252" width="3" height="15" fill="rgb(253,226,40)"/><text x="30.00" y="1262.50"></text></g><g><title>0x7f3400dd1c13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1268" width="3" height="15" fill="rgb(227,43,10)"/><text x="30.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1284" width="3" height="15" fill="rgb(241,25,14)"/><text x="30.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1300" width="3" height="15" fill="rgb(221,177,38)"/><text x="30.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1316" width="3" height="15" fill="rgb(239,48,1)"/><text x="30.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="27" y="1332" width="3" height="15" fill="rgb(214,127,21)"/><text x="30.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="27" y="1348" width="3" height="15" fill="rgb(251,12,36)"/><text x="30.00" y="1358.50"></text></g><g><title>0x7f3400b6e181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1364" width="3" height="15" fill="rgb(231,30,11)"/><text x="30.00" y="1374.50"></text></g><g><title>0x7f3400b711c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1380" width="3" height="15" fill="rgb(229,84,10)"/><text x="30.00" y="1390.50"></text></g><g><title>0x7f3400b9d167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1396" width="3" height="15" fill="rgb(223,64,12)"/><text x="30.00" y="1406.50"></text></g><g><title>0x7f3400b98b64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1412" width="3" height="15" fill="rgb(206,38,5)"/><text x="30.00" y="1422.50"></text></g><g><title>0x7f3400b7c07b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1428" width="3" height="15" fill="rgb(248,101,6)"/><text x="30.00" y="1438.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.21%)</title><rect x="27" y="1444" width="3" height="15" fill="rgb(225,87,44)"/><text x="30.00" y="1454.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.21%)</title><rect x="27" y="1460" width="3" height="15" fill="rgb(244,134,11)"/><text x="30.00" y="1470.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.21%)</title><rect x="27" y="1476" width="3" height="15" fill="rgb(227,128,35)"/><text x="30.00" y="1486.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.21%)</title><rect x="27" y="1492" width="3" height="15" fill="rgb(239,31,36)"/><text x="30.00" y="1502.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.21%)</title><rect x="27" y="1508" width="3" height="15" fill="rgb(240,211,54)"/><text x="30.00" y="1518.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="30" y="932" width="2" height="15" fill="rgb(225,121,34)"/><text x="33.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="30" y="948" width="2" height="15" fill="rgb(225,123,37)"/><text x="33.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="30" y="964" width="2" height="15" fill="rgb(228,5,27)"/><text x="33.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.21%)</title><rect x="30" y="980" width="2" height="15" fill="rgb(253,170,26)"/><text x="33.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.21%)</title><rect x="30" y="996" width="2" height="15" fill="rgb(231,49,20)"/><text x="33.00" y="1006.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.64%)</title><rect x="30" y="868" width="7" height="15" fill="rgb(212,174,41)"/><text x="33.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.64%)</title><rect x="30" y="884" width="7" height="15" fill="rgb(209,95,22)"/><text x="33.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.64%)</title><rect x="30" y="900" width="7" height="15" fill="rgb(220,70,12)"/><text x="33.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.64%)</title><rect x="30" y="916" width="7" height="15" fill="rgb(250,30,9)"/><text x="33.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.42%)</title><rect x="32" y="932" width="5" height="15" fill="rgb(246,151,14)"/><text x="35.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.21%)</title><rect x="35" y="948" width="2" height="15" fill="rgb(247,183,37)"/><text x="38.00" y="958.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.21%)</title><rect x="35" y="964" width="2" height="15" fill="rgb(242,114,52)"/><text x="38.00" y="974.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.21%)</title><rect x="35" y="980" width="2" height="15" fill="rgb(241,14,50)"/><text x="38.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.85%)</title><rect x="30" y="836" width="10" height="15" fill="rgb(206,191,9)"/><text x="33.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.85%)</title><rect x="30" y="852" width="10" height="15" fill="rgb(218,104,30)"/><text x="33.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="37" y="868" width="3" height="15" fill="rgb(227,140,35)"/><text x="40.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="37" y="884" width="3" height="15" fill="rgb(220,199,10)"/><text x="40.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="37" y="900" width="3" height="15" fill="rgb(232,80,28)"/><text x="40.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="37" y="916" width="3" height="15" fill="rgb(209,135,32)"/><text x="40.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="37" y="932" width="3" height="15" fill="rgb(252,166,15)"/><text x="40.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.21%)</title><rect x="37" y="948" width="3" height="15" fill="rgb(232,227,48)"/><text x="40.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.21%)</title><rect x="37" y="964" width="3" height="15" fill="rgb(230,110,34)"/><text x="40.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.21%)</title><rect x="37" y="980" width="3" height="15" fill="rgb(207,5,28)"/><text x="40.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.21%)</title><rect x="37" y="996" width="3" height="15" fill="rgb(246,35,19)"/><text x="40.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.21%)</title><rect x="37" y="1012" width="3" height="15" fill="rgb(229,91,2)"/><text x="40.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.76%)</title><rect x="10" y="196" width="32" height="15" fill="rgb(243,195,25)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.76%)</title><rect x="10" y="212" width="32" height="15" fill="rgb(212,14,15)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.76%)</title><rect x="10" y="228" width="32" height="15" fill="rgb(236,149,21)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.76%)</title><rect x="10" y="244" width="32" height="15" fill="rgb(222,36,48)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 2.76%)</title><rect x="10" y="260" width="32" height="15" fill="rgb(210,181,43)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.76%)</title><rect x="10" y="276" width="32" height="15" fill="rgb(227,117,48)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.06%)</title><rect x="30" y="292" width="12" height="15" fill="rgb(235,173,16)"/><text x="33.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="308" width="12" height="15" fill="rgb(241,141,54)"/><text x="33.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="324" width="12" height="15" fill="rgb(208,125,13)"/><text x="33.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="340" width="12" height="15" fill="rgb(226,119,3)"/><text x="33.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.06%)</title><rect x="30" y="356" width="12" height="15" fill="rgb(251,136,29)"/><text x="33.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="372" width="12" height="15" fill="rgb(219,210,26)"/><text x="33.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.06%)</title><rect x="30" y="388" width="12" height="15" fill="rgb(231,119,33)"/><text x="33.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="404" width="12" height="15" fill="rgb(213,61,12)"/><text x="33.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="420" width="12" height="15" fill="rgb(249,47,48)"/><text x="33.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="436" width="12" height="15" fill="rgb(220,142,0)"/><text x="33.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.06%)</title><rect x="30" y="452" width="12" height="15" fill="rgb(207,72,28)"/><text x="33.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="468" width="12" height="15" fill="rgb(234,162,51)"/><text x="33.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.06%)</title><rect x="30" y="484" width="12" height="15" fill="rgb(246,7,44)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="500" width="12" height="15" fill="rgb(229,128,35)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="516" width="12" height="15" fill="rgb(227,58,2)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="532" width="12" height="15" fill="rgb(216,56,3)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.06%)</title><rect x="30" y="548" width="12" height="15" fill="rgb(229,123,8)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="564" width="12" height="15" fill="rgb(220,197,10)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.06%)</title><rect x="30" y="580" width="12" height="15" fill="rgb(242,215,37)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="596" width="12" height="15" fill="rgb(225,123,41)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="612" width="12" height="15" fill="rgb(254,205,37)"/><text x="33.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="628" width="12" height="15" fill="rgb(211,9,31)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="644" width="12" height="15" fill="rgb(236,220,13)"/><text x="33.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="660" width="12" height="15" fill="rgb(218,81,22)"/><text x="33.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="676" width="12" height="15" fill="rgb(229,155,34)"/><text x="33.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.06%)</title><rect x="30" y="692" width="12" height="15" fill="rgb(214,195,22)"/><text x="33.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="708" width="12" height="15" fill="rgb(240,84,48)"/><text x="33.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.06%)</title><rect x="30" y="724" width="12" height="15" fill="rgb(217,61,19)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="740" width="12" height="15" fill="rgb(216,111,31)"/><text x="33.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="756" width="12" height="15" fill="rgb(233,107,5)"/><text x="33.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="772" width="12" height="15" fill="rgb(206,53,7)"/><text x="33.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.06%)</title><rect x="30" y="788" width="12" height="15" fill="rgb(222,220,20)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.06%)</title><rect x="30" y="804" width="12" height="15" fill="rgb(241,75,37)"/><text x="33.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.06%)</title><rect x="30" y="820" width="12" height="15" fill="rgb(235,162,31)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="40" y="836" width="2" height="15" fill="rgb(236,182,6)"/><text x="43.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="40" y="852" width="2" height="15" fill="rgb(243,179,23)"/><text x="43.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="40" y="868" width="2" height="15" fill="rgb(215,19,18)"/><text x="43.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="40" y="884" width="2" height="15" fill="rgb(232,43,35)"/><text x="43.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="40" y="900" width="2" height="15" fill="rgb(215,16,23)"/><text x="43.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.21%)</title><rect x="40" y="916" width="2" height="15" fill="rgb(227,73,16)"/><text x="43.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="40" y="932" width="2" height="15" fill="rgb(241,38,20)"/><text x="43.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="40" y="948" width="2" height="15" fill="rgb(205,24,0)"/><text x="43.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="40" y="964" width="2" height="15" fill="rgb(215,177,9)"/><text x="43.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="40" y="980" width="2" height="15" fill="rgb(234,207,0)"/><text x="43.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.21%)</title><rect x="40" y="996" width="2" height="15" fill="rgb(239,190,18)"/><text x="43.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="40" y="1012" width="2" height="15" fill="rgb(227,212,15)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="40" y="1028" width="2" height="15" fill="rgb(216,161,4)"/><text x="43.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="40" y="1044" width="2" height="15" fill="rgb(221,151,24)"/><text x="43.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="40" y="1060" width="2" height="15" fill="rgb(238,141,20)"/><text x="43.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="40" y="1076" width="2" height="15" fill="rgb(247,181,24)"/><text x="43.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.21%)</title><rect x="40" y="1092" width="2" height="15" fill="rgb(214,14,54)"/><text x="43.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.21%)</title><rect x="40" y="1108" width="2" height="15" fill="rgb(244,24,5)"/><text x="43.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.21%)</title><rect x="40" y="1124" width="2" height="15" fill="rgb(205,21,30)"/><text x="43.00" y="1134.50"></text></g><g><title>compile (re.py) (1 samples, 0.21%)</title><rect x="40" y="1140" width="2" height="15" fill="rgb(216,154,19)"/><text x="43.00" y="1150.50"></text></g><g><title>_compile (re.py) (1 samples, 0.21%)</title><rect x="40" y="1156" width="2" height="15" fill="rgb(219,45,30)"/><text x="43.00" y="1166.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.21%)</title><rect x="40" y="1172" width="2" height="15" fill="rgb(245,159,19)"/><text x="43.00" y="1182.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.21%)</title><rect x="40" y="1188" width="2" height="15" fill="rgb(238,51,18)"/><text x="43.00" y="1198.50"></text></g><g><title>_compile_info (sre_compile.py) (1 samples, 0.21%)</title><rect x="40" y="1204" width="2" height="15" fill="rgb(230,141,25)"/><text x="43.00" y="1214.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.21%)</title><rect x="40" y="1220" width="2" height="15" fill="rgb(235,112,3)"/><text x="43.00" y="1230.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.21%)</title><rect x="40" y="1236" width="2" height="15" fill="rgb(243,159,27)"/><text x="43.00" y="1246.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.21%)</title><rect x="42" y="372" width="3" height="15" fill="rgb(233,4,16)"/><text x="45.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="42" y="388" width="3" height="15" fill="rgb(213,29,21)"/><text x="45.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="42" y="404" width="3" height="15" fill="rgb(218,229,35)"/><text x="45.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="42" y="420" width="3" height="15" fill="rgb(222,141,46)"/><text x="45.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="42" y="436" width="3" height="15" fill="rgb(227,163,20)"/><text x="45.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="42" y="452" width="3" height="15" fill="rgb(222,108,46)"/><text x="45.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="42" y="468" width="3" height="15" fill="rgb(236,29,5)"/><text x="45.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="42" y="484" width="3" height="15" fill="rgb(220,114,6)"/><text x="45.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py) (1 samples, 0.21%)</title><rect x="42" y="500" width="3" height="15" fill="rgb(236,221,26)"/><text x="45.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="42" y="516" width="3" height="15" fill="rgb(213,99,26)"/><text x="45.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="42" y="532" width="3" height="15" fill="rgb(221,136,47)"/><text x="45.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="42" y="548" width="3" height="15" fill="rgb(215,67,40)"/><text x="45.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="42" y="564" width="3" height="15" fill="rgb(250,93,22)"/><text x="45.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="42" y="580" width="3" height="15" fill="rgb(232,196,4)"/><text x="45.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="42" y="596" width="3" height="15" fill="rgb(223,98,2)"/><text x="45.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="42" y="612" width="3" height="15" fill="rgb(248,69,45)"/><text x="45.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/fromnumeric.py) (1 samples, 0.21%)</title><rect x="42" y="628" width="3" height="15" fill="rgb(252,207,52)"/><text x="45.00" y="638.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.21%)</title><rect x="42" y="644" width="3" height="15" fill="rgb(254,66,53)"/><text x="45.00" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.18%)</title><rect x="10" y="68" width="37" height="15" fill="rgb(225,145,49)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.18%)</title><rect x="10" y="84" width="37" height="15" fill="rgb(224,40,53)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.18%)</title><rect x="10" y="100" width="37" height="15" fill="rgb(248,182,49)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 3.18%)</title><rect x="10" y="116" width="37" height="15" fill="rgb(215,218,14)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.18%)</title><rect x="10" y="132" width="37" height="15" fill="rgb(230,154,29)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py) (15 samples, 3.18%)</title><rect x="10" y="148" width="37" height="15" fill="rgb(254,129,22)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.18%)</title><rect x="10" y="164" width="37" height="15" fill="rgb(213,35,48)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.18%)</title><rect x="10" y="180" width="37" height="15" fill="rgb(231,191,17)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="42" y="196" width="5" height="15" fill="rgb(235,157,0)"/><text x="45.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="42" y="212" width="5" height="15" fill="rgb(221,176,27)"/><text x="45.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="42" y="228" width="5" height="15" fill="rgb(239,135,25)"/><text x="45.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.42%)</title><rect x="42" y="244" width="5" height="15" fill="rgb(229,10,46)"/><text x="45.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="42" y="260" width="5" height="15" fill="rgb(231,193,19)"/><text x="45.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="42" y="276" width="5" height="15" fill="rgb(207,171,43)"/><text x="45.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="42" y="292" width="5" height="15" fill="rgb(219,125,26)"/><text x="45.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="42" y="308" width="5" height="15" fill="rgb(215,75,37)"/><text x="45.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="42" y="324" width="5" height="15" fill="rgb(226,177,38)"/><text x="45.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="42" y="340" width="5" height="15" fill="rgb(247,177,8)"/><text x="45.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="42" y="356" width="5" height="15" fill="rgb(223,154,47)"/><text x="45.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.21%)</title><rect x="45" y="372" width="2" height="15" fill="rgb(241,213,45)"/><text x="48.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="388" width="2" height="15" fill="rgb(247,148,6)"/><text x="48.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="404" width="2" height="15" fill="rgb(246,47,24)"/><text x="48.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="420" width="2" height="15" fill="rgb(243,26,45)"/><text x="48.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="436" width="2" height="15" fill="rgb(239,121,14)"/><text x="48.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="452" width="2" height="15" fill="rgb(239,42,13)"/><text x="48.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="45" y="468" width="2" height="15" fill="rgb(218,163,42)"/><text x="48.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="484" width="2" height="15" fill="rgb(225,173,30)"/><text x="48.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.21%)</title><rect x="45" y="500" width="2" height="15" fill="rgb(208,183,9)"/><text x="48.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="516" width="2" height="15" fill="rgb(251,154,20)"/><text x="48.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="532" width="2" height="15" fill="rgb(205,10,25)"/><text x="48.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="548" width="2" height="15" fill="rgb(205,119,31)"/><text x="48.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="45" y="564" width="2" height="15" fill="rgb(239,112,18)"/><text x="48.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="580" width="2" height="15" fill="rgb(227,72,20)"/><text x="48.00" y="590.50"></text></g><g><title>0x7f34080ac585 (?) (1 samples, 0.21%)</title><rect x="45" y="596" width="2" height="15" fill="rgb(252,218,13)"/><text x="48.00" y="606.50"></text></g><g><title>0x7f34080b2075 (?) (1 samples, 0.21%)</title><rect x="45" y="612" width="2" height="15" fill="rgb(254,219,37)"/><text x="48.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="628" width="2" height="15" fill="rgb(211,133,48)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="644" width="2" height="15" fill="rgb(249,77,24)"/><text x="48.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="660" width="2" height="15" fill="rgb(247,83,6)"/><text x="48.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="45" y="676" width="2" height="15" fill="rgb(225,153,52)"/><text x="48.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="692" width="2" height="15" fill="rgb(253,52,34)"/><text x="48.00" y="702.50"></text></g><g><title>0x7f34079e9543 (?) (1 samples, 0.21%)</title><rect x="45" y="708" width="2" height="15" fill="rgb(240,49,40)"/><text x="48.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="724" width="2" height="15" fill="rgb(236,176,9)"/><text x="48.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="740" width="2" height="15" fill="rgb(208,123,41)"/><text x="48.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="756" width="2" height="15" fill="rgb(210,51,5)"/><text x="48.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="45" y="772" width="2" height="15" fill="rgb(208,100,23)"/><text x="48.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="788" width="2" height="15" fill="rgb(252,163,39)"/><text x="48.00" y="798.50"></text></g><g><title>0x7f34077beb9c (?) (1 samples, 0.21%)</title><rect x="45" y="804" width="2" height="15" fill="rgb(225,162,30)"/><text x="48.00" y="814.50"></text></g><g><title>0x7f34077c2885 (?) (1 samples, 0.21%)</title><rect x="45" y="820" width="2" height="15" fill="rgb(242,57,19)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="836" width="2" height="15" fill="rgb(205,29,48)"/><text x="48.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="852" width="2" height="15" fill="rgb(216,144,13)"/><text x="48.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="868" width="2" height="15" fill="rgb(206,47,17)"/><text x="48.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="45" y="884" width="2" height="15" fill="rgb(230,93,13)"/><text x="48.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="900" width="2" height="15" fill="rgb(253,224,31)"/><text x="48.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py) (1 samples, 0.21%)</title><rect x="45" y="916" width="2" height="15" fill="rgb(240,28,27)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="932" width="2" height="15" fill="rgb(241,15,26)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="948" width="2" height="15" fill="rgb(212,101,36)"/><text x="48.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="964" width="2" height="15" fill="rgb(254,127,36)"/><text x="48.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="45" y="980" width="2" height="15" fill="rgb(215,143,35)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="996" width="2" height="15" fill="rgb(250,18,32)"/><text x="48.00" y="1006.50"></text></g><g><title>&lt;module&gt; (random.py) (1 samples, 0.21%)</title><rect x="45" y="1012" width="2" height="15" fill="rgb(210,122,13)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="1028" width="2" height="15" fill="rgb(247,156,11)"/><text x="48.00" y="1038.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="1044" width="2" height="15" fill="rgb(234,9,27)"/><text x="48.00" y="1054.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="45" y="1060" width="2" height="15" fill="rgb(230,77,2)"/><text x="48.00" y="1070.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.21%)</title><rect x="55" y="180" width="2" height="15" fill="rgb(245,140,41)"/><text x="58.00" y="190.50"></text></g><g><title>0x7f33d608eff9 (?) (1 samples, 0.21%)</title><rect x="57" y="212" width="3" height="15" fill="rgb(208,79,4)"/><text x="60.00" y="222.50"></text></g><g><title>0x7f33d6089ef6 (?) (1 samples, 0.21%)</title><rect x="57" y="228" width="3" height="15" fill="rgb(233,0,27)"/><text x="60.00" y="238.50"></text></g><g><title>0x7f33d607e962 (?) (1 samples, 0.21%)</title><rect x="57" y="244" width="3" height="15" fill="rgb(232,128,0)"/><text x="60.00" y="254.50"></text></g><g><title>0x7f33d60b27a7 (?) (1 samples, 0.21%)</title><rect x="57" y="260" width="3" height="15" fill="rgb(240,157,6)"/><text x="60.00" y="270.50"></text></g><g><title>0x7f33d60b2379 (?) (1 samples, 0.21%)</title><rect x="57" y="276" width="3" height="15" fill="rgb(216,147,14)"/><text x="60.00" y="286.50"></text></g><g><title>0x7f33d65108b8 (?) (1 samples, 0.21%)</title><rect x="57" y="292" width="3" height="15" fill="rgb(227,174,20)"/><text x="60.00" y="302.50"></text></g><g><title>0x7f33d650ec7f (?) (1 samples, 0.21%)</title><rect x="57" y="308" width="3" height="15" fill="rgb(246,2,50)"/><text x="60.00" y="318.50"></text></g><g><title>0x7f33d652199c (?) (1 samples, 0.21%)</title><rect x="57" y="324" width="3" height="15" fill="rgb(251,151,17)"/><text x="60.00" y="334.50"></text></g><g><title>0x7f33d6206d75 (?) (1 samples, 0.21%)</title><rect x="57" y="340" width="3" height="15" fill="rgb(205,62,19)"/><text x="60.00" y="350.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="62" y="260" width="3" height="15" fill="rgb(247,175,8)"/><text x="65.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 0.64%)</title><rect x="60" y="212" width="7" height="15" fill="rgb(247,0,10)"/><text x="63.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.64%)</title><rect x="60" y="228" width="7" height="15" fill="rgb(237,217,45)"/><text x="63.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="62" y="244" width="5" height="15" fill="rgb(212,166,1)"/><text x="65.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="65" y="260" width="2" height="15" fill="rgb(244,193,22)"/><text x="68.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="65" y="276" width="2" height="15" fill="rgb(216,5,41)"/><text x="68.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="65" y="292" width="2" height="15" fill="rgb(208,132,33)"/><text x="68.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="70" y="292" width="2" height="15" fill="rgb(215,208,28)"/><text x="73.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="70" y="308" width="2" height="15" fill="rgb(220,195,26)"/><text x="73.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="70" y="324" width="2" height="15" fill="rgb(223,64,35)"/><text x="73.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="72" y="292" width="3" height="15" fill="rgb(233,144,15)"/><text x="75.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CheckShapes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="72" y="308" width="3" height="15" fill="rgb(206,223,9)"/><text x="75.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="75" y="340" width="2" height="15" fill="rgb(227,177,2)"/><text x="78.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="360" y="356" width="3" height="15" fill="rgb(221,49,44)"/><text x="363.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="360" y="372" width="3" height="15" fill="rgb(254,227,7)"/><text x="363.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="360" y="388" width="3" height="15" fill="rgb(247,132,42)"/><text x="363.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="360" y="404" width="3" height="15" fill="rgb(251,64,5)"/><text x="363.00" y="414.50"></text></g><g><title>onnxruntime::TensorType&lt;long&gt;::GetElementType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="360" y="420" width="3" height="15" fill="rgb(249,53,40)"/><text x="363.00" y="430.50"></text></g><g><title>0x7f3415805db3 (libc-2.29.so) (2 samples, 0.42%)</title><rect x="398" y="372" width="5" height="15" fill="rgb(248,224,54)"/><text x="401.00" y="382.50"></text></g><g><title>0x7f3415964e00 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="403" y="372" width="2" height="15" fill="rgb(206,45,38)"/><text x="406.00" y="382.50"></text></g><g><title>0x7f3415964e0a (libm-2.29.so) (1 samples, 0.21%)</title><rect x="405" y="372" width="3" height="15" fill="rgb(210,81,29)"/><text x="408.00" y="382.50"></text></g><g><title>0x7f3415964e4a (libm-2.29.so) (1 samples, 0.21%)</title><rect x="408" y="372" width="2" height="15" fill="rgb(232,179,39)"/><text x="411.00" y="382.50"></text></g><g><title>0x7f3415964e57 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="410" y="372" width="3" height="15" fill="rgb(234,8,0)"/><text x="413.00" y="382.50"></text></g><g><title>0x7f3415964e5f (libm-2.29.so) (1 samples, 0.21%)</title><rect x="413" y="372" width="2" height="15" fill="rgb(216,157,12)"/><text x="416.00" y="382.50"></text></g><g><title>0x7f3415964e6d (libm-2.29.so) (1 samples, 0.21%)</title><rect x="415" y="372" width="3" height="15" fill="rgb(250,105,26)"/><text x="418.00" y="382.50"></text></g><g><title>0x7f3415964e7a (libm-2.29.so) (1 samples, 0.21%)</title><rect x="418" y="372" width="2" height="15" fill="rgb(233,166,0)"/><text x="421.00" y="382.50"></text></g><g><title>0x7f3415964e86 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="420" y="372" width="3" height="15" fill="rgb(219,79,11)"/><text x="423.00" y="382.50"></text></g><g><title>0x7f3415964e92 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="423" y="372" width="2" height="15" fill="rgb(207,34,37)"/><text x="426.00" y="382.50"></text></g><g><title>0x7f3415964e96 (libm-2.29.so) (2 samples, 0.42%)</title><rect x="425" y="372" width="5" height="15" fill="rgb(235,4,31)"/><text x="428.00" y="382.50"></text></g><g><title>0x7f3415964ea2 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="430" y="372" width="3" height="15" fill="rgb(246,201,38)"/><text x="433.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (146 samples, 31.00%)</title><rect x="77" y="340" width="366" height="15" fill="rgb(222,38,22)"/><text x="80.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 6.79%)</title><rect x="363" y="356" width="80" height="15" fill="rgb(247,197,38)"/><text x="366.00" y="366.50">onnxrunti..</text></g><g><title>0x7f3415964ea6 (libm-2.29.so) (4 samples, 0.85%)</title><rect x="433" y="372" width="10" height="15" fill="rgb(237,157,31)"/><text x="436.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="468" y="468" width="2" height="15" fill="rgb(242,121,1)"/><text x="471.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="468" y="484" width="2" height="15" fill="rgb(207,107,4)"/><text x="471.00" y="494.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="468" y="500" width="2" height="15" fill="rgb(230,146,50)"/><text x="471.00" y="510.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="468" y="516" width="2" height="15" fill="rgb(208,88,23)"/><text x="471.00" y="526.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (163 samples, 34.61%)</title><rect x="67" y="260" width="408" height="15" fill="rgb(225,139,28)"/><text x="70.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (163 samples, 34.61%)</title><rect x="67" y="276" width="408" height="15" fill="rgb(228,47,38)"/><text x="70.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 33.97%)</title><rect x="75" y="292" width="400" height="15" fill="rgb(210,13,24)"/><text x="78.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 33.97%)</title><rect x="75" y="308" width="400" height="15" fill="rgb(229,185,47)"/><text x="78.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 33.97%)</title><rect x="75" y="324" width="400" height="15" fill="rgb(212,49,41)"/><text x="78.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 2.76%)</title><rect x="443" y="340" width="32" height="15" fill="rgb(240,37,40)"/><text x="446.00" y="350.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 2.76%)</title><rect x="443" y="356" width="32" height="15" fill="rgb(208,114,6)"/><text x="446.00" y="366.50">on..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.64%)</title><rect x="468" y="372" width="7" height="15" fill="rgb(216,24,36)"/><text x="471.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.64%)</title><rect x="468" y="388" width="7" height="15" fill="rgb(219,67,45)"/><text x="471.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.64%)</title><rect x="468" y="404" width="7" height="15" fill="rgb(236,162,13)"/><text x="471.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.64%)</title><rect x="468" y="420" width="7" height="15" fill="rgb(249,124,7)"/><text x="471.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.64%)</title><rect x="468" y="436" width="7" height="15" fill="rgb(231,185,20)"/><text x="471.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.64%)</title><rect x="468" y="452" width="7" height="15" fill="rgb(217,204,22)"/><text x="471.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.42%)</title><rect x="470" y="468" width="5" height="15" fill="rgb(217,88,35)"/><text x="473.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.42%)</title><rect x="470" y="484" width="5" height="15" fill="rgb(222,213,38)"/><text x="473.00" y="494.50"></text></g><g><title>0x7f34157e778d (libc-2.29.so) (1 samples, 0.21%)</title><rect x="473" y="500" width="2" height="15" fill="rgb(248,137,17)"/><text x="476.00" y="510.50"></text></g><g><title>0x7f3415805d94 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="475" y="276" width="3" height="15" fill="rgb(239,198,12)"/><text x="478.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="475" y="260" width="5" height="15" fill="rgb(218,31,22)"/><text x="478.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.21%)</title><rect x="478" y="276" width="2" height="15" fill="rgb(226,54,24)"/><text x="481.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="478" y="292" width="2" height="15" fill="rgb(221,190,10)"/><text x="481.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.21%)</title><rect x="478" y="308" width="2" height="15" fill="rgb(220,218,20)"/><text x="481.00" y="318.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="480" y="276" width="3" height="15" fill="rgb(221,146,24)"/><text x="483.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="480" y="292" width="3" height="15" fill="rgb(205,44,50)"/><text x="483.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="480" y="308" width="3" height="15" fill="rgb(244,83,38)"/><text x="483.00" y="318.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="480" y="324" width="3" height="15" fill="rgb(210,199,31)"/><text x="483.00" y="334.50"></text></g><g><title>0x7f33d6055ba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="480" y="340" width="3" height="15" fill="rgb(239,202,45)"/><text x="483.00" y="350.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (167 samples, 35.46%)</title><rect x="67" y="244" width="419" height="15" fill="rgb(245,198,16)"/><text x="70.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;):..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="480" y="260" width="6" height="15" fill="rgb(212,62,32)"/><text x="483.00" y="270.50"></text></g><g><title>std::_Sp_counted_deleter&lt;void*, void (*)(void*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="483" y="276" width="3" height="15" fill="rgb(225,60,4)"/><text x="486.00" y="286.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (176 samples, 37.37%)</title><rect x="47" y="68" width="441" height="15" fill="rgb(231,148,2)"/><text x="50.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solv..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (176 samples, 37.37%)</title><rect x="47" y="84" width="441" height="15" fill="rgb(207,196,10)"/><text x="50.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_so..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (176 samples, 37.37%)</title><rect x="47" y="100" width="441" height="15" fill="rgb(216,89,25)"/><text x="50.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (176 samples, 37.37%)</title><rect x="47" y="116" width="441" height="15" fill="rgb(232,199,48)"/><text x="50.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (175 samples, 37.15%)</title><rect x="50" y="132" width="438" height="15" fill="rgb(248,164,17)"/><text x="53.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (175 samples, 37.15%)</title><rect x="50" y="148" width="438" height="15" fill="rgb(217,219,48)"/><text x="53.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (174 samples, 36.94%)</title><rect x="52" y="164" width="436" height="15" fill="rgb(220,14,6)"/><text x="55.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (172 samples, 36.52%)</title><rect x="57" y="180" width="431" height="15" fill="rgb(215,81,41)"/><text x="60.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (172 samples, 36.52%)</title><rect x="57" y="196" width="431" height="15" fill="rgb(244,53,42)"/><text x="60.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (168 samples, 35.67%)</title><rect x="67" y="212" width="421" height="15" fill="rgb(209,214,21)"/><text x="70.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnx..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (168 samples, 35.67%)</title><rect x="67" y="228" width="421" height="15" fill="rgb(221,143,45)"/><text x="70.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::pyth..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="486" y="244" width="2" height="15" fill="rgb(236,84,34)"/><text x="489.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="486" y="260" width="2" height="15" fill="rgb(222,99,12)"/><text x="489.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.42%)</title><rect x="516" y="196" width="5" height="15" fill="rgb(233,66,25)"/><text x="519.00" y="206.50"></text></g><g><title>0x7f34158c3151 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="533" y="244" width="3" height="15" fill="rgb(207,94,13)"/><text x="536.00" y="254.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (4 samples, 0.85%)</title><rect x="543" y="324" width="10" height="15" fill="rgb(231,96,50)"/><text x="546.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (3 samples, 0.64%)</title><rect x="546" y="340" width="7" height="15" fill="rgb(250,172,26)"/><text x="549.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (8 samples, 1.70%)</title><rect x="536" y="244" width="20" height="15" fill="rgb(216,98,26)"/><text x="539.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.27%)</title><rect x="541" y="260" width="15" height="15" fill="rgb(233,109,38)"/><text x="544.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (5 samples, 1.06%)</title><rect x="543" y="276" width="13" height="15" fill="rgb(221,150,20)"/><text x="546.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 1.06%)</title><rect x="543" y="292" width="13" height="15" fill="rgb(224,87,14)"/><text x="546.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (5 samples, 1.06%)</title><rect x="543" y="308" width="13" height="15" fill="rgb(234,212,48)"/><text x="546.00" y="318.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.21%)</title><rect x="553" y="324" width="3" height="15" fill="rgb(227,130,31)"/><text x="556.00" y="334.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h) (1 samples, 0.21%)</title><rect x="556" y="340" width="2" height="15" fill="rgb(215,62,34)"/><text x="559.00" y="350.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="556" y="356" width="2" height="15" fill="rgb(229,145,44)"/><text x="559.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.49%)</title><rect x="556" y="276" width="17" height="15" fill="rgb(230,216,21)"/><text x="559.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (7 samples, 1.49%)</title><rect x="556" y="292" width="17" height="15" fill="rgb(227,138,21)"/><text x="559.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (7 samples, 1.49%)</title><rect x="556" y="308" width="17" height="15" fill="rgb(224,119,8)"/><text x="559.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (7 samples, 1.49%)</title><rect x="556" y="324" width="17" height="15" fill="rgb(220,125,28)"/><text x="559.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (6 samples, 1.27%)</title><rect x="558" y="340" width="15" height="15" fill="rgb(226,211,29)"/><text x="561.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.27%)</title><rect x="558" y="356" width="15" height="15" fill="rgb(225,53,23)"/><text x="561.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.27%)</title><rect x="558" y="372" width="15" height="15" fill="rgb(234,153,50)"/><text x="561.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.27%)</title><rect x="558" y="388" width="15" height="15" fill="rgb(211,177,33)"/><text x="561.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.85%)</title><rect x="573" y="276" width="10" height="15" fill="rgb(205,14,5)"/><text x="576.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (48 samples, 10.19%)</title><rect x="556" y="244" width="120" height="15" fill="rgb(220,160,40)"/><text x="559.00" y="254.50">numpy_dot_inpl..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (48 samples, 10.19%)</title><rect x="556" y="260" width="120" height="15" fill="rgb(220,205,18)"/><text x="559.00" y="270.50">dot (&lt;__array_..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (37 samples, 7.86%)</title><rect x="583" y="276" width="93" height="15" fill="rgb(211,225,37)"/><text x="586.00" y="286.50">sgemm_kerne..</text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.42%)</title><rect x="676" y="260" width="5" height="15" fill="rgb(227,45,31)"/><text x="679.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.42%)</title><rect x="676" y="276" width="5" height="15" fill="rgb(206,31,26)"/><text x="679.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.42%)</title><rect x="676" y="292" width="5" height="15" fill="rgb(245,177,7)"/><text x="679.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.21%)</title><rect x="678" y="308" width="3" height="15" fill="rgb(254,74,25)"/><text x="681.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.21%)</title><rect x="686" y="324" width="2" height="15" fill="rgb(230,103,45)"/><text x="689.00" y="334.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.21%)</title><rect x="686" y="340" width="2" height="15" fill="rgb(230,16,9)"/><text x="689.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.21%)</title><rect x="688" y="340" width="3" height="15" fill="rgb(244,5,24)"/><text x="691.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.21%)</title><rect x="688" y="356" width="3" height="15" fill="rgb(229,158,1)"/><text x="691.00" y="366.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.21%)</title><rect x="688" y="372" width="3" height="15" fill="rgb(232,169,10)"/><text x="691.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (4 samples, 0.85%)</title><rect x="683" y="292" width="10" height="15" fill="rgb(231,229,28)"/><text x="686.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (4 samples, 0.85%)</title><rect x="683" y="308" width="10" height="15" fill="rgb(245,109,36)"/><text x="686.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.42%)</title><rect x="688" y="324" width="5" height="15" fill="rgb(254,228,36)"/><text x="691.00" y="334.50"></text></g><g><title>diophantine_precompute (mem_overlap.c) (1 samples, 0.21%)</title><rect x="691" y="340" width="2" height="15" fill="rgb(222,64,35)"/><text x="694.00" y="350.50"></text></g><g><title>safe_mul (npy_extint128.h) (1 samples, 0.21%)</title><rect x="691" y="356" width="2" height="15" fill="rgb(223,202,52)"/><text x="694.00" y="366.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.21%)</title><rect x="693" y="308" width="3" height="15" fill="rgb(231,72,39)"/><text x="696.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="696" y="324" width="2" height="15" fill="rgb(224,197,35)"/><text x="699.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.64%)</title><rect x="696" y="308" width="7" height="15" fill="rgb(248,65,16)"/><text x="699.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.42%)</title><rect x="698" y="324" width="5" height="15" fill="rgb(248,50,18)"/><text x="701.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (2 samples, 0.42%)</title><rect x="698" y="340" width="5" height="15" fill="rgb(217,224,32)"/><text x="701.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.21%)</title><rect x="701" y="356" width="2" height="15" fill="rgb(225,177,6)"/><text x="704.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.21%)</title><rect x="701" y="372" width="2" height="15" fill="rgb(205,213,51)"/><text x="704.00" y="382.50"></text></g><g><title>npy_is_aligned (common.h) (1 samples, 0.21%)</title><rect x="701" y="388" width="2" height="15" fill="rgb(208,72,12)"/><text x="704.00" y="398.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.21%)</title><rect x="703" y="308" width="3" height="15" fill="rgb(223,197,10)"/><text x="706.00" y="318.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c) (1 samples, 0.21%)</title><rect x="706" y="308" width="2" height="15" fill="rgb(214,131,24)"/><text x="709.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.21%)</title><rect x="708" y="324" width="3" height="15" fill="rgb(227,55,43)"/><text x="711.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="708" y="340" width="3" height="15" fill="rgb(239,225,7)"/><text x="711.00" y="350.50"></text></g><g><title>0x7f34157e6b5a (libc-2.29.so) (1 samples, 0.21%)</title><rect x="708" y="356" width="3" height="15" fill="rgb(244,183,25)"/><text x="711.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 1.91%)</title><rect x="693" y="292" width="23" height="15" fill="rgb(247,25,9)"/><text x="696.00" y="302.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.64%)</title><rect x="708" y="308" width="8" height="15" fill="rgb(205,216,22)"/><text x="711.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.42%)</title><rect x="711" y="324" width="5" height="15" fill="rgb(243,14,28)"/><text x="714.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.42%)</title><rect x="711" y="340" width="5" height="15" fill="rgb(221,214,24)"/><text x="714.00" y="350.50"></text></g><g><title>0x7f3415805db3 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="713" y="356" width="3" height="15" fill="rgb(230,153,20)"/><text x="716.00" y="366.50"></text></g><g><title>0x7f34159311a0 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="726" y="356" width="3" height="15" fill="rgb(221,134,52)"/><text x="729.00" y="366.50"></text></g><g><title>0x7f3415964e00 (libm-2.29.so) (2 samples, 0.42%)</title><rect x="729" y="356" width="5" height="15" fill="rgb(211,15,5)"/><text x="732.00" y="366.50"></text></g><g><title>0x7f3415964e96 (libm-2.29.so) (2 samples, 0.42%)</title><rect x="734" y="356" width="5" height="15" fill="rgb(227,5,46)"/><text x="737.00" y="366.50"></text></g><g><title>0x7f33f7c0c214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.12%)</title><rect x="716" y="324" width="25" height="15" fill="rgb(252,207,46)"/><text x="719.00" y="334.50">0..</text></g><g><title>expf (libm-2.29.so) (10 samples, 2.12%)</title><rect x="716" y="340" width="25" height="15" fill="rgb(227,191,35)"/><text x="719.00" y="350.50">e..</text></g><g><title>0x7f3415964ea6 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="739" y="356" width="2" height="15" fill="rgb(248,149,16)"/><text x="742.00" y="366.50"></text></g><g><title>0x7f33f7c0c224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.42%)</title><rect x="741" y="324" width="5" height="15" fill="rgb(246,152,0)"/><text x="744.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (91 samples, 19.32%)</title><rect x="526" y="228" width="228" height="15" fill="rgb(233,83,16)"/><text x="529.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (31 samples, 6.58%)</title><rect x="676" y="244" width="78" height="15" fill="rgb(233,162,1)"/><text x="679.00" y="254.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (29 samples, 6.16%)</title><rect x="681" y="260" width="73" height="15" fill="rgb(208,174,26)"/><text x="684.00" y="270.50">PyUFunc_..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (28 samples, 5.94%)</title><rect x="683" y="276" width="71" height="15" fill="rgb(249,110,33)"/><text x="686.00" y="286.50">execute_..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (15 samples, 3.18%)</title><rect x="716" y="292" width="38" height="15" fill="rgb(221,47,22)"/><text x="719.00" y="302.50">tri..</text></g><g><title>0x7f33f7bea33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 3.18%)</title><rect x="716" y="308" width="38" height="15" fill="rgb(236,205,20)"/><text x="719.00" y="318.50">0x7..</text></g><g><title>0x7f33f7c0c228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.64%)</title><rect x="746" y="324" width="8" height="15" fill="rgb(233,26,30)"/><text x="749.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="754" y="260" width="2" height="15" fill="rgb(242,99,29)"/><text x="757.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.21%)</title><rect x="754" y="276" width="2" height="15" fill="rgb(221,200,2)"/><text x="757.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.21%)</title><rect x="754" y="292" width="2" height="15" fill="rgb(233,89,13)"/><text x="757.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.42%)</title><rect x="756" y="324" width="5" height="15" fill="rgb(237,97,45)"/><text x="759.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.42%)</title><rect x="756" y="340" width="5" height="15" fill="rgb(240,193,38)"/><text x="759.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.42%)</title><rect x="756" y="356" width="5" height="15" fill="rgb(214,158,52)"/><text x="759.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.42%)</title><rect x="756" y="372" width="5" height="15" fill="rgb(207,184,44)"/><text x="759.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.42%)</title><rect x="756" y="388" width="5" height="15" fill="rgb(243,164,24)"/><text x="759.00" y="398.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.21%)</title><rect x="759" y="404" width="2" height="15" fill="rgb(229,72,28)"/><text x="762.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.21%)</title><rect x="761" y="372" width="3" height="15" fill="rgb(243,11,45)"/><text x="764.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.21%)</title><rect x="761" y="388" width="3" height="15" fill="rgb(234,102,46)"/><text x="764.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.42%)</title><rect x="764" y="372" width="5" height="15" fill="rgb(237,77,45)"/><text x="767.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.42%)</title><rect x="764" y="388" width="5" height="15" fill="rgb(212,190,40)"/><text x="767.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.42%)</title><rect x="764" y="404" width="5" height="15" fill="rgb(230,182,5)"/><text x="767.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.42%)</title><rect x="764" y="420" width="5" height="15" fill="rgb(242,21,3)"/><text x="767.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.21%)</title><rect x="766" y="436" width="3" height="15" fill="rgb(217,85,17)"/><text x="769.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.21%)</title><rect x="766" y="452" width="3" height="15" fill="rgb(217,132,13)"/><text x="769.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="766" y="468" width="3" height="15" fill="rgb(251,212,46)"/><text x="769.00" y="478.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.21%)</title><rect x="769" y="372" width="2" height="15" fill="rgb(248,99,34)"/><text x="772.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.21%)</title><rect x="769" y="388" width="2" height="15" fill="rgb(216,142,19)"/><text x="772.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.21%)</title><rect x="769" y="404" width="2" height="15" fill="rgb(221,37,49)"/><text x="772.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.21%)</title><rect x="769" y="420" width="2" height="15" fill="rgb(215,143,6)"/><text x="772.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.21%)</title><rect x="769" y="436" width="2" height="15" fill="rgb(235,123,19)"/><text x="772.00" y="446.50"></text></g><g><title>FLOAT_add (loops.c.src) (5 samples, 1.06%)</title><rect x="781" y="388" width="13" height="15" fill="rgb(239,75,17)"/><text x="784.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (3 samples, 0.64%)</title><rect x="786" y="404" width="8" height="15" fill="rgb(224,11,35)"/><text x="789.00" y="414.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="794" y="388" width="2" height="15" fill="rgb(209,137,23)"/><text x="797.00" y="398.50"></text></g><g><title>array_sum (methods.c) (18 samples, 3.82%)</title><rect x="756" y="260" width="45" height="15" fill="rgb(231,35,20)"/><text x="759.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (18 samples, 3.82%)</title><rect x="756" y="276" width="45" height="15" fill="rgb(249,189,30)"/><text x="759.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (18 samples, 3.82%)</title><rect x="756" y="292" width="45" height="15" fill="rgb(250,21,41)"/><text x="759.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (18 samples, 3.82%)</title><rect x="756" y="308" width="45" height="15" fill="rgb(210,137,14)"/><text x="759.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (16 samples, 3.40%)</title><rect x="761" y="324" width="40" height="15" fill="rgb(237,42,19)"/><text x="764.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (16 samples, 3.40%)</title><rect x="761" y="340" width="40" height="15" fill="rgb(208,77,42)"/><text x="764.00" y="350.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (16 samples, 3.40%)</title><rect x="761" y="356" width="40" height="15" fill="rgb(239,61,54)"/><text x="764.00" y="366.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (12 samples, 2.55%)</title><rect x="771" y="372" width="30" height="15" fill="rgb(248,15,17)"/><text x="774.00" y="382.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.42%)</title><rect x="796" y="388" width="5" height="15" fill="rgb(219,210,34)"/><text x="799.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.21%)</title><rect x="801" y="324" width="3" height="15" fill="rgb(243,21,33)"/><text x="804.00" y="334.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.21%)</title><rect x="801" y="340" width="3" height="15" fill="rgb(208,126,51)"/><text x="804.00" y="350.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (130 samples, 27.60%)</title><rect x="488" y="68" width="326" height="15" fill="rgb(205,23,19)"/><text x="491.00" y="78.50">profile_pyrt (bench_LogisticRegression_libli..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (130 samples, 27.60%)</title><rect x="488" y="84" width="326" height="15" fill="rgb(210,80,8)"/><text x="491.00" y="94.50">setup_profile (bench_LogisticRegression_libl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (130 samples, 27.60%)</title><rect x="488" y="100" width="326" height="15" fill="rgb(222,178,30)"/><text x="491.00" y="110.50">profile (bench_LogisticRegression_liblinear_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (130 samples, 27.60%)</title><rect x="488" y="116" width="326" height="15" fill="rgb(213,133,42)"/><text x="491.00" y="126.50">time_predict (mlprodict/asv_benchmark/common..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (130 samples, 27.60%)</title><rect x="488" y="132" width="326" height="15" fill="rgb(214,139,22)"/><text x="491.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (130 samples, 27.60%)</title><rect x="488" y="148" width="326" height="15" fill="rgb(227,19,6)"/><text x="491.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (128 samples, 27.18%)</title><rect x="493" y="164" width="321" height="15" fill="rgb(244,113,52)"/><text x="496.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (126 samples, 26.75%)</title><rect x="498" y="180" width="316" height="15" fill="rgb(223,140,38)"/><text x="501.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (117 samples, 24.84%)</title><rect x="521" y="196" width="293" height="15" fill="rgb(216,55,44)"/><text x="524.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (116 samples, 24.63%)</title><rect x="523" y="212" width="291" height="15" fill="rgb(208,163,0)"/><text x="526.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (24 samples, 5.10%)</title><rect x="754" y="228" width="60" height="15" fill="rgb(227,165,20)"/><text x="757.00" y="238.50">_run (..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (24 samples, 5.10%)</title><rect x="754" y="244" width="60" height="15" fill="rgb(232,16,4)"/><text x="757.00" y="254.50">norm_l..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.06%)</title><rect x="801" y="260" width="13" height="15" fill="rgb(228,125,53)"/><text x="804.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.06%)</title><rect x="801" y="276" width="13" height="15" fill="rgb(228,207,41)"/><text x="804.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.06%)</title><rect x="801" y="292" width="13" height="15" fill="rgb(210,112,50)"/><text x="804.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.06%)</title><rect x="801" y="308" width="13" height="15" fill="rgb(245,126,47)"/><text x="804.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.85%)</title><rect x="804" y="324" width="10" height="15" fill="rgb(238,46,54)"/><text x="807.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.85%)</title><rect x="804" y="340" width="10" height="15" fill="rgb(230,57,15)"/><text x="807.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.85%)</title><rect x="804" y="356" width="10" height="15" fill="rgb(221,181,45)"/><text x="807.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.64%)</title><rect x="806" y="372" width="8" height="15" fill="rgb(234,146,26)"/><text x="809.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.21%)</title><rect x="821" y="260" width="3" height="15" fill="rgb(226,86,8)"/><text x="824.00" y="270.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.21%)</title><rect x="826" y="356" width="3" height="15" fill="rgb(220,117,25)"/><text x="829.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (2 samples, 0.42%)</title><rect x="826" y="340" width="5" height="15" fill="rgb(234,87,30)"/><text x="829.00" y="350.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.21%)</title><rect x="829" y="356" width="2" height="15" fill="rgb(217,34,31)"/><text x="832.00" y="366.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.21%)</title><rect x="829" y="372" width="2" height="15" fill="rgb(221,42,29)"/><text x="832.00" y="382.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (3 samples, 0.64%)</title><rect x="826" y="324" width="8" height="15" fill="rgb(220,220,31)"/><text x="829.00" y="334.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.21%)</title><rect x="831" y="340" width="3" height="15" fill="rgb(245,24,50)"/><text x="834.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (4 samples, 0.85%)</title><rect x="826" y="292" width="10" height="15" fill="rgb(223,93,11)"/><text x="829.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (4 samples, 0.85%)</title><rect x="826" y="308" width="10" height="15" fill="rgb(217,150,3)"/><text x="829.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.21%)</title><rect x="834" y="324" width="2" height="15" fill="rgb(207,208,48)"/><text x="837.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.21%)</title><rect x="834" y="340" width="2" height="15" fill="rgb(238,119,28)"/><text x="837.00" y="350.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.21%)</title><rect x="834" y="356" width="2" height="15" fill="rgb(235,64,38)"/><text x="837.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src) (8 samples, 1.70%)</title><rect x="844" y="308" width="20" height="15" fill="rgb(211,43,29)"/><text x="847.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (5 samples, 1.06%)</title><rect x="851" y="324" width="13" height="15" fill="rgb(228,78,34)"/><text x="854.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (18 samples, 3.82%)</title><rect x="826" y="276" width="45" height="15" fill="rgb(230,30,18)"/><text x="829.00" y="286.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c) (14 samples, 2.97%)</title><rect x="836" y="292" width="35" height="15" fill="rgb(223,101,28)"/><text x="839.00" y="302.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.64%)</title><rect x="864" y="308" width="7" height="15" fill="rgb(227,157,33)"/><text x="867.00" y="318.50"></text></g><g><title>array_sum (methods.c) (22 samples, 4.67%)</title><rect x="819" y="180" width="55" height="15" fill="rgb(231,225,4)"/><text x="822.00" y="190.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (22 samples, 4.67%)</title><rect x="819" y="196" width="55" height="15" fill="rgb(217,55,33)"/><text x="822.00" y="206.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py) (21 samples, 4.46%)</title><rect x="821" y="212" width="53" height="15" fill="rgb(211,7,31)"/><text x="824.00" y="222.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (21 samples, 4.46%)</title><rect x="821" y="228" width="53" height="15" fill="rgb(250,94,45)"/><text x="824.00" y="238.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (21 samples, 4.46%)</title><rect x="821" y="244" width="53" height="15" fill="rgb(207,213,3)"/><text x="824.00" y="254.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (20 samples, 4.25%)</title><rect x="824" y="260" width="50" height="15" fill="rgb(210,64,16)"/><text x="827.00" y="270.50">PyUFu..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.21%)</title><rect x="871" y="276" width="3" height="15" fill="rgb(238,106,33)"/><text x="874.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="871" y="292" width="3" height="15" fill="rgb(206,66,28)"/><text x="874.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="871" y="308" width="3" height="15" fill="rgb(242,225,2)"/><text x="874.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.21%)</title><rect x="879" y="276" width="2" height="15" fill="rgb(228,43,36)"/><text x="882.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.21%)</title><rect x="879" y="292" width="2" height="15" fill="rgb(233,7,29)"/><text x="882.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.21%)</title><rect x="879" y="308" width="2" height="15" fill="rgb(217,193,33)"/><text x="882.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.21%)</title><rect x="879" y="324" width="2" height="15" fill="rgb(225,27,23)"/><text x="882.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.27%)</title><rect x="879" y="244" width="15" height="15" fill="rgb(217,49,41)"/><text x="882.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.27%)</title><rect x="879" y="260" width="15" height="15" fill="rgb(234,84,34)"/><text x="882.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 1.06%)</title><rect x="881" y="276" width="13" height="15" fill="rgb(219,167,24)"/><text x="884.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 1.06%)</title><rect x="881" y="292" width="13" height="15" fill="rgb(209,169,51)"/><text x="884.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 1.06%)</title><rect x="881" y="308" width="13" height="15" fill="rgb(213,204,13)"/><text x="884.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.21%)</title><rect x="891" y="324" width="3" height="15" fill="rgb(230,70,48)"/><text x="894.00" y="334.50"></text></g><g><title>array_add (number.c) (7 samples, 1.49%)</title><rect x="879" y="196" width="17" height="15" fill="rgb(213,138,22)"/><text x="882.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.49%)</title><rect x="879" y="212" width="17" height="15" fill="rgb(209,139,30)"/><text x="882.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.49%)</title><rect x="879" y="228" width="17" height="15" fill="rgb(212,126,6)"/><text x="882.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.21%)</title><rect x="894" y="244" width="2" height="15" fill="rgb(219,211,6)"/><text x="897.00" y="254.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.21%)</title><rect x="899" y="212" width="2" height="15" fill="rgb(227,194,47)"/><text x="902.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.21%)</title><rect x="901" y="212" width="3" height="15" fill="rgb(215,113,35)"/><text x="904.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.64%)</title><rect x="904" y="212" width="7" height="15" fill="rgb(208,15,25)"/><text x="907.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.21%)</title><rect x="909" y="228" width="2" height="15" fill="rgb(210,210,54)"/><text x="912.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.21%)</title><rect x="909" y="244" width="2" height="15" fill="rgb(214,99,52)"/><text x="912.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.42%)</title><rect x="911" y="212" width="5" height="15" fill="rgb(233,55,37)"/><text x="914.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.21%)</title><rect x="914" y="228" width="2" height="15" fill="rgb(251,1,13)"/><text x="917.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (10 samples, 2.12%)</title><rect x="896" y="196" width="25" height="15" fill="rgb(243,192,24)"/><text x="899.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.42%)</title><rect x="916" y="212" width="5" height="15" fill="rgb(235,128,39)"/><text x="919.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.42%)</title><rect x="916" y="228" width="5" height="15" fill="rgb(209,160,23)"/><text x="919.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.21%)</title><rect x="931" y="228" width="3" height="15" fill="rgb(223,136,54)"/><text x="934.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (7 samples, 1.49%)</title><rect x="921" y="196" width="18" height="15" fill="rgb(253,168,40)"/><text x="924.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (7 samples, 1.49%)</title><rect x="921" y="212" width="18" height="15" fill="rgb(237,23,4)"/><text x="924.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.42%)</title><rect x="934" y="228" width="5" height="15" fill="rgb(214,184,28)"/><text x="937.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="939" y="212" width="2" height="15" fill="rgb(207,33,45)"/><text x="942.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 3.40%)</title><rect x="941" y="212" width="41" height="15" fill="rgb(225,213,10)"/><text x="944.00" y="222.50">dge..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.21%)</title><rect x="982" y="212" width="2" height="15" fill="rgb(248,184,12)"/><text x="985.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.21%)</title><rect x="984" y="228" width="3" height="15" fill="rgb(212,74,20)"/><text x="987.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.21%)</title><rect x="984" y="244" width="3" height="15" fill="rgb(237,177,11)"/><text x="987.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.21%)</title><rect x="984" y="260" width="3" height="15" fill="rgb(215,130,21)"/><text x="987.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="987" y="292" width="2" height="15" fill="rgb(212,0,19)"/><text x="990.00" y="302.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (10 samples, 2.12%)</title><rect x="987" y="260" width="25" height="15" fill="rgb(205,51,48)"/><text x="990.00" y="270.50">D..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (10 samples, 2.12%)</title><rect x="987" y="276" width="25" height="15" fill="rgb(240,135,8)"/><text x="990.00" y="286.50">c..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 1.91%)</title><rect x="989" y="292" width="23" height="15" fill="rgb(239,213,17)"/><text x="992.00" y="302.50">d..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.70%)</title><rect x="992" y="308" width="20" height="15" fill="rgb(252,52,18)"/><text x="995.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (27 samples, 5.73%)</title><rect x="1012" y="260" width="67" height="15" fill="rgb(251,209,9)"/><text x="1015.00" y="270.50">NpyIter..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (27 samples, 5.73%)</title><rect x="1012" y="276" width="67" height="15" fill="rgb(252,35,7)"/><text x="1015.00" y="286.50">npyiter..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (27 samples, 5.73%)</title><rect x="1012" y="292" width="67" height="15" fill="rgb(240,17,30)"/><text x="1015.00" y="302.50">PyArray..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (27 samples, 5.73%)</title><rect x="1012" y="308" width="67" height="15" fill="rgb(228,203,21)"/><text x="1015.00" y="318.50">raw_arr..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (27 samples, 5.73%)</title><rect x="1012" y="324" width="67" height="15" fill="rgb(226,85,29)"/><text x="1015.00" y="334.50">_aligne..</text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.21%)</title><rect x="1079" y="260" width="3" height="15" fill="rgb(231,70,25)"/><text x="1082.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="1079" y="276" width="3" height="15" fill="rgb(206,114,8)"/><text x="1082.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.21%)</title><rect x="1079" y="292" width="3" height="15" fill="rgb(208,203,52)"/><text x="1082.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.21%)</title><rect x="1079" y="308" width="3" height="15" fill="rgb(234,4,30)"/><text x="1082.00" y="318.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.21%)</title><rect x="1079" y="324" width="3" height="15" fill="rgb(251,116,34)"/><text x="1082.00" y="334.50"></text></g><g><title>0x7f34157e5ace (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1079" y="340" width="3" height="15" fill="rgb(240,147,17)"/><text x="1082.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (39 samples, 8.28%)</title><rect x="987" y="228" width="97" height="15" fill="rgb(211,53,20)"/><text x="990.00" y="238.50">PyUFunc_Gen..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (39 samples, 8.28%)</title><rect x="987" y="244" width="97" height="15" fill="rgb(239,226,15)"/><text x="990.00" y="254.50">PyUFunc_Gen..</text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="1082" y="260" width="2" height="15" fill="rgb(214,146,11)"/><text x="1085.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="1082" y="276" width="2" height="15" fill="rgb(230,134,7)"/><text x="1085.00" y="286.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (85 samples, 18.05%)</title><rect x="874" y="180" width="213" height="15" fill="rgb(238,102,42)"/><text x="877.00" y="190.50">decision_function (sklearn/l..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (59 samples, 12.53%)</title><rect x="939" y="196" width="148" height="15" fill="rgb(224,221,45)"/><text x="942.00" y="206.50">safe_sparse_dot (s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (41 samples, 8.70%)</title><rect x="984" y="212" width="103" height="15" fill="rgb(245,0,1)"/><text x="987.00" y="222.50">ufunc_generi..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1084" y="228" width="3" height="15" fill="rgb(249,16,20)"/><text x="1087.00" y="238.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.21%)</title><rect x="1087" y="228" width="2" height="15" fill="rgb(225,215,22)"/><text x="1090.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.21%)</title><rect x="1087" y="244" width="2" height="15" fill="rgb(247,18,33)"/><text x="1090.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.21%)</title><rect x="1087" y="260" width="2" height="15" fill="rgb(223,148,11)"/><text x="1090.00" y="270.50"></text></g><g><title>diophantine_precompute (mem_overlap.c) (1 samples, 0.21%)</title><rect x="1087" y="276" width="2" height="15" fill="rgb(225,136,5)"/><text x="1090.00" y="286.50"></text></g><g><title>safe_mul (npy_extint128.h) (1 samples, 0.21%)</title><rect x="1087" y="292" width="2" height="15" fill="rgb(208,158,43)"/><text x="1090.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (2 samples, 0.42%)</title><rect x="1089" y="244" width="5" height="15" fill="rgb(228,126,20)"/><text x="1092.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (2 samples, 0.42%)</title><rect x="1089" y="260" width="5" height="15" fill="rgb(243,48,47)"/><text x="1092.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (2 samples, 0.42%)</title><rect x="1089" y="276" width="5" height="15" fill="rgb(215,218,38)"/><text x="1092.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.42%)</title><rect x="1089" y="292" width="5" height="15" fill="rgb(239,214,8)"/><text x="1092.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.85%)</title><rect x="1089" y="228" width="10" height="15" fill="rgb(234,190,52)"/><text x="1092.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.42%)</title><rect x="1094" y="244" width="5" height="15" fill="rgb(253,24,38)"/><text x="1097.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.42%)</title><rect x="1094" y="260" width="5" height="15" fill="rgb(218,127,38)"/><text x="1097.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.42%)</title><rect x="1094" y="276" width="5" height="15" fill="rgb(225,57,51)"/><text x="1097.00" y="286.50"></text></g><g><title>0x7f33f7beb9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="1102" y="244" width="2" height="15" fill="rgb(233,67,27)"/><text x="1105.00" y="254.50"></text></g><g><title>0x7f33f7beb9dd (?) (1 samples, 0.21%)</title><rect x="1104" y="244" width="3" height="15" fill="rgb(212,50,38)"/><text x="1107.00" y="254.50"></text></g><g><title>0x7f33f7c0c265 (?) (1 samples, 0.21%)</title><rect x="1104" y="260" width="3" height="15" fill="rgb(234,8,26)"/><text x="1107.00" y="270.50"></text></g><g><title>0x7f33f7bc9fe0 (?) (1 samples, 0.21%)</title><rect x="1104" y="276" width="3" height="15" fill="rgb(209,117,22)"/><text x="1107.00" y="286.50"></text></g><g><title>0x7f33f7c0c254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="1107" y="260" width="2" height="15" fill="rgb(254,120,40)"/><text x="1110.00" y="270.50"></text></g><g><title>0x7f34159b7bd3 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1117" y="292" width="2" height="15" fill="rgb(235,39,26)"/><text x="1120.00" y="302.50"></text></g><g><title>0x7f34159b7c56 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1119" y="292" width="3" height="15" fill="rgb(209,213,53)"/><text x="1122.00" y="302.50"></text></g><g><title>0x7f34159b7c6a (libm-2.29.so) (4 samples, 0.85%)</title><rect x="1122" y="292" width="10" height="15" fill="rgb(241,176,46)"/><text x="1125.00" y="302.50"></text></g><g><title>0x7f33f7c0c265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.12%)</title><rect x="1109" y="260" width="25" height="15" fill="rgb(249,209,25)"/><text x="1112.00" y="270.50">0..</text></g><g><title>exp (libm-2.29.so) (10 samples, 2.12%)</title><rect x="1109" y="276" width="25" height="15" fill="rgb(250,128,19)"/><text x="1112.00" y="286.50">e..</text></g><g><title>0x7f34159b7c7b (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1132" y="292" width="2" height="15" fill="rgb(222,141,51)"/><text x="1135.00" y="302.50"></text></g><g><title>0x7f33f7c0c275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.42%)</title><rect x="1134" y="260" width="5" height="15" fill="rgb(221,177,13)"/><text x="1137.00" y="270.50"></text></g><g><title>0x7f33f7beb9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (23 samples, 4.88%)</title><rect x="1107" y="244" width="57" height="15" fill="rgb(207,62,50)"/><text x="1110.00" y="254.50">0x7f33..</text></g><g><title>0x7f33f7c0c279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.12%)</title><rect x="1139" y="260" width="25" height="15" fill="rgb(218,88,27)"/><text x="1142.00" y="270.50">0..</text></g><g><title>0x7f33f7beb9e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="1164" y="244" width="3" height="15" fill="rgb(222,105,0)"/><text x="1167.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (33 samples, 7.01%)</title><rect x="1087" y="212" width="82" height="15" fill="rgb(218,210,43)"/><text x="1090.00" y="222.50">execute_l..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (28 samples, 5.94%)</title><rect x="1099" y="228" width="70" height="15" fill="rgb(221,99,45)"/><text x="1102.00" y="238.50">trivial..</text></g><g><title>0x7f33f7c0c13e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="1167" y="244" width="2" height="15" fill="rgb(226,142,21)"/><text x="1170.00" y="254.50"></text></g><g><title>PyUFunc_getfperr (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1167" y="260" width="2" height="15" fill="rgb(236,71,36)"/><text x="1170.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.21%)</title><rect x="1167" y="276" width="2" height="15" fill="rgb(253,61,27)"/><text x="1170.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (34 samples, 7.22%)</title><rect x="1087" y="196" width="85" height="15" fill="rgb(244,9,6)"/><text x="1090.00" y="206.50">PyUFunc_Ge..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1169" y="212" width="3" height="15" fill="rgb(245,140,9)"/><text x="1172.00" y="222.50"></text></g><g><title>0x7f341580614a (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1169" y="228" width="3" height="15" fill="rgb(253,228,43)"/><text x="1172.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (144 samples, 30.57%)</title><rect x="814" y="164" width="360" height="15" fill="rgb(205,8,21)"/><text x="817.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (35 samples, 7.43%)</title><rect x="1087" y="180" width="87" height="15" fill="rgb(253,123,15)"/><text x="1090.00" y="190.50">ufunc_gene..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1172" y="196" width="2" height="15" fill="rgb(214,130,35)"/><text x="1175.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (4 samples, 0.85%)</title><rect x="1174" y="180" width="10" height="15" fill="rgb(214,59,5)"/><text x="1177.00" y="190.50"></text></g><g><title>all (471 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(222,222,21)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (471 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(226,40,2)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (150 samples, 31.85%)</title><rect x="814" y="68" width="376" height="15" fill="rgb(221,158,32)"/><text x="817.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (150 samples, 31.85%)</title><rect x="814" y="84" width="376" height="15" fill="rgb(252,145,43)"/><text x="817.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (150 samples, 31.85%)</title><rect x="814" y="100" width="376" height="15" fill="rgb(246,101,1)"/><text x="817.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (150 samples, 31.85%)</title><rect x="814" y="116" width="376" height="15" fill="rgb(238,184,22)"/><text x="817.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (150 samples, 31.85%)</title><rect x="814" y="132" width="376" height="15" fill="rgb(232,79,18)"/><text x="817.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (150 samples, 31.85%)</title><rect x="814" y="148" width="376" height="15" fill="rgb(238,212,9)"/><text x="817.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 1.27%)</title><rect x="1174" y="164" width="16" height="15" fill="rgb(210,3,35)"/><text x="1177.00" y="174.50"></text></g><g><title>isclass (inspect.py) (2 samples, 0.42%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(207,35,48)"/><text x="1187.00" y="190.50"></text></g></g></svg>