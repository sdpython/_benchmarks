<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1798" onload="init(evt)" viewBox="0 0 1200 1798" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1798" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1781.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1781.00"> </text><g id="frames"><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:28) (1 samples, 0.12%)</title><rect x="10" y="84" width="1" height="15" fill="rgb(216,97,51)"/><text x="13.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.12%)</title><rect x="10" y="100" width="1" height="15" fill="rgb(236,121,20)"/><text x="13.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.12%)</title><rect x="10" y="116" width="1" height="15" fill="rgb(235,23,52)"/><text x="13.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (1 samples, 0.12%)</title><rect x="10" y="132" width="1" height="15" fill="rgb(249,52,47)"/><text x="13.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(225,110,16)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(251,221,38)"/><text x="13.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(215,156,18)"/><text x="13.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(233,101,17)"/><text x="13.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(217,122,12)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:8) (1 samples, 0.12%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(238,144,26)"/><text x="13.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(216,95,22)"/><text x="13.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(221,226,3)"/><text x="13.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(207,196,35)"/><text x="13.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="10" y="292" width="1" height="15" fill="rgb(247,173,40)"/><text x="13.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="308" width="1" height="15" fill="rgb(209,171,17)"/><text x="13.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py:14) (1 samples, 0.12%)</title><rect x="10" y="324" width="1" height="15" fill="rgb(250,116,7)"/><text x="13.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.12%)</title><rect x="10" y="340" width="1" height="15" fill="rgb(242,214,33)"/><text x="13.00" y="350.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.12%)</title><rect x="10" y="356" width="1" height="15" fill="rgb(228,221,4)"/><text x="13.00" y="366.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:174) (1 samples, 0.12%)</title><rect x="10" y="372" width="1" height="15" fill="rgb(230,75,37)"/><text x="13.00" y="382.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;:59) (1 samples, 0.12%)</title><rect x="10" y="388" width="1" height="15" fill="rgb(248,69,11)"/><text x="13.00" y="398.50"></text></g><g><title>0x7f00d83c53fd (?) (1 samples, 0.12%)</title><rect x="11" y="180" width="1" height="15" fill="rgb(220,133,33)"/><text x="14.00" y="190.50"></text></g><g><title>0x7f00d83c3553 (?) (1 samples, 0.12%)</title><rect x="11" y="196" width="1" height="15" fill="rgb(250,212,2)"/><text x="14.00" y="206.50"></text></g><g><title>0x7f00d83bea09 (?) (1 samples, 0.12%)</title><rect x="11" y="212" width="1" height="15" fill="rgb(236,225,3)"/><text x="14.00" y="222.50"></text></g><g><title>0x7f00d83d1283 (?) (1 samples, 0.12%)</title><rect x="11" y="228" width="1" height="15" fill="rgb(232,83,21)"/><text x="14.00" y="238.50"></text></g><g><title>0x7f00d83d0e11 (?) (1 samples, 0.12%)</title><rect x="11" y="244" width="1" height="15" fill="rgb(252,208,22)"/><text x="14.00" y="254.50"></text></g><g><title>tanhf32x (libm-2.29.so) (1 samples, 0.12%)</title><rect x="11" y="260" width="1" height="15" fill="rgb(241,34,8)"/><text x="14.00" y="270.50"></text></g><g><title>expm1f64 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="11" y="276" width="1" height="15" fill="rgb(224,46,1)"/><text x="14.00" y="286.50"></text></g><g><title>0x7f00d83a66b0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="31" y="276" width="1" height="15" fill="rgb(219,200,24)"/><text x="34.00" y="286.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.97%)</title><rect x="25" y="260" width="12" height="15" fill="rgb(246,226,24)"/><text x="28.00" y="270.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.36%)</title><rect x="32" y="276" width="5" height="15" fill="rgb(205,17,2)"/><text x="35.00" y="286.50"></text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:18) (49 samples, 5.92%)</title><rect x="11" y="100" width="70" height="15" fill="rgb(250,173,17)"/><text x="14.00" y="110.50">profile..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (49 samples, 5.92%)</title><rect x="11" y="116" width="70" height="15" fill="rgb(205,39,10)"/><text x="14.00" y="126.50">time_pr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (49 samples, 5.92%)</title><rect x="11" y="132" width="70" height="15" fill="rgb(231,152,38)"/><text x="14.00" y="142.50">&lt;lambda..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (49 samples, 5.92%)</title><rect x="11" y="148" width="70" height="15" fill="rgb(216,206,35)"/><text x="14.00" y="158.50">_predic..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (49 samples, 5.92%)</title><rect x="11" y="164" width="70" height="15" fill="rgb(212,63,47)"/><text x="14.00" y="174.50">_dense_..</text></g><g><title>0x7f00d83c53fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (48 samples, 5.80%)</title><rect x="12" y="180" width="69" height="15" fill="rgb(249,146,1)"/><text x="15.00" y="190.50">0x7f00d..</text></g><g><title>0x7f00d83c3553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (48 samples, 5.80%)</title><rect x="12" y="196" width="69" height="15" fill="rgb(220,28,54)"/><text x="15.00" y="206.50">0x7f00d..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (48 samples, 5.80%)</title><rect x="12" y="212" width="69" height="15" fill="rgb(236,197,35)"/><text x="15.00" y="222.50">copy_pr..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (48 samples, 5.80%)</title><rect x="12" y="228" width="69" height="15" fill="rgb(223,115,29)"/><text x="15.00" y="238.50">svm_pre..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (45 samples, 5.43%)</title><rect x="17" y="244" width="64" height="15" fill="rgb(224,216,4)"/><text x="20.00" y="254.50">svm_pre..</text></g><g><title>tanhf32x (libm-2.29.so) (31 samples, 3.74%)</title><rect x="37" y="260" width="44" height="15" fill="rgb(253,43,14)"/><text x="40.00" y="270.50">tanh..</text></g><g><title>expm1f64 (libm-2.29.so) (19 samples, 2.29%)</title><rect x="54" y="276" width="27" height="15" fill="rgb(250,116,34)"/><text x="57.00" y="286.50">e..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (1 samples, 0.12%)</title><rect x="81" y="148" width="1" height="15" fill="rgb(229,128,48)"/><text x="84.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (1 samples, 0.12%)</title><rect x="81" y="164" width="1" height="15" fill="rgb(232,48,18)"/><text x="84.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.12%)</title><rect x="81" y="180" width="1" height="15" fill="rgb(235,56,50)"/><text x="84.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.12%)</title><rect x="81" y="196" width="1" height="15" fill="rgb(234,186,21)"/><text x="84.00" y="206.50"></text></g><g><title>0x7f00d83a6020 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="99" y="244" width="2" height="15" fill="rgb(214,186,17)"/><text x="102.00" y="254.50"></text></g><g><title>0x7f00fd8d490e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="101" y="244" width="1" height="15" fill="rgb(234,120,19)"/><text x="104.00" y="254.50"></text></g><g><title>0x7f00fd8d4961 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="102" y="244" width="2" height="15" fill="rgb(247,27,12)"/><text x="105.00" y="254.50"></text></g><g><title>0x7f00fd8d4998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="104" y="244" width="1" height="15" fill="rgb(239,198,49)"/><text x="107.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.12%)</title><rect x="105" y="244" width="1" height="15" fill="rgb(214,214,51)"/><text x="108.00" y="254.50"></text></g><g><title>0x7f00fdaa6c56 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="105" y="260" width="1" height="15" fill="rgb(215,210,39)"/><text x="108.00" y="270.50"></text></g><g><title>0x7f00fd8d5c38 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="114" y="260" width="1" height="15" fill="rgb(225,29,21)"/><text x="117.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 0.85%)</title><rect x="106" y="244" width="10" height="15" fill="rgb(248,131,34)"/><text x="109.00" y="254.50"></text></g><g><title>0x7f00fd8d600a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="115" y="260" width="1" height="15" fill="rgb(227,222,7)"/><text x="118.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="142" y="260" width="1" height="15" fill="rgb(235,121,33)"/><text x="145.00" y="270.50"></text></g><g><title>0x7f00d83a66b0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.24%)</title><rect x="158" y="276" width="3" height="15" fill="rgb(206,181,3)"/><text x="161.00" y="286.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (27 samples, 3.26%)</title><rect x="143" y="260" width="39" height="15" fill="rgb(247,105,47)"/><text x="146.00" y="270.50">svm..</text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (15 samples, 1.81%)</title><rect x="161" y="276" width="21" height="15" fill="rgb(253,32,34)"/><text x="164.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:38) (251 samples, 30.31%)</title><rect x="10" y="52" width="357" height="15" fill="rgb(215,203,3)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue..</text></g><g><title>profile_skl (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:37) (251 samples, 30.31%)</title><rect x="10" y="68" width="357" height="15" fill="rgb(212,106,52)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_sigmoid_b_cl_probabilityT..</text></g><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:29) (250 samples, 30.19%)</title><rect x="11" y="84" width="356" height="15" fill="rgb(234,200,24)"/><text x="14.00" y="94.50">setup_profile (bench_SVC_sigmoid_b_cl_probabilit..</text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:23) (201 samples, 24.28%)</title><rect x="81" y="100" width="286" height="15" fill="rgb(250,76,3)"/><text x="84.00" y="110.50">profile (bench_SVC_sigmoid_b_cl_probab..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (201 samples, 24.28%)</title><rect x="81" y="116" width="286" height="15" fill="rgb(219,67,52)"/><text x="84.00" y="126.50">time_predict (mlprodict/asv_benchmark/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (201 samples, 24.28%)</title><rect x="81" y="132" width="286" height="15" fill="rgb(242,62,17)"/><text x="84.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/comm..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (200 samples, 24.15%)</title><rect x="82" y="148" width="285" height="15" fill="rgb(244,12,9)"/><text x="85.00" y="158.50">_predict_proba (sklearn/svm/_base.py:6..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (200 samples, 24.15%)</title><rect x="82" y="164" width="285" height="15" fill="rgb(215,40,49)"/><text x="85.00" y="174.50">_dense_predict_proba (sklearn/svm/_bas..</text></g><g><title>0x7f00d83c53fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (200 samples, 24.15%)</title><rect x="82" y="180" width="285" height="15" fill="rgb(220,176,4)"/><text x="85.00" y="190.50">0x7f00d83c53fd (sklearn/svm/_libsvm.cp..</text></g><g><title>0x7f00d83c3553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (200 samples, 24.15%)</title><rect x="82" y="196" width="285" height="15" fill="rgb(232,152,30)"/><text x="85.00" y="206.50">0x7f00d83c3553 (sklearn/svm/_libsvm.cp..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (200 samples, 24.15%)</title><rect x="82" y="212" width="285" height="15" fill="rgb(215,192,33)"/><text x="85.00" y="222.50">copy_predict_proba (sklearn/svm/_libsv..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (200 samples, 24.15%)</title><rect x="82" y="228" width="285" height="15" fill="rgb(218,53,34)"/><text x="85.00" y="238.50">svm_predict_probability (sklearn/svm/_..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (176 samples, 21.26%)</title><rect x="116" y="244" width="251" height="15" fill="rgb(247,6,39)"/><text x="119.00" y="254.50">svm_predict_values (sklearn/svm/_..</text></g><g><title>tanhf32x (libm-2.29.so) (130 samples, 15.70%)</title><rect x="182" y="260" width="185" height="15" fill="rgb(229,84,14)"/><text x="185.00" y="270.50">tanhf32x (libm-2.29.so)</text></g><g><title>expm1f64 (libm-2.29.so) (87 samples, 10.51%)</title><rect x="243" y="276" width="124" height="15" fill="rgb(223,171,42)"/><text x="246.00" y="286.50">expm1f64 (libm-..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid.py:1) (1 samples, 0.12%)</title><rect x="367" y="148" width="2" height="15" fill="rgb(211,138,45)"/><text x="370.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="367" y="164" width="2" height="15" fill="rgb(231,1,38)"/><text x="370.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="367" y="180" width="2" height="15" fill="rgb(234,43,14)"/><text x="370.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="367" y="196" width="2" height="15" fill="rgb(213,215,26)"/><text x="370.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="367" y="212" width="2" height="15" fill="rgb(213,152,49)"/><text x="370.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="367" y="228" width="2" height="15" fill="rgb(221,223,17)"/><text x="370.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.12%)</title><rect x="367" y="244" width="2" height="15" fill="rgb(234,120,44)"/><text x="370.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="367" y="260" width="2" height="15" fill="rgb(215,78,16)"/><text x="370.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="367" y="276" width="2" height="15" fill="rgb(243,204,17)"/><text x="370.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="367" y="292" width="2" height="15" fill="rgb(240,189,13)"/><text x="370.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="367" y="308" width="2" height="15" fill="rgb(239,138,7)"/><text x="370.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="367" y="324" width="2" height="15" fill="rgb(240,121,0)"/><text x="370.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="367" y="340" width="2" height="15" fill="rgb(244,94,50)"/><text x="370.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="367" y="356" width="2" height="15" fill="rgb(249,7,54)"/><text x="370.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.12%)</title><rect x="367" y="372" width="2" height="15" fill="rgb(209,106,31)"/><text x="370.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="367" y="388" width="2" height="15" fill="rgb(233,19,16)"/><text x="370.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="367" y="404" width="2" height="15" fill="rgb(237,214,28)"/><text x="370.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="367" y="420" width="2" height="15" fill="rgb(218,211,54)"/><text x="370.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="367" y="436" width="2" height="15" fill="rgb(222,170,8)"/><text x="370.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="367" y="452" width="2" height="15" fill="rgb(251,72,24)"/><text x="370.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="367" y="468" width="2" height="15" fill="rgb(230,55,11)"/><text x="370.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="367" y="484" width="2" height="15" fill="rgb(218,115,9)"/><text x="370.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:78) (1 samples, 0.12%)</title><rect x="367" y="500" width="2" height="15" fill="rgb(234,88,26)"/><text x="370.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:203) (1 samples, 0.12%)</title><rect x="367" y="516" width="2" height="15" fill="rgb(246,19,53)"/><text x="370.00" y="526.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.12%)</title><rect x="367" y="532" width="2" height="15" fill="rgb(214,119,49)"/><text x="370.00" y="542.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.12%)</title><rect x="369" y="852" width="1" height="15" fill="rgb(210,32,52)"/><text x="372.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.12%)</title><rect x="369" y="868" width="1" height="15" fill="rgb(217,207,39)"/><text x="372.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.12%)</title><rect x="369" y="884" width="1" height="15" fill="rgb(239,126,23)"/><text x="372.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.12%)</title><rect x="369" y="900" width="1" height="15" fill="rgb(247,74,32)"/><text x="372.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.12%)</title><rect x="369" y="916" width="1" height="15" fill="rgb(211,209,44)"/><text x="372.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.12%)</title><rect x="369" y="932" width="1" height="15" fill="rgb(236,86,26)"/><text x="372.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.12%)</title><rect x="369" y="948" width="1" height="15" fill="rgb(217,218,38)"/><text x="372.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.12%)</title><rect x="369" y="964" width="1" height="15" fill="rgb(229,48,25)"/><text x="372.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.12%)</title><rect x="369" y="980" width="1" height="15" fill="rgb(237,166,50)"/><text x="372.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.12%)</title><rect x="369" y="996" width="1" height="15" fill="rgb(254,141,30)"/><text x="372.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.12%)</title><rect x="369" y="1012" width="1" height="15" fill="rgb(241,125,2)"/><text x="372.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.12%)</title><rect x="369" y="1028" width="1" height="15" fill="rgb(240,17,0)"/><text x="372.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.12%)</title><rect x="369" y="1044" width="1" height="15" fill="rgb(246,94,13)"/><text x="372.00" y="1054.50"></text></g><g><title>mbstowcs (libc-2.29.so) (1 samples, 0.12%)</title><rect x="369" y="1060" width="1" height="15" fill="rgb(218,143,11)"/><text x="372.00" y="1070.50"></text></g><g><title>0x7f00fd902541 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="369" y="1076" width="1" height="15" fill="rgb(220,81,19)"/><text x="372.00" y="1086.50"></text></g><g><title>0x7f00fd87d2b2 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="369" y="1092" width="1" height="15" fill="rgb(239,110,25)"/><text x="372.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid.py:2) (2 samples, 0.24%)</title><rect x="369" y="148" width="2" height="15" fill="rgb(221,67,11)"/><text x="372.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="369" y="164" width="2" height="15" fill="rgb(246,44,53)"/><text x="372.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.24%)</title><rect x="369" y="180" width="2" height="15" fill="rgb(216,123,14)"/><text x="372.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="369" y="196" width="2" height="15" fill="rgb(212,137,24)"/><text x="372.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="369" y="212" width="2" height="15" fill="rgb(250,26,26)"/><text x="372.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="369" y="228" width="2" height="15" fill="rgb(249,211,42)"/><text x="372.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="369" y="244" width="2" height="15" fill="rgb(214,88,33)"/><text x="372.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="369" y="260" width="2" height="15" fill="rgb(233,189,24)"/><text x="372.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="369" y="276" width="2" height="15" fill="rgb(250,181,3)"/><text x="372.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.24%)</title><rect x="369" y="292" width="2" height="15" fill="rgb(241,181,32)"/><text x="372.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="369" y="308" width="2" height="15" fill="rgb(225,145,31)"/><text x="372.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="369" y="324" width="2" height="15" fill="rgb(236,76,7)"/><text x="372.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="369" y="340" width="2" height="15" fill="rgb(212,212,6)"/><text x="372.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="369" y="356" width="2" height="15" fill="rgb(244,179,1)"/><text x="372.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="369" y="372" width="2" height="15" fill="rgb(253,39,4)"/><text x="372.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.24%)</title><rect x="369" y="388" width="2" height="15" fill="rgb(254,24,17)"/><text x="372.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="369" y="404" width="2" height="15" fill="rgb(252,87,5)"/><text x="372.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="369" y="420" width="2" height="15" fill="rgb(217,160,4)"/><text x="372.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="369" y="436" width="2" height="15" fill="rgb(251,71,44)"/><text x="372.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="369" y="452" width="2" height="15" fill="rgb(240,97,14)"/><text x="372.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="369" y="468" width="2" height="15" fill="rgb(238,70,38)"/><text x="372.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.24%)</title><rect x="369" y="484" width="2" height="15" fill="rgb(224,137,41)"/><text x="372.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="369" y="500" width="2" height="15" fill="rgb(241,201,3)"/><text x="372.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="369" y="516" width="2" height="15" fill="rgb(252,100,36)"/><text x="372.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="369" y="532" width="2" height="15" fill="rgb(235,114,52)"/><text x="372.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="369" y="548" width="2" height="15" fill="rgb(226,162,9)"/><text x="372.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="369" y="564" width="2" height="15" fill="rgb(227,46,24)"/><text x="372.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.24%)</title><rect x="369" y="580" width="2" height="15" fill="rgb(236,194,24)"/><text x="372.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="369" y="596" width="2" height="15" fill="rgb(222,121,51)"/><text x="372.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.24%)</title><rect x="369" y="612" width="2" height="15" fill="rgb(254,8,51)"/><text x="372.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="369" y="628" width="2" height="15" fill="rgb(232,183,29)"/><text x="372.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="369" y="644" width="2" height="15" fill="rgb(232,37,23)"/><text x="372.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="369" y="660" width="2" height="15" fill="rgb(225,157,6)"/><text x="372.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="369" y="676" width="2" height="15" fill="rgb(234,216,47)"/><text x="372.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="369" y="692" width="2" height="15" fill="rgb(251,88,7)"/><text x="372.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="369" y="708" width="2" height="15" fill="rgb(218,193,20)"/><text x="372.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.24%)</title><rect x="369" y="724" width="2" height="15" fill="rgb(243,184,36)"/><text x="372.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="369" y="740" width="2" height="15" fill="rgb(254,210,36)"/><text x="372.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="369" y="756" width="2" height="15" fill="rgb(209,159,37)"/><text x="372.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="369" y="772" width="2" height="15" fill="rgb(248,126,43)"/><text x="372.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="369" y="788" width="2" height="15" fill="rgb(235,84,14)"/><text x="372.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="369" y="804" width="2" height="15" fill="rgb(219,65,3)"/><text x="372.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.24%)</title><rect x="369" y="820" width="2" height="15" fill="rgb(211,158,39)"/><text x="372.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.24%)</title><rect x="369" y="836" width="2" height="15" fill="rgb(241,98,26)"/><text x="372.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.12%)</title><rect x="370" y="852" width="1" height="15" fill="rgb(244,188,17)"/><text x="373.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.12%)</title><rect x="370" y="868" width="1" height="15" fill="rgb(209,147,39)"/><text x="373.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.12%)</title><rect x="370" y="884" width="1" height="15" fill="rgb(216,229,44)"/><text x="373.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.12%)</title><rect x="370" y="900" width="1" height="15" fill="rgb(241,95,12)"/><text x="373.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.12%)</title><rect x="370" y="916" width="1" height="15" fill="rgb(254,203,50)"/><text x="373.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.12%)</title><rect x="370" y="932" width="1" height="15" fill="rgb(234,92,40)"/><text x="373.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.12%)</title><rect x="370" y="948" width="1" height="15" fill="rgb(252,112,16)"/><text x="373.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.12%)</title><rect x="370" y="964" width="1" height="15" fill="rgb(219,40,5)"/><text x="373.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.12%)</title><rect x="370" y="980" width="1" height="15" fill="rgb(231,25,49)"/><text x="373.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid.py:4) (1 samples, 0.12%)</title><rect x="371" y="148" width="2" height="15" fill="rgb(242,177,17)"/><text x="374.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="371" y="164" width="2" height="15" fill="rgb(218,0,2)"/><text x="374.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="371" y="180" width="2" height="15" fill="rgb(211,190,2)"/><text x="374.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="371" y="196" width="2" height="15" fill="rgb(209,38,48)"/><text x="374.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="371" y="212" width="2" height="15" fill="rgb(217,147,28)"/><text x="374.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="371" y="228" width="2" height="15" fill="rgb(220,72,53)"/><text x="374.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="371" y="244" width="2" height="15" fill="rgb(219,224,22)"/><text x="374.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="371" y="260" width="2" height="15" fill="rgb(218,67,10)"/><text x="374.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="371" y="276" width="2" height="15" fill="rgb(215,135,17)"/><text x="374.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.12%)</title><rect x="371" y="292" width="2" height="15" fill="rgb(238,26,19)"/><text x="374.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="371" y="308" width="2" height="15" fill="rgb(237,101,2)"/><text x="374.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="371" y="324" width="2" height="15" fill="rgb(254,183,36)"/><text x="374.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="371" y="340" width="2" height="15" fill="rgb(219,14,19)"/><text x="374.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="371" y="356" width="2" height="15" fill="rgb(239,8,0)"/><text x="374.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="371" y="372" width="2" height="15" fill="rgb(206,118,7)"/><text x="374.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.12%)</title><rect x="371" y="388" width="2" height="15" fill="rgb(211,11,21)"/><text x="374.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="371" y="404" width="2" height="15" fill="rgb(212,16,5)"/><text x="374.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="371" y="420" width="2" height="15" fill="rgb(214,38,33)"/><text x="374.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="371" y="436" width="2" height="15" fill="rgb(230,105,4)"/><text x="374.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="371" y="452" width="2" height="15" fill="rgb(205,112,5)"/><text x="374.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="371" y="468" width="2" height="15" fill="rgb(223,79,48)"/><text x="374.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.12%)</title><rect x="371" y="484" width="2" height="15" fill="rgb(207,60,32)"/><text x="374.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="371" y="500" width="2" height="15" fill="rgb(229,147,28)"/><text x="374.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="371" y="516" width="2" height="15" fill="rgb(213,71,1)"/><text x="374.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="371" y="532" width="2" height="15" fill="rgb(212,137,12)"/><text x="374.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="371" y="548" width="2" height="15" fill="rgb(217,218,8)"/><text x="374.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="371" y="564" width="2" height="15" fill="rgb(252,140,18)"/><text x="374.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.12%)</title><rect x="371" y="580" width="2" height="15" fill="rgb(239,97,36)"/><text x="374.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="371" y="596" width="2" height="15" fill="rgb(236,7,40)"/><text x="374.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="371" y="612" width="2" height="15" fill="rgb(249,131,19)"/><text x="374.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="371" y="628" width="2" height="15" fill="rgb(248,160,42)"/><text x="374.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="371" y="644" width="2" height="15" fill="rgb(250,217,16)"/><text x="374.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="371" y="660" width="2" height="15" fill="rgb(226,77,27)"/><text x="374.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.12%)</title><rect x="371" y="676" width="2" height="15" fill="rgb(230,106,17)"/><text x="374.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="371" y="692" width="2" height="15" fill="rgb(232,164,45)"/><text x="374.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="371" y="708" width="2" height="15" fill="rgb(251,164,40)"/><text x="374.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="371" y="724" width="2" height="15" fill="rgb(223,0,2)"/><text x="374.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="371" y="740" width="2" height="15" fill="rgb(240,124,34)"/><text x="374.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="371" y="756" width="2" height="15" fill="rgb(228,213,33)"/><text x="374.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.12%)</title><rect x="371" y="772" width="2" height="15" fill="rgb(212,227,15)"/><text x="374.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="371" y="788" width="2" height="15" fill="rgb(248,96,37)"/><text x="374.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="371" y="804" width="2" height="15" fill="rgb(249,185,3)"/><text x="374.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="371" y="820" width="2" height="15" fill="rgb(240,146,46)"/><text x="374.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="371" y="836" width="2" height="15" fill="rgb(217,173,41)"/><text x="374.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="371" y="852" width="2" height="15" fill="rgb(241,114,38)"/><text x="374.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="371" y="868" width="2" height="15" fill="rgb(222,148,10)"/><text x="374.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="371" y="884" width="2" height="15" fill="rgb(250,186,2)"/><text x="374.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.12%)</title><rect x="371" y="900" width="2" height="15" fill="rgb(234,127,50)"/><text x="374.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="371" y="916" width="2" height="15" fill="rgb(245,123,53)"/><text x="374.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="371" y="932" width="2" height="15" fill="rgb(215,222,27)"/><text x="374.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="371" y="948" width="2" height="15" fill="rgb(253,177,36)"/><text x="374.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="371" y="964" width="2" height="15" fill="rgb(246,24,8)"/><text x="374.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="371" y="980" width="2" height="15" fill="rgb(253,115,36)"/><text x="374.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="371" y="996" width="2" height="15" fill="rgb(208,150,4)"/><text x="374.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="371" y="1012" width="2" height="15" fill="rgb(242,75,8)"/><text x="374.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:92) (1 samples, 0.12%)</title><rect x="371" y="1028" width="2" height="15" fill="rgb(228,20,46)"/><text x="374.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2824) (1 samples, 0.12%)</title><rect x="371" y="1044" width="2" height="15" fill="rgb(238,78,53)"/><text x="374.00" y="1054.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py:2849) (1 samples, 0.12%)</title><rect x="371" y="1060" width="2" height="15" fill="rgb(254,72,13)"/><text x="374.00" y="1070.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.12%)</title><rect x="371" y="1076" width="2" height="15" fill="rgb(219,181,18)"/><text x="374.00" y="1086.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:64) (1 samples, 0.12%)</title><rect x="371" y="1092" width="2" height="15" fill="rgb(215,137,8)"/><text x="374.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:4892) (1 samples, 0.12%)</title><rect x="373" y="1108" width="1" height="15" fill="rgb(240,94,1)"/><text x="376.00" y="1118.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py:10747) (1 samples, 0.12%)</title><rect x="373" y="1124" width="1" height="15" fill="rgb(244,14,2)"/><text x="376.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="373" y="1140" width="1" height="15" fill="rgb(243,163,10)"/><text x="376.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="373" y="1156" width="1" height="15" fill="rgb(208,210,14)"/><text x="376.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="373" y="1172" width="1" height="15" fill="rgb(252,113,43)"/><text x="376.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="373" y="1188" width="1" height="15" fill="rgb(223,98,49)"/><text x="376.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="373" y="1204" width="1" height="15" fill="rgb(225,32,1)"/><text x="376.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="373" y="1220" width="1" height="15" fill="rgb(227,11,22)"/><text x="376.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="373" y="1236" width="1" height="15" fill="rgb(211,138,52)"/><text x="376.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/window.py:478) (1 samples, 0.12%)</title><rect x="373" y="1252" width="1" height="15" fill="rgb(226,209,27)"/><text x="376.00" y="1262.50"></text></g><g><title>Window (pandas/core/window.py:797) (1 samples, 0.12%)</title><rect x="373" y="1268" width="1" height="15" fill="rgb(207,82,39)"/><text x="376.00" y="1278.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.12%)</title><rect x="373" y="1284" width="1" height="15" fill="rgb(239,34,29)"/><text x="376.00" y="1294.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.12%)</title><rect x="373" y="1300" width="1" height="15" fill="rgb(244,57,42)"/><text x="376.00" y="1310.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.12%)</title><rect x="373" y="1316" width="1" height="15" fill="rgb(253,43,4)"/><text x="376.00" y="1326.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.24%)</title><rect x="373" y="436" width="3" height="15" fill="rgb(218,179,35)"/><text x="376.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="373" y="452" width="3" height="15" fill="rgb(214,187,54)"/><text x="376.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="373" y="468" width="3" height="15" fill="rgb(234,134,17)"/><text x="376.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="373" y="484" width="3" height="15" fill="rgb(237,29,32)"/><text x="376.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="373" y="500" width="3" height="15" fill="rgb(230,224,11)"/><text x="376.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="373" y="516" width="3" height="15" fill="rgb(208,203,6)"/><text x="376.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.24%)</title><rect x="373" y="532" width="3" height="15" fill="rgb(244,28,54)"/><text x="376.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="373" y="548" width="3" height="15" fill="rgb(246,17,11)"/><text x="376.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="373" y="564" width="3" height="15" fill="rgb(239,43,6)"/><text x="376.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="373" y="580" width="3" height="15" fill="rgb(236,178,33)"/><text x="376.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="373" y="596" width="3" height="15" fill="rgb(208,65,18)"/><text x="376.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="373" y="612" width="3" height="15" fill="rgb(233,131,46)"/><text x="376.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.24%)</title><rect x="373" y="628" width="3" height="15" fill="rgb(219,146,2)"/><text x="376.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="373" y="644" width="3" height="15" fill="rgb(247,92,18)"/><text x="376.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="373" y="660" width="3" height="15" fill="rgb(222,87,39)"/><text x="376.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="373" y="676" width="3" height="15" fill="rgb(245,10,4)"/><text x="376.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="373" y="692" width="3" height="15" fill="rgb(251,62,49)"/><text x="376.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="373" y="708" width="3" height="15" fill="rgb(222,70,16)"/><text x="376.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.24%)</title><rect x="373" y="724" width="3" height="15" fill="rgb(224,47,26)"/><text x="376.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="373" y="740" width="3" height="15" fill="rgb(222,102,45)"/><text x="376.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="373" y="756" width="3" height="15" fill="rgb(223,128,50)"/><text x="376.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="373" y="772" width="3" height="15" fill="rgb(217,86,18)"/><text x="376.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="373" y="788" width="3" height="15" fill="rgb(234,85,33)"/><text x="376.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="373" y="804" width="3" height="15" fill="rgb(221,17,24)"/><text x="376.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.24%)</title><rect x="373" y="820" width="3" height="15" fill="rgb(247,88,37)"/><text x="376.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="373" y="836" width="3" height="15" fill="rgb(245,120,50)"/><text x="376.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="373" y="852" width="3" height="15" fill="rgb(247,34,35)"/><text x="376.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="373" y="868" width="3" height="15" fill="rgb(236,148,20)"/><text x="376.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="373" y="884" width="3" height="15" fill="rgb(219,171,52)"/><text x="376.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="373" y="900" width="3" height="15" fill="rgb(227,130,16)"/><text x="376.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.24%)</title><rect x="373" y="916" width="3" height="15" fill="rgb(233,176,25)"/><text x="376.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="373" y="932" width="3" height="15" fill="rgb(227,76,5)"/><text x="376.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="373" y="948" width="3" height="15" fill="rgb(221,79,41)"/><text x="376.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="373" y="964" width="3" height="15" fill="rgb(251,160,5)"/><text x="376.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="373" y="980" width="3" height="15" fill="rgb(215,193,30)"/><text x="376.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="373" y="996" width="3" height="15" fill="rgb(211,51,0)"/><text x="376.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.24%)</title><rect x="373" y="1012" width="3" height="15" fill="rgb(222,55,1)"/><text x="376.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="373" y="1028" width="3" height="15" fill="rgb(206,82,18)"/><text x="376.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="373" y="1044" width="3" height="15" fill="rgb(213,169,49)"/><text x="376.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="373" y="1060" width="3" height="15" fill="rgb(219,184,39)"/><text x="376.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="373" y="1076" width="3" height="15" fill="rgb(241,192,37)"/><text x="376.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="373" y="1092" width="3" height="15" fill="rgb(205,99,3)"/><text x="376.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.12%)</title><rect x="374" y="1108" width="2" height="15" fill="rgb(236,204,40)"/><text x="377.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="374" y="1124" width="2" height="15" fill="rgb(249,125,49)"/><text x="377.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="374" y="1140" width="2" height="15" fill="rgb(252,74,49)"/><text x="377.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="374" y="1156" width="2" height="15" fill="rgb(232,92,28)"/><text x="377.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="374" y="1172" width="2" height="15" fill="rgb(232,145,22)"/><text x="377.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="374" y="1188" width="2" height="15" fill="rgb(241,115,38)"/><text x="377.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.12%)</title><rect x="374" y="1204" width="2" height="15" fill="rgb(233,225,28)"/><text x="377.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="374" y="1220" width="2" height="15" fill="rgb(224,64,35)"/><text x="377.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="374" y="1236" width="2" height="15" fill="rgb(243,27,17)"/><text x="377.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="374" y="1252" width="2" height="15" fill="rgb(228,48,29)"/><text x="377.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="374" y="1268" width="2" height="15" fill="rgb(214,1,35)"/><text x="377.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="374" y="1284" width="2" height="15" fill="rgb(249,102,22)"/><text x="377.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.12%)</title><rect x="374" y="1300" width="2" height="15" fill="rgb(248,223,33)"/><text x="377.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="374" y="1316" width="2" height="15" fill="rgb(211,164,19)"/><text x="377.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="374" y="1332" width="2" height="15" fill="rgb(252,46,36)"/><text x="377.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="374" y="1348" width="2" height="15" fill="rgb(228,213,36)"/><text x="377.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="374" y="1364" width="2" height="15" fill="rgb(248,187,25)"/><text x="377.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="374" y="1380" width="2" height="15" fill="rgb(252,205,39)"/><text x="377.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.12%)</title><rect x="374" y="1396" width="2" height="15" fill="rgb(212,190,41)"/><text x="377.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="374" y="1412" width="2" height="15" fill="rgb(218,112,13)"/><text x="377.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="374" y="1428" width="2" height="15" fill="rgb(246,217,30)"/><text x="377.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="374" y="1444" width="2" height="15" fill="rgb(214,103,39)"/><text x="377.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="374" y="1460" width="2" height="15" fill="rgb(250,2,19)"/><text x="377.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="374" y="1476" width="2" height="15" fill="rgb(245,78,36)"/><text x="377.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.12%)</title><rect x="374" y="1492" width="2" height="15" fill="rgb(229,136,28)"/><text x="377.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="374" y="1508" width="2" height="15" fill="rgb(254,64,51)"/><text x="377.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="374" y="1524" width="2" height="15" fill="rgb(242,156,41)"/><text x="377.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="374" y="1540" width="2" height="15" fill="rgb(207,111,12)"/><text x="377.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="374" y="1556" width="2" height="15" fill="rgb(253,112,18)"/><text x="377.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="374" y="1572" width="2" height="15" fill="rgb(241,11,18)"/><text x="377.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.12%)</title><rect x="374" y="1588" width="2" height="15" fill="rgb(252,54,28)"/><text x="377.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="374" y="1604" width="2" height="15" fill="rgb(233,169,20)"/><text x="377.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="374" y="1620" width="2" height="15" fill="rgb(209,165,45)"/><text x="377.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="374" y="1636" width="2" height="15" fill="rgb(218,96,41)"/><text x="377.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="374" y="1652" width="2" height="15" fill="rgb(253,163,7)"/><text x="377.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="374" y="1668" width="2" height="15" fill="rgb(224,36,5)"/><text x="377.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.12%)</title><rect x="374" y="1684" width="2" height="15" fill="rgb(249,189,24)"/><text x="377.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="374" y="1700" width="2" height="15" fill="rgb(217,16,44)"/><text x="377.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="374" y="1716" width="2" height="15" fill="rgb(247,207,4)"/><text x="377.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="374" y="1732" width="2" height="15" fill="rgb(212,193,21)"/><text x="377.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="374" y="1748" width="2" height="15" fill="rgb(230,6,4)"/><text x="377.00" y="1758.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:14) (1 samples, 0.12%)</title><rect x="376" y="1108" width="1" height="15" fill="rgb(249,159,17)"/><text x="379.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="376" y="1124" width="1" height="15" fill="rgb(235,31,17)"/><text x="379.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="376" y="1140" width="1" height="15" fill="rgb(241,2,11)"/><text x="379.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="376" y="1156" width="1" height="15" fill="rgb(254,86,47)"/><text x="379.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="376" y="1172" width="1" height="15" fill="rgb(241,192,44)"/><text x="379.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="376" y="1188" width="1" height="15" fill="rgb(227,175,9)"/><text x="379.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="376" y="1204" width="1" height="15" fill="rgb(237,200,40)"/><text x="379.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="376" y="1220" width="1" height="15" fill="rgb(237,172,46)"/><text x="379.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py:31) (1 samples, 0.12%)</title><rect x="376" y="1236" width="1" height="15" fill="rgb(242,131,1)"/><text x="379.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="376" y="1252" width="1" height="15" fill="rgb(222,29,9)"/><text x="379.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="376" y="1268" width="1" height="15" fill="rgb(243,138,14)"/><text x="379.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="376" y="1284" width="1" height="15" fill="rgb(238,43,54)"/><text x="379.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="376" y="1300" width="1" height="15" fill="rgb(250,82,45)"/><text x="379.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="376" y="1316" width="1" height="15" fill="rgb(219,94,41)"/><text x="379.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="376" y="1332" width="1" height="15" fill="rgb(216,71,0)"/><text x="379.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="376" y="1348" width="1" height="15" fill="rgb(233,137,33)"/><text x="379.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/svd.py:7) (1 samples, 0.12%)</title><rect x="376" y="1364" width="1" height="15" fill="rgb(211,52,42)"/><text x="379.00" y="1374.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.12%)</title><rect x="377" y="1492" width="2" height="15" fill="rgb(206,118,19)"/><text x="380.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.12%)</title><rect x="377" y="1508" width="2" height="15" fill="rgb(244,62,46)"/><text x="380.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.12%)</title><rect x="377" y="1524" width="2" height="15" fill="rgb(234,2,51)"/><text x="380.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.12%)</title><rect x="377" y="1540" width="2" height="15" fill="rgb(252,168,44)"/><text x="380.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.12%)</title><rect x="377" y="1556" width="2" height="15" fill="rgb(209,115,43)"/><text x="380.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:117) (1 samples, 0.12%)</title><rect x="377" y="1572" width="2" height="15" fill="rgb(241,155,3)"/><text x="380.00" y="1582.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:4) (9 samples, 1.09%)</title><rect x="367" y="52" width="13" height="15" fill="rgb(221,53,44)"/><text x="370.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.09%)</title><rect x="367" y="68" width="13" height="15" fill="rgb(215,8,46)"/><text x="370.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.09%)</title><rect x="367" y="84" width="13" height="15" fill="rgb(245,205,47)"/><text x="370.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.09%)</title><rect x="367" y="100" width="13" height="15" fill="rgb(236,64,31)"/><text x="370.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.09%)</title><rect x="367" y="116" width="13" height="15" fill="rgb(241,102,48)"/><text x="370.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.09%)</title><rect x="367" y="132" width="13" height="15" fill="rgb(209,130,31)"/><text x="370.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid.py:7) (5 samples, 0.60%)</title><rect x="373" y="148" width="7" height="15" fill="rgb(222,113,33)"/><text x="376.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.60%)</title><rect x="373" y="164" width="7" height="15" fill="rgb(254,134,18)"/><text x="376.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.60%)</title><rect x="373" y="180" width="7" height="15" fill="rgb(247,25,39)"/><text x="376.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.60%)</title><rect x="373" y="196" width="7" height="15" fill="rgb(236,111,4)"/><text x="376.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.60%)</title><rect x="373" y="212" width="7" height="15" fill="rgb(236,198,16)"/><text x="376.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.60%)</title><rect x="373" y="228" width="7" height="15" fill="rgb(220,154,2)"/><text x="376.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 0.60%)</title><rect x="373" y="244" width="7" height="15" fill="rgb(251,93,12)"/><text x="376.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.60%)</title><rect x="373" y="260" width="7" height="15" fill="rgb(231,142,24)"/><text x="376.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.60%)</title><rect x="373" y="276" width="7" height="15" fill="rgb(234,204,33)"/><text x="376.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.60%)</title><rect x="373" y="292" width="7" height="15" fill="rgb(241,143,51)"/><text x="376.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.60%)</title><rect x="373" y="308" width="7" height="15" fill="rgb(238,90,5)"/><text x="376.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.60%)</title><rect x="373" y="324" width="7" height="15" fill="rgb(236,162,18)"/><text x="376.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 0.60%)</title><rect x="373" y="340" width="7" height="15" fill="rgb(223,220,35)"/><text x="376.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.60%)</title><rect x="373" y="356" width="7" height="15" fill="rgb(222,179,19)"/><text x="376.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.60%)</title><rect x="373" y="372" width="7" height="15" fill="rgb(232,28,45)"/><text x="376.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.60%)</title><rect x="373" y="388" width="7" height="15" fill="rgb(241,176,3)"/><text x="376.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.60%)</title><rect x="373" y="404" width="7" height="15" fill="rgb(253,212,28)"/><text x="376.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.60%)</title><rect x="373" y="420" width="7" height="15" fill="rgb(230,148,41)"/><text x="376.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.36%)</title><rect x="376" y="436" width="4" height="15" fill="rgb(230,197,9)"/><text x="379.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="376" y="452" width="4" height="15" fill="rgb(220,125,33)"/><text x="379.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.36%)</title><rect x="376" y="468" width="4" height="15" fill="rgb(245,110,24)"/><text x="379.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="376" y="484" width="4" height="15" fill="rgb(226,26,16)"/><text x="379.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="376" y="500" width="4" height="15" fill="rgb(254,219,51)"/><text x="379.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="376" y="516" width="4" height="15" fill="rgb(243,169,51)"/><text x="379.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="376" y="532" width="4" height="15" fill="rgb(209,12,5)"/><text x="379.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="376" y="548" width="4" height="15" fill="rgb(253,127,28)"/><text x="379.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="376" y="564" width="4" height="15" fill="rgb(251,17,23)"/><text x="379.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.36%)</title><rect x="376" y="580" width="4" height="15" fill="rgb(246,156,37)"/><text x="379.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="376" y="596" width="4" height="15" fill="rgb(217,103,13)"/><text x="379.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="376" y="612" width="4" height="15" fill="rgb(226,218,48)"/><text x="379.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="376" y="628" width="4" height="15" fill="rgb(233,140,34)"/><text x="379.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="376" y="644" width="4" height="15" fill="rgb(242,157,52)"/><text x="379.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="376" y="660" width="4" height="15" fill="rgb(234,24,42)"/><text x="379.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.36%)</title><rect x="376" y="676" width="4" height="15" fill="rgb(209,127,31)"/><text x="379.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="376" y="692" width="4" height="15" fill="rgb(236,26,41)"/><text x="379.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="376" y="708" width="4" height="15" fill="rgb(213,93,17)"/><text x="379.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="376" y="724" width="4" height="15" fill="rgb(210,12,42)"/><text x="379.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="376" y="740" width="4" height="15" fill="rgb(205,86,16)"/><text x="379.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="376" y="756" width="4" height="15" fill="rgb(222,211,36)"/><text x="379.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.36%)</title><rect x="376" y="772" width="4" height="15" fill="rgb(247,58,43)"/><text x="379.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="376" y="788" width="4" height="15" fill="rgb(215,79,3)"/><text x="379.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="376" y="804" width="4" height="15" fill="rgb(218,182,29)"/><text x="379.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="376" y="820" width="4" height="15" fill="rgb(237,112,30)"/><text x="379.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="376" y="836" width="4" height="15" fill="rgb(217,10,34)"/><text x="379.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="376" y="852" width="4" height="15" fill="rgb(215,87,21)"/><text x="379.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.36%)</title><rect x="376" y="868" width="4" height="15" fill="rgb(217,79,36)"/><text x="379.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="376" y="884" width="4" height="15" fill="rgb(252,134,20)"/><text x="379.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.36%)</title><rect x="376" y="900" width="4" height="15" fill="rgb(233,95,14)"/><text x="379.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="376" y="916" width="4" height="15" fill="rgb(252,161,44)"/><text x="379.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="376" y="932" width="4" height="15" fill="rgb(248,137,3)"/><text x="379.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="376" y="948" width="4" height="15" fill="rgb(207,208,49)"/><text x="379.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="376" y="964" width="4" height="15" fill="rgb(221,229,21)"/><text x="379.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="376" y="980" width="4" height="15" fill="rgb(214,83,9)"/><text x="379.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="376" y="996" width="4" height="15" fill="rgb(252,201,34)"/><text x="379.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.36%)</title><rect x="376" y="1012" width="4" height="15" fill="rgb(225,177,6)"/><text x="379.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="376" y="1028" width="4" height="15" fill="rgb(223,133,30)"/><text x="379.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="376" y="1044" width="4" height="15" fill="rgb(242,154,28)"/><text x="379.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="376" y="1060" width="4" height="15" fill="rgb(218,8,21)"/><text x="379.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="376" y="1076" width="4" height="15" fill="rgb(247,148,28)"/><text x="379.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="376" y="1092" width="4" height="15" fill="rgb(247,159,6)"/><text x="379.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.24%)</title><rect x="377" y="1108" width="3" height="15" fill="rgb(241,158,18)"/><text x="380.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.24%)</title><rect x="377" y="1124" width="3" height="15" fill="rgb(209,70,34)"/><text x="380.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="377" y="1140" width="3" height="15" fill="rgb(245,171,22)"/><text x="380.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="377" y="1156" width="3" height="15" fill="rgb(237,36,8)"/><text x="380.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="377" y="1172" width="3" height="15" fill="rgb(254,218,26)"/><text x="380.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="377" y="1188" width="3" height="15" fill="rgb(232,100,22)"/><text x="380.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="377" y="1204" width="3" height="15" fill="rgb(231,214,25)"/><text x="380.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="377" y="1220" width="3" height="15" fill="rgb(231,168,25)"/><text x="380.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.24%)</title><rect x="377" y="1236" width="3" height="15" fill="rgb(254,33,24)"/><text x="380.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.24%)</title><rect x="377" y="1252" width="3" height="15" fill="rgb(253,90,12)"/><text x="380.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="377" y="1268" width="3" height="15" fill="rgb(246,16,26)"/><text x="380.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="377" y="1284" width="3" height="15" fill="rgb(249,165,50)"/><text x="380.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="377" y="1300" width="3" height="15" fill="rgb(242,165,45)"/><text x="380.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="377" y="1316" width="3" height="15" fill="rgb(231,123,26)"/><text x="380.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="377" y="1332" width="3" height="15" fill="rgb(249,113,5)"/><text x="380.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="377" y="1348" width="3" height="15" fill="rgb(217,154,29)"/><text x="380.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.24%)</title><rect x="377" y="1364" width="3" height="15" fill="rgb(226,120,16)"/><text x="380.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="377" y="1380" width="3" height="15" fill="rgb(246,150,30)"/><text x="380.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="377" y="1396" width="3" height="15" fill="rgb(244,97,12)"/><text x="380.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="377" y="1412" width="3" height="15" fill="rgb(208,107,34)"/><text x="380.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="377" y="1428" width="3" height="15" fill="rgb(253,190,45)"/><text x="380.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="377" y="1444" width="3" height="15" fill="rgb(212,43,1)"/><text x="380.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.24%)</title><rect x="377" y="1460" width="3" height="15" fill="rgb(225,163,2)"/><text x="380.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.24%)</title><rect x="377" y="1476" width="3" height="15" fill="rgb(249,119,17)"/><text x="380.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:120) (1 samples, 0.12%)</title><rect x="379" y="1492" width="1" height="15" fill="rgb(211,13,29)"/><text x="382.00" y="1502.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.12%)</title><rect x="380" y="116" width="1" height="15" fill="rgb(223,47,2)"/><text x="383.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.12%)</title><rect x="380" y="132" width="1" height="15" fill="rgb(243,74,37)"/><text x="383.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.12%)</title><rect x="380" y="148" width="1" height="15" fill="rgb(223,0,16)"/><text x="383.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.12%)</title><rect x="380" y="164" width="1" height="15" fill="rgb(232,50,30)"/><text x="383.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.12%)</title><rect x="380" y="180" width="1" height="15" fill="rgb(243,61,29)"/><text x="383.00" y="190.50"></text></g><g><title>convert_sklearn_svm (mlprodict/onnx_conv/sklconv/svm_converters.py:100) (1 samples, 0.12%)</title><rect x="380" y="196" width="1" height="15" fill="rgb(216,44,38)"/><text x="383.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.12%)</title><rect x="380" y="212" width="1" height="15" fill="rgb(249,51,32)"/><text x="383.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.12%)</title><rect x="380" y="228" width="1" height="15" fill="rgb(212,207,36)"/><text x="383.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="380" y="244" width="1" height="15" fill="rgb(250,13,22)"/><text x="383.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.12%)</title><rect x="380" y="260" width="1" height="15" fill="rgb(209,204,15)"/><text x="383.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:156) (1 samples, 0.12%)</title><rect x="380" y="276" width="1" height="15" fill="rgb(239,149,0)"/><text x="383.00" y="286.50"></text></g><g><title>google::protobuf::python::repeated_scalar_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="380" y="292" width="1" height="15" fill="rgb(220,140,20)"/><text x="383.00" y="302.50"></text></g><g><title>google::protobuf::python::repeated_scalar_container::Append (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="380" y="308" width="1" height="15" fill="rgb(224,121,49)"/><text x="383.00" y="318.50"></text></g><g><title>google::protobuf::python::CheckAndGetFloat (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="380" y="324" width="1" height="15" fill="rgb(207,19,40)"/><text x="383.00" y="334.50"></text></g><g><title>google::protobuf::python::CheckAndGetDouble (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="380" y="340" width="1" height="15" fill="rgb(216,179,39)"/><text x="383.00" y="350.50"></text></g><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:28) (2 samples, 0.24%)</title><rect x="380" y="84" width="3" height="15" fill="rgb(221,80,41)"/><text x="383.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.24%)</title><rect x="380" y="100" width="3" height="15" fill="rgb(253,34,21)"/><text x="383.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.12%)</title><rect x="381" y="116" width="2" height="15" fill="rgb(230,48,30)"/><text x="384.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.12%)</title><rect x="381" y="132" width="2" height="15" fill="rgb(251,135,33)"/><text x="384.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.12%)</title><rect x="381" y="148" width="2" height="15" fill="rgb(206,206,1)"/><text x="384.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.12%)</title><rect x="381" y="164" width="2" height="15" fill="rgb(221,159,35)"/><text x="384.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.12%)</title><rect x="381" y="180" width="2" height="15" fill="rgb(234,3,32)"/><text x="384.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.12%)</title><rect x="381" y="196" width="2" height="15" fill="rgb(243,11,48)"/><text x="384.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="381" y="212" width="2" height="15" fill="rgb(236,13,14)"/><text x="384.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="381" y="228" width="2" height="15" fill="rgb(246,91,29)"/><text x="384.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="381" y="244" width="2" height="15" fill="rgb(225,66,42)"/><text x="384.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="381" y="260" width="2" height="15" fill="rgb(225,53,28)"/><text x="384.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="381" y="276" width="2" height="15" fill="rgb(211,138,33)"/><text x="384.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.12%)</title><rect x="381" y="292" width="2" height="15" fill="rgb(238,191,51)"/><text x="384.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="381" y="308" width="2" height="15" fill="rgb(213,217,15)"/><text x="384.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="381" y="324" width="2" height="15" fill="rgb(210,92,51)"/><text x="384.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="381" y="340" width="2" height="15" fill="rgb(243,172,15)"/><text x="384.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="381" y="356" width="2" height="15" fill="rgb(222,129,6)"/><text x="384.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="381" y="372" width="2" height="15" fill="rgb(227,181,6)"/><text x="384.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.12%)</title><rect x="381" y="388" width="2" height="15" fill="rgb(222,138,8)"/><text x="384.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.12%)</title><rect x="381" y="404" width="2" height="15" fill="rgb(223,78,25)"/><text x="384.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.12%)</title><rect x="381" y="420" width="2" height="15" fill="rgb(248,59,44)"/><text x="384.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.12%)</title><rect x="381" y="436" width="2" height="15" fill="rgb(226,132,2)"/><text x="384.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.12%)</title><rect x="381" y="452" width="2" height="15" fill="rgb(212,41,3)"/><text x="384.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:136) (1 samples, 0.12%)</title><rect x="381" y="468" width="2" height="15" fill="rgb(230,23,53)"/><text x="384.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.12%)</title><rect x="381" y="484" width="2" height="15" fill="rgb(210,19,42)"/><text x="384.00" y="494.50"></text></g><g><title>0x7f00bea43c29 (?) (1 samples, 0.12%)</title><rect x="383" y="244" width="1" height="15" fill="rgb(249,60,28)"/><text x="386.00" y="254.50"></text></g><g><title>0x7f00bea4ad9e (?) (1 samples, 0.12%)</title><rect x="383" y="260" width="1" height="15" fill="rgb(246,4,16)"/><text x="386.00" y="270.50"></text></g><g><title>0x7f00bea4ac56 (?) (1 samples, 0.12%)</title><rect x="383" y="276" width="1" height="15" fill="rgb(209,54,24)"/><text x="386.00" y="286.50"></text></g><g><title>0x7f00bea50ac7 (?) (1 samples, 0.12%)</title><rect x="383" y="292" width="1" height="15" fill="rgb(243,60,53)"/><text x="386.00" y="302.50"></text></g><g><title>0x7f00bea4fc5c (?) (1 samples, 0.12%)</title><rect x="383" y="308" width="1" height="15" fill="rgb(230,228,30)"/><text x="386.00" y="318.50"></text></g><g><title>0x7f00bea393cb (?) (1 samples, 0.12%)</title><rect x="383" y="324" width="1" height="15" fill="rgb(206,164,49)"/><text x="386.00" y="334.50"></text></g><g><title>tanhf32x (libm-2.29.so) (1 samples, 0.12%)</title><rect x="383" y="340" width="1" height="15" fill="rgb(235,3,4)"/><text x="386.00" y="350.50"></text></g><g><title>expm1f64 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="383" y="356" width="1" height="15" fill="rgb(226,85,24)"/><text x="386.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (1 samples, 0.12%)</title><rect x="386" y="468" width="1" height="15" fill="rgb(233,68,48)"/><text x="389.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:416) (1 samples, 0.12%)</title><rect x="387" y="468" width="2" height="15" fill="rgb(232,102,54)"/><text x="390.00" y="478.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float&gt; (alloc_traits.h:475) (1 samples, 0.12%)</title><rect x="387" y="484" width="2" height="15" fill="rgb(208,212,6)"/><text x="390.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float&gt; (new_allocator.h:120) (1 samples, 0.12%)</title><rect x="387" y="500" width="2" height="15" fill="rgb(211,99,6)"/><text x="390.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (4 samples, 0.48%)</title><rect x="384" y="452" width="6" height="15" fill="rgb(226,67,48)"/><text x="387.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.12%)</title><rect x="389" y="468" width="1" height="15" fill="rgb(247,8,38)"/><text x="392.00" y="478.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="389" y="484" width="1" height="15" fill="rgb(216,3,42)"/><text x="392.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:267) (1 samples, 0.12%)</title><rect x="391" y="468" width="2" height="15" fill="rgb(213,127,22)"/><text x="394.00" y="478.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:57) (2 samples, 0.24%)</title><rect x="394" y="484" width="3" height="15" fill="rgb(205,153,23)"/><text x="397.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:289) (5 samples, 0.60%)</title><rect x="393" y="468" width="7" height="15" fill="rgb(248,56,9)"/><text x="396.00" y="478.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:58) (2 samples, 0.24%)</title><rect x="397" y="484" width="3" height="15" fill="rgb(232,131,52)"/><text x="400.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:290) (29 samples, 3.50%)</title><rect x="400" y="468" width="41" height="15" fill="rgb(214,228,18)"/><text x="403.00" y="478.50">Run..</text></g><g><title>tanhf32x (libm-2.29.so) (29 samples, 3.50%)</title><rect x="400" y="484" width="41" height="15" fill="rgb(219,66,33)"/><text x="403.00" y="494.50">tan..</text></g><g><title>expm1f64 (libm-2.29.so) (21 samples, 2.54%)</title><rect x="411" y="500" width="30" height="15" fill="rgb(221,72,46)"/><text x="414.00" y="510.50">ex..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (39 samples, 4.71%)</title><rect x="390" y="452" width="56" height="15" fill="rgb(223,32,49)"/><text x="393.00" y="462.50">Runti..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:301) (3 samples, 0.36%)</title><rect x="441" y="468" width="5" height="15" fill="rgb(251,228,26)"/><text x="444.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:410) (1 samples, 0.12%)</title><rect x="446" y="452" width="1" height="15" fill="rgb(220,28,43)"/><text x="449.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:916) (1 samples, 0.12%)</title><rect x="446" y="468" width="1" height="15" fill="rgb(254,37,9)"/><text x="449.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (2 samples, 0.24%)</title><rect x="447" y="452" width="3" height="15" fill="rgb(213,104,44)"/><text x="450.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (1 samples, 0.12%)</title><rect x="450" y="500" width="1" height="15" fill="rgb(251,169,26)"/><text x="453.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (2 samples, 0.24%)</title><rect x="450" y="452" width="3" height="15" fill="rgb(221,211,0)"/><text x="453.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (2 samples, 0.24%)</title><rect x="450" y="468" width="3" height="15" fill="rgb(242,145,25)"/><text x="453.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (2 samples, 0.24%)</title><rect x="450" y="484" width="3" height="15" fill="rgb(213,118,48)"/><text x="453.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.12%)</title><rect x="451" y="500" width="2" height="15" fill="rgb(211,144,28)"/><text x="454.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="451" y="516" width="2" height="15" fill="rgb(218,123,8)"/><text x="454.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:452) (1 samples, 0.12%)</title><rect x="453" y="452" width="1" height="15" fill="rgb(243,134,15)"/><text x="456.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:103) (1 samples, 0.12%)</title><rect x="453" y="468" width="1" height="15" fill="rgb(242,152,34)"/><text x="456.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:80) (1 samples, 0.12%)</title><rect x="453" y="484" width="1" height="15" fill="rgb(231,108,54)"/><text x="456.00" y="494.50"></text></g><g><title>0x7f00fda53e4e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="453" y="500" width="1" height="15" fill="rgb(219,37,39)"/><text x="456.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.12%)</title><rect x="454" y="500" width="2" height="15" fill="rgb(215,158,0)"/><text x="457.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.12%)</title><rect x="454" y="516" width="2" height="15" fill="rgb(213,119,9)"/><text x="457.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.12%)</title><rect x="454" y="532" width="2" height="15" fill="rgb(237,107,11)"/><text x="457.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.12%)</title><rect x="454" y="548" width="2" height="15" fill="rgb(233,101,48)"/><text x="457.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="454" y="564" width="2" height="15" fill="rgb(243,202,28)"/><text x="457.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="454" y="580" width="2" height="15" fill="rgb(221,191,31)"/><text x="457.00" y="590.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (2 samples, 0.24%)</title><rect x="454" y="484" width="3" height="15" fill="rgb(237,180,17)"/><text x="457.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.12%)</title><rect x="456" y="500" width="1" height="15" fill="rgb(244,26,26)"/><text x="459.00" y="510.50"></text></g><g><title>0x7f00fd8f4d62 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="456" y="516" width="1" height="15" fill="rgb(253,207,7)"/><text x="459.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:313) (1 samples, 0.12%)</title><rect x="457" y="484" width="1" height="15" fill="rgb(216,131,2)"/><text x="460.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.12%)</title><rect x="457" y="500" width="1" height="15" fill="rgb(209,90,38)"/><text x="460.00" y="510.50"></text></g><g><title>0x7f00fd8d4bd8 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="457" y="516" width="1" height="15" fill="rgb(221,39,48)"/><text x="460.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:334) (1 samples, 0.12%)</title><rect x="458" y="484" width="2" height="15" fill="rgb(205,126,32)"/><text x="461.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:349) (1 samples, 0.12%)</title><rect x="460" y="484" width="1" height="15" fill="rgb(213,52,39)"/><text x="463.00" y="494.50"></text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:18) (56 samples, 6.76%)</title><rect x="383" y="100" width="80" height="15" fill="rgb(226,86,22)"/><text x="386.00" y="110.50">profile (..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (56 samples, 6.76%)</title><rect x="383" y="116" width="80" height="15" fill="rgb(208,55,41)"/><text x="386.00" y="126.50">time_pred..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (56 samples, 6.76%)</title><rect x="383" y="132" width="80" height="15" fill="rgb(233,46,34)"/><text x="386.00" y="142.50">&lt;lambda&gt; ..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (56 samples, 6.76%)</title><rect x="383" y="148" width="80" height="15" fill="rgb(224,30,37)"/><text x="386.00" y="158.50">run (mlpr..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (56 samples, 6.76%)</title><rect x="383" y="164" width="80" height="15" fill="rgb(220,14,33)"/><text x="386.00" y="174.50">_run_sequ..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (56 samples, 6.76%)</title><rect x="383" y="180" width="80" height="15" fill="rgb(227,98,49)"/><text x="386.00" y="190.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (56 samples, 6.76%)</title><rect x="383" y="196" width="80" height="15" fill="rgb(217,77,51)"/><text x="386.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (56 samples, 6.76%)</title><rect x="383" y="212" width="80" height="15" fill="rgb(235,130,47)"/><text x="386.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (56 samples, 6.76%)</title><rect x="383" y="228" width="80" height="15" fill="rgb(221,129,51)"/><text x="386.00" y="238.50">_run (mlp..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (55 samples, 6.64%)</title><rect x="384" y="244" width="79" height="15" fill="rgb(212,117,34)"/><text x="387.00" y="254.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (55 samples, 6.64%)</title><rect x="384" y="260" width="79" height="15" fill="rgb(230,33,4)"/><text x="387.00" y="270.50">void pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (55 samples, 6.64%)</title><rect x="384" y="276" width="79" height="15" fill="rgb(212,191,18)"/><text x="387.00" y="286.50">void pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (55 samples, 6.64%)</title><rect x="384" y="292" width="79" height="15" fill="rgb(254,192,54)"/><text x="387.00" y="302.50">pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (55 samples, 6.64%)</title><rect x="384" y="308" width="79" height="15" fill="rgb(212,46,53)"/><text x="387.00" y="318.50">pybind11:..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (55 samples, 6.64%)</title><rect x="384" y="324" width="79" height="15" fill="rgb(217,117,30)"/><text x="387.00" y="334.50">pybind11:..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (55 samples, 6.64%)</title><rect x="384" y="340" width="79" height="15" fill="rgb(248,216,39)"/><text x="387.00" y="350.50">pybind11:..</text></g><g><title>pybind11::array::~array (numpy.h:538) (55 samples, 6.64%)</title><rect x="384" y="356" width="79" height="15" fill="rgb(241,61,35)"/><text x="387.00" y="366.50">pybind11:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (55 samples, 6.64%)</title><rect x="384" y="372" width="79" height="15" fill="rgb(247,83,34)"/><text x="387.00" y="382.50">pybind11:..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (55 samples, 6.64%)</title><rect x="384" y="388" width="79" height="15" fill="rgb(243,83,8)"/><text x="387.00" y="398.50">pybind11:..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (55 samples, 6.64%)</title><rect x="384" y="404" width="79" height="15" fill="rgb(246,75,9)"/><text x="387.00" y="414.50">pybind11:..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (55 samples, 6.64%)</title><rect x="384" y="420" width="79" height="15" fill="rgb(234,207,24)"/><text x="387.00" y="430.50">RuntimeSV..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (55 samples, 6.64%)</title><rect x="384" y="436" width="79" height="15" fill="rgb(251,38,30)"/><text x="387.00" y="446.50">pybind11:..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (6 samples, 0.72%)</title><rect x="454" y="452" width="9" height="15" fill="rgb(214,183,30)"/><text x="457.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (6 samples, 0.72%)</title><rect x="454" y="468" width="9" height="15" fill="rgb(210,15,29)"/><text x="457.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:354) (1 samples, 0.12%)</title><rect x="461" y="484" width="2" height="15" fill="rgb(218,191,12)"/><text x="464.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (1 samples, 0.12%)</title><rect x="463" y="196" width="1" height="15" fill="rgb(213,32,29)"/><text x="466.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.12%)</title><rect x="463" y="212" width="1" height="15" fill="rgb(217,42,45)"/><text x="466.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.12%)</title><rect x="463" y="228" width="1" height="15" fill="rgb(230,188,7)"/><text x="466.00" y="238.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.12%)</title><rect x="463" y="244" width="1" height="15" fill="rgb(226,125,23)"/><text x="466.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.12%)</title><rect x="463" y="260" width="1" height="15" fill="rgb(216,74,36)"/><text x="466.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.12%)</title><rect x="463" y="276" width="1" height="15" fill="rgb(222,113,52)"/><text x="466.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.12%)</title><rect x="463" y="292" width="1" height="15" fill="rgb(252,64,45)"/><text x="466.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.12%)</title><rect x="463" y="308" width="1" height="15" fill="rgb(230,128,19)"/><text x="466.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.12%)</title><rect x="463" y="324" width="1" height="15" fill="rgb(237,128,7)"/><text x="466.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.12%)</title><rect x="463" y="340" width="1" height="15" fill="rgb(246,134,54)"/><text x="466.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.12%)</title><rect x="463" y="356" width="1" height="15" fill="rgb(213,53,52)"/><text x="466.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="463" y="372" width="1" height="15" fill="rgb(234,4,20)"/><text x="466.00" y="382.50"></text></g><g><title>0x7f00fd8d6028 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="463" y="388" width="1" height="15" fill="rgb(246,15,11)"/><text x="466.00" y="398.50"></text></g><g><title>0x7f00fd8d3b9b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="463" y="404" width="1" height="15" fill="rgb(249,79,5)"/><text x="466.00" y="414.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:390) (1 samples, 0.12%)</title><rect x="464" y="452" width="2" height="15" fill="rgb(249,122,34)"/><text x="467.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:259) (1 samples, 0.12%)</title><rect x="464" y="468" width="2" height="15" fill="rgb(207,67,22)"/><text x="467.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:125) (1 samples, 0.12%)</title><rect x="464" y="484" width="2" height="15" fill="rgb(209,191,6)"/><text x="467.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_impl::_Vector_impl (stl_vector.h:87) (1 samples, 0.12%)</title><rect x="464" y="500" width="2" height="15" fill="rgb(228,126,5)"/><text x="467.00" y="510.50"></text></g><g><title>0x7f00bea33810 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="470" y="468" width="1" height="15" fill="rgb(226,123,46)"/><text x="473.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (1 samples, 0.12%)</title><rect x="471" y="468" width="2" height="15" fill="rgb(209,8,28)"/><text x="474.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1426) (1 samples, 0.12%)</title><rect x="471" y="484" width="2" height="15" fill="rgb(218,45,33)"/><text x="474.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (2 samples, 0.24%)</title><rect x="473" y="468" width="3" height="15" fill="rgb(237,227,40)"/><text x="476.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (2 samples, 0.24%)</title><rect x="473" y="484" width="3" height="15" fill="rgb(226,162,29)"/><text x="476.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (2 samples, 0.24%)</title><rect x="473" y="500" width="3" height="15" fill="rgb(233,97,49)"/><text x="476.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (2 samples, 0.24%)</title><rect x="473" y="516" width="3" height="15" fill="rgb(224,139,4)"/><text x="476.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.24%)</title><rect x="473" y="532" width="3" height="15" fill="rgb(226,166,51)"/><text x="476.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.24%)</title><rect x="473" y="548" width="3" height="15" fill="rgb(222,199,13)"/><text x="476.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:416) (1 samples, 0.12%)</title><rect x="476" y="468" width="1" height="15" fill="rgb(227,117,6)"/><text x="479.00" y="478.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float&gt; (alloc_traits.h:475) (1 samples, 0.12%)</title><rect x="476" y="484" width="1" height="15" fill="rgb(224,173,13)"/><text x="479.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float&gt; (new_allocator.h:120) (1 samples, 0.12%)</title><rect x="476" y="500" width="1" height="15" fill="rgb(209,185,53)"/><text x="479.00" y="510.50"></text></g><g><title>0x7f00fd8f4d62 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="477" y="484" width="1" height="15" fill="rgb(252,76,46)"/><text x="480.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (2 samples, 0.24%)</title><rect x="477" y="468" width="3" height="15" fill="rgb(252,71,52)"/><text x="480.00" y="478.50"></text></g><g><title>0x7f00fd8f4e5f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="478" y="484" width="2" height="15" fill="rgb(221,219,47)"/><text x="481.00" y="494.50"></text></g><g><title>0x7f00bea332a0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="480" y="484" width="1" height="15" fill="rgb(215,82,42)"/><text x="483.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="481" y="484" width="2" height="15" fill="rgb(253,14,8)"/><text x="484.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (13 samples, 1.57%)</title><rect x="466" y="452" width="18" height="15" fill="rgb(242,193,24)"/><text x="469.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (3 samples, 0.36%)</title><rect x="480" y="468" width="4" height="15" fill="rgb(242,96,29)"/><text x="483.00" y="478.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="483" y="484" width="1" height="15" fill="rgb(209,111,10)"/><text x="486.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:267) (5 samples, 0.60%)</title><rect x="487" y="468" width="7" height="15" fill="rgb(216,149,49)"/><text x="490.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:272) (4 samples, 0.48%)</title><rect x="494" y="468" width="6" height="15" fill="rgb(209,192,31)"/><text x="497.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:274) (1 samples, 0.12%)</title><rect x="500" y="468" width="1" height="15" fill="rgb(220,138,14)"/><text x="503.00" y="478.50"></text></g><g><title>0x7f00bea332b0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="505" y="484" width="2" height="15" fill="rgb(248,139,22)"/><text x="508.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:48) (3 samples, 0.36%)</title><rect x="507" y="484" width="4" height="15" fill="rgb(249,84,38)"/><text x="510.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:50) (1 samples, 0.12%)</title><rect x="511" y="484" width="2" height="15" fill="rgb(224,197,39)"/><text x="514.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:57) (2 samples, 0.24%)</title><rect x="513" y="484" width="2" height="15" fill="rgb(239,101,5)"/><text x="516.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:58) (8 samples, 0.97%)</title><rect x="515" y="484" width="12" height="15" fill="rgb(250,139,35)"/><text x="518.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:289) (21 samples, 2.54%)</title><rect x="501" y="468" width="30" height="15" fill="rgb(251,10,13)"/><text x="504.00" y="478.50">Ru..</text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:60) (3 samples, 0.36%)</title><rect x="527" y="484" width="4" height="15" fill="rgb(215,140,43)"/><text x="530.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (190 samples, 22.95%)</title><rect x="484" y="452" width="271" height="15" fill="rgb(249,53,16)"/><text x="487.00" y="462.50">RuntimeSVMClassifier&lt;float&gt;::compute..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:290) (157 samples, 18.96%)</title><rect x="531" y="468" width="224" height="15" fill="rgb(223,10,25)"/><text x="534.00" y="478.50">RuntimeSVMClassifier&lt;float&gt;::..</text></g><g><title>tanhf32x (libm-2.29.so) (156 samples, 18.84%)</title><rect x="533" y="484" width="222" height="15" fill="rgb(235,185,24)"/><text x="536.00" y="494.50">tanhf32x (libm-2.29.so)</text></g><g><title>expm1f64 (libm-2.29.so) (119 samples, 14.37%)</title><rect x="585" y="500" width="170" height="15" fill="rgb(207,146,20)"/><text x="588.00" y="510.50">expm1f64 (libm-2.29.so)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:410) (1 samples, 0.12%)</title><rect x="755" y="452" width="1" height="15" fill="rgb(217,190,18)"/><text x="758.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:918) (1 samples, 0.12%)</title><rect x="755" y="468" width="1" height="15" fill="rgb(235,132,0)"/><text x="758.00" y="478.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float const&amp;&gt; (alloc_traits.h:475) (1 samples, 0.12%)</title><rect x="755" y="484" width="1" height="15" fill="rgb(219,131,26)"/><text x="758.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float const&amp;&gt; (new_allocator.h:120) (1 samples, 0.12%)</title><rect x="755" y="500" width="1" height="15" fill="rgb(222,112,3)"/><text x="758.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:426) (6 samples, 0.72%)</title><rect x="756" y="452" width="9" height="15" fill="rgb(222,152,2)"/><text x="759.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (1 samples, 0.12%)</title><rect x="765" y="452" width="1" height="15" fill="rgb(207,108,42)"/><text x="768.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (2 samples, 0.24%)</title><rect x="766" y="500" width="3" height="15" fill="rgb(242,88,49)"/><text x="769.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (2 samples, 0.24%)</title><rect x="766" y="516" width="3" height="15" fill="rgb(227,39,25)"/><text x="769.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (2 samples, 0.24%)</title><rect x="766" y="532" width="3" height="15" fill="rgb(245,92,1)"/><text x="769.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (2 samples, 0.24%)</title><rect x="766" y="548" width="3" height="15" fill="rgb(212,209,22)"/><text x="769.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.24%)</title><rect x="766" y="564" width="3" height="15" fill="rgb(218,199,53)"/><text x="769.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="768" y="580" width="1" height="15" fill="rgb(251,188,4)"/><text x="771.00" y="590.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (3 samples, 0.36%)</title><rect x="766" y="452" width="5" height="15" fill="rgb(227,162,26)"/><text x="769.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (3 samples, 0.36%)</title><rect x="766" y="468" width="5" height="15" fill="rgb(215,27,38)"/><text x="769.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (3 samples, 0.36%)</title><rect x="766" y="484" width="5" height="15" fill="rgb(241,222,19)"/><text x="769.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.12%)</title><rect x="769" y="500" width="2" height="15" fill="rgb(248,56,14)"/><text x="772.00" y="510.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="769" y="516" width="2" height="15" fill="rgb(208,104,30)"/><text x="772.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:452) (2 samples, 0.24%)</title><rect x="771" y="452" width="2" height="15" fill="rgb(221,6,34)"/><text x="774.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:103) (2 samples, 0.24%)</title><rect x="771" y="468" width="2" height="15" fill="rgb(228,174,3)"/><text x="774.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:80) (2 samples, 0.24%)</title><rect x="771" y="484" width="2" height="15" fill="rgb(209,22,48)"/><text x="774.00" y="494.50"></text></g><g><title>0x7f00fda53e53 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="772" y="500" width="1" height="15" fill="rgb(235,212,22)"/><text x="775.00" y="510.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (1 samples, 0.12%)</title><rect x="773" y="484" width="2" height="15" fill="rgb(217,125,19)"/><text x="776.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:438) (1 samples, 0.12%)</title><rect x="773" y="500" width="2" height="15" fill="rgb(253,170,47)"/><text x="776.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h:177) (1 samples, 0.12%)</title><rect x="773" y="516" width="2" height="15" fill="rgb(239,57,10)"/><text x="776.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:333) (1 samples, 0.12%)</title><rect x="775" y="484" width="1" height="15" fill="rgb(246,168,38)"/><text x="778.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (3 samples, 0.36%)</title><rect x="776" y="484" width="4" height="15" fill="rgb(253,72,18)"/><text x="779.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:353) (1 samples, 0.12%)</title><rect x="780" y="484" width="2" height="15" fill="rgb(244,143,35)"/><text x="783.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (228 samples, 27.54%)</title><rect x="463" y="180" width="325" height="15" fill="rgb(231,167,20)"/><text x="466.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (227 samples, 27.42%)</title><rect x="464" y="196" width="324" height="15" fill="rgb(226,142,1)"/><text x="467.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:381)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (227 samples, 27.42%)</title><rect x="464" y="212" width="324" height="15" fill="rgb(212,29,32)"/><text x="467.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:269)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (227 samples, 27.42%)</title><rect x="464" y="228" width="324" height="15" fill="rgb(212,19,11)"/><text x="467.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_class..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (227 samples, 27.42%)</title><rect x="464" y="244" width="324" height="15" fill="rgb(252,94,5)"/><text x="467.00" y="254.50">pybind11::cpp_function::dispatcher (pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (227 samples, 27.42%)</title><rect x="464" y="260" width="324" height="15" fill="rgb(253,138,22)"/><text x="467.00" y="270.50">void pybind11::cpp_function::initialize&lt;pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (227 samples, 27.42%)</title><rect x="464" y="276" width="324" height="15" fill="rgb(254,102,25)"/><text x="467.00" y="286.50">void pybind11::cpp_function::initialize&lt;pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (227 samples, 27.42%)</title><rect x="464" y="292" width="324" height="15" fill="rgb(225,181,42)"/><text x="467.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeSV..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (227 samples, 27.42%)</title><rect x="464" y="308" width="324" height="15" fill="rgb(239,219,17)"/><text x="467.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeSV..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (227 samples, 27.42%)</title><rect x="464" y="324" width="324" height="15" fill="rgb(208,14,2)"/><text x="467.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (227 samples, 27.42%)</title><rect x="464" y="340" width="324" height="15" fill="rgb(229,82,49)"/><text x="467.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (num..</text></g><g><title>pybind11::array::~array (numpy.h:538) (227 samples, 27.42%)</title><rect x="464" y="356" width="324" height="15" fill="rgb(229,124,30)"/><text x="467.00" y="366.50">pybind11::array::~array (numpy.h:538)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (227 samples, 27.42%)</title><rect x="464" y="372" width="324" height="15" fill="rgb(228,128,8)"/><text x="467.00" y="382.50">pybind11::buffer::~buffer (pytypes.h:1311)</text></g><g><title>pybind11::object::~object (pytypes.h:240) (227 samples, 27.42%)</title><rect x="464" y="388" width="324" height="15" fill="rgb(205,133,24)"/><text x="467.00" y="398.50">pybind11::object::~object (pytypes.h:240)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (227 samples, 27.42%)</title><rect x="464" y="404" width="324" height="15" fill="rgb(225,75,48)"/><text x="467.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h:197)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (227 samples, 27.42%)</title><rect x="464" y="420" width="324" height="15" fill="rgb(242,178,45)"/><text x="467.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlpro..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (227 samples, 27.42%)</title><rect x="464" y="436" width="324" height="15" fill="rgb(207,117,17)"/><text x="467.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_r..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (10 samples, 1.21%)</title><rect x="773" y="452" width="15" height="15" fill="rgb(214,173,19)"/><text x="776.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (10 samples, 1.21%)</title><rect x="773" y="468" width="15" height="15" fill="rgb(247,162,10)"/><text x="776.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:354) (4 samples, 0.48%)</title><rect x="782" y="484" width="6" height="15" fill="rgb(250,102,17)"/><text x="785.00" y="494.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:45) (287 samples, 34.66%)</title><rect x="380" y="52" width="409" height="15" fill="rgb(234,104,25)"/><text x="383.00" y="62.50">&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kernel..</text></g><g><title>profile_pyrt (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:44) (287 samples, 34.66%)</title><rect x="380" y="68" width="409" height="15" fill="rgb(240,179,8)"/><text x="383.00" y="78.50">profile_pyrt (bench_SVC_sigmoid_b_cl_probabilityTrue_ke..</text></g><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:29) (285 samples, 34.42%)</title><rect x="383" y="84" width="406" height="15" fill="rgb(231,183,31)"/><text x="386.00" y="94.50">setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_k..</text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:23) (229 samples, 27.66%)</title><rect x="463" y="100" width="326" height="15" fill="rgb(208,90,1)"/><text x="466.00" y="110.50">profile (bench_SVC_sigmoid_b_cl_probabilityT..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (229 samples, 27.66%)</title><rect x="463" y="116" width="326" height="15" fill="rgb(251,176,52)"/><text x="466.00" y="126.50">time_predict (mlprodict/asv_benchmark/common..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (229 samples, 27.66%)</title><rect x="463" y="132" width="326" height="15" fill="rgb(253,201,9)"/><text x="466.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (229 samples, 27.66%)</title><rect x="463" y="148" width="326" height="15" fill="rgb(222,183,26)"/><text x="466.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (229 samples, 27.66%)</title><rect x="463" y="164" width="326" height="15" fill="rgb(219,119,8)"/><text x="466.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.12%)</title><rect x="788" y="180" width="1" height="15" fill="rgb(206,97,12)"/><text x="791.00" y="190.50"></text></g><g><title>0x7f00bd904ff9 (?) (1 samples, 0.12%)</title><rect x="789" y="212" width="1" height="15" fill="rgb(216,65,48)"/><text x="792.00" y="222.50"></text></g><g><title>0x7f00bd8ffef6 (?) (1 samples, 0.12%)</title><rect x="789" y="228" width="1" height="15" fill="rgb(242,56,52)"/><text x="792.00" y="238.50"></text></g><g><title>0x7f00bd8f4962 (?) (1 samples, 0.12%)</title><rect x="789" y="244" width="1" height="15" fill="rgb(227,117,19)"/><text x="792.00" y="254.50"></text></g><g><title>0x7f00bd9287a7 (?) (1 samples, 0.12%)</title><rect x="789" y="260" width="1" height="15" fill="rgb(212,128,31)"/><text x="792.00" y="270.50"></text></g><g><title>0x7f00bd928379 (?) (1 samples, 0.12%)</title><rect x="789" y="276" width="1" height="15" fill="rgb(206,163,9)"/><text x="792.00" y="286.50"></text></g><g><title>0x7f00bdd868b8 (?) (1 samples, 0.12%)</title><rect x="789" y="292" width="1" height="15" fill="rgb(207,8,1)"/><text x="792.00" y="302.50"></text></g><g><title>0x7f00bdd84c7f (?) (1 samples, 0.12%)</title><rect x="789" y="308" width="1" height="15" fill="rgb(215,217,20)"/><text x="792.00" y="318.50"></text></g><g><title>0x7f00bdd9799c (?) (1 samples, 0.12%)</title><rect x="789" y="324" width="1" height="15" fill="rgb(218,86,52)"/><text x="792.00" y="334.50"></text></g><g><title>0x7f00bda9cc01 (?) (1 samples, 0.12%)</title><rect x="789" y="340" width="1" height="15" fill="rgb(234,157,45)"/><text x="792.00" y="350.50"></text></g><g><title>tanhf32x (libm-2.29.so) (1 samples, 0.12%)</title><rect x="789" y="356" width="1" height="15" fill="rgb(230,127,5)"/><text x="792.00" y="366.50"></text></g><g><title>expm1f64 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="789" y="372" width="1" height="15" fill="rgb(234,26,7)"/><text x="792.00" y="382.50"></text></g><g><title>0x7f00bd8cc0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="809" y="356" width="1" height="15" fill="rgb(223,37,51)"/><text x="812.00" y="366.50"></text></g><g><title>0x7f00fda53e71 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="810" y="356" width="2" height="15" fill="rgb(236,151,49)"/><text x="813.00" y="366.50"></text></g><g><title>0x7f00fd8d4991 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="813" y="388" width="2" height="15" fill="rgb(207,151,47)"/><text x="816.00" y="398.50"></text></g><g><title>0x7f00fd8f4dc9 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="815" y="388" width="1" height="15" fill="rgb(229,139,36)"/><text x="818.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.60%)</title><rect x="812" y="356" width="7" height="15" fill="rgb(220,45,26)"/><text x="815.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.48%)</title><rect x="813" y="372" width="6" height="15" fill="rgb(232,160,9)"/><text x="816.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.24%)</title><rect x="816" y="388" width="3" height="15" fill="rgb(218,216,40)"/><text x="819.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (50 samples, 6.04%)</title><rect x="790" y="340" width="72" height="15" fill="rgb(214,114,40)"/><text x="793.00" y="350.50">onnxrunt..</text></g><g><title>tanhf32x (libm-2.29.so) (30 samples, 3.62%)</title><rect x="819" y="356" width="43" height="15" fill="rgb(235,173,33)"/><text x="822.00" y="366.50">tanh..</text></g><g><title>expm1f64 (libm-2.29.so) (22 samples, 2.66%)</title><rect x="830" y="372" width="32" height="15" fill="rgb(218,205,11)"/><text x="833.00" y="382.50">ex..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 6.16%)</title><rect x="790" y="260" width="73" height="15" fill="rgb(227,117,48)"/><text x="793.00" y="270.50">onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 6.16%)</title><rect x="790" y="276" width="73" height="15" fill="rgb(250,116,49)"/><text x="793.00" y="286.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 6.16%)</title><rect x="790" y="292" width="73" height="15" fill="rgb(250,64,45)"/><text x="793.00" y="302.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 6.16%)</title><rect x="790" y="308" width="73" height="15" fill="rgb(233,178,33)"/><text x="793.00" y="318.50">onnxrunt..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 6.16%)</title><rect x="790" y="324" width="73" height="15" fill="rgb(244,116,3)"/><text x="793.00" y="334.50">onnxrunt..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="862" y="340" width="1" height="15" fill="rgb(254,168,1)"/><text x="865.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="862" y="356" width="1" height="15" fill="rgb(229,99,38)"/><text x="865.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="862" y="372" width="1" height="15" fill="rgb(241,99,44)"/><text x="865.00" y="382.50"></text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:18) (53 samples, 6.40%)</title><rect x="789" y="100" width="76" height="15" fill="rgb(243,152,14)"/><text x="792.00" y="110.50">profile ..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (53 samples, 6.40%)</title><rect x="789" y="116" width="76" height="15" fill="rgb(210,76,28)"/><text x="792.00" y="126.50">time_pre..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (53 samples, 6.40%)</title><rect x="789" y="132" width="76" height="15" fill="rgb(235,57,24)"/><text x="792.00" y="142.50">&lt;lambda&gt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (53 samples, 6.40%)</title><rect x="789" y="148" width="76" height="15" fill="rgb(227,144,28)"/><text x="792.00" y="158.50">run (mlp..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (53 samples, 6.40%)</title><rect x="789" y="164" width="76" height="15" fill="rgb(220,159,8)"/><text x="792.00" y="174.50">_run_who..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (53 samples, 6.40%)</title><rect x="789" y="180" width="76" height="15" fill="rgb(249,93,54)"/><text x="792.00" y="190.50">run (mlp..</text></g><g><title>run (onnxruntime/capi/session.py:136) (53 samples, 6.40%)</title><rect x="789" y="196" width="76" height="15" fill="rgb(238,185,20)"/><text x="792.00" y="206.50">run (onn..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (52 samples, 6.28%)</title><rect x="790" y="212" width="75" height="15" fill="rgb(243,54,27)"/><text x="793.00" y="222.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (52 samples, 6.28%)</title><rect x="790" y="228" width="75" height="15" fill="rgb(228,145,37)"/><text x="793.00" y="238.50">void pyb..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (52 samples, 6.28%)</title><rect x="790" y="244" width="75" height="15" fill="rgb(208,217,14)"/><text x="793.00" y="254.50">onnxrunt..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="863" y="260" width="2" height="15" fill="rgb(250,66,4)"/><text x="866.00" y="270.50"></text></g><g><title>0x7f00fd8d4eb0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="867" y="116" width="2" height="15" fill="rgb(248,8,40)"/><text x="870.00" y="126.50"></text></g><g><title>0x7f00fd8d3c73 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="867" y="132" width="2" height="15" fill="rgb(241,229,3)"/><text x="870.00" y="142.50"></text></g><g><title>0x7f00fd8d3aa4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="867" y="148" width="2" height="15" fill="rgb(237,40,10)"/><text x="870.00" y="158.50"></text></g><g><title>0x7f00fd8d4906 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="924" y="356" width="2" height="15" fill="rgb(238,27,50)"/><text x="927.00" y="366.50"></text></g><g><title>0x7f00fd8d4971 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="926" y="356" width="1" height="15" fill="rgb(235,174,15)"/><text x="929.00" y="366.50"></text></g><g><title>0x7f00fda53e7e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="927" y="356" width="2" height="15" fill="rgb(244,132,26)"/><text x="930.00" y="366.50"></text></g><g><title>0x7f00fd8d4961 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="937" y="372" width="2" height="15" fill="rgb(254,124,26)"/><text x="940.00" y="382.50"></text></g><g><title>0x7f00fd8d4a55 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="943" y="388" width="1" height="15" fill="rgb(247,129,8)"/><text x="946.00" y="398.50"></text></g><g><title>0x7f00fd8d4be4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="944" y="388" width="2" height="15" fill="rgb(217,112,27)"/><text x="947.00" y="398.50"></text></g><g><title>0x7f00fd8f4d50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="946" y="388" width="1" height="15" fill="rgb(251,194,33)"/><text x="949.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.81%)</title><rect x="929" y="356" width="21" height="15" fill="rgb(220,186,28)"/><text x="932.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.97%)</title><rect x="939" y="372" width="11" height="15" fill="rgb(208,21,15)"/><text x="942.00" y="382.50"></text></g><g><title>0x7f00fd8f4dbb (libc-2.29.so) (2 samples, 0.24%)</title><rect x="947" y="388" width="3" height="15" fill="rgb(230,202,41)"/><text x="950.00" y="398.50"></text></g><g><title>0x7f00fd8d4965 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="950" y="372" width="2" height="15" fill="rgb(221,87,12)"/><text x="953.00" y="382.50"></text></g><g><title>0x7f00fd8f4d50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="952" y="372" width="1" height="15" fill="rgb(239,69,40)"/><text x="955.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.24%)</title><rect x="953" y="372" width="3" height="15" fill="rgb(224,21,21)"/><text x="956.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="956" y="372" width="1" height="15" fill="rgb(226,141,21)"/><text x="959.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.85%)</title><rect x="950" y="356" width="10" height="15" fill="rgb(206,55,46)"/><text x="953.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.24%)</title><rect x="957" y="372" width="3" height="15" fill="rgb(251,223,12)"/><text x="960.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.24%)</title><rect x="957" y="388" width="3" height="15" fill="rgb(207,113,14)"/><text x="960.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (210 samples, 25.36%)</title><rect x="869" y="340" width="299" height="15" fill="rgb(238,111,35)"/><text x="872.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::C..</text></g><g><title>tanhf32x (libm-2.29.so) (146 samples, 17.63%)</title><rect x="960" y="356" width="208" height="15" fill="rgb(253,195,47)"/><text x="963.00" y="366.50">tanhf32x (libm-2.29.so)</text></g><g><title>expm1f64 (libm-2.29.so) (99 samples, 11.96%)</title><rect x="1027" y="372" width="141" height="15" fill="rgb(218,202,4)"/><text x="1030.00" y="382.50">expm1f64 (libm-2...</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (211 samples, 25.48%)</title><rect x="869" y="260" width="301" height="15" fill="rgb(222,151,6)"/><text x="872.00" y="270.50">onnxruntime::InferenceSession::Run (onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (211 samples, 25.48%)</title><rect x="869" y="276" width="301" height="15" fill="rgb(234,8,3)"/><text x="872.00" y="286.50">onnxruntime::InferenceSession::Run (onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (211 samples, 25.48%)</title><rect x="869" y="292" width="301" height="15" fill="rgb(205,25,51)"/><text x="872.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (211 samples, 25.48%)</title><rect x="869" y="308" width="301" height="15" fill="rgb(205,37,14)"/><text x="872.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (211 samples, 25.48%)</title><rect x="869" y="324" width="301" height="15" fill="rgb(234,117,18)"/><text x="872.00" y="334.50">onnxruntime::SequentialExecutor::Execute..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1168" y="340" width="2" height="15" fill="rgb(237,164,21)"/><text x="1171.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1168" y="356" width="2" height="15" fill="rgb(230,201,17)"/><text x="1171.00" y="366.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.57%)</title><rect x="1170" y="260" width="18" height="15" fill="rgb(252,123,38)"/><text x="1173.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.48%)</title><rect x="1182" y="276" width="6" height="15" fill="rgb(251,176,53)"/><text x="1185.00" y="286.50"></text></g><g><title>all (828 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(229,19,34)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:52) (281 samples, 33.94%)</title><rect x="789" y="52" width="401" height="15" fill="rgb(231,177,23)"/><text x="792.00" y="62.50">&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kerne..</text></g><g><title>profile_ort (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:51) (281 samples, 33.94%)</title><rect x="789" y="68" width="401" height="15" fill="rgb(216,177,41)"/><text x="792.00" y="78.50">profile_ort (bench_SVC_sigmoid_b_cl_probabilityTrue_ke..</text></g><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:29) (281 samples, 33.94%)</title><rect x="789" y="84" width="401" height="15" fill="rgb(242,202,11)"/><text x="792.00" y="94.50">setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_..</text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py:23) (228 samples, 27.54%)</title><rect x="865" y="100" width="325" height="15" fill="rgb(233,184,33)"/><text x="868.00" y="110.50">profile (bench_SVC_sigmoid_b_cl_probability..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (225 samples, 27.17%)</title><rect x="869" y="116" width="321" height="15" fill="rgb(207,120,37)"/><text x="872.00" y="126.50">time_predict (mlprodict/asv_benchmark/commo..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (225 samples, 27.17%)</title><rect x="869" y="132" width="321" height="15" fill="rgb(220,195,5)"/><text x="872.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_as..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (225 samples, 27.17%)</title><rect x="869" y="148" width="321" height="15" fill="rgb(205,164,19)"/><text x="872.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (225 samples, 27.17%)</title><rect x="869" y="164" width="321" height="15" fill="rgb(227,46,10)"/><text x="872.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (225 samples, 27.17%)</title><rect x="869" y="180" width="321" height="15" fill="rgb(224,159,49)"/><text x="872.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:..</text></g><g><title>run (onnxruntime/capi/session.py:136) (225 samples, 27.17%)</title><rect x="869" y="196" width="321" height="15" fill="rgb(241,227,16)"/><text x="872.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (225 samples, 27.17%)</title><rect x="869" y="212" width="321" height="15" fill="rgb(247,146,33)"/><text x="872.00" y="222.50">pybind11::cpp_function::dispatcher (onnxrun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (225 samples, 27.17%)</title><rect x="869" y="228" width="321" height="15" fill="rgb(247,228,8)"/><text x="872.00" y="238.50">void pybind11::cpp_function::initialize&lt;onn..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (225 samples, 27.17%)</title><rect x="869" y="244" width="321" height="15" fill="rgb(236,2,45)"/><text x="872.00" y="254.50">onnxruntime::python::addObjectMethods(pybin..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(244,92,19)"/><text x="1191.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(247,140,14)"/><text x="1191.00" y="286.50"></text></g><g><title>0x7f00fd8d4d07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(243,1,43)"/><text x="1191.00" y="302.50"></text></g></g></svg>