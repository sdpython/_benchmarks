<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1782" onload="init(evt)" viewBox="0 0 1200 1782" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1782" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1765.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1765.00"> </text><g id="frames"><g><title>fit (sklearn/ensemble/_forest.py:369) (1 samples, 0.15%)</title><rect x="10" y="116" width="1" height="15" fill="rgb(227,39,53)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (1 samples, 0.15%)</title><rect x="10" y="132" width="1" height="15" fill="rgb(252,62,50)"/><text x="13.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (1 samples, 0.15%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(218,214,53)"/><text x="13.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:77) (1 samples, 0.15%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(249,200,25)"/><text x="13.00" y="174.50"></text></g><g><title>set_params (sklearn/base.py:227) (1 samples, 0.15%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(205,88,27)"/><text x="13.00" y="190.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.15%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(210,46,33)"/><text x="13.00" y="206.50"></text></g><g><title>_get_param_names (sklearn/base.py:163) (1 samples, 0.15%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(207,52,28)"/><text x="13.00" y="222.50"></text></g><g><title>kind (inspect.py:2531) (1 samples, 0.15%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(244,73,36)"/><text x="13.00" y="238.50"></text></g><g><title>generate_state (bit_generator.c:6032) (1 samples, 0.15%)</title><rect x="11" y="404" width="2" height="15" fill="rgb(207,146,29)"/><text x="14.00" y="414.50"></text></g><g><title>__Pyx_PyInt_As_uint32_t (bit_generator.c:17415) (1 samples, 0.15%)</title><rect x="11" y="420" width="2" height="15" fill="rgb(205,17,41)"/><text x="14.00" y="430.50"></text></g><g><title>generate_state (bit_generator.c:6079) (1 samples, 0.15%)</title><rect x="13" y="404" width="2" height="15" fill="rgb(208,49,15)"/><text x="16.00" y="414.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:31) (4 samples, 0.59%)</title><rect x="10" y="52" width="6" height="15" fill="rgb(206,216,45)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:11) (4 samples, 0.59%)</title><rect x="10" y="68" width="6" height="15" fill="rgb(216,9,13)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:39) (4 samples, 0.59%)</title><rect x="10" y="84" width="6" height="15" fill="rgb(218,123,42)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (4 samples, 0.59%)</title><rect x="10" y="100" width="6" height="15" fill="rgb(245,132,46)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (3 samples, 0.44%)</title><rect x="11" y="116" width="5" height="15" fill="rgb(223,102,29)"/><text x="14.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (3 samples, 0.44%)</title><rect x="11" y="132" width="5" height="15" fill="rgb(214,174,13)"/><text x="14.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (3 samples, 0.44%)</title><rect x="11" y="148" width="5" height="15" fill="rgb(219,124,9)"/><text x="14.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (3 samples, 0.44%)</title><rect x="11" y="164" width="5" height="15" fill="rgb(228,105,11)"/><text x="14.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (3 samples, 0.44%)</title><rect x="11" y="180" width="5" height="15" fill="rgb(215,144,51)"/><text x="14.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (3 samples, 0.44%)</title><rect x="11" y="196" width="5" height="15" fill="rgb(234,36,34)"/><text x="14.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (3 samples, 0.44%)</title><rect x="11" y="212" width="5" height="15" fill="rgb(206,77,24)"/><text x="14.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (3 samples, 0.44%)</title><rect x="11" y="228" width="5" height="15" fill="rgb(220,102,24)"/><text x="14.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:154) (3 samples, 0.44%)</title><rect x="11" y="244" width="5" height="15" fill="rgb(223,31,42)"/><text x="14.00" y="254.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py:119) (3 samples, 0.44%)</title><rect x="11" y="260" width="5" height="15" fill="rgb(216,218,4)"/><text x="14.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (3 samples, 0.44%)</title><rect x="11" y="276" width="5" height="15" fill="rgb(236,178,44)"/><text x="14.00" y="286.50"></text></g><g><title>__init__ (mtrand.c:3210) (3 samples, 0.44%)</title><rect x="11" y="292" width="5" height="15" fill="rgb(226,171,10)"/><text x="14.00" y="302.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (3 samples, 0.44%)</title><rect x="11" y="308" width="5" height="15" fill="rgb(209,150,36)"/><text x="14.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (3 samples, 0.44%)</title><rect x="11" y="324" width="5" height="15" fill="rgb(221,114,14)"/><text x="14.00" y="334.50"></text></g><g><title>__init__ (mt19937.c:2381) (3 samples, 0.44%)</title><rect x="11" y="340" width="5" height="15" fill="rgb(226,60,29)"/><text x="14.00" y="350.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (3 samples, 0.44%)</title><rect x="11" y="356" width="5" height="15" fill="rgb(223,115,43)"/><text x="14.00" y="366.50"></text></g><g><title>inner (contextlib.py:74) (3 samples, 0.44%)</title><rect x="11" y="372" width="5" height="15" fill="rgb(207,104,25)"/><text x="14.00" y="382.50"></text></g><g><title>generate_state (bit_generator.c:5779) (3 samples, 0.44%)</title><rect x="11" y="388" width="5" height="15" fill="rgb(217,171,4)"/><text x="14.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c:6081) (1 samples, 0.15%)</title><rect x="15" y="404" width="1" height="15" fill="rgb(247,146,30)"/><text x="18.00" y="414.50"></text></g><g><title>array_assign_subscript (mapping.c:2070) (1 samples, 0.15%)</title><rect x="15" y="420" width="1" height="15" fill="rgb(207,133,5)"/><text x="18.00" y="430.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:28) (1 samples, 0.15%)</title><rect x="16" y="84" width="2" height="15" fill="rgb(220,92,50)"/><text x="19.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.15%)</title><rect x="16" y="100" width="2" height="15" fill="rgb(235,227,53)"/><text x="19.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.15%)</title><rect x="16" y="116" width="2" height="15" fill="rgb(249,157,53)"/><text x="19.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.15%)</title><rect x="16" y="132" width="2" height="15" fill="rgb(239,227,3)"/><text x="19.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.15%)</title><rect x="16" y="148" width="2" height="15" fill="rgb(239,86,19)"/><text x="19.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.15%)</title><rect x="16" y="164" width="2" height="15" fill="rgb(212,110,53)"/><text x="19.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.15%)</title><rect x="16" y="180" width="2" height="15" fill="rgb(246,132,14)"/><text x="19.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:65) (1 samples, 0.15%)</title><rect x="16" y="196" width="2" height="15" fill="rgb(241,189,22)"/><text x="19.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.15%)</title><rect x="16" y="212" width="2" height="15" fill="rgb(225,130,17)"/><text x="19.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.15%)</title><rect x="16" y="228" width="2" height="15" fill="rgb(211,123,32)"/><text x="19.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="16" y="244" width="2" height="15" fill="rgb(227,221,8)"/><text x="19.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.15%)</title><rect x="16" y="260" width="2" height="15" fill="rgb(205,99,20)"/><text x="19.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.15%)</title><rect x="16" y="276" width="2" height="15" fill="rgb(220,168,45)"/><text x="19.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.15%)</title><rect x="16" y="292" width="2" height="15" fill="rgb(238,156,9)"/><text x="19.00" y="302.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.15%)</title><rect x="16" y="308" width="2" height="15" fill="rgb(216,172,19)"/><text x="19.00" y="318.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.15%)</title><rect x="16" y="324" width="2" height="15" fill="rgb(251,60,24)"/><text x="19.00" y="334.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:663) (1 samples, 0.15%)</title><rect x="20" y="148" width="2" height="15" fill="rgb(217,155,12)"/><text x="23.00" y="158.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:663) (1 samples, 0.15%)</title><rect x="20" y="164" width="2" height="15" fill="rgb(245,212,39)"/><text x="23.00" y="174.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.15%)</title><rect x="20" y="180" width="2" height="15" fill="rgb(219,27,0)"/><text x="23.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.15%)</title><rect x="20" y="196" width="2" height="15" fill="rgb(232,17,34)"/><text x="23.00" y="206.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.15%)</title><rect x="20" y="212" width="2" height="15" fill="rgb(249,32,37)"/><text x="23.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.15%)</title><rect x="20" y="228" width="2" height="15" fill="rgb(248,89,11)"/><text x="23.00" y="238.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (1 samples, 0.15%)</title><rect x="20" y="244" width="2" height="15" fill="rgb(226,23,39)"/><text x="23.00" y="254.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="20" y="260" width="2" height="15" fill="rgb(222,103,37)"/><text x="23.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (1 samples, 0.15%)</title><rect x="22" y="164" width="1" height="15" fill="rgb(233,137,29)"/><text x="25.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.15%)</title><rect x="22" y="180" width="1" height="15" fill="rgb(248,164,37)"/><text x="25.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.15%)</title><rect x="22" y="196" width="1" height="15" fill="rgb(217,54,12)"/><text x="25.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.15%)</title><rect x="22" y="212" width="1" height="15" fill="rgb(223,154,51)"/><text x="25.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.15%)</title><rect x="22" y="228" width="1" height="15" fill="rgb(224,57,10)"/><text x="25.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.15%)</title><rect x="22" y="244" width="1" height="15" fill="rgb(240,55,43)"/><text x="25.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.15%)</title><rect x="22" y="260" width="1" height="15" fill="rgb(238,133,27)"/><text x="25.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (1 samples, 0.15%)</title><rect x="22" y="276" width="1" height="15" fill="rgb(235,17,2)"/><text x="25.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (1 samples, 0.15%)</title><rect x="22" y="292" width="1" height="15" fill="rgb(244,181,20)"/><text x="25.00" y="302.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.15%)</title><rect x="22" y="308" width="1" height="15" fill="rgb(248,36,36)"/><text x="25.00" y="318.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.15%)</title><rect x="22" y="324" width="1" height="15" fill="rgb(251,154,28)"/><text x="25.00" y="334.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.15%)</title><rect x="22" y="340" width="1" height="15" fill="rgb(206,187,43)"/><text x="25.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.15%)</title><rect x="22" y="356" width="1" height="15" fill="rgb(249,208,38)"/><text x="25.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.15%)</title><rect x="22" y="372" width="1" height="15" fill="rgb(225,86,23)"/><text x="25.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.15%)</title><rect x="22" y="388" width="1" height="15" fill="rgb(240,83,40)"/><text x="25.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.15%)</title><rect x="22" y="404" width="1" height="15" fill="rgb(250,68,15)"/><text x="25.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.15%)</title><rect x="22" y="420" width="1" height="15" fill="rgb(245,100,6)"/><text x="25.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.15%)</title><rect x="22" y="436" width="1" height="15" fill="rgb(254,23,16)"/><text x="25.00" y="446.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1620) (1 samples, 0.15%)</title><rect x="22" y="452" width="1" height="15" fill="rgb(226,12,8)"/><text x="25.00" y="462.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:782) (1 samples, 0.15%)</title><rect x="27" y="180" width="2" height="15" fill="rgb(253,174,47)"/><text x="30.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.15%)</title><rect x="29" y="180" width="1" height="15" fill="rgb(250,190,24)"/><text x="32.00" y="190.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.15%)</title><rect x="32" y="196" width="2" height="15" fill="rgb(243,199,4)"/><text x="35.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (4 samples, 0.59%)</title><rect x="30" y="180" width="7" height="15" fill="rgb(235,50,7)"/><text x="33.00" y="190.50"></text></g><g><title>get (queue.py:167) (2 samples, 0.29%)</title><rect x="34" y="196" width="3" height="15" fill="rgb(242,87,23)"/><text x="37.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:805) (1 samples, 0.15%)</title><rect x="37" y="180" width="2" height="15" fill="rgb(238,170,46)"/><text x="40.00" y="190.50"></text></g><g><title>update_wrapper (functools.py:58) (1 samples, 0.15%)</title><rect x="46" y="228" width="2" height="15" fill="rgb(212,218,49)"/><text x="49.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (6 samples, 0.88%)</title><rect x="39" y="180" width="10" height="15" fill="rgb(230,74,15)"/><text x="42.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (5 samples, 0.74%)</title><rect x="41" y="196" width="8" height="15" fill="rgb(210,162,5)"/><text x="44.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (3 samples, 0.44%)</title><rect x="44" y="212" width="5" height="15" fill="rgb(220,207,2)"/><text x="47.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.15%)</title><rect x="48" y="228" width="1" height="15" fill="rgb(247,209,17)"/><text x="51.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (4 samples, 0.59%)</title><rect x="49" y="196" width="7" height="15" fill="rgb(214,166,0)"/><text x="52.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.15%)</title><rect x="55" y="212" width="1" height="15" fill="rgb(206,116,27)"/><text x="58.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.15%)</title><rect x="56" y="212" width="2" height="15" fill="rgb(237,218,5)"/><text x="59.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (6 samples, 0.88%)</title><rect x="49" y="180" width="11" height="15" fill="rgb(212,193,34)"/><text x="52.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (2 samples, 0.29%)</title><rect x="56" y="196" width="4" height="15" fill="rgb(205,12,26)"/><text x="59.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.15%)</title><rect x="58" y="212" width="2" height="15" fill="rgb(238,225,46)"/><text x="61.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:242) (2 samples, 0.29%)</title><rect x="60" y="196" width="3" height="15" fill="rgb(250,37,11)"/><text x="63.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (3 samples, 0.44%)</title><rect x="60" y="180" width="5" height="15" fill="rgb(241,83,46)"/><text x="63.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:249) (1 samples, 0.15%)</title><rect x="63" y="196" width="2" height="15" fill="rgb(213,8,27)"/><text x="66.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.15%)</title><rect x="69" y="212" width="1" height="15" fill="rgb(247,105,33)"/><text x="72.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (5 samples, 0.74%)</title><rect x="65" y="180" width="9" height="15" fill="rgb(239,121,10)"/><text x="68.00" y="190.50"></text></g><g><title>put (queue.py:151) (3 samples, 0.44%)</title><rect x="69" y="196" width="5" height="15" fill="rgb(228,45,35)"/><text x="72.00" y="206.50"></text></g><g><title>notify (threading.py:345) (2 samples, 0.29%)</title><rect x="70" y="212" width="4" height="15" fill="rgb(221,136,6)"/><text x="73.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (2 samples, 0.29%)</title><rect x="70" y="228" width="4" height="15" fill="rgb(227,53,8)"/><text x="73.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.15%)</title><rect x="72" y="244" width="2" height="15" fill="rgb(249,139,19)"/><text x="75.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.15%)</title><rect x="72" y="260" width="2" height="15" fill="rgb(239,19,1)"/><text x="75.00" y="270.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="72" y="276" width="2" height="15" fill="rgb(220,11,26)"/><text x="75.00" y="286.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.15%)</title><rect x="74" y="196" width="2" height="15" fill="rgb(220,155,44)"/><text x="77.00" y="206.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.15%)</title><rect x="76" y="196" width="1" height="15" fill="rgb(228,158,52)"/><text x="79.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (3 samples, 0.44%)</title><rect x="74" y="180" width="5" height="15" fill="rgb(232,125,18)"/><text x="77.00" y="190.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.15%)</title><rect x="77" y="196" width="2" height="15" fill="rgb(248,226,6)"/><text x="80.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.15%)</title><rect x="77" y="212" width="2" height="15" fill="rgb(218,93,24)"/><text x="80.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (2 samples, 0.29%)</title><rect x="79" y="180" width="3" height="15" fill="rgb(252,193,53)"/><text x="82.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:746) (2 samples, 0.29%)</title><rect x="86" y="196" width="3" height="15" fill="rgb(225,54,29)"/><text x="89.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:747) (1 samples, 0.15%)</title><rect x="89" y="196" width="2" height="15" fill="rgb(235,109,37)"/><text x="92.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (1 samples, 0.15%)</title><rect x="91" y="196" width="2" height="15" fill="rgb(237,122,31)"/><text x="94.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (3 samples, 0.44%)</title><rect x="93" y="244" width="5" height="15" fill="rgb(206,161,34)"/><text x="96.00" y="254.50"></text></g><g><title>__enter__ (joblib/parallel.py:212) (1 samples, 0.15%)</title><rect x="96" y="260" width="2" height="15" fill="rgb(207,9,21)"/><text x="99.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:255) (1 samples, 0.15%)</title><rect x="98" y="260" width="2" height="15" fill="rgb(244,86,2)"/><text x="101.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.44%)</title><rect x="105" y="324" width="5" height="15" fill="rgb(238,130,22)"/><text x="108.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.15%)</title><rect x="109" y="340" width="1" height="15" fill="rgb(208,90,42)"/><text x="112.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (7 samples, 1.03%)</title><rect x="103" y="292" width="13" height="15" fill="rgb(221,223,17)"/><text x="106.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (7 samples, 1.03%)</title><rect x="103" y="308" width="13" height="15" fill="rgb(224,74,42)"/><text x="106.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 0.44%)</title><rect x="110" y="324" width="6" height="15" fill="rgb(250,153,54)"/><text x="113.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.15%)</title><rect x="114" y="340" width="2" height="15" fill="rgb(253,192,27)"/><text x="117.00" y="350.50"></text></g><g><title>0x7f81e1429f32 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="116" y="356" width="1" height="15" fill="rgb(210,154,52)"/><text x="119.00" y="366.50"></text></g><g><title>0x7f81e142a225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="117" y="356" width="2" height="15" fill="rgb(245,178,22)"/><text x="120.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.15%)</title><rect x="117" y="372" width="2" height="15" fill="rgb(247,132,44)"/><text x="120.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.15%)</title><rect x="117" y="388" width="2" height="15" fill="rgb(212,173,52)"/><text x="120.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:432) (1 samples, 0.15%)</title><rect x="117" y="404" width="2" height="15" fill="rgb(231,52,42)"/><text x="120.00" y="414.50"></text></g><g><title>0x7f81e1404277 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="119" y="404" width="2" height="15" fill="rgb(209,108,6)"/><text x="122.00" y="414.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.15%)</title><rect x="121" y="436" width="1" height="15" fill="rgb(247,187,4)"/><text x="124.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:576) (1 samples, 0.15%)</title><rect x="121" y="452" width="1" height="15" fill="rgb(227,99,12)"/><text x="124.00" y="462.50"></text></g><g><title>0x7f81e140ed04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.44%)</title><rect x="119" y="372" width="5" height="15" fill="rgb(249,195,0)"/><text x="122.00" y="382.50"></text></g><g><title>0x7f81e140e666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.44%)</title><rect x="119" y="388" width="5" height="15" fill="rgb(239,119,4)"/><text x="122.00" y="398.50"></text></g><g><title>0x7f81e14042fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="121" y="404" width="3" height="15" fill="rgb(226,27,29)"/><text x="124.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.29%)</title><rect x="121" y="420" width="3" height="15" fill="rgb(224,222,52)"/><text x="124.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.15%)</title><rect x="122" y="436" width="2" height="15" fill="rgb(242,114,38)"/><text x="125.00" y="446.50"></text></g><g><title>0x7f81e142a2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.59%)</title><rect x="119" y="356" width="7" height="15" fill="rgb(215,205,42)"/><text x="122.00" y="366.50"></text></g><g><title>0x7f81e140ee72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="124" y="372" width="2" height="15" fill="rgb(230,167,32)"/><text x="127.00" y="382.50"></text></g><g><title>0x7f81e1402022 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="124" y="388" width="2" height="15" fill="rgb(207,127,19)"/><text x="127.00" y="398.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (1 samples, 0.15%)</title><rect x="126" y="452" width="2" height="15" fill="rgb(213,68,10)"/><text x="129.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (2 samples, 0.29%)</title><rect x="126" y="420" width="3" height="15" fill="rgb(207,67,7)"/><text x="129.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (2 samples, 0.29%)</title><rect x="126" y="436" width="3" height="15" fill="rgb(222,90,41)"/><text x="129.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.15%)</title><rect x="128" y="452" width="1" height="15" fill="rgb(212,180,15)"/><text x="131.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="128" y="468" width="1" height="15" fill="rgb(236,35,33)"/><text x="131.00" y="478.50"></text></g><g><title>0x7f82079f9103 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="128" y="484" width="1" height="15" fill="rgb(221,67,14)"/><text x="131.00" y="494.50"></text></g><g><title>0x7f81e142a592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.44%)</title><rect x="126" y="356" width="5" height="15" fill="rgb(209,180,51)"/><text x="129.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (3 samples, 0.44%)</title><rect x="126" y="372" width="5" height="15" fill="rgb(252,88,6)"/><text x="129.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (3 samples, 0.44%)</title><rect x="126" y="388" width="5" height="15" fill="rgb(226,186,13)"/><text x="129.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (3 samples, 0.44%)</title><rect x="126" y="404" width="5" height="15" fill="rgb(235,147,17)"/><text x="129.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1161) (1 samples, 0.15%)</title><rect x="129" y="420" width="2" height="15" fill="rgb(244,48,11)"/><text x="132.00" y="430.50"></text></g><g><title>0x7f81e142a644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="131" y="356" width="2" height="15" fill="rgb(230,99,1)"/><text x="134.00" y="366.50"></text></g><g><title>0x7f81e13f6ed0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="131" y="372" width="2" height="15" fill="rgb(250,70,14)"/><text x="134.00" y="382.50"></text></g><g><title>0x7f81e142a69b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="133" y="356" width="2" height="15" fill="rgb(228,151,46)"/><text x="136.00" y="366.50"></text></g><g><title>0x7f81e142a6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.59%)</title><rect x="135" y="356" width="7" height="15" fill="rgb(216,15,11)"/><text x="138.00" y="366.50"></text></g><g><title>0x7f81e142a6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.59%)</title><rect x="142" y="356" width="7" height="15" fill="rgb(215,59,25)"/><text x="145.00" y="366.50"></text></g><g><title>0x7f81e142a6b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="149" y="356" width="1" height="15" fill="rgb(238,19,39)"/><text x="152.00" y="366.50"></text></g><g><title>0x7f81e142a6c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="150" y="356" width="4" height="15" fill="rgb(207,128,50)"/><text x="153.00" y="366.50"></text></g><g><title>0x7f81e142a6e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="154" y="356" width="1" height="15" fill="rgb(242,188,44)"/><text x="157.00" y="366.50"></text></g><g><title>0x7f81e142a6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="155" y="356" width="2" height="15" fill="rgb(240,214,20)"/><text x="158.00" y="366.50"></text></g><g><title>0x7f81e142a7ac (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="157" y="356" width="2" height="15" fill="rgb(209,37,44)"/><text x="160.00" y="366.50"></text></g><g><title>0x7f81e142a8e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="159" y="356" width="2" height="15" fill="rgb(217,0,50)"/><text x="162.00" y="366.50"></text></g><g><title>0x7f81e142b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (27 samples, 3.98%)</title><rect x="116" y="340" width="46" height="15" fill="rgb(214,129,39)"/><text x="119.00" y="350.50">0x7f..</text></g><g><title>0x7f81e142aa1d (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="161" y="356" width="1" height="15" fill="rgb(226,156,43)"/><text x="164.00" y="366.50"></text></g><g><title>0x7f81e141bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (28 samples, 4.12%)</title><rect x="116" y="324" width="48" height="15" fill="rgb(243,97,25)"/><text x="119.00" y="334.50">0x7f..</text></g><g><title>0x7f81e142b540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="162" y="340" width="2" height="15" fill="rgb(221,57,54)"/><text x="165.00" y="350.50"></text></g><g><title>0x7f81e14002f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="162" y="356" width="2" height="15" fill="rgb(227,77,28)"/><text x="165.00" y="366.50"></text></g><g><title>0x7f81e13ff4dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="162" y="372" width="2" height="15" fill="rgb(228,27,44)"/><text x="165.00" y="382.50"></text></g><g><title>0x7f81e13f6900 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="162" y="388" width="2" height="15" fill="rgb(230,25,27)"/><text x="165.00" y="398.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.15%)</title><rect x="166" y="356" width="2" height="15" fill="rgb(235,178,1)"/><text x="169.00" y="366.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.15%)</title><rect x="166" y="372" width="2" height="15" fill="rgb(243,179,5)"/><text x="169.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.15%)</title><rect x="166" y="388" width="2" height="15" fill="rgb(248,42,25)"/><text x="169.00" y="398.50"></text></g><g><title>array_take (methods.c:138) (3 samples, 0.44%)</title><rect x="164" y="340" width="5" height="15" fill="rgb(252,84,7)"/><text x="167.00" y="350.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.15%)</title><rect x="168" y="356" width="1" height="15" fill="rgb(217,227,44)"/><text x="171.00" y="366.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:629) (1 samples, 0.15%)</title><rect x="168" y="372" width="1" height="15" fill="rgb(207,32,54)"/><text x="171.00" y="382.50"></text></g><g><title>0x7f81e141c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.74%)</title><rect x="164" y="324" width="9" height="15" fill="rgb(251,15,22)"/><text x="167.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.29%)</title><rect x="169" y="340" width="4" height="15" fill="rgb(209,196,52)"/><text x="172.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.29%)</title><rect x="169" y="356" width="4" height="15" fill="rgb(220,165,43)"/><text x="172.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3961) (2 samples, 0.29%)</title><rect x="169" y="372" width="4" height="15" fill="rgb(241,191,18)"/><text x="172.00" y="382.50"></text></g><g><title>0x7f81e141c14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="173" y="324" width="3" height="15" fill="rgb(223,51,17)"/><text x="176.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.29%)</title><rect x="173" y="340" width="3" height="15" fill="rgb(208,3,4)"/><text x="176.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.29%)</title><rect x="173" y="356" width="3" height="15" fill="rgb(239,35,13)"/><text x="176.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.29%)</title><rect x="173" y="372" width="3" height="15" fill="rgb(239,80,8)"/><text x="176.00" y="382.50"></text></g><g><title>0x7f81e141c18f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="176" y="324" width="2" height="15" fill="rgb(218,224,1)"/><text x="179.00" y="334.50"></text></g><g><title>0x7f81e141c2ce (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="178" y="324" width="2" height="15" fill="rgb(241,111,50)"/><text x="181.00" y="334.50"></text></g><g><title>0x7f81e141c328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="180" y="324" width="2" height="15" fill="rgb(209,72,54)"/><text x="183.00" y="334.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.15%)</title><rect x="180" y="340" width="2" height="15" fill="rgb(218,186,20)"/><text x="183.00" y="350.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.15%)</title><rect x="180" y="356" width="2" height="15" fill="rgb(242,31,11)"/><text x="183.00" y="366.50"></text></g><g><title>0x7f81e141c5f2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="182" y="324" width="1" height="15" fill="rgb(224,228,8)"/><text x="185.00" y="334.50"></text></g><g><title>0x7f81e141c8d3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="183" y="324" width="2" height="15" fill="rgb(218,151,43)"/><text x="186.00" y="334.50"></text></g><g><title>0x7f81e13f8bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="183" y="340" width="2" height="15" fill="rgb(222,2,20)"/><text x="186.00" y="350.50"></text></g><g><title>0x7f81e13ffd60 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="183" y="356" width="2" height="15" fill="rgb(245,75,30)"/><text x="186.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (41 samples, 6.04%)</title><rect x="116" y="292" width="71" height="15" fill="rgb(233,179,47)"/><text x="119.00" y="302.50">predict_..</text></g><g><title>0x7f81e141cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (41 samples, 6.04%)</title><rect x="116" y="308" width="71" height="15" fill="rgb(211,5,16)"/><text x="119.00" y="318.50">0x7f81e1..</text></g><g><title>0x7f81e141cacd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="185" y="324" width="2" height="15" fill="rgb(220,191,40)"/><text x="188.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.15%)</title><rect x="187" y="292" width="1" height="15" fill="rgb(239,130,41)"/><text x="190.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1715) (1 samples, 0.15%)</title><rect x="187" y="308" width="1" height="15" fill="rgb(205,191,41)"/><text x="190.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3619) (1 samples, 0.15%)</title><rect x="192" y="388" width="2" height="15" fill="rgb(225,227,23)"/><text x="195.00" y="398.50"></text></g><g><title>0x7f82079f9120 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="192" y="404" width="2" height="15" fill="rgb(206,78,18)"/><text x="195.00" y="414.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3635) (1 samples, 0.15%)</title><rect x="194" y="388" width="1" height="15" fill="rgb(236,66,27)"/><text x="197.00" y="398.50"></text></g><g><title>_get_identity (ufunc_object.c:2464) (1 samples, 0.15%)</title><rect x="194" y="404" width="1" height="15" fill="rgb(244,95,11)"/><text x="197.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.15%)</title><rect x="195" y="404" width="2" height="15" fill="rgb(232,181,36)"/><text x="198.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.15%)</title><rect x="195" y="420" width="2" height="15" fill="rgb(215,119,28)"/><text x="198.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.15%)</title><rect x="195" y="436" width="2" height="15" fill="rgb(205,32,7)"/><text x="198.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.15%)</title><rect x="195" y="452" width="2" height="15" fill="rgb(231,18,21)"/><text x="198.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.15%)</title><rect x="195" y="468" width="2" height="15" fill="rgb(248,4,7)"/><text x="198.00" y="478.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.15%)</title><rect x="197" y="436" width="2" height="15" fill="rgb(254,178,52)"/><text x="200.00" y="446.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3789) (1 samples, 0.15%)</title><rect x="197" y="452" width="2" height="15" fill="rgb(207,22,22)"/><text x="200.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.29%)</title><rect x="197" y="404" width="4" height="15" fill="rgb(222,152,37)"/><text x="200.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.29%)</title><rect x="197" y="420" width="4" height="15" fill="rgb(237,157,1)"/><text x="200.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.15%)</title><rect x="199" y="436" width="2" height="15" fill="rgb(249,71,11)"/><text x="202.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.15%)</title><rect x="199" y="452" width="2" height="15" fill="rgb(234,157,48)"/><text x="202.00" y="462.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="199" y="468" width="2" height="15" fill="rgb(245,93,21)"/><text x="202.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.29%)</title><rect x="201" y="404" width="3" height="15" fill="rgb(253,138,10)"/><text x="204.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.29%)</title><rect x="201" y="420" width="3" height="15" fill="rgb(228,150,27)"/><text x="204.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.15%)</title><rect x="202" y="436" width="2" height="15" fill="rgb(217,228,45)"/><text x="205.00" y="446.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.15%)</title><rect x="204" y="420" width="2" height="15" fill="rgb(237,4,13)"/><text x="207.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.15%)</title><rect x="206" y="436" width="2" height="15" fill="rgb(230,11,15)"/><text x="209.00" y="446.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (2 samples, 0.29%)</title><rect x="208" y="436" width="3" height="15" fill="rgb(248,207,43)"/><text x="211.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1663) (1 samples, 0.15%)</title><rect x="211" y="452" width="2" height="15" fill="rgb(214,79,48)"/><text x="214.00" y="462.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (4 samples, 0.59%)</title><rect x="213" y="452" width="7" height="15" fill="rgb(205,183,24)"/><text x="216.00" y="462.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (7 samples, 1.03%)</title><rect x="211" y="436" width="12" height="15" fill="rgb(250,5,46)"/><text x="214.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (2 samples, 0.29%)</title><rect x="220" y="452" width="3" height="15" fill="rgb(244,81,40)"/><text x="223.00" y="462.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.15%)</title><rect x="223" y="436" width="2" height="15" fill="rgb(219,53,3)"/><text x="226.00" y="446.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.15%)</title><rect x="225" y="436" width="2" height="15" fill="rgb(250,52,21)"/><text x="228.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (14 samples, 2.06%)</title><rect x="204" y="404" width="24" height="15" fill="rgb(229,167,49)"/><text x="207.00" y="414.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (13 samples, 1.91%)</title><rect x="206" y="420" width="22" height="15" fill="rgb(252,172,26)"/><text x="209.00" y="430.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.15%)</title><rect x="227" y="436" width="1" height="15" fill="rgb(250,118,39)"/><text x="230.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (24 samples, 3.53%)</title><rect x="188" y="292" width="42" height="15" fill="rgb(221,205,51)"/><text x="191.00" y="302.50">pre..</text></g><g><title>array_sum (methods.c:2215) (22 samples, 3.24%)</title><rect x="192" y="308" width="38" height="15" fill="rgb(226,119,11)"/><text x="195.00" y="318.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (22 samples, 3.24%)</title><rect x="192" y="324" width="38" height="15" fill="rgb(246,83,54)"/><text x="195.00" y="334.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (22 samples, 3.24%)</title><rect x="192" y="340" width="38" height="15" fill="rgb(251,135,47)"/><text x="195.00" y="350.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (22 samples, 3.24%)</title><rect x="192" y="356" width="38" height="15" fill="rgb(218,144,4)"/><text x="195.00" y="366.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (22 samples, 3.24%)</title><rect x="192" y="372" width="38" height="15" fill="rgb(254,124,38)"/><text x="195.00" y="382.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (20 samples, 2.95%)</title><rect x="195" y="388" width="35" height="15" fill="rgb(232,194,19)"/><text x="198.00" y="398.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.15%)</title><rect x="228" y="404" width="2" height="15" fill="rgb(232,9,52)"/><text x="231.00" y="414.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.15%)</title><rect x="228" y="420" width="2" height="15" fill="rgb(251,143,53)"/><text x="231.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.15%)</title><rect x="228" y="436" width="2" height="15" fill="rgb(254,163,39)"/><text x="231.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (1 samples, 0.15%)</title><rect x="230" y="324" width="2" height="15" fill="rgb(213,14,24)"/><text x="233.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.15%)</title><rect x="232" y="340" width="2" height="15" fill="rgb(227,68,37)"/><text x="235.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.15%)</title><rect x="234" y="340" width="1" height="15" fill="rgb(220,152,20)"/><text x="237.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.15%)</title><rect x="234" y="356" width="1" height="15" fill="rgb(249,68,27)"/><text x="237.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.15%)</title><rect x="235" y="372" width="2" height="15" fill="rgb(217,28,32)"/><text x="238.00" y="382.50"></text></g><g><title>DOUBLE_equal (loops.c.src:1773) (1 samples, 0.15%)</title><rect x="235" y="388" width="2" height="15" fill="rgb(224,57,30)"/><text x="238.00" y="398.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src:295) (1 samples, 0.15%)</title><rect x="235" y="404" width="2" height="15" fill="rgb(220,56,39)"/><text x="238.00" y="414.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src:976) (1 samples, 0.15%)</title><rect x="235" y="420" width="2" height="15" fill="rgb(212,113,46)"/><text x="238.00" y="430.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (5 samples, 0.74%)</title><rect x="230" y="292" width="9" height="15" fill="rgb(217,140,45)"/><text x="233.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (5 samples, 0.74%)</title><rect x="230" y="308" width="9" height="15" fill="rgb(254,21,35)"/><text x="233.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.59%)</title><rect x="232" y="324" width="7" height="15" fill="rgb(205,90,37)"/><text x="235.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.29%)</title><rect x="235" y="340" width="4" height="15" fill="rgb(218,149,38)"/><text x="238.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.29%)</title><rect x="235" y="356" width="4" height="15" fill="rgb(247,219,28)"/><text x="238.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.15%)</title><rect x="237" y="372" width="2" height="15" fill="rgb(214,149,43)"/><text x="240.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.15%)</title><rect x="241" y="324" width="1" height="15" fill="rgb(226,210,30)"/><text x="244.00" y="334.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.15%)</title><rect x="241" y="340" width="1" height="15" fill="rgb(232,146,43)"/><text x="244.00" y="350.50"></text></g><g><title>0x7f82079f9124 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="241" y="356" width="1" height="15" fill="rgb(229,54,51)"/><text x="244.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.15%)</title><rect x="242" y="356" width="2" height="15" fill="rgb(213,82,10)"/><text x="245.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:256) (1 samples, 0.15%)</title><rect x="242" y="372" width="2" height="15" fill="rgb(207,114,18)"/><text x="245.00" y="382.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.29%)</title><rect x="244" y="404" width="4" height="15" fill="rgb(209,156,46)"/><text x="247.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (4 samples, 0.59%)</title><rect x="248" y="404" width="7" height="15" fill="rgb(238,40,24)"/><text x="251.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.15%)</title><rect x="256" y="420" width="2" height="15" fill="rgb(219,58,24)"/><text x="259.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (9 samples, 1.33%)</title><rect x="244" y="356" width="16" height="15" fill="rgb(244,52,54)"/><text x="247.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (9 samples, 1.33%)</title><rect x="244" y="372" width="16" height="15" fill="rgb(245,97,47)"/><text x="247.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (9 samples, 1.33%)</title><rect x="244" y="388" width="16" height="15" fill="rgb(249,143,38)"/><text x="247.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.44%)</title><rect x="255" y="404" width="5" height="15" fill="rgb(218,38,18)"/><text x="258.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.15%)</title><rect x="258" y="420" width="2" height="15" fill="rgb(253,88,0)"/><text x="261.00" y="430.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (97 samples, 14.29%)</title><rect x="100" y="276" width="168" height="15" fill="rgb(208,221,0)"/><text x="103.00" y="286.50">_accumulate_predictio..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (17 samples, 2.50%)</title><rect x="239" y="292" width="29" height="15" fill="rgb(251,4,24)"/><text x="242.00" y="302.50">pr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 2.36%)</title><rect x="241" y="308" width="27" height="15" fill="rgb(208,211,18)"/><text x="244.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (15 samples, 2.21%)</title><rect x="242" y="324" width="26" height="15" fill="rgb(252,134,54)"/><text x="245.00" y="334.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (15 samples, 2.21%)</title><rect x="242" y="340" width="26" height="15" fill="rgb(220,31,15)"/><text x="245.00" y="350.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (5 samples, 0.74%)</title><rect x="260" y="356" width="8" height="15" fill="rgb(222,69,7)"/><text x="263.00" y="366.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (5 samples, 0.74%)</title><rect x="260" y="372" width="8" height="15" fill="rgb(254,122,41)"/><text x="263.00" y="382.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (5 samples, 0.74%)</title><rect x="260" y="388" width="8" height="15" fill="rgb(217,94,1)"/><text x="263.00" y="398.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (5 samples, 0.74%)</title><rect x="260" y="404" width="8" height="15" fill="rgb(249,81,28)"/><text x="263.00" y="414.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (5 samples, 0.74%)</title><rect x="260" y="420" width="8" height="15" fill="rgb(238,196,4)"/><text x="263.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.15%)</title><rect x="270" y="292" width="2" height="15" fill="rgb(234,82,29)"/><text x="273.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.15%)</title><rect x="270" y="308" width="2" height="15" fill="rgb(248,202,20)"/><text x="273.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:51) (1 samples, 0.15%)</title><rect x="270" y="324" width="2" height="15" fill="rgb(210,74,26)"/><text x="273.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.15%)</title><rect x="272" y="308" width="2" height="15" fill="rgb(214,46,41)"/><text x="275.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:488) (1 samples, 0.15%)</title><rect x="272" y="324" width="2" height="15" fill="rgb(225,46,19)"/><text x="275.00" y="334.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.15%)</title><rect x="272" y="340" width="2" height="15" fill="rgb(206,39,13)"/><text x="275.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:399) (1 samples, 0.15%)</title><rect x="274" y="388" width="1" height="15" fill="rgb(234,135,47)"/><text x="277.00" y="398.50"></text></g><g><title>sub_128 (npy_extint128.h:185) (1 samples, 0.15%)</title><rect x="274" y="404" width="1" height="15" fill="rgb(237,174,37)"/><text x="277.00" y="414.50"></text></g><g><title>add_128 (npy_extint128.h:151) (1 samples, 0.15%)</title><rect x="274" y="420" width="1" height="15" fill="rgb(229,16,18)"/><text x="277.00" y="430.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (102 samples, 15.02%)</title><rect x="100" y="260" width="177" height="15" fill="rgb(245,162,42)"/><text x="103.00" y="270.50">&lt;listcomp&gt; (joblib/para..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (5 samples, 0.74%)</title><rect x="268" y="276" width="9" height="15" fill="rgb(226,139,21)"/><text x="271.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.44%)</title><rect x="272" y="292" width="5" height="15" fill="rgb(211,51,51)"/><text x="275.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.29%)</title><rect x="274" y="308" width="3" height="15" fill="rgb(211,7,25)"/><text x="277.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.29%)</title><rect x="274" y="324" width="3" height="15" fill="rgb(230,43,0)"/><text x="277.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.29%)</title><rect x="274" y="340" width="3" height="15" fill="rgb(224,108,13)"/><text x="277.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.29%)</title><rect x="274" y="356" width="3" height="15" fill="rgb(212,17,25)"/><text x="277.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.29%)</title><rect x="274" y="372" width="3" height="15" fill="rgb(253,155,46)"/><text x="277.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:454) (1 samples, 0.15%)</title><rect x="275" y="388" width="2" height="15" fill="rgb(243,146,21)"/><text x="278.00" y="398.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:375) (1 samples, 0.15%)</title><rect x="275" y="404" width="2" height="15" fill="rgb(211,139,50)"/><text x="278.00" y="414.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.15%)</title><rect x="275" y="420" width="2" height="15" fill="rgb(225,173,3)"/><text x="278.00" y="430.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:243) (1 samples, 0.15%)</title><rect x="275" y="436" width="2" height="15" fill="rgb(243,139,13)"/><text x="278.00" y="446.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (109 samples, 16.05%)</title><rect x="93" y="212" width="189" height="15" fill="rgb(236,191,24)"/><text x="96.00" y="222.50">apply_async (joblib/_par..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (109 samples, 16.05%)</title><rect x="93" y="228" width="189" height="15" fill="rgb(248,61,1)"/><text x="96.00" y="238.50">__init__ (joblib/_parall..</text></g><g><title>__call__ (joblib/parallel.py:256) (106 samples, 15.61%)</title><rect x="98" y="244" width="184" height="15" fill="rgb(225,5,51)"/><text x="101.00" y="254.50">__call__ (joblib/parall..</text></g><g><title>__exit__ (joblib/parallel.py:215) (3 samples, 0.44%)</title><rect x="277" y="260" width="5" height="15" fill="rgb(242,163,36)"/><text x="280.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (2 samples, 0.29%)</title><rect x="279" y="276" width="3" height="15" fill="rgb(249,37,47)"/><text x="282.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (2 samples, 0.29%)</title><rect x="282" y="228" width="4" height="15" fill="rgb(215,0,46)"/><text x="285.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (113 samples, 16.64%)</title><rect x="93" y="196" width="196" height="15" fill="rgb(229,144,30)"/><text x="96.00" y="206.50">_dispatch (joblib/paralle..</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (4 samples, 0.59%)</title><rect x="282" y="212" width="7" height="15" fill="rgb(237,90,28)"/><text x="285.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (2 samples, 0.29%)</title><rect x="286" y="228" width="3" height="15" fill="rgb(236,6,21)"/><text x="289.00" y="238.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:18) (157 samples, 23.12%)</title><rect x="18" y="100" width="273" height="15" fill="rgb(240,180,31)"/><text x="21.00" y="110.50">profile (bench_RandomForestClassifie..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (157 samples, 23.12%)</title><rect x="18" y="116" width="273" height="15" fill="rgb(219,9,20)"/><text x="21.00" y="126.50">time_predict (mlprodict/asv_benchmar..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (157 samples, 23.12%)</title><rect x="18" y="132" width="273" height="15" fill="rgb(235,9,40)"/><text x="21.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (155 samples, 22.83%)</title><rect x="22" y="148" width="269" height="15" fill="rgb(221,104,15)"/><text x="25.00" y="158.50">predict_proba (sklearn/ensemble/_fo..</text></g><g><title>__call__ (joblib/parallel.py:1006) (154 samples, 22.68%)</title><rect x="23" y="164" width="268" height="15" fill="rgb(222,157,39)"/><text x="26.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (120 samples, 17.67%)</title><rect x="82" y="180" width="209" height="15" fill="rgb(229,7,44)"/><text x="85.00" y="190.50">dispatch_one_batch (joblib/..</text></g><g><title>_dispatch (joblib/parallel.py:758) (1 samples, 0.15%)</title><rect x="289" y="196" width="2" height="15" fill="rgb(212,59,7)"/><text x="292.00" y="206.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:659) (1 samples, 0.15%)</title><rect x="291" y="148" width="2" height="15" fill="rgb(247,153,19)"/><text x="294.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:177) (1 samples, 0.15%)</title><rect x="291" y="164" width="2" height="15" fill="rgb(246,111,13)"/><text x="294.00" y="174.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:388) (1 samples, 0.15%)</title><rect x="291" y="180" width="2" height="15" fill="rgb(233,8,7)"/><text x="294.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.15%)</title><rect x="291" y="196" width="2" height="15" fill="rgb(228,0,20)"/><text x="294.00" y="206.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:663) (1 samples, 0.15%)</title><rect x="293" y="148" width="2" height="15" fill="rgb(238,226,20)"/><text x="296.00" y="158.50"></text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;:6) (1 samples, 0.15%)</title><rect x="293" y="164" width="2" height="15" fill="rgb(238,201,41)"/><text x="296.00" y="174.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.15%)</title><rect x="293" y="180" width="2" height="15" fill="rgb(251,198,30)"/><text x="296.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:666) (1 samples, 0.15%)</title><rect x="295" y="148" width="1" height="15" fill="rgb(210,92,22)"/><text x="298.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:634) (1 samples, 0.15%)</title><rect x="295" y="164" width="1" height="15" fill="rgb(235,68,18)"/><text x="298.00" y="174.50"></text></g><g><title>__init__ (queue.py:45) (1 samples, 0.15%)</title><rect x="295" y="180" width="1" height="15" fill="rgb(247,61,15)"/><text x="298.00" y="190.50"></text></g><g><title>__init__ (threading.py:238) (1 samples, 0.15%)</title><rect x="295" y="196" width="1" height="15" fill="rgb(236,96,24)"/><text x="298.00" y="206.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="295" y="212" width="1" height="15" fill="rgb(240,144,5)"/><text x="298.00" y="222.50"></text></g><g><title>0x7f82079da44b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="295" y="228" width="1" height="15" fill="rgb(206,141,28)"/><text x="298.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.15%)</title><rect x="296" y="260" width="2" height="15" fill="rgb(238,203,40)"/><text x="299.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (1 samples, 0.15%)</title><rect x="296" y="276" width="2" height="15" fill="rgb(235,229,22)"/><text x="299.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (1 samples, 0.15%)</title><rect x="296" y="292" width="2" height="15" fill="rgb(253,159,35)"/><text x="299.00" y="302.50"></text></g><g><title>0x7f81e141cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="296" y="308" width="2" height="15" fill="rgb(251,46,15)"/><text x="299.00" y="318.50"></text></g><g><title>0x7f81e141bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="296" y="324" width="2" height="15" fill="rgb(210,160,53)"/><text x="299.00" y="334.50"></text></g><g><title>0x7f81e142b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="296" y="340" width="2" height="15" fill="rgb(237,136,28)"/><text x="299.00" y="350.50"></text></g><g><title>0x7f81e142a8c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="296" y="356" width="2" height="15" fill="rgb(225,194,21)"/><text x="299.00" y="366.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (2 samples, 0.29%)</title><rect x="296" y="164" width="4" height="15" fill="rgb(211,210,3)"/><text x="299.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.29%)</title><rect x="296" y="180" width="4" height="15" fill="rgb(237,135,17)"/><text x="299.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.29%)</title><rect x="296" y="196" width="4" height="15" fill="rgb(228,65,37)"/><text x="299.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.29%)</title><rect x="296" y="212" width="4" height="15" fill="rgb(228,78,8)"/><text x="299.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.29%)</title><rect x="296" y="228" width="4" height="15" fill="rgb(241,188,54)"/><text x="299.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.29%)</title><rect x="296" y="244" width="4" height="15" fill="rgb(216,153,28)"/><text x="299.00" y="254.50"></text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.15%)</title><rect x="298" y="260" width="2" height="15" fill="rgb(238,49,15)"/><text x="301.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:217) (1 samples, 0.15%)</title><rect x="298" y="276" width="2" height="15" fill="rgb(222,95,7)"/><text x="301.00" y="286.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.15%)</title><rect x="301" y="180" width="2" height="15" fill="rgb(214,77,27)"/><text x="304.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (1 samples, 0.15%)</title><rect x="303" y="180" width="2" height="15" fill="rgb(252,224,2)"/><text x="306.00" y="190.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.15%)</title><rect x="308" y="196" width="2" height="15" fill="rgb(213,95,18)"/><text x="311.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.15%)</title><rect x="308" y="212" width="2" height="15" fill="rgb(219,23,54)"/><text x="311.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.15%)</title><rect x="308" y="228" width="2" height="15" fill="rgb(248,177,40)"/><text x="311.00" y="238.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.15%)</title><rect x="310" y="196" width="2" height="15" fill="rgb(212,166,42)"/><text x="313.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.15%)</title><rect x="310" y="212" width="2" height="15" fill="rgb(228,47,31)"/><text x="313.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (5 samples, 0.74%)</title><rect x="305" y="180" width="9" height="15" fill="rgb(247,179,48)"/><text x="308.00" y="190.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.15%)</title><rect x="312" y="196" width="2" height="15" fill="rgb(234,226,23)"/><text x="315.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:797) (1 samples, 0.15%)</title><rect x="314" y="180" width="1" height="15" fill="rgb(249,108,18)"/><text x="317.00" y="190.50"></text></g><g><title>update_wrapper (functools.py:58) (2 samples, 0.29%)</title><rect x="322" y="228" width="4" height="15" fill="rgb(240,165,12)"/><text x="325.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (8 samples, 1.18%)</title><rect x="315" y="180" width="14" height="15" fill="rgb(231,209,13)"/><text x="318.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (6 samples, 0.88%)</title><rect x="319" y="196" width="10" height="15" fill="rgb(224,134,21)"/><text x="322.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (6 samples, 0.88%)</title><rect x="319" y="212" width="10" height="15" fill="rgb(214,36,34)"/><text x="322.00" y="222.50"></text></g><g><title>wraps (functools.py:79) (2 samples, 0.29%)</title><rect x="326" y="228" width="3" height="15" fill="rgb(213,191,18)"/><text x="329.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (2 samples, 0.29%)</title><rect x="329" y="180" width="4" height="15" fill="rgb(227,9,42)"/><text x="332.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (1 samples, 0.15%)</title><rect x="333" y="180" width="1" height="15" fill="rgb(240,58,24)"/><text x="336.00" y="190.50"></text></g><g><title>0x7f82079eee50 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="348" y="212" width="2" height="15" fill="rgb(233,144,24)"/><text x="351.00" y="222.50"></text></g><g><title>0x7f8207ab6151 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="350" y="212" width="2" height="15" fill="rgb(207,178,38)"/><text x="353.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.15%)</title><rect x="352" y="212" width="2" height="15" fill="rgb(244,39,33)"/><text x="355.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (10 samples, 1.47%)</title><rect x="338" y="196" width="17" height="15" fill="rgb(238,8,18)"/><text x="341.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.15%)</title><rect x="354" y="212" width="1" height="15" fill="rgb(214,9,42)"/><text x="357.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.15%)</title><rect x="361" y="228" width="1" height="15" fill="rgb(239,148,20)"/><text x="364.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (6 samples, 0.88%)</title><rect x="359" y="212" width="10" height="15" fill="rgb(244,145,38)"/><text x="362.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (4 samples, 0.59%)</title><rect x="362" y="228" width="7" height="15" fill="rgb(233,37,42)"/><text x="365.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.15%)</title><rect x="369" y="212" width="2" height="15" fill="rgb(218,80,34)"/><text x="372.00" y="222.50"></text></g><g><title>0x7f82079eee7a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="369" y="228" width="2" height="15" fill="rgb(221,142,27)"/><text x="372.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (22 samples, 3.24%)</title><rect x="334" y="180" width="39" height="15" fill="rgb(234,180,37)"/><text x="337.00" y="190.50">dis..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (10 samples, 1.47%)</title><rect x="355" y="196" width="18" height="15" fill="rgb(252,197,20)"/><text x="358.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:95) (1 samples, 0.15%)</title><rect x="371" y="212" width="2" height="15" fill="rgb(230,118,10)"/><text x="374.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (2 samples, 0.29%)</title><rect x="373" y="180" width="3" height="15" fill="rgb(227,210,23)"/><text x="376.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:244) (2 samples, 0.29%)</title><rect x="373" y="196" width="3" height="15" fill="rgb(225,113,30)"/><text x="376.00" y="206.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.15%)</title><rect x="378" y="196" width="2" height="15" fill="rgb(245,201,26)"/><text x="381.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (3 samples, 0.44%)</title><rect x="376" y="180" width="5" height="15" fill="rgb(226,200,22)"/><text x="379.00" y="190.50"></text></g><g><title>put (queue.py:151) (1 samples, 0.15%)</title><rect x="380" y="196" width="1" height="15" fill="rgb(209,19,7)"/><text x="383.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.15%)</title><rect x="380" y="212" width="1" height="15" fill="rgb(231,218,41)"/><text x="383.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.15%)</title><rect x="380" y="228" width="1" height="15" fill="rgb(233,32,16)"/><text x="383.00" y="238.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.15%)</title><rect x="381" y="212" width="2" height="15" fill="rgb(207,92,44)"/><text x="384.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.15%)</title><rect x="381" y="228" width="2" height="15" fill="rgb(233,222,41)"/><text x="384.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.15%)</title><rect x="381" y="244" width="2" height="15" fill="rgb(207,121,19)"/><text x="384.00" y="254.50"></text></g><g><title>get (queue.py:181) (2 samples, 0.29%)</title><rect x="381" y="196" width="4" height="15" fill="rgb(244,73,51)"/><text x="384.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.15%)</title><rect x="383" y="212" width="2" height="15" fill="rgb(248,209,15)"/><text x="386.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (3 samples, 0.44%)</title><rect x="381" y="180" width="6" height="15" fill="rgb(229,185,51)"/><text x="384.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.15%)</title><rect x="385" y="196" width="2" height="15" fill="rgb(227,35,10)"/><text x="388.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (1 samples, 0.15%)</title><rect x="387" y="180" width="1" height="15" fill="rgb(247,180,15)"/><text x="390.00" y="190.50"></text></g><g><title>__len__ (joblib/parallel.py:259) (1 samples, 0.15%)</title><rect x="387" y="196" width="1" height="15" fill="rgb(212,26,12)"/><text x="390.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:747) (1 samples, 0.15%)</title><rect x="388" y="196" width="2" height="15" fill="rgb(223,150,40)"/><text x="391.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (1 samples, 0.15%)</title><rect x="390" y="196" width="2" height="15" fill="rgb(241,70,12)"/><text x="393.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (1 samples, 0.15%)</title><rect x="392" y="196" width="2" height="15" fill="rgb(251,84,1)"/><text x="395.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:752) (1 samples, 0.15%)</title><rect x="394" y="196" width="1" height="15" fill="rgb(209,141,32)"/><text x="397.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (2 samples, 0.29%)</title><rect x="397" y="260" width="4" height="15" fill="rgb(214,223,45)"/><text x="400.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (3 samples, 0.44%)</title><rect x="397" y="244" width="5" height="15" fill="rgb(220,87,30)"/><text x="400.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:209) (1 samples, 0.15%)</title><rect x="401" y="260" width="1" height="15" fill="rgb(224,24,12)"/><text x="404.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:255) (1 samples, 0.15%)</title><rect x="404" y="260" width="2" height="15" fill="rgb(252,71,23)"/><text x="407.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.15%)</title><rect x="407" y="308" width="2" height="15" fill="rgb(229,135,52)"/><text x="410.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.15%)</title><rect x="409" y="308" width="2" height="15" fill="rgb(230,76,10)"/><text x="412.00" y="318.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.44%)</title><rect x="413" y="340" width="5" height="15" fill="rgb(214,32,23)"/><text x="416.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 0.74%)</title><rect x="411" y="324" width="9" height="15" fill="rgb(237,5,25)"/><text x="414.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.15%)</title><rect x="418" y="340" width="2" height="15" fill="rgb(236,177,20)"/><text x="421.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (8 samples, 1.18%)</title><rect x="407" y="292" width="14" height="15" fill="rgb(229,127,19)"/><text x="410.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 0.88%)</title><rect x="411" y="308" width="10" height="15" fill="rgb(227,156,5)"/><text x="414.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.15%)</title><rect x="420" y="324" width="1" height="15" fill="rgb(213,206,53)"/><text x="423.00" y="334.50"></text></g><g><title>0x7f81e141cd24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="421" y="308" width="2" height="15" fill="rgb(251,153,16)"/><text x="424.00" y="318.50"></text></g><g><title>PyArray_New (ctors.c:1357) (2 samples, 0.29%)</title><rect x="423" y="356" width="4" height="15" fill="rgb(242,107,8)"/><text x="426.00" y="366.50"></text></g><g><title>0x7f81e141bf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.44%)</title><rect x="423" y="324" width="5" height="15" fill="rgb(218,17,50)"/><text x="426.00" y="334.50"></text></g><g><title>0x7f81e140bd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.44%)</title><rect x="423" y="340" width="5" height="15" fill="rgb(224,168,52)"/><text x="426.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.15%)</title><rect x="427" y="356" width="1" height="15" fill="rgb(253,109,15)"/><text x="430.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.15%)</title><rect x="427" y="372" width="1" height="15" fill="rgb(209,75,0)"/><text x="430.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.15%)</title><rect x="427" y="388" width="1" height="15" fill="rgb(246,35,33)"/><text x="430.00" y="398.50"></text></g><g><title>0x7f81e142a225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="428" y="356" width="2" height="15" fill="rgb(213,0,48)"/><text x="431.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.15%)</title><rect x="428" y="372" width="2" height="15" fill="rgb(211,23,11)"/><text x="431.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.15%)</title><rect x="428" y="388" width="2" height="15" fill="rgb(250,94,32)"/><text x="431.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.15%)</title><rect x="428" y="404" width="2" height="15" fill="rgb(229,174,44)"/><text x="431.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.15%)</title><rect x="428" y="420" width="2" height="15" fill="rgb(242,227,53)"/><text x="431.00" y="430.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.15%)</title><rect x="428" y="436" width="2" height="15" fill="rgb(238,9,34)"/><text x="431.00" y="446.50"></text></g><g><title>0x7f81e140e5c0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="430" y="388" width="2" height="15" fill="rgb(237,224,25)"/><text x="433.00" y="398.50"></text></g><g><title>0x7f81e142a2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.44%)</title><rect x="430" y="356" width="5" height="15" fill="rgb(228,125,14)"/><text x="433.00" y="366.50"></text></g><g><title>0x7f81e140ed04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.44%)</title><rect x="430" y="372" width="5" height="15" fill="rgb(247,114,51)"/><text x="433.00" y="382.50"></text></g><g><title>0x7f81e140e666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="432" y="388" width="3" height="15" fill="rgb(206,28,35)"/><text x="435.00" y="398.50"></text></g><g><title>0x7f81e14042fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="434" y="404" width="1" height="15" fill="rgb(226,140,1)"/><text x="437.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.15%)</title><rect x="434" y="420" width="1" height="15" fill="rgb(228,143,54)"/><text x="437.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.15%)</title><rect x="434" y="436" width="1" height="15" fill="rgb(228,100,1)"/><text x="437.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.15%)</title><rect x="434" y="452" width="1" height="15" fill="rgb(222,7,45)"/><text x="437.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="434" y="468" width="1" height="15" fill="rgb(211,191,38)"/><text x="437.00" y="478.50"></text></g><g><title>0x7f81e142a2fb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="435" y="356" width="2" height="15" fill="rgb(217,74,8)"/><text x="438.00" y="366.50"></text></g><g><title>0x7f81e142a456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="437" y="356" width="2" height="15" fill="rgb(251,56,31)"/><text x="440.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.15%)</title><rect x="439" y="372" width="1" height="15" fill="rgb(214,107,14)"/><text x="442.00" y="382.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (1 samples, 0.15%)</title><rect x="440" y="452" width="2" height="15" fill="rgb(237,90,43)"/><text x="443.00" y="462.50"></text></g><g><title>0x7f82079f9103 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="442" y="484" width="2" height="15" fill="rgb(214,108,42)"/><text x="445.00" y="494.50"></text></g><g><title>0x7f81e142a592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.59%)</title><rect x="439" y="356" width="7" height="15" fill="rgb(234,88,38)"/><text x="442.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (3 samples, 0.44%)</title><rect x="440" y="372" width="6" height="15" fill="rgb(214,70,1)"/><text x="443.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (3 samples, 0.44%)</title><rect x="440" y="388" width="6" height="15" fill="rgb(249,177,17)"/><text x="443.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (3 samples, 0.44%)</title><rect x="440" y="404" width="6" height="15" fill="rgb(235,12,24)"/><text x="443.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (3 samples, 0.44%)</title><rect x="440" y="420" width="6" height="15" fill="rgb(232,17,37)"/><text x="443.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (3 samples, 0.44%)</title><rect x="440" y="436" width="6" height="15" fill="rgb(233,58,29)"/><text x="443.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (2 samples, 0.29%)</title><rect x="442" y="452" width="4" height="15" fill="rgb(228,62,28)"/><text x="445.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.29%)</title><rect x="442" y="468" width="4" height="15" fill="rgb(248,93,6)"/><text x="445.00" y="478.50"></text></g><g><title>0x7f82079f9120 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="444" y="484" width="2" height="15" fill="rgb(208,227,25)"/><text x="447.00" y="494.50"></text></g><g><title>0x7f81e142a684 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="446" y="356" width="1" height="15" fill="rgb(252,112,37)"/><text x="449.00" y="366.50"></text></g><g><title>0x7f81e142a6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="447" y="356" width="4" height="15" fill="rgb(205,32,11)"/><text x="450.00" y="366.50"></text></g><g><title>0x7f81e142a6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.59%)</title><rect x="451" y="356" width="7" height="15" fill="rgb(210,150,33)"/><text x="454.00" y="366.50"></text></g><g><title>0x7f81e142a6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="458" y="356" width="3" height="15" fill="rgb(233,224,42)"/><text x="461.00" y="366.50"></text></g><g><title>0x7f81e142a6b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="461" y="356" width="2" height="15" fill="rgb(238,114,41)"/><text x="464.00" y="366.50"></text></g><g><title>0x7f81e142a6e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="463" y="356" width="2" height="15" fill="rgb(236,6,46)"/><text x="466.00" y="366.50"></text></g><g><title>0x7f81e142a6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="465" y="356" width="2" height="15" fill="rgb(212,45,22)"/><text x="468.00" y="366.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="465" y="372" width="2" height="15" fill="rgb(210,5,18)"/><text x="468.00" y="382.50"></text></g><g><title>0x7f81e142a7a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="467" y="356" width="3" height="15" fill="rgb(206,65,33)"/><text x="470.00" y="366.50"></text></g><g><title>0x7f81e142a8aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="470" y="356" width="2" height="15" fill="rgb(246,1,14)"/><text x="473.00" y="366.50"></text></g><g><title>0x7f81e142a92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="472" y="356" width="2" height="15" fill="rgb(218,21,38)"/><text x="475.00" y="366.50"></text></g><g><title>0x7f81e13ff8b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="472" y="372" width="2" height="15" fill="rgb(213,7,47)"/><text x="475.00" y="382.50"></text></g><g><title>0x7f81e1402529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="474" y="372" width="3" height="15" fill="rgb(227,84,23)"/><text x="477.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.29%)</title><rect x="474" y="388" width="3" height="15" fill="rgb(224,191,8)"/><text x="477.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:679) (2 samples, 0.29%)</title><rect x="474" y="404" width="3" height="15" fill="rgb(208,121,10)"/><text x="477.00" y="414.50"></text></g><g><title>0x7f8206bfbf30 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="475" y="420" width="2" height="15" fill="rgb(248,123,52)"/><text x="478.00" y="430.50"></text></g><g><title>0x7f81e142b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (29 samples, 4.27%)</title><rect x="428" y="340" width="51" height="15" fill="rgb(252,80,47)"/><text x="431.00" y="350.50">0x7f8..</text></g><g><title>0x7f81e142ac27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.44%)</title><rect x="474" y="356" width="5" height="15" fill="rgb(254,156,10)"/><text x="477.00" y="366.50"></text></g><g><title>0x7f81e14025f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="477" y="372" width="2" height="15" fill="rgb(210,130,24)"/><text x="480.00" y="382.50"></text></g><g><title>0x7f81e14022bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="477" y="388" width="2" height="15" fill="rgb(205,68,42)"/><text x="480.00" y="398.50"></text></g><g><title>0x7f81e1401db9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="477" y="404" width="2" height="15" fill="rgb(243,116,48)"/><text x="480.00" y="414.50"></text></g><g><title>0x7f81e141bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (30 samples, 4.42%)</title><rect x="428" y="324" width="52" height="15" fill="rgb(238,210,17)"/><text x="431.00" y="334.50">0x7f8..</text></g><g><title>0x7f81e142b540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="479" y="340" width="1" height="15" fill="rgb(249,125,13)"/><text x="482.00" y="350.50"></text></g><g><title>0x7f81e14002f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="479" y="356" width="1" height="15" fill="rgb(249,218,48)"/><text x="482.00" y="366.50"></text></g><g><title>0x7f81e13ff55b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="479" y="372" width="1" height="15" fill="rgb(249,228,31)"/><text x="482.00" y="382.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (1 samples, 0.15%)</title><rect x="480" y="372" width="2" height="15" fill="rgb(236,52,16)"/><text x="483.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (3 samples, 0.44%)</title><rect x="480" y="356" width="6" height="15" fill="rgb(209,99,10)"/><text x="483.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3961) (2 samples, 0.29%)</title><rect x="482" y="372" width="4" height="15" fill="rgb(216,91,54)"/><text x="485.00" y="382.50"></text></g><g><title>0x7f81e141c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.59%)</title><rect x="480" y="324" width="7" height="15" fill="rgb(237,186,36)"/><text x="483.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (4 samples, 0.59%)</title><rect x="480" y="340" width="7" height="15" fill="rgb(213,182,3)"/><text x="483.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.15%)</title><rect x="486" y="356" width="1" height="15" fill="rgb(211,8,30)"/><text x="489.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.15%)</title><rect x="486" y="372" width="1" height="15" fill="rgb(211,3,18)"/><text x="489.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.15%)</title><rect x="486" y="388" width="1" height="15" fill="rgb(243,202,12)"/><text x="489.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.15%)</title><rect x="486" y="404" width="1" height="15" fill="rgb(229,133,29)"/><text x="489.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c:2094) (1 samples, 0.15%)</title><rect x="486" y="420" width="1" height="15" fill="rgb(208,140,3)"/><text x="489.00" y="430.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (39 samples, 5.74%)</title><rect x="421" y="292" width="68" height="15" fill="rgb(234,201,19)"/><text x="424.00" y="302.50">predict..</text></g><g><title>0x7f81e141cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (38 samples, 5.60%)</title><rect x="423" y="308" width="66" height="15" fill="rgb(211,106,42)"/><text x="426.00" y="318.50">0x7f81e..</text></g><g><title>0x7f81e141c328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="487" y="324" width="2" height="15" fill="rgb(245,213,27)"/><text x="490.00" y="334.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.15%)</title><rect x="487" y="340" width="2" height="15" fill="rgb(217,78,16)"/><text x="490.00" y="350.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:40) (1 samples, 0.15%)</title><rect x="487" y="356" width="2" height="15" fill="rgb(216,25,38)"/><text x="490.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.15%)</title><rect x="489" y="292" width="2" height="15" fill="rgb(231,27,8)"/><text x="492.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.15%)</title><rect x="493" y="356" width="1" height="15" fill="rgb(237,58,35)"/><text x="496.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.15%)</title><rect x="493" y="372" width="1" height="15" fill="rgb(242,152,47)"/><text x="496.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.15%)</title><rect x="493" y="388" width="1" height="15" fill="rgb(251,122,36)"/><text x="496.00" y="398.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.29%)</title><rect x="493" y="308" width="3" height="15" fill="rgb(223,117,2)"/><text x="496.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (2 samples, 0.29%)</title><rect x="493" y="324" width="3" height="15" fill="rgb(253,200,50)"/><text x="496.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (2 samples, 0.29%)</title><rect x="493" y="340" width="3" height="15" fill="rgb(218,71,47)"/><text x="496.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.15%)</title><rect x="494" y="356" width="2" height="15" fill="rgb(217,122,49)"/><text x="497.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.15%)</title><rect x="494" y="372" width="2" height="15" fill="rgb(206,157,40)"/><text x="497.00" y="382.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.15%)</title><rect x="503" y="356" width="2" height="15" fill="rgb(210,220,15)"/><text x="506.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.15%)</title><rect x="503" y="372" width="2" height="15" fill="rgb(237,91,8)"/><text x="506.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.15%)</title><rect x="503" y="388" width="2" height="15" fill="rgb(221,8,11)"/><text x="506.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.15%)</title><rect x="503" y="404" width="2" height="15" fill="rgb(207,100,38)"/><text x="506.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.15%)</title><rect x="503" y="420" width="2" height="15" fill="rgb(243,12,16)"/><text x="506.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.15%)</title><rect x="503" y="436" width="2" height="15" fill="rgb(244,19,26)"/><text x="506.00" y="446.50"></text></g><g><title>0x7f82079eee7a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="503" y="452" width="2" height="15" fill="rgb(245,144,6)"/><text x="506.00" y="462.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.15%)</title><rect x="505" y="436" width="2" height="15" fill="rgb(236,21,41)"/><text x="508.00" y="446.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.29%)</title><rect x="505" y="388" width="3" height="15" fill="rgb(242,87,39)"/><text x="508.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.29%)</title><rect x="505" y="404" width="3" height="15" fill="rgb(246,110,36)"/><text x="508.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.29%)</title><rect x="505" y="420" width="3" height="15" fill="rgb(228,203,24)"/><text x="508.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2195) (1 samples, 0.15%)</title><rect x="507" y="436" width="1" height="15" fill="rgb(244,204,19)"/><text x="510.00" y="446.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3790) (1 samples, 0.15%)</title><rect x="508" y="452" width="2" height="15" fill="rgb(208,32,53)"/><text x="511.00" y="462.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:110) (1 samples, 0.15%)</title><rect x="508" y="468" width="2" height="15" fill="rgb(239,8,12)"/><text x="511.00" y="478.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (2 samples, 0.29%)</title><rect x="508" y="436" width="4" height="15" fill="rgb(235,28,13)"/><text x="511.00" y="446.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3794) (1 samples, 0.15%)</title><rect x="510" y="452" width="2" height="15" fill="rgb(244,189,19)"/><text x="513.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.44%)</title><rect x="508" y="404" width="5" height="15" fill="rgb(217,114,39)"/><text x="511.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 0.44%)</title><rect x="508" y="420" width="5" height="15" fill="rgb(226,87,48)"/><text x="511.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.15%)</title><rect x="512" y="436" width="1" height="15" fill="rgb(242,128,3)"/><text x="515.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:49) (1 samples, 0.15%)</title><rect x="512" y="452" width="1" height="15" fill="rgb(238,108,45)"/><text x="515.00" y="462.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.15%)</title><rect x="512" y="468" width="1" height="15" fill="rgb(221,65,51)"/><text x="515.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.15%)</title><rect x="513" y="420" width="2" height="15" fill="rgb(215,94,33)"/><text x="516.00" y="430.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2269) (1 samples, 0.15%)</title><rect x="513" y="436" width="2" height="15" fill="rgb(246,69,28)"/><text x="516.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.29%)</title><rect x="513" y="404" width="4" height="15" fill="rgb(239,222,23)"/><text x="516.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.15%)</title><rect x="515" y="420" width="2" height="15" fill="rgb(225,167,32)"/><text x="518.00" y="430.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1645) (1 samples, 0.15%)</title><rect x="515" y="436" width="2" height="15" fill="rgb(250,204,34)"/><text x="518.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.15%)</title><rect x="517" y="404" width="2" height="15" fill="rgb(213,49,21)"/><text x="520.00" y="414.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.15%)</title><rect x="517" y="420" width="2" height="15" fill="rgb(249,223,28)"/><text x="520.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.15%)</title><rect x="517" y="436" width="2" height="15" fill="rgb(231,216,21)"/><text x="520.00" y="446.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.15%)</title><rect x="517" y="452" width="2" height="15" fill="rgb(233,179,36)"/><text x="520.00" y="462.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.15%)</title><rect x="519" y="420" width="1" height="15" fill="rgb(249,166,41)"/><text x="522.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.15%)</title><rect x="520" y="420" width="2" height="15" fill="rgb(250,202,44)"/><text x="523.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.15%)</title><rect x="522" y="420" width="2" height="15" fill="rgb(220,47,52)"/><text x="525.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.15%)</title><rect x="524" y="420" width="2" height="15" fill="rgb(228,150,29)"/><text x="527.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.29%)</title><rect x="526" y="436" width="3" height="15" fill="rgb(214,229,12)"/><text x="529.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.15%)</title><rect x="534" y="452" width="2" height="15" fill="rgb(238,55,27)"/><text x="537.00" y="462.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (10 samples, 1.47%)</title><rect x="529" y="436" width="17" height="15" fill="rgb(206,151,39)"/><text x="532.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (6 samples, 0.88%)</title><rect x="536" y="452" width="10" height="15" fill="rgb(232,47,17)"/><text x="539.00" y="462.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.15%)</title><rect x="546" y="436" width="2" height="15" fill="rgb(250,67,13)"/><text x="549.00" y="446.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.15%)</title><rect x="548" y="436" width="2" height="15" fill="rgb(254,139,13)"/><text x="551.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (35 samples, 5.15%)</title><rect x="491" y="292" width="61" height="15" fill="rgb(251,36,17)"/><text x="494.00" y="302.50">predic..</text></g><g><title>array_sum (methods.c:2215) (32 samples, 4.71%)</title><rect x="496" y="308" width="56" height="15" fill="rgb(219,119,46)"/><text x="499.00" y="318.50">array..</text></g><g><title>forward_ndarray_method (methods.c:108) (31 samples, 4.57%)</title><rect x="498" y="324" width="54" height="15" fill="rgb(237,24,5)"/><text x="501.00" y="334.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py:38) (29 samples, 4.27%)</title><rect x="501" y="340" width="51" height="15" fill="rgb(245,201,44)"/><text x="504.00" y="350.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (27 samples, 3.98%)</title><rect x="505" y="356" width="47" height="15" fill="rgb(224,133,12)"/><text x="508.00" y="366.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (27 samples, 3.98%)</title><rect x="505" y="372" width="47" height="15" fill="rgb(223,68,32)"/><text x="508.00" y="382.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (25 samples, 3.68%)</title><rect x="508" y="388" width="44" height="15" fill="rgb(243,129,36)"/><text x="511.00" y="398.50">PyUF..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (19 samples, 2.80%)</title><rect x="519" y="404" width="33" height="15" fill="rgb(252,202,47)"/><text x="522.00" y="414.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (15 samples, 2.21%)</title><rect x="526" y="420" width="26" height="15" fill="rgb(219,95,33)"/><text x="529.00" y="430.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.15%)</title><rect x="550" y="436" width="2" height="15" fill="rgb(220,113,8)"/><text x="553.00" y="446.50"></text></g><g><title>array_assign_subscript (mapping.c:1850) (1 samples, 0.15%)</title><rect x="552" y="308" width="1" height="15" fill="rgb(247,226,19)"/><text x="555.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.15%)</title><rect x="552" y="324" width="1" height="15" fill="rgb(221,153,14)"/><text x="555.00" y="334.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.15%)</title><rect x="552" y="340" width="1" height="15" fill="rgb(218,220,0)"/><text x="555.00" y="350.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.15%)</title><rect x="552" y="356" width="1" height="15" fill="rgb(207,37,23)"/><text x="555.00" y="366.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:71) (1 samples, 0.15%)</title><rect x="552" y="372" width="1" height="15" fill="rgb(224,227,45)"/><text x="555.00" y="382.50"></text></g><g><title>array_assign_subscript (mapping.c:2066) (1 samples, 0.15%)</title><rect x="553" y="308" width="2" height="15" fill="rgb(216,146,26)"/><text x="556.00" y="318.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.15%)</title><rect x="555" y="308" width="2" height="15" fill="rgb(239,186,13)"/><text x="558.00" y="318.50"></text></g><g><title>binop_should_defer (binop_override.h:142) (1 samples, 0.15%)</title><rect x="555" y="324" width="2" height="15" fill="rgb(244,153,26)"/><text x="558.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.15%)</title><rect x="559" y="324" width="1" height="15" fill="rgb(205,89,18)"/><text x="562.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.15%)</title><rect x="559" y="340" width="1" height="15" fill="rgb(241,168,3)"/><text x="562.00" y="350.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.15%)</title><rect x="559" y="356" width="1" height="15" fill="rgb(237,216,54)"/><text x="562.00" y="366.50"></text></g><g><title>0x7f8206bfb9d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="559" y="372" width="1" height="15" fill="rgb(214,53,23)"/><text x="562.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.29%)</title><rect x="560" y="340" width="4" height="15" fill="rgb(222,9,38)"/><text x="563.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.29%)</title><rect x="560" y="356" width="4" height="15" fill="rgb(241,80,49)"/><text x="563.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (2 samples, 0.29%)</title><rect x="560" y="372" width="4" height="15" fill="rgb(238,136,41)"/><text x="563.00" y="382.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (2 samples, 0.29%)</title><rect x="560" y="388" width="4" height="15" fill="rgb(228,223,39)"/><text x="563.00" y="398.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (2 samples, 0.29%)</title><rect x="560" y="404" width="4" height="15" fill="rgb(229,204,45)"/><text x="563.00" y="414.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:67) (2 samples, 0.29%)</title><rect x="560" y="420" width="4" height="15" fill="rgb(238,95,31)"/><text x="563.00" y="430.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.15%)</title><rect x="564" y="372" width="2" height="15" fill="rgb(251,92,14)"/><text x="567.00" y="382.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="564" y="388" width="2" height="15" fill="rgb(215,38,30)"/><text x="567.00" y="398.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src:973) (1 samples, 0.15%)</title><rect x="566" y="420" width="1" height="15" fill="rgb(222,123,23)"/><text x="569.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.74%)</title><rect x="560" y="324" width="9" height="15" fill="rgb(240,75,54)"/><text x="563.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.44%)</title><rect x="564" y="340" width="5" height="15" fill="rgb(236,198,46)"/><text x="567.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.44%)</title><rect x="564" y="356" width="5" height="15" fill="rgb(245,106,26)"/><text x="567.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.29%)</title><rect x="566" y="372" width="3" height="15" fill="rgb(207,25,54)"/><text x="569.00" y="382.50"></text></g><g><title>DOUBLE_equal (loops.c.src:1773) (2 samples, 0.29%)</title><rect x="566" y="388" width="3" height="15" fill="rgb(205,164,3)"/><text x="569.00" y="398.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src:295) (2 samples, 0.29%)</title><rect x="566" y="404" width="3" height="15" fill="rgb(241,205,16)"/><text x="569.00" y="414.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src:985) (1 samples, 0.15%)</title><rect x="567" y="420" width="2" height="15" fill="rgb(245,127,11)"/><text x="570.00" y="430.50"></text></g><g><title>sse2_compress4_to_byte_DOUBLE (simd.inc.src:800) (1 samples, 0.15%)</title><rect x="567" y="436" width="2" height="15" fill="rgb(217,163,24)"/><text x="570.00" y="446.50"></text></g><g><title>_mm_storel_epi64 (emmintrin.h:708) (1 samples, 0.15%)</title><rect x="567" y="452" width="2" height="15" fill="rgb(206,25,46)"/><text x="570.00" y="462.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (11 samples, 1.62%)</title><rect x="552" y="292" width="19" height="15" fill="rgb(248,93,43)"/><text x="555.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (8 samples, 1.18%)</title><rect x="557" y="308" width="14" height="15" fill="rgb(234,88,44)"/><text x="560.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4730) (1 samples, 0.15%)</title><rect x="569" y="324" width="2" height="15" fill="rgb(215,197,15)"/><text x="572.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.15%)</title><rect x="571" y="308" width="2" height="15" fill="rgb(241,62,24)"/><text x="574.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.15%)</title><rect x="571" y="324" width="2" height="15" fill="rgb(250,12,18)"/><text x="574.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.15%)</title><rect x="571" y="340" width="2" height="15" fill="rgb(217,95,15)"/><text x="574.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1187) (1 samples, 0.15%)</title><rect x="573" y="388" width="1" height="15" fill="rgb(208,24,3)"/><text x="576.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.29%)</title><rect x="573" y="372" width="3" height="15" fill="rgb(222,182,3)"/><text x="576.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.15%)</title><rect x="574" y="388" width="2" height="15" fill="rgb(212,148,25)"/><text x="577.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.15%)</title><rect x="574" y="404" width="2" height="15" fill="rgb(254,125,38)"/><text x="577.00" y="414.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.44%)</title><rect x="573" y="356" width="5" height="15" fill="rgb(240,193,11)"/><text x="576.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.15%)</title><rect x="576" y="372" width="2" height="15" fill="rgb(243,196,49)"/><text x="579.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.15%)</title><rect x="576" y="388" width="2" height="15" fill="rgb(219,48,12)"/><text x="579.00" y="398.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.15%)</title><rect x="578" y="372" width="2" height="15" fill="rgb(209,88,52)"/><text x="581.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.15%)</title><rect x="578" y="388" width="2" height="15" fill="rgb(253,179,4)"/><text x="581.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="578" y="404" width="2" height="15" fill="rgb(223,106,16)"/><text x="581.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (2 samples, 0.29%)</title><rect x="580" y="404" width="3" height="15" fill="rgb(207,192,4)"/><text x="583.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.15%)</title><rect x="583" y="404" width="2" height="15" fill="rgb(212,57,37)"/><text x="586.00" y="414.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 0.88%)</title><rect x="578" y="356" width="10" height="15" fill="rgb(211,41,44)"/><text x="581.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.74%)</title><rect x="580" y="372" width="8" height="15" fill="rgb(230,154,4)"/><text x="583.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.74%)</title><rect x="580" y="388" width="8" height="15" fill="rgb(205,190,12)"/><text x="583.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.29%)</title><rect x="585" y="404" width="3" height="15" fill="rgb(229,82,48)"/><text x="588.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.29%)</title><rect x="585" y="420" width="3" height="15" fill="rgb(218,148,24)"/><text x="588.00" y="430.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (2 samples, 0.29%)</title><rect x="588" y="404" width="4" height="15" fill="rgb(207,217,13)"/><text x="591.00" y="414.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (2 samples, 0.29%)</title><rect x="588" y="420" width="4" height="15" fill="rgb(215,194,11)"/><text x="591.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (5 samples, 0.74%)</title><rect x="588" y="356" width="9" height="15" fill="rgb(248,122,29)"/><text x="591.00" y="366.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (5 samples, 0.74%)</title><rect x="588" y="372" width="9" height="15" fill="rgb(219,29,32)"/><text x="591.00" y="382.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (5 samples, 0.74%)</title><rect x="588" y="388" width="9" height="15" fill="rgb(242,116,42)"/><text x="591.00" y="398.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (3 samples, 0.44%)</title><rect x="592" y="404" width="5" height="15" fill="rgb(233,12,44)"/><text x="595.00" y="414.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 0.44%)</title><rect x="592" y="420" width="5" height="15" fill="rgb(226,142,10)"/><text x="595.00" y="430.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (111 samples, 16.35%)</title><rect x="406" y="276" width="193" height="15" fill="rgb(211,181,40)"/><text x="409.00" y="286.50">_accumulate_prediction (s..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (16 samples, 2.36%)</title><rect x="571" y="292" width="28" height="15" fill="rgb(215,118,13)"/><text x="574.00" y="302.50">p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 2.21%)</title><rect x="573" y="308" width="26" height="15" fill="rgb(245,118,15)"/><text x="576.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (15 samples, 2.21%)</title><rect x="573" y="324" width="26" height="15" fill="rgb(227,2,51)"/><text x="576.00" y="334.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (15 samples, 2.21%)</title><rect x="573" y="340" width="26" height="15" fill="rgb(227,152,41)"/><text x="576.00" y="350.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.15%)</title><rect x="597" y="356" width="2" height="15" fill="rgb(214,181,36)"/><text x="600.00" y="366.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (3 samples, 0.44%)</title><rect x="599" y="276" width="5" height="15" fill="rgb(213,157,25)"/><text x="602.00" y="286.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (3 samples, 0.44%)</title><rect x="599" y="292" width="5" height="15" fill="rgb(207,131,5)"/><text x="602.00" y="302.50"></text></g><g><title>0x7f82079ee730 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="602" y="308" width="2" height="15" fill="rgb(216,119,4)"/><text x="605.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.15%)</title><rect x="606" y="308" width="1" height="15" fill="rgb(231,201,54)"/><text x="609.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.15%)</title><rect x="606" y="324" width="1" height="15" fill="rgb(227,136,3)"/><text x="609.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.15%)</title><rect x="607" y="356" width="2" height="15" fill="rgb(247,147,11)"/><text x="610.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.15%)</title><rect x="607" y="372" width="2" height="15" fill="rgb(241,79,17)"/><text x="610.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.15%)</title><rect x="607" y="388" width="2" height="15" fill="rgb(212,197,17)"/><text x="610.00" y="398.50"></text></g><g><title>0x7f82079907a5 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="607" y="404" width="2" height="15" fill="rgb(208,118,53)"/><text x="610.00" y="414.50"></text></g><g><title>0x7f82079907c2 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="607" y="420" width="2" height="15" fill="rgb(245,194,49)"/><text x="610.00" y="430.50"></text></g><g><title>0x7f8207990767 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="607" y="436" width="2" height="15" fill="rgb(248,224,6)"/><text x="610.00" y="446.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:372) (1 samples, 0.15%)</title><rect x="609" y="388" width="2" height="15" fill="rgb(249,183,47)"/><text x="612.00" y="398.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.15%)</title><rect x="609" y="404" width="2" height="15" fill="rgb(242,161,50)"/><text x="612.00" y="414.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:242) (1 samples, 0.15%)</title><rect x="609" y="420" width="2" height="15" fill="rgb(221,59,19)"/><text x="612.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (3 samples, 0.44%)</title><rect x="607" y="324" width="6" height="15" fill="rgb(216,47,18)"/><text x="610.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 0.44%)</title><rect x="607" y="340" width="6" height="15" fill="rgb(222,89,4)"/><text x="610.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.29%)</title><rect x="609" y="356" width="4" height="15" fill="rgb(253,173,40)"/><text x="612.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.29%)</title><rect x="609" y="372" width="4" height="15" fill="rgb(209,179,28)"/><text x="612.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.15%)</title><rect x="611" y="388" width="2" height="15" fill="rgb(222,84,8)"/><text x="614.00" y="398.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:312) (1 samples, 0.15%)</title><rect x="611" y="404" width="2" height="15" fill="rgb(228,150,8)"/><text x="614.00" y="414.50"></text></g><g><title>add_128 (npy_extint128.h:135) (1 samples, 0.15%)</title><rect x="611" y="420" width="2" height="15" fill="rgb(216,194,22)"/><text x="614.00" y="430.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (7 samples, 1.03%)</title><rect x="604" y="276" width="12" height="15" fill="rgb(215,204,27)"/><text x="607.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.88%)</title><rect x="606" y="292" width="10" height="15" fill="rgb(218,120,43)"/><text x="609.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.74%)</title><rect x="607" y="308" width="9" height="15" fill="rgb(240,94,18)"/><text x="610.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.29%)</title><rect x="613" y="324" width="3" height="15" fill="rgb(218,50,52)"/><text x="616.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.29%)</title><rect x="613" y="340" width="3" height="15" fill="rgb(210,7,48)"/><text x="616.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.29%)</title><rect x="613" y="356" width="3" height="15" fill="rgb(250,82,35)"/><text x="616.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.29%)</title><rect x="613" y="372" width="3" height="15" fill="rgb(219,202,35)"/><text x="616.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (2 samples, 0.29%)</title><rect x="613" y="388" width="3" height="15" fill="rgb(254,2,17)"/><text x="616.00" y="398.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (2 samples, 0.29%)</title><rect x="613" y="404" width="3" height="15" fill="rgb(233,203,27)"/><text x="616.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.15%)</title><rect x="616" y="292" width="2" height="15" fill="rgb(254,179,28)"/><text x="619.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (123 samples, 18.11%)</title><rect x="406" y="260" width="213" height="15" fill="rgb(246,107,3)"/><text x="409.00" y="270.50">&lt;listcomp&gt; (joblib/parallel...</text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.29%)</title><rect x="616" y="276" width="3" height="15" fill="rgb(229,88,17)"/><text x="619.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.15%)</title><rect x="618" y="292" width="1" height="15" fill="rgb(212,53,30)"/><text x="621.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.15%)</title><rect x="618" y="308" width="1" height="15" fill="rgb(248,31,9)"/><text x="621.00" y="318.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (130 samples, 19.15%)</title><rect x="395" y="212" width="226" height="15" fill="rgb(249,10,30)"/><text x="398.00" y="222.50">apply_async (joblib/_parallel..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (129 samples, 19.00%)</title><rect x="397" y="228" width="224" height="15" fill="rgb(220,170,1)"/><text x="400.00" y="238.50">__init__ (joblib/_parallel_ba..</text></g><g><title>__call__ (joblib/parallel.py:256) (126 samples, 18.56%)</title><rect x="402" y="244" width="219" height="15" fill="rgb(227,192,48)"/><text x="405.00" y="254.50">__call__ (joblib/parallel.py..</text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.15%)</title><rect x="619" y="260" width="2" height="15" fill="rgb(248,160,40)"/><text x="622.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:220) (1 samples, 0.15%)</title><rect x="619" y="276" width="2" height="15" fill="rgb(229,104,49)"/><text x="622.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.15%)</title><rect x="621" y="228" width="2" height="15" fill="rgb(233,31,12)"/><text x="624.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (132 samples, 19.44%)</title><rect x="395" y="196" width="230" height="15" fill="rgb(215,157,13)"/><text x="398.00" y="206.50">_dispatch (joblib/parallel.py:..</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (2 samples, 0.29%)</title><rect x="621" y="212" width="4" height="15" fill="rgb(244,64,0)"/><text x="624.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (1 samples, 0.15%)</title><rect x="623" y="228" width="2" height="15" fill="rgb(237,227,41)"/><text x="626.00" y="238.50"></text></g><g><title>print_progress (joblib/parallel.py:850) (1 samples, 0.15%)</title><rect x="623" y="244" width="2" height="15" fill="rgb(250,201,17)"/><text x="626.00" y="254.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (192 samples, 28.28%)</title><rect x="296" y="148" width="334" height="15" fill="rgb(211,31,23)"/><text x="299.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:66..</text></g><g><title>__call__ (joblib/parallel.py:1006) (190 samples, 27.98%)</title><rect x="300" y="164" width="330" height="15" fill="rgb(216,100,46)"/><text x="303.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (139 samples, 20.47%)</title><rect x="388" y="180" width="242" height="15" fill="rgb(239,53,5)"/><text x="391.00" y="190.50">dispatch_one_batch (joblib/paral..</text></g><g><title>_dispatch (joblib/parallel.py:758) (3 samples, 0.44%)</title><rect x="625" y="196" width="5" height="15" fill="rgb(230,183,27)"/><text x="628.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:38) (354 samples, 52.14%)</title><rect x="16" y="52" width="616" height="15" fill="rgb(245,88,17)"/><text x="19.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:37) (354 samples, 52.14%)</title><rect x="16" y="68" width="616" height="15" fill="rgb(218,127,28)"/><text x="19.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:29) (353 samples, 51.99%)</title><rect x="18" y="84" width="614" height="15" fill="rgb(206,87,13)"/><text x="21.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:29)</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:23) (196 samples, 28.87%)</title><rect x="291" y="100" width="341" height="15" fill="rgb(214,182,21)"/><text x="294.00" y="110.50">profile (bench_RandomForestClassifier_default_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (196 samples, 28.87%)</title><rect x="291" y="116" width="341" height="15" fill="rgb(244,113,33)"/><text x="294.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (196 samples, 28.87%)</title><rect x="291" y="132" width="341" height="15" fill="rgb(214,42,47)"/><text x="294.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:672) (1 samples, 0.15%)</title><rect x="630" y="148" width="2" height="15" fill="rgb(228,97,34)"/><text x="633.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.15%)</title><rect x="630" y="164" width="2" height="15" fill="rgb(241,187,10)"/><text x="633.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.15%)</title><rect x="630" y="180" width="2" height="15" fill="rgb(247,117,13)"/><text x="633.00" y="190.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.15%)</title><rect x="630" y="196" width="2" height="15" fill="rgb(232,177,48)"/><text x="633.00" y="206.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.15%)</title><rect x="630" y="212" width="2" height="15" fill="rgb(224,118,22)"/><text x="633.00" y="222.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.15%)</title><rect x="630" y="228" width="2" height="15" fill="rgb(206,126,21)"/><text x="633.00" y="238.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.15%)</title><rect x="630" y="244" width="2" height="15" fill="rgb(242,172,22)"/><text x="633.00" y="254.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.15%)</title><rect x="630" y="260" width="2" height="15" fill="rgb(218,47,32)"/><text x="633.00" y="270.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.15%)</title><rect x="632" y="852" width="1" height="15" fill="rgb(241,188,17)"/><text x="635.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.15%)</title><rect x="632" y="868" width="1" height="15" fill="rgb(242,68,6)"/><text x="635.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.15%)</title><rect x="632" y="884" width="1" height="15" fill="rgb(237,196,53)"/><text x="635.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.15%)</title><rect x="632" y="900" width="1" height="15" fill="rgb(214,225,1)"/><text x="635.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.15%)</title><rect x="632" y="916" width="1" height="15" fill="rgb(227,126,34)"/><text x="635.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.15%)</title><rect x="632" y="932" width="1" height="15" fill="rgb(246,196,47)"/><text x="635.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.15%)</title><rect x="632" y="948" width="1" height="15" fill="rgb(237,39,41)"/><text x="635.00" y="958.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.15%)</title><rect x="632" y="964" width="1" height="15" fill="rgb(248,200,30)"/><text x="635.00" y="974.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.15%)</title><rect x="632" y="980" width="1" height="15" fill="rgb(222,185,21)"/><text x="635.00" y="990.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.15%)</title><rect x="633" y="1044" width="2" height="15" fill="rgb(219,123,22)"/><text x="636.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.44%)</title><rect x="632" y="820" width="5" height="15" fill="rgb(208,182,28)"/><text x="635.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.44%)</title><rect x="632" y="836" width="5" height="15" fill="rgb(236,190,24)"/><text x="635.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.29%)</title><rect x="633" y="852" width="4" height="15" fill="rgb(227,55,20)"/><text x="636.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.29%)</title><rect x="633" y="868" width="4" height="15" fill="rgb(234,70,16)"/><text x="636.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.29%)</title><rect x="633" y="884" width="4" height="15" fill="rgb(241,6,54)"/><text x="636.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.29%)</title><rect x="633" y="900" width="4" height="15" fill="rgb(206,203,17)"/><text x="636.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.29%)</title><rect x="633" y="916" width="4" height="15" fill="rgb(212,222,27)"/><text x="636.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.29%)</title><rect x="633" y="932" width="4" height="15" fill="rgb(218,204,30)"/><text x="636.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.29%)</title><rect x="633" y="948" width="4" height="15" fill="rgb(244,77,34)"/><text x="636.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (2 samples, 0.29%)</title><rect x="633" y="964" width="4" height="15" fill="rgb(212,90,43)"/><text x="636.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (2 samples, 0.29%)</title><rect x="633" y="980" width="4" height="15" fill="rgb(230,205,40)"/><text x="636.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (2 samples, 0.29%)</title><rect x="633" y="996" width="4" height="15" fill="rgb(233,152,10)"/><text x="636.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (2 samples, 0.29%)</title><rect x="633" y="1012" width="4" height="15" fill="rgb(243,182,22)"/><text x="636.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.29%)</title><rect x="633" y="1028" width="4" height="15" fill="rgb(235,88,44)"/><text x="636.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.15%)</title><rect x="635" y="1044" width="2" height="15" fill="rgb(236,14,14)"/><text x="638.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:41) (1 samples, 0.15%)</title><rect x="637" y="820" width="2" height="15" fill="rgb(251,107,52)"/><text x="640.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="637" y="836" width="2" height="15" fill="rgb(211,146,11)"/><text x="640.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="637" y="852" width="2" height="15" fill="rgb(223,219,37)"/><text x="640.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="637" y="868" width="2" height="15" fill="rgb(226,62,48)"/><text x="640.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="637" y="884" width="2" height="15" fill="rgb(205,126,41)"/><text x="640.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="637" y="900" width="2" height="15" fill="rgb(232,47,20)"/><text x="640.00" y="910.50"></text></g><g><title>&lt;module&gt; (inspect.py:1679) (1 samples, 0.15%)</title><rect x="637" y="916" width="2" height="15" fill="rgb(232,45,32)"/><text x="640.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:2) (5 samples, 0.74%)</title><rect x="632" y="148" width="8" height="15" fill="rgb(214,67,21)"/><text x="635.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="632" y="164" width="8" height="15" fill="rgb(224,123,47)"/><text x="635.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.74%)</title><rect x="632" y="180" width="8" height="15" fill="rgb(209,117,45)"/><text x="635.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="632" y="196" width="8" height="15" fill="rgb(236,208,21)"/><text x="635.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="632" y="212" width="8" height="15" fill="rgb(206,131,46)"/><text x="635.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.74%)</title><rect x="632" y="228" width="8" height="15" fill="rgb(230,191,20)"/><text x="635.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.74%)</title><rect x="632" y="244" width="8" height="15" fill="rgb(245,224,39)"/><text x="635.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.74%)</title><rect x="632" y="260" width="8" height="15" fill="rgb(221,22,8)"/><text x="635.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="632" y="276" width="8" height="15" fill="rgb(218,224,18)"/><text x="635.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.74%)</title><rect x="632" y="292" width="8" height="15" fill="rgb(232,102,39)"/><text x="635.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="632" y="308" width="8" height="15" fill="rgb(254,190,31)"/><text x="635.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.74%)</title><rect x="632" y="324" width="8" height="15" fill="rgb(205,0,9)"/><text x="635.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.74%)</title><rect x="632" y="340" width="8" height="15" fill="rgb(248,81,24)"/><text x="635.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.74%)</title><rect x="632" y="356" width="8" height="15" fill="rgb(237,112,4)"/><text x="635.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="632" y="372" width="8" height="15" fill="rgb(235,72,30)"/><text x="635.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 0.74%)</title><rect x="632" y="388" width="8" height="15" fill="rgb(207,143,0)"/><text x="635.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="632" y="404" width="8" height="15" fill="rgb(214,77,13)"/><text x="635.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.74%)</title><rect x="632" y="420" width="8" height="15" fill="rgb(230,192,15)"/><text x="635.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.74%)</title><rect x="632" y="436" width="8" height="15" fill="rgb(214,122,13)"/><text x="635.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.74%)</title><rect x="632" y="452" width="8" height="15" fill="rgb(229,78,16)"/><text x="635.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="632" y="468" width="8" height="15" fill="rgb(206,15,41)"/><text x="635.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 0.74%)</title><rect x="632" y="484" width="8" height="15" fill="rgb(209,115,45)"/><text x="635.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="632" y="500" width="8" height="15" fill="rgb(251,134,24)"/><text x="635.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.74%)</title><rect x="632" y="516" width="8" height="15" fill="rgb(248,69,23)"/><text x="635.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.74%)</title><rect x="632" y="532" width="8" height="15" fill="rgb(237,216,5)"/><text x="635.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.74%)</title><rect x="632" y="548" width="8" height="15" fill="rgb(205,26,1)"/><text x="635.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="632" y="564" width="8" height="15" fill="rgb(228,200,36)"/><text x="635.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 0.74%)</title><rect x="632" y="580" width="8" height="15" fill="rgb(247,180,38)"/><text x="635.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="632" y="596" width="8" height="15" fill="rgb(248,117,24)"/><text x="635.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.74%)</title><rect x="632" y="612" width="8" height="15" fill="rgb(235,213,23)"/><text x="635.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="632" y="628" width="8" height="15" fill="rgb(217,100,16)"/><text x="635.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="632" y="644" width="8" height="15" fill="rgb(247,110,48)"/><text x="635.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.74%)</title><rect x="632" y="660" width="8" height="15" fill="rgb(222,154,2)"/><text x="635.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.74%)</title><rect x="632" y="676" width="8" height="15" fill="rgb(217,216,33)"/><text x="635.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.74%)</title><rect x="632" y="692" width="8" height="15" fill="rgb(216,61,44)"/><text x="635.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="632" y="708" width="8" height="15" fill="rgb(252,24,1)"/><text x="635.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 0.74%)</title><rect x="632" y="724" width="8" height="15" fill="rgb(242,6,18)"/><text x="635.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="632" y="740" width="8" height="15" fill="rgb(218,77,43)"/><text x="635.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.74%)</title><rect x="632" y="756" width="8" height="15" fill="rgb(224,125,18)"/><text x="635.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.74%)</title><rect x="632" y="772" width="8" height="15" fill="rgb(233,145,19)"/><text x="635.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.74%)</title><rect x="632" y="788" width="8" height="15" fill="rgb(230,114,21)"/><text x="635.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="632" y="804" width="8" height="15" fill="rgb(219,188,41)"/><text x="635.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.15%)</title><rect x="639" y="820" width="1" height="15" fill="rgb(218,201,5)"/><text x="642.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="639" y="836" width="1" height="15" fill="rgb(234,102,2)"/><text x="642.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="639" y="852" width="1" height="15" fill="rgb(215,58,36)"/><text x="642.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="639" y="868" width="1" height="15" fill="rgb(253,53,34)"/><text x="642.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="639" y="884" width="1" height="15" fill="rgb(247,61,10)"/><text x="642.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="639" y="900" width="1" height="15" fill="rgb(236,65,48)"/><text x="642.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.15%)</title><rect x="639" y="916" width="1" height="15" fill="rgb(205,65,0)"/><text x="642.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="639" y="932" width="1" height="15" fill="rgb(215,20,9)"/><text x="642.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="639" y="948" width="1" height="15" fill="rgb(254,49,6)"/><text x="642.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.15%)</title><rect x="639" y="964" width="1" height="15" fill="rgb(236,53,48)"/><text x="642.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.15%)</title><rect x="639" y="980" width="1" height="15" fill="rgb(247,142,28)"/><text x="642.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.15%)</title><rect x="639" y="996" width="1" height="15" fill="rgb(216,203,1)"/><text x="642.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="639" y="1012" width="1" height="15" fill="rgb(249,63,23)"/><text x="642.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="639" y="1028" width="1" height="15" fill="rgb(214,91,37)"/><text x="642.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="639" y="1044" width="1" height="15" fill="rgb(207,217,31)"/><text x="642.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="639" y="1060" width="1" height="15" fill="rgb(249,48,24)"/><text x="642.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="639" y="1076" width="1" height="15" fill="rgb(205,109,22)"/><text x="642.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5399) (1 samples, 0.15%)</title><rect x="639" y="1092" width="1" height="15" fill="rgb(207,71,34)"/><text x="642.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py:5586) (1 samples, 0.15%)</title><rect x="639" y="1108" width="1" height="15" fill="rgb(216,120,46)"/><text x="642.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:4255) (1 samples, 0.15%)</title><rect x="639" y="1124" width="1" height="15" fill="rgb(234,149,24)"/><text x="642.00" y="1134.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3747) (1 samples, 0.15%)</title><rect x="639" y="1140" width="1" height="15" fill="rgb(206,176,14)"/><text x="642.00" y="1150.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.15%)</title><rect x="639" y="1156" width="1" height="15" fill="rgb(219,61,16)"/><text x="642.00" y="1166.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.15%)</title><rect x="639" y="1172" width="1" height="15" fill="rgb(229,44,19)"/><text x="642.00" y="1182.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3292) (1 samples, 0.15%)</title><rect x="639" y="1188" width="1" height="15" fill="rgb(222,115,16)"/><text x="642.00" y="1198.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py:3292) (1 samples, 0.15%)</title><rect x="639" y="1204" width="1" height="15" fill="rgb(245,166,25)"/><text x="642.00" y="1214.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py:3365) (1 samples, 0.15%)</title><rect x="639" y="1220" width="1" height="15" fill="rgb(247,107,48)"/><text x="642.00" y="1230.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py:3365) (1 samples, 0.15%)</title><rect x="639" y="1236" width="1" height="15" fill="rgb(239,167,2)"/><text x="642.00" y="1246.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py:3364) (1 samples, 0.15%)</title><rect x="639" y="1252" width="1" height="15" fill="rgb(222,219,53)"/><text x="642.00" y="1262.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py:1183) (1 samples, 0.15%)</title><rect x="639" y="1268" width="1" height="15" fill="rgb(246,147,49)"/><text x="642.00" y="1278.50"></text></g><g><title>copy (copy.py:72) (1 samples, 0.15%)</title><rect x="639" y="1284" width="1" height="15" fill="rgb(222,57,34)"/><text x="642.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="640" y="180" width="2" height="15" fill="rgb(236,220,52)"/><text x="643.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="196" width="2" height="15" fill="rgb(245,96,7)"/><text x="643.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="640" y="212" width="2" height="15" fill="rgb(249,122,24)"/><text x="643.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="640" y="228" width="2" height="15" fill="rgb(250,102,49)"/><text x="643.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="640" y="244" width="2" height="15" fill="rgb(252,222,20)"/><text x="643.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="640" y="260" width="2" height="15" fill="rgb(234,9,30)"/><text x="643.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="276" width="2" height="15" fill="rgb(217,67,16)"/><text x="643.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.15%)</title><rect x="640" y="292" width="2" height="15" fill="rgb(230,106,50)"/><text x="643.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="640" y="308" width="2" height="15" fill="rgb(230,42,22)"/><text x="643.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="640" y="324" width="2" height="15" fill="rgb(226,35,28)"/><text x="643.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="640" y="340" width="2" height="15" fill="rgb(250,189,40)"/><text x="643.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="640" y="356" width="2" height="15" fill="rgb(213,7,41)"/><text x="643.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="372" width="2" height="15" fill="rgb(250,144,6)"/><text x="643.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.15%)</title><rect x="640" y="388" width="2" height="15" fill="rgb(235,81,54)"/><text x="643.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="640" y="404" width="2" height="15" fill="rgb(239,22,46)"/><text x="643.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="640" y="420" width="2" height="15" fill="rgb(244,176,24)"/><text x="643.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="640" y="436" width="2" height="15" fill="rgb(230,171,41)"/><text x="643.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="640" y="452" width="2" height="15" fill="rgb(208,179,5)"/><text x="643.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="468" width="2" height="15" fill="rgb(219,160,13)"/><text x="643.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.15%)</title><rect x="640" y="484" width="2" height="15" fill="rgb(216,36,31)"/><text x="643.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="640" y="500" width="2" height="15" fill="rgb(206,221,14)"/><text x="643.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="640" y="516" width="2" height="15" fill="rgb(228,81,40)"/><text x="643.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="640" y="532" width="2" height="15" fill="rgb(210,7,0)"/><text x="643.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="640" y="548" width="2" height="15" fill="rgb(223,54,28)"/><text x="643.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="564" width="2" height="15" fill="rgb(237,60,48)"/><text x="643.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.15%)</title><rect x="640" y="580" width="2" height="15" fill="rgb(248,148,28)"/><text x="643.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="640" y="596" width="2" height="15" fill="rgb(225,42,32)"/><text x="643.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="640" y="612" width="2" height="15" fill="rgb(231,97,8)"/><text x="643.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="640" y="628" width="2" height="15" fill="rgb(224,128,34)"/><text x="643.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="640" y="644" width="2" height="15" fill="rgb(248,114,50)"/><text x="643.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="660" width="2" height="15" fill="rgb(209,130,5)"/><text x="643.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.15%)</title><rect x="640" y="676" width="2" height="15" fill="rgb(251,110,3)"/><text x="643.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="640" y="692" width="2" height="15" fill="rgb(220,129,15)"/><text x="643.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="640" y="708" width="2" height="15" fill="rgb(236,118,25)"/><text x="643.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="640" y="724" width="2" height="15" fill="rgb(225,126,17)"/><text x="643.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="640" y="740" width="2" height="15" fill="rgb(216,206,22)"/><text x="643.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="756" width="2" height="15" fill="rgb(238,165,19)"/><text x="643.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.15%)</title><rect x="640" y="772" width="2" height="15" fill="rgb(215,228,22)"/><text x="643.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="640" y="788" width="2" height="15" fill="rgb(241,2,44)"/><text x="643.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="804" width="2" height="15" fill="rgb(252,210,7)"/><text x="643.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="640" y="820" width="2" height="15" fill="rgb(234,192,13)"/><text x="643.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="640" y="836" width="2" height="15" fill="rgb(216,66,18)"/><text x="643.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="640" y="852" width="2" height="15" fill="rgb(211,88,5)"/><text x="643.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="640" y="868" width="2" height="15" fill="rgb(222,182,21)"/><text x="643.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="884" width="2" height="15" fill="rgb(213,112,49)"/><text x="643.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.15%)</title><rect x="640" y="900" width="2" height="15" fill="rgb(233,115,17)"/><text x="643.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="640" y="916" width="2" height="15" fill="rgb(217,174,20)"/><text x="643.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="640" y="932" width="2" height="15" fill="rgb(222,91,40)"/><text x="643.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="640" y="948" width="2" height="15" fill="rgb(220,134,46)"/><text x="643.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="640" y="964" width="2" height="15" fill="rgb(254,198,2)"/><text x="643.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="980" width="2" height="15" fill="rgb(249,100,52)"/><text x="643.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.15%)</title><rect x="640" y="996" width="2" height="15" fill="rgb(238,137,7)"/><text x="643.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="640" y="1012" width="2" height="15" fill="rgb(228,107,1)"/><text x="643.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="1028" width="2" height="15" fill="rgb(234,30,36)"/><text x="643.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="640" y="1044" width="2" height="15" fill="rgb(224,123,48)"/><text x="643.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="640" y="1060" width="2" height="15" fill="rgb(247,112,22)"/><text x="643.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="640" y="1076" width="2" height="15" fill="rgb(226,133,5)"/><text x="643.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="640" y="1092" width="2" height="15" fill="rgb(221,192,36)"/><text x="643.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="1108" width="2" height="15" fill="rgb(232,165,38)"/><text x="643.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:411) (1 samples, 0.15%)</title><rect x="640" y="1124" width="2" height="15" fill="rgb(235,70,41)"/><text x="643.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="640" y="1140" width="2" height="15" fill="rgb(226,159,46)"/><text x="643.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="640" y="1156" width="2" height="15" fill="rgb(245,23,10)"/><text x="643.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="640" y="1172" width="2" height="15" fill="rgb(227,115,16)"/><text x="643.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="640" y="1188" width="2" height="15" fill="rgb(246,38,39)"/><text x="643.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="1204" width="2" height="15" fill="rgb(252,46,14)"/><text x="643.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_shgo.py:11) (1 samples, 0.15%)</title><rect x="640" y="1220" width="2" height="15" fill="rgb(249,10,45)"/><text x="643.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="640" y="1236" width="2" height="15" fill="rgb(254,218,22)"/><text x="643.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="1252" width="2" height="15" fill="rgb(225,107,7)"/><text x="643.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="640" y="1268" width="2" height="15" fill="rgb(242,6,48)"/><text x="643.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="640" y="1284" width="2" height="15" fill="rgb(235,41,40)"/><text x="643.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="640" y="1300" width="2" height="15" fill="rgb(216,68,51)"/><text x="643.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="640" y="1316" width="2" height="15" fill="rgb(224,130,28)"/><text x="643.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="640" y="1332" width="2" height="15" fill="rgb(209,209,5)"/><text x="643.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/__init__.py:102) (1 samples, 0.15%)</title><rect x="640" y="1348" width="2" height="15" fill="rgb(253,109,3)"/><text x="643.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="640" y="1364" width="2" height="15" fill="rgb(226,52,22)"/><text x="643.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="640" y="1380" width="2" height="15" fill="rgb(233,66,51)"/><text x="643.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="640" y="1396" width="2" height="15" fill="rgb(222,38,45)"/><text x="643.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.15%)</title><rect x="640" y="1412" width="2" height="15" fill="rgb(229,197,10)"/><text x="643.00" y="1422.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.15%)</title><rect x="640" y="1428" width="2" height="15" fill="rgb(250,69,29)"/><text x="643.00" y="1438.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.15%)</title><rect x="640" y="1444" width="2" height="15" fill="rgb(232,201,53)"/><text x="643.00" y="1454.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:4) (2 samples, 0.29%)</title><rect x="640" y="148" width="4" height="15" fill="rgb(249,43,5)"/><text x="643.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="640" y="164" width="4" height="15" fill="rgb(228,92,21)"/><text x="643.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="180" width="2" height="15" fill="rgb(211,30,34)"/><text x="645.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="196" width="2" height="15" fill="rgb(243,49,48)"/><text x="645.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="642" y="212" width="2" height="15" fill="rgb(215,84,10)"/><text x="645.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="228" width="2" height="15" fill="rgb(210,56,5)"/><text x="645.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (1 samples, 0.15%)</title><rect x="642" y="244" width="2" height="15" fill="rgb(207,23,46)"/><text x="645.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="260" width="2" height="15" fill="rgb(230,140,50)"/><text x="645.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="276" width="2" height="15" fill="rgb(238,94,25)"/><text x="645.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="292" width="2" height="15" fill="rgb(238,69,44)"/><text x="645.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="642" y="308" width="2" height="15" fill="rgb(214,144,43)"/><text x="645.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="324" width="2" height="15" fill="rgb(229,46,29)"/><text x="645.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:56) (1 samples, 0.15%)</title><rect x="642" y="340" width="2" height="15" fill="rgb(232,173,41)"/><text x="645.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="356" width="2" height="15" fill="rgb(236,197,37)"/><text x="645.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="372" width="2" height="15" fill="rgb(225,162,51)"/><text x="645.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="388" width="2" height="15" fill="rgb(227,98,15)"/><text x="645.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="642" y="404" width="2" height="15" fill="rgb(233,126,41)"/><text x="645.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="420" width="2" height="15" fill="rgb(240,127,5)"/><text x="645.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (1 samples, 0.15%)</title><rect x="642" y="436" width="2" height="15" fill="rgb(243,43,23)"/><text x="645.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="452" width="2" height="15" fill="rgb(237,132,43)"/><text x="645.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="468" width="2" height="15" fill="rgb(240,36,48)"/><text x="645.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="484" width="2" height="15" fill="rgb(218,34,45)"/><text x="645.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="642" y="500" width="2" height="15" fill="rgb(222,151,2)"/><text x="645.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="516" width="2" height="15" fill="rgb(243,111,28)"/><text x="645.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:40) (1 samples, 0.15%)</title><rect x="642" y="532" width="2" height="15" fill="rgb(215,91,37)"/><text x="645.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="548" width="2" height="15" fill="rgb(235,178,26)"/><text x="645.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="564" width="2" height="15" fill="rgb(229,144,42)"/><text x="645.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="580" width="2" height="15" fill="rgb(243,40,4)"/><text x="645.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.15%)</title><rect x="642" y="596" width="2" height="15" fill="rgb(223,57,26)"/><text x="645.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="612" width="2" height="15" fill="rgb(237,10,43)"/><text x="645.00" y="622.50"></text></g><g><title>0x7f81e189f373 (?) (1 samples, 0.15%)</title><rect x="642" y="628" width="2" height="15" fill="rgb(236,187,25)"/><text x="645.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="644" width="2" height="15" fill="rgb(247,24,32)"/><text x="645.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="660" width="2" height="15" fill="rgb(246,171,35)"/><text x="645.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="676" width="2" height="15" fill="rgb(253,63,6)"/><text x="645.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.15%)</title><rect x="642" y="692" width="2" height="15" fill="rgb(230,128,18)"/><text x="645.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="708" width="2" height="15" fill="rgb(246,176,28)"/><text x="645.00" y="718.50"></text></g><g><title>0x7f81e1662eea (?) (1 samples, 0.15%)</title><rect x="642" y="724" width="2" height="15" fill="rgb(216,0,54)"/><text x="645.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="740" width="2" height="15" fill="rgb(253,217,41)"/><text x="645.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="756" width="2" height="15" fill="rgb(208,107,28)"/><text x="645.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="772" width="2" height="15" fill="rgb(211,5,28)"/><text x="645.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.15%)</title><rect x="642" y="788" width="2" height="15" fill="rgb(218,35,16)"/><text x="645.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="804" width="2" height="15" fill="rgb(220,100,16)"/><text x="645.00" y="814.50"></text></g><g><title>0x7f81e13fb887 (?) (1 samples, 0.15%)</title><rect x="642" y="820" width="2" height="15" fill="rgb(236,41,11)"/><text x="645.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="836" width="2" height="15" fill="rgb(230,158,28)"/><text x="645.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="642" y="852" width="2" height="15" fill="rgb(212,11,39)"/><text x="645.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="868" width="2" height="15" fill="rgb(225,64,17)"/><text x="645.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="884" width="2" height="15" fill="rgb(206,45,44)"/><text x="645.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="900" width="2" height="15" fill="rgb(229,229,44)"/><text x="645.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="916" width="2" height="15" fill="rgb(244,217,19)"/><text x="645.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="642" y="932" width="2" height="15" fill="rgb(228,79,2)"/><text x="645.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="948" width="2" height="15" fill="rgb(229,57,42)"/><text x="645.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (1 samples, 0.15%)</title><rect x="642" y="964" width="2" height="15" fill="rgb(241,35,13)"/><text x="645.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="980" width="2" height="15" fill="rgb(229,169,30)"/><text x="645.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="996" width="2" height="15" fill="rgb(243,45,27)"/><text x="645.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="1012" width="2" height="15" fill="rgb(234,215,2)"/><text x="645.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="642" y="1028" width="2" height="15" fill="rgb(229,2,53)"/><text x="645.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="1044" width="2" height="15" fill="rgb(205,163,37)"/><text x="645.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (1 samples, 0.15%)</title><rect x="642" y="1060" width="2" height="15" fill="rgb(230,42,29)"/><text x="645.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="1076" width="2" height="15" fill="rgb(243,187,52)"/><text x="645.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="1092" width="2" height="15" fill="rgb(222,28,14)"/><text x="645.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="1108" width="2" height="15" fill="rgb(215,149,20)"/><text x="645.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="642" y="1124" width="2" height="15" fill="rgb(218,71,36)"/><text x="645.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="1140" width="2" height="15" fill="rgb(232,135,47)"/><text x="645.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:11) (1 samples, 0.15%)</title><rect x="642" y="1156" width="2" height="15" fill="rgb(207,189,11)"/><text x="645.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="1172" width="2" height="15" fill="rgb(251,2,43)"/><text x="645.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="1188" width="2" height="15" fill="rgb(214,9,41)"/><text x="645.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="1204" width="2" height="15" fill="rgb(235,95,4)"/><text x="645.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="642" y="1220" width="2" height="15" fill="rgb(232,99,11)"/><text x="645.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="1236" width="2" height="15" fill="rgb(246,228,17)"/><text x="645.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py:11) (1 samples, 0.15%)</title><rect x="642" y="1252" width="2" height="15" fill="rgb(226,62,39)"/><text x="645.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="1268" width="2" height="15" fill="rgb(210,40,24)"/><text x="645.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="1284" width="2" height="15" fill="rgb(227,162,36)"/><text x="645.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="1300" width="2" height="15" fill="rgb(208,176,0)"/><text x="645.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="642" y="1316" width="2" height="15" fill="rgb(236,5,9)"/><text x="645.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="1332" width="2" height="15" fill="rgb(238,41,40)"/><text x="645.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:12) (1 samples, 0.15%)</title><rect x="642" y="1348" width="2" height="15" fill="rgb(252,52,44)"/><text x="645.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="1364" width="2" height="15" fill="rgb(235,0,18)"/><text x="645.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="1380" width="2" height="15" fill="rgb(250,121,37)"/><text x="645.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="1396" width="2" height="15" fill="rgb(245,210,31)"/><text x="645.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="642" y="1412" width="2" height="15" fill="rgb(205,69,25)"/><text x="645.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="1428" width="2" height="15" fill="rgb(235,170,53)"/><text x="645.00" y="1438.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py:22) (1 samples, 0.15%)</title><rect x="642" y="1444" width="2" height="15" fill="rgb(246,186,37)"/><text x="645.00" y="1454.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="642" y="1460" width="2" height="15" fill="rgb(235,109,54)"/><text x="645.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="1476" width="2" height="15" fill="rgb(241,80,37)"/><text x="645.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="1492" width="2" height="15" fill="rgb(220,94,43)"/><text x="645.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="1508" width="2" height="15" fill="rgb(222,206,36)"/><text x="645.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="1524" width="2" height="15" fill="rgb(226,20,25)"/><text x="645.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.15%)</title><rect x="642" y="1540" width="2" height="15" fill="rgb(209,135,51)"/><text x="645.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="1556" width="2" height="15" fill="rgb(214,212,8)"/><text x="645.00" y="1566.50"></text></g><g><title>0x7f81e018b6c1 (?) (1 samples, 0.15%)</title><rect x="642" y="1572" width="2" height="15" fill="rgb(229,102,27)"/><text x="645.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="1588" width="2" height="15" fill="rgb(250,212,39)"/><text x="645.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="642" y="1604" width="2" height="15" fill="rgb(210,168,43)"/><text x="645.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="642" y="1620" width="2" height="15" fill="rgb(205,1,13)"/><text x="645.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.15%)</title><rect x="642" y="1636" width="2" height="15" fill="rgb(208,229,6)"/><text x="645.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="642" y="1652" width="2" height="15" fill="rgb(235,15,48)"/><text x="645.00" y="1662.50"></text></g><g><title>0x7f81dff28849 (?) (1 samples, 0.15%)</title><rect x="642" y="1668" width="2" height="15" fill="rgb(249,187,11)"/><text x="645.00" y="1678.50"></text></g><g><title>0x7f81dff2ef47 (?) (1 samples, 0.15%)</title><rect x="642" y="1684" width="2" height="15" fill="rgb(237,200,24)"/><text x="645.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="642" y="1700" width="2" height="15" fill="rgb(223,179,27)"/><text x="645.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:965) (1 samples, 0.15%)</title><rect x="642" y="1716" width="2" height="15" fill="rgb(249,19,34)"/><text x="645.00" y="1726.50"></text></g><g><title>unicode_repr (python3.7) (1 samples, 0.15%)</title><rect x="642" y="1732" width="2" height="15" fill="rgb(205,141,32)"/><text x="645.00" y="1742.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.15%)</title><rect x="644" y="484" width="2" height="15" fill="rgb(232,83,42)"/><text x="647.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="644" y="500" width="2" height="15" fill="rgb(232,81,37)"/><text x="647.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="644" y="516" width="2" height="15" fill="rgb(209,102,18)"/><text x="647.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="644" y="532" width="2" height="15" fill="rgb(207,167,1)"/><text x="647.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="644" y="548" width="2" height="15" fill="rgb(207,72,14)"/><text x="647.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="644" y="564" width="2" height="15" fill="rgb(208,214,45)"/><text x="647.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.15%)</title><rect x="644" y="580" width="2" height="15" fill="rgb(242,48,20)"/><text x="647.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="644" y="596" width="2" height="15" fill="rgb(252,124,0)"/><text x="647.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="644" y="612" width="2" height="15" fill="rgb(250,121,21)"/><text x="647.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="644" y="628" width="2" height="15" fill="rgb(241,137,19)"/><text x="647.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="644" y="644" width="2" height="15" fill="rgb(253,198,31)"/><text x="647.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="644" y="660" width="2" height="15" fill="rgb(209,120,22)"/><text x="647.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.15%)</title><rect x="644" y="676" width="2" height="15" fill="rgb(228,33,3)"/><text x="647.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="644" y="692" width="2" height="15" fill="rgb(229,14,39)"/><text x="647.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="644" y="708" width="2" height="15" fill="rgb(233,93,16)"/><text x="647.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="644" y="724" width="2" height="15" fill="rgb(254,203,53)"/><text x="647.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="644" y="740" width="2" height="15" fill="rgb(253,22,37)"/><text x="647.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="644" y="756" width="2" height="15" fill="rgb(234,117,21)"/><text x="647.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.15%)</title><rect x="644" y="772" width="2" height="15" fill="rgb(240,197,42)"/><text x="647.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="644" y="788" width="2" height="15" fill="rgb(244,116,29)"/><text x="647.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="644" y="804" width="2" height="15" fill="rgb(243,152,14)"/><text x="647.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="644" y="820" width="2" height="15" fill="rgb(241,187,31)"/><text x="647.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="644" y="836" width="2" height="15" fill="rgb(242,120,20)"/><text x="647.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="644" y="852" width="2" height="15" fill="rgb(222,157,26)"/><text x="647.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.15%)</title><rect x="644" y="868" width="2" height="15" fill="rgb(234,29,22)"/><text x="647.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="644" y="884" width="2" height="15" fill="rgb(211,13,50)"/><text x="647.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="644" y="900" width="2" height="15" fill="rgb(219,84,49)"/><text x="647.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="644" y="916" width="2" height="15" fill="rgb(228,57,43)"/><text x="647.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="644" y="932" width="2" height="15" fill="rgb(231,71,8)"/><text x="647.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="644" y="948" width="2" height="15" fill="rgb(207,149,40)"/><text x="647.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.15%)</title><rect x="644" y="964" width="2" height="15" fill="rgb(250,145,48)"/><text x="647.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="644" y="980" width="2" height="15" fill="rgb(212,159,34)"/><text x="647.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="644" y="996" width="2" height="15" fill="rgb(247,54,5)"/><text x="647.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="644" y="1012" width="2" height="15" fill="rgb(237,157,8)"/><text x="647.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="644" y="1028" width="2" height="15" fill="rgb(217,3,41)"/><text x="647.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="644" y="1044" width="2" height="15" fill="rgb(208,6,38)"/><text x="647.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.15%)</title><rect x="644" y="1060" width="2" height="15" fill="rgb(221,147,47)"/><text x="647.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="644" y="1076" width="2" height="15" fill="rgb(224,62,3)"/><text x="647.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="644" y="1092" width="2" height="15" fill="rgb(208,209,51)"/><text x="647.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="644" y="1108" width="2" height="15" fill="rgb(245,61,34)"/><text x="647.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="644" y="1124" width="2" height="15" fill="rgb(210,102,6)"/><text x="647.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="644" y="1140" width="2" height="15" fill="rgb(226,24,8)"/><text x="647.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="644" y="1156" width="2" height="15" fill="rgb(250,19,36)"/><text x="647.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="644" y="1172" width="2" height="15" fill="rgb(250,212,32)"/><text x="647.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="644" y="1188" width="2" height="15" fill="rgb(244,194,24)"/><text x="647.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.15%)</title><rect x="644" y="1204" width="2" height="15" fill="rgb(242,193,41)"/><text x="647.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="644" y="1220" width="2" height="15" fill="rgb(247,27,48)"/><text x="647.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="644" y="1236" width="2" height="15" fill="rgb(223,31,33)"/><text x="647.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="644" y="1252" width="2" height="15" fill="rgb(234,77,25)"/><text x="647.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="644" y="1268" width="2" height="15" fill="rgb(241,178,1)"/><text x="647.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="644" y="1284" width="2" height="15" fill="rgb(223,44,48)"/><text x="647.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.15%)</title><rect x="644" y="1300" width="2" height="15" fill="rgb(215,10,50)"/><text x="647.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="644" y="1316" width="2" height="15" fill="rgb(221,175,7)"/><text x="647.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="644" y="1332" width="2" height="15" fill="rgb(238,145,1)"/><text x="647.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="644" y="1348" width="2" height="15" fill="rgb(221,90,20)"/><text x="647.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="644" y="1364" width="2" height="15" fill="rgb(215,24,1)"/><text x="647.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="644" y="1380" width="2" height="15" fill="rgb(218,47,2)"/><text x="647.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:25) (1 samples, 0.15%)</title><rect x="644" y="1396" width="2" height="15" fill="rgb(205,36,8)"/><text x="647.00" y="1406.50"></text></g><g><title>__or__ (enum.py:830) (1 samples, 0.15%)</title><rect x="644" y="1412" width="2" height="15" fill="rgb(252,49,51)"/><text x="647.00" y="1422.50"></text></g><g><title>__call__ (enum.py:309) (1 samples, 0.15%)</title><rect x="644" y="1428" width="2" height="15" fill="rgb(249,165,45)"/><text x="647.00" y="1438.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.29%)</title><rect x="644" y="244" width="3" height="15" fill="rgb(243,76,48)"/><text x="647.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="644" y="260" width="3" height="15" fill="rgb(243,21,20)"/><text x="647.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.29%)</title><rect x="644" y="276" width="3" height="15" fill="rgb(236,32,24)"/><text x="647.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.29%)</title><rect x="644" y="292" width="3" height="15" fill="rgb(247,73,33)"/><text x="647.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.29%)</title><rect x="644" y="308" width="3" height="15" fill="rgb(224,167,11)"/><text x="647.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="644" y="324" width="3" height="15" fill="rgb(216,181,46)"/><text x="647.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.29%)</title><rect x="644" y="340" width="3" height="15" fill="rgb(215,213,18)"/><text x="647.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="644" y="356" width="3" height="15" fill="rgb(246,160,24)"/><text x="647.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.29%)</title><rect x="644" y="372" width="3" height="15" fill="rgb(239,50,49)"/><text x="647.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="644" y="388" width="3" height="15" fill="rgb(253,87,9)"/><text x="647.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="644" y="404" width="3" height="15" fill="rgb(228,137,54)"/><text x="647.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.29%)</title><rect x="644" y="420" width="3" height="15" fill="rgb(233,55,21)"/><text x="647.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.29%)</title><rect x="644" y="436" width="3" height="15" fill="rgb(213,175,32)"/><text x="647.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.29%)</title><rect x="644" y="452" width="3" height="15" fill="rgb(248,118,53)"/><text x="647.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="644" y="468" width="3" height="15" fill="rgb(216,92,20)"/><text x="647.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.15%)</title><rect x="646" y="484" width="1" height="15" fill="rgb(216,108,47)"/><text x="649.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="646" y="500" width="1" height="15" fill="rgb(252,85,24)"/><text x="649.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="646" y="516" width="1" height="15" fill="rgb(248,194,5)"/><text x="649.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="646" y="532" width="1" height="15" fill="rgb(218,46,13)"/><text x="649.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="646" y="548" width="1" height="15" fill="rgb(250,74,47)"/><text x="649.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="646" y="564" width="1" height="15" fill="rgb(245,53,0)"/><text x="649.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.15%)</title><rect x="646" y="580" width="1" height="15" fill="rgb(240,123,9)"/><text x="649.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="646" y="596" width="1" height="15" fill="rgb(224,42,50)"/><text x="649.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="646" y="612" width="1" height="15" fill="rgb(225,206,6)"/><text x="649.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="646" y="628" width="1" height="15" fill="rgb(221,133,31)"/><text x="649.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="646" y="644" width="1" height="15" fill="rgb(214,103,41)"/><text x="649.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="646" y="660" width="1" height="15" fill="rgb(225,92,27)"/><text x="649.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.15%)</title><rect x="646" y="676" width="1" height="15" fill="rgb(241,53,7)"/><text x="649.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="646" y="692" width="1" height="15" fill="rgb(226,181,53)"/><text x="649.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="646" y="708" width="1" height="15" fill="rgb(241,155,21)"/><text x="649.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="646" y="724" width="1" height="15" fill="rgb(252,103,33)"/><text x="649.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="646" y="740" width="1" height="15" fill="rgb(241,193,23)"/><text x="649.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="646" y="756" width="1" height="15" fill="rgb(232,19,48)"/><text x="649.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:1485) (1 samples, 0.15%)</title><rect x="646" y="772" width="1" height="15" fill="rgb(242,72,10)"/><text x="649.00" y="782.50"></text></g><g><title>register_check (pycodestyle.py:183) (1 samples, 0.15%)</title><rect x="646" y="788" width="1" height="15" fill="rgb(243,218,53)"/><text x="649.00" y="798.50"></text></g><g><title>_get_parameters (pycodestyle.py:169) (1 samples, 0.15%)</title><rect x="646" y="804" width="1" height="15" fill="rgb(245,20,35)"/><text x="649.00" y="814.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.15%)</title><rect x="646" y="820" width="1" height="15" fill="rgb(220,16,50)"/><text x="649.00" y="830.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.15%)</title><rect x="646" y="836" width="1" height="15" fill="rgb(220,87,13)"/><text x="649.00" y="846.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.15%)</title><rect x="646" y="852" width="1" height="15" fill="rgb(236,227,13)"/><text x="649.00" y="862.50"></text></g><g><title>_signature_from_function (inspect.py:2154) (1 samples, 0.15%)</title><rect x="646" y="868" width="1" height="15" fill="rgb(246,148,27)"/><text x="649.00" y="878.50"></text></g><g><title>__init__ (inspect.py:2505) (1 samples, 0.15%)</title><rect x="646" y="884" width="1" height="15" fill="rgb(237,70,52)"/><text x="649.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.15%)</title><rect x="647" y="724" width="2" height="15" fill="rgb(206,177,34)"/><text x="650.00" y="734.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:580) (1 samples, 0.15%)</title><rect x="647" y="740" width="2" height="15" fill="rgb(216,20,20)"/><text x="650.00" y="750.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (2 samples, 0.29%)</title><rect x="647" y="340" width="4" height="15" fill="rgb(226,122,35)"/><text x="650.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="647" y="356" width="4" height="15" fill="rgb(225,82,42)"/><text x="650.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.29%)</title><rect x="647" y="372" width="4" height="15" fill="rgb(244,206,21)"/><text x="650.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.29%)</title><rect x="647" y="388" width="4" height="15" fill="rgb(220,0,25)"/><text x="650.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.29%)</title><rect x="647" y="404" width="4" height="15" fill="rgb(231,226,5)"/><text x="650.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="647" y="420" width="4" height="15" fill="rgb(209,11,5)"/><text x="650.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:6) (2 samples, 0.29%)</title><rect x="647" y="436" width="4" height="15" fill="rgb(227,78,2)"/><text x="650.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="647" y="452" width="4" height="15" fill="rgb(217,56,29)"/><text x="650.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.29%)</title><rect x="647" y="468" width="4" height="15" fill="rgb(220,217,27)"/><text x="650.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.29%)</title><rect x="647" y="484" width="4" height="15" fill="rgb(216,214,20)"/><text x="650.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.29%)</title><rect x="647" y="500" width="4" height="15" fill="rgb(234,175,42)"/><text x="650.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="647" y="516" width="4" height="15" fill="rgb(250,101,41)"/><text x="650.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py:23) (2 samples, 0.29%)</title><rect x="647" y="532" width="4" height="15" fill="rgb(233,218,14)"/><text x="650.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="647" y="548" width="4" height="15" fill="rgb(231,72,27)"/><text x="650.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.29%)</title><rect x="647" y="564" width="4" height="15" fill="rgb(217,53,53)"/><text x="650.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.29%)</title><rect x="647" y="580" width="4" height="15" fill="rgb(247,203,2)"/><text x="650.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.29%)</title><rect x="647" y="596" width="4" height="15" fill="rgb(242,202,39)"/><text x="650.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="647" y="612" width="4" height="15" fill="rgb(229,110,14)"/><text x="650.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py:88) (2 samples, 0.29%)</title><rect x="647" y="628" width="4" height="15" fill="rgb(226,190,31)"/><text x="650.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="647" y="644" width="4" height="15" fill="rgb(237,93,54)"/><text x="650.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.29%)</title><rect x="647" y="660" width="4" height="15" fill="rgb(220,45,25)"/><text x="650.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="647" y="676" width="4" height="15" fill="rgb(208,186,6)"/><text x="650.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="647" y="692" width="4" height="15" fill="rgb(243,20,22)"/><text x="650.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.29%)</title><rect x="647" y="708" width="4" height="15" fill="rgb(252,51,35)"/><text x="650.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="649" y="724" width="2" height="15" fill="rgb(231,99,23)"/><text x="652.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.15%)</title><rect x="649" y="740" width="2" height="15" fill="rgb(208,171,7)"/><text x="652.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.15%)</title><rect x="649" y="756" width="2" height="15" fill="rgb(207,122,6)"/><text x="652.00" y="766.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.15%)</title><rect x="649" y="772" width="2" height="15" fill="rgb(218,90,13)"/><text x="652.00" y="782.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.15%)</title><rect x="651" y="436" width="2" height="15" fill="rgb(240,109,41)"/><text x="654.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="651" y="452" width="2" height="15" fill="rgb(238,119,11)"/><text x="654.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="651" y="468" width="2" height="15" fill="rgb(209,99,39)"/><text x="654.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="651" y="484" width="2" height="15" fill="rgb(233,5,29)"/><text x="654.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="651" y="500" width="2" height="15" fill="rgb(234,200,23)"/><text x="654.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="651" y="516" width="2" height="15" fill="rgb(207,223,11)"/><text x="654.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.15%)</title><rect x="651" y="532" width="2" height="15" fill="rgb(244,37,36)"/><text x="654.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="651" y="548" width="2" height="15" fill="rgb(231,85,45)"/><text x="654.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="651" y="564" width="2" height="15" fill="rgb(235,137,33)"/><text x="654.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="651" y="580" width="2" height="15" fill="rgb(214,193,8)"/><text x="654.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="651" y="596" width="2" height="15" fill="rgb(221,126,44)"/><text x="654.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="651" y="612" width="2" height="15" fill="rgb(237,181,34)"/><text x="654.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.15%)</title><rect x="651" y="628" width="2" height="15" fill="rgb(224,162,47)"/><text x="654.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="651" y="644" width="2" height="15" fill="rgb(210,22,52)"/><text x="654.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="651" y="660" width="2" height="15" fill="rgb(232,134,34)"/><text x="654.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="651" y="676" width="2" height="15" fill="rgb(244,182,15)"/><text x="654.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="651" y="692" width="2" height="15" fill="rgb(218,160,34)"/><text x="654.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="651" y="708" width="2" height="15" fill="rgb(233,116,38)"/><text x="654.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.15%)</title><rect x="651" y="724" width="2" height="15" fill="rgb(231,166,47)"/><text x="654.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="651" y="740" width="2" height="15" fill="rgb(219,190,40)"/><text x="654.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="651" y="756" width="2" height="15" fill="rgb(226,25,33)"/><text x="654.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="651" y="772" width="2" height="15" fill="rgb(231,214,2)"/><text x="654.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="651" y="788" width="2" height="15" fill="rgb(246,20,50)"/><text x="654.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="651" y="804" width="2" height="15" fill="rgb(216,7,38)"/><text x="654.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="651" y="820" width="2" height="15" fill="rgb(241,20,38)"/><text x="654.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="651" y="836" width="2" height="15" fill="rgb(245,195,24)"/><text x="654.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="651" y="852" width="2" height="15" fill="rgb(226,66,27)"/><text x="654.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:2) (1 samples, 0.15%)</title><rect x="651" y="868" width="2" height="15" fill="rgb(208,129,46)"/><text x="654.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="651" y="884" width="2" height="15" fill="rgb(240,146,21)"/><text x="654.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="651" y="900" width="2" height="15" fill="rgb(239,72,39)"/><text x="654.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="651" y="916" width="2" height="15" fill="rgb(244,22,12)"/><text x="654.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="651" y="932" width="2" height="15" fill="rgb(210,223,16)"/><text x="654.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="651" y="948" width="2" height="15" fill="rgb(206,83,49)"/><text x="654.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py:25) (1 samples, 0.15%)</title><rect x="651" y="964" width="2" height="15" fill="rgb(227,58,22)"/><text x="654.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="651" y="980" width="2" height="15" fill="rgb(237,201,20)"/><text x="654.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="651" y="996" width="2" height="15" fill="rgb(207,84,21)"/><text x="654.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="651" y="1012" width="2" height="15" fill="rgb(209,63,29)"/><text x="654.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.15%)</title><rect x="651" y="1028" width="2" height="15" fill="rgb(212,151,12)"/><text x="654.00" y="1038.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.15%)</title><rect x="651" y="1044" width="2" height="15" fill="rgb(217,152,50)"/><text x="654.00" y="1054.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.15%)</title><rect x="651" y="1060" width="2" height="15" fill="rgb(211,61,28)"/><text x="654.00" y="1070.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.15%)</title><rect x="653" y="1108" width="1" height="15" fill="rgb(223,17,32)"/><text x="656.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="653" y="1124" width="1" height="15" fill="rgb(247,183,10)"/><text x="656.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="653" y="1140" width="1" height="15" fill="rgb(232,138,36)"/><text x="656.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="653" y="1156" width="1" height="15" fill="rgb(251,42,28)"/><text x="656.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="653" y="1172" width="1" height="15" fill="rgb(244,225,5)"/><text x="656.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="653" y="1188" width="1" height="15" fill="rgb(217,11,29)"/><text x="656.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.15%)</title><rect x="653" y="1204" width="1" height="15" fill="rgb(254,71,44)"/><text x="656.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="653" y="1220" width="1" height="15" fill="rgb(225,15,46)"/><text x="656.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="653" y="1236" width="1" height="15" fill="rgb(254,227,13)"/><text x="656.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="653" y="1252" width="1" height="15" fill="rgb(214,12,49)"/><text x="656.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="653" y="1268" width="1" height="15" fill="rgb(212,40,40)"/><text x="656.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="653" y="1284" width="1" height="15" fill="rgb(253,40,19)"/><text x="656.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.15%)</title><rect x="653" y="1300" width="1" height="15" fill="rgb(217,85,48)"/><text x="656.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.15%)</title><rect x="653" y="1316" width="1" height="15" fill="rgb(239,53,53)"/><text x="656.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.15%)</title><rect x="653" y="1332" width="1" height="15" fill="rgb(207,15,37)"/><text x="656.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.15%)</title><rect x="653" y="1348" width="1" height="15" fill="rgb(235,11,13)"/><text x="656.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.15%)</title><rect x="653" y="1364" width="1" height="15" fill="rgb(249,174,27)"/><text x="656.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:589) (1 samples, 0.15%)</title><rect x="653" y="1380" width="1" height="15" fill="rgb(252,131,21)"/><text x="656.00" y="1390.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.15%)</title><rect x="653" y="1396" width="1" height="15" fill="rgb(238,138,42)"/><text x="656.00" y="1406.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:4) (14 samples, 2.06%)</title><rect x="632" y="52" width="24" height="15" fill="rgb(250,59,27)"/><text x="635.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 2.06%)</title><rect x="632" y="68" width="24" height="15" fill="rgb(237,155,36)"/><text x="635.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 2.06%)</title><rect x="632" y="84" width="24" height="15" fill="rgb(225,173,4)"/><text x="635.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 2.06%)</title><rect x="632" y="100" width="24" height="15" fill="rgb(219,75,22)"/><text x="635.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 2.06%)</title><rect x="632" y="116" width="24" height="15" fill="rgb(220,0,2)"/><text x="635.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 2.06%)</title><rect x="632" y="132" width="24" height="15" fill="rgb(232,51,16)"/><text x="635.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:7) (7 samples, 1.03%)</title><rect x="644" y="148" width="12" height="15" fill="rgb(241,4,17)"/><text x="647.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.03%)</title><rect x="644" y="164" width="12" height="15" fill="rgb(244,173,12)"/><text x="647.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.03%)</title><rect x="644" y="180" width="12" height="15" fill="rgb(234,193,43)"/><text x="647.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.03%)</title><rect x="644" y="196" width="12" height="15" fill="rgb(216,102,0)"/><text x="647.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.03%)</title><rect x="644" y="212" width="12" height="15" fill="rgb(225,151,5)"/><text x="647.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.03%)</title><rect x="644" y="228" width="12" height="15" fill="rgb(235,104,54)"/><text x="647.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 0.74%)</title><rect x="647" y="244" width="9" height="15" fill="rgb(229,130,3)"/><text x="650.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="647" y="260" width="9" height="15" fill="rgb(230,159,39)"/><text x="650.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.74%)</title><rect x="647" y="276" width="9" height="15" fill="rgb(243,195,14)"/><text x="650.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.74%)</title><rect x="647" y="292" width="9" height="15" fill="rgb(224,17,52)"/><text x="650.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.74%)</title><rect x="647" y="308" width="9" height="15" fill="rgb(247,9,1)"/><text x="650.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="647" y="324" width="9" height="15" fill="rgb(234,20,50)"/><text x="650.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.44%)</title><rect x="651" y="340" width="5" height="15" fill="rgb(206,50,46)"/><text x="654.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.44%)</title><rect x="651" y="356" width="5" height="15" fill="rgb(231,36,38)"/><text x="654.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.44%)</title><rect x="651" y="372" width="5" height="15" fill="rgb(212,25,34)"/><text x="654.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.44%)</title><rect x="651" y="388" width="5" height="15" fill="rgb(243,35,42)"/><text x="654.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.44%)</title><rect x="651" y="404" width="5" height="15" fill="rgb(249,23,37)"/><text x="654.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.44%)</title><rect x="651" y="420" width="5" height="15" fill="rgb(213,72,34)"/><text x="654.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.29%)</title><rect x="653" y="436" width="3" height="15" fill="rgb(251,111,29)"/><text x="656.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="653" y="452" width="3" height="15" fill="rgb(207,84,1)"/><text x="656.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.29%)</title><rect x="653" y="468" width="3" height="15" fill="rgb(211,147,37)"/><text x="656.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="653" y="484" width="3" height="15" fill="rgb(216,154,53)"/><text x="656.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="653" y="500" width="3" height="15" fill="rgb(208,206,31)"/><text x="656.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.29%)</title><rect x="653" y="516" width="3" height="15" fill="rgb(212,70,23)"/><text x="656.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.29%)</title><rect x="653" y="532" width="3" height="15" fill="rgb(218,110,30)"/><text x="656.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.29%)</title><rect x="653" y="548" width="3" height="15" fill="rgb(220,92,39)"/><text x="656.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="653" y="564" width="3" height="15" fill="rgb(245,164,5)"/><text x="656.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.29%)</title><rect x="653" y="580" width="3" height="15" fill="rgb(211,45,39)"/><text x="656.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="653" y="596" width="3" height="15" fill="rgb(240,160,47)"/><text x="656.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.29%)</title><rect x="653" y="612" width="3" height="15" fill="rgb(230,21,16)"/><text x="656.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.29%)</title><rect x="653" y="628" width="3" height="15" fill="rgb(221,196,11)"/><text x="656.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.29%)</title><rect x="653" y="644" width="3" height="15" fill="rgb(211,172,49)"/><text x="656.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="653" y="660" width="3" height="15" fill="rgb(247,55,26)"/><text x="656.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.29%)</title><rect x="653" y="676" width="3" height="15" fill="rgb(217,127,20)"/><text x="656.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="653" y="692" width="3" height="15" fill="rgb(252,96,28)"/><text x="656.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.29%)</title><rect x="653" y="708" width="3" height="15" fill="rgb(229,215,41)"/><text x="656.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.29%)</title><rect x="653" y="724" width="3" height="15" fill="rgb(205,216,16)"/><text x="656.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.29%)</title><rect x="653" y="740" width="3" height="15" fill="rgb(211,151,14)"/><text x="656.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="653" y="756" width="3" height="15" fill="rgb(207,207,18)"/><text x="656.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.29%)</title><rect x="653" y="772" width="3" height="15" fill="rgb(252,205,14)"/><text x="656.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="653" y="788" width="3" height="15" fill="rgb(208,150,17)"/><text x="656.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.29%)</title><rect x="653" y="804" width="3" height="15" fill="rgb(225,100,12)"/><text x="656.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.29%)</title><rect x="653" y="820" width="3" height="15" fill="rgb(217,102,4)"/><text x="656.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.29%)</title><rect x="653" y="836" width="3" height="15" fill="rgb(221,36,45)"/><text x="656.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="653" y="852" width="3" height="15" fill="rgb(219,42,20)"/><text x="656.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.29%)</title><rect x="653" y="868" width="3" height="15" fill="rgb(250,153,24)"/><text x="656.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="653" y="884" width="3" height="15" fill="rgb(206,225,37)"/><text x="656.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.29%)</title><rect x="653" y="900" width="3" height="15" fill="rgb(231,200,27)"/><text x="656.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="653" y="916" width="3" height="15" fill="rgb(234,124,1)"/><text x="656.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="653" y="932" width="3" height="15" fill="rgb(241,104,52)"/><text x="656.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.29%)</title><rect x="653" y="948" width="3" height="15" fill="rgb(248,117,1)"/><text x="656.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.29%)</title><rect x="653" y="964" width="3" height="15" fill="rgb(253,118,10)"/><text x="656.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.29%)</title><rect x="653" y="980" width="3" height="15" fill="rgb(224,6,0)"/><text x="656.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="653" y="996" width="3" height="15" fill="rgb(226,218,20)"/><text x="656.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.29%)</title><rect x="653" y="1012" width="3" height="15" fill="rgb(211,168,51)"/><text x="656.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.29%)</title><rect x="653" y="1028" width="3" height="15" fill="rgb(224,126,48)"/><text x="656.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.29%)</title><rect x="653" y="1044" width="3" height="15" fill="rgb(221,168,41)"/><text x="656.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.29%)</title><rect x="653" y="1060" width="3" height="15" fill="rgb(221,61,2)"/><text x="656.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.29%)</title><rect x="653" y="1076" width="3" height="15" fill="rgb(241,73,1)"/><text x="656.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.29%)</title><rect x="653" y="1092" width="3" height="15" fill="rgb(229,77,33)"/><text x="656.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.15%)</title><rect x="654" y="1108" width="2" height="15" fill="rgb(230,134,3)"/><text x="657.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="654" y="1124" width="2" height="15" fill="rgb(205,104,0)"/><text x="657.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="654" y="1140" width="2" height="15" fill="rgb(243,13,29)"/><text x="657.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="654" y="1156" width="2" height="15" fill="rgb(252,87,8)"/><text x="657.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="654" y="1172" width="2" height="15" fill="rgb(228,156,37)"/><text x="657.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="654" y="1188" width="2" height="15" fill="rgb(209,96,22)"/><text x="657.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="654" y="1204" width="2" height="15" fill="rgb(248,27,42)"/><text x="657.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="654" y="1220" width="2" height="15" fill="rgb(231,223,46)"/><text x="657.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.15%)</title><rect x="654" y="1236" width="2" height="15" fill="rgb(218,186,42)"/><text x="657.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="654" y="1252" width="2" height="15" fill="rgb(239,133,34)"/><text x="657.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="654" y="1268" width="2" height="15" fill="rgb(226,190,12)"/><text x="657.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="654" y="1284" width="2" height="15" fill="rgb(227,8,23)"/><text x="657.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="654" y="1300" width="2" height="15" fill="rgb(236,175,8)"/><text x="657.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="654" y="1316" width="2" height="15" fill="rgb(211,26,39)"/><text x="657.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="654" y="1332" width="2" height="15" fill="rgb(233,186,47)"/><text x="657.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="654" y="1348" width="2" height="15" fill="rgb(209,96,38)"/><text x="657.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.15%)</title><rect x="654" y="1364" width="2" height="15" fill="rgb(224,23,11)"/><text x="657.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="654" y="1380" width="2" height="15" fill="rgb(217,85,36)"/><text x="657.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="654" y="1396" width="2" height="15" fill="rgb(208,143,15)"/><text x="657.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="654" y="1412" width="2" height="15" fill="rgb(211,49,30)"/><text x="657.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="654" y="1428" width="2" height="15" fill="rgb(208,157,2)"/><text x="657.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="654" y="1444" width="2" height="15" fill="rgb(224,70,3)"/><text x="657.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.15%)</title><rect x="654" y="1460" width="2" height="15" fill="rgb(210,52,43)"/><text x="657.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.15%)</title><rect x="654" y="1476" width="2" height="15" fill="rgb(217,226,26)"/><text x="657.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.15%)</title><rect x="654" y="1492" width="2" height="15" fill="rgb(232,199,34)"/><text x="657.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="654" y="1508" width="2" height="15" fill="rgb(247,148,9)"/><text x="657.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="654" y="1524" width="2" height="15" fill="rgb(231,69,28)"/><text x="657.00" y="1534.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="654" y="1540" width="2" height="15" fill="rgb(224,135,2)"/><text x="657.00" y="1550.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.548] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="654" y="1556" width="2" height="15" fill="rgb(207,185,36)"/><text x="657.00" y="1566.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="654" y="1572" width="2" height="15" fill="rgb(242,223,42)"/><text x="657.00" y="1582.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="654" y="1588" width="2" height="15" fill="rgb(225,107,31)"/><text x="657.00" y="1598.50"></text></g><g><title>0x7f82079da028 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="654" y="1604" width="2" height="15" fill="rgb(211,91,6)"/><text x="657.00" y="1614.50"></text></g><g><title>0x7f82079d7ca7 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="654" y="1620" width="2" height="15" fill="rgb(207,133,46)"/><text x="657.00" y="1630.50"></text></g><g><title>0x7f82079d7acd (libc-2.29.so) (1 samples, 0.15%)</title><rect x="654" y="1636" width="2" height="15" fill="rgb(242,49,44)"/><text x="657.00" y="1646.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:28) (1 samples, 0.15%)</title><rect x="656" y="84" width="2" height="15" fill="rgb(244,161,43)"/><text x="659.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.15%)</title><rect x="656" y="100" width="2" height="15" fill="rgb(212,73,0)"/><text x="659.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.15%)</title><rect x="656" y="116" width="2" height="15" fill="rgb(205,36,31)"/><text x="659.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.15%)</title><rect x="656" y="132" width="2" height="15" fill="rgb(237,168,3)"/><text x="659.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.15%)</title><rect x="656" y="148" width="2" height="15" fill="rgb(219,153,30)"/><text x="659.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.15%)</title><rect x="656" y="164" width="2" height="15" fill="rgb(236,99,50)"/><text x="659.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.15%)</title><rect x="656" y="180" width="2" height="15" fill="rgb(209,220,37)"/><text x="659.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.15%)</title><rect x="656" y="196" width="2" height="15" fill="rgb(242,225,34)"/><text x="659.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="656" y="212" width="2" height="15" fill="rgb(249,10,46)"/><text x="659.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="656" y="228" width="2" height="15" fill="rgb(253,6,18)"/><text x="659.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="656" y="244" width="2" height="15" fill="rgb(218,41,41)"/><text x="659.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="656" y="260" width="2" height="15" fill="rgb(231,198,42)"/><text x="659.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="656" y="276" width="2" height="15" fill="rgb(235,180,31)"/><text x="659.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.15%)</title><rect x="656" y="292" width="2" height="15" fill="rgb(227,95,49)"/><text x="659.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="656" y="308" width="2" height="15" fill="rgb(245,141,53)"/><text x="659.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="656" y="324" width="2" height="15" fill="rgb(218,163,33)"/><text x="659.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="656" y="340" width="2" height="15" fill="rgb(215,196,27)"/><text x="659.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="656" y="356" width="2" height="15" fill="rgb(235,128,27)"/><text x="659.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="656" y="372" width="2" height="15" fill="rgb(206,57,8)"/><text x="659.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.15%)</title><rect x="656" y="388" width="2" height="15" fill="rgb(234,179,54)"/><text x="659.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.15%)</title><rect x="656" y="404" width="2" height="15" fill="rgb(251,153,10)"/><text x="659.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.15%)</title><rect x="656" y="420" width="2" height="15" fill="rgb(230,135,38)"/><text x="659.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.15%)</title><rect x="656" y="436" width="2" height="15" fill="rgb(251,186,48)"/><text x="659.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.15%)</title><rect x="656" y="452" width="2" height="15" fill="rgb(210,189,9)"/><text x="659.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:136) (1 samples, 0.15%)</title><rect x="656" y="468" width="2" height="15" fill="rgb(218,165,30)"/><text x="659.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py:436) (1 samples, 0.15%)</title><rect x="656" y="484" width="2" height="15" fill="rgb(240,21,53)"/><text x="659.00" y="494.50"></text></g><g><title>0x7f81c8676422 (?) (1 samples, 0.15%)</title><rect x="658" y="244" width="1" height="15" fill="rgb(243,226,35)"/><text x="661.00" y="254.50"></text></g><g><title>0x7f81c867c89e (?) (1 samples, 0.15%)</title><rect x="658" y="260" width="1" height="15" fill="rgb(235,147,10)"/><text x="661.00" y="270.50"></text></g><g><title>0x7f81c867c74f (?) (1 samples, 0.15%)</title><rect x="658" y="276" width="1" height="15" fill="rgb(217,150,33)"/><text x="661.00" y="286.50"></text></g><g><title>0x7f81c8682a3a (?) (1 samples, 0.15%)</title><rect x="658" y="292" width="1" height="15" fill="rgb(248,221,22)"/><text x="661.00" y="302.50"></text></g><g><title>0x7f81d1994cff (?) (1 samples, 0.15%)</title><rect x="658" y="308" width="1" height="15" fill="rgb(230,128,13)"/><text x="661.00" y="318.50"></text></g><g><title>0x7f81c867d78c (?) (1 samples, 0.15%)</title><rect x="658" y="324" width="1" height="15" fill="rgb(251,1,51)"/><text x="661.00" y="334.50"></text></g><g><title>0x7f81c866939d (?) (1 samples, 0.15%)</title><rect x="658" y="340" width="1" height="15" fill="rgb(220,15,31)"/><text x="661.00" y="350.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:523) (1 samples, 0.15%)</title><rect x="659" y="484" width="2" height="15" fill="rgb(230,77,49)"/><text x="662.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:525) (5 samples, 0.74%)</title><rect x="661" y="484" width="9" height="15" fill="rgb(210,209,48)"/><text x="664.00" y="494.50"></text></g><g><title>std::isnan (cmath:642) (2 samples, 0.29%)</title><rect x="666" y="500" width="4" height="15" fill="rgb(240,61,27)"/><text x="669.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:604) (3 samples, 0.44%)</title><rect x="670" y="484" width="5" height="15" fill="rgb(230,222,46)"/><text x="673.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:605) (7 samples, 1.03%)</title><rect x="675" y="484" width="12" height="15" fill="rgb(241,106,24)"/><text x="678.00" y="494.50"></text></g><g><title>std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_map.h:1105) (7 samples, 1.03%)</title><rect x="675" y="500" width="12" height="15" fill="rgb(244,226,5)"/><text x="678.00" y="510.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_tree.h:2334) (7 samples, 1.03%)</title><rect x="675" y="516" width="12" height="15" fill="rgb(212,18,29)"/><text x="678.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1670) (7 samples, 1.03%)</title><rect x="675" y="532" width="12" height="15" fill="rgb(207,129,42)"/><text x="678.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:615) (4 samples, 0.59%)</title><rect x="687" y="484" width="7" height="15" fill="rgb(247,9,31)"/><text x="690.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:618) (1 samples, 0.15%)</title><rect x="694" y="484" width="2" height="15" fill="rgb(218,67,35)"/><text x="697.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (stl_bvector.h:857) (1 samples, 0.15%)</title><rect x="694" y="500" width="2" height="15" fill="rgb(206,99,25)"/><text x="697.00" y="510.50"></text></g><g><title>std::_Bit_iterator::operator* (stl_bvector.h:231) (1 samples, 0.15%)</title><rect x="694" y="516" width="2" height="15" fill="rgb(232,145,18)"/><text x="697.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:427) (22 samples, 3.24%)</title><rect x="659" y="468" width="39" height="15" fill="rgb(235,128,17)"/><text x="662.00" y="478.50">Run..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:619) (1 samples, 0.15%)</title><rect x="696" y="484" width="2" height="15" fill="rgb(207,128,17)"/><text x="699.00" y="494.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:18) (24 samples, 3.53%)</title><rect x="658" y="100" width="41" height="15" fill="rgb(242,134,11)"/><text x="661.00" y="110.50">pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (24 samples, 3.53%)</title><rect x="658" y="116" width="41" height="15" fill="rgb(225,115,23)"/><text x="661.00" y="126.50">tim..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (24 samples, 3.53%)</title><rect x="658" y="132" width="41" height="15" fill="rgb(219,25,20)"/><text x="661.00" y="142.50">&lt;la..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (24 samples, 3.53%)</title><rect x="658" y="148" width="41" height="15" fill="rgb(222,222,23)"/><text x="661.00" y="158.50">run..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (24 samples, 3.53%)</title><rect x="658" y="164" width="41" height="15" fill="rgb(234,104,35)"/><text x="661.00" y="174.50">_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (24 samples, 3.53%)</title><rect x="658" y="180" width="41" height="15" fill="rgb(248,219,10)"/><text x="661.00" y="190.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (24 samples, 3.53%)</title><rect x="658" y="196" width="41" height="15" fill="rgb(253,86,38)"/><text x="661.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (24 samples, 3.53%)</title><rect x="658" y="212" width="41" height="15" fill="rgb(246,200,9)"/><text x="661.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (24 samples, 3.53%)</title><rect x="658" y="228" width="41" height="15" fill="rgb(250,205,41)"/><text x="661.00" y="238.50">_ru..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (23 samples, 3.39%)</title><rect x="659" y="244" width="40" height="15" fill="rgb(215,197,51)"/><text x="662.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (23 samples, 3.39%)</title><rect x="659" y="260" width="40" height="15" fill="rgb(250,28,51)"/><text x="662.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (23 samples, 3.39%)</title><rect x="659" y="276" width="40" height="15" fill="rgb(214,115,38)"/><text x="662.00" y="286.50">voi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (23 samples, 3.39%)</title><rect x="659" y="292" width="40" height="15" fill="rgb(251,190,16)"/><text x="662.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (23 samples, 3.39%)</title><rect x="659" y="308" width="40" height="15" fill="rgb(244,92,35)"/><text x="662.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (23 samples, 3.39%)</title><rect x="659" y="324" width="40" height="15" fill="rgb(233,3,25)"/><text x="662.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (23 samples, 3.39%)</title><rect x="659" y="340" width="40" height="15" fill="rgb(207,121,50)"/><text x="662.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h:538) (23 samples, 3.39%)</title><rect x="659" y="356" width="40" height="15" fill="rgb(224,106,14)"/><text x="662.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (23 samples, 3.39%)</title><rect x="659" y="372" width="40" height="15" fill="rgb(212,51,52)"/><text x="662.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (23 samples, 3.39%)</title><rect x="659" y="388" width="40" height="15" fill="rgb(224,136,10)"/><text x="662.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (23 samples, 3.39%)</title><rect x="659" y="404" width="40" height="15" fill="rgb(226,61,1)"/><text x="662.00" y="414.50">pyb..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (23 samples, 3.39%)</title><rect x="659" y="420" width="40" height="15" fill="rgb(220,204,44)"/><text x="662.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (23 samples, 3.39%)</title><rect x="659" y="436" width="40" height="15" fill="rgb(248,159,52)"/><text x="662.00" y="446.50">pyb..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (23 samples, 3.39%)</title><rect x="659" y="452" width="40" height="15" fill="rgb(217,136,45)"/><text x="662.00" y="462.50">GOM..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:428) (1 samples, 0.15%)</title><rect x="698" y="468" width="1" height="15" fill="rgb(210,202,8)"/><text x="701.00" y="478.50"></text></g><g><title>0x7f81d199fea9 (libgomp.so.1.0.0) (1 samples, 0.15%)</title><rect x="699" y="468" width="2" height="15" fill="rgb(212,225,50)"/><text x="702.00" y="478.50"></text></g><g><title>0x7f81d199eab9 (libgomp.so.1.0.0) (2 samples, 0.29%)</title><rect x="699" y="452" width="4" height="15" fill="rgb(245,108,47)"/><text x="702.00" y="462.50"></text></g><g><title>0x7f81d199fead (libgomp.so.1.0.0) (1 samples, 0.15%)</title><rect x="701" y="468" width="2" height="15" fill="rgb(216,182,4)"/><text x="704.00" y="478.50"></text></g><g><title>std::isnan (cmath:642) (2 samples, 0.29%)</title><rect x="717" y="500" width="3" height="15" fill="rgb(215,122,10)"/><text x="720.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:525) (11 samples, 1.62%)</title><rect x="705" y="484" width="19" height="15" fill="rgb(205,104,13)"/><text x="708.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h:796) (2 samples, 0.29%)</title><rect x="720" y="500" width="4" height="15" fill="rgb(223,67,24)"/><text x="723.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:604) (2 samples, 0.29%)</title><rect x="724" y="484" width="3" height="15" fill="rgb(244,139,6)"/><text x="727.00" y="494.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_end (stl_tree.h:681) (1 samples, 0.15%)</title><rect x="727" y="532" width="2" height="15" fill="rgb(217,61,3)"/><text x="730.00" y="542.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1669) (6 samples, 0.88%)</title><rect x="729" y="532" width="10" height="15" fill="rgb(214,144,6)"/><text x="732.00" y="542.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1670) (12 samples, 1.77%)</title><rect x="739" y="532" width="21" height="15" fill="rgb(250,127,33)"/><text x="742.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:605) (21 samples, 3.09%)</title><rect x="727" y="484" width="37" height="15" fill="rgb(209,74,34)"/><text x="730.00" y="494.50">Run..</text></g><g><title>std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_map.h:1105) (21 samples, 3.09%)</title><rect x="727" y="500" width="37" height="15" fill="rgb(250,229,25)"/><text x="730.00" y="510.50">std..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_tree.h:2334) (21 samples, 3.09%)</title><rect x="727" y="516" width="37" height="15" fill="rgb(221,90,15)"/><text x="730.00" y="526.50">std..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1671) (2 samples, 0.29%)</title><rect x="760" y="532" width="4" height="15" fill="rgb(225,150,3)"/><text x="763.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:606) (1 samples, 0.15%)</title><rect x="764" y="484" width="1" height="15" fill="rgb(208,98,23)"/><text x="767.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:615) (4 samples, 0.59%)</title><rect x="765" y="484" width="7" height="15" fill="rgb(240,158,18)"/><text x="768.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:616) (1 samples, 0.15%)</title><rect x="772" y="484" width="2" height="15" fill="rgb(208,72,21)"/><text x="775.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:618) (3 samples, 0.44%)</title><rect x="774" y="484" width="5" height="15" fill="rgb(206,1,10)"/><text x="777.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (stl_bvector.h:857) (1 samples, 0.15%)</title><rect x="778" y="500" width="1" height="15" fill="rgb(227,31,50)"/><text x="781.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:629) (1 samples, 0.15%)</title><rect x="779" y="484" width="2" height="15" fill="rgb(225,40,48)"/><text x="782.00" y="494.50"></text></g><g><title>std::vector&lt;std::tuple&lt;long, long, long, float&gt;, std::allocator&lt;std::tuple&lt;long, long, long, float&gt; &gt; &gt;::operator[] (stl_vector.h:796) (1 samples, 0.15%)</title><rect x="779" y="500" width="2" height="15" fill="rgb(239,111,42)"/><text x="782.00" y="510.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:45) (74 samples, 10.90%)</title><rect x="656" y="52" width="129" height="15" fill="rgb(248,137,48)"/><text x="659.00" y="62.50">&lt;module&gt; (bench_..</text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:44) (74 samples, 10.90%)</title><rect x="656" y="68" width="129" height="15" fill="rgb(254,57,23)"/><text x="659.00" y="78.50">profile_pyrt (be..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:29) (73 samples, 10.75%)</title><rect x="658" y="84" width="127" height="15" fill="rgb(220,48,25)"/><text x="661.00" y="94.50">setup_profile (..</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:23) (49 samples, 7.22%)</title><rect x="699" y="100" width="86" height="15" fill="rgb(249,142,41)"/><text x="702.00" y="110.50">profile (b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (49 samples, 7.22%)</title><rect x="699" y="116" width="86" height="15" fill="rgb(219,188,34)"/><text x="702.00" y="126.50">time_predi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (49 samples, 7.22%)</title><rect x="699" y="132" width="86" height="15" fill="rgb(223,62,37)"/><text x="702.00" y="142.50">&lt;lambda&gt; (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (49 samples, 7.22%)</title><rect x="699" y="148" width="86" height="15" fill="rgb(218,124,35)"/><text x="702.00" y="158.50">run (mlpro..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (49 samples, 7.22%)</title><rect x="699" y="164" width="86" height="15" fill="rgb(236,208,0)"/><text x="702.00" y="174.50">_run_seque..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (49 samples, 7.22%)</title><rect x="699" y="180" width="86" height="15" fill="rgb(213,109,19)"/><text x="702.00" y="190.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (49 samples, 7.22%)</title><rect x="699" y="196" width="86" height="15" fill="rgb(224,213,14)"/><text x="702.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (49 samples, 7.22%)</title><rect x="699" y="212" width="86" height="15" fill="rgb(209,184,26)"/><text x="702.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (49 samples, 7.22%)</title><rect x="699" y="228" width="86" height="15" fill="rgb(222,32,3)"/><text x="702.00" y="238.50">_run (mlpr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (49 samples, 7.22%)</title><rect x="699" y="244" width="86" height="15" fill="rgb(207,168,46)"/><text x="702.00" y="254.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (49 samples, 7.22%)</title><rect x="699" y="260" width="86" height="15" fill="rgb(240,37,48)"/><text x="702.00" y="270.50">void pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (49 samples, 7.22%)</title><rect x="699" y="276" width="86" height="15" fill="rgb(209,14,29)"/><text x="702.00" y="286.50">void pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (49 samples, 7.22%)</title><rect x="699" y="292" width="86" height="15" fill="rgb(236,114,11)"/><text x="702.00" y="302.50">pybind11::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (49 samples, 7.22%)</title><rect x="699" y="308" width="86" height="15" fill="rgb(211,219,44)"/><text x="702.00" y="318.50">pybind11::..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (49 samples, 7.22%)</title><rect x="699" y="324" width="86" height="15" fill="rgb(211,14,10)"/><text x="702.00" y="334.50">pybind11::..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (49 samples, 7.22%)</title><rect x="699" y="340" width="86" height="15" fill="rgb(242,199,17)"/><text x="702.00" y="350.50">pybind11::..</text></g><g><title>pybind11::array::~array (numpy.h:538) (49 samples, 7.22%)</title><rect x="699" y="356" width="86" height="15" fill="rgb(238,193,16)"/><text x="702.00" y="366.50">pybind11::..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (49 samples, 7.22%)</title><rect x="699" y="372" width="86" height="15" fill="rgb(223,57,8)"/><text x="702.00" y="382.50">pybind11::..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (49 samples, 7.22%)</title><rect x="699" y="388" width="86" height="15" fill="rgb(247,73,2)"/><text x="702.00" y="398.50">pybind11::..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (49 samples, 7.22%)</title><rect x="699" y="404" width="86" height="15" fill="rgb(251,1,44)"/><text x="702.00" y="414.50">pybind11::..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (49 samples, 7.22%)</title><rect x="699" y="420" width="86" height="15" fill="rgb(237,54,24)"/><text x="702.00" y="430.50">RuntimeTre..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (49 samples, 7.22%)</title><rect x="699" y="436" width="86" height="15" fill="rgb(220,24,5)"/><text x="702.00" y="446.50">pybind11::..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (47 samples, 6.92%)</title><rect x="703" y="452" width="82" height="15" fill="rgb(230,10,30)"/><text x="706.00" y="462.50">GOMP_para..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:427) (47 samples, 6.92%)</title><rect x="703" y="468" width="82" height="15" fill="rgb(218,94,33)"/><text x="706.00" y="478.50">RuntimeTr..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:644) (2 samples, 0.29%)</title><rect x="781" y="484" width="4" height="15" fill="rgb(245,177,19)"/><text x="784.00" y="494.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:60) (1 samples, 0.15%)</title><rect x="785" y="196" width="1" height="15" fill="rgb(205,74,51)"/><text x="788.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.15%)</title><rect x="785" y="212" width="1" height="15" fill="rgb(228,186,23)"/><text x="788.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:123) (1 samples, 0.15%)</title><rect x="785" y="228" width="1" height="15" fill="rgb(247,97,13)"/><text x="788.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py:89) (1 samples, 0.15%)</title><rect x="785" y="244" width="1" height="15" fill="rgb(245,154,38)"/><text x="788.00" y="254.50"></text></g><g><title>float_richcompare (scalarmath.c.src:1526) (1 samples, 0.15%)</title><rect x="785" y="260" width="1" height="15" fill="rgb(251,187,31)"/><text x="788.00" y="270.50"></text></g><g><title>gentype_richcompare (scalartypes.c.src:1220) (1 samples, 0.15%)</title><rect x="785" y="276" width="1" height="15" fill="rgb(236,161,4)"/><text x="788.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.15%)</title><rect x="785" y="292" width="1" height="15" fill="rgb(250,24,36)"/><text x="788.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.15%)</title><rect x="785" y="308" width="1" height="15" fill="rgb(220,65,19)"/><text x="788.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.15%)</title><rect x="785" y="324" width="1" height="15" fill="rgb(208,71,21)"/><text x="788.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.15%)</title><rect x="785" y="340" width="1" height="15" fill="rgb(237,133,40)"/><text x="788.00" y="350.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.15%)</title><rect x="785" y="356" width="1" height="15" fill="rgb(238,229,6)"/><text x="788.00" y="366.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:28) (2 samples, 0.29%)</title><rect x="785" y="84" width="3" height="15" fill="rgb(245,182,23)"/><text x="788.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.29%)</title><rect x="785" y="100" width="3" height="15" fill="rgb(242,4,17)"/><text x="788.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.29%)</title><rect x="785" y="116" width="3" height="15" fill="rgb(246,132,35)"/><text x="788.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.29%)</title><rect x="785" y="132" width="3" height="15" fill="rgb(210,224,23)"/><text x="788.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.29%)</title><rect x="785" y="148" width="3" height="15" fill="rgb(253,72,15)"/><text x="788.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.29%)</title><rect x="785" y="164" width="3" height="15" fill="rgb(231,198,53)"/><text x="788.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.29%)</title><rect x="785" y="180" width="3" height="15" fill="rgb(244,111,44)"/><text x="788.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:65) (1 samples, 0.15%)</title><rect x="786" y="196" width="2" height="15" fill="rgb(238,221,50)"/><text x="789.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.15%)</title><rect x="786" y="212" width="2" height="15" fill="rgb(222,98,26)"/><text x="789.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.15%)</title><rect x="786" y="228" width="2" height="15" fill="rgb(219,82,33)"/><text x="789.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="786" y="244" width="2" height="15" fill="rgb(209,134,17)"/><text x="789.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.15%)</title><rect x="786" y="260" width="2" height="15" fill="rgb(236,176,30)"/><text x="789.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.15%)</title><rect x="786" y="276" width="2" height="15" fill="rgb(207,113,35)"/><text x="789.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.15%)</title><rect x="786" y="292" width="2" height="15" fill="rgb(230,52,44)"/><text x="789.00" y="302.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.15%)</title><rect x="786" y="308" width="2" height="15" fill="rgb(232,190,3)"/><text x="789.00" y="318.50"></text></g><g><title>0x7f81c3603ff9 (?) (1 samples, 0.15%)</title><rect x="788" y="212" width="2" height="15" fill="rgb(248,217,44)"/><text x="791.00" y="222.50"></text></g><g><title>0x7f81c35feef6 (?) (1 samples, 0.15%)</title><rect x="788" y="228" width="2" height="15" fill="rgb(235,180,34)"/><text x="791.00" y="238.50"></text></g><g><title>0x7f81c35f3962 (?) (1 samples, 0.15%)</title><rect x="788" y="244" width="2" height="15" fill="rgb(216,86,53)"/><text x="791.00" y="254.50"></text></g><g><title>0x7f81c36277a7 (?) (1 samples, 0.15%)</title><rect x="788" y="260" width="2" height="15" fill="rgb(235,110,36)"/><text x="791.00" y="270.50"></text></g><g><title>0x7f81c3627379 (?) (1 samples, 0.15%)</title><rect x="788" y="276" width="2" height="15" fill="rgb(241,63,38)"/><text x="791.00" y="286.50"></text></g><g><title>0x7f81c3a858b8 (?) (1 samples, 0.15%)</title><rect x="788" y="292" width="2" height="15" fill="rgb(233,168,49)"/><text x="791.00" y="302.50"></text></g><g><title>0x7f81c3a83c7f (?) (1 samples, 0.15%)</title><rect x="788" y="308" width="2" height="15" fill="rgb(252,54,50)"/><text x="791.00" y="318.50"></text></g><g><title>0x7f81c3a9699c (?) (1 samples, 0.15%)</title><rect x="788" y="324" width="2" height="15" fill="rgb(216,76,26)"/><text x="791.00" y="334.50"></text></g><g><title>0x7f81c37b419e (?) (1 samples, 0.15%)</title><rect x="788" y="340" width="2" height="15" fill="rgb(241,124,23)"/><text x="791.00" y="350.50"></text></g><g><title>0x7f81c37b0ebd (?) (1 samples, 0.15%)</title><rect x="788" y="356" width="2" height="15" fill="rgb(223,10,22)"/><text x="791.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="795" y="356" width="2" height="15" fill="rgb(242,143,8)"/><text x="798.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="795" y="372" width="2" height="15" fill="rgb(231,69,39)"/><text x="798.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="795" y="388" width="2" height="15" fill="rgb(252,134,48)"/><text x="798.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="795" y="404" width="2" height="15" fill="rgb(214,43,25)"/><text x="798.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="795" y="420" width="2" height="15" fill="rgb(205,20,45)"/><text x="798.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="795" y="436" width="2" height="15" fill="rgb(219,55,52)"/><text x="798.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="795" y="452" width="2" height="15" fill="rgb(233,114,11)"/><text x="798.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="795" y="468" width="2" height="15" fill="rgb(239,119,9)"/><text x="798.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="795" y="484" width="2" height="15" fill="rgb(219,199,30)"/><text x="798.00" y="494.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (97 samples, 14.29%)</title><rect x="790" y="340" width="168" height="15" fill="rgb(248,51,6)"/><text x="793.00" y="350.50">onnxruntime::ml::Tree..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (93 samples, 13.70%)</title><rect x="797" y="356" width="161" height="15" fill="rgb(249,183,3)"/><text x="800.00" y="366.50">onnxruntime::ml::Tre..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="957" y="372" width="1" height="15" fill="rgb(219,97,33)"/><text x="960.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="957" y="388" width="1" height="15" fill="rgb(221,184,9)"/><text x="960.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="958" y="356" width="2" height="15" fill="rgb(219,46,46)"/><text x="961.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="958" y="372" width="2" height="15" fill="rgb(231,207,43)"/><text x="961.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="960" y="356" width="2" height="15" fill="rgb(235,200,53)"/><text x="963.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 14.73%)</title><rect x="790" y="260" width="174" height="15" fill="rgb(220,146,11)"/><text x="793.00" y="270.50">onnxruntime::Inference..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 14.73%)</title><rect x="790" y="276" width="174" height="15" fill="rgb(250,145,51)"/><text x="793.00" y="286.50">onnxruntime::Inference..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 14.73%)</title><rect x="790" y="292" width="174" height="15" fill="rgb(245,100,54)"/><text x="793.00" y="302.50">onnxruntime::utils::Ex..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 14.73%)</title><rect x="790" y="308" width="174" height="15" fill="rgb(227,70,41)"/><text x="793.00" y="318.50">onnxruntime::utils::Ex..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 14.73%)</title><rect x="790" y="324" width="174" height="15" fill="rgb(241,29,42)"/><text x="793.00" y="334.50">onnxruntime::Sequentia..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.44%)</title><rect x="958" y="340" width="6" height="15" fill="rgb(209,162,1)"/><text x="961.00" y="350.50"></text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="962" y="356" width="2" height="15" fill="rgb(215,33,4)"/><text x="965.00" y="366.50"></text></g><g><title>0x7f81c35ca930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="962" y="372" width="2" height="15" fill="rgb(220,192,23)"/><text x="965.00" y="382.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:18) (102 samples, 15.02%)</title><rect x="788" y="100" width="177" height="15" fill="rgb(209,211,7)"/><text x="791.00" y="110.50">profile (bench_RandomFo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (102 samples, 15.02%)</title><rect x="788" y="116" width="177" height="15" fill="rgb(245,13,28)"/><text x="791.00" y="126.50">time_predict (mlprodict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (102 samples, 15.02%)</title><rect x="788" y="132" width="177" height="15" fill="rgb(207,105,43)"/><text x="791.00" y="142.50">&lt;lambda&gt; (mlprodict/asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (102 samples, 15.02%)</title><rect x="788" y="148" width="177" height="15" fill="rgb(247,48,33)"/><text x="791.00" y="158.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (102 samples, 15.02%)</title><rect x="788" y="164" width="177" height="15" fill="rgb(233,16,22)"/><text x="791.00" y="174.50">_run_whole_runtime (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (102 samples, 15.02%)</title><rect x="788" y="180" width="177" height="15" fill="rgb(220,134,18)"/><text x="791.00" y="190.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (onnxruntime/capi/session.py:136) (102 samples, 15.02%)</title><rect x="788" y="196" width="177" height="15" fill="rgb(220,112,18)"/><text x="791.00" y="206.50">run (onnxruntime/capi/s..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 14.87%)</title><rect x="790" y="212" width="175" height="15" fill="rgb(206,168,51)"/><text x="793.00" y="222.50">pybind11::cpp_function..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 14.87%)</title><rect x="790" y="228" width="175" height="15" fill="rgb(227,186,38)"/><text x="793.00" y="238.50">void pybind11::cpp_fun..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 14.87%)</title><rect x="790" y="244" width="175" height="15" fill="rgb(247,70,6)"/><text x="793.00" y="254.50">onnxruntime::python::a..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="964" y="260" width="1" height="15" fill="rgb(247,6,48)"/><text x="967.00" y="270.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (118 samples, 17.38%)</title><rect x="969" y="356" width="205" height="15" fill="rgb(225,14,38)"/><text x="972.00" y="366.50">onnxruntime::ml::TreeEnsem..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1174" y="356" width="2" height="15" fill="rgb(237,196,27)"/><text x="1177.00" y="366.50"></text></g><g><title>0x7f82079d8961 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1176" y="372" width="1" height="15" fill="rgb(232,165,24)"/><text x="1179.00" y="382.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (122 samples, 17.97%)</title><rect x="967" y="340" width="212" height="15" fill="rgb(209,57,13)"/><text x="970.00" y="350.50">onnxruntime::ml::TreeEnsemb..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.29%)</title><rect x="1176" y="356" width="3" height="15" fill="rgb(237,221,36)"/><text x="1179.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1177" y="372" width="2" height="15" fill="rgb(234,61,33)"/><text x="1180.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1177" y="388" width="2" height="15" fill="rgb(213,81,9)"/><text x="1180.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.29%)</title><rect x="1179" y="356" width="4" height="15" fill="rgb(232,96,36)"/><text x="1182.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.29%)</title><rect x="1179" y="372" width="4" height="15" fill="rgb(225,78,42)"/><text x="1182.00" y="382.50"></text></g><g><title>0x7f82079da384 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1181" y="388" width="2" height="15" fill="rgb(205,192,28)"/><text x="1184.00" y="398.50"></text></g><g><title>0x7f82079d7c28 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1183" y="420" width="1" height="15" fill="rgb(213,135,23)"/><text x="1186.00" y="430.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (126 samples, 18.56%)</title><rect x="967" y="260" width="219" height="15" fill="rgb(212,184,52)"/><text x="970.00" y="270.50">onnxruntime::InferenceSessio..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (126 samples, 18.56%)</title><rect x="967" y="276" width="219" height="15" fill="rgb(208,58,48)"/><text x="970.00" y="286.50">onnxruntime::InferenceSessio..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (126 samples, 18.56%)</title><rect x="967" y="292" width="219" height="15" fill="rgb(243,44,32)"/><text x="970.00" y="302.50">onnxruntime::utils::ExecuteG..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (126 samples, 18.56%)</title><rect x="967" y="308" width="219" height="15" fill="rgb(246,66,24)"/><text x="970.00" y="318.50">onnxruntime::utils::ExecuteG..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (126 samples, 18.56%)</title><rect x="967" y="324" width="219" height="15" fill="rgb(232,39,33)"/><text x="970.00" y="334.50">onnxruntime::SequentialExecu..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.59%)</title><rect x="1179" y="340" width="7" height="15" fill="rgb(214,45,30)"/><text x="1182.00" y="350.50"></text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.29%)</title><rect x="1183" y="356" width="3" height="15" fill="rgb(249,100,4)"/><text x="1186.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.29%)</title><rect x="1183" y="372" width="3" height="15" fill="rgb(248,223,18)"/><text x="1186.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.29%)</title><rect x="1183" y="388" width="3" height="15" fill="rgb(214,1,3)"/><text x="1186.00" y="398.50"></text></g><g><title>0x7f82079da028 (libc-2.29.so) (2 samples, 0.29%)</title><rect x="1183" y="404" width="3" height="15" fill="rgb(224,158,47)"/><text x="1186.00" y="414.50"></text></g><g><title>0x7f82079d7c73 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1184" y="420" width="2" height="15" fill="rgb(230,32,27)"/><text x="1187.00" y="430.50"></text></g><g><title>0x7f82079d7aaf (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1184" y="436" width="2" height="15" fill="rgb(220,33,1)"/><text x="1187.00" y="446.50"></text></g><g><title>all (679 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(213,227,27)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:52) (233 samples, 34.32%)</title><rect x="785" y="52" width="405" height="15" fill="rgb(217,207,9)"/><text x="788.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_100..</text></g><g><title>profile_ort (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:51) (233 samples, 34.32%)</title><rect x="785" y="68" width="405" height="15" fill="rgb(223,7,18)"/><text x="788.00" y="78.50">profile_ort (bench_RandomForestClassifier_default_b_cl_..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:29) (231 samples, 34.02%)</title><rect x="788" y="84" width="402" height="15" fill="rgb(251,50,17)"/><text x="791.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_b_..</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_4_12_float_.py:23) (129 samples, 19.00%)</title><rect x="965" y="100" width="225" height="15" fill="rgb(210,23,8)"/><text x="968.00" y="110.50">profile (bench_RandomForestCl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (129 samples, 19.00%)</title><rect x="965" y="116" width="225" height="15" fill="rgb(250,7,49)"/><text x="968.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (128 samples, 18.85%)</title><rect x="967" y="132" width="223" height="15" fill="rgb(210,210,19)"/><text x="970.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (128 samples, 18.85%)</title><rect x="967" y="148" width="223" height="15" fill="rgb(208,83,28)"/><text x="970.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (128 samples, 18.85%)</title><rect x="967" y="164" width="223" height="15" fill="rgb(235,119,33)"/><text x="970.00" y="174.50">_run_whole_runtime (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (128 samples, 18.85%)</title><rect x="967" y="180" width="223" height="15" fill="rgb(254,27,3)"/><text x="970.00" y="190.50">run (mlprodict/onnxrt/ops_who..</text></g><g><title>run (onnxruntime/capi/session.py:136) (128 samples, 18.85%)</title><rect x="967" y="196" width="223" height="15" fill="rgb(205,97,36)"/><text x="970.00" y="206.50">run (onnxruntime/capi/session..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (128 samples, 18.85%)</title><rect x="967" y="212" width="223" height="15" fill="rgb(221,19,42)"/><text x="970.00" y="222.50">pybind11::cpp_function::dispa..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (128 samples, 18.85%)</title><rect x="967" y="228" width="223" height="15" fill="rgb(221,7,6)"/><text x="970.00" y="238.50">void pybind11::cpp_function::..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (128 samples, 18.85%)</title><rect x="967" y="244" width="223" height="15" fill="rgb(212,84,25)"/><text x="970.00" y="254.50">onnxruntime::python::addObjec..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.29%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(247,73,47)"/><text x="1189.00" y="270.50"></text></g></g></svg>