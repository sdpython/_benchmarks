<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2262" onload="init(evt)" viewBox="0 0 1200 2262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2262" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2245.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2245.00"> </text><g id="frames"><g><title>predict_log_proba (sklearn/naive_bayes.py:93) (1 samples, 0.18%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(225,11,8)"/><text x="13.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.18%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(219,91,8)"/><text x="13.00" y="190.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.18%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(230,96,15)"/><text x="13.00" y="206.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1875) (1 samples, 0.18%)</title><rect x="12" y="196" width="2" height="15" fill="rgb(216,215,16)"/><text x="15.00" y="206.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.18%)</title><rect x="12" y="212" width="2" height="15" fill="rgb(242,61,26)"/><text x="15.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1282) (1 samples, 0.18%)</title><rect x="12" y="228" width="2" height="15" fill="rgb(216,180,28)"/><text x="15.00" y="238.50"></text></g><g><title>npy_memchr (common.h:282) (1 samples, 0.18%)</title><rect x="12" y="244" width="2" height="15" fill="rgb(229,3,16)"/><text x="15.00" y="254.50"></text></g><g><title>npy_memchr (common.h:274) (1 samples, 0.18%)</title><rect x="14" y="244" width="2" height="15" fill="rgb(254,212,2)"/><text x="17.00" y="254.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:94) (3 samples, 0.54%)</title><rect x="12" y="164" width="6" height="15" fill="rgb(239,156,23)"/><text x="15.00" y="174.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:987) (3 samples, 0.54%)</title><rect x="12" y="180" width="6" height="15" fill="rgb(212,133,40)"/><text x="15.00" y="190.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1876) (2 samples, 0.36%)</title><rect x="14" y="196" width="4" height="15" fill="rgb(223,134,10)"/><text x="17.00" y="206.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (2 samples, 0.36%)</title><rect x="14" y="212" width="4" height="15" fill="rgb(216,53,5)"/><text x="17.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1282) (2 samples, 0.36%)</title><rect x="14" y="228" width="4" height="15" fill="rgb(222,180,20)"/><text x="17.00" y="238.50"></text></g><g><title>npy_memchr (common.h:277) (1 samples, 0.18%)</title><rect x="16" y="244" width="2" height="15" fill="rgb(232,91,47)"/><text x="19.00" y="254.50"></text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:18) (5 samples, 0.90%)</title><rect x="10" y="100" width="10" height="15" fill="rgb(236,99,41)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (5 samples, 0.90%)</title><rect x="10" y="116" width="10" height="15" fill="rgb(254,140,15)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (5 samples, 0.90%)</title><rect x="10" y="132" width="10" height="15" fill="rgb(217,82,40)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (5 samples, 0.90%)</title><rect x="10" y="148" width="10" height="15" fill="rgb(242,155,47)"/><text x="13.00" y="158.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:97) (1 samples, 0.18%)</title><rect x="18" y="164" width="2" height="15" fill="rgb(218,146,37)"/><text x="21.00" y="174.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:112) (1 samples, 0.18%)</title><rect x="18" y="180" width="2" height="15" fill="rgb(222,164,10)"/><text x="21.00" y="190.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.18%)</title><rect x="18" y="196" width="2" height="15" fill="rgb(243,181,3)"/><text x="21.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="18" y="212" width="2" height="15" fill="rgb(250,90,6)"/><text x="21.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="18" y="228" width="2" height="15" fill="rgb(231,102,25)"/><text x="21.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.18%)</title><rect x="18" y="244" width="2" height="15" fill="rgb(227,197,46)"/><text x="21.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.18%)</title><rect x="18" y="260" width="2" height="15" fill="rgb(221,172,0)"/><text x="21.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.18%)</title><rect x="18" y="276" width="2" height="15" fill="rgb(230,1,8)"/><text x="21.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.18%)</title><rect x="18" y="292" width="2" height="15" fill="rgb(240,32,11)"/><text x="21.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.18%)</title><rect x="18" y="308" width="2" height="15" fill="rgb(222,143,52)"/><text x="21.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.18%)</title><rect x="18" y="324" width="2" height="15" fill="rgb(223,23,31)"/><text x="21.00" y="334.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:93) (1 samples, 0.18%)</title><rect x="24" y="164" width="3" height="15" fill="rgb(248,135,43)"/><text x="27.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.18%)</title><rect x="24" y="180" width="3" height="15" fill="rgb(212,97,5)"/><text x="27.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.18%)</title><rect x="24" y="196" width="3" height="15" fill="rgb(213,93,41)"/><text x="27.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.18%)</title><rect x="27" y="212" width="2" height="15" fill="rgb(233,40,36)"/><text x="30.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.36%)</title><rect x="29" y="212" width="4" height="15" fill="rgb(207,127,53)"/><text x="32.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.18%)</title><rect x="33" y="244" width="2" height="15" fill="rgb(214,63,39)"/><text x="36.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.36%)</title><rect x="33" y="212" width="4" height="15" fill="rgb(241,74,21)"/><text x="36.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.36%)</title><rect x="33" y="228" width="4" height="15" fill="rgb(232,53,40)"/><text x="36.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.18%)</title><rect x="35" y="244" width="2" height="15" fill="rgb(253,118,43)"/><text x="38.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.36%)</title><rect x="37" y="212" width="4" height="15" fill="rgb(219,108,4)"/><text x="40.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.36%)</title><rect x="37" y="228" width="4" height="15" fill="rgb(236,33,12)"/><text x="40.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.36%)</title><rect x="41" y="212" width="5" height="15" fill="rgb(229,125,15)"/><text x="44.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.18%)</title><rect x="46" y="212" width="2" height="15" fill="rgb(243,112,10)"/><text x="49.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:425) (1 samples, 0.18%)</title><rect x="46" y="228" width="2" height="15" fill="rgb(216,152,34)"/><text x="49.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.18%)</title><rect x="48" y="212" width="2" height="15" fill="rgb(238,65,21)"/><text x="51.00" y="222.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:985) (12 samples, 2.16%)</title><rect x="27" y="180" width="25" height="15" fill="rgb(234,86,45)"/><text x="30.00" y="190.50">_..</text></g><g><title>_check_X (sklearn/naive_bayes.py:473) (12 samples, 2.16%)</title><rect x="27" y="196" width="25" height="15" fill="rgb(224,116,15)"/><text x="30.00" y="206.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.18%)</title><rect x="50" y="212" width="2" height="15" fill="rgb(216,39,3)"/><text x="53.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.18%)</title><rect x="50" y="228" width="2" height="15" fill="rgb(254,182,48)"/><text x="53.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:462) (1 samples, 0.18%)</title><rect x="54" y="212" width="2" height="15" fill="rgb(230,31,48)"/><text x="57.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.18%)</title><rect x="56" y="212" width="2" height="15" fill="rgb(239,98,48)"/><text x="59.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.18%)</title><rect x="56" y="228" width="2" height="15" fill="rgb(240,126,24)"/><text x="59.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.36%)</title><rect x="58" y="212" width="5" height="15" fill="rgb(222,20,19)"/><text x="61.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.18%)</title><rect x="61" y="228" width="2" height="15" fill="rgb(243,126,9)"/><text x="64.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.18%)</title><rect x="63" y="212" width="2" height="15" fill="rgb(231,218,18)"/><text x="66.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.18%)</title><rect x="63" y="228" width="2" height="15" fill="rgb(234,5,7)"/><text x="66.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:585) (1 samples, 0.18%)</title><rect x="65" y="212" width="2" height="15" fill="rgb(252,180,3)"/><text x="68.00" y="222.50"></text></g><g><title>may_share_memory (&lt;__array_function__ internals&gt;:6) (1 samples, 0.18%)</title><rect x="65" y="228" width="2" height="15" fill="rgb(240,18,23)"/><text x="68.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.18%)</title><rect x="65" y="244" width="2" height="15" fill="rgb(240,13,14)"/><text x="68.00" y="254.50"></text></g><g><title>array_may_share_memory (multiarraymodule.c:4075) (1 samples, 0.18%)</title><rect x="65" y="260" width="2" height="15" fill="rgb(228,142,23)"/><text x="68.00" y="270.50"></text></g><g><title>array_shares_memory_impl (multiarraymodule.c:4014) (1 samples, 0.18%)</title><rect x="65" y="276" width="2" height="15" fill="rgb(209,115,44)"/><text x="68.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="65" y="292" width="2" height="15" fill="rgb(250,132,10)"/><text x="68.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (3 samples, 0.54%)</title><rect x="69" y="276" width="6" height="15" fill="rgb(253,94,54)"/><text x="72.00" y="286.50"></text></g><g><title>0x7fb711876d94 (libc-2.29.so) (3 samples, 0.54%)</title><rect x="69" y="292" width="6" height="15" fill="rgb(237,183,50)"/><text x="72.00" y="302.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1862) (12 samples, 2.16%)</title><rect x="52" y="196" width="26" height="15" fill="rgb(215,34,30)"/><text x="55.00" y="206.50">b..</text></g><g><title>check_array (sklearn/utils/validation.py:586) (5 samples, 0.90%)</title><rect x="67" y="212" width="11" height="15" fill="rgb(219,111,52)"/><text x="70.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1691) (5 samples, 0.90%)</title><rect x="67" y="228" width="11" height="15" fill="rgb(209,11,43)"/><text x="70.00" y="238.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (4 samples, 0.72%)</title><rect x="69" y="244" width="9" height="15" fill="rgb(212,133,17)"/><text x="72.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (4 samples, 0.72%)</title><rect x="69" y="260" width="9" height="15" fill="rgb(225,81,6)"/><text x="72.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.18%)</title><rect x="75" y="276" width="3" height="15" fill="rgb(219,178,25)"/><text x="78.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.18%)</title><rect x="75" y="292" width="3" height="15" fill="rgb(244,192,35)"/><text x="78.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.18%)</title><rect x="75" y="308" width="3" height="15" fill="rgb(210,167,17)"/><text x="78.00" y="318.50"></text></g><g><title>0x7fb71180ea19 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="75" y="324" width="3" height="15" fill="rgb(211,226,19)"/><text x="78.00" y="334.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:736) (1 samples, 0.18%)</title><rect x="75" y="340" width="3" height="15" fill="rgb(249,40,14)"/><text x="78.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="78" y="244" width="2" height="15" fill="rgb(224,204,17)"/><text x="81.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.18%)</title><rect x="78" y="260" width="2" height="15" fill="rgb(218,141,15)"/><text x="81.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.18%)</title><rect x="78" y="276" width="2" height="15" fill="rgb(220,166,54)"/><text x="81.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.18%)</title><rect x="80" y="244" width="2" height="15" fill="rgb(221,72,17)"/><text x="83.00" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:412) (1 samples, 0.18%)</title><rect x="80" y="260" width="2" height="15" fill="rgb(234,131,40)"/><text x="83.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.18%)</title><rect x="80" y="276" width="2" height="15" fill="rgb(206,221,21)"/><text x="83.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.18%)</title><rect x="80" y="292" width="2" height="15" fill="rgb(205,100,24)"/><text x="83.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:912) (1 samples, 0.18%)</title><rect x="80" y="308" width="2" height="15" fill="rgb(211,59,33)"/><text x="83.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.18%)</title><rect x="82" y="260" width="2" height="15" fill="rgb(234,36,43)"/><text x="85.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="82" y="276" width="2" height="15" fill="rgb(229,156,24)"/><text x="85.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.18%)</title><rect x="82" y="292" width="2" height="15" fill="rgb(222,127,30)"/><text x="85.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.18%)</title><rect x="82" y="308" width="2" height="15" fill="rgb(208,67,5)"/><text x="85.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.18%)</title><rect x="82" y="324" width="2" height="15" fill="rgb(251,226,0)"/><text x="85.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.18%)</title><rect x="82" y="340" width="2" height="15" fill="rgb(217,214,46)"/><text x="85.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="82" y="356" width="2" height="15" fill="rgb(213,1,39)"/><text x="85.00" y="366.50"></text></g><g><title>0x7fb711857d67 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="82" y="372" width="2" height="15" fill="rgb(241,30,47)"/><text x="85.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.36%)</title><rect x="82" y="244" width="4" height="15" fill="rgb(243,96,47)"/><text x="85.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.18%)</title><rect x="84" y="260" width="2" height="15" fill="rgb(246,227,18)"/><text x="87.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.18%)</title><rect x="84" y="276" width="2" height="15" fill="rgb(225,46,50)"/><text x="87.00" y="286.50"></text></g><g><title>FLOAT_greater (loops.c.src:1773) (1 samples, 0.18%)</title><rect x="84" y="292" width="2" height="15" fill="rgb(205,55,28)"/><text x="87.00" y="302.50"></text></g><g><title>run_binary_simd_greater_FLOAT (simd.inc.src:295) (1 samples, 0.18%)</title><rect x="84" y="308" width="2" height="15" fill="rgb(222,44,25)"/><text x="87.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src:982) (1 samples, 0.18%)</title><rect x="84" y="324" width="2" height="15" fill="rgb(239,61,36)"/><text x="87.00" y="334.50"></text></g><g><title>_mm_cmpgt_ps (xmmintrin.h:351) (1 samples, 0.18%)</title><rect x="84" y="340" width="2" height="15" fill="rgb(244,106,4)"/><text x="87.00" y="350.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1873) (5 samples, 0.90%)</title><rect x="78" y="196" width="10" height="15" fill="rgb(205,9,21)"/><text x="81.00" y="206.50"></text></g><g><title>array_richcompare (arrayobject.c:1504) (5 samples, 0.90%)</title><rect x="78" y="212" width="10" height="15" fill="rgb(236,196,45)"/><text x="81.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.90%)</title><rect x="78" y="228" width="10" height="15" fill="rgb(228,212,45)"/><text x="81.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.18%)</title><rect x="86" y="244" width="2" height="15" fill="rgb(209,121,10)"/><text x="89.00" y="254.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.18%)</title><rect x="86" y="260" width="2" height="15" fill="rgb(230,43,28)"/><text x="89.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.18%)</title><rect x="86" y="276" width="2" height="15" fill="rgb(207,220,1)"/><text x="89.00" y="286.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1874) (2 samples, 0.36%)</title><rect x="88" y="196" width="4" height="15" fill="rgb(211,141,15)"/><text x="91.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4757) (1 samples, 0.18%)</title><rect x="90" y="212" width="2" height="15" fill="rgb(220,56,21)"/><text x="93.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.18%)</title><rect x="92" y="228" width="3" height="15" fill="rgb(206,165,53)"/><text x="95.00" y="238.50"></text></g><g><title>count_boolean_trues (item_selection.c:2061) (1 samples, 0.18%)</title><rect x="92" y="244" width="3" height="15" fill="rgb(225,108,11)"/><text x="95.00" y="254.50"></text></g><g><title>count_nonzero_bytes_384 (item_selection.c:1997) (1 samples, 0.18%)</title><rect x="92" y="260" width="3" height="15" fill="rgb(250,119,5)"/><text x="95.00" y="270.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1285) (1 samples, 0.18%)</title><rect x="95" y="228" width="2" height="15" fill="rgb(230,162,4)"/><text x="98.00" y="238.50"></text></g><g><title>npy_memchr (common.h:262) (7 samples, 1.26%)</title><rect x="97" y="244" width="15" height="15" fill="rgb(212,129,23)"/><text x="100.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1287) (10 samples, 1.80%)</title><rect x="97" y="228" width="21" height="15" fill="rgb(229,35,45)"/><text x="100.00" y="238.50"></text></g><g><title>npy_memchr (common.h:263) (3 samples, 0.54%)</title><rect x="112" y="244" width="6" height="15" fill="rgb(226,166,36)"/><text x="115.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1289) (1 samples, 0.18%)</title><rect x="118" y="228" width="2" height="15" fill="rgb(236,97,29)"/><text x="121.00" y="238.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.18%)</title><rect x="120" y="244" width="2" height="15" fill="rgb(248,125,24)"/><text x="123.00" y="254.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1875) (15 samples, 2.70%)</title><rect x="92" y="196" width="32" height="15" fill="rgb(230,77,29)"/><text x="95.00" y="206.50">bi..</text></g><g><title>array_assign_subscript (mapping.c:1859) (15 samples, 2.70%)</title><rect x="92" y="212" width="32" height="15" fill="rgb(218,213,32)"/><text x="95.00" y="222.50">ar..</text></g><g><title>array_assign_boolean_subscript (mapping.c:1291) (2 samples, 0.36%)</title><rect x="120" y="228" width="4" height="15" fill="rgb(240,121,0)"/><text x="123.00" y="238.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.18%)</title><rect x="122" y="244" width="2" height="15" fill="rgb(218,229,49)"/><text x="125.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.18%)</title><rect x="124" y="228" width="2" height="15" fill="rgb(212,152,4)"/><text x="127.00" y="238.50"></text></g><g><title>count_boolean_trues (item_selection.c:2061) (1 samples, 0.18%)</title><rect x="124" y="244" width="2" height="15" fill="rgb(230,145,9)"/><text x="127.00" y="254.50"></text></g><g><title>count_nonzero_bytes_384 (item_selection.c:1997) (1 samples, 0.18%)</title><rect x="124" y="260" width="2" height="15" fill="rgb(217,160,9)"/><text x="127.00" y="270.50"></text></g><g><title>npy_memchr (common.h:271) (1 samples, 0.18%)</title><rect x="126" y="244" width="3" height="15" fill="rgb(229,23,25)"/><text x="129.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1282) (2 samples, 0.36%)</title><rect x="126" y="228" width="5" height="15" fill="rgb(241,149,2)"/><text x="129.00" y="238.50"></text></g><g><title>npy_memchr (common.h:282) (1 samples, 0.18%)</title><rect x="129" y="244" width="2" height="15" fill="rgb(218,67,49)"/><text x="132.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1287) (1 samples, 0.18%)</title><rect x="131" y="228" width="2" height="15" fill="rgb(240,161,27)"/><text x="134.00" y="238.50"></text></g><g><title>npy_memchr (common.h:262) (1 samples, 0.18%)</title><rect x="131" y="244" width="2" height="15" fill="rgb(230,197,50)"/><text x="134.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1289) (1 samples, 0.18%)</title><rect x="133" y="228" width="2" height="15" fill="rgb(217,203,25)"/><text x="136.00" y="238.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:94) (52 samples, 9.37%)</title><rect x="27" y="164" width="110" height="15" fill="rgb(234,123,44)"/><text x="30.00" y="174.50">predict_log_p..</text></g><g><title>_check_X (sklearn/naive_bayes.py:987) (40 samples, 7.21%)</title><rect x="52" y="180" width="85" height="15" fill="rgb(250,5,5)"/><text x="55.00" y="190.50">_check_X (..</text></g><g><title>binarize (sklearn/preprocessing/_data.py:1876) (6 samples, 1.08%)</title><rect x="124" y="196" width="13" height="15" fill="rgb(222,103,35)"/><text x="127.00" y="206.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (6 samples, 1.08%)</title><rect x="124" y="212" width="13" height="15" fill="rgb(239,211,5)"/><text x="127.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1293) (1 samples, 0.18%)</title><rect x="135" y="228" width="2" height="15" fill="rgb(213,169,48)"/><text x="138.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.18%)</title><rect x="139" y="228" width="2" height="15" fill="rgb(215,27,27)"/><text x="142.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.18%)</title><rect x="139" y="244" width="2" height="15" fill="rgb(227,210,39)"/><text x="142.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="139" y="260" width="2" height="15" fill="rgb(234,70,27)"/><text x="142.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.18%)</title><rect x="139" y="276" width="2" height="15" fill="rgb(234,132,0)"/><text x="142.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="139" y="292" width="2" height="15" fill="rgb(223,127,1)"/><text x="142.00" y="302.50"></text></g><g><title>array_subtract (number.c:342) (3 samples, 0.54%)</title><rect x="137" y="196" width="6" height="15" fill="rgb(220,57,21)"/><text x="140.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="139" y="212" width="4" height="15" fill="rgb(233,123,5)"/><text x="142.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="141" y="228" width="2" height="15" fill="rgb(229,122,40)"/><text x="144.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.18%)</title><rect x="141" y="244" width="2" height="15" fill="rgb(207,13,33)"/><text x="144.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="141" y="260" width="2" height="15" fill="rgb(232,56,31)"/><text x="144.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.18%)</title><rect x="141" y="276" width="2" height="15" fill="rgb(239,2,48)"/><text x="144.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.18%)</title><rect x="141" y="292" width="2" height="15" fill="rgb(239,23,15)"/><text x="144.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.18%)</title><rect x="141" y="308" width="2" height="15" fill="rgb(252,19,7)"/><text x="144.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.18%)</title><rect x="141" y="324" width="2" height="15" fill="rgb(247,171,52)"/><text x="144.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="141" y="340" width="2" height="15" fill="rgb(220,116,31)"/><text x="144.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.18%)</title><rect x="143" y="212" width="3" height="15" fill="rgb(209,28,28)"/><text x="146.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.18%)</title><rect x="143" y="228" width="3" height="15" fill="rgb(212,20,24)"/><text x="146.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.18%)</title><rect x="146" y="228" width="2" height="15" fill="rgb(231,61,36)"/><text x="149.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="146" y="244" width="2" height="15" fill="rgb(240,23,45)"/><text x="149.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.18%)</title><rect x="146" y="260" width="2" height="15" fill="rgb(237,5,36)"/><text x="149.00" y="270.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.18%)</title><rect x="146" y="276" width="2" height="15" fill="rgb(229,85,3)"/><text x="149.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.18%)</title><rect x="146" y="292" width="2" height="15" fill="rgb(220,158,8)"/><text x="149.00" y="302.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.18%)</title><rect x="146" y="308" width="2" height="15" fill="rgb(217,97,54)"/><text x="149.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="146" y="324" width="2" height="15" fill="rgb(224,175,16)"/><text x="149.00" y="334.50"></text></g><g><title>0x7fb711857b12 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="146" y="340" width="2" height="15" fill="rgb(229,118,19)"/><text x="149.00" y="350.50"></text></g><g><title>0x7fb710a77b00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="148" y="276" width="2" height="15" fill="rgb(248,125,26)"/><text x="151.00" y="286.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1018) (7 samples, 1.26%)</title><rect x="137" y="180" width="15" height="15" fill="rgb(223,77,28)"/><text x="140.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.72%)</title><rect x="143" y="196" width="9" height="15" fill="rgb(243,19,19)"/><text x="146.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.54%)</title><rect x="146" y="212" width="6" height="15" fill="rgb(205,28,40)"/><text x="149.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.36%)</title><rect x="148" y="228" width="4" height="15" fill="rgb(215,15,21)"/><text x="151.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (2 samples, 0.36%)</title><rect x="148" y="244" width="4" height="15" fill="rgb(230,138,53)"/><text x="151.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (2 samples, 0.36%)</title><rect x="148" y="260" width="4" height="15" fill="rgb(249,103,29)"/><text x="151.00" y="270.50"></text></g><g><title>0x7fb711a28e7e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="150" y="276" width="2" height="15" fill="rgb(225,212,18)"/><text x="153.00" y="286.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.18%)</title><rect x="154" y="212" width="2" height="15" fill="rgb(217,86,47)"/><text x="157.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.88%)</title><rect x="156" y="212" width="34" height="15" fill="rgb(205,37,31)"/><text x="159.00" y="222.50">dg..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (6 samples, 1.08%)</title><rect x="190" y="276" width="13" height="15" fill="rgb(249,41,34)"/><text x="193.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (6 samples, 1.08%)</title><rect x="190" y="292" width="13" height="15" fill="rgb(212,111,0)"/><text x="193.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (6 samples, 1.08%)</title><rect x="190" y="308" width="13" height="15" fill="rgb(247,110,26)"/><text x="193.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (6 samples, 1.08%)</title><rect x="190" y="324" width="13" height="15" fill="rgb(252,2,52)"/><text x="193.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (7 samples, 1.26%)</title><rect x="190" y="244" width="15" height="15" fill="rgb(215,57,16)"/><text x="193.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (7 samples, 1.26%)</title><rect x="190" y="260" width="15" height="15" fill="rgb(221,102,32)"/><text x="193.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.18%)</title><rect x="203" y="276" width="2" height="15" fill="rgb(240,22,31)"/><text x="206.00" y="286.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.18%)</title><rect x="203" y="292" width="2" height="15" fill="rgb(251,13,12)"/><text x="206.00" y="302.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.18%)</title><rect x="203" y="308" width="2" height="15" fill="rgb(214,219,5)"/><text x="206.00" y="318.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1020) (31 samples, 5.59%)</title><rect x="152" y="180" width="66" height="15" fill="rgb(220,55,3)"/><text x="155.00" y="190.50">_joint_..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (31 samples, 5.59%)</title><rect x="152" y="196" width="66" height="15" fill="rgb(249,9,19)"/><text x="155.00" y="206.50">safe_sp..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 2.34%)</title><rect x="190" y="212" width="28" height="15" fill="rgb(223,38,50)"/><text x="193.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (13 samples, 2.34%)</title><rect x="190" y="228" width="28" height="15" fill="rgb(210,94,21)"/><text x="193.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (6 samples, 1.08%)</title><rect x="205" y="244" width="13" height="15" fill="rgb(218,104,42)"/><text x="208.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (6 samples, 1.08%)</title><rect x="205" y="260" width="13" height="15" fill="rgb(220,155,23)"/><text x="208.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.08%)</title><rect x="205" y="276" width="13" height="15" fill="rgb(250,220,49)"/><text x="208.00" y="286.50"></text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.08%)</title><rect x="205" y="292" width="13" height="15" fill="rgb(216,70,8)"/><text x="208.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.90%)</title><rect x="207" y="308" width="11" height="15" fill="rgb(220,178,17)"/><text x="210.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.18%)</title><rect x="218" y="228" width="2" height="15" fill="rgb(206,30,38)"/><text x="221.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.36%)</title><rect x="218" y="196" width="4" height="15" fill="rgb(220,4,6)"/><text x="221.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.36%)</title><rect x="218" y="212" width="4" height="15" fill="rgb(225,122,11)"/><text x="221.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.18%)</title><rect x="220" y="228" width="2" height="15" fill="rgb(243,107,16)"/><text x="223.00" y="238.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3619) (1 samples, 0.18%)</title><rect x="222" y="276" width="2" height="15" fill="rgb(236,19,18)"/><text x="225.00" y="286.50"></text></g><g><title>0x7fb7118771ff (libc-2.29.so) (1 samples, 0.18%)</title><rect x="222" y="292" width="2" height="15" fill="rgb(244,48,9)"/><text x="225.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.18%)</title><rect x="224" y="292" width="2" height="15" fill="rgb(230,132,22)"/><text x="227.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.18%)</title><rect x="224" y="308" width="2" height="15" fill="rgb(252,146,6)"/><text x="227.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.18%)</title><rect x="224" y="324" width="2" height="15" fill="rgb(224,43,25)"/><text x="227.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="224" y="340" width="2" height="15" fill="rgb(241,21,20)"/><text x="227.00" y="350.50"></text></g><g><title>0x7fb711858700 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="224" y="356" width="2" height="15" fill="rgb(251,0,12)"/><text x="227.00" y="366.50"></text></g><g><title>0x7fb711855aa4 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="224" y="372" width="2" height="15" fill="rgb(239,172,17)"/><text x="227.00" y="382.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.54%)</title><rect x="222" y="260" width="6" height="15" fill="rgb(223,207,39)"/><text x="225.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.36%)</title><rect x="224" y="276" width="4" height="15" fill="rgb(225,125,4)"/><text x="227.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.18%)</title><rect x="226" y="292" width="2" height="15" fill="rgb(241,7,42)"/><text x="229.00" y="302.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.18%)</title><rect x="226" y="308" width="2" height="15" fill="rgb(219,11,39)"/><text x="229.00" y="318.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.18%)</title><rect x="226" y="324" width="2" height="15" fill="rgb(236,150,32)"/><text x="229.00" y="334.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.18%)</title><rect x="226" y="340" width="2" height="15" fill="rgb(208,185,43)"/><text x="229.00" y="350.50"></text></g><g><title>array_sum (methods.c:2215) (4 samples, 0.72%)</title><rect x="222" y="196" width="9" height="15" fill="rgb(245,179,20)"/><text x="225.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (4 samples, 0.72%)</title><rect x="222" y="212" width="9" height="15" fill="rgb(244,98,9)"/><text x="225.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (4 samples, 0.72%)</title><rect x="222" y="228" width="9" height="15" fill="rgb(245,194,25)"/><text x="225.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.72%)</title><rect x="222" y="244" width="9" height="15" fill="rgb(250,111,26)"/><text x="225.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (1 samples, 0.18%)</title><rect x="228" y="260" width="3" height="15" fill="rgb(252,65,41)"/><text x="231.00" y="270.50"></text></g><g><title>PyArray_Return (scalarapi.c:854) (1 samples, 0.18%)</title><rect x="228" y="276" width="3" height="15" fill="rgb(242,221,49)"/><text x="231.00" y="286.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:95) (45 samples, 8.11%)</title><rect x="137" y="164" width="96" height="15" fill="rgb(216,181,23)"/><text x="140.00" y="174.50">predict_log..</text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1021) (7 samples, 1.26%)</title><rect x="218" y="180" width="15" height="15" fill="rgb(241,201,42)"/><text x="221.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="231" y="196" width="2" height="15" fill="rgb(231,171,14)"/><text x="234.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="231" y="212" width="2" height="15" fill="rgb(239,22,21)"/><text x="234.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.18%)</title><rect x="231" y="228" width="2" height="15" fill="rgb(243,84,11)"/><text x="234.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.18%)</title><rect x="231" y="244" width="2" height="15" fill="rgb(207,61,45)"/><text x="234.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.18%)</title><rect x="231" y="260" width="2" height="15" fill="rgb(237,15,25)"/><text x="234.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.18%)</title><rect x="233" y="212" width="2" height="15" fill="rgb(213,93,28)"/><text x="236.00" y="222.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.18%)</title><rect x="233" y="228" width="2" height="15" fill="rgb(252,197,33)"/><text x="236.00" y="238.50"></text></g><g><title>get_array_function (arrayfunction_override.c:35) (1 samples, 0.18%)</title><rect x="233" y="244" width="2" height="15" fill="rgb(207,130,13)"/><text x="236.00" y="254.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.18%)</title><rect x="235" y="244" width="2" height="15" fill="rgb(240,173,43)"/><text x="238.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.18%)</title><rect x="235" y="260" width="2" height="15" fill="rgb(215,63,38)"/><text x="238.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.18%)</title><rect x="237" y="244" width="2" height="15" fill="rgb(237,103,50)"/><text x="240.00" y="254.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (1 samples, 0.18%)</title><rect x="239" y="308" width="2" height="15" fill="rgb(225,93,38)"/><text x="242.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:351) (1 samples, 0.18%)</title><rect x="239" y="324" width="2" height="15" fill="rgb(225,43,41)"/><text x="242.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.18%)</title><rect x="239" y="340" width="2" height="15" fill="rgb(221,45,5)"/><text x="242.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.18%)</title><rect x="239" y="356" width="2" height="15" fill="rgb(237,155,0)"/><text x="242.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src:169) (1 samples, 0.18%)</title><rect x="239" y="372" width="2" height="15" fill="rgb(213,159,42)"/><text x="242.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.18%)</title><rect x="241" y="308" width="2" height="15" fill="rgb(245,117,16)"/><text x="244.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.18%)</title><rect x="241" y="324" width="2" height="15" fill="rgb(222,106,35)"/><text x="244.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.18%)</title><rect x="241" y="340" width="2" height="15" fill="rgb(221,65,5)"/><text x="244.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="241" y="356" width="2" height="15" fill="rgb(243,208,20)"/><text x="244.00" y="366.50"></text></g><g><title>0x7fb711857b12 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="241" y="372" width="2" height="15" fill="rgb(211,72,24)"/><text x="244.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.18%)</title><rect x="243" y="324" width="3" height="15" fill="rgb(209,228,1)"/><text x="246.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1854) (1 samples, 0.18%)</title><rect x="246" y="340" width="2" height="15" fill="rgb(248,131,1)"/><text x="249.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src:194) (2 samples, 0.36%)</title><rect x="248" y="356" width="4" height="15" fill="rgb(246,173,19)"/><text x="251.00" y="366.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.18%)</title><rect x="250" y="372" width="2" height="15" fill="rgb(248,77,42)"/><text x="253.00" y="382.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1857) (6 samples, 1.08%)</title><rect x="248" y="340" width="12" height="15" fill="rgb(212,82,46)"/><text x="251.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src:195) (4 samples, 0.72%)</title><rect x="252" y="356" width="8" height="15" fill="rgb(221,41,47)"/><text x="255.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1117) (4 samples, 0.72%)</title><rect x="252" y="372" width="8" height="15" fill="rgb(213,141,16)"/><text x="255.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (2 samples, 0.36%)</title><rect x="256" y="388" width="4" height="15" fill="rgb(246,152,10)"/><text x="259.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (2 samples, 0.36%)</title><rect x="256" y="404" width="4" height="15" fill="rgb(246,23,22)"/><text x="259.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (2 samples, 0.36%)</title><rect x="256" y="420" width="4" height="15" fill="rgb(253,36,37)"/><text x="259.00" y="430.50"></text></g><g><title>0x7fb710a79c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="263" y="372" width="2" height="15" fill="rgb(214,1,6)"/><text x="266.00" y="382.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:101) (16 samples, 2.88%)</title><rect x="233" y="180" width="34" height="15" fill="rgb(237,51,10)"/><text x="236.00" y="190.50">lo..</text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (16 samples, 2.88%)</title><rect x="233" y="196" width="34" height="15" fill="rgb(244,107,54)"/><text x="236.00" y="206.50">am..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (15 samples, 2.70%)</title><rect x="235" y="212" width="32" height="15" fill="rgb(228,141,25)"/><text x="238.00" y="222.50">ar..</text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (15 samples, 2.70%)</title><rect x="235" y="228" width="32" height="15" fill="rgb(215,134,50)"/><text x="238.00" y="238.50">am..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (13 samples, 2.34%)</title><rect x="239" y="244" width="28" height="15" fill="rgb(234,165,33)"/><text x="242.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 2.34%)</title><rect x="239" y="260" width="28" height="15" fill="rgb(234,62,20)"/><text x="242.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (13 samples, 2.34%)</title><rect x="239" y="276" width="28" height="15" fill="rgb(211,69,4)"/><text x="242.00" y="286.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (13 samples, 2.34%)</title><rect x="239" y="292" width="28" height="15" fill="rgb(209,24,16)"/><text x="242.00" y="302.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (11 samples, 1.98%)</title><rect x="243" y="308" width="24" height="15" fill="rgb(214,45,33)"/><text x="246.00" y="318.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (10 samples, 1.80%)</title><rect x="246" y="324" width="21" height="15" fill="rgb(215,61,50)"/><text x="249.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1876) (3 samples, 0.54%)</title><rect x="260" y="340" width="7" height="15" fill="rgb(207,157,47)"/><text x="263.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (2 samples, 0.36%)</title><rect x="263" y="356" width="4" height="15" fill="rgb(238,141,54)"/><text x="266.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:803) (1 samples, 0.18%)</title><rect x="265" y="372" width="2" height="15" fill="rgb(243,33,34)"/><text x="268.00" y="382.50"></text></g><g><title>array_assign_subscript (mapping.c:1850) (1 samples, 0.18%)</title><rect x="267" y="196" width="2" height="15" fill="rgb(244,141,45)"/><text x="270.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.18%)</title><rect x="267" y="212" width="2" height="15" fill="rgb(223,18,27)"/><text x="270.00" y="222.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:104) (2 samples, 0.36%)</title><rect x="267" y="180" width="4" height="15" fill="rgb(227,10,32)"/><text x="270.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="269" y="196" width="2" height="15" fill="rgb(253,144,29)"/><text x="272.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.18%)</title><rect x="269" y="212" width="2" height="15" fill="rgb(218,159,15)"/><text x="272.00" y="222.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.18%)</title><rect x="269" y="228" width="2" height="15" fill="rgb(238,92,25)"/><text x="272.00" y="238.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.18%)</title><rect x="269" y="244" width="2" height="15" fill="rgb(241,219,50)"/><text x="272.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.18%)</title><rect x="269" y="260" width="2" height="15" fill="rgb(205,93,1)"/><text x="272.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.18%)</title><rect x="269" y="276" width="2" height="15" fill="rgb(214,115,21)"/><text x="272.00" y="286.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.18%)</title><rect x="269" y="292" width="2" height="15" fill="rgb(214,2,36)"/><text x="272.00" y="302.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1491) (1 samples, 0.18%)</title><rect x="269" y="308" width="2" height="15" fill="rgb(220,127,27)"/><text x="272.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="271" y="228" width="2" height="15" fill="rgb(251,227,39)"/><text x="274.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.18%)</title><rect x="271" y="244" width="2" height="15" fill="rgb(243,52,9)"/><text x="274.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.18%)</title><rect x="271" y="260" width="2" height="15" fill="rgb(247,191,34)"/><text x="274.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2493) (1 samples, 0.18%)</title><rect x="273" y="292" width="2" height="15" fill="rgb(212,167,5)"/><text x="276.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.18%)</title><rect x="275" y="308" width="2" height="15" fill="rgb(217,128,5)"/><text x="278.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.54%)</title><rect x="273" y="260" width="7" height="15" fill="rgb(243,166,46)"/><text x="276.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.54%)</title><rect x="273" y="276" width="7" height="15" fill="rgb(229,63,0)"/><text x="276.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.36%)</title><rect x="275" y="292" width="5" height="15" fill="rgb(239,113,11)"/><text x="278.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.18%)</title><rect x="277" y="308" width="3" height="15" fill="rgb(216,98,4)"/><text x="280.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.18%)</title><rect x="277" y="324" width="3" height="15" fill="rgb(230,98,44)"/><text x="280.00" y="334.50"></text></g><g><title>array_subtract (number.c:342) (5 samples, 0.90%)</title><rect x="271" y="196" width="11" height="15" fill="rgb(228,206,18)"/><text x="274.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.90%)</title><rect x="271" y="212" width="11" height="15" fill="rgb(211,139,48)"/><text x="274.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.72%)</title><rect x="273" y="228" width="9" height="15" fill="rgb(226,135,49)"/><text x="276.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.72%)</title><rect x="273" y="244" width="9" height="15" fill="rgb(248,166,7)"/><text x="276.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.18%)</title><rect x="280" y="260" width="2" height="15" fill="rgb(248,178,21)"/><text x="283.00" y="270.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.18%)</title><rect x="280" y="276" width="2" height="15" fill="rgb(241,19,6)"/><text x="283.00" y="286.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.18%)</title><rect x="280" y="292" width="2" height="15" fill="rgb(246,1,37)"/><text x="283.00" y="302.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:603) (1 samples, 0.18%)</title><rect x="280" y="308" width="2" height="15" fill="rgb(250,111,53)"/><text x="283.00" y="318.50"></text></g><g><title>_mm_sub_pd (emmintrin.h:241) (1 samples, 0.18%)</title><rect x="280" y="324" width="2" height="15" fill="rgb(212,192,32)"/><text x="283.00" y="334.50"></text></g><g><title>0x7fb7119a21b0 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="290" y="292" width="2" height="15" fill="rgb(252,27,1)"/><text x="293.00" y="302.50"></text></g><g><title>0x7fb711a28ba0 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="292" y="292" width="2" height="15" fill="rgb(243,227,24)"/><text x="295.00" y="302.50"></text></g><g><title>0x7fb711a28bfc (libm-2.29.so) (1 samples, 0.18%)</title><rect x="294" y="292" width="3" height="15" fill="rgb(239,182,34)"/><text x="297.00" y="302.50"></text></g><g><title>0x7fb711a28c2e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="297" y="292" width="2" height="15" fill="rgb(215,87,13)"/><text x="300.00" y="302.50"></text></g><g><title>0x7fb711a28c52 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="299" y="292" width="2" height="15" fill="rgb(245,67,20)"/><text x="302.00" y="302.50"></text></g><g><title>0x7fb711a28c6e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="301" y="292" width="2" height="15" fill="rgb(232,215,26)"/><text x="304.00" y="302.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:112) (16 samples, 2.88%)</title><rect x="271" y="180" width="34" height="15" fill="rgb(234,164,51)"/><text x="274.00" y="190.50">lo..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.98%)</title><rect x="282" y="196" width="23" height="15" fill="rgb(251,214,31)"/><text x="285.00" y="206.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.98%)</title><rect x="282" y="212" width="23" height="15" fill="rgb(234,226,25)"/><text x="285.00" y="222.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (11 samples, 1.98%)</title><rect x="282" y="228" width="23" height="15" fill="rgb(251,228,43)"/><text x="285.00" y="238.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (11 samples, 1.98%)</title><rect x="282" y="244" width="23" height="15" fill="rgb(213,105,31)"/><text x="285.00" y="254.50">t..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (11 samples, 1.98%)</title><rect x="282" y="260" width="23" height="15" fill="rgb(219,174,42)"/><text x="285.00" y="270.50">P..</text></g><g><title>exp (libm-2.29.so) (11 samples, 1.98%)</title><rect x="282" y="276" width="23" height="15" fill="rgb(238,131,10)"/><text x="285.00" y="286.50">e..</text></g><g><title>0x7fb711a28c7b (libm-2.29.so) (1 samples, 0.18%)</title><rect x="303" y="292" width="2" height="15" fill="rgb(235,203,38)"/><text x="306.00" y="302.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:115) (1 samples, 0.18%)</title><rect x="305" y="180" width="2" height="15" fill="rgb(253,180,48)"/><text x="308.00" y="190.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (1 samples, 0.18%)</title><rect x="305" y="196" width="2" height="15" fill="rgb(250,26,13)"/><text x="308.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:117) (1 samples, 0.18%)</title><rect x="305" y="212" width="2" height="15" fill="rgb(215,219,20)"/><text x="308.00" y="222.50"></text></g><g><title>ufunc_geterr (ufunc_object.c:4807) (1 samples, 0.18%)</title><rect x="305" y="228" width="2" height="15" fill="rgb(214,208,46)"/><text x="308.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.18%)</title><rect x="311" y="244" width="3" height="15" fill="rgb(246,186,9)"/><text x="314.00" y="254.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.18%)</title><rect x="314" y="244" width="2" height="15" fill="rgb(226,51,34)"/><text x="317.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.18%)</title><rect x="318" y="260" width="2" height="15" fill="rgb(247,78,47)"/><text x="321.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="318" y="276" width="2" height="15" fill="rgb(234,96,1)"/><text x="321.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.18%)</title><rect x="318" y="292" width="2" height="15" fill="rgb(240,106,40)"/><text x="321.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.18%)</title><rect x="318" y="308" width="2" height="15" fill="rgb(234,98,31)"/><text x="321.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.18%)</title><rect x="320" y="308" width="2" height="15" fill="rgb(210,166,19)"/><text x="323.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.18%)</title><rect x="320" y="324" width="2" height="15" fill="rgb(206,228,31)"/><text x="323.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.18%)</title><rect x="320" y="340" width="2" height="15" fill="rgb(242,63,26)"/><text x="323.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:49) (1 samples, 0.18%)</title><rect x="320" y="356" width="2" height="15" fill="rgb(207,211,46)"/><text x="323.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.18%)</title><rect x="320" y="372" width="2" height="15" fill="rgb(235,50,9)"/><text x="323.00" y="382.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:116) (8 samples, 1.44%)</title><rect x="307" y="180" width="17" height="15" fill="rgb(239,102,29)"/><text x="310.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (8 samples, 1.44%)</title><rect x="307" y="196" width="17" height="15" fill="rgb(233,174,34)"/><text x="310.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 1.44%)</title><rect x="307" y="212" width="17" height="15" fill="rgb(242,219,46)"/><text x="310.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (7 samples, 1.26%)</title><rect x="309" y="228" width="15" height="15" fill="rgb(245,177,44)"/><text x="312.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (4 samples, 0.72%)</title><rect x="316" y="244" width="8" height="15" fill="rgb(218,181,44)"/><text x="319.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.36%)</title><rect x="320" y="260" width="4" height="15" fill="rgb(217,219,51)"/><text x="323.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.36%)</title><rect x="320" y="276" width="4" height="15" fill="rgb(221,127,8)"/><text x="323.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.36%)</title><rect x="320" y="292" width="4" height="15" fill="rgb(242,58,38)"/><text x="323.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.18%)</title><rect x="322" y="308" width="2" height="15" fill="rgb(246,103,1)"/><text x="325.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.18%)</title><rect x="322" y="324" width="2" height="15" fill="rgb(246,161,37)"/><text x="325.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.18%)</title><rect x="322" y="340" width="2" height="15" fill="rgb(229,223,48)"/><text x="325.00" y="350.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (1 samples, 0.18%)</title><rect x="324" y="196" width="2" height="15" fill="rgb(223,127,22)"/><text x="327.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:131) (1 samples, 0.18%)</title><rect x="324" y="212" width="2" height="15" fill="rgb(224,196,5)"/><text x="327.00" y="222.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:120) (2 samples, 0.36%)</title><rect x="324" y="180" width="4" height="15" fill="rgb(243,86,30)"/><text x="327.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="326" y="196" width="2" height="15" fill="rgb(205,30,42)"/><text x="329.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="326" y="212" width="2" height="15" fill="rgb(211,3,10)"/><text x="329.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.18%)</title><rect x="326" y="228" width="2" height="15" fill="rgb(254,187,31)"/><text x="329.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.18%)</title><rect x="326" y="244" width="2" height="15" fill="rgb(227,47,37)"/><text x="329.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (1 samples, 0.18%)</title><rect x="326" y="260" width="2" height="15" fill="rgb(216,15,21)"/><text x="329.00" y="270.50"></text></g><g><title>0x7fb711a28e38 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="326" y="276" width="2" height="15" fill="rgb(213,159,20)"/><text x="329.00" y="286.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:97) (46 samples, 8.29%)</title><rect x="233" y="164" width="98" height="15" fill="rgb(249,137,3)"/><text x="236.00" y="174.50">predict_log..</text></g><g><title>logsumexp (scipy/special/_logsumexp.py:123) (1 samples, 0.18%)</title><rect x="328" y="180" width="3" height="15" fill="rgb(244,10,37)"/><text x="331.00" y="190.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;:6) (1 samples, 0.18%)</title><rect x="328" y="196" width="3" height="15" fill="rgb(211,23,32)"/><text x="331.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.18%)</title><rect x="328" y="212" width="3" height="15" fill="rgb(214,14,47)"/><text x="331.00" y="222.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.18%)</title><rect x="331" y="180" width="2" height="15" fill="rgb(243,207,50)"/><text x="334.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="331" y="196" width="2" height="15" fill="rgb(228,61,52)"/><text x="334.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="331" y="212" width="2" height="15" fill="rgb(226,220,9)"/><text x="334.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.18%)</title><rect x="331" y="228" width="2" height="15" fill="rgb(252,57,52)"/><text x="334.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.18%)</title><rect x="331" y="244" width="2" height="15" fill="rgb(211,39,30)"/><text x="334.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.18%)</title><rect x="331" y="260" width="2" height="15" fill="rgb(216,43,31)"/><text x="334.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.18%)</title><rect x="331" y="276" width="2" height="15" fill="rgb(243,29,29)"/><text x="334.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.18%)</title><rect x="331" y="292" width="2" height="15" fill="rgb(252,41,17)"/><text x="334.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.18%)</title><rect x="331" y="308" width="2" height="15" fill="rgb(234,157,1)"/><text x="334.00" y="318.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:98) (2 samples, 0.36%)</title><rect x="331" y="164" width="4" height="15" fill="rgb(241,201,7)"/><text x="334.00" y="174.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;:6) (1 samples, 0.18%)</title><rect x="333" y="180" width="2" height="15" fill="rgb(216,40,27)"/><text x="336.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.18%)</title><rect x="333" y="196" width="2" height="15" fill="rgb(246,122,47)"/><text x="336.00" y="206.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:126) (1 samples, 0.18%)</title><rect x="333" y="212" width="2" height="15" fill="rgb(226,119,9)"/><text x="336.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1508) (1 samples, 0.18%)</title><rect x="333" y="228" width="2" height="15" fill="rgb(247,26,40)"/><text x="336.00" y="238.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.18%)</title><rect x="335" y="228" width="2" height="15" fill="rgb(234,21,50)"/><text x="338.00" y="238.50"></text></g><g><title>0x7fb711a28c07 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="343" y="260" width="2" height="15" fill="rgb(226,18,11)"/><text x="346.00" y="270.50"></text></g><g><title>0x7fb711a28c0c (libm-2.29.so) (1 samples, 0.18%)</title><rect x="345" y="260" width="3" height="15" fill="rgb(244,196,24)"/><text x="348.00" y="270.50"></text></g><g><title>0x7fb711a28c3e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="348" y="260" width="2" height="15" fill="rgb(251,216,10)"/><text x="351.00" y="270.50"></text></g><g><title>0x7fb711a28c6a (libm-2.29.so) (1 samples, 0.18%)</title><rect x="350" y="260" width="2" height="15" fill="rgb(254,208,50)"/><text x="353.00" y="270.50"></text></g><g><title>0x7fb711a28c6e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="352" y="260" width="2" height="15" fill="rgb(241,95,30)"/><text x="355.00" y="270.50"></text></g><g><title>0x7fb711a28c7b (libm-2.29.so) (3 samples, 0.54%)</title><rect x="354" y="260" width="6" height="15" fill="rgb(234,175,20)"/><text x="357.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (12 samples, 2.16%)</title><rect x="337" y="244" width="25" height="15" fill="rgb(221,204,12)"/><text x="340.00" y="254.50">e..</text></g><g><title>0x7fb711a28c7f (libm-2.29.so) (1 samples, 0.18%)</title><rect x="360" y="260" width="2" height="15" fill="rgb(206,151,43)"/><text x="363.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:38) (167 samples, 30.09%)</title><rect x="10" y="52" width="355" height="15" fill="rgb(253,194,0)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_50..</text></g><g><title>profile_skl (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:37) (167 samples, 30.09%)</title><rect x="10" y="68" width="355" height="15" fill="rgb(232,202,39)"/><text x="13.00" y="78.50">profile_skl (bench_BernoulliNB_default_b_cl_1000..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:29) (167 samples, 30.09%)</title><rect x="10" y="84" width="355" height="15" fill="rgb(248,55,34)"/><text x="13.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_10..</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:23) (162 samples, 29.19%)</title><rect x="20" y="100" width="345" height="15" fill="rgb(224,155,2)"/><text x="23.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1000_5..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (161 samples, 29.01%)</title><rect x="22" y="116" width="343" height="15" fill="rgb(212,17,41)"/><text x="25.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (161 samples, 29.01%)</title><rect x="22" y="132" width="343" height="15" fill="rgb(218,118,45)"/><text x="25.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (161 samples, 29.01%)</title><rect x="22" y="148" width="343" height="15" fill="rgb(218,9,15)"/><text x="25.00" y="158.50">predict_proba (sklearn/naive_bayes.py:115)</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 2.52%)</title><rect x="335" y="164" width="30" height="15" fill="rgb(218,26,52)"/><text x="338.00" y="174.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (14 samples, 2.52%)</title><rect x="335" y="180" width="30" height="15" fill="rgb(210,186,29)"/><text x="338.00" y="190.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (14 samples, 2.52%)</title><rect x="335" y="196" width="30" height="15" fill="rgb(223,219,49)"/><text x="338.00" y="206.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (14 samples, 2.52%)</title><rect x="335" y="212" width="30" height="15" fill="rgb(249,188,26)"/><text x="338.00" y="222.50">tr..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (13 samples, 2.34%)</title><rect x="337" y="228" width="28" height="15" fill="rgb(215,37,39)"/><text x="340.00" y="238.50">P..</text></g><g><title>npy_exp (npy_math_internal.h.src:469) (1 samples, 0.18%)</title><rect x="362" y="244" width="3" height="15" fill="rgb(219,92,0)"/><text x="365.00" y="254.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:1) (1 samples, 0.18%)</title><rect x="365" y="148" width="2" height="15" fill="rgb(234,229,0)"/><text x="368.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="365" y="164" width="2" height="15" fill="rgb(207,96,17)"/><text x="368.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="365" y="180" width="2" height="15" fill="rgb(237,33,31)"/><text x="368.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="365" y="196" width="2" height="15" fill="rgb(206,76,19)"/><text x="368.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="365" y="212" width="2" height="15" fill="rgb(224,169,11)"/><text x="368.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="365" y="228" width="2" height="15" fill="rgb(214,19,26)"/><text x="368.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.18%)</title><rect x="365" y="244" width="2" height="15" fill="rgb(220,46,35)"/><text x="368.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.18%)</title><rect x="365" y="260" width="2" height="15" fill="rgb(232,73,34)"/><text x="368.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="365" y="276" width="2" height="15" fill="rgb(254,139,52)"/><text x="368.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="365" y="292" width="2" height="15" fill="rgb(216,81,19)"/><text x="368.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="365" y="308" width="2" height="15" fill="rgb(250,207,3)"/><text x="368.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="365" y="324" width="2" height="15" fill="rgb(223,44,18)"/><text x="368.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="365" y="340" width="2" height="15" fill="rgb(227,52,21)"/><text x="368.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="365" y="356" width="2" height="15" fill="rgb(252,66,14)"/><text x="368.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:12) (1 samples, 0.18%)</title><rect x="365" y="372" width="2" height="15" fill="rgb(218,120,42)"/><text x="368.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="365" y="388" width="2" height="15" fill="rgb(240,135,9)"/><text x="368.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="365" y="404" width="2" height="15" fill="rgb(242,137,25)"/><text x="368.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="365" y="420" width="2" height="15" fill="rgb(239,2,39)"/><text x="368.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="365" y="436" width="2" height="15" fill="rgb(207,94,47)"/><text x="368.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="365" y="452" width="2" height="15" fill="rgb(210,84,14)"/><text x="368.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/nanfunctions.py:1422) (1 samples, 0.18%)</title><rect x="365" y="468" width="2" height="15" fill="rgb(220,150,24)"/><text x="368.00" y="478.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.18%)</title><rect x="367" y="916" width="2" height="15" fill="rgb(205,72,42)"/><text x="370.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.18%)</title><rect x="367" y="932" width="2" height="15" fill="rgb(220,205,27)"/><text x="370.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.18%)</title><rect x="367" y="948" width="2" height="15" fill="rgb(253,3,24)"/><text x="370.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.18%)</title><rect x="367" y="964" width="2" height="15" fill="rgb(250,140,10)"/><text x="370.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.18%)</title><rect x="367" y="980" width="2" height="15" fill="rgb(215,10,27)"/><text x="370.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.18%)</title><rect x="367" y="996" width="2" height="15" fill="rgb(225,26,6)"/><text x="370.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.18%)</title><rect x="367" y="1012" width="2" height="15" fill="rgb(240,190,49)"/><text x="370.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.18%)</title><rect x="367" y="1028" width="2" height="15" fill="rgb(209,131,38)"/><text x="370.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.18%)</title><rect x="367" y="1044" width="2" height="15" fill="rgb(239,48,54)"/><text x="370.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.36%)</title><rect x="367" y="852" width="4" height="15" fill="rgb(205,58,38)"/><text x="370.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.36%)</title><rect x="367" y="868" width="4" height="15" fill="rgb(252,190,26)"/><text x="370.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.36%)</title><rect x="367" y="884" width="4" height="15" fill="rgb(249,208,27)"/><text x="370.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.36%)</title><rect x="367" y="900" width="4" height="15" fill="rgb(208,203,19)"/><text x="370.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.18%)</title><rect x="369" y="916" width="2" height="15" fill="rgb(254,142,48)"/><text x="372.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.18%)</title><rect x="369" y="932" width="2" height="15" fill="rgb(206,192,40)"/><text x="372.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.18%)</title><rect x="369" y="948" width="2" height="15" fill="rgb(237,78,32)"/><text x="372.00" y="958.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.18%)</title><rect x="371" y="852" width="2" height="15" fill="rgb(238,31,46)"/><text x="374.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.18%)</title><rect x="371" y="868" width="2" height="15" fill="rgb(217,204,12)"/><text x="374.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.18%)</title><rect x="371" y="884" width="2" height="15" fill="rgb(242,134,31)"/><text x="374.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.18%)</title><rect x="371" y="900" width="2" height="15" fill="rgb(205,45,26)"/><text x="374.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.18%)</title><rect x="371" y="916" width="2" height="15" fill="rgb(211,217,9)"/><text x="374.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.18%)</title><rect x="371" y="932" width="2" height="15" fill="rgb(225,162,45)"/><text x="374.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.18%)</title><rect x="371" y="948" width="2" height="15" fill="rgb(218,84,1)"/><text x="374.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.18%)</title><rect x="371" y="964" width="2" height="15" fill="rgb(234,4,21)"/><text x="374.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.18%)</title><rect x="371" y="980" width="2" height="15" fill="rgb(238,9,34)"/><text x="374.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.18%)</title><rect x="371" y="996" width="2" height="15" fill="rgb(242,210,26)"/><text x="374.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.18%)</title><rect x="371" y="1012" width="2" height="15" fill="rgb(243,149,36)"/><text x="374.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.18%)</title><rect x="371" y="1028" width="2" height="15" fill="rgb(254,11,23)"/><text x="374.00" y="1038.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.18%)</title><rect x="373" y="884" width="2" height="15" fill="rgb(223,90,36)"/><text x="376.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.18%)</title><rect x="373" y="900" width="2" height="15" fill="rgb(225,41,6)"/><text x="376.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.18%)</title><rect x="373" y="916" width="2" height="15" fill="rgb(219,95,22)"/><text x="376.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.18%)</title><rect x="373" y="932" width="2" height="15" fill="rgb(236,93,42)"/><text x="376.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.18%)</title><rect x="373" y="948" width="2" height="15" fill="rgb(236,17,11)"/><text x="376.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:2) (5 samples, 0.90%)</title><rect x="367" y="148" width="10" height="15" fill="rgb(227,168,6)"/><text x="370.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="367" y="164" width="10" height="15" fill="rgb(226,172,34)"/><text x="370.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.90%)</title><rect x="367" y="180" width="10" height="15" fill="rgb(250,196,30)"/><text x="370.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="367" y="196" width="10" height="15" fill="rgb(252,87,25)"/><text x="370.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="367" y="212" width="10" height="15" fill="rgb(247,137,46)"/><text x="370.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="367" y="228" width="10" height="15" fill="rgb(227,186,9)"/><text x="370.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="367" y="244" width="10" height="15" fill="rgb(239,86,22)"/><text x="370.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="367" y="260" width="10" height="15" fill="rgb(248,130,20)"/><text x="370.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="367" y="276" width="10" height="15" fill="rgb(247,223,13)"/><text x="370.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.90%)</title><rect x="367" y="292" width="10" height="15" fill="rgb(234,32,5)"/><text x="370.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="367" y="308" width="10" height="15" fill="rgb(211,17,9)"/><text x="370.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="367" y="324" width="10" height="15" fill="rgb(219,109,9)"/><text x="370.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="367" y="340" width="10" height="15" fill="rgb(220,195,10)"/><text x="370.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="367" y="356" width="10" height="15" fill="rgb(214,162,22)"/><text x="370.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="367" y="372" width="10" height="15" fill="rgb(205,97,37)"/><text x="370.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 0.90%)</title><rect x="367" y="388" width="10" height="15" fill="rgb(229,20,15)"/><text x="370.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="367" y="404" width="10" height="15" fill="rgb(234,197,18)"/><text x="370.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="367" y="420" width="10" height="15" fill="rgb(244,125,46)"/><text x="370.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="367" y="436" width="10" height="15" fill="rgb(215,175,3)"/><text x="370.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="367" y="452" width="10" height="15" fill="rgb(228,127,8)"/><text x="370.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="367" y="468" width="10" height="15" fill="rgb(217,184,12)"/><text x="370.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 0.90%)</title><rect x="367" y="484" width="10" height="15" fill="rgb(221,15,53)"/><text x="370.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="367" y="500" width="10" height="15" fill="rgb(228,215,47)"/><text x="370.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="367" y="516" width="10" height="15" fill="rgb(212,195,4)"/><text x="370.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="367" y="532" width="10" height="15" fill="rgb(219,111,3)"/><text x="370.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="367" y="548" width="10" height="15" fill="rgb(254,7,44)"/><text x="370.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="367" y="564" width="10" height="15" fill="rgb(238,76,41)"/><text x="370.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 0.90%)</title><rect x="367" y="580" width="10" height="15" fill="rgb(206,90,54)"/><text x="370.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="367" y="596" width="10" height="15" fill="rgb(242,130,40)"/><text x="370.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.90%)</title><rect x="367" y="612" width="10" height="15" fill="rgb(219,161,34)"/><text x="370.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="367" y="628" width="10" height="15" fill="rgb(232,28,46)"/><text x="370.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="367" y="644" width="10" height="15" fill="rgb(245,40,11)"/><text x="370.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="367" y="660" width="10" height="15" fill="rgb(248,92,5)"/><text x="370.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="367" y="676" width="10" height="15" fill="rgb(214,191,15)"/><text x="370.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="367" y="692" width="10" height="15" fill="rgb(242,156,30)"/><text x="370.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="367" y="708" width="10" height="15" fill="rgb(240,152,51)"/><text x="370.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 0.90%)</title><rect x="367" y="724" width="10" height="15" fill="rgb(234,210,40)"/><text x="370.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="367" y="740" width="10" height="15" fill="rgb(221,171,47)"/><text x="370.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="367" y="756" width="10" height="15" fill="rgb(219,141,30)"/><text x="370.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="367" y="772" width="10" height="15" fill="rgb(243,154,38)"/><text x="370.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="367" y="788" width="10" height="15" fill="rgb(236,122,15)"/><text x="370.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="367" y="804" width="10" height="15" fill="rgb(222,183,3)"/><text x="370.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 0.90%)</title><rect x="367" y="820" width="10" height="15" fill="rgb(248,148,54)"/><text x="370.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 0.90%)</title><rect x="367" y="836" width="10" height="15" fill="rgb(223,171,10)"/><text x="370.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.36%)</title><rect x="373" y="852" width="4" height="15" fill="rgb(222,98,46)"/><text x="376.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.36%)</title><rect x="373" y="868" width="4" height="15" fill="rgb(220,136,29)"/><text x="376.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.18%)</title><rect x="375" y="884" width="2" height="15" fill="rgb(206,185,3)"/><text x="378.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.18%)</title><rect x="375" y="900" width="2" height="15" fill="rgb(219,170,42)"/><text x="378.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2581) (1 samples, 0.18%)</title><rect x="375" y="916" width="2" height="15" fill="rgb(222,116,29)"/><text x="378.00" y="926.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.18%)</title><rect x="375" y="932" width="2" height="15" fill="rgb(238,215,16)"/><text x="378.00" y="942.50"></text></g><g><title>_splitext (genericpath.py:134) (1 samples, 0.18%)</title><rect x="375" y="948" width="2" height="15" fill="rgb(206,193,52)"/><text x="378.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:4) (1 samples, 0.18%)</title><rect x="377" y="148" width="2" height="15" fill="rgb(210,151,15)"/><text x="380.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="377" y="164" width="2" height="15" fill="rgb(237,143,20)"/><text x="380.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.18%)</title><rect x="377" y="180" width="2" height="15" fill="rgb(206,91,26)"/><text x="380.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="377" y="196" width="2" height="15" fill="rgb(254,185,21)"/><text x="380.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="377" y="212" width="2" height="15" fill="rgb(241,206,9)"/><text x="380.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="377" y="228" width="2" height="15" fill="rgb(225,220,20)"/><text x="380.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="377" y="244" width="2" height="15" fill="rgb(230,132,12)"/><text x="380.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="377" y="260" width="2" height="15" fill="rgb(245,2,1)"/><text x="380.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="377" y="276" width="2" height="15" fill="rgb(234,6,13)"/><text x="380.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.18%)</title><rect x="377" y="292" width="2" height="15" fill="rgb(213,211,32)"/><text x="380.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="377" y="308" width="2" height="15" fill="rgb(233,45,38)"/><text x="380.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="377" y="324" width="2" height="15" fill="rgb(235,95,9)"/><text x="380.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="377" y="340" width="2" height="15" fill="rgb(225,3,50)"/><text x="380.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="377" y="356" width="2" height="15" fill="rgb(207,93,21)"/><text x="380.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="377" y="372" width="2" height="15" fill="rgb(237,44,31)"/><text x="380.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.18%)</title><rect x="377" y="388" width="2" height="15" fill="rgb(210,197,10)"/><text x="380.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="377" y="404" width="2" height="15" fill="rgb(237,215,8)"/><text x="380.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="377" y="420" width="2" height="15" fill="rgb(243,172,18)"/><text x="380.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="377" y="436" width="2" height="15" fill="rgb(214,197,43)"/><text x="380.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="377" y="452" width="2" height="15" fill="rgb(245,16,44)"/><text x="380.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="377" y="468" width="2" height="15" fill="rgb(217,164,13)"/><text x="380.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.18%)</title><rect x="377" y="484" width="2" height="15" fill="rgb(243,144,36)"/><text x="380.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="377" y="500" width="2" height="15" fill="rgb(205,92,32)"/><text x="380.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="377" y="516" width="2" height="15" fill="rgb(231,75,11)"/><text x="380.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="377" y="532" width="2" height="15" fill="rgb(226,157,32)"/><text x="380.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="377" y="548" width="2" height="15" fill="rgb(227,212,38)"/><text x="380.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="377" y="564" width="2" height="15" fill="rgb(249,229,52)"/><text x="380.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.18%)</title><rect x="377" y="580" width="2" height="15" fill="rgb(217,96,25)"/><text x="380.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="377" y="596" width="2" height="15" fill="rgb(234,144,24)"/><text x="380.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="377" y="612" width="2" height="15" fill="rgb(249,200,3)"/><text x="380.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="377" y="628" width="2" height="15" fill="rgb(238,220,13)"/><text x="380.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="377" y="644" width="2" height="15" fill="rgb(215,170,25)"/><text x="380.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="377" y="660" width="2" height="15" fill="rgb(227,204,38)"/><text x="380.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.18%)</title><rect x="377" y="676" width="2" height="15" fill="rgb(240,218,4)"/><text x="380.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="377" y="692" width="2" height="15" fill="rgb(235,148,26)"/><text x="380.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="377" y="708" width="2" height="15" fill="rgb(252,179,16)"/><text x="380.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="377" y="724" width="2" height="15" fill="rgb(235,40,20)"/><text x="380.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="377" y="740" width="2" height="15" fill="rgb(205,95,8)"/><text x="380.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="377" y="756" width="2" height="15" fill="rgb(251,97,25)"/><text x="380.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:2878) (1 samples, 0.18%)</title><rect x="377" y="772" width="2" height="15" fill="rgb(222,179,17)"/><text x="380.00" y="782.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.18%)</title><rect x="377" y="788" width="2" height="15" fill="rgb(210,34,0)"/><text x="380.00" y="798.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.18%)</title><rect x="379" y="340" width="3" height="15" fill="rgb(215,68,6)"/><text x="382.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="379" y="356" width="3" height="15" fill="rgb(206,192,28)"/><text x="382.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="379" y="372" width="3" height="15" fill="rgb(234,2,52)"/><text x="382.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="379" y="388" width="3" height="15" fill="rgb(223,74,2)"/><text x="382.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="379" y="404" width="3" height="15" fill="rgb(237,100,44)"/><text x="382.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="379" y="420" width="3" height="15" fill="rgb(223,175,7)"/><text x="382.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:6) (1 samples, 0.18%)</title><rect x="379" y="436" width="3" height="15" fill="rgb(248,181,47)"/><text x="382.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="379" y="452" width="3" height="15" fill="rgb(214,216,14)"/><text x="382.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="379" y="468" width="3" height="15" fill="rgb(239,24,33)"/><text x="382.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="379" y="484" width="3" height="15" fill="rgb(209,191,33)"/><text x="382.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="379" y="500" width="3" height="15" fill="rgb(236,199,50)"/><text x="382.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="379" y="516" width="3" height="15" fill="rgb(220,121,29)"/><text x="382.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py:23) (1 samples, 0.18%)</title><rect x="379" y="532" width="3" height="15" fill="rgb(231,129,5)"/><text x="382.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="379" y="548" width="3" height="15" fill="rgb(232,173,16)"/><text x="382.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="379" y="564" width="3" height="15" fill="rgb(242,42,27)"/><text x="382.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="379" y="580" width="3" height="15" fill="rgb(244,6,17)"/><text x="382.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="379" y="596" width="3" height="15" fill="rgb(243,126,11)"/><text x="382.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="379" y="612" width="3" height="15" fill="rgb(206,192,7)"/><text x="382.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py:88) (1 samples, 0.18%)</title><rect x="379" y="628" width="3" height="15" fill="rgb(244,6,47)"/><text x="382.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="379" y="644" width="3" height="15" fill="rgb(213,87,2)"/><text x="382.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.18%)</title><rect x="379" y="660" width="3" height="15" fill="rgb(217,122,3)"/><text x="382.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="379" y="676" width="3" height="15" fill="rgb(222,197,32)"/><text x="382.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="379" y="692" width="3" height="15" fill="rgb(212,100,6)"/><text x="382.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="379" y="708" width="3" height="15" fill="rgb(251,111,18)"/><text x="382.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="379" y="724" width="3" height="15" fill="rgb(211,184,42)"/><text x="382.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.18%)</title><rect x="379" y="740" width="3" height="15" fill="rgb(214,57,0)"/><text x="382.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.18%)</title><rect x="379" y="756" width="3" height="15" fill="rgb(208,119,1)"/><text x="382.00" y="766.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.18%)</title><rect x="379" y="772" width="3" height="15" fill="rgb(208,192,44)"/><text x="382.00" y="782.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.18%)</title><rect x="382" y="628" width="2" height="15" fill="rgb(226,19,42)"/><text x="385.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="382" y="644" width="2" height="15" fill="rgb(238,229,3)"/><text x="385.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="382" y="660" width="2" height="15" fill="rgb(229,126,54)"/><text x="385.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="382" y="676" width="2" height="15" fill="rgb(237,134,18)"/><text x="385.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="382" y="692" width="2" height="15" fill="rgb(233,14,11)"/><text x="385.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="382" y="708" width="2" height="15" fill="rgb(248,59,43)"/><text x="385.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.18%)</title><rect x="382" y="724" width="2" height="15" fill="rgb(208,221,16)"/><text x="385.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="382" y="740" width="2" height="15" fill="rgb(230,171,33)"/><text x="385.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="382" y="756" width="2" height="15" fill="rgb(231,121,4)"/><text x="385.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="382" y="772" width="2" height="15" fill="rgb(217,32,7)"/><text x="385.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="382" y="788" width="2" height="15" fill="rgb(236,122,24)"/><text x="385.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="382" y="804" width="2" height="15" fill="rgb(253,168,2)"/><text x="385.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.18%)</title><rect x="382" y="820" width="2" height="15" fill="rgb(213,217,24)"/><text x="385.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="382" y="836" width="2" height="15" fill="rgb(213,180,41)"/><text x="385.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="382" y="852" width="2" height="15" fill="rgb(253,55,4)"/><text x="385.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="382" y="868" width="2" height="15" fill="rgb(216,73,49)"/><text x="385.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.18%)</title><rect x="382" y="884" width="2" height="15" fill="rgb(235,185,33)"/><text x="385.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="382" y="900" width="2" height="15" fill="rgb(213,53,13)"/><text x="385.00" y="910.50"></text></g><g><title>0x7fb6ea100403 (?) (1 samples, 0.18%)</title><rect x="382" y="916" width="2" height="15" fill="rgb(244,31,13)"/><text x="385.00" y="926.50"></text></g><g><title>0x7fb6ea102b8a (?) (1 samples, 0.18%)</title><rect x="382" y="932" width="2" height="15" fill="rgb(214,160,44)"/><text x="385.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="382" y="948" width="2" height="15" fill="rgb(242,122,44)"/><text x="385.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="382" y="964" width="2" height="15" fill="rgb(205,131,45)"/><text x="385.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="382" y="980" width="2" height="15" fill="rgb(212,51,38)"/><text x="385.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.18%)</title><rect x="382" y="996" width="2" height="15" fill="rgb(247,137,51)"/><text x="385.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="382" y="1012" width="2" height="15" fill="rgb(206,185,16)"/><text x="385.00" y="1022.50"></text></g><g><title>0x7fb6e8749d78 (?) (1 samples, 0.18%)</title><rect x="382" y="1028" width="2" height="15" fill="rgb(247,116,11)"/><text x="385.00" y="1038.50"></text></g><g><title>0x7fb6e874ec2a (?) (1 samples, 0.18%)</title><rect x="382" y="1044" width="2" height="15" fill="rgb(222,106,17)"/><text x="385.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="382" y="1060" width="2" height="15" fill="rgb(245,200,2)"/><text x="385.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="382" y="1076" width="2" height="15" fill="rgb(249,229,42)"/><text x="385.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="382" y="1092" width="2" height="15" fill="rgb(230,68,28)"/><text x="385.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="382" y="1108" width="2" height="15" fill="rgb(244,60,7)"/><text x="385.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="382" y="1124" width="2" height="15" fill="rgb(233,149,51)"/><text x="385.00" y="1134.50"></text></g><g><title>&lt;module&gt; (dateutil/parser/__init__.py:2) (1 samples, 0.18%)</title><rect x="382" y="1140" width="2" height="15" fill="rgb(206,107,1)"/><text x="385.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="382" y="1156" width="2" height="15" fill="rgb(210,80,18)"/><text x="385.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="382" y="1172" width="2" height="15" fill="rgb(241,38,37)"/><text x="385.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="382" y="1188" width="2" height="15" fill="rgb(228,204,52)"/><text x="385.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.18%)</title><rect x="382" y="1204" width="2" height="15" fill="rgb(214,126,5)"/><text x="385.00" y="1214.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.18%)</title><rect x="382" y="1220" width="2" height="15" fill="rgb(240,162,6)"/><text x="385.00" y="1230.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.18%)</title><rect x="382" y="1236" width="2" height="15" fill="rgb(235,68,5)"/><text x="385.00" y="1246.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.18%)</title><rect x="384" y="1780" width="2" height="15" fill="rgb(250,165,1)"/><text x="387.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="384" y="1796" width="2" height="15" fill="rgb(231,212,30)"/><text x="387.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="384" y="1812" width="2" height="15" fill="rgb(208,116,24)"/><text x="387.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="384" y="1828" width="2" height="15" fill="rgb(224,5,12)"/><text x="387.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="384" y="1844" width="2" height="15" fill="rgb(251,100,10)"/><text x="387.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="384" y="1860" width="2" height="15" fill="rgb(226,107,47)"/><text x="387.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:600) (1 samples, 0.18%)</title><rect x="384" y="1876" width="2" height="15" fill="rgb(209,31,51)"/><text x="387.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.18%)</title><rect x="384" y="1892" width="2" height="15" fill="rgb(225,208,39)"/><text x="387.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.18%)</title><rect x="384" y="1908" width="2" height="15" fill="rgb(253,194,21)"/><text x="387.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1250) (1 samples, 0.18%)</title><rect x="384" y="1924" width="2" height="15" fill="rgb(215,38,5)"/><text x="387.00" y="1934.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:1249) (1 samples, 0.18%)</title><rect x="386" y="1876" width="2" height="15" fill="rgb(243,59,1)"/><text x="389.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1599) (1 samples, 0.18%)</title><rect x="386" y="1892" width="2" height="15" fill="rgb(206,84,5)"/><text x="389.00" y="1902.50"></text></g><g><title>__init__ (matplotlib/artist.py:1211) (1 samples, 0.18%)</title><rect x="386" y="1908" width="2" height="15" fill="rgb(205,134,12)"/><text x="389.00" y="1918.50"></text></g><g><title>get_aliases (matplotlib/artist.py:1224) (1 samples, 0.18%)</title><rect x="386" y="1924" width="2" height="15" fill="rgb(225,179,46)"/><text x="389.00" y="1934.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/artist.py:1225) (1 samples, 0.18%)</title><rect x="386" y="1940" width="2" height="15" fill="rgb(254,177,38)"/><text x="389.00" y="1950.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.18%)</title><rect x="386" y="1956" width="2" height="15" fill="rgb(225,106,30)"/><text x="389.00" y="1966.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (3 samples, 0.54%)</title><rect x="384" y="1492" width="6" height="15" fill="rgb(217,94,0)"/><text x="387.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="384" y="1508" width="6" height="15" fill="rgb(238,101,52)"/><text x="387.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="384" y="1524" width="6" height="15" fill="rgb(227,123,28)"/><text x="387.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="384" y="1540" width="6" height="15" fill="rgb(243,94,21)"/><text x="387.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="384" y="1556" width="6" height="15" fill="rgb(250,134,46)"/><text x="387.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="384" y="1572" width="6" height="15" fill="rgb(219,126,22)"/><text x="387.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (3 samples, 0.54%)</title><rect x="384" y="1588" width="6" height="15" fill="rgb(219,77,31)"/><text x="387.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="384" y="1604" width="6" height="15" fill="rgb(232,171,43)"/><text x="387.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="384" y="1620" width="6" height="15" fill="rgb(245,60,46)"/><text x="387.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="384" y="1636" width="6" height="15" fill="rgb(214,200,52)"/><text x="387.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="384" y="1652" width="6" height="15" fill="rgb(251,32,32)"/><text x="387.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="384" y="1668" width="6" height="15" fill="rgb(235,175,54)"/><text x="387.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (3 samples, 0.54%)</title><rect x="384" y="1684" width="6" height="15" fill="rgb(234,73,49)"/><text x="387.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.54%)</title><rect x="384" y="1700" width="6" height="15" fill="rgb(238,14,42)"/><text x="387.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.54%)</title><rect x="384" y="1716" width="6" height="15" fill="rgb(218,152,27)"/><text x="387.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.54%)</title><rect x="384" y="1732" width="6" height="15" fill="rgb(218,102,4)"/><text x="387.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.54%)</title><rect x="384" y="1748" width="6" height="15" fill="rgb(245,83,10)"/><text x="387.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.54%)</title><rect x="384" y="1764" width="6" height="15" fill="rgb(250,2,1)"/><text x="387.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (2 samples, 0.36%)</title><rect x="386" y="1780" width="4" height="15" fill="rgb(215,92,41)"/><text x="389.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.36%)</title><rect x="386" y="1796" width="4" height="15" fill="rgb(222,130,46)"/><text x="389.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.36%)</title><rect x="386" y="1812" width="4" height="15" fill="rgb(237,27,24)"/><text x="389.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.36%)</title><rect x="386" y="1828" width="4" height="15" fill="rgb(246,10,29)"/><text x="389.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.36%)</title><rect x="386" y="1844" width="4" height="15" fill="rgb(208,169,46)"/><text x="389.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.36%)</title><rect x="386" y="1860" width="4" height="15" fill="rgb(207,23,13)"/><text x="389.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:14) (1 samples, 0.18%)</title><rect x="388" y="1876" width="2" height="15" fill="rgb(211,22,50)"/><text x="391.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="388" y="1892" width="2" height="15" fill="rgb(210,120,21)"/><text x="391.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="388" y="1908" width="2" height="15" fill="rgb(231,28,36)"/><text x="391.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="388" y="1924" width="2" height="15" fill="rgb(223,62,20)"/><text x="391.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="388" y="1940" width="2" height="15" fill="rgb(247,43,51)"/><text x="391.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="388" y="1956" width="2" height="15" fill="rgb(209,62,14)"/><text x="391.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py:1353) (1 samples, 0.18%)</title><rect x="388" y="1972" width="2" height="15" fill="rgb(233,20,54)"/><text x="391.00" y="1982.50"></text></g><g><title>json_load (matplotlib/font_manager.py:925) (1 samples, 0.18%)</title><rect x="388" y="1988" width="2" height="15" fill="rgb(222,175,34)"/><text x="391.00" y="1998.50"></text></g><g><title>load (json/__init__.py:296) (1 samples, 0.18%)</title><rect x="388" y="2004" width="2" height="15" fill="rgb(252,22,24)"/><text x="391.00" y="2014.50"></text></g><g><title>loads (json/__init__.py:361) (1 samples, 0.18%)</title><rect x="388" y="2020" width="2" height="15" fill="rgb(247,159,33)"/><text x="391.00" y="2030.50"></text></g><g><title>decode (json/decoder.py:337) (1 samples, 0.18%)</title><rect x="388" y="2036" width="2" height="15" fill="rgb(206,150,30)"/><text x="391.00" y="2046.50"></text></g><g><title>raw_decode (json/decoder.py:353) (1 samples, 0.18%)</title><rect x="388" y="2052" width="2" height="15" fill="rgb(245,29,52)"/><text x="391.00" y="2062.50"></text></g><g><title>scanner_call (_json.c:1180) (1 samples, 0.18%)</title><rect x="388" y="2068" width="2" height="15" fill="rgb(249,187,17)"/><text x="391.00" y="2078.50"></text></g><g><title>scan_once_unicode (_json.c:1092) (1 samples, 0.18%)</title><rect x="388" y="2084" width="2" height="15" fill="rgb(226,137,15)"/><text x="391.00" y="2094.50"></text></g><g><title>_parse_object_unicode (_json.c:772) (1 samples, 0.18%)</title><rect x="388" y="2100" width="2" height="15" fill="rgb(245,105,37)"/><text x="391.00" y="2110.50"></text></g><g><title>scan_once_unicode (_json.c:1100) (1 samples, 0.18%)</title><rect x="388" y="2116" width="2" height="15" fill="rgb(242,79,49)"/><text x="391.00" y="2126.50"></text></g><g><title>_parse_array_unicode (_json.c:870) (1 samples, 0.18%)</title><rect x="388" y="2132" width="2" height="15" fill="rgb(207,138,31)"/><text x="391.00" y="2142.50"></text></g><g><title>scan_once_unicode (_json.c:1092) (1 samples, 0.18%)</title><rect x="388" y="2148" width="2" height="15" fill="rgb(253,45,43)"/><text x="391.00" y="2158.50"></text></g><g><title>_parse_object_unicode (_json.c:822) (1 samples, 0.18%)</title><rect x="388" y="2164" width="2" height="15" fill="rgb(239,172,50)"/><text x="391.00" y="2174.50"></text></g><g><title>_json_decode (matplotlib/font_manager.py:894) (1 samples, 0.18%)</title><rect x="388" y="2180" width="2" height="15" fill="rgb(237,137,10)"/><text x="391.00" y="2190.50"></text></g><g><title>isabs (posixpath.py:67) (1 samples, 0.18%)</title><rect x="388" y="2196" width="2" height="15" fill="rgb(241,108,29)"/><text x="391.00" y="2206.50"></text></g><g><title>_get_sep (posixpath.py:42) (1 samples, 0.18%)</title><rect x="388" y="2212" width="2" height="15" fill="rgb(252,87,3)"/><text x="391.00" y="2222.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (4 samples, 0.72%)</title><rect x="384" y="1012" width="8" height="15" fill="rgb(244,217,1)"/><text x="387.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.72%)</title><rect x="384" y="1028" width="8" height="15" fill="rgb(248,207,13)"/><text x="387.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.72%)</title><rect x="384" y="1044" width="8" height="15" fill="rgb(219,199,32)"/><text x="387.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.72%)</title><rect x="384" y="1060" width="8" height="15" fill="rgb(228,201,41)"/><text x="387.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.72%)</title><rect x="384" y="1076" width="8" height="15" fill="rgb(244,99,50)"/><text x="387.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="384" y="1092" width="8" height="15" fill="rgb(252,60,28)"/><text x="387.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (4 samples, 0.72%)</title><rect x="384" y="1108" width="8" height="15" fill="rgb(235,215,44)"/><text x="387.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.72%)</title><rect x="384" y="1124" width="8" height="15" fill="rgb(244,84,28)"/><text x="387.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.72%)</title><rect x="384" y="1140" width="8" height="15" fill="rgb(207,94,27)"/><text x="387.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.72%)</title><rect x="384" y="1156" width="8" height="15" fill="rgb(225,138,31)"/><text x="387.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.72%)</title><rect x="384" y="1172" width="8" height="15" fill="rgb(210,115,20)"/><text x="387.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="384" y="1188" width="8" height="15" fill="rgb(209,80,12)"/><text x="387.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (4 samples, 0.72%)</title><rect x="384" y="1204" width="8" height="15" fill="rgb(229,86,30)"/><text x="387.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.72%)</title><rect x="384" y="1220" width="8" height="15" fill="rgb(227,160,42)"/><text x="387.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.72%)</title><rect x="384" y="1236" width="8" height="15" fill="rgb(247,207,31)"/><text x="387.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.72%)</title><rect x="384" y="1252" width="8" height="15" fill="rgb(205,123,7)"/><text x="387.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.72%)</title><rect x="384" y="1268" width="8" height="15" fill="rgb(231,170,2)"/><text x="387.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="384" y="1284" width="8" height="15" fill="rgb(253,137,3)"/><text x="387.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (4 samples, 0.72%)</title><rect x="384" y="1300" width="8" height="15" fill="rgb(220,111,52)"/><text x="387.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.72%)</title><rect x="384" y="1316" width="8" height="15" fill="rgb(244,187,35)"/><text x="387.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.72%)</title><rect x="384" y="1332" width="8" height="15" fill="rgb(235,165,1)"/><text x="387.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.72%)</title><rect x="384" y="1348" width="8" height="15" fill="rgb(246,50,28)"/><text x="387.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.72%)</title><rect x="384" y="1364" width="8" height="15" fill="rgb(219,223,37)"/><text x="387.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="384" y="1380" width="8" height="15" fill="rgb(205,118,5)"/><text x="387.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (4 samples, 0.72%)</title><rect x="384" y="1396" width="8" height="15" fill="rgb(227,157,52)"/><text x="387.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.72%)</title><rect x="384" y="1412" width="8" height="15" fill="rgb(215,92,18)"/><text x="387.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.72%)</title><rect x="384" y="1428" width="8" height="15" fill="rgb(239,217,8)"/><text x="387.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.72%)</title><rect x="384" y="1444" width="8" height="15" fill="rgb(213,46,16)"/><text x="387.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.72%)</title><rect x="384" y="1460" width="8" height="15" fill="rgb(208,15,49)"/><text x="387.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="384" y="1476" width="8" height="15" fill="rgb(237,39,5)"/><text x="387.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.18%)</title><rect x="390" y="1492" width="2" height="15" fill="rgb(250,42,27)"/><text x="393.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="390" y="1508" width="2" height="15" fill="rgb(213,149,7)"/><text x="393.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="390" y="1524" width="2" height="15" fill="rgb(248,84,19)"/><text x="393.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="390" y="1540" width="2" height="15" fill="rgb(238,11,52)"/><text x="393.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="390" y="1556" width="2" height="15" fill="rgb(217,90,28)"/><text x="393.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="390" y="1572" width="2" height="15" fill="rgb(239,182,35)"/><text x="393.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py:13) (1 samples, 0.18%)</title><rect x="390" y="1588" width="2" height="15" fill="rgb(254,149,9)"/><text x="393.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="390" y="1604" width="2" height="15" fill="rgb(235,172,32)"/><text x="393.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="390" y="1620" width="2" height="15" fill="rgb(211,132,37)"/><text x="393.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="390" y="1636" width="2" height="15" fill="rgb(238,64,54)"/><text x="393.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="390" y="1652" width="2" height="15" fill="rgb(250,229,43)"/><text x="393.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="390" y="1668" width="2" height="15" fill="rgb(235,128,46)"/><text x="393.00" y="1678.50"></text></g><g><title>&lt;module&gt; (matplotlib/path.py:18) (1 samples, 0.18%)</title><rect x="390" y="1684" width="2" height="15" fill="rgb(223,29,52)"/><text x="393.00" y="1694.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1021) (1 samples, 0.18%)</title><rect x="390" y="1700" width="2" height="15" fill="rgb(230,78,46)"/><text x="393.00" y="1710.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (6 samples, 1.08%)</title><rect x="382" y="436" width="12" height="15" fill="rgb(254,166,8)"/><text x="385.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.08%)</title><rect x="382" y="452" width="12" height="15" fill="rgb(238,19,0)"/><text x="385.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.08%)</title><rect x="382" y="468" width="12" height="15" fill="rgb(253,212,24)"/><text x="385.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.08%)</title><rect x="382" y="484" width="12" height="15" fill="rgb(206,53,37)"/><text x="385.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.08%)</title><rect x="382" y="500" width="12" height="15" fill="rgb(242,44,16)"/><text x="385.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.08%)</title><rect x="382" y="516" width="12" height="15" fill="rgb(253,100,14)"/><text x="385.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (6 samples, 1.08%)</title><rect x="382" y="532" width="12" height="15" fill="rgb(232,54,5)"/><text x="385.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.08%)</title><rect x="382" y="548" width="12" height="15" fill="rgb(252,117,7)"/><text x="385.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.08%)</title><rect x="382" y="564" width="12" height="15" fill="rgb(222,2,49)"/><text x="385.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.08%)</title><rect x="382" y="580" width="12" height="15" fill="rgb(216,31,52)"/><text x="385.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.08%)</title><rect x="382" y="596" width="12" height="15" fill="rgb(209,94,45)"/><text x="385.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.08%)</title><rect x="382" y="612" width="12" height="15" fill="rgb(247,106,42)"/><text x="385.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (5 samples, 0.90%)</title><rect x="384" y="628" width="10" height="15" fill="rgb(239,141,51)"/><text x="387.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="384" y="644" width="10" height="15" fill="rgb(223,122,1)"/><text x="387.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="384" y="660" width="10" height="15" fill="rgb(246,64,41)"/><text x="387.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="384" y="676" width="10" height="15" fill="rgb(213,67,18)"/><text x="387.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="384" y="692" width="10" height="15" fill="rgb(242,213,13)"/><text x="387.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="384" y="708" width="10" height="15" fill="rgb(239,87,24)"/><text x="387.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (5 samples, 0.90%)</title><rect x="384" y="724" width="10" height="15" fill="rgb(228,1,11)"/><text x="387.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="384" y="740" width="10" height="15" fill="rgb(207,94,9)"/><text x="387.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="384" y="756" width="10" height="15" fill="rgb(234,216,7)"/><text x="387.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="384" y="772" width="10" height="15" fill="rgb(253,111,15)"/><text x="387.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="384" y="788" width="10" height="15" fill="rgb(222,187,13)"/><text x="387.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="384" y="804" width="10" height="15" fill="rgb(242,59,51)"/><text x="387.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (5 samples, 0.90%)</title><rect x="384" y="820" width="10" height="15" fill="rgb(251,155,19)"/><text x="387.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="384" y="836" width="10" height="15" fill="rgb(231,113,16)"/><text x="387.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="384" y="852" width="10" height="15" fill="rgb(209,204,22)"/><text x="387.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="384" y="868" width="10" height="15" fill="rgb(248,77,10)"/><text x="387.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="384" y="884" width="10" height="15" fill="rgb(233,109,34)"/><text x="387.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="384" y="900" width="10" height="15" fill="rgb(228,26,51)"/><text x="387.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (5 samples, 0.90%)</title><rect x="384" y="916" width="10" height="15" fill="rgb(214,211,40)"/><text x="387.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="384" y="932" width="10" height="15" fill="rgb(247,141,21)"/><text x="387.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="384" y="948" width="10" height="15" fill="rgb(227,72,43)"/><text x="387.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="384" y="964" width="10" height="15" fill="rgb(241,85,43)"/><text x="387.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="384" y="980" width="10" height="15" fill="rgb(218,80,26)"/><text x="387.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="384" y="996" width="10" height="15" fill="rgb(241,68,0)"/><text x="387.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.18%)</title><rect x="392" y="1012" width="2" height="15" fill="rgb(207,226,10)"/><text x="395.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="392" y="1028" width="2" height="15" fill="rgb(252,110,27)"/><text x="395.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="392" y="1044" width="2" height="15" fill="rgb(240,41,35)"/><text x="395.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="392" y="1060" width="2" height="15" fill="rgb(223,147,17)"/><text x="395.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="392" y="1076" width="2" height="15" fill="rgb(225,12,35)"/><text x="395.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="392" y="1092" width="2" height="15" fill="rgb(215,158,42)"/><text x="395.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.18%)</title><rect x="392" y="1108" width="2" height="15" fill="rgb(234,74,53)"/><text x="395.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="392" y="1124" width="2" height="15" fill="rgb(246,219,11)"/><text x="395.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="392" y="1140" width="2" height="15" fill="rgb(228,13,48)"/><text x="395.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="392" y="1156" width="2" height="15" fill="rgb(206,76,7)"/><text x="395.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="392" y="1172" width="2" height="15" fill="rgb(237,16,4)"/><text x="395.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="392" y="1188" width="2" height="15" fill="rgb(216,17,49)"/><text x="395.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.18%)</title><rect x="392" y="1204" width="2" height="15" fill="rgb(249,90,20)"/><text x="395.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="392" y="1220" width="2" height="15" fill="rgb(241,131,15)"/><text x="395.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="392" y="1236" width="2" height="15" fill="rgb(225,53,24)"/><text x="395.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="392" y="1252" width="2" height="15" fill="rgb(234,211,40)"/><text x="395.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="392" y="1268" width="2" height="15" fill="rgb(221,26,51)"/><text x="395.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="392" y="1284" width="2" height="15" fill="rgb(242,201,3)"/><text x="395.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (1 samples, 0.18%)</title><rect x="392" y="1300" width="2" height="15" fill="rgb(245,191,14)"/><text x="395.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="392" y="1316" width="2" height="15" fill="rgb(206,55,20)"/><text x="395.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="392" y="1332" width="2" height="15" fill="rgb(227,0,13)"/><text x="395.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="392" y="1348" width="2" height="15" fill="rgb(227,36,2)"/><text x="395.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="392" y="1364" width="2" height="15" fill="rgb(218,68,40)"/><text x="395.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="392" y="1380" width="2" height="15" fill="rgb(215,94,50)"/><text x="395.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:51) (1 samples, 0.18%)</title><rect x="392" y="1396" width="2" height="15" fill="rgb(234,123,34)"/><text x="395.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="392" y="1412" width="2" height="15" fill="rgb(223,30,25)"/><text x="395.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="392" y="1428" width="2" height="15" fill="rgb(206,18,41)"/><text x="395.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="392" y="1444" width="2" height="15" fill="rgb(219,59,23)"/><text x="395.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="392" y="1460" width="2" height="15" fill="rgb(224,140,11)"/><text x="395.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="392" y="1476" width="2" height="15" fill="rgb(242,89,1)"/><text x="395.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/multi.py:136) (1 samples, 0.18%)</title><rect x="392" y="1492" width="2" height="15" fill="rgb(221,227,49)"/><text x="395.00" y="1502.50"></text></g><g><title>MultiIndex (pandas/core/indexes/multi.py:3329) (1 samples, 0.18%)</title><rect x="392" y="1508" width="2" height="15" fill="rgb(241,167,32)"/><text x="395.00" y="1518.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.18%)</title><rect x="392" y="1524" width="2" height="15" fill="rgb(236,44,21)"/><text x="395.00" y="1534.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.18%)</title><rect x="392" y="1540" width="2" height="15" fill="rgb(229,8,25)"/><text x="395.00" y="1550.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.18%)</title><rect x="392" y="1556" width="2" height="15" fill="rgb(227,89,5)"/><text x="395.00" y="1566.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.18%)</title><rect x="392" y="1572" width="2" height="15" fill="rgb(226,128,31)"/><text x="395.00" y="1582.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="392" y="1588" width="2" height="15" fill="rgb(220,33,10)"/><text x="395.00" y="1598.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.18%)</title><rect x="394" y="1108" width="2" height="15" fill="rgb(253,173,37)"/><text x="397.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="394" y="1124" width="2" height="15" fill="rgb(236,81,25)"/><text x="397.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="394" y="1140" width="2" height="15" fill="rgb(237,205,6)"/><text x="397.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="394" y="1156" width="2" height="15" fill="rgb(230,17,52)"/><text x="397.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="394" y="1172" width="2" height="15" fill="rgb(233,15,38)"/><text x="397.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="394" y="1188" width="2" height="15" fill="rgb(211,107,0)"/><text x="397.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.18%)</title><rect x="394" y="1204" width="2" height="15" fill="rgb(228,149,4)"/><text x="397.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="394" y="1220" width="2" height="15" fill="rgb(240,2,11)"/><text x="397.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="394" y="1236" width="2" height="15" fill="rgb(211,177,6)"/><text x="397.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="394" y="1252" width="2" height="15" fill="rgb(252,82,32)"/><text x="397.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="394" y="1268" width="2" height="15" fill="rgb(231,229,53)"/><text x="397.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="394" y="1284" width="2" height="15" fill="rgb(211,227,38)"/><text x="397.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.18%)</title><rect x="394" y="1300" width="2" height="15" fill="rgb(235,107,35)"/><text x="397.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.18%)</title><rect x="394" y="1316" width="2" height="15" fill="rgb(250,198,52)"/><text x="397.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.18%)</title><rect x="394" y="1332" width="2" height="15" fill="rgb(224,165,11)"/><text x="397.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.18%)</title><rect x="394" y="1348" width="2" height="15" fill="rgb(250,46,3)"/><text x="397.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.18%)</title><rect x="394" y="1364" width="2" height="15" fill="rgb(234,54,41)"/><text x="397.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.18%)</title><rect x="394" y="1380" width="2" height="15" fill="rgb(233,160,22)"/><text x="397.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.18%)</title><rect x="394" y="1396" width="2" height="15" fill="rgb(216,42,25)"/><text x="397.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.18%)</title><rect x="394" y="1412" width="2" height="15" fill="rgb(211,182,39)"/><text x="397.00" y="1422.50"></text></g><g><title>_compile (re.py:274) (1 samples, 0.18%)</title><rect x="394" y="1428" width="2" height="15" fill="rgb(237,206,2)"/><text x="397.00" y="1438.50"></text></g><g><title>__get__ (types.py:169) (1 samples, 0.18%)</title><rect x="394" y="1444" width="2" height="15" fill="rgb(242,36,51)"/><text x="397.00" y="1454.50"></text></g><g><title>root (&lt;template&gt;:119) (1 samples, 0.18%)</title><rect x="396" y="1572" width="3" height="15" fill="rgb(213,66,27)"/><text x="399.00" y="1582.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py:212) (1 samples, 0.18%)</title><rect x="396" y="1588" width="3" height="15" fill="rgb(252,62,0)"/><text x="399.00" y="1598.50"></text></g><g><title>root (&lt;template&gt;:25) (1 samples, 0.18%)</title><rect x="399" y="1572" width="2" height="15" fill="rgb(249,119,51)"/><text x="402.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.18%)</title><rect x="399" y="1588" width="2" height="15" fill="rgb(251,146,17)"/><text x="402.00" y="1598.50"></text></g><g><title>build_doc_url (skl2onnx/algebra/automation.py:222) (1 samples, 0.18%)</title><rect x="399" y="1604" width="2" height="15" fill="rgb(251,163,14)"/><text x="402.00" y="1614.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.18%)</title><rect x="401" y="1572" width="2" height="15" fill="rgb(220,90,15)"/><text x="404.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.18%)</title><rect x="401" y="1588" width="2" height="15" fill="rgb(240,181,50)"/><text x="404.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.18%)</title><rect x="401" y="1604" width="2" height="15" fill="rgb(249,78,3)"/><text x="404.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.18%)</title><rect x="401" y="1620" width="2" height="15" fill="rgb(206,173,8)"/><text x="404.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.18%)</title><rect x="401" y="1636" width="2" height="15" fill="rgb(231,229,34)"/><text x="404.00" y="1646.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.18%)</title><rect x="401" y="1652" width="2" height="15" fill="rgb(251,52,32)"/><text x="404.00" y="1662.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.18%)</title><rect x="401" y="1668" width="2" height="15" fill="rgb(207,117,6)"/><text x="404.00" y="1678.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:4) (19 samples, 3.42%)</title><rect x="365" y="52" width="40" height="15" fill="rgb(208,56,42)"/><text x="368.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (19 samples, 3.42%)</title><rect x="365" y="68" width="40" height="15" fill="rgb(218,3,32)"/><text x="368.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (19 samples, 3.42%)</title><rect x="365" y="84" width="40" height="15" fill="rgb(220,209,29)"/><text x="368.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (19 samples, 3.42%)</title><rect x="365" y="100" width="40" height="15" fill="rgb(207,136,14)"/><text x="368.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (19 samples, 3.42%)</title><rect x="365" y="116" width="40" height="15" fill="rgb(229,114,15)"/><text x="368.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (19 samples, 3.42%)</title><rect x="365" y="132" width="40" height="15" fill="rgb(225,49,45)"/><text x="368.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py:7) (12 samples, 2.16%)</title><rect x="379" y="148" width="26" height="15" fill="rgb(221,153,22)"/><text x="382.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 2.16%)</title><rect x="379" y="164" width="26" height="15" fill="rgb(241,167,19)"/><text x="382.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 2.16%)</title><rect x="379" y="180" width="26" height="15" fill="rgb(220,90,22)"/><text x="382.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 2.16%)</title><rect x="379" y="196" width="26" height="15" fill="rgb(253,31,35)"/><text x="382.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 2.16%)</title><rect x="379" y="212" width="26" height="15" fill="rgb(221,220,15)"/><text x="382.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 2.16%)</title><rect x="379" y="228" width="26" height="15" fill="rgb(218,124,8)"/><text x="382.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (12 samples, 2.16%)</title><rect x="379" y="244" width="26" height="15" fill="rgb(212,205,2)"/><text x="382.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 2.16%)</title><rect x="379" y="260" width="26" height="15" fill="rgb(222,128,9)"/><text x="382.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 2.16%)</title><rect x="379" y="276" width="26" height="15" fill="rgb(222,38,5)"/><text x="382.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 2.16%)</title><rect x="379" y="292" width="26" height="15" fill="rgb(207,187,14)"/><text x="382.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 2.16%)</title><rect x="379" y="308" width="26" height="15" fill="rgb(235,50,45)"/><text x="382.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 2.16%)</title><rect x="379" y="324" width="26" height="15" fill="rgb(248,82,37)"/><text x="382.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (11 samples, 1.98%)</title><rect x="382" y="340" width="23" height="15" fill="rgb(213,95,32)"/><text x="385.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 1.98%)</title><rect x="382" y="356" width="23" height="15" fill="rgb(239,103,13)"/><text x="385.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 1.98%)</title><rect x="382" y="372" width="23" height="15" fill="rgb(216,160,32)"/><text x="385.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 1.98%)</title><rect x="382" y="388" width="23" height="15" fill="rgb(209,91,36)"/><text x="385.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 1.98%)</title><rect x="382" y="404" width="23" height="15" fill="rgb(211,179,5)"/><text x="385.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 1.98%)</title><rect x="382" y="420" width="23" height="15" fill="rgb(213,204,26)"/><text x="385.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 0.90%)</title><rect x="394" y="436" width="11" height="15" fill="rgb(230,31,46)"/><text x="397.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="394" y="452" width="11" height="15" fill="rgb(241,5,9)"/><text x="397.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.90%)</title><rect x="394" y="468" width="11" height="15" fill="rgb(247,158,9)"/><text x="397.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="394" y="484" width="11" height="15" fill="rgb(242,91,2)"/><text x="397.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="394" y="500" width="11" height="15" fill="rgb(239,10,9)"/><text x="397.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="394" y="516" width="11" height="15" fill="rgb(229,155,54)"/><text x="397.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="394" y="532" width="11" height="15" fill="rgb(244,159,47)"/><text x="397.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="394" y="548" width="11" height="15" fill="rgb(214,16,29)"/><text x="397.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="394" y="564" width="11" height="15" fill="rgb(240,188,52)"/><text x="397.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 0.90%)</title><rect x="394" y="580" width="11" height="15" fill="rgb(210,48,27)"/><text x="397.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="394" y="596" width="11" height="15" fill="rgb(210,74,44)"/><text x="397.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="394" y="612" width="11" height="15" fill="rgb(209,122,49)"/><text x="397.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="394" y="628" width="11" height="15" fill="rgb(219,106,21)"/><text x="397.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="394" y="644" width="11" height="15" fill="rgb(236,156,11)"/><text x="397.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="394" y="660" width="11" height="15" fill="rgb(238,127,20)"/><text x="397.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 0.90%)</title><rect x="394" y="676" width="11" height="15" fill="rgb(243,44,4)"/><text x="397.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="394" y="692" width="11" height="15" fill="rgb(242,179,8)"/><text x="397.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="394" y="708" width="11" height="15" fill="rgb(221,42,28)"/><text x="397.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="394" y="724" width="11" height="15" fill="rgb(208,181,15)"/><text x="397.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="394" y="740" width="11" height="15" fill="rgb(243,85,1)"/><text x="397.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="394" y="756" width="11" height="15" fill="rgb(248,155,19)"/><text x="397.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 0.90%)</title><rect x="394" y="772" width="11" height="15" fill="rgb(239,174,27)"/><text x="397.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="394" y="788" width="11" height="15" fill="rgb(229,139,18)"/><text x="397.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="394" y="804" width="11" height="15" fill="rgb(218,81,38)"/><text x="397.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="394" y="820" width="11" height="15" fill="rgb(251,148,1)"/><text x="397.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="394" y="836" width="11" height="15" fill="rgb(221,145,4)"/><text x="397.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="394" y="852" width="11" height="15" fill="rgb(221,210,35)"/><text x="397.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 0.90%)</title><rect x="394" y="868" width="11" height="15" fill="rgb(208,186,11)"/><text x="397.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="394" y="884" width="11" height="15" fill="rgb(228,168,37)"/><text x="397.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.90%)</title><rect x="394" y="900" width="11" height="15" fill="rgb(237,194,29)"/><text x="397.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="394" y="916" width="11" height="15" fill="rgb(205,114,23)"/><text x="397.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="394" y="932" width="11" height="15" fill="rgb(210,15,46)"/><text x="397.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="394" y="948" width="11" height="15" fill="rgb(235,196,50)"/><text x="397.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="394" y="964" width="11" height="15" fill="rgb(218,110,15)"/><text x="397.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="394" y="980" width="11" height="15" fill="rgb(227,205,26)"/><text x="397.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="394" y="996" width="11" height="15" fill="rgb(239,134,20)"/><text x="397.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 0.90%)</title><rect x="394" y="1012" width="11" height="15" fill="rgb(206,154,47)"/><text x="397.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.90%)</title><rect x="394" y="1028" width="11" height="15" fill="rgb(218,180,28)"/><text x="397.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.90%)</title><rect x="394" y="1044" width="11" height="15" fill="rgb(241,215,7)"/><text x="397.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.90%)</title><rect x="394" y="1060" width="11" height="15" fill="rgb(212,131,30)"/><text x="397.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.90%)</title><rect x="394" y="1076" width="11" height="15" fill="rgb(208,223,36)"/><text x="397.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.90%)</title><rect x="394" y="1092" width="11" height="15" fill="rgb(240,65,40)"/><text x="397.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 0.72%)</title><rect x="396" y="1108" width="9" height="15" fill="rgb(237,85,3)"/><text x="399.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.72%)</title><rect x="396" y="1124" width="9" height="15" fill="rgb(250,136,13)"/><text x="399.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="396" y="1140" width="9" height="15" fill="rgb(231,6,50)"/><text x="399.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.72%)</title><rect x="396" y="1156" width="9" height="15" fill="rgb(230,228,31)"/><text x="399.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.72%)</title><rect x="396" y="1172" width="9" height="15" fill="rgb(238,202,13)"/><text x="399.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.72%)</title><rect x="396" y="1188" width="9" height="15" fill="rgb(254,11,3)"/><text x="399.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.72%)</title><rect x="396" y="1204" width="9" height="15" fill="rgb(209,82,37)"/><text x="399.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="396" y="1220" width="9" height="15" fill="rgb(228,24,17)"/><text x="399.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 0.72%)</title><rect x="396" y="1236" width="9" height="15" fill="rgb(241,225,29)"/><text x="399.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.72%)</title><rect x="396" y="1252" width="9" height="15" fill="rgb(238,94,16)"/><text x="399.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="396" y="1268" width="9" height="15" fill="rgb(229,128,36)"/><text x="399.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.72%)</title><rect x="396" y="1284" width="9" height="15" fill="rgb(252,14,13)"/><text x="399.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.72%)</title><rect x="396" y="1300" width="9" height="15" fill="rgb(214,127,41)"/><text x="399.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.72%)</title><rect x="396" y="1316" width="9" height="15" fill="rgb(221,24,41)"/><text x="399.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.72%)</title><rect x="396" y="1332" width="9" height="15" fill="rgb(221,149,40)"/><text x="399.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="396" y="1348" width="9" height="15" fill="rgb(232,29,30)"/><text x="399.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 0.72%)</title><rect x="396" y="1364" width="9" height="15" fill="rgb(243,196,8)"/><text x="399.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.72%)</title><rect x="396" y="1380" width="9" height="15" fill="rgb(211,80,39)"/><text x="399.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.72%)</title><rect x="396" y="1396" width="9" height="15" fill="rgb(253,94,19)"/><text x="399.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.72%)</title><rect x="396" y="1412" width="9" height="15" fill="rgb(251,48,29)"/><text x="399.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.72%)</title><rect x="396" y="1428" width="9" height="15" fill="rgb(240,37,37)"/><text x="399.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.72%)</title><rect x="396" y="1444" width="9" height="15" fill="rgb(205,64,50)"/><text x="399.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (4 samples, 0.72%)</title><rect x="396" y="1460" width="9" height="15" fill="rgb(232,5,2)"/><text x="399.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (4 samples, 0.72%)</title><rect x="396" y="1476" width="9" height="15" fill="rgb(254,165,1)"/><text x="399.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (4 samples, 0.72%)</title><rect x="396" y="1492" width="9" height="15" fill="rgb(214,150,30)"/><text x="399.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (4 samples, 0.72%)</title><rect x="396" y="1508" width="9" height="15" fill="rgb(211,59,23)"/><text x="399.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (4 samples, 0.72%)</title><rect x="396" y="1524" width="9" height="15" fill="rgb(247,177,12)"/><text x="399.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (4 samples, 0.72%)</title><rect x="396" y="1540" width="9" height="15" fill="rgb(208,209,29)"/><text x="399.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (4 samples, 0.72%)</title><rect x="396" y="1556" width="9" height="15" fill="rgb(207,83,44)"/><text x="399.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:78) (1 samples, 0.18%)</title><rect x="403" y="1572" width="2" height="15" fill="rgb(217,65,44)"/><text x="406.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.18%)</title><rect x="403" y="1588" width="2" height="15" fill="rgb(214,63,37)"/><text x="406.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:40) (1 samples, 0.18%)</title><rect x="403" y="1604" width="2" height="15" fill="rgb(237,221,23)"/><text x="406.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="403" y="1620" width="2" height="15" fill="rgb(214,189,37)"/><text x="406.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda(onnx::OpSchema::Attribute*)#3} const&amp;, pybind11::bytes, onnx::OpSchema::Attribute*, &gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda(onnx::OpSchema::Attribute*)#3} const&amp;&amp;&amp;, pybind11::bytes (*)(onnx::OpSchema::Attribute*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="403" y="1636" width="2" height="15" fill="rgb(212,7,50)"/><text x="406.00" y="1646.50"></text></g><g><title>google::protobuf::MessageLite::SerializeToString (libprotobuf.so.10.0.0) (1 samples, 0.18%)</title><rect x="403" y="1652" width="2" height="15" fill="rgb(209,161,4)"/><text x="406.00" y="1662.50"></text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:28) (1 samples, 0.18%)</title><rect x="405" y="84" width="2" height="15" fill="rgb(216,152,6)"/><text x="408.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.18%)</title><rect x="405" y="100" width="2" height="15" fill="rgb(243,202,33)"/><text x="408.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.18%)</title><rect x="405" y="116" width="2" height="15" fill="rgb(229,181,51)"/><text x="408.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.18%)</title><rect x="405" y="132" width="2" height="15" fill="rgb(210,200,27)"/><text x="408.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.18%)</title><rect x="405" y="148" width="2" height="15" fill="rgb(240,194,11)"/><text x="408.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.18%)</title><rect x="405" y="164" width="2" height="15" fill="rgb(212,117,38)"/><text x="408.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.18%)</title><rect x="405" y="180" width="2" height="15" fill="rgb(215,150,12)"/><text x="408.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.18%)</title><rect x="405" y="196" width="2" height="15" fill="rgb(245,46,16)"/><text x="408.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="405" y="212" width="2" height="15" fill="rgb(217,81,6)"/><text x="408.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="405" y="228" width="2" height="15" fill="rgb(237,74,12)"/><text x="408.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="405" y="244" width="2" height="15" fill="rgb(207,137,2)"/><text x="408.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="405" y="260" width="2" height="15" fill="rgb(208,61,27)"/><text x="408.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="405" y="276" width="2" height="15" fill="rgb(226,67,48)"/><text x="408.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.18%)</title><rect x="405" y="292" width="2" height="15" fill="rgb(205,77,5)"/><text x="408.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="405" y="308" width="2" height="15" fill="rgb(225,208,23)"/><text x="408.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="405" y="324" width="2" height="15" fill="rgb(229,19,29)"/><text x="408.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="405" y="340" width="2" height="15" fill="rgb(227,78,19)"/><text x="408.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="405" y="356" width="2" height="15" fill="rgb(249,73,27)"/><text x="408.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="405" y="372" width="2" height="15" fill="rgb(234,12,50)"/><text x="408.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.18%)</title><rect x="405" y="388" width="2" height="15" fill="rgb(211,120,51)"/><text x="408.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.18%)</title><rect x="405" y="404" width="2" height="15" fill="rgb(224,22,12)"/><text x="408.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.18%)</title><rect x="405" y="420" width="2" height="15" fill="rgb(253,84,25)"/><text x="408.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.18%)</title><rect x="405" y="436" width="2" height="15" fill="rgb(212,54,32)"/><text x="408.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.18%)</title><rect x="405" y="452" width="2" height="15" fill="rgb(222,32,33)"/><text x="408.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.18%)</title><rect x="405" y="468" width="2" height="15" fill="rgb(216,229,9)"/><text x="408.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.18%)</title><rect x="405" y="484" width="2" height="15" fill="rgb(207,210,52)"/><text x="408.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.18%)</title><rect x="405" y="500" width="2" height="15" fill="rgb(229,7,25)"/><text x="408.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.18%)</title><rect x="405" y="516" width="2" height="15" fill="rgb(205,178,0)"/><text x="408.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.18%)</title><rect x="405" y="532" width="2" height="15" fill="rgb(240,171,48)"/><text x="408.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.18%)</title><rect x="405" y="548" width="2" height="15" fill="rgb(235,54,24)"/><text x="408.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.18%)</title><rect x="405" y="564" width="2" height="15" fill="rgb(230,154,3)"/><text x="408.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.18%)</title><rect x="405" y="580" width="2" height="15" fill="rgb(238,17,44)"/><text x="408.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="405" y="596" width="2" height="15" fill="rgb(228,48,1)"/><text x="408.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.18%)</title><rect x="405" y="612" width="2" height="15" fill="rgb(251,197,4)"/><text x="408.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.18%)</title><rect x="405" y="628" width="2" height="15" fill="rgb(248,81,51)"/><text x="408.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="405" y="644" width="2" height="15" fill="rgb(226,90,10)"/><text x="408.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.18%)</title><rect x="405" y="660" width="2" height="15" fill="rgb(222,216,18)"/><text x="408.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.18%)</title><rect x="405" y="676" width="2" height="15" fill="rgb(215,86,35)"/><text x="408.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="405" y="692" width="2" height="15" fill="rgb(235,228,51)"/><text x="408.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py:1160) (1 samples, 0.18%)</title><rect x="405" y="708" width="2" height="15" fill="rgb(237,204,41)"/><text x="408.00" y="718.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.18%)</title><rect x="405" y="724" width="2" height="15" fill="rgb(208,216,20)"/><text x="408.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="405" y="740" width="2" height="15" fill="rgb(252,229,26)"/><text x="408.00" y="750.50"></text></g><g><title>visit_If (jinja2/compiler.py:1160) (1 samples, 0.18%)</title><rect x="405" y="756" width="2" height="15" fill="rgb(224,168,2)"/><text x="408.00" y="766.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.18%)</title><rect x="405" y="772" width="2" height="15" fill="rgb(237,131,38)"/><text x="408.00" y="782.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="405" y="788" width="2" height="15" fill="rgb(246,166,0)"/><text x="408.00" y="798.50"></text></g><g><title>visit_Output (jinja2/compiler.py:1358) (1 samples, 0.18%)</title><rect x="405" y="804" width="2" height="15" fill="rgb(205,144,3)"/><text x="408.00" y="814.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="405" y="820" width="2" height="15" fill="rgb(210,15,44)"/><text x="408.00" y="830.50"></text></g><g><title>new_func (jinja2/compiler.py:67) (1 samples, 0.18%)</title><rect x="405" y="836" width="2" height="15" fill="rgb(231,11,29)"/><text x="408.00" y="846.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.18%)</title><rect x="405" y="852" width="2" height="15" fill="rgb(208,226,25)"/><text x="408.00" y="862.50"></text></g><g><title>fold (jinja2/optimizer.py:37) (1 samples, 0.18%)</title><rect x="405" y="868" width="2" height="15" fill="rgb(208,30,22)"/><text x="408.00" y="878.50"></text></g><g><title>generic_visit (jinja2/visitor.py:59) (1 samples, 0.18%)</title><rect x="405" y="884" width="2" height="15" fill="rgb(228,71,22)"/><text x="408.00" y="894.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.18%)</title><rect x="407" y="212" width="2" height="15" fill="rgb(227,216,38)"/><text x="410.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.18%)</title><rect x="407" y="228" width="2" height="15" fill="rgb(243,62,27)"/><text x="410.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.18%)</title><rect x="407" y="244" width="2" height="15" fill="rgb(226,159,2)"/><text x="410.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.18%)</title><rect x="407" y="260" width="2" height="15" fill="rgb(249,111,9)"/><text x="410.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.18%)</title><rect x="407" y="276" width="2" height="15" fill="rgb(228,101,42)"/><text x="410.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (1 samples, 0.18%)</title><rect x="407" y="292" width="2" height="15" fill="rgb(209,142,22)"/><text x="410.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (2 samples, 0.36%)</title><rect x="407" y="196" width="4" height="15" fill="rgb(243,215,26)"/><text x="410.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.18%)</title><rect x="409" y="212" width="2" height="15" fill="rgb(228,183,11)"/><text x="412.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.18%)</title><rect x="409" y="228" width="2" height="15" fill="rgb(214,182,34)"/><text x="412.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.18%)</title><rect x="409" y="244" width="2" height="15" fill="rgb(210,40,36)"/><text x="412.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.18%)</title><rect x="409" y="260" width="2" height="15" fill="rgb(238,188,19)"/><text x="412.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.18%)</title><rect x="409" y="276" width="2" height="15" fill="rgb(209,2,51)"/><text x="412.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.18%)</title><rect x="409" y="292" width="2" height="15" fill="rgb(224,64,42)"/><text x="412.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (1 samples, 0.18%)</title><rect x="411" y="196" width="2" height="15" fill="rgb(220,135,25)"/><text x="414.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.18%)</title><rect x="411" y="212" width="2" height="15" fill="rgb(213,227,21)"/><text x="414.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (1 samples, 0.18%)</title><rect x="411" y="228" width="2" height="15" fill="rgb(246,54,46)"/><text x="414.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (1 samples, 0.18%)</title><rect x="411" y="244" width="2" height="15" fill="rgb(218,217,9)"/><text x="414.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (1 samples, 0.18%)</title><rect x="411" y="260" width="2" height="15" fill="rgb(209,132,32)"/><text x="414.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (1 samples, 0.18%)</title><rect x="411" y="276" width="2" height="15" fill="rgb(253,199,45)"/><text x="414.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.18%)</title><rect x="411" y="292" width="2" height="15" fill="rgb(210,14,38)"/><text x="414.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (1 samples, 0.18%)</title><rect x="411" y="308" width="2" height="15" fill="rgb(252,229,1)"/><text x="414.00" y="318.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.18%)</title><rect x="411" y="324" width="2" height="15" fill="rgb(230,134,45)"/><text x="414.00" y="334.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.18%)</title><rect x="411" y="340" width="2" height="15" fill="rgb(222,35,31)"/><text x="414.00" y="350.50"></text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:18) (5 samples, 0.90%)</title><rect x="407" y="100" width="11" height="15" fill="rgb(209,52,18)"/><text x="410.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (5 samples, 0.90%)</title><rect x="407" y="116" width="11" height="15" fill="rgb(228,212,1)"/><text x="410.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (5 samples, 0.90%)</title><rect x="407" y="132" width="11" height="15" fill="rgb(218,10,13)"/><text x="410.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (5 samples, 0.90%)</title><rect x="407" y="148" width="11" height="15" fill="rgb(236,98,14)"/><text x="410.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (5 samples, 0.90%)</title><rect x="407" y="164" width="11" height="15" fill="rgb(232,0,45)"/><text x="410.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (5 samples, 0.90%)</title><rect x="407" y="180" width="11" height="15" fill="rgb(227,222,34)"/><text x="410.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (2 samples, 0.36%)</title><rect x="413" y="196" width="5" height="15" fill="rgb(237,164,49)"/><text x="416.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.36%)</title><rect x="413" y="212" width="5" height="15" fill="rgb(251,25,33)"/><text x="416.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (2 samples, 0.36%)</title><rect x="413" y="228" width="5" height="15" fill="rgb(250,148,43)"/><text x="416.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="413" y="244" width="5" height="15" fill="rgb(226,225,34)"/><text x="416.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.36%)</title><rect x="413" y="260" width="5" height="15" fill="rgb(224,51,15)"/><text x="416.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.36%)</title><rect x="413" y="276" width="5" height="15" fill="rgb(214,121,0)"/><text x="416.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.36%)</title><rect x="413" y="292" width="5" height="15" fill="rgb(238,102,44)"/><text x="416.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (2 samples, 0.36%)</title><rect x="413" y="308" width="5" height="15" fill="rgb(243,113,46)"/><text x="416.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (2 samples, 0.36%)</title><rect x="413" y="324" width="5" height="15" fill="rgb(242,68,24)"/><text x="416.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.54%)</title><rect x="424" y="180" width="6" height="15" fill="rgb(250,80,31)"/><text x="427.00" y="190.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:29) (1 samples, 0.18%)</title><rect x="437" y="212" width="2" height="15" fill="rgb(233,105,45)"/><text x="440.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.18%)</title><rect x="439" y="228" width="2" height="15" fill="rgb(237,100,40)"/><text x="442.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (1 samples, 0.18%)</title><rect x="439" y="244" width="2" height="15" fill="rgb(227,130,3)"/><text x="442.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:204) (1 samples, 0.18%)</title><rect x="439" y="260" width="2" height="15" fill="rgb(223,0,49)"/><text x="442.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (2 samples, 0.36%)</title><rect x="439" y="212" width="4" height="15" fill="rgb(228,209,10)"/><text x="442.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.18%)</title><rect x="441" y="228" width="2" height="15" fill="rgb(218,123,43)"/><text x="444.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.18%)</title><rect x="441" y="244" width="2" height="15" fill="rgb(252,173,52)"/><text x="444.00" y="254.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.18%)</title><rect x="443" y="244" width="2" height="15" fill="rgb(212,39,29)"/><text x="446.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.18%)</title><rect x="443" y="260" width="2" height="15" fill="rgb(231,177,1)"/><text x="446.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.18%)</title><rect x="443" y="276" width="2" height="15" fill="rgb(247,11,2)"/><text x="446.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:127) (1 samples, 0.18%)</title><rect x="445" y="324" width="2" height="15" fill="rgb(224,105,36)"/><text x="448.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (1 samples, 0.18%)</title><rect x="447" y="324" width="3" height="15" fill="rgb(212,117,42)"/><text x="450.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:211) (1 samples, 0.18%)</title><rect x="450" y="324" width="2" height="15" fill="rgb(245,166,48)"/><text x="453.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (1 samples, 0.18%)</title><rect x="452" y="324" width="2" height="15" fill="rgb(244,175,18)"/><text x="455.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (1 samples, 0.18%)</title><rect x="452" y="340" width="2" height="15" fill="rgb(242,169,47)"/><text x="455.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1372) (1 samples, 0.18%)</title><rect x="454" y="340" width="2" height="15" fill="rgb(251,205,1)"/><text x="457.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c:1056) (1 samples, 0.18%)</title><rect x="454" y="356" width="2" height="15" fill="rgb(239,61,23)"/><text x="457.00" y="366.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (6 samples, 1.08%)</title><rect x="445" y="276" width="13" height="15" fill="rgb(215,223,32)"/><text x="448.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (6 samples, 1.08%)</title><rect x="445" y="292" width="13" height="15" fill="rgb(219,102,3)"/><text x="448.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (6 samples, 1.08%)</title><rect x="445" y="308" width="13" height="15" fill="rgb(248,64,46)"/><text x="448.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (2 samples, 0.36%)</title><rect x="454" y="324" width="4" height="15" fill="rgb(247,169,34)"/><text x="457.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1386) (1 samples, 0.18%)</title><rect x="456" y="340" width="2" height="15" fill="rgb(235,73,54)"/><text x="459.00" y="350.50"></text></g><g><title>discover_dimensions (ctors.c:870) (1 samples, 0.18%)</title><rect x="458" y="292" width="2" height="15" fill="rgb(221,62,11)"/><text x="461.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:668) (1 samples, 0.18%)</title><rect x="458" y="308" width="2" height="15" fill="rgb(252,176,40)"/><text x="461.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:679) (3 samples, 0.54%)</title><rect x="460" y="308" width="7" height="15" fill="rgb(227,45,0)"/><text x="463.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:699) (2 samples, 0.36%)</title><rect x="467" y="308" width="4" height="15" fill="rgb(225,8,49)"/><text x="470.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:701) (1 samples, 0.18%)</title><rect x="471" y="308" width="2" height="15" fill="rgb(249,11,40)"/><text x="474.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:884) (7 samples, 1.26%)</title><rect x="460" y="292" width="15" height="15" fill="rgb(233,108,16)"/><text x="463.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:703) (1 samples, 0.18%)</title><rect x="473" y="308" width="2" height="15" fill="rgb(208,158,11)"/><text x="476.00" y="318.50"></text></g><g><title>0x7fb710a79a40 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="473" y="324" width="2" height="15" fill="rgb(247,146,54)"/><text x="476.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (15 samples, 2.70%)</title><rect x="445" y="260" width="32" height="15" fill="rgb(252,163,7)"/><text x="448.00" y="270.50">Py..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (9 samples, 1.62%)</title><rect x="458" y="276" width="19" height="15" fill="rgb(227,45,46)"/><text x="461.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:892) (1 samples, 0.18%)</title><rect x="475" y="292" width="2" height="15" fill="rgb(224,97,18)"/><text x="478.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.18%)</title><rect x="477" y="260" width="2" height="15" fill="rgb(228,153,38)"/><text x="480.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.18%)</title><rect x="477" y="276" width="2" height="15" fill="rgb(240,116,41)"/><text x="480.00" y="286.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:37) (1 samples, 0.18%)</title><rect x="477" y="292" width="2" height="15" fill="rgb(210,147,14)"/><text x="480.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:535) (1 samples, 0.18%)</title><rect x="479" y="292" width="3" height="15" fill="rgb(218,107,53)"/><text x="482.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (1 samples, 0.18%)</title><rect x="484" y="324" width="2" height="15" fill="rgb(247,101,18)"/><text x="487.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (1 samples, 0.18%)</title><rect x="484" y="340" width="2" height="15" fill="rgb(205,151,54)"/><text x="487.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:233) (2 samples, 0.36%)</title><rect x="486" y="324" width="4" height="15" fill="rgb(226,31,38)"/><text x="489.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1539) (23 samples, 4.14%)</title><rect x="443" y="228" width="49" height="15" fill="rgb(219,71,1)"/><text x="446.00" y="238.50">arra..</text></g><g><title>prepare_index (mapping.c:516) (22 samples, 3.96%)</title><rect x="445" y="244" width="47" height="15" fill="rgb(225,14,2)"/><text x="448.00" y="254.50">prep..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (6 samples, 1.08%)</title><rect x="479" y="260" width="13" height="15" fill="rgb(217,219,7)"/><text x="482.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (6 samples, 1.08%)</title><rect x="479" y="276" width="13" height="15" fill="rgb(240,121,42)"/><text x="482.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (5 samples, 0.90%)</title><rect x="482" y="292" width="10" height="15" fill="rgb(248,167,9)"/><text x="485.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (5 samples, 0.90%)</title><rect x="482" y="308" width="10" height="15" fill="rgb(250,222,6)"/><text x="485.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:235) (1 samples, 0.18%)</title><rect x="490" y="324" width="2" height="15" fill="rgb(221,214,51)"/><text x="493.00" y="334.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2853) (1 samples, 0.18%)</title><rect x="492" y="244" width="2" height="15" fill="rgb(246,224,31)"/><text x="495.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (25 samples, 4.50%)</title><rect x="443" y="212" width="53" height="15" fill="rgb(228,155,44)"/><text x="446.00" y="222.50">_run ..</text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.36%)</title><rect x="492" y="228" width="4" height="15" fill="rgb(214,73,45)"/><text x="495.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.18%)</title><rect x="494" y="244" width="2" height="15" fill="rgb(207,188,8)"/><text x="497.00" y="254.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.18%)</title><rect x="494" y="260" width="2" height="15" fill="rgb(238,25,4)"/><text x="497.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:252) (1 samples, 0.18%)</title><rect x="494" y="276" width="2" height="15" fill="rgb(206,228,34)"/><text x="497.00" y="286.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1708) (1 samples, 0.18%)</title><rect x="494" y="292" width="2" height="15" fill="rgb(239,158,23)"/><text x="497.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.18%)</title><rect x="496" y="212" width="3" height="15" fill="rgb(249,100,14)"/><text x="499.00" y="222.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.18%)</title><rect x="496" y="228" width="3" height="15" fill="rgb(228,126,35)"/><text x="499.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.18%)</title><rect x="496" y="244" width="3" height="15" fill="rgb(250,98,30)"/><text x="499.00" y="254.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3501) (1 samples, 0.18%)</title><rect x="503" y="292" width="2" height="15" fill="rgb(251,31,37)"/><text x="506.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (2 samples, 0.36%)</title><rect x="503" y="276" width="4" height="15" fill="rgb(216,94,54)"/><text x="506.00" y="286.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:722) (1 samples, 0.18%)</title><rect x="505" y="292" width="2" height="15" fill="rgb(238,83,10)"/><text x="508.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (16 samples, 2.88%)</title><rect x="499" y="212" width="34" height="15" fill="rgb(253,94,42)"/><text x="502.00" y="222.50">_r..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (16 samples, 2.88%)</title><rect x="499" y="228" width="34" height="15" fill="rgb(254,76,44)"/><text x="502.00" y="238.50">&lt;l..</text></g><g><title>array_astype (methods.c:845) (14 samples, 2.52%)</title><rect x="503" y="244" width="30" height="15" fill="rgb(226,118,52)"/><text x="506.00" y="254.50">ar..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (14 samples, 2.52%)</title><rect x="503" y="260" width="30" height="15" fill="rgb(205,41,17)"/><text x="506.00" y="270.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (12 samples, 2.16%)</title><rect x="507" y="276" width="26" height="15" fill="rgb(219,126,54)"/><text x="510.00" y="286.50">r..</text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src:816) (12 samples, 2.16%)</title><rect x="507" y="292" width="26" height="15" fill="rgb(208,30,42)"/><text x="510.00" y="302.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4713) (1 samples, 0.18%)</title><rect x="533" y="244" width="2" height="15" fill="rgb(254,109,30)"/><text x="536.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="535" y="244" width="2" height="15" fill="rgb(225,58,37)"/><text x="538.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:459) (1 samples, 0.18%)</title><rect x="535" y="260" width="2" height="15" fill="rgb(219,111,12)"/><text x="538.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.18%)</title><rect x="537" y="260" width="2" height="15" fill="rgb(244,141,37)"/><text x="540.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.18%)</title><rect x="537" y="276" width="2" height="15" fill="rgb(218,14,8)"/><text x="540.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.18%)</title><rect x="539" y="276" width="2" height="15" fill="rgb(243,134,18)"/><text x="542.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.18%)</title><rect x="539" y="292" width="2" height="15" fill="rgb(240,228,49)"/><text x="542.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.18%)</title><rect x="541" y="292" width="2" height="15" fill="rgb(212,154,23)"/><text x="544.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.18%)</title><rect x="541" y="308" width="2" height="15" fill="rgb(252,80,15)"/><text x="544.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.18%)</title><rect x="541" y="324" width="2" height="15" fill="rgb(224,125,16)"/><text x="544.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.18%)</title><rect x="541" y="340" width="2" height="15" fill="rgb(238,20,37)"/><text x="544.00" y="350.50"></text></g><g><title>0x7fb711876dbb (libc-2.29.so) (1 samples, 0.18%)</title><rect x="541" y="356" width="2" height="15" fill="rgb(247,88,33)"/><text x="544.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.18%)</title><rect x="543" y="292" width="2" height="15" fill="rgb(241,197,31)"/><text x="546.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.18%)</title><rect x="543" y="308" width="2" height="15" fill="rgb(227,44,12)"/><text x="546.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:2023) (1 samples, 0.18%)</title><rect x="543" y="324" width="2" height="15" fill="rgb(247,157,14)"/><text x="546.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (7 samples, 1.26%)</title><rect x="533" y="212" width="14" height="15" fill="rgb(219,69,32)"/><text x="536.00" y="222.50"></text></g><g><title>array_add (number.c:330) (7 samples, 1.26%)</title><rect x="533" y="228" width="14" height="15" fill="rgb(247,101,52)"/><text x="536.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.90%)</title><rect x="537" y="244" width="10" height="15" fill="rgb(251,205,42)"/><text x="540.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.72%)</title><rect x="539" y="260" width="8" height="15" fill="rgb(239,93,43)"/><text x="542.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.54%)</title><rect x="541" y="276" width="6" height="15" fill="rgb(208,183,43)"/><text x="544.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.18%)</title><rect x="545" y="292" width="2" height="15" fill="rgb(217,44,21)"/><text x="548.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (54 samples, 9.73%)</title><rect x="435" y="196" width="115" height="15" fill="rgb(235,32,54)"/><text x="438.00" y="206.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.18%)</title><rect x="547" y="212" width="3" height="15" fill="rgb(227,0,43)"/><text x="550.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (1 samples, 0.18%)</title><rect x="547" y="228" width="3" height="15" fill="rgb(228,62,10)"/><text x="550.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:65) (1 samples, 0.18%)</title><rect x="550" y="228" width="2" height="15" fill="rgb(231,87,32)"/><text x="553.00" y="238.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3094) (1 samples, 0.18%)</title><rect x="554" y="372" width="2" height="15" fill="rgb(245,24,48)"/><text x="557.00" y="382.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (2 samples, 0.36%)</title><rect x="554" y="260" width="4" height="15" fill="rgb(245,190,33)"/><text x="557.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (2 samples, 0.36%)</title><rect x="554" y="276" width="4" height="15" fill="rgb(236,127,1)"/><text x="557.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.36%)</title><rect x="554" y="292" width="4" height="15" fill="rgb(242,220,47)"/><text x="557.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (2 samples, 0.36%)</title><rect x="554" y="308" width="4" height="15" fill="rgb(252,59,53)"/><text x="557.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.36%)</title><rect x="554" y="324" width="4" height="15" fill="rgb(231,183,21)"/><text x="557.00" y="334.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.36%)</title><rect x="554" y="340" width="4" height="15" fill="rgb(236,47,24)"/><text x="557.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (2 samples, 0.36%)</title><rect x="554" y="356" width="4" height="15" fill="rgb(250,229,35)"/><text x="557.00" y="366.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3127) (1 samples, 0.18%)</title><rect x="556" y="372" width="2" height="15" fill="rgb(227,105,32)"/><text x="559.00" y="382.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:14) (1 samples, 0.18%)</title><rect x="558" y="260" width="2" height="15" fill="rgb(211,229,19)"/><text x="561.00" y="270.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (1 samples, 0.18%)</title><rect x="560" y="260" width="2" height="15" fill="rgb(219,144,21)"/><text x="563.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (1 samples, 0.18%)</title><rect x="560" y="276" width="2" height="15" fill="rgb(208,46,50)"/><text x="563.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.18%)</title><rect x="560" y="292" width="2" height="15" fill="rgb(245,129,43)"/><text x="563.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:574) (1 samples, 0.18%)</title><rect x="560" y="308" width="2" height="15" fill="rgb(226,206,20)"/><text x="563.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.18%)</title><rect x="560" y="324" width="2" height="15" fill="rgb(214,49,42)"/><text x="563.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (7 samples, 1.26%)</title><rect x="550" y="196" width="14" height="15" fill="rgb(254,119,13)"/><text x="553.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (7 samples, 1.26%)</title><rect x="550" y="212" width="14" height="15" fill="rgb(244,172,45)"/><text x="553.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (6 samples, 1.08%)</title><rect x="552" y="228" width="12" height="15" fill="rgb(245,146,11)"/><text x="555.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (6 samples, 1.08%)</title><rect x="552" y="244" width="12" height="15" fill="rgb(226,214,16)"/><text x="555.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:16) (1 samples, 0.18%)</title><rect x="562" y="260" width="2" height="15" fill="rgb(240,15,27)"/><text x="565.00" y="270.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.18%)</title><rect x="562" y="276" width="2" height="15" fill="rgb(227,160,19)"/><text x="565.00" y="286.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.18%)</title><rect x="562" y="292" width="2" height="15" fill="rgb(251,73,30)"/><text x="565.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.18%)</title><rect x="562" y="308" width="2" height="15" fill="rgb(248,73,9)"/><text x="565.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.18%)</title><rect x="562" y="324" width="2" height="15" fill="rgb(250,74,10)"/><text x="565.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.18%)</title><rect x="562" y="340" width="2" height="15" fill="rgb(244,186,15)"/><text x="565.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.18%)</title><rect x="562" y="356" width="2" height="15" fill="rgb(235,32,30)"/><text x="565.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.18%)</title><rect x="562" y="372" width="2" height="15" fill="rgb(214,45,53)"/><text x="565.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.18%)</title><rect x="562" y="388" width="2" height="15" fill="rgb(252,104,34)"/><text x="565.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="562" y="404" width="2" height="15" fill="rgb(236,33,1)"/><text x="565.00" y="414.50"></text></g><g><title>0x7fb711857b68 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="562" y="420" width="2" height="15" fill="rgb(211,20,51)"/><text x="565.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:313) (2 samples, 0.36%)</title><rect x="564" y="196" width="5" height="15" fill="rgb(240,172,26)"/><text x="567.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.18%)</title><rect x="567" y="212" width="2" height="15" fill="rgb(209,153,54)"/><text x="570.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1391) (1 samples, 0.18%)</title><rect x="567" y="228" width="2" height="15" fill="rgb(205,149,27)"/><text x="570.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.18%)</title><rect x="569" y="244" width="2" height="15" fill="rgb(231,131,45)"/><text x="572.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="569" y="260" width="2" height="15" fill="rgb(251,19,18)"/><text x="572.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.18%)</title><rect x="569" y="276" width="2" height="15" fill="rgb(249,107,47)"/><text x="572.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.18%)</title><rect x="569" y="292" width="2" height="15" fill="rgb(252,69,16)"/><text x="572.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="569" y="308" width="2" height="15" fill="rgb(252,53,13)"/><text x="572.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.18%)</title><rect x="571" y="276" width="2" height="15" fill="rgb(223,116,19)"/><text x="574.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.18%)</title><rect x="571" y="292" width="2" height="15" fill="rgb(226,82,9)"/><text x="574.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.18%)</title><rect x="571" y="308" width="2" height="15" fill="rgb(253,146,47)"/><text x="574.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.18%)</title><rect x="571" y="324" width="2" height="15" fill="rgb(215,124,35)"/><text x="574.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:443) (1 samples, 0.18%)</title><rect x="571" y="340" width="2" height="15" fill="rgb(228,95,2)"/><text x="574.00" y="350.50"></text></g><g><title>0x7fb7119d5e00 (libm-2.29.so) (2 samples, 0.36%)</title><rect x="579" y="340" width="5" height="15" fill="rgb(237,122,29)"/><text x="582.00" y="350.50"></text></g><g><title>0x7fb7119d5e17 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="584" y="340" width="2" height="15" fill="rgb(238,52,16)"/><text x="587.00" y="350.50"></text></g><g><title>0x7fb7119d5e37 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="586" y="340" width="2" height="15" fill="rgb(253,223,6)"/><text x="589.00" y="350.50"></text></g><g><title>0x7fb7119d5e7e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="588" y="340" width="2" height="15" fill="rgb(246,168,36)"/><text x="591.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (11 samples, 1.98%)</title><rect x="569" y="228" width="23" height="15" fill="rgb(245,56,22)"/><text x="572.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.80%)</title><rect x="571" y="244" width="21" height="15" fill="rgb(238,138,41)"/><text x="574.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.80%)</title><rect x="571" y="260" width="21" height="15" fill="rgb(252,188,5)"/><text x="574.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (9 samples, 1.62%)</title><rect x="573" y="276" width="19" height="15" fill="rgb(242,43,11)"/><text x="576.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (9 samples, 1.62%)</title><rect x="573" y="292" width="19" height="15" fill="rgb(243,157,17)"/><text x="576.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (9 samples, 1.62%)</title><rect x="573" y="308" width="19" height="15" fill="rgb(208,202,50)"/><text x="576.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (9 samples, 1.62%)</title><rect x="573" y="324" width="19" height="15" fill="rgb(246,18,51)"/><text x="576.00" y="334.50"></text></g><g><title>0x7fb7119d5ea6 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="590" y="340" width="2" height="15" fill="rgb(244,47,15)"/><text x="593.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (1 samples, 0.18%)</title><rect x="592" y="228" width="2" height="15" fill="rgb(217,182,36)"/><text x="595.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="592" y="244" width="2" height="15" fill="rgb(212,141,32)"/><text x="595.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="592" y="260" width="2" height="15" fill="rgb(228,66,8)"/><text x="595.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.18%)</title><rect x="592" y="276" width="2" height="15" fill="rgb(222,105,10)"/><text x="595.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.18%)</title><rect x="592" y="292" width="2" height="15" fill="rgb(237,208,28)"/><text x="595.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.18%)</title><rect x="592" y="308" width="2" height="15" fill="rgb(236,55,41)"/><text x="595.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:551) (1 samples, 0.18%)</title><rect x="592" y="324" width="2" height="15" fill="rgb(215,221,5)"/><text x="595.00" y="334.50"></text></g><g><title>diophantine_precompute (mem_overlap.c:276) (1 samples, 0.18%)</title><rect x="592" y="340" width="2" height="15" fill="rgb(220,32,25)"/><text x="595.00" y="350.50"></text></g><g><title>safe_mul (npy_extint128.h:44) (1 samples, 0.18%)</title><rect x="592" y="356" width="2" height="15" fill="rgb(249,55,46)"/><text x="595.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.18%)</title><rect x="594" y="276" width="2" height="15" fill="rgb(207,121,39)"/><text x="597.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="594" y="292" width="2" height="15" fill="rgb(248,177,16)"/><text x="597.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.18%)</title><rect x="594" y="308" width="2" height="15" fill="rgb(234,220,44)"/><text x="597.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.18%)</title><rect x="594" y="324" width="2" height="15" fill="rgb(232,30,39)"/><text x="597.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.18%)</title><rect x="594" y="340" width="2" height="15" fill="rgb(231,65,13)"/><text x="597.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.18%)</title><rect x="594" y="356" width="2" height="15" fill="rgb(215,225,22)"/><text x="597.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="594" y="372" width="2" height="15" fill="rgb(230,5,13)"/><text x="597.00" y="382.50"></text></g><g><title>0x7fb7118586df (libc-2.29.so) (1 samples, 0.18%)</title><rect x="594" y="388" width="2" height="15" fill="rgb(237,60,4)"/><text x="597.00" y="398.50"></text></g><g><title>0x7fb710a792e0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="596" y="324" width="5" height="15" fill="rgb(234,138,28)"/><text x="599.00" y="334.50"></text></g><g><title>0x7fb7119d5e00 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="603" y="340" width="2" height="15" fill="rgb(233,58,4)"/><text x="606.00" y="350.50"></text></g><g><title>0x7fb7119d5e17 (libm-2.29.so) (3 samples, 0.54%)</title><rect x="605" y="340" width="6" height="15" fill="rgb(246,64,21)"/><text x="608.00" y="350.50"></text></g><g><title>0x7fb7119d5e37 (libm-2.29.so) (2 samples, 0.36%)</title><rect x="611" y="340" width="4" height="15" fill="rgb(229,178,36)"/><text x="614.00" y="350.50"></text></g><g><title>0x7fb7119d5e4e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="615" y="340" width="3" height="15" fill="rgb(238,128,30)"/><text x="618.00" y="350.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (11 samples, 1.98%)</title><rect x="596" y="308" width="24" height="15" fill="rgb(210,148,38)"/><text x="599.00" y="318.50">F..</text></g><g><title>expf (libm-2.29.so) (9 samples, 1.62%)</title><rect x="601" y="324" width="19" height="15" fill="rgb(236,166,50)"/><text x="604.00" y="334.50"></text></g><g><title>0x7fb7119d5e7e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="618" y="340" width="2" height="15" fill="rgb(245,212,27)"/><text x="621.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:30) (13 samples, 2.34%)</title><rect x="594" y="228" width="28" height="15" fill="rgb(209,45,53)"/><text x="597.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 2.34%)</title><rect x="594" y="244" width="28" height="15" fill="rgb(232,18,16)"/><text x="597.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (13 samples, 2.34%)</title><rect x="594" y="260" width="28" height="15" fill="rgb(249,22,20)"/><text x="597.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (12 samples, 2.16%)</title><rect x="596" y="276" width="26" height="15" fill="rgb(246,2,1)"/><text x="599.00" y="286.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (12 samples, 2.16%)</title><rect x="596" y="292" width="26" height="15" fill="rgb(215,146,44)"/><text x="599.00" y="302.50">t..</text></g><g><title>FLOAT_exp (loops.c.src:1604) (1 samples, 0.18%)</title><rect x="620" y="308" width="2" height="15" fill="rgb(245,95,30)"/><text x="623.00" y="318.50"></text></g><g><title>npy_expf (npy_math_internal.h.src:469) (1 samples, 0.18%)</title><rect x="620" y="324" width="2" height="15" fill="rgb(211,9,21)"/><text x="623.00" y="334.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2181) (1 samples, 0.18%)</title><rect x="622" y="276" width="2" height="15" fill="rgb(215,187,29)"/><text x="625.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.18%)</title><rect x="624" y="292" width="2" height="15" fill="rgb(209,60,43)"/><text x="627.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.18%)</title><rect x="626" y="308" width="2" height="15" fill="rgb(250,202,44)"/><text x="629.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.18%)</title><rect x="626" y="324" width="2" height="15" fill="rgb(215,34,20)"/><text x="629.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.18%)</title><rect x="626" y="340" width="2" height="15" fill="rgb(221,22,47)"/><text x="629.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.18%)</title><rect x="626" y="356" width="2" height="15" fill="rgb(248,211,20)"/><text x="629.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.18%)</title><rect x="626" y="372" width="2" height="15" fill="rgb(253,49,0)"/><text x="629.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.18%)</title><rect x="626" y="388" width="2" height="15" fill="rgb(225,20,49)"/><text x="629.00" y="398.50"></text></g><g><title>0x7fb711934fa0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="626" y="404" width="2" height="15" fill="rgb(208,214,17)"/><text x="629.00" y="414.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.18%)</title><rect x="628" y="404" width="2" height="15" fill="rgb(215,221,16)"/><text x="631.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3896) (1 samples, 0.18%)</title><rect x="628" y="420" width="2" height="15" fill="rgb(231,15,37)"/><text x="631.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.36%)</title><rect x="628" y="356" width="4" height="15" fill="rgb(206,17,26)"/><text x="631.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.36%)</title><rect x="628" y="372" width="4" height="15" fill="rgb(243,124,54)"/><text x="631.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.36%)</title><rect x="628" y="388" width="4" height="15" fill="rgb(230,167,53)"/><text x="631.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.18%)</title><rect x="630" y="404" width="2" height="15" fill="rgb(244,90,42)"/><text x="633.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.18%)</title><rect x="632" y="372" width="3" height="15" fill="rgb(227,221,47)"/><text x="635.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.18%)</title><rect x="635" y="388" width="2" height="15" fill="rgb(236,79,1)"/><text x="638.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (2 samples, 0.36%)</title><rect x="637" y="388" width="4" height="15" fill="rgb(249,105,42)"/><text x="640.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (5 samples, 0.90%)</title><rect x="632" y="356" width="11" height="15" fill="rgb(231,100,11)"/><text x="635.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (4 samples, 0.72%)</title><rect x="635" y="372" width="8" height="15" fill="rgb(228,131,17)"/><text x="638.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.18%)</title><rect x="641" y="388" width="2" height="15" fill="rgb(253,100,10)"/><text x="644.00" y="398.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (11 samples, 1.98%)</title><rect x="622" y="244" width="23" height="15" fill="rgb(252,164,25)"/><text x="625.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 1.98%)</title><rect x="622" y="260" width="23" height="15" fill="rgb(234,127,50)"/><text x="625.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (10 samples, 1.80%)</title><rect x="624" y="276" width="21" height="15" fill="rgb(233,154,29)"/><text x="627.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (9 samples, 1.62%)</title><rect x="626" y="292" width="19" height="15" fill="rgb(235,110,20)"/><text x="629.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 1.44%)</title><rect x="628" y="308" width="17" height="15" fill="rgb(214,69,36)"/><text x="631.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 1.44%)</title><rect x="628" y="324" width="17" height="15" fill="rgb(235,184,41)"/><text x="631.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 1.44%)</title><rect x="628" y="340" width="17" height="15" fill="rgb(222,66,45)"/><text x="631.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.18%)</title><rect x="643" y="356" width="2" height="15" fill="rgb(217,109,46)"/><text x="646.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.18%)</title><rect x="643" y="372" width="2" height="15" fill="rgb(247,45,6)"/><text x="646.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="643" y="388" width="2" height="15" fill="rgb(227,210,45)"/><text x="646.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:33) (12 samples, 2.16%)</title><rect x="622" y="228" width="25" height="15" fill="rgb(217,77,35)"/><text x="625.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="645" y="244" width="2" height="15" fill="rgb(215,77,42)"/><text x="648.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.18%)</title><rect x="645" y="260" width="2" height="15" fill="rgb(207,204,42)"/><text x="648.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:34) (1 samples, 0.18%)</title><rect x="647" y="228" width="2" height="15" fill="rgb(241,57,50)"/><text x="650.00" y="238.50"></text></g><g><title>0x7fb711877120 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="647" y="244" width="2" height="15" fill="rgb(217,211,0)"/><text x="650.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.18%)</title><rect x="652" y="340" width="2" height="15" fill="rgb(254,9,0)"/><text x="655.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.18%)</title><rect x="652" y="356" width="2" height="15" fill="rgb(207,168,8)"/><text x="655.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="652" y="372" width="2" height="15" fill="rgb(240,114,34)"/><text x="655.00" y="382.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.36%)</title><rect x="652" y="308" width="4" height="15" fill="rgb(244,124,17)"/><text x="655.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.36%)</title><rect x="652" y="324" width="4" height="15" fill="rgb(222,186,20)"/><text x="655.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.18%)</title><rect x="654" y="340" width="2" height="15" fill="rgb(206,190,30)"/><text x="657.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.18%)</title><rect x="654" y="356" width="2" height="15" fill="rgb(240,96,40)"/><text x="657.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.18%)</title><rect x="654" y="372" width="2" height="15" fill="rgb(223,136,40)"/><text x="657.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.18%)</title><rect x="654" y="388" width="2" height="15" fill="rgb(231,178,20)"/><text x="657.00" y="398.50"></text></g><g><title>0x7fb711934fa0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="654" y="404" width="2" height="15" fill="rgb(240,84,11)"/><text x="657.00" y="414.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (1 samples, 0.18%)</title><rect x="656" y="324" width="2" height="15" fill="rgb(218,130,39)"/><text x="659.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.18%)</title><rect x="656" y="340" width="2" height="15" fill="rgb(248,69,48)"/><text x="659.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.18%)</title><rect x="656" y="356" width="2" height="15" fill="rgb(220,21,48)"/><text x="659.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.18%)</title><rect x="656" y="372" width="2" height="15" fill="rgb(214,1,13)"/><text x="659.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (43 samples, 7.75%)</title><rect x="569" y="196" width="91" height="15" fill="rgb(235,71,4)"/><text x="572.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (43 samples, 7.75%)</title><rect x="569" y="212" width="91" height="15" fill="rgb(218,161,16)"/><text x="572.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (5 samples, 0.90%)</title><rect x="649" y="228" width="11" height="15" fill="rgb(225,149,21)"/><text x="652.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (5 samples, 0.90%)</title><rect x="649" y="244" width="11" height="15" fill="rgb(217,205,32)"/><text x="652.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.90%)</title><rect x="649" y="260" width="11" height="15" fill="rgb(228,8,47)"/><text x="652.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (5 samples, 0.90%)</title><rect x="649" y="276" width="11" height="15" fill="rgb(216,33,42)"/><text x="652.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (4 samples, 0.72%)</title><rect x="652" y="292" width="8" height="15" fill="rgb(205,83,42)"/><text x="655.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.36%)</title><rect x="656" y="308" width="4" height="15" fill="rgb(216,108,39)"/><text x="659.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.18%)</title><rect x="658" y="324" width="2" height="15" fill="rgb(230,155,53)"/><text x="661.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.18%)</title><rect x="658" y="340" width="2" height="15" fill="rgb(252,22,7)"/><text x="661.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.18%)</title><rect x="658" y="356" width="2" height="15" fill="rgb(233,11,13)"/><text x="661.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:208) (1 samples, 0.18%)</title><rect x="658" y="372" width="2" height="15" fill="rgb(216,29,52)"/><text x="661.00" y="382.50"></text></g><g><title>0x7fb711877120 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="658" y="388" width="2" height="15" fill="rgb(234,22,0)"/><text x="661.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.18%)</title><rect x="660" y="196" width="2" height="15" fill="rgb(221,126,41)"/><text x="663.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3228) (1 samples, 0.18%)</title><rect x="660" y="212" width="2" height="15" fill="rgb(230,118,9)"/><text x="663.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.18%)</title><rect x="662" y="276" width="2" height="15" fill="rgb(247,220,2)"/><text x="665.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.18%)</title><rect x="662" y="292" width="2" height="15" fill="rgb(240,189,11)"/><text x="665.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.18%)</title><rect x="662" y="308" width="2" height="15" fill="rgb(222,196,39)"/><text x="665.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.18%)</title><rect x="662" y="324" width="2" height="15" fill="rgb(241,98,8)"/><text x="665.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.18%)</title><rect x="662" y="340" width="2" height="15" fill="rgb(223,110,24)"/><text x="665.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.18%)</title><rect x="662" y="356" width="2" height="15" fill="rgb(216,68,34)"/><text x="665.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.18%)</title><rect x="662" y="372" width="2" height="15" fill="rgb(226,66,3)"/><text x="665.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (2 samples, 0.36%)</title><rect x="662" y="196" width="4" height="15" fill="rgb(217,174,31)"/><text x="665.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py:17) (2 samples, 0.36%)</title><rect x="662" y="212" width="4" height="15" fill="rgb(216,48,50)"/><text x="665.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.36%)</title><rect x="662" y="228" width="4" height="15" fill="rgb(251,134,35)"/><text x="665.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.36%)</title><rect x="662" y="244" width="4" height="15" fill="rgb(221,20,29)"/><text x="665.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.36%)</title><rect x="662" y="260" width="4" height="15" fill="rgb(243,146,1)"/><text x="665.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.18%)</title><rect x="664" y="276" width="2" height="15" fill="rgb(245,191,22)"/><text x="667.00" y="286.50"></text></g><g><title>FLOAT_greater (loops.c.src:1773) (1 samples, 0.18%)</title><rect x="664" y="292" width="2" height="15" fill="rgb(229,119,22)"/><text x="667.00" y="302.50"></text></g><g><title>run_binary_simd_greater_FLOAT (simd.inc.src:295) (1 samples, 0.18%)</title><rect x="664" y="308" width="2" height="15" fill="rgb(213,66,18)"/><text x="667.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src:982) (1 samples, 0.18%)</title><rect x="664" y="324" width="2" height="15" fill="rgb(233,19,1)"/><text x="667.00" y="334.50"></text></g><g><title>_mm_cmpgt_ps (xmmintrin.h:351) (1 samples, 0.18%)</title><rect x="664" y="340" width="2" height="15" fill="rgb(226,142,20)"/><text x="667.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.18%)</title><rect x="669" y="308" width="2" height="15" fill="rgb(244,36,53)"/><text x="672.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.18%)</title><rect x="669" y="324" width="2" height="15" fill="rgb(250,114,10)"/><text x="672.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="669" y="340" width="2" height="15" fill="rgb(226,61,12)"/><text x="672.00" y="350.50"></text></g><g><title>0x7fb711857d67 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="669" y="356" width="2" height="15" fill="rgb(222,58,30)"/><text x="672.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.36%)</title><rect x="669" y="292" width="4" height="15" fill="rgb(248,7,23)"/><text x="672.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.18%)</title><rect x="671" y="308" width="2" height="15" fill="rgb(228,128,15)"/><text x="674.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2066) (1 samples, 0.18%)</title><rect x="671" y="324" width="2" height="15" fill="rgb(207,101,53)"/><text x="674.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:531) (3 samples, 0.54%)</title><rect x="669" y="228" width="6" height="15" fill="rgb(227,129,51)"/><text x="672.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.54%)</title><rect x="669" y="244" width="6" height="15" fill="rgb(227,144,5)"/><text x="672.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.54%)</title><rect x="669" y="260" width="6" height="15" fill="rgb(215,192,34)"/><text x="672.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.54%)</title><rect x="669" y="276" width="6" height="15" fill="rgb(222,178,38)"/><text x="672.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.18%)</title><rect x="673" y="292" width="2" height="15" fill="rgb(244,115,39)"/><text x="676.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.18%)</title><rect x="673" y="308" width="2" height="15" fill="rgb(240,105,27)"/><text x="676.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.18%)</title><rect x="673" y="324" width="2" height="15" fill="rgb(224,150,44)"/><text x="676.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:603) (1 samples, 0.18%)</title><rect x="673" y="340" width="2" height="15" fill="rgb(236,185,13)"/><text x="676.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h:157) (1 samples, 0.18%)</title><rect x="673" y="356" width="2" height="15" fill="rgb(223,191,51)"/><text x="676.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (1 samples, 0.18%)</title><rect x="675" y="228" width="2" height="15" fill="rgb(223,207,31)"/><text x="678.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.18%)</title><rect x="675" y="244" width="2" height="15" fill="rgb(207,133,21)"/><text x="678.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.18%)</title><rect x="675" y="260" width="2" height="15" fill="rgb(239,210,16)"/><text x="678.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.18%)</title><rect x="675" y="276" width="2" height="15" fill="rgb(205,191,51)"/><text x="678.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.18%)</title><rect x="675" y="292" width="2" height="15" fill="rgb(212,211,26)"/><text x="678.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.18%)</title><rect x="675" y="308" width="2" height="15" fill="rgb(254,79,52)"/><text x="678.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.18%)</title><rect x="675" y="324" width="2" height="15" fill="rgb(242,123,6)"/><text x="678.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.18%)</title><rect x="675" y="340" width="2" height="15" fill="rgb(226,181,42)"/><text x="678.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (1 samples, 0.18%)</title><rect x="679" y="324" width="2" height="15" fill="rgb(243,95,21)"/><text x="682.00" y="334.50"></text></g><g><title>0x7fb711877103 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="679" y="340" width="2" height="15" fill="rgb(250,141,5)"/><text x="682.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.90%)</title><rect x="679" y="276" width="11" height="15" fill="rgb(243,157,46)"/><text x="682.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (5 samples, 0.90%)</title><rect x="679" y="292" width="11" height="15" fill="rgb(249,109,32)"/><text x="682.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (5 samples, 0.90%)</title><rect x="679" y="308" width="11" height="15" fill="rgb(227,109,27)"/><text x="682.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (4 samples, 0.72%)</title><rect x="681" y="324" width="9" height="15" fill="rgb(245,25,6)"/><text x="684.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (4 samples, 0.72%)</title><rect x="681" y="340" width="9" height="15" fill="rgb(217,1,50)"/><text x="684.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.72%)</title><rect x="681" y="356" width="9" height="15" fill="rgb(217,127,52)"/><text x="684.00" y="366.50"></text></g><g><title>sgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.72%)</title><rect x="681" y="372" width="9" height="15" fill="rgb(218,67,9)"/><text x="684.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.72%)</title><rect x="681" y="388" width="9" height="15" fill="rgb(212,168,19)"/><text x="684.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (28 samples, 5.05%)</title><rect x="666" y="196" width="60" height="15" fill="rgb(244,17,42)"/><text x="669.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (27 samples, 4.86%)</title><rect x="669" y="212" width="57" height="15" fill="rgb(245,88,33)"/><text x="672.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (23 samples, 4.14%)</title><rect x="677" y="228" width="49" height="15" fill="rgb(226,27,48)"/><text x="680.00" y="238.50">_run..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (22 samples, 3.96%)</title><rect x="679" y="244" width="47" height="15" fill="rgb(229,201,51)"/><text x="682.00" y="254.50">nump..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (22 samples, 3.96%)</title><rect x="679" y="260" width="47" height="15" fill="rgb(228,28,0)"/><text x="682.00" y="270.50">dot ..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 3.06%)</title><rect x="690" y="276" width="36" height="15" fill="rgb(213,37,1)"/><text x="693.00" y="286.50">sge..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (140 samples, 25.23%)</title><rect x="430" y="180" width="298" height="15" fill="rgb(248,79,0)"/><text x="433.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_nod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.18%)</title><rect x="726" y="196" width="2" height="15" fill="rgb(246,53,52)"/><text x="729.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.36%)</title><rect x="728" y="180" width="4" height="15" fill="rgb(206,159,0)"/><text x="731.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.36%)</title><rect x="732" y="180" width="5" height="15" fill="rgb(231,116,39)"/><text x="735.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (2 samples, 0.36%)</title><rect x="737" y="180" width="4" height="15" fill="rgb(226,131,31)"/><text x="740.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 0.72%)</title><rect x="741" y="180" width="8" height="15" fill="rgb(205,194,8)"/><text x="744.00" y="190.50"></text></g><g><title>0x7fb7118771ef (libc-2.29.so) (1 samples, 0.18%)</title><rect x="747" y="196" width="2" height="15" fill="rgb(225,168,46)"/><text x="750.00" y="206.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (157 samples, 28.29%)</title><rect x="420" y="164" width="334" height="15" fill="rgb(249,65,8)"/><text x="423.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.36%)</title><rect x="749" y="180" width="5" height="15" fill="rgb(249,47,8)"/><text x="752.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.18%)</title><rect x="754" y="164" width="2" height="15" fill="rgb(223,219,49)"/><text x="757.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.18%)</title><rect x="754" y="180" width="2" height="15" fill="rgb(206,7,17)"/><text x="757.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:45) (166 samples, 29.91%)</title><rect x="405" y="52" width="353" height="15" fill="rgb(207,154,25)"/><text x="408.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_5..</text></g><g><title>profile_pyrt (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:44) (166 samples, 29.91%)</title><rect x="405" y="68" width="353" height="15" fill="rgb(241,158,53)"/><text x="408.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_b_cl_10..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:29) (165 samples, 29.73%)</title><rect x="407" y="84" width="351" height="15" fill="rgb(251,5,20)"/><text x="410.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_1..</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:23) (160 samples, 28.83%)</title><rect x="418" y="100" width="340" height="15" fill="rgb(220,89,5)"/><text x="421.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1000_5..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (160 samples, 28.83%)</title><rect x="418" y="116" width="340" height="15" fill="rgb(217,210,20)"/><text x="421.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (160 samples, 28.83%)</title><rect x="418" y="132" width="340" height="15" fill="rgb(226,29,49)"/><text x="421.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (160 samples, 28.83%)</title><rect x="418" y="148" width="340" height="15" fill="rgb(246,130,23)"/><text x="421.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.18%)</title><rect x="756" y="164" width="2" height="15" fill="rgb(231,216,4)"/><text x="759.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.18%)</title><rect x="756" y="180" width="2" height="15" fill="rgb(254,96,22)"/><text x="759.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.18%)</title><rect x="756" y="196" width="2" height="15" fill="rgb(226,205,19)"/><text x="759.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.18%)</title><rect x="756" y="212" width="2" height="15" fill="rgb(212,203,48)"/><text x="759.00" y="222.50"></text></g><g><title>0x7fb711856f71 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="756" y="228" width="2" height="15" fill="rgb(223,145,33)"/><text x="759.00" y="238.50"></text></g><g><title>0x7fb6d1899ff9 (?) (1 samples, 0.18%)</title><rect x="760" y="212" width="2" height="15" fill="rgb(243,124,15)"/><text x="763.00" y="222.50"></text></g><g><title>0x7fb6d1894ef6 (?) (1 samples, 0.18%)</title><rect x="760" y="228" width="2" height="15" fill="rgb(237,194,7)"/><text x="763.00" y="238.50"></text></g><g><title>0x7fb6d1889962 (?) (1 samples, 0.18%)</title><rect x="760" y="244" width="2" height="15" fill="rgb(250,113,50)"/><text x="763.00" y="254.50"></text></g><g><title>0x7fb6d18bd7a7 (?) (1 samples, 0.18%)</title><rect x="760" y="260" width="2" height="15" fill="rgb(226,186,44)"/><text x="763.00" y="270.50"></text></g><g><title>0x7fb6d18bd379 (?) (1 samples, 0.18%)</title><rect x="760" y="276" width="2" height="15" fill="rgb(226,201,43)"/><text x="763.00" y="286.50"></text></g><g><title>0x7fb6d1d1b8b8 (?) (1 samples, 0.18%)</title><rect x="760" y="292" width="2" height="15" fill="rgb(240,69,53)"/><text x="763.00" y="302.50"></text></g><g><title>0x7fb6d1d19c7f (?) (1 samples, 0.18%)</title><rect x="760" y="308" width="2" height="15" fill="rgb(219,141,46)"/><text x="763.00" y="318.50"></text></g><g><title>0x7fb6d1d2c99c (?) (1 samples, 0.18%)</title><rect x="760" y="324" width="2" height="15" fill="rgb(250,72,18)"/><text x="763.00" y="334.50"></text></g><g><title>0x7fb6d1983413 (?) (1 samples, 0.18%)</title><rect x="760" y="340" width="2" height="15" fill="rgb(218,183,27)"/><text x="763.00" y="350.50"></text></g><g><title>0x7fb6d1982add (?) (1 samples, 0.18%)</title><rect x="760" y="356" width="2" height="15" fill="rgb(239,225,8)"/><text x="763.00" y="366.50"></text></g><g><title>0x7fb6d196a5e0 (?) (1 samples, 0.18%)</title><rect x="760" y="372" width="2" height="15" fill="rgb(231,52,39)"/><text x="763.00" y="382.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="762" y="340" width="2" height="15" fill="rgb(244,61,22)"/><text x="765.00" y="350.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.90%)</title><rect x="764" y="340" width="11" height="15" fill="rgb(235,31,17)"/><text x="767.00" y="350.50"></text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.90%)</title><rect x="764" y="356" width="11" height="15" fill="rgb(205,220,23)"/><text x="767.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (5 samples, 0.90%)</title><rect x="764" y="372" width="11" height="15" fill="rgb(205,198,1)"/><text x="767.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (5 samples, 0.90%)</title><rect x="764" y="388" width="11" height="15" fill="rgb(230,78,16)"/><text x="767.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (5 samples, 0.90%)</title><rect x="764" y="404" width="11" height="15" fill="rgb(213,107,29)"/><text x="767.00" y="414.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (5 samples, 0.90%)</title><rect x="764" y="420" width="11" height="15" fill="rgb(252,130,20)"/><text x="767.00" y="430.50"></text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (5 samples, 0.90%)</title><rect x="764" y="436" width="11" height="15" fill="rgb(241,90,44)"/><text x="767.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (5 samples, 0.90%)</title><rect x="764" y="452" width="11" height="15" fill="rgb(217,70,44)"/><text x="767.00" y="462.50"></text></g><g><title>mkl_blas_avx_sgemm_pst (onnxruntime/capi/libmklml_intel.so) (5 samples, 0.90%)</title><rect x="764" y="468" width="11" height="15" fill="rgb(224,122,30)"/><text x="767.00" y="478.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="775" y="340" width="2" height="15" fill="rgb(217,49,42)"/><text x="778.00" y="350.50"></text></g><g><title>0x7fb7119d89f4 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="775" y="356" width="2" height="15" fill="rgb(243,193,19)"/><text x="778.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.62%)</title><rect x="762" y="260" width="19" height="15" fill="rgb(236,137,32)"/><text x="765.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.62%)</title><rect x="762" y="276" width="19" height="15" fill="rgb(254,148,18)"/><text x="765.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.62%)</title><rect x="762" y="292" width="19" height="15" fill="rgb(222,60,23)"/><text x="765.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.62%)</title><rect x="762" y="308" width="19" height="15" fill="rgb(231,98,52)"/><text x="765.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.62%)</title><rect x="762" y="324" width="19" height="15" fill="rgb(229,139,23)"/><text x="765.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="777" y="340" width="4" height="15" fill="rgb(227,138,18)"/><text x="780.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.36%)</title><rect x="777" y="356" width="4" height="15" fill="rgb(233,219,36)"/><text x="780.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.36%)</title><rect x="777" y="372" width="4" height="15" fill="rgb(230,62,41)"/><text x="780.00" y="382.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="781" y="260" width="5" height="15" fill="rgb(239,118,26)"/><text x="784.00" y="270.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="783" y="276" width="3" height="15" fill="rgb(227,41,13)"/><text x="786.00" y="286.50"></text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:18) (14 samples, 2.52%)</title><rect x="758" y="100" width="30" height="15" fill="rgb(214,215,44)"/><text x="761.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (13 samples, 2.34%)</title><rect x="760" y="116" width="28" height="15" fill="rgb(205,203,21)"/><text x="763.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (13 samples, 2.34%)</title><rect x="760" y="132" width="28" height="15" fill="rgb(232,162,24)"/><text x="763.00" y="142.50">&lt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (13 samples, 2.34%)</title><rect x="760" y="148" width="28" height="15" fill="rgb(216,73,37)"/><text x="763.00" y="158.50">r..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (13 samples, 2.34%)</title><rect x="760" y="164" width="28" height="15" fill="rgb(224,203,29)"/><text x="763.00" y="174.50">_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (13 samples, 2.34%)</title><rect x="760" y="180" width="28" height="15" fill="rgb(254,218,14)"/><text x="763.00" y="190.50">r..</text></g><g><title>run (onnxruntime/capi/session.py:136) (13 samples, 2.34%)</title><rect x="760" y="196" width="28" height="15" fill="rgb(205,228,46)"/><text x="763.00" y="206.50">r..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.16%)</title><rect x="762" y="212" width="26" height="15" fill="rgb(251,18,53)"/><text x="765.00" y="222.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.16%)</title><rect x="762" y="228" width="26" height="15" fill="rgb(207,24,12)"/><text x="765.00" y="238.50">v..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.16%)</title><rect x="762" y="244" width="26" height="15" fill="rgb(217,177,51)"/><text x="765.00" y="254.50">o..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="786" y="260" width="2" height="15" fill="rgb(251,136,48)"/><text x="789.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="786" y="276" width="2" height="15" fill="rgb(237,202,17)"/><text x="789.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="786" y="292" width="2" height="15" fill="rgb(227,153,46)"/><text x="789.00" y="302.50"></text></g><g><title>0x7fb711856a51 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="786" y="308" width="2" height="15" fill="rgb(219,116,3)"/><text x="789.00" y="318.50"></text></g><g><title>0x7fb711855bc6 (libc-2.29.so) (4 samples, 0.72%)</title><rect x="822" y="132" width="8" height="15" fill="rgb(213,21,52)"/><text x="825.00" y="142.50"></text></g><g><title>0x7fb711855c20 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="830" y="132" width="2" height="15" fill="rgb(238,97,33)"/><text x="833.00" y="142.50"></text></g><g><title>0x7fb711855c28 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="832" y="132" width="2" height="15" fill="rgb(250,124,16)"/><text x="835.00" y="142.50"></text></g><g><title>0x7fb711855c51 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="834" y="132" width="3" height="15" fill="rgb(215,4,31)"/><text x="837.00" y="142.50"></text></g><g><title>0x7fb711855c5a (libc-2.29.so) (2 samples, 0.36%)</title><rect x="837" y="132" width="4" height="15" fill="rgb(209,76,47)"/><text x="840.00" y="142.50"></text></g><g><title>0x7fb711855c6e (libc-2.29.so) (1 samples, 0.18%)</title><rect x="841" y="132" width="2" height="15" fill="rgb(247,198,33)"/><text x="844.00" y="142.50"></text></g><g><title>0x7fb711856eb0 (libc-2.29.so) (11 samples, 1.98%)</title><rect x="822" y="116" width="23" height="15" fill="rgb(222,76,19)"/><text x="825.00" y="126.50">0..</text></g><g><title>0x7fb711855c73 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="843" y="132" width="2" height="15" fill="rgb(209,205,36)"/><text x="846.00" y="142.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.18%)</title><rect x="847" y="196" width="2" height="15" fill="rgb(248,123,48)"/><text x="850.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.18%)</title><rect x="849" y="196" width="2" height="15" fill="rgb(222,167,39)"/><text x="852.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.18%)</title><rect x="849" y="212" width="2" height="15" fill="rgb(248,66,3)"/><text x="852.00" y="222.50"></text></g><g><title>0x7fb711856cf0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="856" y="260" width="2" height="15" fill="rgb(212,159,50)"/><text x="859.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="858" y="292" width="2" height="15" fill="rgb(232,184,43)"/><text x="861.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="858" y="308" width="2" height="15" fill="rgb(252,46,34)"/><text x="861.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="858" y="324" width="2" height="15" fill="rgb(242,194,50)"/><text x="861.00" y="334.50"></text></g><g><title>0x7fb711857b68 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="858" y="340" width="2" height="15" fill="rgb(243,33,15)"/><text x="861.00" y="350.50"></text></g><g><title>onnxruntime::Add&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="860" y="340" width="4" height="15" fill="rgb(237,68,21)"/><text x="863.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="860" y="356" width="4" height="15" fill="rgb(222,207,46)"/><text x="863.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="860" y="372" width="4" height="15" fill="rgb(244,0,31)"/><text x="863.00" y="382.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.72%)</title><rect x="864" y="340" width="9" height="15" fill="rgb(229,39,16)"/><text x="867.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="866" y="356" width="7" height="15" fill="rgb(246,30,6)"/><text x="869.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.98%)</title><rect x="873" y="340" width="23" height="15" fill="rgb(219,111,23)"/><text x="876.00" y="350.50">o..</text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="896" y="340" width="2" height="15" fill="rgb(208,5,34)"/><text x="899.00" y="350.50"></text></g><g><title>onnxruntime::Cast&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="898" y="340" width="2" height="15" fill="rgb(230,51,2)"/><text x="901.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="898" y="356" width="2" height="15" fill="rgb(247,205,27)"/><text x="901.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="898" y="372" width="2" height="15" fill="rgb(233,115,0)"/><text x="901.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="898" y="388" width="2" height="15" fill="rgb(231,86,53)"/><text x="901.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="898" y="404" width="2" height="15" fill="rgb(243,40,18)"/><text x="901.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="898" y="420" width="2" height="15" fill="rgb(250,207,54)"/><text x="901.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="898" y="436" width="2" height="15" fill="rgb(227,226,6)"/><text x="901.00" y="446.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="898" y="452" width="2" height="15" fill="rgb(254,109,45)"/><text x="901.00" y="462.50"></text></g><g><title>onnxruntime::Exp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="900" y="340" width="7" height="15" fill="rgb(216,146,29)"/><text x="903.00" y="350.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.90%)</title><rect x="907" y="340" width="10" height="15" fill="rgb(254,4,43)"/><text x="910.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.90%)</title><rect x="907" y="356" width="10" height="15" fill="rgb(213,66,11)"/><text x="910.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="917" y="340" width="2" height="15" fill="rgb(219,60,48)"/><text x="920.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="917" y="356" width="2" height="15" fill="rgb(238,214,33)"/><text x="920.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="917" y="372" width="2" height="15" fill="rgb(232,68,46)"/><text x="920.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="917" y="388" width="2" height="15" fill="rgb(252,114,27)"/><text x="920.00" y="398.50"></text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (22 samples, 3.96%)</title><rect x="919" y="436" width="47" height="15" fill="rgb(216,15,18)"/><text x="922.00" y="446.50">mkl_..</text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (22 samples, 3.96%)</title><rect x="919" y="452" width="47" height="15" fill="rgb(253,51,51)"/><text x="922.00" y="462.50">mkl_..</text></g><g><title>mkl_blas_avx_sgemm_pst (onnxruntime/capi/libmklml_intel.so) (22 samples, 3.96%)</title><rect x="919" y="468" width="47" height="15" fill="rgb(212,76,49)"/><text x="922.00" y="478.50">mkl_..</text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 4.14%)</title><rect x="919" y="340" width="49" height="15" fill="rgb(247,6,42)"/><text x="922.00" y="350.50">onnx..</text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 4.14%)</title><rect x="919" y="356" width="49" height="15" fill="rgb(252,151,39)"/><text x="922.00" y="366.50">onnx..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (23 samples, 4.14%)</title><rect x="919" y="372" width="49" height="15" fill="rgb(208,201,46)"/><text x="922.00" y="382.50">cbla..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (23 samples, 4.14%)</title><rect x="919" y="388" width="49" height="15" fill="rgb(250,56,38)"/><text x="922.00" y="398.50">sgem..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (23 samples, 4.14%)</title><rect x="919" y="404" width="49" height="15" fill="rgb(252,42,26)"/><text x="922.00" y="414.50">mkl_..</text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (23 samples, 4.14%)</title><rect x="919" y="420" width="49" height="15" fill="rgb(250,81,35)"/><text x="922.00" y="430.50">mkl_..</text></g><g><title>mkl_serv_domain_get_max_threads (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.18%)</title><rect x="966" y="436" width="2" height="15" fill="rgb(223,69,31)"/><text x="969.00" y="446.50"></text></g><g><title>0x7fb7119d5e00 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="973" y="356" width="2" height="15" fill="rgb(205,192,33)"/><text x="976.00" y="366.50"></text></g><g><title>0x7fb7119d5e1c (libm-2.29.so) (2 samples, 0.36%)</title><rect x="975" y="356" width="4" height="15" fill="rgb(244,165,32)"/><text x="978.00" y="366.50"></text></g><g><title>0x7fb7119d89a7 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="979" y="356" width="2" height="15" fill="rgb(244,48,19)"/><text x="982.00" y="366.50"></text></g><g><title>0x7fb7119d89c8 (libm-2.29.so) (2 samples, 0.36%)</title><rect x="981" y="356" width="4" height="15" fill="rgb(242,13,17)"/><text x="984.00" y="366.50"></text></g><g><title>0x7fb7119d89e0 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="985" y="356" width="3" height="15" fill="rgb(238,108,0)"/><text x="988.00" y="366.50"></text></g><g><title>0x7fb7119d89f4 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="988" y="356" width="2" height="15" fill="rgb(225,160,26)"/><text x="991.00" y="366.50"></text></g><g><title>0x7fb7119d89f8 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="990" y="356" width="2" height="15" fill="rgb(231,122,5)"/><text x="993.00" y="366.50"></text></g><g><title>0x7fb7119d8a15 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="992" y="356" width="2" height="15" fill="rgb(247,114,21)"/><text x="995.00" y="366.50"></text></g><g><title>0x7fb7119d8a1d (libm-2.29.so) (1 samples, 0.18%)</title><rect x="994" y="356" width="2" height="15" fill="rgb(223,132,31)"/><text x="997.00" y="366.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.88%)</title><rect x="968" y="340" width="34" height="15" fill="rgb(245,196,54)"/><text x="971.00" y="350.50">on..</text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="996" y="356" width="6" height="15" fill="rgb(224,51,12)"/><text x="999.00" y="366.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="1002" y="340" width="5" height="15" fill="rgb(235,84,36)"/><text x="1005.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="1002" y="356" width="5" height="15" fill="rgb(216,165,20)"/><text x="1005.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="1002" y="372" width="5" height="15" fill="rgb(229,101,53)"/><text x="1005.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="1002" y="388" width="5" height="15" fill="rgb(208,190,25)"/><text x="1005.00" y="398.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.08%)</title><rect x="1007" y="372" width="12" height="15" fill="rgb(226,171,4)"/><text x="1010.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.72%)</title><rect x="1011" y="388" width="8" height="15" fill="rgb(214,120,30)"/><text x="1014.00" y="398.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.26%)</title><rect x="1007" y="340" width="15" height="15" fill="rgb(207,69,10)"/><text x="1010.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.26%)</title><rect x="1007" y="356" width="15" height="15" fill="rgb(242,6,38)"/><text x="1010.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1019" y="372" width="3" height="15" fill="rgb(253,229,35)"/><text x="1022.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1019" y="388" width="3" height="15" fill="rgb(209,146,42)"/><text x="1022.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1019" y="404" width="3" height="15" fill="rgb(209,1,12)"/><text x="1022.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1019" y="420" width="3" height="15" fill="rgb(227,140,2)"/><text x="1022.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="1022" y="340" width="6" height="15" fill="rgb(239,229,47)"/><text x="1025.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1026" y="356" width="2" height="15" fill="rgb(241,41,13)"/><text x="1029.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1026" y="372" width="2" height="15" fill="rgb(253,58,9)"/><text x="1029.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1026" y="388" width="2" height="15" fill="rgb(216,119,46)"/><text x="1029.00" y="398.50"></text></g><g><title>0x7fb711857b12 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1098" y="388" width="2" height="15" fill="rgb(230,146,54)"/><text x="1101.00" y="398.50"></text></g><g><title>0x7fb711857b24 (libc-2.29.so) (2 samples, 0.36%)</title><rect x="1100" y="388" width="4" height="15" fill="rgb(254,32,11)"/><text x="1103.00" y="398.50"></text></g><g><title>0x7fb711857b76 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1104" y="388" width="3" height="15" fill="rgb(240,154,11)"/><text x="1107.00" y="398.50"></text></g><g><title>0x7fb711858040 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1107" y="388" width="2" height="15" fill="rgb(234,94,38)"/><text x="1110.00" y="398.50"></text></g><g><title>0x7fb711858368 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1109" y="388" width="2" height="15" fill="rgb(208,228,17)"/><text x="1112.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (30 samples, 5.41%)</title><rect x="1049" y="356" width="64" height="15" fill="rgb(244,106,15)"/><text x="1052.00" y="366.50">operato..</text></g><g><title>malloc (libc-2.29.so) (28 samples, 5.05%)</title><rect x="1053" y="372" width="60" height="15" fill="rgb(213,127,26)"/><text x="1056.00" y="382.50">malloc..</text></g><g><title>0x7fb7118583ae (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1111" y="388" width="2" height="15" fill="rgb(228,50,0)"/><text x="1114.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (123 samples, 22.16%)</title><rect x="858" y="276" width="261" height="15" fill="rgb(252,56,50)"/><text x="861.00" y="286.50">onnxruntime::InferenceSession::Run..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (122 samples, 21.98%)</title><rect x="860" y="292" width="259" height="15" fill="rgb(219,54,14)"/><text x="863.00" y="302.50">onnxruntime::utils::ExecuteGraph (..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (122 samples, 21.98%)</title><rect x="860" y="308" width="259" height="15" fill="rgb(225,120,9)"/><text x="863.00" y="318.50">onnxruntime::utils::ExecuteGraphIm..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (122 samples, 21.98%)</title><rect x="860" y="324" width="259" height="15" fill="rgb(247,41,38)"/><text x="863.00" y="334.50">onnxruntime::SequentialExecutor::E..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (43 samples, 7.75%)</title><rect x="1028" y="340" width="91" height="15" fill="rgb(222,215,46)"/><text x="1031.00" y="350.50">onnxruntim..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (3 samples, 0.54%)</title><rect x="1113" y="356" width="6" height="15" fill="rgb(252,207,31)"/><text x="1116.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (124 samples, 22.34%)</title><rect x="858" y="260" width="263" height="15" fill="rgb(227,221,53)"/><text x="861.00" y="270.50">onnxruntime::InferenceSession::Run ..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1119" y="276" width="2" height="15" fill="rgb(246,91,29)"/><text x="1122.00" y="286.50"></text></g><g><title>0x7fb6d1861570 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1147" y="276" width="2" height="15" fill="rgb(220,227,38)"/><text x="1150.00" y="286.50"></text></g><g><title>0x7fb6d1861870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="1149" y="276" width="2" height="15" fill="rgb(243,214,29)"/><text x="1152.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.62%)</title><rect x="1151" y="276" width="19" height="15" fill="rgb(252,32,48)"/><text x="1154.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 4.50%)</title><rect x="1121" y="260" width="54" height="15" fill="rgb(231,194,35)"/><text x="1124.00" y="270.50">pybin..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.36%)</title><rect x="1170" y="276" width="5" height="15" fill="rgb(231,95,45)"/><text x="1173.00" y="286.50"></text></g><g><title>0x7fb7118569ff (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1175" y="292" width="2" height="15" fill="rgb(207,155,8)"/><text x="1178.00" y="302.50"></text></g><g><title>0x7fb711856cf0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1177" y="292" width="2" height="15" fill="rgb(247,61,18)"/><text x="1180.00" y="302.50"></text></g><g><title>0x7fb711856d07 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1179" y="292" width="2" height="15" fill="rgb(236,37,18)"/><text x="1182.00" y="302.50"></text></g><g><title>0x7fb711856d07 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1181" y="308" width="2" height="15" fill="rgb(233,225,23)"/><text x="1184.00" y="318.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:52) (201 samples, 36.22%)</title><rect x="758" y="52" width="427" height="15" fill="rgb(226,130,23)"/><text x="761.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_b_cl_1000_50_12_float_..</text></g><g><title>profile_ort (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:51) (201 samples, 36.22%)</title><rect x="758" y="68" width="427" height="15" fill="rgb(246,28,52)"/><text x="761.00" y="78.50">profile_ort (bench_BernoulliNB_default_b_cl_1000_50_12_flo..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:29) (201 samples, 36.22%)</title><rect x="758" y="84" width="427" height="15" fill="rgb(252,132,15)"/><text x="761.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_1000_50_12_f..</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1000_50_12_float_.py:23) (187 samples, 33.69%)</title><rect x="788" y="100" width="397" height="15" fill="rgb(234,118,16)"/><text x="791.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1000_50_12_flo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (160 samples, 28.83%)</title><rect x="845" y="116" width="340" height="15" fill="rgb(219,8,8)"/><text x="848.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (160 samples, 28.83%)</title><rect x="845" y="132" width="340" height="15" fill="rgb(210,174,16)"/><text x="848.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (160 samples, 28.83%)</title><rect x="845" y="148" width="340" height="15" fill="rgb(239,57,8)"/><text x="848.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (160 samples, 28.83%)</title><rect x="845" y="164" width="340" height="15" fill="rgb(220,53,2)"/><text x="848.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (159 samples, 28.65%)</title><rect x="847" y="180" width="338" height="15" fill="rgb(222,88,8)"/><text x="850.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (157 samples, 28.29%)</title><rect x="851" y="196" width="334" height="15" fill="rgb(249,209,5)"/><text x="854.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (156 samples, 28.11%)</title><rect x="854" y="212" width="331" height="15" fill="rgb(244,200,32)"/><text x="857.00" y="222.50">pybind11::cpp_function::dispatcher (onnxrunt..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (156 samples, 28.11%)</title><rect x="854" y="228" width="331" height="15" fill="rgb(211,12,50)"/><text x="857.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnx..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (156 samples, 28.11%)</title><rect x="854" y="244" width="331" height="15" fill="rgb(227,43,17)"/><text x="857.00" y="254.50">onnxruntime::python::addObjectMethods(pybind..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.90%)</title><rect x="1175" y="260" width="10" height="15" fill="rgb(206,172,51)"/><text x="1178.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.90%)</title><rect x="1175" y="276" width="10" height="15" fill="rgb(230,21,50)"/><text x="1178.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="1181" y="292" width="4" height="15" fill="rgb(221,96,40)"/><text x="1184.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1183" y="308" width="2" height="15" fill="rgb(243,47,9)"/><text x="1186.00" y="318.50"></text></g><g><title>pybind11_object_dealloc (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1185" y="52" width="2" height="15" fill="rgb(251,73,8)"/><text x="1188.00" y="62.50"></text></g><g><title>pybind11::detail::clear_instance (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1185" y="68" width="2" height="15" fill="rgb(243,63,26)"/><text x="1188.00" y="78.50"></text></g><g><title>pybind11::class_&lt;onnx::OpSchema, &gt;::dealloc (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1185" y="84" width="2" height="15" fill="rgb(244,125,29)"/><text x="1188.00" y="94.50"></text></g><g><title>onnx::OpSchema::~OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1185" y="100" width="2" height="15" fill="rgb(225,204,52)"/><text x="1188.00" y="110.50"></text></g><g><title>0x7fb711856cf0 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1185" y="116" width="2" height="15" fill="rgb(248,187,32)"/><text x="1188.00" y="126.50"></text></g><g><title>all (555 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(242,133,48)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.18%)</title><rect x="1187" y="52" width="3" height="15" fill="rgb(205,216,32)"/><text x="1190.00" y="62.50"></text></g></g></svg>