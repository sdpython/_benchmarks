<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.40%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(210,46,51)"/><text x="13.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.40%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(244,188,3)"/><text x="13.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (1 samples, 0.40%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(213,132,6)"/><text x="13.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(227,95,28)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(210,46,39)"/><text x="13.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(243,98,49)"/><text x="13.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(207,29,13)"/><text x="13.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(232,5,46)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:8) (1 samples, 0.40%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(248,86,11)"/><text x="13.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(221,212,2)"/><text x="13.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(212,175,32)"/><text x="13.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(241,147,1)"/><text x="13.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(253,54,12)"/><text x="13.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(215,208,2)"/><text x="13.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py:711) (1 samples, 0.40%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(247,6,54)"/><text x="13.00" y="334.50"></text></g><g><title>Dataset (lightgbm/basic.py:1571) (1 samples, 0.40%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(209,138,20)"/><text x="13.00" y="350.50"></text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:28) (2 samples, 0.80%)</title><rect x="10" y="84" width="9" height="15" fill="rgb(229,183,5)"/><text x="13.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.40%)</title><rect x="14" y="100" width="5" height="15" fill="rgb(239,217,21)"/><text x="17.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.40%)</title><rect x="14" y="116" width="5" height="15" fill="rgb(249,137,12)"/><text x="17.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.40%)</title><rect x="14" y="132" width="5" height="15" fill="rgb(254,112,37)"/><text x="17.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.40%)</title><rect x="14" y="148" width="5" height="15" fill="rgb(254,134,18)"/><text x="17.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.40%)</title><rect x="14" y="164" width="5" height="15" fill="rgb(234,86,14)"/><text x="17.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.40%)</title><rect x="14" y="180" width="5" height="15" fill="rgb(210,145,10)"/><text x="17.00" y="190.50"></text></g><g><title>convert_sklearn_svm (mlprodict/onnx_conv/sklconv/svm_converters.py:100) (1 samples, 0.40%)</title><rect x="14" y="196" width="5" height="15" fill="rgb(239,162,54)"/><text x="17.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.40%)</title><rect x="14" y="212" width="5" height="15" fill="rgb(206,51,2)"/><text x="17.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.40%)</title><rect x="14" y="228" width="5" height="15" fill="rgb(205,12,25)"/><text x="17.00" y="238.50"></text></g><g><title>0x7f53f07244d0 (?) (1 samples, 0.40%)</title><rect x="14" y="244" width="5" height="15" fill="rgb(240,224,7)"/><text x="17.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.40%)</title><rect x="14" y="260" width="5" height="15" fill="rgb(211,7,44)"/><text x="17.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.40%)</title><rect x="14" y="276" width="5" height="15" fill="rgb(243,60,5)"/><text x="17.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.40%)</title><rect x="14" y="292" width="5" height="15" fill="rgb(215,71,48)"/><text x="17.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py:204) (1 samples, 0.40%)</title><rect x="14" y="308" width="5" height="15" fill="rgb(224,113,37)"/><text x="17.00" y="318.50"></text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:18) (1 samples, 0.40%)</title><rect x="19" y="100" width="5" height="15" fill="rgb(224,151,43)"/><text x="22.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.40%)</title><rect x="19" y="116" width="5" height="15" fill="rgb(240,3,44)"/><text x="22.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (1 samples, 0.40%)</title><rect x="19" y="132" width="5" height="15" fill="rgb(233,229,26)"/><text x="22.00" y="142.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (1 samples, 0.40%)</title><rect x="19" y="148" width="5" height="15" fill="rgb(243,61,27)"/><text x="22.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (1 samples, 0.40%)</title><rect x="19" y="164" width="5" height="15" fill="rgb(248,161,30)"/><text x="22.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.40%)</title><rect x="19" y="180" width="5" height="15" fill="rgb(232,142,42)"/><text x="22.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.40%)</title><rect x="19" y="196" width="5" height="15" fill="rgb(231,47,41)"/><text x="22.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.80%)</title><rect x="52" y="180" width="9" height="15" fill="rgb(206,119,38)"/><text x="55.00" y="190.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.80%)</title><rect x="52" y="196" width="9" height="15" fill="rgb(239,25,43)"/><text x="55.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.40%)</title><rect x="61" y="180" width="5" height="15" fill="rgb(207,71,8)"/><text x="64.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.40%)</title><rect x="113" y="212" width="5" height="15" fill="rgb(221,217,27)"/><text x="116.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (11 samples, 4.38%)</title><rect x="75" y="196" width="52" height="15" fill="rgb(238,120,53)"/><text x="78.00" y="206.50">&lt;list..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.80%)</title><rect x="118" y="212" width="9" height="15" fill="rgb(253,106,20)"/><text x="121.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (19 samples, 7.57%)</title><rect x="47" y="164" width="89" height="15" fill="rgb(213,87,18)"/><text x="50.00" y="174.50">_validate_..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (15 samples, 5.98%)</title><rect x="66" y="180" width="70" height="15" fill="rgb(215,210,20)"/><text x="69.00" y="190.50">check_i..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.80%)</title><rect x="127" y="196" width="9" height="15" fill="rgb(234,185,0)"/><text x="130.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.80%)</title><rect x="127" y="212" width="9" height="15" fill="rgb(221,105,24)"/><text x="130.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:446) (1 samples, 0.40%)</title><rect x="136" y="164" width="5" height="15" fill="rgb(211,136,14)"/><text x="139.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.40%)</title><rect x="141" y="180" width="5" height="15" fill="rgb(247,115,28)"/><text x="144.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (2 samples, 0.80%)</title><rect x="146" y="180" width="9" height="15" fill="rgb(251,68,43)"/><text x="149.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (3 samples, 1.20%)</title><rect x="155" y="180" width="14" height="15" fill="rgb(209,162,42)"/><text x="158.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.80%)</title><rect x="160" y="196" width="9" height="15" fill="rgb(248,193,51)"/><text x="163.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.80%)</title><rect x="174" y="196" width="9" height="15" fill="rgb(226,181,29)"/><text x="177.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:480) (2 samples, 0.80%)</title><rect x="183" y="196" width="10" height="15" fill="rgb(209,66,19)"/><text x="186.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (7 samples, 2.79%)</title><rect x="169" y="180" width="33" height="15" fill="rgb(243,58,33)"/><text x="172.00" y="190.50">ch..</text></g><g><title>__init__ (warnings.py:461) (2 samples, 0.80%)</title><rect x="193" y="196" width="9" height="15" fill="rgb(243,38,15)"/><text x="196.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 1.20%)</title><rect x="212" y="212" width="14" height="15" fill="rgb(236,157,46)"/><text x="215.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 2.39%)</title><rect x="202" y="180" width="28" height="15" fill="rgb(254,125,23)"/><text x="205.00" y="190.50">c..</text></g><g><title>simplefilter (warnings.py:179) (5 samples, 1.99%)</title><rect x="207" y="196" width="23" height="15" fill="rgb(218,204,8)"/><text x="210.00" y="206.50">s..</text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.40%)</title><rect x="226" y="212" width="4" height="15" fill="rgb(206,183,20)"/><text x="229.00" y="222.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.40%)</title><rect x="235" y="228" width="5" height="15" fill="rgb(231,225,16)"/><text x="238.00" y="238.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4593) (1 samples, 0.40%)</title><rect x="235" y="244" width="5" height="15" fill="rgb(240,4,1)"/><text x="238.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (3 samples, 1.20%)</title><rect x="230" y="180" width="15" height="15" fill="rgb(230,79,2)"/><text x="233.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (2 samples, 0.80%)</title><rect x="235" y="196" width="10" height="15" fill="rgb(234,98,49)"/><text x="238.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (2 samples, 0.80%)</title><rect x="235" y="212" width="10" height="15" fill="rgb(214,141,2)"/><text x="238.00" y="222.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.40%)</title><rect x="240" y="228" width="5" height="15" fill="rgb(210,121,14)"/><text x="243.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4478) (1 samples, 0.40%)</title><rect x="240" y="244" width="5" height="15" fill="rgb(228,176,5)"/><text x="243.00" y="254.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:319) (1 samples, 0.40%)</title><rect x="249" y="228" width="5" height="15" fill="rgb(233,15,52)"/><text x="252.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (3 samples, 1.20%)</title><rect x="245" y="212" width="14" height="15" fill="rgb(215,220,24)"/><text x="248.00" y="222.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c:553) (1 samples, 0.40%)</title><rect x="254" y="228" width="5" height="15" fill="rgb(209,136,26)"/><text x="257.00" y="238.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.40%)</title><rect x="259" y="292" width="4" height="15" fill="rgb(222,193,40)"/><text x="262.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="259" y="308" width="4" height="15" fill="rgb(208,134,53)"/><text x="262.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (5 samples, 1.99%)</title><rect x="245" y="180" width="23" height="15" fill="rgb(238,120,42)"/><text x="248.00" y="190.50">c..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (5 samples, 1.99%)</title><rect x="245" y="196" width="23" height="15" fill="rgb(254,196,13)"/><text x="248.00" y="206.50">a..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.80%)</title><rect x="259" y="212" width="9" height="15" fill="rgb(209,108,32)"/><text x="262.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.80%)</title><rect x="259" y="228" width="9" height="15" fill="rgb(224,110,46)"/><text x="262.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (2 samples, 0.80%)</title><rect x="259" y="244" width="9" height="15" fill="rgb(248,14,30)"/><text x="262.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (2 samples, 0.80%)</title><rect x="259" y="260" width="9" height="15" fill="rgb(242,135,2)"/><text x="262.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.80%)</title><rect x="259" y="276" width="9" height="15" fill="rgb(231,80,4)"/><text x="262.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.40%)</title><rect x="263" y="292" width="5" height="15" fill="rgb(235,164,37)"/><text x="266.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3974) (1 samples, 0.40%)</title><rect x="263" y="308" width="5" height="15" fill="rgb(235,185,2)"/><text x="266.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 1.20%)</title><rect x="268" y="180" width="14" height="15" fill="rgb(221,90,36)"/><text x="271.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.40%)</title><rect x="277" y="196" width="5" height="15" fill="rgb(240,198,6)"/><text x="280.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (2 samples, 0.80%)</title><rect x="282" y="180" width="10" height="15" fill="rgb(212,205,49)"/><text x="285.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:561) (1 samples, 0.40%)</title><rect x="292" y="180" width="4" height="15" fill="rgb(213,226,17)"/><text x="295.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.40%)</title><rect x="310" y="212" width="5" height="15" fill="rgb(218,19,29)"/><text x="313.00" y="222.50"></text></g><g><title>0x7f54023d0e7a (libc-2.29.so) (1 samples, 0.40%)</title><rect x="310" y="228" width="5" height="15" fill="rgb(213,192,49)"/><text x="313.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.40%)</title><rect x="315" y="212" width="5" height="15" fill="rgb(241,68,16)"/><text x="318.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (6 samples, 2.39%)</title><rect x="296" y="180" width="28" height="15" fill="rgb(218,87,34)"/><text x="299.00" y="190.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 2.39%)</title><rect x="296" y="196" width="28" height="15" fill="rgb(234,180,42)"/><text x="299.00" y="206.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.40%)</title><rect x="320" y="212" width="4" height="15" fill="rgb(240,14,35)"/><text x="323.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (4 samples, 1.59%)</title><rect x="324" y="196" width="19" height="15" fill="rgb(242,163,21)"/><text x="327.00" y="206.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.40%)</title><rect x="339" y="212" width="4" height="15" fill="rgb(243,100,23)"/><text x="342.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.40%)</title><rect x="343" y="196" width="5" height="15" fill="rgb(233,42,28)"/><text x="346.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (2 samples, 0.80%)</title><rect x="348" y="196" width="9" height="15" fill="rgb(205,220,49)"/><text x="351.00" y="206.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (55 samples, 21.91%)</title><rect x="141" y="164" width="259" height="15" fill="rgb(245,9,50)"/><text x="144.00" y="174.50">_validate_for_predict (sklearn/svm..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (16 samples, 6.37%)</title><rect x="324" y="180" width="76" height="15" fill="rgb(225,186,40)"/><text x="327.00" y="190.50">check_ar..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (9 samples, 3.59%)</title><rect x="357" y="196" width="43" height="15" fill="rgb(212,99,24)"/><text x="360.00" y="206.50">_num..</text></g><g><title>__instancecheck__ (abc.py:139) (8 samples, 3.19%)</title><rect x="362" y="212" width="38" height="15" fill="rgb(237,72,12)"/><text x="365.00" y="222.50">__i..</text></g><g><title>__subclasscheck__ (abc.py:143) (5 samples, 1.99%)</title><rect x="376" y="228" width="24" height="15" fill="rgb(211,119,40)"/><text x="379.00" y="238.50">_..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (76 samples, 30.28%)</title><rect x="47" y="148" width="357" height="15" fill="rgb(222,155,47)"/><text x="50.00" y="158.50">_predict_proba (sklearn/svm/_base.py:640)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:457) (1 samples, 0.40%)</title><rect x="400" y="164" width="4" height="15" fill="rgb(249,78,0)"/><text x="403.00" y="174.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:645) (2 samples, 0.80%)</title><rect x="404" y="148" width="10" height="15" fill="rgb(217,174,44)"/><text x="407.00" y="158.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:688) (2 samples, 0.80%)</title><rect x="419" y="164" width="9" height="15" fill="rgb(208,82,0)"/><text x="422.00" y="174.50"></text></g><g><title>_buffer_get_info (buffer.c:679) (1 samples, 0.40%)</title><rect x="433" y="244" width="4" height="15" fill="rgb(234,113,51)"/><text x="436.00" y="254.50"></text></g><g><title>0x7f53dcea8d0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.80%)</title><rect x="433" y="196" width="9" height="15" fill="rgb(214,195,54)"/><text x="436.00" y="206.50"></text></g><g><title>0x7f53dce92e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.80%)</title><rect x="433" y="212" width="9" height="15" fill="rgb(246,117,14)"/><text x="436.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.80%)</title><rect x="433" y="228" width="9" height="15" fill="rgb(253,145,8)"/><text x="436.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:694) (1 samples, 0.40%)</title><rect x="437" y="244" width="5" height="15" fill="rgb(206,17,35)"/><text x="440.00" y="254.50"></text></g><g><title>0x7f53dcea8de1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="442" y="196" width="5" height="15" fill="rgb(212,159,25)"/><text x="445.00" y="206.50"></text></g><g><title>0x7f53dce92634 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="442" y="212" width="5" height="15" fill="rgb(206,200,40)"/><text x="445.00" y="222.50"></text></g><g><title>0x7f53dcea8f5c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.80%)</title><rect x="447" y="196" width="9" height="15" fill="rgb(239,185,37)"/><text x="450.00" y="206.50"></text></g><g><title>0x7f53dce92e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.80%)</title><rect x="447" y="212" width="9" height="15" fill="rgb(232,120,52)"/><text x="450.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.80%)</title><rect x="447" y="228" width="9" height="15" fill="rgb(208,103,23)"/><text x="450.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (2 samples, 0.80%)</title><rect x="447" y="244" width="9" height="15" fill="rgb(214,101,24)"/><text x="450.00" y="254.50"></text></g><g><title>0x7f53dcea8f9b (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="456" y="196" width="5" height="15" fill="rgb(205,59,52)"/><text x="459.00" y="206.50"></text></g><g><title>0x7f53dce92f13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="456" y="212" width="5" height="15" fill="rgb(219,20,10)"/><text x="459.00" y="222.50"></text></g><g><title>0x7f53dce9233c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="456" y="228" width="5" height="15" fill="rgb(229,100,2)"/><text x="459.00" y="238.50"></text></g><g><title>0x7f53dce91e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="456" y="244" width="5" height="15" fill="rgb(245,178,32)"/><text x="459.00" y="254.50"></text></g><g><title>0x7f53dcea8ff0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="461" y="196" width="5" height="15" fill="rgb(227,38,18)"/><text x="464.00" y="206.50"></text></g><g><title>0x7f53dcea90a2 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="466" y="196" width="4" height="15" fill="rgb(218,206,28)"/><text x="469.00" y="206.50"></text></g><g><title>0x7f53dcea90a7 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="470" y="196" width="5" height="15" fill="rgb(234,33,42)"/><text x="473.00" y="206.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.40%)</title><rect x="484" y="276" width="5" height="15" fill="rgb(215,223,49)"/><text x="487.00" y="286.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (2 samples, 0.80%)</title><rect x="484" y="228" width="10" height="15" fill="rgb(206,136,34)"/><text x="487.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (2 samples, 0.80%)</title><rect x="484" y="244" width="10" height="15" fill="rgb(219,26,6)"/><text x="487.00" y="254.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (2 samples, 0.80%)</title><rect x="484" y="260" width="10" height="15" fill="rgb(209,174,48)"/><text x="487.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.40%)</title><rect x="489" y="276" width="5" height="15" fill="rgb(253,48,51)"/><text x="492.00" y="286.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (5 samples, 1.99%)</title><rect x="475" y="212" width="23" height="15" fill="rgb(240,208,16)"/><text x="478.00" y="222.50">a..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.40%)</title><rect x="494" y="228" width="4" height="15" fill="rgb(239,44,53)"/><text x="497.00" y="238.50"></text></g><g><title>0x7f53dcea912f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.39%)</title><rect x="475" y="196" width="28" height="15" fill="rgb(206,68,13)"/><text x="478.00" y="206.50">0..</text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.40%)</title><rect x="498" y="212" width="5" height="15" fill="rgb(245,75,24)"/><text x="501.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (1 samples, 0.40%)</title><rect x="498" y="228" width="5" height="15" fill="rgb(220,198,41)"/><text x="501.00" y="238.50"></text></g><g><title>_calc_length (ctors.c:3251) (1 samples, 0.40%)</title><rect x="498" y="244" width="5" height="15" fill="rgb(212,10,50)"/><text x="501.00" y="254.50"></text></g><g><title>0x7f53dcea9237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="503" y="196" width="5" height="15" fill="rgb(206,57,46)"/><text x="506.00" y="206.50"></text></g><g><title>0x7f53dce93ce3 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="503" y="212" width="5" height="15" fill="rgb(251,202,6)"/><text x="506.00" y="222.50"></text></g><g><title>0x7f53dcea92c5 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="508" y="196" width="5" height="15" fill="rgb(216,83,44)"/><text x="511.00" y="206.50"></text></g><g><title>get_nr (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="508" y="212" width="5" height="15" fill="rgb(210,11,41)"/><text x="511.00" y="222.50"></text></g><g><title>0x7f53dcea9393 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="513" y="196" width="4" height="15" fill="rgb(235,155,27)"/><text x="516.00" y="206.50"></text></g><g><title>0x7f53dcea946c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.80%)</title><rect x="517" y="196" width="10" height="15" fill="rgb(210,53,15)"/><text x="520.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (1 samples, 0.40%)</title><rect x="522" y="212" width="5" height="15" fill="rgb(251,104,24)"/><text x="525.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:741) (1 samples, 0.40%)</title><rect x="527" y="228" width="4" height="15" fill="rgb(235,217,47)"/><text x="530.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.40%)</title><rect x="531" y="228" width="5" height="15" fill="rgb(242,204,19)"/><text x="534.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.40%)</title><rect x="531" y="244" width="5" height="15" fill="rgb(217,158,5)"/><text x="534.00" y="254.50"></text></g><g><title>0x7f53dcea9528 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.20%)</title><rect x="527" y="196" width="14" height="15" fill="rgb(242,41,50)"/><text x="530.00" y="206.50"></text></g><g><title>0x7f53dce92e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.20%)</title><rect x="527" y="212" width="14" height="15" fill="rgb(231,138,25)"/><text x="530.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:801) (1 samples, 0.40%)</title><rect x="536" y="228" width="5" height="15" fill="rgb(221,149,3)"/><text x="539.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.40%)</title><rect x="536" y="244" width="5" height="15" fill="rgb(220,158,18)"/><text x="539.00" y="254.50"></text></g><g><title>0x7f54023baa51 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="564" y="244" width="5" height="15" fill="rgb(205,164,17)"/><text x="567.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="569" y="244" width="5" height="15" fill="rgb(234,213,24)"/><text x="572.00" y="254.50"></text></g><g><title>0x7f54023bbf0a (libc-2.29.so) (1 samples, 0.40%)</title><rect x="569" y="260" width="5" height="15" fill="rgb(211,227,30)"/><text x="572.00" y="270.50"></text></g><g><title>0x7f53dcea9553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (10 samples, 3.98%)</title><rect x="541" y="196" width="47" height="15" fill="rgb(206,156,46)"/><text x="544.00" y="206.50">0x7f..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (10 samples, 3.98%)</title><rect x="541" y="212" width="47" height="15" fill="rgb(216,24,39)"/><text x="544.00" y="222.50">copy..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (8 samples, 3.19%)</title><rect x="550" y="228" width="38" height="15" fill="rgb(210,69,52)"/><text x="553.00" y="238.50">svm..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.20%)</title><rect x="574" y="244" width="14" height="15" fill="rgb(230,188,39)"/><text x="577.00" y="254.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.20%)</title><rect x="574" y="260" width="14" height="15" fill="rgb(227,84,22)"/><text x="577.00" y="270.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (38 samples, 15.14%)</title><rect x="414" y="148" width="178" height="15" fill="rgb(253,14,54)"/><text x="417.00" y="158.50">_predict_proba (sklearn..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (35 samples, 13.94%)</title><rect x="428" y="164" width="164" height="15" fill="rgb(226,50,18)"/><text x="431.00" y="174.50">_dense_predict_proba ..</text></g><g><title>0x7f53dceab3fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (34 samples, 13.55%)</title><rect x="433" y="180" width="159" height="15" fill="rgb(229,136,32)"/><text x="436.00" y="190.50">0x7f53dceab3fd (skle..</text></g><g><title>0x7f53dcea955e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="588" y="196" width="4" height="15" fill="rgb(241,123,33)"/><text x="591.00" y="206.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="588" y="212" width="4" height="15" fill="rgb(207,75,20)"/><text x="591.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:38) (125 samples, 49.80%)</title><rect x="10" y="52" width="587" height="15" fill="rgb(234,48,15)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:37) (125 samples, 49.80%)</title><rect x="10" y="68" width="587" height="15" fill="rgb(211,206,49)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:37)</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:29) (123 samples, 49.00%)</title><rect x="19" y="84" width="578" height="15" fill="rgb(211,136,5)"/><text x="22.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:2..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:23) (122 samples, 48.61%)</title><rect x="24" y="100" width="573" height="15" fill="rgb(228,223,23)"/><text x="27.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (122 samples, 48.61%)</title><rect x="24" y="116" width="573" height="15" fill="rgb(249,174,19)"/><text x="27.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (117 samples, 46.61%)</title><rect x="47" y="132" width="550" height="15" fill="rgb(244,58,35)"/><text x="50.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.40%)</title><rect x="592" y="148" width="5" height="15" fill="rgb(213,86,5)"/><text x="595.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.40%)</title><rect x="592" y="164" width="5" height="15" fill="rgb(252,198,25)"/><text x="595.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.40%)</title><rect x="592" y="180" width="5" height="15" fill="rgb(218,113,21)"/><text x="595.00" y="190.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.40%)</title><rect x="597" y="852" width="5" height="15" fill="rgb(225,112,52)"/><text x="600.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.40%)</title><rect x="597" y="868" width="5" height="15" fill="rgb(226,193,38)"/><text x="600.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.40%)</title><rect x="597" y="884" width="5" height="15" fill="rgb(219,200,26)"/><text x="600.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.40%)</title><rect x="597" y="900" width="5" height="15" fill="rgb(250,183,11)"/><text x="600.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.40%)</title><rect x="597" y="916" width="5" height="15" fill="rgb(251,229,53)"/><text x="600.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.40%)</title><rect x="597" y="932" width="5" height="15" fill="rgb(235,80,10)"/><text x="600.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.40%)</title><rect x="597" y="948" width="5" height="15" fill="rgb(249,191,28)"/><text x="600.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="597" y="964" width="5" height="15" fill="rgb(219,113,21)"/><text x="600.00" y="974.50"></text></g><g><title>0x7f54023fa237 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="597" y="980" width="5" height="15" fill="rgb(241,122,34)"/><text x="600.00" y="990.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.80%)</title><rect x="597" y="820" width="10" height="15" fill="rgb(243,122,49)"/><text x="600.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.80%)</title><rect x="597" y="836" width="10" height="15" fill="rgb(206,196,53)"/><text x="600.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.40%)</title><rect x="602" y="852" width="5" height="15" fill="rgb(244,131,0)"/><text x="605.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.40%)</title><rect x="602" y="868" width="5" height="15" fill="rgb(224,193,11)"/><text x="605.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2049) (1 samples, 0.40%)</title><rect x="602" y="884" width="5" height="15" fill="rgb(211,85,0)"/><text x="605.00" y="894.50"></text></g><g><title>safe_listdir (pkg_resources/__init__.py:2108) (1 samples, 0.40%)</title><rect x="602" y="900" width="5" height="15" fill="rgb(209,188,34)"/><text x="605.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.40%)</title><rect x="602" y="916" width="5" height="15" fill="rgb(253,166,4)"/><text x="605.00" y="926.50"></text></g><g><title>__close_nocancel (libc-2.29.so) (1 samples, 0.40%)</title><rect x="602" y="932" width="5" height="15" fill="rgb(224,32,42)"/><text x="605.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf.py:2) (3 samples, 1.20%)</title><rect x="597" y="148" width="14" height="15" fill="rgb(251,2,38)"/><text x="600.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.20%)</title><rect x="597" y="164" width="14" height="15" fill="rgb(231,142,45)"/><text x="600.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.20%)</title><rect x="597" y="180" width="14" height="15" fill="rgb(222,122,0)"/><text x="600.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.20%)</title><rect x="597" y="196" width="14" height="15" fill="rgb(239,90,19)"/><text x="600.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.20%)</title><rect x="597" y="212" width="14" height="15" fill="rgb(219,111,36)"/><text x="600.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.20%)</title><rect x="597" y="228" width="14" height="15" fill="rgb(249,145,16)"/><text x="600.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.20%)</title><rect x="597" y="244" width="14" height="15" fill="rgb(212,155,16)"/><text x="600.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.20%)</title><rect x="597" y="260" width="14" height="15" fill="rgb(216,90,22)"/><text x="600.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.20%)</title><rect x="597" y="276" width="14" height="15" fill="rgb(216,9,12)"/><text x="600.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 1.20%)</title><rect x="597" y="292" width="14" height="15" fill="rgb(207,118,43)"/><text x="600.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.20%)</title><rect x="597" y="308" width="14" height="15" fill="rgb(232,164,47)"/><text x="600.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.20%)</title><rect x="597" y="324" width="14" height="15" fill="rgb(242,187,33)"/><text x="600.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.20%)</title><rect x="597" y="340" width="14" height="15" fill="rgb(230,62,48)"/><text x="600.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.20%)</title><rect x="597" y="356" width="14" height="15" fill="rgb(243,85,3)"/><text x="600.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.20%)</title><rect x="597" y="372" width="14" height="15" fill="rgb(254,148,30)"/><text x="600.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.20%)</title><rect x="597" y="388" width="14" height="15" fill="rgb(213,170,15)"/><text x="600.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.20%)</title><rect x="597" y="404" width="14" height="15" fill="rgb(235,58,10)"/><text x="600.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.20%)</title><rect x="597" y="420" width="14" height="15" fill="rgb(251,159,19)"/><text x="600.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.20%)</title><rect x="597" y="436" width="14" height="15" fill="rgb(211,55,29)"/><text x="600.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.20%)</title><rect x="597" y="452" width="14" height="15" fill="rgb(245,65,10)"/><text x="600.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.20%)</title><rect x="597" y="468" width="14" height="15" fill="rgb(216,154,30)"/><text x="600.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.20%)</title><rect x="597" y="484" width="14" height="15" fill="rgb(215,83,19)"/><text x="600.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.20%)</title><rect x="597" y="500" width="14" height="15" fill="rgb(223,165,51)"/><text x="600.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.20%)</title><rect x="597" y="516" width="14" height="15" fill="rgb(237,80,32)"/><text x="600.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.20%)</title><rect x="597" y="532" width="14" height="15" fill="rgb(207,29,6)"/><text x="600.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.20%)</title><rect x="597" y="548" width="14" height="15" fill="rgb(212,48,9)"/><text x="600.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.20%)</title><rect x="597" y="564" width="14" height="15" fill="rgb(224,93,48)"/><text x="600.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 1.20%)</title><rect x="597" y="580" width="14" height="15" fill="rgb(213,0,19)"/><text x="600.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.20%)</title><rect x="597" y="596" width="14" height="15" fill="rgb(250,11,27)"/><text x="600.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.20%)</title><rect x="597" y="612" width="14" height="15" fill="rgb(238,126,20)"/><text x="600.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.20%)</title><rect x="597" y="628" width="14" height="15" fill="rgb(212,68,11)"/><text x="600.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.20%)</title><rect x="597" y="644" width="14" height="15" fill="rgb(221,182,2)"/><text x="600.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.20%)</title><rect x="597" y="660" width="14" height="15" fill="rgb(253,100,33)"/><text x="600.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.20%)</title><rect x="597" y="676" width="14" height="15" fill="rgb(210,163,11)"/><text x="600.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.20%)</title><rect x="597" y="692" width="14" height="15" fill="rgb(223,125,7)"/><text x="600.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.20%)</title><rect x="597" y="708" width="14" height="15" fill="rgb(243,107,30)"/><text x="600.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 1.20%)</title><rect x="597" y="724" width="14" height="15" fill="rgb(247,125,42)"/><text x="600.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.20%)</title><rect x="597" y="740" width="14" height="15" fill="rgb(237,147,8)"/><text x="600.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.20%)</title><rect x="597" y="756" width="14" height="15" fill="rgb(220,226,0)"/><text x="600.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.20%)</title><rect x="597" y="772" width="14" height="15" fill="rgb(250,108,13)"/><text x="600.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.20%)</title><rect x="597" y="788" width="14" height="15" fill="rgb(212,9,29)"/><text x="600.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.20%)</title><rect x="597" y="804" width="14" height="15" fill="rgb(222,89,16)"/><text x="600.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.40%)</title><rect x="607" y="820" width="4" height="15" fill="rgb(251,108,31)"/><text x="610.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="607" y="836" width="4" height="15" fill="rgb(214,182,32)"/><text x="610.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="607" y="852" width="4" height="15" fill="rgb(207,97,7)"/><text x="610.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="607" y="868" width="4" height="15" fill="rgb(216,131,31)"/><text x="610.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="607" y="884" width="4" height="15" fill="rgb(215,177,20)"/><text x="610.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="607" y="900" width="4" height="15" fill="rgb(237,166,20)"/><text x="610.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.40%)</title><rect x="607" y="916" width="4" height="15" fill="rgb(209,166,19)"/><text x="610.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="607" y="932" width="4" height="15" fill="rgb(251,129,52)"/><text x="610.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="607" y="948" width="4" height="15" fill="rgb(236,85,36)"/><text x="610.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.40%)</title><rect x="607" y="964" width="4" height="15" fill="rgb(224,64,25)"/><text x="610.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.40%)</title><rect x="607" y="980" width="4" height="15" fill="rgb(221,108,38)"/><text x="610.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.40%)</title><rect x="607" y="996" width="4" height="15" fill="rgb(250,39,17)"/><text x="610.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="607" y="1012" width="4" height="15" fill="rgb(254,201,36)"/><text x="610.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="607" y="1028" width="4" height="15" fill="rgb(217,208,40)"/><text x="610.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="607" y="1044" width="4" height="15" fill="rgb(251,89,33)"/><text x="610.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="607" y="1060" width="4" height="15" fill="rgb(233,17,39)"/><text x="610.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="607" y="1076" width="4" height="15" fill="rgb(249,229,42)"/><text x="610.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5364) (1 samples, 0.40%)</title><rect x="607" y="1092" width="4" height="15" fill="rgb(253,130,10)"/><text x="610.00" y="1102.50"></text></g><g><title>makeHTMLTags (pkg_resources/_vendor/pyparsing.py:4921) (1 samples, 0.40%)</title><rect x="607" y="1108" width="4" height="15" fill="rgb(240,63,33)"/><text x="610.00" y="1118.50"></text></g><g><title>_makeTags (pkg_resources/_vendor/pyparsing.py:4895) (1 samples, 0.40%)</title><rect x="607" y="1124" width="4" height="15" fill="rgb(221,173,16)"/><text x="610.00" y="1134.50"></text></g><g><title>setResultsName (pkg_resources/_vendor/pyparsing.py:1224) (1 samples, 0.40%)</title><rect x="607" y="1140" width="4" height="15" fill="rgb(222,198,17)"/><text x="610.00" y="1150.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py:1183) (1 samples, 0.40%)</title><rect x="607" y="1156" width="4" height="15" fill="rgb(248,76,22)"/><text x="610.00" y="1166.50"></text></g><g><title>copy (copy.py:106) (1 samples, 0.40%)</title><rect x="607" y="1172" width="4" height="15" fill="rgb(207,6,5)"/><text x="610.00" y="1182.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.40%)</title><rect x="611" y="244" width="5" height="15" fill="rgb(244,162,32)"/><text x="614.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="611" y="260" width="5" height="15" fill="rgb(213,201,53)"/><text x="614.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="611" y="276" width="5" height="15" fill="rgb(242,174,41)"/><text x="614.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="611" y="292" width="5" height="15" fill="rgb(226,87,7)"/><text x="614.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="611" y="308" width="5" height="15" fill="rgb(207,181,28)"/><text x="614.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="324" width="5" height="15" fill="rgb(239,95,16)"/><text x="614.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.40%)</title><rect x="611" y="340" width="5" height="15" fill="rgb(223,222,6)"/><text x="614.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="611" y="356" width="5" height="15" fill="rgb(246,87,46)"/><text x="614.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.40%)</title><rect x="611" y="372" width="5" height="15" fill="rgb(242,210,44)"/><text x="614.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="388" width="5" height="15" fill="rgb(220,93,50)"/><text x="614.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="611" y="404" width="5" height="15" fill="rgb(232,121,14)"/><text x="614.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="611" y="420" width="5" height="15" fill="rgb(218,218,32)"/><text x="614.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="611" y="436" width="5" height="15" fill="rgb(211,18,27)"/><text x="614.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="611" y="452" width="5" height="15" fill="rgb(218,93,36)"/><text x="614.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="468" width="5" height="15" fill="rgb(215,202,47)"/><text x="614.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.40%)</title><rect x="611" y="484" width="5" height="15" fill="rgb(216,135,8)"/><text x="614.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="611" y="500" width="5" height="15" fill="rgb(249,228,25)"/><text x="614.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="611" y="516" width="5" height="15" fill="rgb(208,24,3)"/><text x="614.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="611" y="532" width="5" height="15" fill="rgb(222,52,30)"/><text x="614.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="611" y="548" width="5" height="15" fill="rgb(231,217,17)"/><text x="614.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="564" width="5" height="15" fill="rgb(221,154,16)"/><text x="614.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.40%)</title><rect x="611" y="580" width="5" height="15" fill="rgb(242,140,44)"/><text x="614.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="611" y="596" width="5" height="15" fill="rgb(239,137,24)"/><text x="614.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="611" y="612" width="5" height="15" fill="rgb(215,44,35)"/><text x="614.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="611" y="628" width="5" height="15" fill="rgb(221,170,43)"/><text x="614.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="611" y="644" width="5" height="15" fill="rgb(219,147,17)"/><text x="614.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="660" width="5" height="15" fill="rgb(206,0,41)"/><text x="614.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.40%)</title><rect x="611" y="676" width="5" height="15" fill="rgb(246,174,35)"/><text x="614.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="611" y="692" width="5" height="15" fill="rgb(228,83,54)"/><text x="614.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="611" y="708" width="5" height="15" fill="rgb(210,175,42)"/><text x="614.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="611" y="724" width="5" height="15" fill="rgb(224,118,2)"/><text x="614.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="611" y="740" width="5" height="15" fill="rgb(237,196,41)"/><text x="614.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="756" width="5" height="15" fill="rgb(219,161,17)"/><text x="614.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.40%)</title><rect x="611" y="772" width="5" height="15" fill="rgb(221,82,11)"/><text x="614.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.40%)</title><rect x="611" y="788" width="5" height="15" fill="rgb(217,3,33)"/><text x="614.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="804" width="5" height="15" fill="rgb(239,90,16)"/><text x="614.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="611" y="820" width="5" height="15" fill="rgb(209,40,13)"/><text x="614.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="611" y="836" width="5" height="15" fill="rgb(218,38,29)"/><text x="614.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="611" y="852" width="5" height="15" fill="rgb(238,22,32)"/><text x="614.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="611" y="868" width="5" height="15" fill="rgb(240,181,49)"/><text x="614.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="884" width="5" height="15" fill="rgb(209,202,29)"/><text x="614.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.40%)</title><rect x="611" y="900" width="5" height="15" fill="rgb(243,79,21)"/><text x="614.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="611" y="916" width="5" height="15" fill="rgb(240,195,27)"/><text x="614.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.40%)</title><rect x="611" y="932" width="5" height="15" fill="rgb(214,29,22)"/><text x="614.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="948" width="5" height="15" fill="rgb(250,200,38)"/><text x="614.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="611" y="964" width="5" height="15" fill="rgb(243,126,6)"/><text x="614.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="611" y="980" width="5" height="15" fill="rgb(243,151,8)"/><text x="614.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="611" y="996" width="5" height="15" fill="rgb(213,127,1)"/><text x="614.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="611" y="1012" width="5" height="15" fill="rgb(237,59,39)"/><text x="614.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="1028" width="5" height="15" fill="rgb(212,101,48)"/><text x="614.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.40%)</title><rect x="611" y="1044" width="5" height="15" fill="rgb(235,94,22)"/><text x="614.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.40%)</title><rect x="611" y="1060" width="5" height="15" fill="rgb(209,197,24)"/><text x="614.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="1076" width="5" height="15" fill="rgb(227,22,54)"/><text x="614.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="611" y="1092" width="5" height="15" fill="rgb(249,19,54)"/><text x="614.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="611" y="1108" width="5" height="15" fill="rgb(205,217,48)"/><text x="614.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="611" y="1124" width="5" height="15" fill="rgb(252,79,52)"/><text x="614.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="611" y="1140" width="5" height="15" fill="rgb(241,119,37)"/><text x="614.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="1156" width="5" height="15" fill="rgb(218,169,5)"/><text x="614.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.40%)</title><rect x="611" y="1172" width="5" height="15" fill="rgb(227,86,39)"/><text x="614.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.40%)</title><rect x="611" y="1188" width="5" height="15" fill="rgb(220,182,43)"/><text x="614.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="1204" width="5" height="15" fill="rgb(223,158,14)"/><text x="614.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="611" y="1220" width="5" height="15" fill="rgb(227,153,34)"/><text x="614.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="611" y="1236" width="5" height="15" fill="rgb(213,127,20)"/><text x="614.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="611" y="1252" width="5" height="15" fill="rgb(234,205,7)"/><text x="614.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="611" y="1268" width="5" height="15" fill="rgb(226,92,23)"/><text x="614.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="1284" width="5" height="15" fill="rgb(210,83,38)"/><text x="614.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.40%)</title><rect x="611" y="1300" width="5" height="15" fill="rgb(240,203,53)"/><text x="614.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="611" y="1316" width="5" height="15" fill="rgb(207,49,11)"/><text x="614.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="611" y="1332" width="5" height="15" fill="rgb(225,187,50)"/><text x="614.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="611" y="1348" width="5" height="15" fill="rgb(206,176,43)"/><text x="614.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="611" y="1364" width="5" height="15" fill="rgb(254,50,49)"/><text x="614.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="611" y="1380" width="5" height="15" fill="rgb(230,74,2)"/><text x="614.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:188) (1 samples, 0.40%)</title><rect x="611" y="1396" width="5" height="15" fill="rgb(220,145,15)"/><text x="614.00" y="1406.50"></text></g><g><title>wrapper (six.py:860) (1 samples, 0.40%)</title><rect x="611" y="1412" width="5" height="15" fill="rgb(220,21,15)"/><text x="614.00" y="1422.50"></text></g><g><title>__new__ (abc.py:126) (1 samples, 0.40%)</title><rect x="611" y="1428" width="5" height="15" fill="rgb(207,180,27)"/><text x="614.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.40%)</title><rect x="616" y="1012" width="5" height="15" fill="rgb(227,149,28)"/><text x="619.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="616" y="1028" width="5" height="15" fill="rgb(216,147,31)"/><text x="619.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="616" y="1044" width="5" height="15" fill="rgb(231,114,44)"/><text x="619.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="616" y="1060" width="5" height="15" fill="rgb(250,189,28)"/><text x="619.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="616" y="1076" width="5" height="15" fill="rgb(237,178,1)"/><text x="619.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="616" y="1092" width="5" height="15" fill="rgb(219,130,34)"/><text x="619.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.40%)</title><rect x="616" y="1108" width="5" height="15" fill="rgb(225,168,30)"/><text x="619.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="616" y="1124" width="5" height="15" fill="rgb(208,30,52)"/><text x="619.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="616" y="1140" width="5" height="15" fill="rgb(240,188,9)"/><text x="619.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="616" y="1156" width="5" height="15" fill="rgb(246,147,35)"/><text x="619.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="616" y="1172" width="5" height="15" fill="rgb(208,51,37)"/><text x="619.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="616" y="1188" width="5" height="15" fill="rgb(254,179,26)"/><text x="619.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.40%)</title><rect x="616" y="1204" width="5" height="15" fill="rgb(230,64,43)"/><text x="619.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="616" y="1220" width="5" height="15" fill="rgb(230,185,37)"/><text x="619.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="616" y="1236" width="5" height="15" fill="rgb(213,69,30)"/><text x="619.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="616" y="1252" width="5" height="15" fill="rgb(214,30,24)"/><text x="619.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="616" y="1268" width="5" height="15" fill="rgb(253,206,21)"/><text x="619.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="616" y="1284" width="5" height="15" fill="rgb(245,194,15)"/><text x="619.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.40%)</title><rect x="616" y="1300" width="5" height="15" fill="rgb(249,132,10)"/><text x="619.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="616" y="1316" width="5" height="15" fill="rgb(207,119,11)"/><text x="619.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="616" y="1332" width="5" height="15" fill="rgb(240,152,26)"/><text x="619.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="616" y="1348" width="5" height="15" fill="rgb(249,145,24)"/><text x="619.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="616" y="1364" width="5" height="15" fill="rgb(240,193,0)"/><text x="619.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="616" y="1380" width="5" height="15" fill="rgb(213,196,14)"/><text x="619.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.40%)</title><rect x="616" y="1396" width="5" height="15" fill="rgb(245,87,35)"/><text x="619.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="616" y="1412" width="5" height="15" fill="rgb(237,224,43)"/><text x="619.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="616" y="1428" width="5" height="15" fill="rgb(223,174,3)"/><text x="619.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="616" y="1444" width="5" height="15" fill="rgb(234,206,50)"/><text x="619.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="616" y="1460" width="5" height="15" fill="rgb(208,211,18)"/><text x="619.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="616" y="1476" width="5" height="15" fill="rgb(243,181,45)"/><text x="619.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.40%)</title><rect x="616" y="1492" width="5" height="15" fill="rgb(242,114,3)"/><text x="619.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="616" y="1508" width="5" height="15" fill="rgb(240,4,22)"/><text x="619.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="616" y="1524" width="5" height="15" fill="rgb(237,69,8)"/><text x="619.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="616" y="1540" width="5" height="15" fill="rgb(250,88,34)"/><text x="619.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="616" y="1556" width="5" height="15" fill="rgb(230,184,24)"/><text x="619.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="616" y="1572" width="5" height="15" fill="rgb(237,57,43)"/><text x="619.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.40%)</title><rect x="616" y="1588" width="5" height="15" fill="rgb(233,92,41)"/><text x="619.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="616" y="1604" width="5" height="15" fill="rgb(209,70,47)"/><text x="619.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="616" y="1620" width="5" height="15" fill="rgb(212,0,28)"/><text x="619.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="616" y="1636" width="5" height="15" fill="rgb(225,70,6)"/><text x="619.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="616" y="1652" width="5" height="15" fill="rgb(241,68,37)"/><text x="619.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="616" y="1668" width="5" height="15" fill="rgb(220,87,30)"/><text x="619.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.40%)</title><rect x="616" y="1684" width="5" height="15" fill="rgb(215,18,30)"/><text x="619.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="616" y="1700" width="5" height="15" fill="rgb(230,48,11)"/><text x="619.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="616" y="1716" width="5" height="15" fill="rgb(245,97,9)"/><text x="619.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="616" y="1732" width="5" height="15" fill="rgb(252,41,1)"/><text x="619.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="616" y="1748" width="5" height="15" fill="rgb(250,30,32)"/><text x="619.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="616" y="1764" width="5" height="15" fill="rgb(209,10,36)"/><text x="619.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.40%)</title><rect x="616" y="1780" width="5" height="15" fill="rgb(251,179,8)"/><text x="619.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="616" y="1796" width="5" height="15" fill="rgb(234,90,13)"/><text x="619.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="616" y="1812" width="5" height="15" fill="rgb(221,203,39)"/><text x="619.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="616" y="1828" width="5" height="15" fill="rgb(250,228,37)"/><text x="619.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="616" y="1844" width="5" height="15" fill="rgb(212,21,25)"/><text x="619.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="616" y="1860" width="5" height="15" fill="rgb(239,14,40)"/><text x="619.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:600) (1 samples, 0.40%)</title><rect x="616" y="1876" width="5" height="15" fill="rgb(233,118,29)"/><text x="619.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.40%)</title><rect x="616" y="1892" width="5" height="15" fill="rgb(211,8,46)"/><text x="619.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.40%)</title><rect x="616" y="1908" width="5" height="15" fill="rgb(215,17,25)"/><text x="619.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1271) (1 samples, 0.40%)</title><rect x="616" y="1924" width="5" height="15" fill="rgb(234,98,39)"/><text x="619.00" y="1934.50"></text></g><g><title>search (re.py:183) (1 samples, 0.40%)</title><rect x="616" y="1940" width="5" height="15" fill="rgb(215,188,39)"/><text x="619.00" y="1950.50"></text></g><g><title>_compile (re.py:276) (1 samples, 0.40%)</title><rect x="616" y="1956" width="5" height="15" fill="rgb(244,46,36)"/><text x="619.00" y="1966.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.80%)</title><rect x="616" y="820" width="9" height="15" fill="rgb(250,147,28)"/><text x="619.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="616" y="836" width="9" height="15" fill="rgb(231,222,36)"/><text x="619.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="616" y="852" width="9" height="15" fill="rgb(229,12,0)"/><text x="619.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="616" y="868" width="9" height="15" fill="rgb(215,219,44)"/><text x="619.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="616" y="884" width="9" height="15" fill="rgb(219,84,26)"/><text x="619.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="616" y="900" width="9" height="15" fill="rgb(210,96,14)"/><text x="619.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.80%)</title><rect x="616" y="916" width="9" height="15" fill="rgb(231,98,20)"/><text x="619.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="616" y="932" width="9" height="15" fill="rgb(212,26,50)"/><text x="619.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="616" y="948" width="9" height="15" fill="rgb(248,0,53)"/><text x="619.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="616" y="964" width="9" height="15" fill="rgb(210,6,13)"/><text x="619.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="616" y="980" width="9" height="15" fill="rgb(205,49,16)"/><text x="619.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="616" y="996" width="9" height="15" fill="rgb(217,102,5)"/><text x="619.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.40%)</title><rect x="621" y="1012" width="4" height="15" fill="rgb(209,37,22)"/><text x="624.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="621" y="1028" width="4" height="15" fill="rgb(232,228,37)"/><text x="624.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="621" y="1044" width="4" height="15" fill="rgb(205,225,25)"/><text x="624.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="621" y="1060" width="4" height="15" fill="rgb(224,173,51)"/><text x="624.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="621" y="1076" width="4" height="15" fill="rgb(213,98,45)"/><text x="624.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="621" y="1092" width="4" height="15" fill="rgb(233,83,9)"/><text x="624.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:123) (1 samples, 0.40%)</title><rect x="621" y="1108" width="4" height="15" fill="rgb(217,144,23)"/><text x="624.00" y="1118.50"></text></g><g><title>NDFrame (pandas/core/generic.py:10422) (1 samples, 0.40%)</title><rect x="621" y="1124" width="4" height="15" fill="rgb(250,189,21)"/><text x="624.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.40%)</title><rect x="621" y="1140" width="4" height="15" fill="rgb(209,38,19)"/><text x="624.00" y="1150.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.40%)</title><rect x="621" y="1156" width="4" height="15" fill="rgb(252,96,22)"/><text x="624.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.40%)</title><rect x="621" y="1172" width="4" height="15" fill="rgb(212,145,12)"/><text x="624.00" y="1182.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.40%)</title><rect x="621" y="1188" width="4" height="15" fill="rgb(220,201,48)"/><text x="624.00" y="1198.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.40%)</title><rect x="621" y="1204" width="4" height="15" fill="rgb(227,34,44)"/><text x="624.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.59%)</title><rect x="616" y="436" width="19" height="15" fill="rgb(241,167,36)"/><text x="619.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.59%)</title><rect x="616" y="452" width="19" height="15" fill="rgb(218,112,53)"/><text x="619.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.59%)</title><rect x="616" y="468" width="19" height="15" fill="rgb(237,22,20)"/><text x="619.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.59%)</title><rect x="616" y="484" width="19" height="15" fill="rgb(238,213,8)"/><text x="619.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.59%)</title><rect x="616" y="500" width="19" height="15" fill="rgb(251,52,6)"/><text x="619.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.59%)</title><rect x="616" y="516" width="19" height="15" fill="rgb(222,161,34)"/><text x="619.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 1.59%)</title><rect x="616" y="532" width="19" height="15" fill="rgb(244,28,50)"/><text x="619.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.59%)</title><rect x="616" y="548" width="19" height="15" fill="rgb(229,30,20)"/><text x="619.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.59%)</title><rect x="616" y="564" width="19" height="15" fill="rgb(213,172,14)"/><text x="619.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.59%)</title><rect x="616" y="580" width="19" height="15" fill="rgb(234,106,29)"/><text x="619.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.59%)</title><rect x="616" y="596" width="19" height="15" fill="rgb(210,23,27)"/><text x="619.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.59%)</title><rect x="616" y="612" width="19" height="15" fill="rgb(234,164,52)"/><text x="619.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 1.59%)</title><rect x="616" y="628" width="19" height="15" fill="rgb(244,153,29)"/><text x="619.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.59%)</title><rect x="616" y="644" width="19" height="15" fill="rgb(246,9,11)"/><text x="619.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.59%)</title><rect x="616" y="660" width="19" height="15" fill="rgb(247,6,21)"/><text x="619.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.59%)</title><rect x="616" y="676" width="19" height="15" fill="rgb(222,45,19)"/><text x="619.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.59%)</title><rect x="616" y="692" width="19" height="15" fill="rgb(250,161,37)"/><text x="619.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.59%)</title><rect x="616" y="708" width="19" height="15" fill="rgb(212,72,11)"/><text x="619.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (4 samples, 1.59%)</title><rect x="616" y="724" width="19" height="15" fill="rgb(251,219,34)"/><text x="619.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.59%)</title><rect x="616" y="740" width="19" height="15" fill="rgb(235,118,13)"/><text x="619.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.59%)</title><rect x="616" y="756" width="19" height="15" fill="rgb(254,55,47)"/><text x="619.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.59%)</title><rect x="616" y="772" width="19" height="15" fill="rgb(210,80,11)"/><text x="619.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.59%)</title><rect x="616" y="788" width="19" height="15" fill="rgb(209,85,22)"/><text x="619.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.59%)</title><rect x="616" y="804" width="19" height="15" fill="rgb(226,144,46)"/><text x="619.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:7) (2 samples, 0.80%)</title><rect x="625" y="820" width="10" height="15" fill="rgb(233,168,20)"/><text x="628.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="625" y="836" width="10" height="15" fill="rgb(207,85,22)"/><text x="628.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="625" y="852" width="10" height="15" fill="rgb(235,70,54)"/><text x="628.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="625" y="868" width="10" height="15" fill="rgb(223,76,54)"/><text x="628.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="625" y="884" width="10" height="15" fill="rgb(232,63,19)"/><text x="628.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="625" y="900" width="10" height="15" fill="rgb(213,80,46)"/><text x="628.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/grouper.py:28) (2 samples, 0.80%)</title><rect x="625" y="916" width="10" height="15" fill="rgb(228,215,25)"/><text x="628.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="625" y="932" width="10" height="15" fill="rgb(224,91,51)"/><text x="628.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="625" y="948" width="10" height="15" fill="rgb(235,77,16)"/><text x="628.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="625" y="964" width="10" height="15" fill="rgb(225,112,33)"/><text x="628.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.80%)</title><rect x="625" y="980" width="10" height="15" fill="rgb(221,115,29)"/><text x="628.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (2 samples, 0.80%)</title><rect x="625" y="996" width="10" height="15" fill="rgb(244,102,27)"/><text x="628.00" y="1006.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (2 samples, 0.80%)</title><rect x="625" y="1012" width="10" height="15" fill="rgb(251,195,25)"/><text x="628.00" y="1022.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.40%)</title><rect x="630" y="1028" width="5" height="15" fill="rgb(224,138,29)"/><text x="633.00" y="1038.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.40%)</title><rect x="635" y="1108" width="4" height="15" fill="rgb(219,153,32)"/><text x="638.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="635" y="1124" width="4" height="15" fill="rgb(249,102,44)"/><text x="638.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="635" y="1140" width="4" height="15" fill="rgb(210,100,54)"/><text x="638.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="635" y="1156" width="4" height="15" fill="rgb(237,7,20)"/><text x="638.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="635" y="1172" width="4" height="15" fill="rgb(225,149,52)"/><text x="638.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="635" y="1188" width="4" height="15" fill="rgb(236,143,20)"/><text x="638.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.40%)</title><rect x="635" y="1204" width="4" height="15" fill="rgb(247,156,32)"/><text x="638.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="635" y="1220" width="4" height="15" fill="rgb(248,125,11)"/><text x="638.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="635" y="1236" width="4" height="15" fill="rgb(235,103,15)"/><text x="638.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="635" y="1252" width="4" height="15" fill="rgb(250,38,33)"/><text x="638.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="635" y="1268" width="4" height="15" fill="rgb(210,116,47)"/><text x="638.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="635" y="1284" width="4" height="15" fill="rgb(237,5,52)"/><text x="638.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.40%)</title><rect x="635" y="1300" width="4" height="15" fill="rgb(223,221,47)"/><text x="638.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.40%)</title><rect x="635" y="1316" width="4" height="15" fill="rgb(211,114,24)"/><text x="638.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.40%)</title><rect x="635" y="1332" width="4" height="15" fill="rgb(237,105,19)"/><text x="638.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.40%)</title><rect x="635" y="1348" width="4" height="15" fill="rgb(212,9,5)"/><text x="638.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.40%)</title><rect x="635" y="1364" width="4" height="15" fill="rgb(248,56,15)"/><text x="638.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:629) (1 samples, 0.40%)</title><rect x="635" y="1380" width="4" height="15" fill="rgb(213,221,8)"/><text x="638.00" y="1390.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.40%)</title><rect x="635" y="1396" width="4" height="15" fill="rgb(233,3,12)"/><text x="638.00" y="1406.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:4) (10 samples, 3.98%)</title><rect x="597" y="52" width="47" height="15" fill="rgb(222,155,17)"/><text x="600.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.98%)</title><rect x="597" y="68" width="47" height="15" fill="rgb(209,188,28)"/><text x="600.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.98%)</title><rect x="597" y="84" width="47" height="15" fill="rgb(240,3,51)"/><text x="600.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.98%)</title><rect x="597" y="100" width="47" height="15" fill="rgb(209,58,26)"/><text x="600.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.98%)</title><rect x="597" y="116" width="47" height="15" fill="rgb(212,228,7)"/><text x="600.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.98%)</title><rect x="597" y="132" width="47" height="15" fill="rgb(231,213,34)"/><text x="600.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf.py:7) (7 samples, 2.79%)</title><rect x="611" y="148" width="33" height="15" fill="rgb(249,225,3)"/><text x="614.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.79%)</title><rect x="611" y="164" width="33" height="15" fill="rgb(253,58,30)"/><text x="614.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.79%)</title><rect x="611" y="180" width="33" height="15" fill="rgb(209,82,22)"/><text x="614.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.79%)</title><rect x="611" y="196" width="33" height="15" fill="rgb(206,169,46)"/><text x="614.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.79%)</title><rect x="611" y="212" width="33" height="15" fill="rgb(218,119,4)"/><text x="614.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.79%)</title><rect x="611" y="228" width="33" height="15" fill="rgb(210,195,14)"/><text x="614.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 2.39%)</title><rect x="616" y="244" width="28" height="15" fill="rgb(247,151,44)"/><text x="619.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.39%)</title><rect x="616" y="260" width="28" height="15" fill="rgb(210,30,49)"/><text x="619.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.39%)</title><rect x="616" y="276" width="28" height="15" fill="rgb(224,2,10)"/><text x="619.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.39%)</title><rect x="616" y="292" width="28" height="15" fill="rgb(250,26,1)"/><text x="619.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.39%)</title><rect x="616" y="308" width="28" height="15" fill="rgb(244,86,18)"/><text x="619.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.39%)</title><rect x="616" y="324" width="28" height="15" fill="rgb(224,10,0)"/><text x="619.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 2.39%)</title><rect x="616" y="340" width="28" height="15" fill="rgb(249,142,44)"/><text x="619.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.39%)</title><rect x="616" y="356" width="28" height="15" fill="rgb(246,209,0)"/><text x="619.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.39%)</title><rect x="616" y="372" width="28" height="15" fill="rgb(222,196,29)"/><text x="619.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.39%)</title><rect x="616" y="388" width="28" height="15" fill="rgb(220,70,7)"/><text x="619.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.39%)</title><rect x="616" y="404" width="28" height="15" fill="rgb(210,162,34)"/><text x="619.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.39%)</title><rect x="616" y="420" width="28" height="15" fill="rgb(231,46,33)"/><text x="619.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.80%)</title><rect x="635" y="436" width="9" height="15" fill="rgb(216,154,13)"/><text x="638.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="635" y="452" width="9" height="15" fill="rgb(251,143,31)"/><text x="638.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.80%)</title><rect x="635" y="468" width="9" height="15" fill="rgb(241,39,5)"/><text x="638.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="635" y="484" width="9" height="15" fill="rgb(210,29,18)"/><text x="638.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="635" y="500" width="9" height="15" fill="rgb(230,135,29)"/><text x="638.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="635" y="516" width="9" height="15" fill="rgb(236,20,46)"/><text x="638.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="635" y="532" width="9" height="15" fill="rgb(221,152,10)"/><text x="638.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="635" y="548" width="9" height="15" fill="rgb(251,98,23)"/><text x="638.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="635" y="564" width="9" height="15" fill="rgb(245,132,2)"/><text x="638.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.80%)</title><rect x="635" y="580" width="9" height="15" fill="rgb(243,6,8)"/><text x="638.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="635" y="596" width="9" height="15" fill="rgb(220,8,24)"/><text x="638.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="635" y="612" width="9" height="15" fill="rgb(210,196,39)"/><text x="638.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="635" y="628" width="9" height="15" fill="rgb(215,14,31)"/><text x="638.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="635" y="644" width="9" height="15" fill="rgb(254,22,3)"/><text x="638.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="635" y="660" width="9" height="15" fill="rgb(245,178,45)"/><text x="638.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.80%)</title><rect x="635" y="676" width="9" height="15" fill="rgb(242,115,17)"/><text x="638.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="635" y="692" width="9" height="15" fill="rgb(252,121,14)"/><text x="638.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="635" y="708" width="9" height="15" fill="rgb(222,125,52)"/><text x="638.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="635" y="724" width="9" height="15" fill="rgb(224,203,13)"/><text x="638.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="635" y="740" width="9" height="15" fill="rgb(227,118,21)"/><text x="638.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="635" y="756" width="9" height="15" fill="rgb(227,68,48)"/><text x="638.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.80%)</title><rect x="635" y="772" width="9" height="15" fill="rgb(241,119,44)"/><text x="638.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="635" y="788" width="9" height="15" fill="rgb(232,200,8)"/><text x="638.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="635" y="804" width="9" height="15" fill="rgb(207,211,45)"/><text x="638.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="635" y="820" width="9" height="15" fill="rgb(242,145,44)"/><text x="638.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="635" y="836" width="9" height="15" fill="rgb(234,102,52)"/><text x="638.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="635" y="852" width="9" height="15" fill="rgb(227,188,20)"/><text x="638.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.80%)</title><rect x="635" y="868" width="9" height="15" fill="rgb(216,147,4)"/><text x="638.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="635" y="884" width="9" height="15" fill="rgb(208,188,18)"/><text x="638.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.80%)</title><rect x="635" y="900" width="9" height="15" fill="rgb(207,76,30)"/><text x="638.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="635" y="916" width="9" height="15" fill="rgb(249,195,41)"/><text x="638.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="635" y="932" width="9" height="15" fill="rgb(221,56,47)"/><text x="638.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="635" y="948" width="9" height="15" fill="rgb(212,175,53)"/><text x="638.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="635" y="964" width="9" height="15" fill="rgb(245,43,38)"/><text x="638.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="635" y="980" width="9" height="15" fill="rgb(215,220,42)"/><text x="638.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="635" y="996" width="9" height="15" fill="rgb(227,215,33)"/><text x="638.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.80%)</title><rect x="635" y="1012" width="9" height="15" fill="rgb(205,109,44)"/><text x="638.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="635" y="1028" width="9" height="15" fill="rgb(225,6,32)"/><text x="638.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="635" y="1044" width="9" height="15" fill="rgb(236,165,31)"/><text x="638.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="635" y="1060" width="9" height="15" fill="rgb(236,52,32)"/><text x="638.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="635" y="1076" width="9" height="15" fill="rgb(222,208,35)"/><text x="638.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="635" y="1092" width="9" height="15" fill="rgb(205,144,29)"/><text x="638.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.40%)</title><rect x="639" y="1108" width="5" height="15" fill="rgb(220,89,24)"/><text x="642.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.40%)</title><rect x="639" y="1124" width="5" height="15" fill="rgb(228,184,37)"/><text x="642.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="639" y="1140" width="5" height="15" fill="rgb(211,209,18)"/><text x="642.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="639" y="1156" width="5" height="15" fill="rgb(214,6,7)"/><text x="642.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="639" y="1172" width="5" height="15" fill="rgb(235,35,29)"/><text x="642.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="639" y="1188" width="5" height="15" fill="rgb(222,167,50)"/><text x="642.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="639" y="1204" width="5" height="15" fill="rgb(233,194,2)"/><text x="642.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="639" y="1220" width="5" height="15" fill="rgb(221,11,21)"/><text x="642.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.40%)</title><rect x="639" y="1236" width="5" height="15" fill="rgb(222,165,35)"/><text x="642.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.40%)</title><rect x="639" y="1252" width="5" height="15" fill="rgb(254,135,51)"/><text x="642.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="639" y="1268" width="5" height="15" fill="rgb(253,139,13)"/><text x="642.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="639" y="1284" width="5" height="15" fill="rgb(223,141,4)"/><text x="642.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="639" y="1300" width="5" height="15" fill="rgb(213,197,26)"/><text x="642.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="639" y="1316" width="5" height="15" fill="rgb(212,70,32)"/><text x="642.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="639" y="1332" width="5" height="15" fill="rgb(247,63,18)"/><text x="642.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="639" y="1348" width="5" height="15" fill="rgb(226,36,26)"/><text x="642.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.40%)</title><rect x="639" y="1364" width="5" height="15" fill="rgb(231,22,34)"/><text x="642.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="639" y="1380" width="5" height="15" fill="rgb(253,175,17)"/><text x="642.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="639" y="1396" width="5" height="15" fill="rgb(247,54,39)"/><text x="642.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="639" y="1412" width="5" height="15" fill="rgb(228,89,31)"/><text x="642.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="639" y="1428" width="5" height="15" fill="rgb(208,211,40)"/><text x="642.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="639" y="1444" width="5" height="15" fill="rgb(247,22,25)"/><text x="642.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.40%)</title><rect x="639" y="1460" width="5" height="15" fill="rgb(212,199,44)"/><text x="642.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="639" y="1476" width="5" height="15" fill="rgb(227,113,41)"/><text x="642.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="639" y="1492" width="5" height="15" fill="rgb(234,160,2)"/><text x="642.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="639" y="1508" width="5" height="15" fill="rgb(207,124,3)"/><text x="642.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="639" y="1524" width="5" height="15" fill="rgb(232,16,30)"/><text x="642.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="639" y="1540" width="5" height="15" fill="rgb(239,121,32)"/><text x="642.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.40%)</title><rect x="639" y="1556" width="5" height="15" fill="rgb(250,90,47)"/><text x="642.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.40%)</title><rect x="639" y="1572" width="5" height="15" fill="rgb(233,109,26)"/><text x="642.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="639" y="1588" width="5" height="15" fill="rgb(236,201,46)"/><text x="642.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="639" y="1604" width="5" height="15" fill="rgb(246,42,37)"/><text x="642.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="639" y="1620" width="5" height="15" fill="rgb(253,13,51)"/><text x="642.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="639" y="1636" width="5" height="15" fill="rgb(252,61,48)"/><text x="642.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="639" y="1652" width="5" height="15" fill="rgb(230,125,50)"/><text x="642.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (1 samples, 0.40%)</title><rect x="639" y="1668" width="5" height="15" fill="rgb(245,117,41)"/><text x="642.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (1 samples, 0.40%)</title><rect x="639" y="1684" width="5" height="15" fill="rgb(232,219,12)"/><text x="642.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="639" y="1700" width="5" height="15" fill="rgb(206,2,25)"/><text x="642.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="639" y="1716" width="5" height="15" fill="rgb(210,58,53)"/><text x="642.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="639" y="1732" width="5" height="15" fill="rgb(225,206,49)"/><text x="642.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="639" y="1748" width="5" height="15" fill="rgb(246,135,4)"/><text x="642.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="639" y="1764" width="5" height="15" fill="rgb(228,145,25)"/><text x="642.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (1 samples, 0.40%)</title><rect x="639" y="1780" width="5" height="15" fill="rgb(249,211,20)"/><text x="642.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="639" y="1796" width="5" height="15" fill="rgb(253,138,0)"/><text x="642.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="639" y="1812" width="5" height="15" fill="rgb(208,126,10)"/><text x="642.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="639" y="1828" width="5" height="15" fill="rgb(216,145,10)"/><text x="642.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="639" y="1844" width="5" height="15" fill="rgb(232,24,52)"/><text x="642.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="639" y="1860" width="5" height="15" fill="rgb(254,209,52)"/><text x="642.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:16) (1 samples, 0.40%)</title><rect x="639" y="1876" width="5" height="15" fill="rgb(207,3,4)"/><text x="642.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="639" y="1892" width="5" height="15" fill="rgb(232,218,34)"/><text x="642.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="639" y="1908" width="5" height="15" fill="rgb(233,91,27)"/><text x="642.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="639" y="1924" width="5" height="15" fill="rgb(239,209,26)"/><text x="642.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.40%)</title><rect x="639" y="1940" width="5" height="15" fill="rgb(225,124,31)"/><text x="642.00" y="1950.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.40%)</title><rect x="639" y="1956" width="5" height="15" fill="rgb(208,105,8)"/><text x="642.00" y="1966.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.40%)</title><rect x="639" y="1972" width="5" height="15" fill="rgb(226,8,52)"/><text x="642.00" y="1982.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:65) (1 samples, 0.40%)</title><rect x="644" y="388" width="5" height="15" fill="rgb(240,211,48)"/><text x="647.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="644" y="404" width="5" height="15" fill="rgb(249,84,16)"/><text x="647.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="644" y="420" width="5" height="15" fill="rgb(253,44,27)"/><text x="647.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.40%)</title><rect x="644" y="436" width="5" height="15" fill="rgb(242,111,50)"/><text x="647.00" y="446.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.40%)</title><rect x="644" y="452" width="5" height="15" fill="rgb(213,111,49)"/><text x="647.00" y="462.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.40%)</title><rect x="644" y="468" width="5" height="15" fill="rgb(213,108,36)"/><text x="647.00" y="478.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.40%)</title><rect x="644" y="484" width="5" height="15" fill="rgb(246,90,47)"/><text x="647.00" y="494.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:372) (1 samples, 0.40%)</title><rect x="644" y="500" width="5" height="15" fill="rgb(205,219,11)"/><text x="647.00" y="510.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:302) (1 samples, 0.40%)</title><rect x="644" y="516" width="5" height="15" fill="rgb(244,16,43)"/><text x="647.00" y="526.50"></text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:28) (2 samples, 0.80%)</title><rect x="644" y="84" width="10" height="15" fill="rgb(217,9,1)"/><text x="647.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.80%)</title><rect x="644" y="100" width="10" height="15" fill="rgb(226,206,15)"/><text x="647.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.80%)</title><rect x="644" y="116" width="10" height="15" fill="rgb(235,135,14)"/><text x="647.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.80%)</title><rect x="644" y="132" width="10" height="15" fill="rgb(253,90,35)"/><text x="647.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.80%)</title><rect x="644" y="148" width="10" height="15" fill="rgb(226,49,19)"/><text x="647.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.80%)</title><rect x="644" y="164" width="10" height="15" fill="rgb(246,156,6)"/><text x="647.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.80%)</title><rect x="644" y="180" width="10" height="15" fill="rgb(207,190,8)"/><text x="647.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.80%)</title><rect x="644" y="196" width="10" height="15" fill="rgb(210,87,29)"/><text x="647.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="644" y="212" width="10" height="15" fill="rgb(243,228,41)"/><text x="647.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="644" y="228" width="10" height="15" fill="rgb(241,64,32)"/><text x="647.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="644" y="244" width="10" height="15" fill="rgb(216,182,44)"/><text x="647.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="644" y="260" width="10" height="15" fill="rgb(232,100,3)"/><text x="647.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="644" y="276" width="10" height="15" fill="rgb(206,27,9)"/><text x="647.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.80%)</title><rect x="644" y="292" width="10" height="15" fill="rgb(249,229,11)"/><text x="647.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="644" y="308" width="10" height="15" fill="rgb(219,112,11)"/><text x="647.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="644" y="324" width="10" height="15" fill="rgb(250,192,36)"/><text x="647.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="644" y="340" width="10" height="15" fill="rgb(238,75,38)"/><text x="647.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="644" y="356" width="10" height="15" fill="rgb(243,25,46)"/><text x="647.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="644" y="372" width="10" height="15" fill="rgb(235,100,33)"/><text x="647.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.40%)</title><rect x="649" y="388" width="5" height="15" fill="rgb(216,25,46)"/><text x="652.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="649" y="404" width="5" height="15" fill="rgb(222,152,3)"/><text x="652.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="649" y="420" width="5" height="15" fill="rgb(249,221,29)"/><text x="652.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="649" y="436" width="5" height="15" fill="rgb(252,228,21)"/><text x="652.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="649" y="452" width="5" height="15" fill="rgb(253,129,47)"/><text x="652.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="649" y="468" width="5" height="15" fill="rgb(219,193,3)"/><text x="652.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.40%)</title><rect x="649" y="484" width="5" height="15" fill="rgb(223,197,0)"/><text x="652.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.40%)</title><rect x="649" y="500" width="5" height="15" fill="rgb(207,60,45)"/><text x="652.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.40%)</title><rect x="649" y="516" width="5" height="15" fill="rgb(229,125,11)"/><text x="652.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.40%)</title><rect x="649" y="532" width="5" height="15" fill="rgb(212,112,43)"/><text x="652.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.40%)</title><rect x="649" y="548" width="5" height="15" fill="rgb(234,78,46)"/><text x="652.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.40%)</title><rect x="649" y="564" width="5" height="15" fill="rgb(244,186,35)"/><text x="652.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.40%)</title><rect x="649" y="580" width="5" height="15" fill="rgb(222,170,34)"/><text x="652.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.40%)</title><rect x="649" y="596" width="5" height="15" fill="rgb(208,98,50)"/><text x="652.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.40%)</title><rect x="649" y="612" width="5" height="15" fill="rgb(229,1,28)"/><text x="652.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.40%)</title><rect x="649" y="628" width="5" height="15" fill="rgb(237,117,41)"/><text x="652.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.40%)</title><rect x="649" y="644" width="5" height="15" fill="rgb(234,197,50)"/><text x="652.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.40%)</title><rect x="649" y="660" width="5" height="15" fill="rgb(242,193,31)"/><text x="652.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.40%)</title><rect x="649" y="676" width="5" height="15" fill="rgb(240,100,37)"/><text x="652.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.40%)</title><rect x="649" y="692" width="5" height="15" fill="rgb(218,148,34)"/><text x="652.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py:1160) (1 samples, 0.40%)</title><rect x="649" y="708" width="5" height="15" fill="rgb(213,119,26)"/><text x="652.00" y="718.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.40%)</title><rect x="649" y="724" width="5" height="15" fill="rgb(226,208,44)"/><text x="652.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.40%)</title><rect x="649" y="740" width="5" height="15" fill="rgb(231,90,38)"/><text x="652.00" y="750.50"></text></g><g><title>visit_For (jinja2/compiler.py:1108) (1 samples, 0.40%)</title><rect x="649" y="756" width="5" height="15" fill="rgb(207,17,40)"/><text x="652.00" y="766.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.40%)</title><rect x="649" y="772" width="5" height="15" fill="rgb(228,166,41)"/><text x="652.00" y="782.50"></text></g><g><title>new_func (jinja2/compiler.py:70) (1 samples, 0.40%)</title><rect x="649" y="788" width="5" height="15" fill="rgb(247,81,12)"/><text x="652.00" y="798.50"></text></g><g><title>visit_Call (jinja2/compiler.py:1639) (1 samples, 0.40%)</title><rect x="649" y="804" width="5" height="15" fill="rgb(237,204,50)"/><text x="652.00" y="814.50"></text></g><g><title>signature (jinja2/compiler.py:426) (1 samples, 0.40%)</title><rect x="649" y="820" width="5" height="15" fill="rgb(238,62,2)"/><text x="652.00" y="830.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.40%)</title><rect x="654" y="116" width="4" height="15" fill="rgb(242,138,49)"/><text x="657.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.40%)</title><rect x="654" y="132" width="4" height="15" fill="rgb(247,8,16)"/><text x="657.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.40%)</title><rect x="663" y="148" width="5" height="15" fill="rgb(225,22,35)"/><text x="666.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.40%)</title><rect x="668" y="164" width="4" height="15" fill="rgb(249,86,22)"/><text x="671.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (2 samples, 0.80%)</title><rect x="672" y="164" width="10" height="15" fill="rgb(227,53,29)"/><text x="675.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:447) (1 samples, 0.40%)</title><rect x="682" y="164" width="4" height="15" fill="rgb(209,40,48)"/><text x="685.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (7 samples, 2.79%)</title><rect x="701" y="180" width="32" height="15" fill="rgb(207,128,28)"/><text x="704.00" y="190.50">ru..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.80%)</title><rect x="724" y="196" width="9" height="15" fill="rgb(244,69,48)"/><text x="727.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.40%)</title><rect x="766" y="212" width="5" height="15" fill="rgb(242,90,38)"/><text x="769.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.40%)</title><rect x="766" y="228" width="5" height="15" fill="rgb(254,174,18)"/><text x="769.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (5 samples, 1.99%)</title><rect x="757" y="196" width="23" height="15" fill="rgb(239,126,43)"/><text x="760.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (2 samples, 0.80%)</title><rect x="771" y="212" width="9" height="15" fill="rgb(213,222,10)"/><text x="774.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.40%)</title><rect x="776" y="228" width="4" height="15" fill="rgb(224,0,7)"/><text x="779.00" y="238.50"></text></g><g><title>0x7f53c3529c29 (?) (1 samples, 0.40%)</title><rect x="790" y="244" width="5" height="15" fill="rgb(213,71,41)"/><text x="793.00" y="254.50"></text></g><g><title>0x7f53c3530d9e (?) (1 samples, 0.40%)</title><rect x="790" y="260" width="5" height="15" fill="rgb(233,10,8)"/><text x="793.00" y="270.50"></text></g><g><title>0x7f53c3530c56 (?) (1 samples, 0.40%)</title><rect x="790" y="276" width="5" height="15" fill="rgb(243,28,39)"/><text x="793.00" y="286.50"></text></g><g><title>0x7f53c3536ac7 (?) (1 samples, 0.40%)</title><rect x="790" y="292" width="5" height="15" fill="rgb(252,9,31)"/><text x="793.00" y="302.50"></text></g><g><title>0x7f53c3535c5c (?) (1 samples, 0.40%)</title><rect x="790" y="308" width="5" height="15" fill="rgb(222,35,40)"/><text x="793.00" y="318.50"></text></g><g><title>0x7f53c351f315 (?) (1 samples, 0.40%)</title><rect x="790" y="324" width="5" height="15" fill="rgb(207,5,14)"/><text x="793.00" y="334.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:138) (1 samples, 0.40%)</title><rect x="795" y="276" width="4" height="15" fill="rgb(208,130,9)"/><text x="798.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h:1887) (1 samples, 0.40%)</title><rect x="795" y="292" width="4" height="15" fill="rgb(217,191,0)"/><text x="798.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple:879) (1 samples, 0.40%)</title><rect x="795" y="308" width="4" height="15" fill="rgb(247,228,38)"/><text x="798.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple:202) (1 samples, 0.40%)</title><rect x="795" y="324" width="4" height="15" fill="rgb(248,207,25)"/><text x="798.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, false&gt;::_Head_base (tuple:105) (1 samples, 0.40%)</title><rect x="795" y="340" width="4" height="15" fill="rgb(209,24,38)"/><text x="798.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;::type_caster (cast.h:911) (1 samples, 0.40%)</title><rect x="795" y="356" width="4" height="15" fill="rgb(234,112,7)"/><text x="798.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:832) (1 samples, 0.40%)</title><rect x="795" y="372" width="4" height="15" fill="rgb(229,0,18)"/><text x="798.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:833) (1 samples, 0.40%)</title><rect x="795" y="388" width="4" height="15" fill="rgb(218,181,37)"/><text x="798.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:607) (1 samples, 0.40%)</title><rect x="795" y="404" width="4" height="15" fill="rgb(222,186,0)"/><text x="798.00" y="414.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:600) (1 samples, 0.40%)</title><rect x="795" y="420" width="4" height="15" fill="rgb(234,98,38)"/><text x="798.00" y="430.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h:444) (1 samples, 0.40%)</title><rect x="795" y="436" width="4" height="15" fill="rgb(212,228,2)"/><text x="798.00" y="446.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.40%)</title><rect x="795" y="452" width="4" height="15" fill="rgb(243,33,49)"/><text x="798.00" y="462.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.40%)</title><rect x="795" y="468" width="4" height="15" fill="rgb(210,152,22)"/><text x="798.00" y="478.50"></text></g><g><title>pybind11::array::array (numpy.h:578) (1 samples, 0.40%)</title><rect x="795" y="484" width="4" height="15" fill="rgb(225,152,12)"/><text x="798.00" y="494.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.40%)</title><rect x="795" y="500" width="4" height="15" fill="rgb(232,23,52)"/><text x="798.00" y="510.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.40%)</title><rect x="795" y="516" width="4" height="15" fill="rgb(205,27,15)"/><text x="798.00" y="526.50"></text></g><g><title>0x7f54023dad97 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="795" y="532" width="4" height="15" fill="rgb(206,167,45)"/><text x="798.00" y="542.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:257) (1 samples, 0.40%)</title><rect x="799" y="420" width="5" height="15" fill="rgb(247,198,11)"/><text x="802.00" y="430.50"></text></g><g><title>pybind11::array_t&lt;long, 16&gt;::array_t (numpy.h:867) (1 samples, 0.40%)</title><rect x="799" y="436" width="5" height="15" fill="rgb(233,76,6)"/><text x="802.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h:771) (1 samples, 0.40%)</title><rect x="799" y="452" width="5" height="15" fill="rgb(236,63,16)"/><text x="802.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.40%)</title><rect x="799" y="468" width="5" height="15" fill="rgb(206,43,35)"/><text x="802.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;long&gt; (numpy.h:600) (1 samples, 0.40%)</title><rect x="799" y="484" width="5" height="15" fill="rgb(224,185,48)"/><text x="802.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h:444) (1 samples, 0.40%)</title><rect x="799" y="500" width="5" height="15" fill="rgb(249,108,37)"/><text x="802.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.40%)</title><rect x="799" y="516" width="5" height="15" fill="rgb(238,166,4)"/><text x="802.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.40%)</title><rect x="799" y="532" width="5" height="15" fill="rgb(232,129,13)"/><text x="802.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h:578) (1 samples, 0.40%)</title><rect x="799" y="548" width="5" height="15" fill="rgb(249,212,0)"/><text x="802.00" y="558.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.40%)</title><rect x="799" y="564" width="5" height="15" fill="rgb(223,69,25)"/><text x="802.00" y="574.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.40%)</title><rect x="799" y="580" width="5" height="15" fill="rgb(227,29,35)"/><text x="802.00" y="590.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:89) (1 samples, 0.40%)</title><rect x="799" y="596" width="5" height="15" fill="rgb(254,91,9)"/><text x="802.00" y="606.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:292) (2 samples, 0.80%)</title><rect x="804" y="468" width="9" height="15" fill="rgb(246,4,13)"/><text x="807.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:293) (3 samples, 1.20%)</title><rect x="813" y="468" width="15" height="15" fill="rgb(234,190,48)"/><text x="816.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:294) (1 samples, 0.40%)</title><rect x="828" y="468" width="4" height="15" fill="rgb(238,48,36)"/><text x="831.00" y="478.50"></text></g><g><title>0x7f540258cc52 (libm-2.29.so) (1 samples, 0.40%)</title><rect x="832" y="500" width="5" height="15" fill="rgb(239,30,51)"/><text x="835.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (8 samples, 3.19%)</title><rect x="804" y="452" width="38" height="15" fill="rgb(226,30,14)"/><text x="807.00" y="462.50">Run..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:296) (2 samples, 0.80%)</title><rect x="832" y="468" width="10" height="15" fill="rgb(254,24,0)"/><text x="835.00" y="478.50"></text></g><g><title>expf32x (libm-2.29.so) (2 samples, 0.80%)</title><rect x="832" y="484" width="10" height="15" fill="rgb(239,132,9)"/><text x="835.00" y="494.50"></text></g><g><title>0x7f540258cc5a (libm-2.29.so) (1 samples, 0.40%)</title><rect x="837" y="500" width="5" height="15" fill="rgb(253,7,51)"/><text x="840.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (9 samples, 3.59%)</title><rect x="804" y="420" width="42" height="15" fill="rgb(242,218,25)"/><text x="807.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (9 samples, 3.59%)</title><rect x="804" y="436" width="42" height="15" fill="rgb(207,10,16)"/><text x="807.00" y="446.50">pyb..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (1 samples, 0.40%)</title><rect x="842" y="452" width="4" height="15" fill="rgb(207,84,3)"/><text x="845.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.40%)</title><rect x="842" y="468" width="4" height="15" fill="rgb(206,22,22)"/><text x="845.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (1 samples, 0.40%)</title><rect x="842" y="484" width="4" height="15" fill="rgb(235,52,10)"/><text x="845.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.40%)</title><rect x="842" y="500" width="4" height="15" fill="rgb(217,168,30)"/><text x="845.00" y="510.50"></text></g><g><title>0x7f54023ba991 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="842" y="516" width="4" height="15" fill="rgb(224,63,36)"/><text x="845.00" y="526.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (14 samples, 5.58%)</title><rect x="785" y="228" width="66" height="15" fill="rgb(231,55,32)"/><text x="788.00" y="238.50">_run (m..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (12 samples, 4.78%)</title><rect x="795" y="244" width="56" height="15" fill="rgb(222,28,1)"/><text x="798.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (12 samples, 4.78%)</title><rect x="795" y="260" width="56" height="15" fill="rgb(218,160,10)"/><text x="798.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (11 samples, 4.38%)</title><rect x="799" y="276" width="52" height="15" fill="rgb(208,178,25)"/><text x="802.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (11 samples, 4.38%)</title><rect x="799" y="292" width="52" height="15" fill="rgb(212,89,49)"/><text x="802.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (11 samples, 4.38%)</title><rect x="799" y="308" width="52" height="15" fill="rgb(236,142,13)"/><text x="802.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (11 samples, 4.38%)</title><rect x="799" y="324" width="52" height="15" fill="rgb(214,24,34)"/><text x="802.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (11 samples, 4.38%)</title><rect x="799" y="340" width="52" height="15" fill="rgb(207,85,44)"/><text x="802.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h:538) (11 samples, 4.38%)</title><rect x="799" y="356" width="52" height="15" fill="rgb(212,175,17)"/><text x="802.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (11 samples, 4.38%)</title><rect x="799" y="372" width="52" height="15" fill="rgb(237,112,0)"/><text x="802.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (11 samples, 4.38%)</title><rect x="799" y="388" width="52" height="15" fill="rgb(246,108,7)"/><text x="802.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (11 samples, 4.38%)</title><rect x="799" y="404" width="52" height="15" fill="rgb(223,57,37)"/><text x="802.00" y="414.50">pybin..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:261) (1 samples, 0.40%)</title><rect x="846" y="420" width="5" height="15" fill="rgb(240,55,48)"/><text x="849.00" y="430.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="846" y="436" width="5" height="15" fill="rgb(244,84,16)"/><text x="849.00" y="446.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:60) (1 samples, 0.40%)</title><rect x="851" y="228" width="5" height="15" fill="rgb(247,190,20)"/><text x="854.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (17 samples, 6.77%)</title><rect x="780" y="196" width="80" height="15" fill="rgb(222,4,42)"/><text x="783.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (17 samples, 6.77%)</title><rect x="780" y="212" width="80" height="15" fill="rgb(216,106,34)"/><text x="783.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:62) (1 samples, 0.40%)</title><rect x="856" y="228" width="4" height="15" fill="rgb(219,105,27)"/><text x="859.00" y="238.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.40%)</title><rect x="856" y="244" width="4" height="15" fill="rgb(213,148,42)"/><text x="859.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.40%)</title><rect x="856" y="260" width="4" height="15" fill="rgb(210,167,16)"/><text x="859.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.40%)</title><rect x="856" y="276" width="4" height="15" fill="rgb(241,55,17)"/><text x="859.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.40%)</title><rect x="856" y="292" width="4" height="15" fill="rgb(240,92,47)"/><text x="859.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.40%)</title><rect x="856" y="308" width="4" height="15" fill="rgb(252,5,24)"/><text x="859.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (29 samples, 11.55%)</title><rect x="733" y="180" width="137" height="15" fill="rgb(232,191,15)"/><text x="736.00" y="190.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (2 samples, 0.80%)</title><rect x="860" y="196" width="10" height="15" fill="rgb(215,2,5)"/><text x="863.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.40%)</title><rect x="865" y="212" width="5" height="15" fill="rgb(243,32,46)"/><text x="868.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.40%)</title><rect x="865" y="228" width="5" height="15" fill="rgb(209,86,14)"/><text x="868.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.40%)</title><rect x="870" y="180" width="5" height="15" fill="rgb(214,98,7)"/><text x="873.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.40%)</title><rect x="875" y="180" width="4" height="15" fill="rgb(214,175,15)"/><text x="878.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.80%)</title><rect x="879" y="180" width="10" height="15" fill="rgb(245,20,39)"/><text x="882.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (44 samples, 17.53%)</title><rect x="686" y="164" width="207" height="15" fill="rgb(254,13,10)"/><text x="689.00" y="174.50">_run_sequence_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.40%)</title><rect x="889" y="180" width="4" height="15" fill="rgb(241,89,53)"/><text x="892.00" y="190.50"></text></g><g><title>0x7f54023db124 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="893" y="180" width="5" height="15" fill="rgb(250,205,53)"/><text x="896.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.80%)</title><rect x="893" y="164" width="10" height="15" fill="rgb(217,173,41)"/><text x="896.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.40%)</title><rect x="898" y="180" width="5" height="15" fill="rgb(208,166,32)"/><text x="901.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:45) (56 samples, 22.31%)</title><rect x="644" y="52" width="263" height="15" fill="rgb(246,224,26)"/><text x="647.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_m_cl_probab..</text></g><g><title>profile_pyrt (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:44) (56 samples, 22.31%)</title><rect x="644" y="68" width="263" height="15" fill="rgb(215,7,39)"/><text x="647.00" y="78.50">profile_pyrt (bench_SVC_rbf_m_cl_pr..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:29) (54 samples, 21.51%)</title><rect x="654" y="84" width="253" height="15" fill="rgb(248,156,34)"/><text x="657.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:23) (54 samples, 21.51%)</title><rect x="654" y="100" width="253" height="15" fill="rgb(217,229,54)"/><text x="657.00" y="110.50">profile (bench_SVC_rbf_m_cl_proba..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (53 samples, 21.12%)</title><rect x="658" y="116" width="249" height="15" fill="rgb(252,29,20)"/><text x="661.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (53 samples, 21.12%)</title><rect x="658" y="132" width="249" height="15" fill="rgb(214,89,15)"/><text x="661.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (51 samples, 20.32%)</title><rect x="668" y="148" width="239" height="15" fill="rgb(250,109,7)"/><text x="671.00" y="158.50">run (mlprodict/onnxrt/onnx_infe..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.40%)</title><rect x="903" y="164" width="4" height="15" fill="rgb(223,86,10)"/><text x="906.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:949) (1 samples, 0.40%)</title><rect x="903" y="180" width="4" height="15" fill="rgb(236,86,44)"/><text x="906.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.40%)</title><rect x="907" y="116" width="5" height="15" fill="rgb(249,60,48)"/><text x="910.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.40%)</title><rect x="907" y="132" width="5" height="15" fill="rgb(211,135,15)"/><text x="910.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.40%)</title><rect x="907" y="148" width="5" height="15" fill="rgb(211,20,7)"/><text x="910.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.40%)</title><rect x="912" y="148" width="5" height="15" fill="rgb(206,58,19)"/><text x="915.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.40%)</title><rect x="926" y="196" width="5" height="15" fill="rgb(236,93,13)"/><text x="929.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:131) (1 samples, 0.40%)</title><rect x="931" y="196" width="5" height="15" fill="rgb(208,75,53)"/><text x="934.00" y="206.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="940" y="260" width="10" height="15" fill="rgb(251,4,24)"/><text x="943.00" y="270.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="950" y="260" width="4" height="15" fill="rgb(221,157,2)"/><text x="953.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (5 samples, 1.99%)</title><rect x="936" y="196" width="23" height="15" fill="rgb(246,43,30)"/><text x="939.00" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (5 samples, 1.99%)</title><rect x="936" y="212" width="23" height="15" fill="rgb(229,218,9)"/><text x="939.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.99%)</title><rect x="936" y="228" width="23" height="15" fill="rgb(242,169,33)"/><text x="939.00" y="238.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.59%)</title><rect x="940" y="244" width="19" height="15" fill="rgb(219,36,32)"/><text x="943.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="954" y="260" width="5" height="15" fill="rgb(208,130,23)"/><text x="957.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="954" y="276" width="5" height="15" fill="rgb(222,31,53)"/><text x="957.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="954" y="292" width="5" height="15" fill="rgb(254,85,9)"/><text x="957.00" y="302.50"></text></g><g><title>0x7f53c23eaff9 (?) (1 samples, 0.40%)</title><rect x="959" y="212" width="5" height="15" fill="rgb(231,1,0)"/><text x="962.00" y="222.50"></text></g><g><title>0x7f53c23e5ef6 (?) (1 samples, 0.40%)</title><rect x="959" y="228" width="5" height="15" fill="rgb(247,95,32)"/><text x="962.00" y="238.50"></text></g><g><title>0x7f53c23da962 (?) (1 samples, 0.40%)</title><rect x="959" y="244" width="5" height="15" fill="rgb(216,36,43)"/><text x="962.00" y="254.50"></text></g><g><title>0x7f53c240e7a7 (?) (1 samples, 0.40%)</title><rect x="959" y="260" width="5" height="15" fill="rgb(231,47,16)"/><text x="962.00" y="270.50"></text></g><g><title>0x7f53c240df8a (?) (1 samples, 0.40%)</title><rect x="959" y="276" width="5" height="15" fill="rgb(220,72,54)"/><text x="962.00" y="286.50"></text></g><g><title>0x7f53c2406ec3 (?) (1 samples, 0.40%)</title><rect x="959" y="292" width="5" height="15" fill="rgb(248,210,24)"/><text x="962.00" y="302.50"></text></g><g><title>0x7f53c23c9a62 (?) (1 samples, 0.40%)</title><rect x="959" y="308" width="5" height="15" fill="rgb(224,63,16)"/><text x="962.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="959" y="324" width="5" height="15" fill="rgb(250,17,51)"/><text x="962.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="959" y="340" width="5" height="15" fill="rgb(234,190,52)"/><text x="962.00" y="350.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.40%)</title><rect x="964" y="212" width="5" height="15" fill="rgb(236,67,46)"/><text x="967.00" y="222.50"></text></g><g><title>0x7ffd78f00bb2 ([vdso]) (1 samples, 0.40%)</title><rect x="964" y="228" width="5" height="15" fill="rgb(214,31,53)"/><text x="967.00" y="238.50"></text></g><g><title>0x7ffd78f00949 ([vdso]) (1 samples, 0.40%)</title><rect x="964" y="244" width="5" height="15" fill="rgb(215,43,6)"/><text x="967.00" y="254.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="969" y="228" width="4" height="15" fill="rgb(252,210,22)"/><text x="972.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="969" y="244" width="4" height="15" fill="rgb(222,41,30)"/><text x="972.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="983" y="260" width="4" height="15" fill="rgb(237,26,27)"/><text x="986.00" y="270.50"></text></g><g><title>onnxruntime::DataTypeImpl::GetType&lt;std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="987" y="260" width="5" height="15" fill="rgb(214,227,22)"/><text x="990.00" y="270.50"></text></g><g><title>onnxruntime::DataTypeImpl::GetType&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="992" y="260" width="5" height="15" fill="rgb(230,111,53)"/><text x="995.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1001" y="292" width="5" height="15" fill="rgb(236,169,18)"/><text x="1004.00" y="302.50"></text></g><g><title>0x7f54023bad07 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1001" y="308" width="5" height="15" fill="rgb(235,10,48)"/><text x="1004.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1016" y="420" width="4" height="15" fill="rgb(251,54,27)"/><text x="1019.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1016" y="436" width="4" height="15" fill="rgb(221,22,52)"/><text x="1019.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1016" y="452" width="4" height="15" fill="rgb(222,209,14)"/><text x="1019.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1016" y="468" width="4" height="15" fill="rgb(223,91,43)"/><text x="1019.00" y="478.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1016" y="484" width="4" height="15" fill="rgb(217,110,1)"/><text x="1019.00" y="494.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="1016" y="500" width="4" height="15" fill="rgb(251,119,7)"/><text x="1019.00" y="510.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.20%)</title><rect x="1011" y="340" width="14" height="15" fill="rgb(224,27,7)"/><text x="1014.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.20%)</title><rect x="1011" y="356" width="14" height="15" fill="rgb(228,65,49)"/><text x="1014.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.20%)</title><rect x="1011" y="372" width="14" height="15" fill="rgb(219,196,2)"/><text x="1014.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.20%)</title><rect x="1011" y="388" width="14" height="15" fill="rgb(220,137,17)"/><text x="1014.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.20%)</title><rect x="1011" y="404" width="14" height="15" fill="rgb(206,66,49)"/><text x="1014.00" y="414.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1020" y="420" width="5" height="15" fill="rgb(236,226,35)"/><text x="1023.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1025" y="340" width="9" height="15" fill="rgb(252,51,27)"/><text x="1028.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1025" y="356" width="9" height="15" fill="rgb(226,220,51)"/><text x="1028.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1030" y="372" width="4" height="15" fill="rgb(246,84,6)"/><text x="1033.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1030" y="388" width="4" height="15" fill="rgb(240,105,47)"/><text x="1033.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1034" y="340" width="5" height="15" fill="rgb(230,194,43)"/><text x="1037.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1034" y="356" width="5" height="15" fill="rgb(209,198,27)"/><text x="1037.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1034" y="372" width="5" height="15" fill="rgb(223,127,47)"/><text x="1037.00" y="382.50"></text></g><g><title>0x7f54023ba991 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1063" y="356" width="4" height="15" fill="rgb(220,161,16)"/><text x="1066.00" y="366.50"></text></g><g><title>0x7f540258cbe2 (libm-2.29.so) (1 samples, 0.40%)</title><rect x="1072" y="372" width="5" height="15" fill="rgb(212,23,5)"/><text x="1075.00" y="382.50"></text></g><g><title>0x7f540258cbeb (libm-2.29.so) (1 samples, 0.40%)</title><rect x="1077" y="372" width="4" height="15" fill="rgb(216,117,32)"/><text x="1080.00" y="382.50"></text></g><g><title>0x7f540258cc10 (libm-2.29.so) (1 samples, 0.40%)</title><rect x="1081" y="372" width="5" height="15" fill="rgb(233,25,29)"/><text x="1084.00" y="382.50"></text></g><g><title>expf32x (libm-2.29.so) (5 samples, 1.99%)</title><rect x="1067" y="356" width="24" height="15" fill="rgb(232,196,36)"/><text x="1070.00" y="366.50">e..</text></g><g><title>0x7f540258cc7b (libm-2.29.so) (1 samples, 0.40%)</title><rect x="1086" y="372" width="5" height="15" fill="rgb(246,85,37)"/><text x="1089.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1091" y="356" width="9" height="15" fill="rgb(211,104,43)"/><text x="1094.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1091" y="372" width="9" height="15" fill="rgb(216,195,16)"/><text x="1094.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1091" y="388" width="9" height="15" fill="rgb(248,150,13)"/><text x="1094.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1091" y="404" width="9" height="15" fill="rgb(232,195,9)"/><text x="1094.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1095" y="420" width="5" height="15" fill="rgb(215,13,17)"/><text x="1098.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1095" y="436" width="5" height="15" fill="rgb(235,32,19)"/><text x="1098.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1095" y="452" width="5" height="15" fill="rgb(219,83,31)"/><text x="1098.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1095" y="468" width="5" height="15" fill="rgb(239,9,5)"/><text x="1098.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1095" y="484" width="5" height="15" fill="rgb(222,175,2)"/><text x="1098.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="1100" y="356" width="5" height="15" fill="rgb(244,160,14)"/><text x="1103.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1100" y="372" width="5" height="15" fill="rgb(244,210,44)"/><text x="1103.00" y="382.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 8.76%)</title><rect x="1006" y="292" width="104" height="15" fill="rgb(243,200,3)"/><text x="1009.00" y="302.50">onnxruntime:..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 8.76%)</title><rect x="1006" y="308" width="104" height="15" fill="rgb(239,146,53)"/><text x="1009.00" y="318.50">onnxruntime:..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 8.76%)</title><rect x="1006" y="324" width="104" height="15" fill="rgb(230,178,14)"/><text x="1009.00" y="334.50">onnxruntime:..</text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 5.98%)</title><rect x="1039" y="340" width="71" height="15" fill="rgb(210,144,42)"/><text x="1042.00" y="350.50">onnxrunt..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1105" y="356" width="5" height="15" fill="rgb(213,90,36)"/><text x="1108.00" y="366.50"></text></g><g><title>0x7f54023dae04 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1105" y="372" width="5" height="15" fill="rgb(254,170,31)"/><text x="1108.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 9.96%)</title><rect x="997" y="260" width="117" height="15" fill="rgb(217,106,8)"/><text x="1000.00" y="270.50">onnxruntime::I..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 9.56%)</title><rect x="1001" y="276" width="113" height="15" fill="rgb(222,39,11)"/><text x="1004.00" y="286.50">onnxruntime::..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="1110" y="292" width="4" height="15" fill="rgb(240,184,48)"/><text x="1113.00" y="302.50"></text></g><g><title>0x7f53f1e867d0 (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="1110" y="308" width="4" height="15" fill="rgb(237,153,2)"/><text x="1113.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="1114" y="276" width="10" height="15" fill="rgb(239,108,15)"/><text x="1117.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.20%)</title><rect x="1114" y="260" width="14" height="15" fill="rgb(232,174,7)"/><text x="1117.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.40%)</title><rect x="1124" y="276" width="4" height="15" fill="rgb(210,166,27)"/><text x="1127.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1767) (1 samples, 0.40%)</title><rect x="1133" y="308" width="5" height="15" fill="rgb(225,193,1)"/><text x="1136.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (2 samples, 0.80%)</title><rect x="1133" y="292" width="9" height="15" fill="rgb(225,94,46)"/><text x="1136.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.40%)</title><rect x="1138" y="308" width="4" height="15" fill="rgb(207,180,8)"/><text x="1141.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.40%)</title><rect x="1142" y="292" width="5" height="15" fill="rgb(229,188,52)"/><text x="1145.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (37 samples, 14.74%)</title><rect x="978" y="244" width="174" height="15" fill="rgb(244,155,16)"/><text x="981.00" y="254.50">onnxruntime::python::a..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.99%)</title><rect x="1128" y="260" width="24" height="15" fill="rgb(225,108,46)"/><text x="1131.00" y="270.50">o..</text></g><g><title>PyArray_New (ctors.c:1378) (4 samples, 1.59%)</title><rect x="1133" y="276" width="19" height="15" fill="rgb(242,113,30)"/><text x="1136.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1077) (1 samples, 0.40%)</title><rect x="1147" y="292" width="5" height="15" fill="rgb(211,70,12)"/><text x="1150.00" y="302.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1152" y="244" width="5" height="15" fill="rgb(211,97,2)"/><text x="1155.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1152" y="260" width="5" height="15" fill="rgb(230,206,51)"/><text x="1155.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1152" y="276" width="5" height="15" fill="rgb(231,190,27)"/><text x="1155.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="1152" y="292" width="5" height="15" fill="rgb(217,7,47)"/><text x="1155.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1152" y="308" width="5" height="15" fill="rgb(215,141,32)"/><text x="1155.00" y="318.50"></text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1157" y="244" width="4" height="15" fill="rgb(245,142,10)"/><text x="1160.00" y="254.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (53 samples, 21.12%)</title><rect x="917" y="164" width="249" height="15" fill="rgb(238,22,31)"/><text x="920.00" y="174.50">_run_whole_runtime (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (52 samples, 20.72%)</title><rect x="922" y="180" width="244" height="15" fill="rgb(229,142,15)"/><text x="925.00" y="190.50">run (mlprodict/onnxrt/ops_whole/..</text></g><g><title>run (onnxruntime/capi/session.py:136) (44 samples, 17.53%)</title><rect x="959" y="196" width="207" height="15" fill="rgb(219,54,21)"/><text x="962.00" y="206.50">run (onnxruntime/capi/sessi..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (42 samples, 16.73%)</title><rect x="969" y="212" width="197" height="15" fill="rgb(236,112,14)"/><text x="972.00" y="222.50">pybind11::cpp_function::d..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 16.33%)</title><rect x="973" y="228" width="193" height="15" fill="rgb(230,123,9)"/><text x="976.00" y="238.50">void pybind11::cpp_functi..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1161" y="244" width="5" height="15" fill="rgb(249,108,4)"/><text x="1164.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1161" y="260" width="5" height="15" fill="rgb(214,216,25)"/><text x="1164.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (58 samples, 23.11%)</title><rect x="912" y="132" width="273" height="15" fill="rgb(254,35,2)"/><text x="915.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (57 samples, 22.71%)</title><rect x="917" y="148" width="268" height="15" fill="rgb(214,223,42)"/><text x="920.00" y="158.50">run (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 1.59%)</title><rect x="1166" y="164" width="19" height="15" fill="rgb(224,222,39)"/><text x="1169.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.40%)</title><rect x="1180" y="180" width="5" height="15" fill="rgb(227,165,17)"/><text x="1183.00" y="190.50"></text></g><g><title>all (251 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(251,111,38)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:52) (60 samples, 23.90%)</title><rect x="907" y="52" width="283" height="15" fill="rgb(212,225,39)"/><text x="910.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_m_cl_probabil..</text></g><g><title>profile_ort (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:51) (60 samples, 23.90%)</title><rect x="907" y="68" width="283" height="15" fill="rgb(224,99,45)"/><text x="910.00" y="78.50">profile_ort (bench_SVC_rbf_m_cl_proba..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:29) (60 samples, 23.90%)</title><rect x="907" y="84" width="283" height="15" fill="rgb(211,33,25)"/><text x="910.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_pro..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1_50_12_float_.py:23) (60 samples, 23.90%)</title><rect x="907" y="100" width="283" height="15" fill="rgb(243,179,4)"/><text x="910.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabili..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (59 samples, 23.51%)</title><rect x="912" y="116" width="278" height="15" fill="rgb(254,1,3)"/><text x="915.00" y="126.50">time_predict (mlprodict/asv_benchmark..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.40%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(219,183,45)"/><text x="1188.00" y="142.50"></text></g></g></svg>