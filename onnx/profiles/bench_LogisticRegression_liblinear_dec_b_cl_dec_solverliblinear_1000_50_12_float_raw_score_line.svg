<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2214" onload="init(evt)" viewBox="0 0 1200 2214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2214" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2197.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2197.00"> </text><g id="frames"><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:18) (1 samples, 0.15%)</title><rect x="10" y="100" width="1" height="15" fill="rgb(223,218,26)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.15%)</title><rect x="10" y="116" width="1" height="15" fill="rgb(238,211,26)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252) (1 samples, 0.15%)</title><rect x="10" y="132" width="1" height="15" fill="rgb(212,150,41)"/><text x="13.00" y="142.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (1 samples, 0.15%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(244,118,6)"/><text x="13.00" y="158.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.15%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(243,54,33)"/><text x="13.00" y="174.50"></text></g><g><title>array_matrix_multiply (number.c:390) (1 samples, 0.15%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(234,21,3)"/><text x="13.00" y="190.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c:281) (1 samples, 0.15%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(241,161,28)"/><text x="13.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.15%)</title><rect x="17" y="164" width="2" height="15" fill="rgb(213,57,5)"/><text x="20.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (2 samples, 0.31%)</title><rect x="19" y="164" width="3" height="15" fill="rgb(229,104,2)"/><text x="22.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.61%)</title><rect x="22" y="180" width="7" height="15" fill="rgb(250,38,12)"/><text x="25.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.31%)</title><rect x="26" y="196" width="3" height="15" fill="rgb(246,175,37)"/><text x="29.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (8 samples, 1.22%)</title><rect x="17" y="148" width="14" height="15" fill="rgb(213,202,16)"/><text x="20.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 0.76%)</title><rect x="22" y="164" width="9" height="15" fill="rgb(230,159,30)"/><text x="25.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.15%)</title><rect x="29" y="180" width="2" height="15" fill="rgb(224,112,32)"/><text x="32.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.15%)</title><rect x="31" y="164" width="2" height="15" fill="rgb(218,181,1)"/><text x="34.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:462) (1 samples, 0.15%)</title><rect x="33" y="164" width="2" height="15" fill="rgb(232,153,47)"/><text x="36.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.15%)</title><rect x="35" y="164" width="2" height="15" fill="rgb(215,92,38)"/><text x="38.00" y="174.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.15%)</title><rect x="38" y="180" width="2" height="15" fill="rgb(207,203,7)"/><text x="41.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.46%)</title><rect x="37" y="164" width="5" height="15" fill="rgb(246,155,48)"/><text x="40.00" y="174.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.15%)</title><rect x="40" y="180" width="2" height="15" fill="rgb(210,92,28)"/><text x="43.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:186) (5 samples, 0.76%)</title><rect x="44" y="196" width="9" height="15" fill="rgb(226,115,22)"/><text x="47.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (7 samples, 1.07%)</title><rect x="42" y="164" width="13" height="15" fill="rgb(248,185,41)"/><text x="45.00" y="174.50"></text></g><g><title>simplefilter (warnings.py:179) (6 samples, 0.92%)</title><rect x="44" y="180" width="11" height="15" fill="rgb(237,94,3)"/><text x="47.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.15%)</title><rect x="53" y="196" width="2" height="15" fill="rgb(219,116,40)"/><text x="56.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.15%)</title><rect x="55" y="164" width="1" height="15" fill="rgb(222,195,39)"/><text x="58.00" y="174.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.15%)</title><rect x="55" y="180" width="1" height="15" fill="rgb(207,130,14)"/><text x="58.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.15%)</title><rect x="58" y="180" width="2" height="15" fill="rgb(219,205,36)"/><text x="61.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 0.46%)</title><rect x="56" y="164" width="6" height="15" fill="rgb(213,204,34)"/><text x="59.00" y="174.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.15%)</title><rect x="60" y="180" width="2" height="15" fill="rgb(214,82,23)"/><text x="63.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.15%)</title><rect x="62" y="164" width="2" height="15" fill="rgb(237,47,18)"/><text x="65.00" y="174.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.15%)</title><rect x="62" y="180" width="2" height="15" fill="rgb(229,39,11)"/><text x="65.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.15%)</title><rect x="64" y="164" width="1" height="15" fill="rgb(227,229,15)"/><text x="67.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.15%)</title><rect x="65" y="164" width="2" height="15" fill="rgb(209,171,25)"/><text x="68.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.31%)</title><rect x="67" y="164" width="4" height="15" fill="rgb(246,92,23)"/><text x="70.00" y="174.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.31%)</title><rect x="67" y="180" width="4" height="15" fill="rgb(205,19,13)"/><text x="70.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.31%)</title><rect x="67" y="196" width="4" height="15" fill="rgb(236,162,45)"/><text x="70.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.46%)</title><rect x="73" y="180" width="5" height="15" fill="rgb(229,99,24)"/><text x="76.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 0.92%)</title><rect x="71" y="164" width="11" height="15" fill="rgb(221,33,47)"/><text x="74.00" y="174.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.31%)</title><rect x="78" y="180" width="4" height="15" fill="rgb(224,172,18)"/><text x="81.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.15%)</title><rect x="80" y="196" width="2" height="15" fill="rgb(250,155,41)"/><text x="83.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.15%)</title><rect x="80" y="212" width="2" height="15" fill="rgb(224,68,8)"/><text x="83.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:566) (1 samples, 0.15%)</title><rect x="82" y="164" width="1" height="15" fill="rgb(231,183,39)"/><text x="85.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (30 samples, 4.59%)</title><rect x="31" y="148" width="54" height="15" fill="rgb(235,18,22)"/><text x="34.00" y="158.50">decis..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.15%)</title><rect x="83" y="164" width="2" height="15" fill="rgb(252,184,14)"/><text x="86.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (2 samples, 0.31%)</title><rect x="85" y="148" width="4" height="15" fill="rgb(205,66,53)"/><text x="88.00" y="158.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (2 samples, 0.31%)</title><rect x="89" y="148" width="3" height="15" fill="rgb(211,18,42)"/><text x="92.00" y="158.50"></text></g><g><title>PyArray_Transpose (shape.c:675) (1 samples, 0.15%)</title><rect x="91" y="164" width="1" height="15" fill="rgb(245,104,45)"/><text x="94.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.15%)</title><rect x="92" y="196" width="2" height="15" fill="rgb(210,130,27)"/><text x="95.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1056) (1 samples, 0.15%)</title><rect x="92" y="212" width="2" height="15" fill="rgb(247,156,22)"/><text x="95.00" y="222.50"></text></g><g><title>0x7f6e964e614a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="92" y="228" width="2" height="15" fill="rgb(215,203,41)"/><text x="95.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.15%)</title><rect x="94" y="212" width="2" height="15" fill="rgb(219,64,20)"/><text x="97.00" y="222.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.15%)</title><rect x="94" y="228" width="2" height="15" fill="rgb(222,208,53)"/><text x="97.00" y="238.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.15%)</title><rect x="94" y="244" width="2" height="15" fill="rgb(250,168,46)"/><text x="97.00" y="254.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4414) (1 samples, 0.15%)</title><rect x="94" y="260" width="2" height="15" fill="rgb(217,40,9)"/><text x="97.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.31%)</title><rect x="94" y="196" width="4" height="15" fill="rgb(233,140,31)"/><text x="97.00" y="206.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.15%)</title><rect x="96" y="212" width="2" height="15" fill="rgb(251,67,19)"/><text x="99.00" y="222.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:255) (1 samples, 0.15%)</title><rect x="96" y="228" width="2" height="15" fill="rgb(239,92,21)"/><text x="99.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1471) (1 samples, 0.15%)</title><rect x="98" y="228" width="2" height="15" fill="rgb(222,12,21)"/><text x="101.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.15%)</title><rect x="100" y="244" width="2" height="15" fill="rgb(210,23,1)"/><text x="103.00" y="254.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1679) (1 samples, 0.15%)</title><rect x="100" y="260" width="2" height="15" fill="rgb(206,36,15)"/><text x="103.00" y="270.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.15%)</title><rect x="102" y="260" width="1" height="15" fill="rgb(214,54,49)"/><text x="105.00" y="270.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3614) (1 samples, 0.15%)</title><rect x="102" y="276" width="1" height="15" fill="rgb(227,211,35)"/><text x="105.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.46%)</title><rect x="100" y="228" width="5" height="15" fill="rgb(206,65,29)"/><text x="103.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (2 samples, 0.31%)</title><rect x="102" y="244" width="3" height="15" fill="rgb(237,160,46)"/><text x="105.00" y="254.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3260) (1 samples, 0.15%)</title><rect x="103" y="260" width="2" height="15" fill="rgb(230,178,34)"/><text x="106.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.31%)</title><rect x="105" y="276" width="4" height="15" fill="rgb(222,109,7)"/><text x="108.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.15%)</title><rect x="109" y="276" width="2" height="15" fill="rgb(247,193,39)"/><text x="112.00" y="286.50"></text></g><g><title>0x7f6e964e5d62 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="111" y="292" width="1" height="15" fill="rgb(206,2,51)"/><text x="114.00" y="302.50"></text></g><g><title>0x7f6e964e5d6a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="112" y="292" width="2" height="15" fill="rgb(220,32,7)"/><text x="115.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 1.07%)</title><rect x="105" y="228" width="13" height="15" fill="rgb(248,79,37)"/><text x="108.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (7 samples, 1.07%)</title><rect x="105" y="244" width="13" height="15" fill="rgb(213,37,30)"/><text x="108.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 1.07%)</title><rect x="105" y="260" width="13" height="15" fill="rgb(205,171,27)"/><text x="108.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 0.61%)</title><rect x="111" y="276" width="7" height="15" fill="rgb(234,99,53)"/><text x="114.00" y="286.50"></text></g><g><title>0x7f6e964e5d6f (libc-2.29.so) (2 samples, 0.31%)</title><rect x="114" y="292" width="4" height="15" fill="rgb(210,113,10)"/><text x="117.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (2 samples, 0.31%)</title><rect x="118" y="276" width="3" height="15" fill="rgb(224,202,46)"/><text x="121.00" y="286.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (2 samples, 0.31%)</title><rect x="118" y="292" width="3" height="15" fill="rgb(238,221,26)"/><text x="121.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.46%)</title><rect x="118" y="228" width="5" height="15" fill="rgb(236,205,27)"/><text x="121.00" y="238.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (3 samples, 0.46%)</title><rect x="118" y="244" width="5" height="15" fill="rgb(211,74,9)"/><text x="121.00" y="254.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (3 samples, 0.46%)</title><rect x="118" y="260" width="5" height="15" fill="rgb(234,140,0)"/><text x="121.00" y="270.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.15%)</title><rect x="121" y="276" width="2" height="15" fill="rgb(242,128,40)"/><text x="124.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.15%)</title><rect x="121" y="292" width="2" height="15" fill="rgb(246,100,3)"/><text x="124.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:661) (1 samples, 0.15%)</title><rect x="125" y="244" width="2" height="15" fill="rgb(253,95,11)"/><text x="128.00" y="254.50"></text></g><g><title>array_add (number.c:330) (20 samples, 3.06%)</title><rect x="92" y="164" width="37" height="15" fill="rgb(209,31,17)"/><text x="95.00" y="174.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (20 samples, 3.06%)</title><rect x="92" y="180" width="37" height="15" fill="rgb(215,172,33)"/><text x="95.00" y="190.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (17 samples, 2.60%)</title><rect x="98" y="196" width="31" height="15" fill="rgb(229,170,32)"/><text x="101.00" y="206.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (17 samples, 2.60%)</title><rect x="98" y="212" width="31" height="15" fill="rgb(252,113,10)"/><text x="101.00" y="222.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (3 samples, 0.46%)</title><rect x="123" y="228" width="6" height="15" fill="rgb(223,161,29)"/><text x="126.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.15%)</title><rect x="127" y="244" width="2" height="15" fill="rgb(220,222,29)"/><text x="130.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="127" y="260" width="2" height="15" fill="rgb(222,205,6)"/><text x="130.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.15%)</title><rect x="129" y="164" width="1" height="15" fill="rgb(239,200,33)"/><text x="132.00" y="174.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.61%)</title><rect x="132" y="180" width="7" height="15" fill="rgb(234,125,41)"/><text x="135.00" y="190.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (33 samples, 5.05%)</title><rect x="139" y="180" width="60" height="15" fill="rgb(251,133,11)"/><text x="142.00" y="190.50">dgemm_..</text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.15%)</title><rect x="199" y="228" width="2" height="15" fill="rgb(231,47,17)"/><text x="202.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:282) (1 samples, 0.15%)</title><rect x="201" y="228" width="2" height="15" fill="rgb(227,95,4)"/><text x="204.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2846) (3 samples, 0.46%)</title><rect x="199" y="212" width="5" height="15" fill="rgb(211,173,12)"/><text x="202.00" y="222.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:296) (1 samples, 0.15%)</title><rect x="203" y="228" width="1" height="15" fill="rgb(217,142,20)"/><text x="206.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:295) (1 samples, 0.15%)</title><rect x="204" y="228" width="2" height="15" fill="rgb(218,88,3)"/><text x="207.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.15%)</title><rect x="206" y="244" width="2" height="15" fill="rgb(232,94,4)"/><text x="209.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2477) (1 samples, 0.15%)</title><rect x="208" y="260" width="2" height="15" fill="rgb(249,4,1)"/><text x="211.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (2 samples, 0.31%)</title><rect x="208" y="244" width="4" height="15" fill="rgb(219,189,41)"/><text x="211.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.15%)</title><rect x="210" y="260" width="2" height="15" fill="rgb(215,150,33)"/><text x="213.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.15%)</title><rect x="210" y="276" width="2" height="15" fill="rgb(231,185,23)"/><text x="213.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.15%)</title><rect x="210" y="292" width="2" height="15" fill="rgb(205,51,43)"/><text x="213.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.15%)</title><rect x="210" y="308" width="2" height="15" fill="rgb(247,177,7)"/><text x="213.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.15%)</title><rect x="210" y="324" width="2" height="15" fill="rgb(247,85,32)"/><text x="213.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.15%)</title><rect x="210" y="340" width="2" height="15" fill="rgb(238,214,21)"/><text x="213.00" y="350.50"></text></g><g><title>0x7f6e956e72d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="210" y="356" width="2" height="15" fill="rgb(251,48,15)"/><text x="213.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (36 samples, 5.50%)</title><rect x="212" y="276" width="65" height="15" fill="rgb(216,80,54)"/><text x="215.00" y="286.50">raw_arr..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (36 samples, 5.50%)</title><rect x="212" y="292" width="65" height="15" fill="rgb(237,62,25)"/><text x="215.00" y="302.50">_aligne..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (41 samples, 6.27%)</title><rect x="204" y="212" width="74" height="15" fill="rgb(243,100,27)"/><text x="207.00" y="222.50">PyUFunc_..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (40 samples, 6.12%)</title><rect x="206" y="228" width="72" height="15" fill="rgb(205,142,10)"/><text x="209.00" y="238.50">NpyIter_..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (37 samples, 5.66%)</title><rect x="212" y="244" width="66" height="15" fill="rgb(218,148,1)"/><text x="215.00" y="254.50">npyiter..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (37 samples, 5.66%)</title><rect x="212" y="260" width="66" height="15" fill="rgb(247,201,0)"/><text x="215.00" y="270.50">PyArray..</text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.15%)</title><rect x="277" y="276" width="1" height="15" fill="rgb(220,95,21)"/><text x="280.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3962) (1 samples, 0.15%)</title><rect x="277" y="292" width="1" height="15" fill="rgb(210,183,1)"/><text x="280.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.15%)</title><rect x="278" y="212" width="2" height="15" fill="rgb(223,215,38)"/><text x="281.00" y="222.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:73) (1 samples, 0.15%)</title><rect x="278" y="228" width="2" height="15" fill="rgb(221,209,20)"/><text x="281.00" y="238.50"></text></g><g><title>DOUBLE_matmul_matrixmatrix (matmul.c.src:184) (1 samples, 0.15%)</title><rect x="280" y="244" width="2" height="15" fill="rgb(243,162,29)"/><text x="283.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (31 samples, 4.74%)</title><rect x="280" y="212" width="56" height="15" fill="rgb(211,194,48)"/><text x="283.00" y="222.50">PyUFu..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (31 samples, 4.74%)</title><rect x="280" y="228" width="56" height="15" fill="rgb(242,192,35)"/><text x="283.00" y="238.50">DOUBL..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (30 samples, 4.59%)</title><rect x="282" y="244" width="54" height="15" fill="rgb(234,186,15)"/><text x="285.00" y="254.50">cblas..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (29 samples, 4.43%)</title><rect x="284" y="260" width="52" height="15" fill="rgb(239,167,20)"/><text x="287.00" y="270.50">dgemm..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (28 samples, 4.28%)</title><rect x="286" y="276" width="50" height="15" fill="rgb(241,26,53)"/><text x="289.00" y="286.50">dgemm..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.15%)</title><rect x="336" y="212" width="2" height="15" fill="rgb(248,224,47)"/><text x="339.00" y="222.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.15%)</title><rect x="336" y="228" width="2" height="15" fill="rgb(244,98,51)"/><text x="339.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.15%)</title><rect x="336" y="244" width="2" height="15" fill="rgb(240,129,5)"/><text x="339.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.15%)</title><rect x="336" y="260" width="2" height="15" fill="rgb(243,138,18)"/><text x="339.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:38) (183 samples, 27.98%)</title><rect x="10" y="52" width="330" height="15" fill="rgb(237,34,30)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:37) (183 samples, 27.98%)</title><rect x="10" y="68" width="330" height="15" fill="rgb(208,71,32)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblin..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:29) (183 samples, 27.98%)</title><rect x="10" y="84" width="330" height="15" fill="rgb(221,91,23)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_libl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:23) (182 samples, 27.83%)</title><rect x="11" y="100" width="329" height="15" fill="rgb(223,96,14)"/><text x="14.00" y="110.50">profile (bench_LogisticRegression_liblinear_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (179 samples, 27.37%)</title><rect x="17" y="116" width="323" height="15" fill="rgb(212,150,40)"/><text x="20.00" y="126.50">time_predict (mlprodict/asv_benchmark/commo..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252) (179 samples, 27.37%)</title><rect x="17" y="132" width="323" height="15" fill="rgb(253,63,25)"/><text x="20.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_as..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (137 samples, 20.95%)</title><rect x="92" y="148" width="248" height="15" fill="rgb(228,201,3)"/><text x="95.00" y="158.50">decision_function (sklearn/linear..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (116 samples, 17.74%)</title><rect x="130" y="164" width="210" height="15" fill="rgb(238,204,41)"/><text x="133.00" y="174.50">safe_sparse_dot (sklearn/ut..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (78 samples, 11.93%)</title><rect x="199" y="180" width="141" height="15" fill="rgb(240,156,14)"/><text x="202.00" y="190.50">ufunc_generic_cal..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (78 samples, 11.93%)</title><rect x="199" y="196" width="141" height="15" fill="rgb(228,5,18)"/><text x="202.00" y="206.50">PyUFunc_GenericFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3091) (1 samples, 0.15%)</title><rect x="338" y="212" width="2" height="15" fill="rgb(231,193,28)"/><text x="341.00" y="222.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="338" y="228" width="2" height="15" fill="rgb(237,197,41)"/><text x="341.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.15%)</title><rect x="340" y="244" width="1" height="15" fill="rgb(206,146,49)"/><text x="343.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="340" y="260" width="1" height="15" fill="rgb(228,93,32)"/><text x="343.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="340" y="276" width="1" height="15" fill="rgb(236,130,18)"/><text x="343.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="340" y="292" width="1" height="15" fill="rgb(251,183,52)"/><text x="343.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="340" y="308" width="1" height="15" fill="rgb(223,224,22)"/><text x="343.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="340" y="324" width="1" height="15" fill="rgb(243,128,12)"/><text x="343.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="340" y="340" width="1" height="15" fill="rgb(245,94,0)"/><text x="343.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="340" y="356" width="1" height="15" fill="rgb(246,107,6)"/><text x="343.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.15%)</title><rect x="340" y="372" width="1" height="15" fill="rgb(233,172,42)"/><text x="343.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="340" y="388" width="1" height="15" fill="rgb(206,188,52)"/><text x="343.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="340" y="404" width="1" height="15" fill="rgb(237,108,53)"/><text x="343.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="340" y="420" width="1" height="15" fill="rgb(231,4,23)"/><text x="343.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="340" y="436" width="1" height="15" fill="rgb(249,190,45)"/><text x="343.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="340" y="452" width="1" height="15" fill="rgb(210,86,10)"/><text x="343.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="340" y="468" width="1" height="15" fill="rgb(228,103,13)"/><text x="343.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="340" y="484" width="1" height="15" fill="rgb(242,171,5)"/><text x="343.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.15%)</title><rect x="340" y="500" width="1" height="15" fill="rgb(240,138,47)"/><text x="343.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="340" y="516" width="1" height="15" fill="rgb(252,5,54)"/><text x="343.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="340" y="532" width="1" height="15" fill="rgb(231,97,51)"/><text x="343.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="340" y="548" width="1" height="15" fill="rgb(226,73,3)"/><text x="343.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="340" y="564" width="1" height="15" fill="rgb(227,219,51)"/><text x="343.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="340" y="580" width="1" height="15" fill="rgb(234,122,30)"/><text x="343.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="340" y="596" width="1" height="15" fill="rgb(243,170,1)"/><text x="343.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="340" y="612" width="1" height="15" fill="rgb(238,41,3)"/><text x="343.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:7) (1 samples, 0.15%)</title><rect x="340" y="628" width="1" height="15" fill="rgb(226,129,17)"/><text x="343.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="340" y="644" width="1" height="15" fill="rgb(237,92,33)"/><text x="343.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="340" y="660" width="1" height="15" fill="rgb(249,109,32)"/><text x="343.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.15%)</title><rect x="340" y="676" width="1" height="15" fill="rgb(231,120,16)"/><text x="343.00" y="686.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.15%)</title><rect x="340" y="692" width="1" height="15" fill="rgb(219,222,26)"/><text x="343.00" y="702.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.15%)</title><rect x="340" y="708" width="1" height="15" fill="rgb(205,73,0)"/><text x="343.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="340" y="724" width="1" height="15" fill="rgb(247,170,36)"/><text x="343.00" y="734.50"></text></g><g><title>PyInit__multiarray_umath (multiarraymodule.c:4633) (1 samples, 0.15%)</title><rect x="340" y="740" width="1" height="15" fill="rgb(224,33,2)"/><text x="343.00" y="750.50"></text></g><g><title>setup_scalartypes (multiarraymodule.c:4344) (1 samples, 0.15%)</title><rect x="340" y="756" width="1" height="15" fill="rgb(236,97,38)"/><text x="343.00" y="766.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:1) (2 samples, 0.31%)</title><rect x="340" y="148" width="3" height="15" fill="rgb(205,170,46)"/><text x="343.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="340" y="164" width="3" height="15" fill="rgb(239,191,50)"/><text x="343.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="340" y="180" width="3" height="15" fill="rgb(229,32,30)"/><text x="343.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="340" y="196" width="3" height="15" fill="rgb(218,124,24)"/><text x="343.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="340" y="212" width="3" height="15" fill="rgb(249,180,5)"/><text x="343.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="340" y="228" width="3" height="15" fill="rgb(247,219,53)"/><text x="343.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.15%)</title><rect x="341" y="244" width="2" height="15" fill="rgb(251,103,20)"/><text x="344.00" y="254.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.15%)</title><rect x="343" y="852" width="2" height="15" fill="rgb(235,2,4)"/><text x="346.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.15%)</title><rect x="343" y="868" width="2" height="15" fill="rgb(254,181,13)"/><text x="346.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.15%)</title><rect x="343" y="884" width="2" height="15" fill="rgb(252,122,40)"/><text x="346.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.15%)</title><rect x="343" y="900" width="2" height="15" fill="rgb(234,12,1)"/><text x="346.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2064) (1 samples, 0.15%)</title><rect x="343" y="916" width="2" height="15" fill="rgb(226,20,24)"/><text x="346.00" y="926.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py:2077) (1 samples, 0.15%)</title><rect x="343" y="932" width="2" height="15" fill="rgb(238,157,46)"/><text x="346.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:2) (2 samples, 0.31%)</title><rect x="343" y="148" width="4" height="15" fill="rgb(248,194,13)"/><text x="346.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="343" y="164" width="4" height="15" fill="rgb(249,145,19)"/><text x="346.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.31%)</title><rect x="343" y="180" width="4" height="15" fill="rgb(234,161,10)"/><text x="346.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="343" y="196" width="4" height="15" fill="rgb(239,24,22)"/><text x="346.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="343" y="212" width="4" height="15" fill="rgb(225,78,48)"/><text x="346.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="343" y="228" width="4" height="15" fill="rgb(235,40,41)"/><text x="346.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="343" y="244" width="4" height="15" fill="rgb(210,229,39)"/><text x="346.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="343" y="260" width="4" height="15" fill="rgb(210,201,0)"/><text x="346.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="343" y="276" width="4" height="15" fill="rgb(216,65,43)"/><text x="346.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.31%)</title><rect x="343" y="292" width="4" height="15" fill="rgb(254,41,19)"/><text x="346.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="343" y="308" width="4" height="15" fill="rgb(232,88,28)"/><text x="346.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="343" y="324" width="4" height="15" fill="rgb(245,162,30)"/><text x="346.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="343" y="340" width="4" height="15" fill="rgb(239,166,24)"/><text x="346.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="343" y="356" width="4" height="15" fill="rgb(236,176,25)"/><text x="346.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="343" y="372" width="4" height="15" fill="rgb(254,215,8)"/><text x="346.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.31%)</title><rect x="343" y="388" width="4" height="15" fill="rgb(212,71,38)"/><text x="346.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="343" y="404" width="4" height="15" fill="rgb(214,223,45)"/><text x="346.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="343" y="420" width="4" height="15" fill="rgb(230,13,9)"/><text x="346.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="343" y="436" width="4" height="15" fill="rgb(245,139,17)"/><text x="346.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="343" y="452" width="4" height="15" fill="rgb(238,94,13)"/><text x="346.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="343" y="468" width="4" height="15" fill="rgb(242,101,34)"/><text x="346.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.31%)</title><rect x="343" y="484" width="4" height="15" fill="rgb(245,148,0)"/><text x="346.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="343" y="500" width="4" height="15" fill="rgb(234,15,25)"/><text x="346.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="343" y="516" width="4" height="15" fill="rgb(231,91,14)"/><text x="346.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="343" y="532" width="4" height="15" fill="rgb(252,120,25)"/><text x="346.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="343" y="548" width="4" height="15" fill="rgb(242,69,24)"/><text x="346.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="343" y="564" width="4" height="15" fill="rgb(207,155,50)"/><text x="346.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.31%)</title><rect x="343" y="580" width="4" height="15" fill="rgb(236,223,44)"/><text x="346.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="343" y="596" width="4" height="15" fill="rgb(226,226,44)"/><text x="346.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.31%)</title><rect x="343" y="612" width="4" height="15" fill="rgb(245,128,24)"/><text x="346.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="343" y="628" width="4" height="15" fill="rgb(252,198,9)"/><text x="346.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="343" y="644" width="4" height="15" fill="rgb(245,131,54)"/><text x="346.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="343" y="660" width="4" height="15" fill="rgb(208,147,20)"/><text x="346.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="343" y="676" width="4" height="15" fill="rgb(243,142,52)"/><text x="346.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="343" y="692" width="4" height="15" fill="rgb(254,35,28)"/><text x="346.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="343" y="708" width="4" height="15" fill="rgb(236,175,4)"/><text x="346.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.31%)</title><rect x="343" y="724" width="4" height="15" fill="rgb(251,162,26)"/><text x="346.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="343" y="740" width="4" height="15" fill="rgb(234,121,19)"/><text x="346.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="343" y="756" width="4" height="15" fill="rgb(240,207,47)"/><text x="346.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="343" y="772" width="4" height="15" fill="rgb(241,163,13)"/><text x="346.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="343" y="788" width="4" height="15" fill="rgb(225,182,8)"/><text x="346.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="343" y="804" width="4" height="15" fill="rgb(242,151,2)"/><text x="346.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.31%)</title><rect x="343" y="820" width="4" height="15" fill="rgb(248,150,20)"/><text x="346.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.31%)</title><rect x="343" y="836" width="4" height="15" fill="rgb(244,16,32)"/><text x="346.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.15%)</title><rect x="345" y="852" width="2" height="15" fill="rgb(229,104,6)"/><text x="348.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.15%)</title><rect x="345" y="868" width="2" height="15" fill="rgb(240,158,31)"/><text x="348.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.15%)</title><rect x="345" y="884" width="2" height="15" fill="rgb(224,200,40)"/><text x="348.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.15%)</title><rect x="345" y="900" width="2" height="15" fill="rgb(229,218,48)"/><text x="348.00" y="910.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.15%)</title><rect x="345" y="916" width="2" height="15" fill="rgb(226,20,22)"/><text x="348.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.15%)</title><rect x="345" y="932" width="2" height="15" fill="rgb(224,93,8)"/><text x="348.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:4) (1 samples, 0.15%)</title><rect x="347" y="148" width="2" height="15" fill="rgb(215,219,6)"/><text x="350.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="347" y="164" width="2" height="15" fill="rgb(217,164,36)"/><text x="350.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="347" y="180" width="2" height="15" fill="rgb(232,164,29)"/><text x="350.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="347" y="196" width="2" height="15" fill="rgb(223,226,14)"/><text x="350.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="347" y="212" width="2" height="15" fill="rgb(244,151,29)"/><text x="350.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="347" y="228" width="2" height="15" fill="rgb(240,179,12)"/><text x="350.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="347" y="244" width="2" height="15" fill="rgb(214,40,16)"/><text x="350.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="347" y="260" width="2" height="15" fill="rgb(211,115,16)"/><text x="350.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="347" y="276" width="2" height="15" fill="rgb(241,153,42)"/><text x="350.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.15%)</title><rect x="347" y="292" width="2" height="15" fill="rgb(205,129,39)"/><text x="350.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="347" y="308" width="2" height="15" fill="rgb(211,185,54)"/><text x="350.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="347" y="324" width="2" height="15" fill="rgb(208,9,13)"/><text x="350.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="347" y="340" width="2" height="15" fill="rgb(218,179,7)"/><text x="350.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="347" y="356" width="2" height="15" fill="rgb(235,93,46)"/><text x="350.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="347" y="372" width="2" height="15" fill="rgb(230,84,5)"/><text x="350.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.15%)</title><rect x="347" y="388" width="2" height="15" fill="rgb(249,154,16)"/><text x="350.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="347" y="404" width="2" height="15" fill="rgb(241,27,41)"/><text x="350.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="347" y="420" width="2" height="15" fill="rgb(237,138,27)"/><text x="350.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="347" y="436" width="2" height="15" fill="rgb(230,137,31)"/><text x="350.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="347" y="452" width="2" height="15" fill="rgb(250,6,5)"/><text x="350.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="347" y="468" width="2" height="15" fill="rgb(214,162,23)"/><text x="350.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.15%)</title><rect x="347" y="484" width="2" height="15" fill="rgb(238,175,29)"/><text x="350.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="347" y="500" width="2" height="15" fill="rgb(237,66,2)"/><text x="350.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="347" y="516" width="2" height="15" fill="rgb(214,109,11)"/><text x="350.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="347" y="532" width="2" height="15" fill="rgb(249,67,54)"/><text x="350.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="347" y="548" width="2" height="15" fill="rgb(209,220,34)"/><text x="350.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="347" y="564" width="2" height="15" fill="rgb(237,174,42)"/><text x="350.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.15%)</title><rect x="347" y="580" width="2" height="15" fill="rgb(245,227,50)"/><text x="350.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="347" y="596" width="2" height="15" fill="rgb(253,89,12)"/><text x="350.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="347" y="612" width="2" height="15" fill="rgb(243,56,41)"/><text x="350.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="347" y="628" width="2" height="15" fill="rgb(254,214,2)"/><text x="350.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="347" y="644" width="2" height="15" fill="rgb(237,64,3)"/><text x="350.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="347" y="660" width="2" height="15" fill="rgb(242,44,32)"/><text x="350.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.15%)</title><rect x="347" y="676" width="2" height="15" fill="rgb(253,142,40)"/><text x="350.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="347" y="692" width="2" height="15" fill="rgb(225,97,14)"/><text x="350.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="347" y="708" width="2" height="15" fill="rgb(242,52,11)"/><text x="350.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="347" y="724" width="2" height="15" fill="rgb(231,48,14)"/><text x="350.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="347" y="740" width="2" height="15" fill="rgb(226,216,21)"/><text x="350.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="347" y="756" width="2" height="15" fill="rgb(210,30,45)"/><text x="350.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.15%)</title><rect x="347" y="772" width="2" height="15" fill="rgb(236,40,18)"/><text x="350.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="347" y="788" width="2" height="15" fill="rgb(243,70,38)"/><text x="350.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="347" y="804" width="2" height="15" fill="rgb(231,173,42)"/><text x="350.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="347" y="820" width="2" height="15" fill="rgb(246,125,30)"/><text x="350.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="347" y="836" width="2" height="15" fill="rgb(225,191,27)"/><text x="350.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="347" y="852" width="2" height="15" fill="rgb(218,6,25)"/><text x="350.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="347" y="868" width="2" height="15" fill="rgb(244,111,47)"/><text x="350.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="347" y="884" width="2" height="15" fill="rgb(205,47,7)"/><text x="350.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.15%)</title><rect x="347" y="900" width="2" height="15" fill="rgb(238,20,33)"/><text x="350.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="347" y="916" width="2" height="15" fill="rgb(246,195,47)"/><text x="350.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="347" y="932" width="2" height="15" fill="rgb(217,19,15)"/><text x="350.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="347" y="948" width="2" height="15" fill="rgb(205,212,1)"/><text x="350.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="347" y="964" width="2" height="15" fill="rgb(254,136,44)"/><text x="350.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="347" y="980" width="2" height="15" fill="rgb(239,191,22)"/><text x="350.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="347" y="996" width="2" height="15" fill="rgb(213,15,26)"/><text x="350.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="347" y="1012" width="2" height="15" fill="rgb(224,96,24)"/><text x="350.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:5390) (1 samples, 0.15%)</title><rect x="347" y="1028" width="2" height="15" fill="rgb(234,84,14)"/><text x="350.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.15%)</title><rect x="347" y="1044" width="2" height="15" fill="rgb(222,42,48)"/><text x="350.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.15%)</title><rect x="347" y="1060" width="2" height="15" fill="rgb(230,87,13)"/><text x="350.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:64) (1 samples, 0.15%)</title><rect x="347" y="1076" width="2" height="15" fill="rgb(240,95,10)"/><text x="350.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:12) (1 samples, 0.15%)</title><rect x="349" y="1060" width="2" height="15" fill="rgb(208,77,22)"/><text x="352.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="349" y="1076" width="2" height="15" fill="rgb(219,65,34)"/><text x="352.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="349" y="1092" width="2" height="15" fill="rgb(224,225,27)"/><text x="352.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="349" y="1108" width="2" height="15" fill="rgb(243,56,29)"/><text x="352.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="349" y="1124" width="2" height="15" fill="rgb(229,97,31)"/><text x="352.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="349" y="1140" width="2" height="15" fill="rgb(205,165,48)"/><text x="352.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py:6) (1 samples, 0.15%)</title><rect x="349" y="1156" width="2" height="15" fill="rgb(206,15,22)"/><text x="352.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="349" y="1172" width="2" height="15" fill="rgb(242,158,30)"/><text x="352.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="349" y="1188" width="2" height="15" fill="rgb(229,172,19)"/><text x="352.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="349" y="1204" width="2" height="15" fill="rgb(253,29,52)"/><text x="352.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="349" y="1220" width="2" height="15" fill="rgb(245,93,16)"/><text x="352.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="349" y="1236" width="2" height="15" fill="rgb(213,73,50)"/><text x="352.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="349" y="1252" width="2" height="15" fill="rgb(249,142,27)"/><text x="352.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="349" y="1268" width="2" height="15" fill="rgb(251,95,24)"/><text x="352.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pysvn_helper.py:12) (1 samples, 0.15%)</title><rect x="349" y="1284" width="2" height="15" fill="rgb(229,201,22)"/><text x="352.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="349" y="1300" width="2" height="15" fill="rgb(206,14,44)"/><text x="352.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="349" y="1316" width="2" height="15" fill="rgb(218,25,5)"/><text x="352.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="349" y="1332" width="2" height="15" fill="rgb(239,124,27)"/><text x="352.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="349" y="1348" width="2" height="15" fill="rgb(249,172,43)"/><text x="352.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="349" y="1364" width="2" height="15" fill="rgb(213,143,22)"/><text x="352.00" y="1374.50"></text></g><g><title>&lt;module&gt; (xml/etree/ElementTree.py:102) (1 samples, 0.15%)</title><rect x="349" y="1380" width="2" height="15" fill="rgb(219,148,13)"/><text x="352.00" y="1390.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="349" y="1396" width="2" height="15" fill="rgb(254,81,50)"/><text x="352.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="349" y="1412" width="2" height="15" fill="rgb(227,213,47)"/><text x="352.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="349" y="1428" width="2" height="15" fill="rgb(208,34,18)"/><text x="352.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="349" y="1444" width="2" height="15" fill="rgb(220,112,51)"/><text x="352.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="349" y="1460" width="2" height="15" fill="rgb(231,205,53)"/><text x="352.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="349" y="1476" width="2" height="15" fill="rgb(254,144,53)"/><text x="352.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="349" y="1492" width="2" height="15" fill="rgb(211,56,43)"/><text x="352.00" y="1502.50"></text></g><g><title>&lt;module&gt; (xml/etree/ElementPath.py:62) (1 samples, 0.15%)</title><rect x="349" y="1508" width="2" height="15" fill="rgb(232,171,5)"/><text x="352.00" y="1518.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.15%)</title><rect x="349" y="1524" width="2" height="15" fill="rgb(223,150,11)"/><text x="352.00" y="1534.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.15%)</title><rect x="349" y="1540" width="2" height="15" fill="rgb(221,185,51)"/><text x="352.00" y="1550.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.15%)</title><rect x="349" y="1556" width="2" height="15" fill="rgb(234,99,10)"/><text x="352.00" y="1566.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.15%)</title><rect x="349" y="1572" width="2" height="15" fill="rgb(210,158,49)"/><text x="352.00" y="1582.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.15%)</title><rect x="349" y="1588" width="2" height="15" fill="rgb(224,182,8)"/><text x="352.00" y="1598.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.15%)</title><rect x="349" y="1604" width="2" height="15" fill="rgb(237,52,2)"/><text x="352.00" y="1614.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.15%)</title><rect x="349" y="1620" width="2" height="15" fill="rgb(248,43,30)"/><text x="352.00" y="1630.50"></text></g><g><title>_parse (sre_parse.py:834) (1 samples, 0.15%)</title><rect x="349" y="1636" width="2" height="15" fill="rgb(232,43,4)"/><text x="352.00" y="1646.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.46%)</title><rect x="349" y="244" width="5" height="15" fill="rgb(226,83,1)"/><text x="352.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="349" y="260" width="5" height="15" fill="rgb(216,6,28)"/><text x="352.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="349" y="276" width="5" height="15" fill="rgb(212,194,47)"/><text x="352.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="349" y="292" width="5" height="15" fill="rgb(252,186,45)"/><text x="352.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="349" y="308" width="5" height="15" fill="rgb(234,81,49)"/><text x="352.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="349" y="324" width="5" height="15" fill="rgb(235,217,10)"/><text x="352.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.46%)</title><rect x="349" y="340" width="5" height="15" fill="rgb(228,118,51)"/><text x="352.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="349" y="356" width="5" height="15" fill="rgb(237,145,41)"/><text x="352.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.46%)</title><rect x="349" y="372" width="5" height="15" fill="rgb(217,65,40)"/><text x="352.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="349" y="388" width="5" height="15" fill="rgb(218,83,20)"/><text x="352.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="349" y="404" width="5" height="15" fill="rgb(217,178,34)"/><text x="352.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="349" y="420" width="5" height="15" fill="rgb(209,128,36)"/><text x="352.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="349" y="436" width="5" height="15" fill="rgb(205,151,22)"/><text x="352.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="349" y="452" width="5" height="15" fill="rgb(211,100,14)"/><text x="352.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="349" y="468" width="5" height="15" fill="rgb(249,104,26)"/><text x="352.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (3 samples, 0.46%)</title><rect x="349" y="484" width="5" height="15" fill="rgb(246,174,4)"/><text x="352.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="349" y="500" width="5" height="15" fill="rgb(205,104,20)"/><text x="352.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="349" y="516" width="5" height="15" fill="rgb(250,85,27)"/><text x="352.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="349" y="532" width="5" height="15" fill="rgb(244,173,46)"/><text x="352.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="349" y="548" width="5" height="15" fill="rgb(233,31,2)"/><text x="352.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="349" y="564" width="5" height="15" fill="rgb(219,5,17)"/><text x="352.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (3 samples, 0.46%)</title><rect x="349" y="580" width="5" height="15" fill="rgb(214,4,10)"/><text x="352.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="349" y="596" width="5" height="15" fill="rgb(231,143,5)"/><text x="352.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.46%)</title><rect x="349" y="612" width="5" height="15" fill="rgb(240,130,21)"/><text x="352.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="349" y="628" width="5" height="15" fill="rgb(219,157,47)"/><text x="352.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="349" y="644" width="5" height="15" fill="rgb(222,112,36)"/><text x="352.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="349" y="660" width="5" height="15" fill="rgb(210,229,10)"/><text x="352.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="349" y="676" width="5" height="15" fill="rgb(248,203,38)"/><text x="352.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="349" y="692" width="5" height="15" fill="rgb(244,143,26)"/><text x="352.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="349" y="708" width="5" height="15" fill="rgb(205,127,50)"/><text x="352.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (3 samples, 0.46%)</title><rect x="349" y="724" width="5" height="15" fill="rgb(228,121,36)"/><text x="352.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="349" y="740" width="5" height="15" fill="rgb(245,110,37)"/><text x="352.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="349" y="756" width="5" height="15" fill="rgb(222,102,20)"/><text x="352.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="349" y="772" width="5" height="15" fill="rgb(218,36,4)"/><text x="352.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="349" y="788" width="5" height="15" fill="rgb(206,89,17)"/><text x="352.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="349" y="804" width="5" height="15" fill="rgb(252,147,48)"/><text x="352.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (3 samples, 0.46%)</title><rect x="349" y="820" width="5" height="15" fill="rgb(231,127,44)"/><text x="352.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="349" y="836" width="5" height="15" fill="rgb(220,5,47)"/><text x="352.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="349" y="852" width="5" height="15" fill="rgb(226,163,54)"/><text x="352.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="349" y="868" width="5" height="15" fill="rgb(222,28,33)"/><text x="352.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="349" y="884" width="5" height="15" fill="rgb(230,11,14)"/><text x="352.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="349" y="900" width="5" height="15" fill="rgb(250,69,23)"/><text x="352.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (3 samples, 0.46%)</title><rect x="349" y="916" width="5" height="15" fill="rgb(244,58,42)"/><text x="352.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="349" y="932" width="5" height="15" fill="rgb(230,152,30)"/><text x="352.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.46%)</title><rect x="349" y="948" width="5" height="15" fill="rgb(232,193,2)"/><text x="352.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="349" y="964" width="5" height="15" fill="rgb(229,198,45)"/><text x="352.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="349" y="980" width="5" height="15" fill="rgb(230,89,23)"/><text x="352.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="349" y="996" width="5" height="15" fill="rgb(213,13,50)"/><text x="352.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="349" y="1012" width="5" height="15" fill="rgb(210,89,48)"/><text x="352.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="349" y="1028" width="5" height="15" fill="rgb(246,82,36)"/><text x="352.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="349" y="1044" width="5" height="15" fill="rgb(216,84,22)"/><text x="352.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (2 samples, 0.31%)</title><rect x="351" y="1060" width="3" height="15" fill="rgb(215,143,45)"/><text x="354.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="351" y="1076" width="3" height="15" fill="rgb(228,28,24)"/><text x="354.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="351" y="1092" width="3" height="15" fill="rgb(247,37,10)"/><text x="354.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="351" y="1108" width="3" height="15" fill="rgb(251,63,37)"/><text x="354.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.31%)</title><rect x="351" y="1124" width="3" height="15" fill="rgb(239,129,24)"/><text x="354.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (2 samples, 0.31%)</title><rect x="351" y="1140" width="3" height="15" fill="rgb(223,53,45)"/><text x="354.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (2 samples, 0.31%)</title><rect x="351" y="1156" width="3" height="15" fill="rgb(230,224,18)"/><text x="354.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.15%)</title><rect x="354" y="1588" width="2" height="15" fill="rgb(234,37,15)"/><text x="357.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="354" y="1604" width="2" height="15" fill="rgb(240,8,22)"/><text x="357.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="354" y="1620" width="2" height="15" fill="rgb(226,205,29)"/><text x="357.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="354" y="1636" width="2" height="15" fill="rgb(208,77,28)"/><text x="357.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="354" y="1652" width="2" height="15" fill="rgb(218,85,54)"/><text x="357.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="354" y="1668" width="2" height="15" fill="rgb(212,75,16)"/><text x="357.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.15%)</title><rect x="354" y="1684" width="2" height="15" fill="rgb(209,111,41)"/><text x="357.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="354" y="1700" width="2" height="15" fill="rgb(239,32,27)"/><text x="357.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="354" y="1716" width="2" height="15" fill="rgb(230,208,24)"/><text x="357.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="354" y="1732" width="2" height="15" fill="rgb(233,175,53)"/><text x="357.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="354" y="1748" width="2" height="15" fill="rgb(208,172,7)"/><text x="357.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="354" y="1764" width="2" height="15" fill="rgb(229,166,11)"/><text x="357.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:106) (1 samples, 0.15%)</title><rect x="354" y="1780" width="2" height="15" fill="rgb(232,25,17)"/><text x="357.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py:93) (1 samples, 0.15%)</title><rect x="354" y="1796" width="2" height="15" fill="rgb(224,67,47)"/><text x="357.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py:752) (1 samples, 0.15%)</title><rect x="354" y="1812" width="2" height="15" fill="rgb(228,41,50)"/><text x="357.00" y="1822.50"></text></g><g><title>to_rgba (matplotlib/colors.py:177) (1 samples, 0.15%)</title><rect x="354" y="1828" width="2" height="15" fill="rgb(218,6,26)"/><text x="357.00" y="1838.50"></text></g><g><title>_to_rgba_no_colorcycle (matplotlib/colors.py:192) (1 samples, 0.15%)</title><rect x="354" y="1844" width="2" height="15" fill="rgb(248,29,29)"/><text x="357.00" y="1854.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.31%)</title><rect x="354" y="1012" width="4" height="15" fill="rgb(223,218,40)"/><text x="357.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="354" y="1028" width="4" height="15" fill="rgb(222,165,43)"/><text x="357.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="354" y="1044" width="4" height="15" fill="rgb(242,19,51)"/><text x="357.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="354" y="1060" width="4" height="15" fill="rgb(219,123,5)"/><text x="357.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="354" y="1076" width="4" height="15" fill="rgb(244,145,40)"/><text x="357.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="354" y="1092" width="4" height="15" fill="rgb(235,215,42)"/><text x="357.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.31%)</title><rect x="354" y="1108" width="4" height="15" fill="rgb(211,103,29)"/><text x="357.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="354" y="1124" width="4" height="15" fill="rgb(229,169,41)"/><text x="357.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="354" y="1140" width="4" height="15" fill="rgb(232,83,38)"/><text x="357.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="354" y="1156" width="4" height="15" fill="rgb(236,76,6)"/><text x="357.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="354" y="1172" width="4" height="15" fill="rgb(239,151,7)"/><text x="357.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="354" y="1188" width="4" height="15" fill="rgb(251,72,36)"/><text x="357.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.31%)</title><rect x="354" y="1204" width="4" height="15" fill="rgb(232,166,7)"/><text x="357.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="354" y="1220" width="4" height="15" fill="rgb(224,145,46)"/><text x="357.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="354" y="1236" width="4" height="15" fill="rgb(252,219,23)"/><text x="357.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="354" y="1252" width="4" height="15" fill="rgb(230,149,2)"/><text x="357.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="354" y="1268" width="4" height="15" fill="rgb(243,24,16)"/><text x="357.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="354" y="1284" width="4" height="15" fill="rgb(242,151,23)"/><text x="357.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.31%)</title><rect x="354" y="1300" width="4" height="15" fill="rgb(237,183,34)"/><text x="357.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="354" y="1316" width="4" height="15" fill="rgb(236,101,48)"/><text x="357.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="354" y="1332" width="4" height="15" fill="rgb(216,175,5)"/><text x="357.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="354" y="1348" width="4" height="15" fill="rgb(208,143,36)"/><text x="357.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="354" y="1364" width="4" height="15" fill="rgb(207,32,49)"/><text x="357.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="354" y="1380" width="4" height="15" fill="rgb(254,102,11)"/><text x="357.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.31%)</title><rect x="354" y="1396" width="4" height="15" fill="rgb(235,9,10)"/><text x="357.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="354" y="1412" width="4" height="15" fill="rgb(227,26,27)"/><text x="357.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="354" y="1428" width="4" height="15" fill="rgb(238,160,37)"/><text x="357.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="354" y="1444" width="4" height="15" fill="rgb(231,20,8)"/><text x="357.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="354" y="1460" width="4" height="15" fill="rgb(223,13,23)"/><text x="357.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="354" y="1476" width="4" height="15" fill="rgb(249,180,30)"/><text x="357.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (2 samples, 0.31%)</title><rect x="354" y="1492" width="4" height="15" fill="rgb(230,47,34)"/><text x="357.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="354" y="1508" width="4" height="15" fill="rgb(228,149,12)"/><text x="357.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="354" y="1524" width="4" height="15" fill="rgb(254,59,1)"/><text x="357.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="354" y="1540" width="4" height="15" fill="rgb(250,94,7)"/><text x="357.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="354" y="1556" width="4" height="15" fill="rgb(231,96,40)"/><text x="357.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="354" y="1572" width="4" height="15" fill="rgb(247,112,35)"/><text x="357.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.15%)</title><rect x="356" y="1588" width="2" height="15" fill="rgb(218,12,41)"/><text x="359.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="356" y="1604" width="2" height="15" fill="rgb(207,156,11)"/><text x="359.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="356" y="1620" width="2" height="15" fill="rgb(245,22,30)"/><text x="359.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="356" y="1636" width="2" height="15" fill="rgb(239,190,15)"/><text x="359.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="356" y="1652" width="2" height="15" fill="rgb(245,203,9)"/><text x="359.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="356" y="1668" width="2" height="15" fill="rgb(240,222,34)"/><text x="359.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.15%)</title><rect x="356" y="1684" width="2" height="15" fill="rgb(218,134,31)"/><text x="359.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="356" y="1700" width="2" height="15" fill="rgb(244,140,37)"/><text x="359.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="356" y="1716" width="2" height="15" fill="rgb(218,89,44)"/><text x="359.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="356" y="1732" width="2" height="15" fill="rgb(219,1,10)"/><text x="359.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="356" y="1748" width="2" height="15" fill="rgb(221,117,9)"/><text x="359.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="356" y="1764" width="2" height="15" fill="rgb(243,164,17)"/><text x="359.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.15%)</title><rect x="356" y="1780" width="2" height="15" fill="rgb(226,56,26)"/><text x="359.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="356" y="1796" width="2" height="15" fill="rgb(231,167,35)"/><text x="359.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="356" y="1812" width="2" height="15" fill="rgb(218,77,10)"/><text x="359.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="356" y="1828" width="2" height="15" fill="rgb(205,116,9)"/><text x="359.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="356" y="1844" width="2" height="15" fill="rgb(220,67,41)"/><text x="359.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="356" y="1860" width="2" height="15" fill="rgb(211,30,53)"/><text x="359.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:11) (1 samples, 0.15%)</title><rect x="356" y="1876" width="2" height="15" fill="rgb(221,69,36)"/><text x="359.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="356" y="1892" width="2" height="15" fill="rgb(205,171,21)"/><text x="359.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="356" y="1908" width="2" height="15" fill="rgb(209,166,5)"/><text x="359.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="356" y="1924" width="2" height="15" fill="rgb(237,188,53)"/><text x="359.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="356" y="1940" width="2" height="15" fill="rgb(228,140,2)"/><text x="359.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="356" y="1956" width="2" height="15" fill="rgb(226,147,11)"/><text x="359.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="356" y="1972" width="2" height="15" fill="rgb(224,40,40)"/><text x="359.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="356" y="1988" width="2" height="15" fill="rgb(237,47,38)"/><text x="359.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py:1528) (1 samples, 0.15%)</title><rect x="356" y="2004" width="2" height="15" fill="rgb(247,35,46)"/><text x="359.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1599) (1 samples, 0.15%)</title><rect x="356" y="2020" width="2" height="15" fill="rgb(225,223,7)"/><text x="359.00" y="2030.50"></text></g><g><title>__init__ (matplotlib/artist.py:1211) (1 samples, 0.15%)</title><rect x="356" y="2036" width="2" height="15" fill="rgb(207,113,5)"/><text x="359.00" y="2046.50"></text></g><g><title>get_aliases (matplotlib/artist.py:1233) (1 samples, 0.15%)</title><rect x="356" y="2052" width="2" height="15" fill="rgb(214,72,5)"/><text x="359.00" y="2062.50"></text></g><g><title>search (re.py:183) (1 samples, 0.15%)</title><rect x="356" y="2068" width="2" height="15" fill="rgb(220,139,5)"/><text x="359.00" y="2078.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.15%)</title><rect x="356" y="2084" width="2" height="15" fill="rgb(222,184,50)"/><text x="359.00" y="2094.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.15%)</title><rect x="356" y="2100" width="2" height="15" fill="rgb(218,180,17)"/><text x="359.00" y="2110.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.15%)</title><rect x="356" y="2116" width="2" height="15" fill="rgb(254,140,30)"/><text x="359.00" y="2126.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.15%)</title><rect x="356" y="2132" width="2" height="15" fill="rgb(222,101,42)"/><text x="359.00" y="2142.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.15%)</title><rect x="356" y="2148" width="2" height="15" fill="rgb(227,46,1)"/><text x="359.00" y="2158.50"></text></g><g><title>_compile (sre_compile.py:90) (1 samples, 0.15%)</title><rect x="356" y="2164" width="2" height="15" fill="rgb(245,206,25)"/><text x="359.00" y="2174.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.46%)</title><rect x="354" y="436" width="6" height="15" fill="rgb(225,8,16)"/><text x="357.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="354" y="452" width="6" height="15" fill="rgb(252,5,18)"/><text x="357.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="354" y="468" width="6" height="15" fill="rgb(253,81,25)"/><text x="357.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="354" y="484" width="6" height="15" fill="rgb(246,121,3)"/><text x="357.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="354" y="500" width="6" height="15" fill="rgb(227,30,46)"/><text x="357.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="354" y="516" width="6" height="15" fill="rgb(224,206,3)"/><text x="357.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.46%)</title><rect x="354" y="532" width="6" height="15" fill="rgb(228,13,50)"/><text x="357.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="354" y="548" width="6" height="15" fill="rgb(218,124,37)"/><text x="357.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="354" y="564" width="6" height="15" fill="rgb(224,155,50)"/><text x="357.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="354" y="580" width="6" height="15" fill="rgb(210,72,21)"/><text x="357.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="354" y="596" width="6" height="15" fill="rgb(214,210,18)"/><text x="357.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="354" y="612" width="6" height="15" fill="rgb(215,216,13)"/><text x="357.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.46%)</title><rect x="354" y="628" width="6" height="15" fill="rgb(253,29,53)"/><text x="357.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="354" y="644" width="6" height="15" fill="rgb(252,153,4)"/><text x="357.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="354" y="660" width="6" height="15" fill="rgb(236,182,2)"/><text x="357.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="354" y="676" width="6" height="15" fill="rgb(209,158,24)"/><text x="357.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="354" y="692" width="6" height="15" fill="rgb(212,132,9)"/><text x="357.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="354" y="708" width="6" height="15" fill="rgb(205,227,50)"/><text x="357.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.46%)</title><rect x="354" y="724" width="6" height="15" fill="rgb(230,206,38)"/><text x="357.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="354" y="740" width="6" height="15" fill="rgb(213,106,36)"/><text x="357.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="354" y="756" width="6" height="15" fill="rgb(218,130,28)"/><text x="357.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="354" y="772" width="6" height="15" fill="rgb(228,46,3)"/><text x="357.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="354" y="788" width="6" height="15" fill="rgb(222,85,0)"/><text x="357.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="354" y="804" width="6" height="15" fill="rgb(226,166,30)"/><text x="357.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.46%)</title><rect x="354" y="820" width="6" height="15" fill="rgb(222,207,2)"/><text x="357.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="354" y="836" width="6" height="15" fill="rgb(232,133,3)"/><text x="357.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="354" y="852" width="6" height="15" fill="rgb(232,150,24)"/><text x="357.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="354" y="868" width="6" height="15" fill="rgb(228,97,40)"/><text x="357.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="354" y="884" width="6" height="15" fill="rgb(247,153,36)"/><text x="357.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="354" y="900" width="6" height="15" fill="rgb(244,97,16)"/><text x="357.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.46%)</title><rect x="354" y="916" width="6" height="15" fill="rgb(247,42,20)"/><text x="357.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="354" y="932" width="6" height="15" fill="rgb(253,85,49)"/><text x="357.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="354" y="948" width="6" height="15" fill="rgb(212,77,45)"/><text x="357.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="354" y="964" width="6" height="15" fill="rgb(241,112,54)"/><text x="357.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="354" y="980" width="6" height="15" fill="rgb(246,166,27)"/><text x="357.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="354" y="996" width="6" height="15" fill="rgb(247,200,33)"/><text x="357.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.15%)</title><rect x="358" y="1012" width="2" height="15" fill="rgb(219,135,10)"/><text x="361.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="358" y="1028" width="2" height="15" fill="rgb(250,215,24)"/><text x="361.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="358" y="1044" width="2" height="15" fill="rgb(250,83,19)"/><text x="361.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="358" y="1060" width="2" height="15" fill="rgb(246,121,8)"/><text x="361.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="358" y="1076" width="2" height="15" fill="rgb(240,81,16)"/><text x="361.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="358" y="1092" width="2" height="15" fill="rgb(205,40,29)"/><text x="361.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.15%)</title><rect x="358" y="1108" width="2" height="15" fill="rgb(243,145,11)"/><text x="361.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="358" y="1124" width="2" height="15" fill="rgb(207,41,27)"/><text x="361.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="358" y="1140" width="2" height="15" fill="rgb(225,173,28)"/><text x="361.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="358" y="1156" width="2" height="15" fill="rgb(241,92,45)"/><text x="361.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="358" y="1172" width="2" height="15" fill="rgb(227,23,24)"/><text x="361.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="358" y="1188" width="2" height="15" fill="rgb(235,177,20)"/><text x="361.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.15%)</title><rect x="358" y="1204" width="2" height="15" fill="rgb(212,100,52)"/><text x="361.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="358" y="1220" width="2" height="15" fill="rgb(223,170,41)"/><text x="361.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="358" y="1236" width="2" height="15" fill="rgb(230,204,2)"/><text x="361.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="358" y="1252" width="2" height="15" fill="rgb(228,43,7)"/><text x="361.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="358" y="1268" width="2" height="15" fill="rgb(235,0,36)"/><text x="361.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="358" y="1284" width="2" height="15" fill="rgb(212,80,51)"/><text x="361.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:15) (1 samples, 0.15%)</title><rect x="358" y="1300" width="2" height="15" fill="rgb(210,52,41)"/><text x="361.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="358" y="1316" width="2" height="15" fill="rgb(221,138,43)"/><text x="361.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="358" y="1332" width="2" height="15" fill="rgb(223,106,44)"/><text x="361.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="358" y="1348" width="2" height="15" fill="rgb(215,26,24)"/><text x="361.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="358" y="1364" width="2" height="15" fill="rgb(227,222,27)"/><text x="361.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="358" y="1380" width="2" height="15" fill="rgb(254,138,32)"/><text x="361.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/datetimes.py:97) (1 samples, 0.15%)</title><rect x="358" y="1396" width="2" height="15" fill="rgb(228,171,5)"/><text x="361.00" y="1406.50"></text></g><g><title>DatetimeIndex (pandas/core/indexes/datetimes.py:235) (1 samples, 0.15%)</title><rect x="358" y="1412" width="2" height="15" fill="rgb(236,154,22)"/><text x="361.00" y="1422.50"></text></g><g><title>_join_i8_wrapper (pandas/core/indexes/datetimes.py:231) (1 samples, 0.15%)</title><rect x="358" y="1428" width="2" height="15" fill="rgb(226,118,38)"/><text x="361.00" y="1438.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.15%)</title><rect x="360" y="1108" width="1" height="15" fill="rgb(209,9,49)"/><text x="363.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="360" y="1124" width="1" height="15" fill="rgb(215,212,41)"/><text x="363.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="360" y="1140" width="1" height="15" fill="rgb(211,110,18)"/><text x="363.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="360" y="1156" width="1" height="15" fill="rgb(224,40,35)"/><text x="363.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="360" y="1172" width="1" height="15" fill="rgb(233,221,49)"/><text x="363.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="360" y="1188" width="1" height="15" fill="rgb(225,12,32)"/><text x="363.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.15%)</title><rect x="360" y="1204" width="1" height="15" fill="rgb(233,81,2)"/><text x="363.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="360" y="1220" width="1" height="15" fill="rgb(213,151,16)"/><text x="363.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="360" y="1236" width="1" height="15" fill="rgb(208,91,13)"/><text x="363.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="360" y="1252" width="1" height="15" fill="rgb(228,155,36)"/><text x="363.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="360" y="1268" width="1" height="15" fill="rgb(241,173,34)"/><text x="363.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="360" y="1284" width="1" height="15" fill="rgb(235,6,20)"/><text x="363.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.15%)</title><rect x="360" y="1300" width="1" height="15" fill="rgb(215,65,43)"/><text x="363.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="360" y="1316" width="1" height="15" fill="rgb(235,183,9)"/><text x="363.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="360" y="1332" width="1" height="15" fill="rgb(239,214,44)"/><text x="363.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="360" y="1348" width="1" height="15" fill="rgb(241,7,46)"/><text x="363.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="360" y="1364" width="1" height="15" fill="rgb(246,168,20)"/><text x="363.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="360" y="1380" width="1" height="15" fill="rgb(249,195,14)"/><text x="363.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.15%)</title><rect x="360" y="1396" width="1" height="15" fill="rgb(244,10,43)"/><text x="363.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="360" y="1412" width="1" height="15" fill="rgb(230,92,39)"/><text x="363.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="360" y="1428" width="1" height="15" fill="rgb(209,170,7)"/><text x="363.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="360" y="1444" width="1" height="15" fill="rgb(209,82,37)"/><text x="363.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="360" y="1460" width="1" height="15" fill="rgb(246,171,20)"/><text x="363.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="360" y="1476" width="1" height="15" fill="rgb(238,133,22)"/><text x="363.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.15%)</title><rect x="360" y="1492" width="1" height="15" fill="rgb(212,138,28)"/><text x="363.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="360" y="1508" width="1" height="15" fill="rgb(220,198,6)"/><text x="363.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="360" y="1524" width="1" height="15" fill="rgb(223,221,45)"/><text x="363.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="360" y="1540" width="1" height="15" fill="rgb(251,195,36)"/><text x="363.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="360" y="1556" width="1" height="15" fill="rgb(241,13,34)"/><text x="363.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="360" y="1572" width="1" height="15" fill="rgb(254,221,35)"/><text x="363.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="360" y="1588" width="1" height="15" fill="rgb(228,135,31)"/><text x="363.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="360" y="1604" width="1" height="15" fill="rgb(208,213,10)"/><text x="363.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:6) (1 samples, 0.15%)</title><rect x="360" y="1620" width="1" height="15" fill="rgb(208,175,22)"/><text x="363.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="360" y="1636" width="1" height="15" fill="rgb(229,201,4)"/><text x="363.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="360" y="1652" width="1" height="15" fill="rgb(217,37,18)"/><text x="363.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="360" y="1668" width="1" height="15" fill="rgb(229,89,47)"/><text x="363.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="360" y="1684" width="1" height="15" fill="rgb(227,46,41)"/><text x="363.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="360" y="1700" width="1" height="15" fill="rgb(253,76,45)"/><text x="363.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py:17) (1 samples, 0.15%)</title><rect x="360" y="1716" width="1" height="15" fill="rgb(208,224,30)"/><text x="363.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="360" y="1732" width="1" height="15" fill="rgb(215,125,22)"/><text x="363.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="360" y="1748" width="1" height="15" fill="rgb(215,206,47)"/><text x="363.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="360" y="1764" width="1" height="15" fill="rgb(233,108,5)"/><text x="363.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="360" y="1780" width="1" height="15" fill="rgb(228,214,14)"/><text x="363.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="360" y="1796" width="1" height="15" fill="rgb(219,56,25)"/><text x="363.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py:9) (1 samples, 0.15%)</title><rect x="360" y="1812" width="1" height="15" fill="rgb(235,137,31)"/><text x="363.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="360" y="1828" width="1" height="15" fill="rgb(229,52,1)"/><text x="363.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.15%)</title><rect x="360" y="1844" width="1" height="15" fill="rgb(217,193,45)"/><text x="363.00" y="1854.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.15%)</title><rect x="360" y="1860" width="1" height="15" fill="rgb(221,155,33)"/><text x="363.00" y="1870.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.15%)</title><rect x="360" y="1876" width="1" height="15" fill="rgb(240,45,3)"/><text x="363.00" y="1886.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.15%)</title><rect x="360" y="1892" width="1" height="15" fill="rgb(211,108,48)"/><text x="363.00" y="1902.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1393) (1 samples, 0.15%)</title><rect x="360" y="1908" width="1" height="15" fill="rgb(244,210,9)"/><text x="363.00" y="1918.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.15%)</title><rect x="360" y="1924" width="1" height="15" fill="rgb(251,177,36)"/><text x="363.00" y="1934.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:4) (13 samples, 1.99%)</title><rect x="340" y="52" width="23" height="15" fill="rgb(216,120,12)"/><text x="343.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 1.99%)</title><rect x="340" y="68" width="23" height="15" fill="rgb(211,67,17)"/><text x="343.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 1.99%)</title><rect x="340" y="84" width="23" height="15" fill="rgb(205,114,34)"/><text x="343.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 1.99%)</title><rect x="340" y="100" width="23" height="15" fill="rgb(212,112,51)"/><text x="343.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 1.99%)</title><rect x="340" y="116" width="23" height="15" fill="rgb(222,18,28)"/><text x="343.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 1.99%)</title><rect x="340" y="132" width="23" height="15" fill="rgb(227,170,21)"/><text x="343.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:7) (8 samples, 1.22%)</title><rect x="349" y="148" width="14" height="15" fill="rgb(248,16,18)"/><text x="352.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.22%)</title><rect x="349" y="164" width="14" height="15" fill="rgb(207,166,48)"/><text x="352.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.22%)</title><rect x="349" y="180" width="14" height="15" fill="rgb(230,219,33)"/><text x="352.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.22%)</title><rect x="349" y="196" width="14" height="15" fill="rgb(215,215,54)"/><text x="352.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.22%)</title><rect x="349" y="212" width="14" height="15" fill="rgb(217,103,1)"/><text x="352.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.22%)</title><rect x="349" y="228" width="14" height="15" fill="rgb(225,206,35)"/><text x="352.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 0.76%)</title><rect x="354" y="244" width="9" height="15" fill="rgb(205,229,49)"/><text x="357.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.76%)</title><rect x="354" y="260" width="9" height="15" fill="rgb(221,130,14)"/><text x="357.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.76%)</title><rect x="354" y="276" width="9" height="15" fill="rgb(222,86,12)"/><text x="357.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.76%)</title><rect x="354" y="292" width="9" height="15" fill="rgb(220,158,48)"/><text x="357.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.76%)</title><rect x="354" y="308" width="9" height="15" fill="rgb(221,120,21)"/><text x="357.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.76%)</title><rect x="354" y="324" width="9" height="15" fill="rgb(227,191,37)"/><text x="357.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 0.76%)</title><rect x="354" y="340" width="9" height="15" fill="rgb(224,182,54)"/><text x="357.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.76%)</title><rect x="354" y="356" width="9" height="15" fill="rgb(240,213,52)"/><text x="357.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.76%)</title><rect x="354" y="372" width="9" height="15" fill="rgb(227,68,42)"/><text x="357.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.76%)</title><rect x="354" y="388" width="9" height="15" fill="rgb(237,147,19)"/><text x="357.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.76%)</title><rect x="354" y="404" width="9" height="15" fill="rgb(239,133,49)"/><text x="357.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.76%)</title><rect x="354" y="420" width="9" height="15" fill="rgb(248,143,25)"/><text x="357.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.31%)</title><rect x="360" y="436" width="3" height="15" fill="rgb(243,9,43)"/><text x="363.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="360" y="452" width="3" height="15" fill="rgb(225,221,48)"/><text x="363.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.31%)</title><rect x="360" y="468" width="3" height="15" fill="rgb(213,21,23)"/><text x="363.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="360" y="484" width="3" height="15" fill="rgb(236,195,30)"/><text x="363.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="360" y="500" width="3" height="15" fill="rgb(219,151,47)"/><text x="363.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="360" y="516" width="3" height="15" fill="rgb(236,84,10)"/><text x="363.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="360" y="532" width="3" height="15" fill="rgb(237,208,10)"/><text x="363.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="360" y="548" width="3" height="15" fill="rgb(230,141,25)"/><text x="363.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="360" y="564" width="3" height="15" fill="rgb(212,157,0)"/><text x="363.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.31%)</title><rect x="360" y="580" width="3" height="15" fill="rgb(251,3,32)"/><text x="363.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="360" y="596" width="3" height="15" fill="rgb(217,58,16)"/><text x="363.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="360" y="612" width="3" height="15" fill="rgb(227,205,27)"/><text x="363.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="360" y="628" width="3" height="15" fill="rgb(222,6,30)"/><text x="363.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="360" y="644" width="3" height="15" fill="rgb(238,183,37)"/><text x="363.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="360" y="660" width="3" height="15" fill="rgb(226,119,47)"/><text x="363.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.31%)</title><rect x="360" y="676" width="3" height="15" fill="rgb(244,199,48)"/><text x="363.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="360" y="692" width="3" height="15" fill="rgb(253,160,28)"/><text x="363.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="360" y="708" width="3" height="15" fill="rgb(226,173,18)"/><text x="363.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="360" y="724" width="3" height="15" fill="rgb(247,69,32)"/><text x="363.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="360" y="740" width="3" height="15" fill="rgb(232,174,26)"/><text x="363.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="360" y="756" width="3" height="15" fill="rgb(225,44,29)"/><text x="363.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.31%)</title><rect x="360" y="772" width="3" height="15" fill="rgb(225,68,48)"/><text x="363.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="360" y="788" width="3" height="15" fill="rgb(249,217,21)"/><text x="363.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="360" y="804" width="3" height="15" fill="rgb(216,40,9)"/><text x="363.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="360" y="820" width="3" height="15" fill="rgb(225,75,29)"/><text x="363.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="360" y="836" width="3" height="15" fill="rgb(218,1,14)"/><text x="363.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="360" y="852" width="3" height="15" fill="rgb(240,41,39)"/><text x="363.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.31%)</title><rect x="360" y="868" width="3" height="15" fill="rgb(211,161,3)"/><text x="363.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="360" y="884" width="3" height="15" fill="rgb(226,6,38)"/><text x="363.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.31%)</title><rect x="360" y="900" width="3" height="15" fill="rgb(210,204,21)"/><text x="363.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="360" y="916" width="3" height="15" fill="rgb(211,137,29)"/><text x="363.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="360" y="932" width="3" height="15" fill="rgb(219,80,35)"/><text x="363.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="360" y="948" width="3" height="15" fill="rgb(214,161,34)"/><text x="363.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="360" y="964" width="3" height="15" fill="rgb(254,199,48)"/><text x="363.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="360" y="980" width="3" height="15" fill="rgb(215,198,35)"/><text x="363.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="360" y="996" width="3" height="15" fill="rgb(235,199,33)"/><text x="363.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.31%)</title><rect x="360" y="1012" width="3" height="15" fill="rgb(220,164,1)"/><text x="363.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="360" y="1028" width="3" height="15" fill="rgb(246,93,54)"/><text x="363.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="360" y="1044" width="3" height="15" fill="rgb(238,228,46)"/><text x="363.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="360" y="1060" width="3" height="15" fill="rgb(241,52,49)"/><text x="363.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="360" y="1076" width="3" height="15" fill="rgb(241,190,0)"/><text x="363.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="360" y="1092" width="3" height="15" fill="rgb(239,201,11)"/><text x="363.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.15%)</title><rect x="361" y="1108" width="2" height="15" fill="rgb(216,69,46)"/><text x="364.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="361" y="1124" width="2" height="15" fill="rgb(217,115,26)"/><text x="364.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="361" y="1140" width="2" height="15" fill="rgb(212,172,48)"/><text x="364.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="361" y="1156" width="2" height="15" fill="rgb(219,180,7)"/><text x="364.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="361" y="1172" width="2" height="15" fill="rgb(206,219,22)"/><text x="364.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="361" y="1188" width="2" height="15" fill="rgb(222,210,34)"/><text x="364.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="361" y="1204" width="2" height="15" fill="rgb(233,163,40)"/><text x="364.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="361" y="1220" width="2" height="15" fill="rgb(219,7,38)"/><text x="364.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.15%)</title><rect x="361" y="1236" width="2" height="15" fill="rgb(243,47,24)"/><text x="364.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="361" y="1252" width="2" height="15" fill="rgb(213,2,23)"/><text x="364.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="361" y="1268" width="2" height="15" fill="rgb(247,81,47)"/><text x="364.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="361" y="1284" width="2" height="15" fill="rgb(231,208,9)"/><text x="364.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="361" y="1300" width="2" height="15" fill="rgb(242,117,4)"/><text x="364.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="361" y="1316" width="2" height="15" fill="rgb(239,178,54)"/><text x="364.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="361" y="1332" width="2" height="15" fill="rgb(232,206,32)"/><text x="364.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="361" y="1348" width="2" height="15" fill="rgb(219,42,34)"/><text x="364.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.15%)</title><rect x="361" y="1364" width="2" height="15" fill="rgb(222,68,21)"/><text x="364.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="361" y="1380" width="2" height="15" fill="rgb(234,59,16)"/><text x="364.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="361" y="1396" width="2" height="15" fill="rgb(228,16,29)"/><text x="364.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="361" y="1412" width="2" height="15" fill="rgb(221,116,41)"/><text x="364.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="361" y="1428" width="2" height="15" fill="rgb(251,221,33)"/><text x="364.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="361" y="1444" width="2" height="15" fill="rgb(233,17,44)"/><text x="364.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.15%)</title><rect x="361" y="1460" width="2" height="15" fill="rgb(232,136,5)"/><text x="364.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.15%)</title><rect x="361" y="1476" width="2" height="15" fill="rgb(205,85,2)"/><text x="364.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.15%)</title><rect x="361" y="1492" width="2" height="15" fill="rgb(250,71,8)"/><text x="364.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.15%)</title><rect x="361" y="1508" width="2" height="15" fill="rgb(220,13,15)"/><text x="364.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.15%)</title><rect x="361" y="1524" width="2" height="15" fill="rgb(215,74,4)"/><text x="364.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.15%)</title><rect x="361" y="1540" width="2" height="15" fill="rgb(254,178,15)"/><text x="364.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.15%)</title><rect x="361" y="1556" width="2" height="15" fill="rgb(232,96,48)"/><text x="364.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:100) (1 samples, 0.15%)</title><rect x="361" y="1572" width="2" height="15" fill="rgb(231,45,54)"/><text x="364.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.15%)</title><rect x="361" y="1588" width="2" height="15" fill="rgb(241,49,38)"/><text x="364.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:151) (1 samples, 0.15%)</title><rect x="361" y="1604" width="2" height="15" fill="rgb(229,164,6)"/><text x="364.00" y="1614.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:18) (1 samples, 0.15%)</title><rect x="363" y="100" width="2" height="15" fill="rgb(208,104,3)"/><text x="366.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.15%)</title><rect x="363" y="116" width="2" height="15" fill="rgb(226,6,5)"/><text x="366.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (1 samples, 0.15%)</title><rect x="363" y="132" width="2" height="15" fill="rgb(205,2,11)"/><text x="366.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.15%)</title><rect x="363" y="148" width="2" height="15" fill="rgb(217,224,29)"/><text x="366.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.15%)</title><rect x="363" y="164" width="2" height="15" fill="rgb(219,118,8)"/><text x="366.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.15%)</title><rect x="363" y="180" width="2" height="15" fill="rgb(212,26,32)"/><text x="366.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.15%)</title><rect x="363" y="196" width="2" height="15" fill="rgb(233,190,48)"/><text x="366.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.15%)</title><rect x="363" y="212" width="2" height="15" fill="rgb(221,115,54)"/><text x="366.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (1 samples, 0.15%)</title><rect x="363" y="228" width="2" height="15" fill="rgb(254,40,25)"/><text x="366.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (1 samples, 0.15%)</title><rect x="363" y="244" width="2" height="15" fill="rgb(222,78,54)"/><text x="366.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (1 samples, 0.15%)</title><rect x="363" y="260" width="2" height="15" fill="rgb(252,173,12)"/><text x="366.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="363" y="276" width="2" height="15" fill="rgb(250,18,41)"/><text x="366.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.15%)</title><rect x="365" y="116" width="2" height="15" fill="rgb(220,31,28)"/><text x="368.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.15%)</title><rect x="365" y="132" width="2" height="15" fill="rgb(234,78,50)"/><text x="368.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.15%)</title><rect x="365" y="148" width="2" height="15" fill="rgb(252,152,9)"/><text x="368.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.15%)</title><rect x="365" y="164" width="2" height="15" fill="rgb(213,109,32)"/><text x="368.00" y="174.50"></text></g><g><title>0x7f6e956e7380 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="365" y="180" width="2" height="15" fill="rgb(226,120,4)"/><text x="368.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.15%)</title><rect x="370" y="148" width="2" height="15" fill="rgb(248,221,26)"/><text x="373.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:447) (1 samples, 0.15%)</title><rect x="372" y="164" width="2" height="15" fill="rgb(242,95,0)"/><text x="375.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.15%)</title><rect x="374" y="180" width="2" height="15" fill="rgb(246,174,6)"/><text x="377.00" y="190.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.15%)</title><rect x="383" y="324" width="2" height="15" fill="rgb(208,215,29)"/><text x="386.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.15%)</title><rect x="383" y="340" width="2" height="15" fill="rgb(233,70,40)"/><text x="386.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.15%)</title><rect x="383" y="356" width="2" height="15" fill="rgb(254,228,52)"/><text x="386.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.15%)</title><rect x="383" y="372" width="2" height="15" fill="rgb(212,208,6)"/><text x="386.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.15%)</title><rect x="383" y="388" width="2" height="15" fill="rgb(250,124,42)"/><text x="386.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.15%)</title><rect x="383" y="404" width="2" height="15" fill="rgb(217,90,49)"/><text x="386.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.15%)</title><rect x="383" y="420" width="2" height="15" fill="rgb(221,138,22)"/><text x="386.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="383" y="436" width="2" height="15" fill="rgb(214,36,29)"/><text x="386.00" y="446.50"></text></g><g><title>0x7f6e964c6dc2 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="383" y="452" width="2" height="15" fill="rgb(224,30,5)"/><text x="386.00" y="462.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (30 samples, 4.59%)</title><rect x="385" y="324" width="54" height="15" fill="rgb(239,55,51)"/><text x="388.00" y="334.50">cblas..</text></g><g><title>gemm (cblasfuncs.c:40) (30 samples, 4.59%)</title><rect x="385" y="340" width="54" height="15" fill="rgb(233,210,39)"/><text x="388.00" y="350.50">gemm ..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (30 samples, 4.59%)</title><rect x="385" y="356" width="54" height="15" fill="rgb(243,79,6)"/><text x="388.00" y="366.50">cblas..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (30 samples, 4.59%)</title><rect x="385" y="372" width="54" height="15" fill="rgb(223,119,53)"/><text x="388.00" y="382.50">sgemm..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (30 samples, 4.59%)</title><rect x="385" y="388" width="54" height="15" fill="rgb(221,57,6)"/><text x="388.00" y="398.50">sgemm..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (32 samples, 4.89%)</title><rect x="383" y="276" width="58" height="15" fill="rgb(239,167,8)"/><text x="386.00" y="286.50">array_..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (32 samples, 4.89%)</title><rect x="383" y="292" width="58" height="15" fill="rgb(254,98,0)"/><text x="386.00" y="302.50">array_..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (32 samples, 4.89%)</title><rect x="383" y="308" width="58" height="15" fill="rgb(246,35,30)"/><text x="386.00" y="318.50">PyArra..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:677) (1 samples, 0.15%)</title><rect x="439" y="324" width="2" height="15" fill="rgb(241,108,24)"/><text x="442.00" y="334.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.31%)</title><rect x="441" y="276" width="3" height="15" fill="rgb(249,172,7)"/><text x="444.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (122 samples, 18.65%)</title><rect x="379" y="228" width="221" height="15" fill="rgb(225,178,9)"/><text x="382.00" y="238.50">_run (mlprodict/onnxrt/ops_cp..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (122 samples, 18.65%)</title><rect x="379" y="244" width="221" height="15" fill="rgb(235,71,2)"/><text x="382.00" y="254.50">numpy_dot_inplace (mlprodict/..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (121 samples, 18.50%)</title><rect x="381" y="260" width="219" height="15" fill="rgb(248,131,0)"/><text x="384.00" y="270.50">dot (&lt;__array_function__ int..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (86 samples, 13.15%)</title><rect x="444" y="276" width="156" height="15" fill="rgb(248,38,8)"/><text x="447.00" y="286.50">sgemm_kernel_SANDYBR..</text></g><g><title>array_inplace_add (number.c:708) (1 samples, 0.15%)</title><rect x="601" y="244" width="2" height="15" fill="rgb(217,218,34)"/><text x="604.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.15%)</title><rect x="603" y="260" width="2" height="15" fill="rgb(225,105,40)"/><text x="606.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.15%)</title><rect x="603" y="276" width="2" height="15" fill="rgb(218,127,19)"/><text x="606.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1471) (1 samples, 0.15%)</title><rect x="605" y="292" width="2" height="15" fill="rgb(217,90,35)"/><text x="608.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.15%)</title><rect x="607" y="308" width="2" height="15" fill="rgb(226,65,44)"/><text x="610.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.15%)</title><rect x="607" y="324" width="2" height="15" fill="rgb(224,148,4)"/><text x="610.00" y="334.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:947) (1 samples, 0.15%)</title><rect x="607" y="340" width="2" height="15" fill="rgb(247,43,29)"/><text x="610.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1524) (1 samples, 0.15%)</title><rect x="609" y="324" width="1" height="15" fill="rgb(210,211,5)"/><text x="612.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.31%)</title><rect x="609" y="308" width="3" height="15" fill="rgb(207,60,19)"/><text x="612.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1672) (1 samples, 0.15%)</title><rect x="610" y="324" width="2" height="15" fill="rgb(224,208,3)"/><text x="613.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3149) (1 samples, 0.15%)</title><rect x="612" y="324" width="2" height="15" fill="rgb(254,77,38)"/><text x="615.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (5 samples, 0.76%)</title><rect x="607" y="292" width="9" height="15" fill="rgb(246,14,21)"/><text x="610.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (2 samples, 0.31%)</title><rect x="612" y="308" width="4" height="15" fill="rgb(209,26,1)"/><text x="615.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.15%)</title><rect x="614" y="324" width="2" height="15" fill="rgb(230,199,36)"/><text x="617.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3498) (1 samples, 0.15%)</title><rect x="614" y="340" width="2" height="15" fill="rgb(219,163,44)"/><text x="617.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (3 samples, 0.46%)</title><rect x="616" y="340" width="5" height="15" fill="rgb(237,35,1)"/><text x="619.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.31%)</title><rect x="621" y="340" width="4" height="15" fill="rgb(230,36,28)"/><text x="624.00" y="350.50"></text></g><g><title>0x7f6e964e5dae (libc-2.29.so) (1 samples, 0.15%)</title><rect x="625" y="356" width="2" height="15" fill="rgb(241,168,45)"/><text x="628.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 1.07%)</title><rect x="616" y="292" width="12" height="15" fill="rgb(240,51,39)"/><text x="619.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (7 samples, 1.07%)</title><rect x="616" y="308" width="12" height="15" fill="rgb(242,121,38)"/><text x="619.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 1.07%)</title><rect x="616" y="324" width="12" height="15" fill="rgb(245,161,14)"/><text x="619.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.31%)</title><rect x="625" y="340" width="3" height="15" fill="rgb(242,110,39)"/><text x="628.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:329) (1 samples, 0.15%)</title><rect x="627" y="356" width="1" height="15" fill="rgb(210,23,51)"/><text x="630.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.46%)</title><rect x="628" y="292" width="6" height="15" fill="rgb(244,193,31)"/><text x="631.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (3 samples, 0.46%)</title><rect x="628" y="308" width="6" height="15" fill="rgb(225,173,41)"/><text x="631.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (3 samples, 0.46%)</title><rect x="628" y="324" width="6" height="15" fill="rgb(231,61,27)"/><text x="631.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (3 samples, 0.46%)</title><rect x="628" y="340" width="6" height="15" fill="rgb(228,193,15)"/><text x="631.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (3 samples, 0.46%)</title><rect x="628" y="356" width="6" height="15" fill="rgb(216,10,54)"/><text x="631.00" y="366.50"></text></g><g><title>0x7f6e964c5b35 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="634" y="324" width="2" height="15" fill="rgb(247,147,4)"/><text x="637.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (2 samples, 0.31%)</title><rect x="634" y="308" width="3" height="15" fill="rgb(228,147,39)"/><text x="637.00" y="318.50"></text></g><g><title>0x7f6e964c5df6 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="636" y="324" width="1" height="15" fill="rgb(230,199,54)"/><text x="639.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (22 samples, 3.36%)</title><rect x="600" y="228" width="39" height="15" fill="rgb(205,10,46)"/><text x="603.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (20 samples, 3.06%)</title><rect x="603" y="244" width="36" height="15" fill="rgb(247,110,40)"/><text x="606.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (19 samples, 2.91%)</title><rect x="605" y="260" width="34" height="15" fill="rgb(230,107,13)"/><text x="608.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (19 samples, 2.91%)</title><rect x="605" y="276" width="34" height="15" fill="rgb(222,2,19)"/><text x="608.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (3 samples, 0.46%)</title><rect x="634" y="292" width="5" height="15" fill="rgb(253,207,32)"/><text x="637.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="637" y="308" width="2" height="15" fill="rgb(233,6,54)"/><text x="640.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.15%)</title><rect x="639" y="228" width="2" height="15" fill="rgb(216,77,53)"/><text x="642.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.15%)</title><rect x="643" y="260" width="2" height="15" fill="rgb(222,60,23)"/><text x="646.00" y="270.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.15%)</title><rect x="643" y="276" width="2" height="15" fill="rgb(233,70,52)"/><text x="646.00" y="286.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.15%)</title><rect x="643" y="292" width="2" height="15" fill="rgb(244,3,19)"/><text x="646.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.15%)</title><rect x="643" y="308" width="2" height="15" fill="rgb(216,202,15)"/><text x="646.00" y="318.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:18) (1 samples, 0.15%)</title><rect x="643" y="324" width="2" height="15" fill="rgb(213,222,14)"/><text x="646.00" y="334.50"></text></g><g><title>array_argmax (methods.c:297) (2 samples, 0.31%)</title><rect x="650" y="308" width="4" height="15" fill="rgb(254,193,14)"/><text x="653.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.15%)</title><rect x="652" y="324" width="2" height="15" fill="rgb(216,212,28)"/><text x="655.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (1 samples, 0.15%)</title><rect x="655" y="340" width="2" height="15" fill="rgb(235,121,39)"/><text x="658.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (3 samples, 0.46%)</title><rect x="654" y="324" width="5" height="15" fill="rgb(216,79,54)"/><text x="657.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3109) (1 samples, 0.15%)</title><rect x="657" y="340" width="2" height="15" fill="rgb(242,187,27)"/><text x="660.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:132) (2 samples, 0.31%)</title><rect x="659" y="324" width="4" height="15" fill="rgb(242,52,38)"/><text x="662.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (160 samples, 24.46%)</title><rect x="376" y="196" width="288" height="15" fill="rgb(248,140,27)"/><text x="379.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:3..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (159 samples, 24.31%)</title><rect x="378" y="212" width="286" height="15" fill="rgb(212,52,9)"/><text x="381.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:2..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (13 samples, 1.99%)</title><rect x="641" y="228" width="23" height="15" fill="rgb(220,132,25)"/><text x="644.00" y="238.50">_..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (13 samples, 1.99%)</title><rect x="641" y="244" width="23" height="15" fill="rgb(239,36,8)"/><text x="644.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 1.68%)</title><rect x="645" y="260" width="19" height="15" fill="rgb(225,179,47)"/><text x="648.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (11 samples, 1.68%)</title><rect x="645" y="276" width="19" height="15" fill="rgb(224,194,39)"/><text x="648.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (8 samples, 1.22%)</title><rect x="650" y="292" width="14" height="15" fill="rgb(248,68,19)"/><text x="653.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (6 samples, 0.92%)</title><rect x="654" y="308" width="10" height="15" fill="rgb(254,153,50)"/><text x="657.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:85) (1 samples, 0.15%)</title><rect x="663" y="324" width="1" height="15" fill="rgb(252,42,51)"/><text x="666.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1867) (1 samples, 0.15%)</title><rect x="663" y="340" width="1" height="15" fill="rgb(218,97,34)"/><text x="666.00" y="350.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.15%)</title><rect x="663" y="356" width="1" height="15" fill="rgb(252,127,50)"/><text x="666.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (162 samples, 24.77%)</title><rect x="376" y="180" width="292" height="15" fill="rgb(210,170,39)"/><text x="379.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_no..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (2 samples, 0.31%)</title><rect x="664" y="196" width="4" height="15" fill="rgb(241,185,26)"/><text x="667.00" y="206.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (165 samples, 25.23%)</title><rect x="374" y="164" width="298" height="15" fill="rgb(236,217,39)"/><text x="377.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.31%)</title><rect x="668" y="180" width="4" height="15" fill="rgb(214,70,47)"/><text x="671.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (172 samples, 26.30%)</title><rect x="369" y="132" width="310" height="15" fill="rgb(216,167,29)"/><text x="372.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (170 samples, 25.99%)</title><rect x="372" y="148" width="307" height="15" fill="rgb(227,106,2)"/><text x="375.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:4..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 0.61%)</title><rect x="672" y="164" width="7" height="15" fill="rgb(233,27,12)"/><text x="675.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.15%)</title><rect x="677" y="180" width="2" height="15" fill="rgb(214,147,2)"/><text x="680.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:45) (176 samples, 26.91%)</title><rect x="363" y="52" width="318" height="15" fill="rgb(233,150,45)"/><text x="366.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_libline..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:44) (176 samples, 26.91%)</title><rect x="363" y="68" width="318" height="15" fill="rgb(245,136,12)"/><text x="366.00" y="78.50">profile_pyrt (bench_LogisticRegression_lib..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:29) (176 samples, 26.91%)</title><rect x="363" y="84" width="318" height="15" fill="rgb(218,185,13)"/><text x="366.00" y="94.50">setup_profile (bench_LogisticRegression_li..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:23) (175 samples, 26.76%)</title><rect x="365" y="100" width="316" height="15" fill="rgb(237,220,53)"/><text x="368.00" y="110.50">profile (bench_LogisticRegression_liblinea..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (174 samples, 26.61%)</title><rect x="367" y="116" width="314" height="15" fill="rgb(234,17,48)"/><text x="370.00" y="126.50">time_predict (mlprodict/asv_benchmark/comm..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.15%)</title><rect x="679" y="132" width="2" height="15" fill="rgb(217,9,49)"/><text x="682.00" y="142.50"></text></g><g><title>0x7f6e56535ff9 (?) (1 samples, 0.15%)</title><rect x="681" y="212" width="1" height="15" fill="rgb(220,102,2)"/><text x="684.00" y="222.50"></text></g><g><title>0x7f6e56530ef6 (?) (1 samples, 0.15%)</title><rect x="681" y="228" width="1" height="15" fill="rgb(226,144,44)"/><text x="684.00" y="238.50"></text></g><g><title>0x7f6e56525962 (?) (1 samples, 0.15%)</title><rect x="681" y="244" width="1" height="15" fill="rgb(224,56,32)"/><text x="684.00" y="254.50"></text></g><g><title>0x7f6e565597a7 (?) (1 samples, 0.15%)</title><rect x="681" y="260" width="1" height="15" fill="rgb(229,136,40)"/><text x="684.00" y="270.50"></text></g><g><title>0x7f6e56559379 (?) (1 samples, 0.15%)</title><rect x="681" y="276" width="1" height="15" fill="rgb(225,113,36)"/><text x="684.00" y="286.50"></text></g><g><title>0x7f6e569b78b8 (?) (1 samples, 0.15%)</title><rect x="681" y="292" width="1" height="15" fill="rgb(240,103,54)"/><text x="684.00" y="302.50"></text></g><g><title>0x7f6e569b5c7f (?) (1 samples, 0.15%)</title><rect x="681" y="308" width="1" height="15" fill="rgb(239,19,33)"/><text x="684.00" y="318.50"></text></g><g><title>0x7f6e569c899c (?) (1 samples, 0.15%)</title><rect x="681" y="324" width="1" height="15" fill="rgb(245,109,48)"/><text x="684.00" y="334.50"></text></g><g><title>0x7f6e566add39 (?) (1 samples, 0.15%)</title><rect x="681" y="340" width="1" height="15" fill="rgb(211,36,46)"/><text x="684.00" y="350.50"></text></g><g><title>0x7f6e566a81a8 (?) (1 samples, 0.15%)</title><rect x="681" y="356" width="1" height="15" fill="rgb(207,188,45)"/><text x="684.00" y="366.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:18) (2 samples, 0.31%)</title><rect x="681" y="100" width="3" height="15" fill="rgb(219,104,14)"/><text x="684.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.31%)</title><rect x="681" y="116" width="3" height="15" fill="rgb(208,77,41)"/><text x="684.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (2 samples, 0.31%)</title><rect x="681" y="132" width="3" height="15" fill="rgb(219,134,31)"/><text x="684.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.31%)</title><rect x="681" y="148" width="3" height="15" fill="rgb(211,229,32)"/><text x="684.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (2 samples, 0.31%)</title><rect x="681" y="164" width="3" height="15" fill="rgb(246,155,17)"/><text x="684.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (2 samples, 0.31%)</title><rect x="681" y="180" width="3" height="15" fill="rgb(207,147,4)"/><text x="684.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (2 samples, 0.31%)</title><rect x="681" y="196" width="3" height="15" fill="rgb(241,85,49)"/><text x="684.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="682" y="212" width="2" height="15" fill="rgb(238,21,25)"/><text x="685.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="682" y="228" width="2" height="15" fill="rgb(245,21,40)"/><text x="685.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="682" y="244" width="2" height="15" fill="rgb(230,71,45)"/><text x="685.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="682" y="260" width="2" height="15" fill="rgb(229,109,47)"/><text x="685.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="682" y="276" width="2" height="15" fill="rgb(219,133,51)"/><text x="685.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="682" y="292" width="2" height="15" fill="rgb(251,103,17)"/><text x="685.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="682" y="308" width="2" height="15" fill="rgb(211,207,38)"/><text x="685.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="682" y="324" width="2" height="15" fill="rgb(224,21,28)"/><text x="685.00" y="334.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="682" y="340" width="2" height="15" fill="rgb(223,110,45)"/><text x="685.00" y="350.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:607) (1 samples, 0.15%)</title><rect x="686" y="164" width="2" height="15" fill="rgb(210,146,51)"/><text x="689.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.15%)</title><rect x="692" y="196" width="1" height="15" fill="rgb(252,126,38)"/><text x="695.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.31%)</title><rect x="693" y="196" width="4" height="15" fill="rgb(233,62,52)"/><text x="696.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.31%)</title><rect x="693" y="212" width="4" height="15" fill="rgb(218,98,35)"/><text x="696.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="693" y="228" width="4" height="15" fill="rgb(234,121,13)"/><text x="696.00" y="238.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="693" y="244" width="4" height="15" fill="rgb(224,16,43)"/><text x="696.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="695" y="260" width="2" height="15" fill="rgb(228,206,36)"/><text x="698.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="699" y="260" width="2" height="15" fill="rgb(229,76,11)"/><text x="702.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="701" y="292" width="1" height="15" fill="rgb(241,119,6)"/><text x="704.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="701" y="308" width="1" height="15" fill="rgb(226,136,5)"/><text x="704.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="701" y="324" width="1" height="15" fill="rgb(235,27,33)"/><text x="704.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="702" y="292" width="2" height="15" fill="rgb(223,228,9)"/><text x="705.00" y="302.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="702" y="308" width="2" height="15" fill="rgb(222,127,13)"/><text x="705.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="706" y="340" width="4" height="15" fill="rgb(236,198,6)"/><text x="709.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="708" y="356" width="2" height="15" fill="rgb(214,121,10)"/><text x="711.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="708" y="372" width="2" height="15" fill="rgb(221,138,23)"/><text x="711.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="710" y="340" width="1" height="15" fill="rgb(221,47,9)"/><text x="713.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1159" y="468" width="2" height="15" fill="rgb(249,17,25)"/><text x="1162.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1159" y="484" width="2" height="15" fill="rgb(228,173,53)"/><text x="1162.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1159" y="500" width="2" height="15" fill="rgb(227,127,27)"/><text x="1162.00" y="510.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="1159" y="516" width="2" height="15" fill="rgb(222,147,7)"/><text x="1162.00" y="526.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="1157" y="356" width="5" height="15" fill="rgb(221,141,14)"/><text x="1160.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="1157" y="372" width="5" height="15" fill="rgb(233,25,18)"/><text x="1160.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="1157" y="388" width="5" height="15" fill="rgb(240,139,16)"/><text x="1160.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="1157" y="404" width="5" height="15" fill="rgb(229,203,29)"/><text x="1160.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="1157" y="420" width="5" height="15" fill="rgb(241,93,10)"/><text x="1160.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="1159" y="436" width="3" height="15" fill="rgb(212,17,23)"/><text x="1162.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="1159" y="452" width="3" height="15" fill="rgb(217,51,28)"/><text x="1162.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1161" y="468" width="1" height="15" fill="rgb(253,74,41)"/><text x="1164.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1161" y="484" width="1" height="15" fill="rgb(221,130,31)"/><text x="1164.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="1161" y="500" width="1" height="15" fill="rgb(252,29,7)"/><text x="1164.00" y="510.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1161" y="516" width="1" height="15" fill="rgb(222,18,43)"/><text x="1164.00" y="526.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.76%)</title><rect x="1162" y="356" width="9" height="15" fill="rgb(206,107,51)"/><text x="1165.00" y="366.50"></text></g><g><title>0x7f6e564fc850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1170" y="372" width="1" height="15" fill="rgb(217,119,42)"/><text x="1173.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (262 samples, 40.06%)</title><rect x="701" y="276" width="472" height="15" fill="rgb(210,221,13)"/><text x="704.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (260 samples, 39.76%)</title><rect x="704" y="292" width="469" height="15" fill="rgb(253,83,16)"/><text x="707.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_p..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (260 samples, 39.76%)</title><rect x="704" y="308" width="469" height="15" fill="rgb(239,130,45)"/><text x="707.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxrunti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (259 samples, 39.60%)</title><rect x="706" y="324" width="467" height="15" fill="rgb(212,33,52)"/><text x="709.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (256 samples, 39.14%)</title><rect x="711" y="340" width="462" height="15" fill="rgb(222,132,45)"/><text x="714.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="1171" y="356" width="2" height="15" fill="rgb(234,157,5)"/><text x="1174.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1171" y="372" width="2" height="15" fill="rgb(245,44,1)"/><text x="1174.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (263 samples, 40.21%)</title><rect x="701" y="260" width="474" height="15" fill="rgb(220,105,4)"/><text x="704.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1173" y="276" width="2" height="15" fill="rgb(225,2,23)"/><text x="1176.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1175" y="260" width="2" height="15" fill="rgb(254,197,1)"/><text x="1178.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.15%)</title><rect x="1175" y="276" width="2" height="15" fill="rgb(245,80,34)"/><text x="1178.00" y="286.50"></text></g><g><title>PyArray_New (ctors.c:1362) (1 samples, 0.15%)</title><rect x="1177" y="276" width="2" height="15" fill="rgb(220,28,51)"/><text x="1180.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.15%)</title><rect x="1177" y="292" width="2" height="15" fill="rgb(228,67,0)"/><text x="1180.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="1177" y="260" width="3" height="15" fill="rgb(230,181,12)"/><text x="1180.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.15%)</title><rect x="1179" y="276" width="1" height="15" fill="rgb(232,46,19)"/><text x="1182.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.15%)</title><rect x="1179" y="292" width="1" height="15" fill="rgb(238,102,20)"/><text x="1182.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.15%)</title><rect x="1179" y="308" width="1" height="15" fill="rgb(225,10,21)"/><text x="1182.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.15%)</title><rect x="1179" y="324" width="1" height="15" fill="rgb(210,197,53)"/><text x="1182.00" y="334.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (268 samples, 40.98%)</title><rect x="699" y="244" width="483" height="15" fill="rgb(238,44,7)"/><text x="702.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1180" y="260" width="2" height="15" fill="rgb(244,63,14)"/><text x="1183.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1180" y="276" width="2" height="15" fill="rgb(219,56,32)"/><text x="1183.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1180" y="292" width="2" height="15" fill="rgb(241,33,3)"/><text x="1183.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1180" y="308" width="2" height="15" fill="rgb(247,162,6)"/><text x="1183.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1180" y="324" width="2" height="15" fill="rgb(220,39,16)"/><text x="1183.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1180" y="340" width="2" height="15" fill="rgb(223,162,51)"/><text x="1183.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1180" y="356" width="2" height="15" fill="rgb(221,207,41)"/><text x="1183.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1180" y="372" width="2" height="15" fill="rgb(214,197,2)"/><text x="1183.00" y="382.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (277 samples, 42.35%)</title><rect x="688" y="164" width="500" height="15" fill="rgb(239,72,34)"/><text x="691.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (275 samples, 42.05%)</title><rect x="692" y="180" width="496" height="15" fill="rgb(218,74,32)"/><text x="695.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (272 samples, 41.59%)</title><rect x="697" y="196" width="491" height="15" fill="rgb(243,199,8)"/><text x="700.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (271 samples, 41.44%)</title><rect x="699" y="212" width="489" height="15" fill="rgb(219,178,19)"/><text x="702.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (271 samples, 41.44%)</title><rect x="699" y="228" width="489" height="15" fill="rgb(252,53,54)"/><text x="702.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObj..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="1182" y="244" width="6" height="15" fill="rgb(254,15,7)"/><text x="1185.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="1182" y="260" width="6" height="15" fill="rgb(207,33,35)"/><text x="1185.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="1186" y="276" width="2" height="15" fill="rgb(254,227,7)"/><text x="1189.00" y="286.50"></text></g><g><title>0x7f6e964e5d50 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1186" y="292" width="2" height="15" fill="rgb(254,4,12)"/><text x="1189.00" y="302.50"></text></g><g><title>all (654 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(240,175,42)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:52) (282 samples, 43.12%)</title><rect x="681" y="52" width="509" height="15" fill="rgb(232,110,48)"/><text x="684.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverlibli..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:51) (282 samples, 43.12%)</title><rect x="681" y="68" width="509" height="15" fill="rgb(207,120,19)"/><text x="684.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverli..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:29) (282 samples, 43.12%)</title><rect x="681" y="84" width="509" height="15" fill="rgb(228,38,35)"/><text x="684.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solver..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:23) (280 samples, 42.81%)</title><rect x="684" y="100" width="506" height="15" fill="rgb(233,127,53)"/><text x="687.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblin..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (280 samples, 42.81%)</title><rect x="684" y="116" width="506" height="15" fill="rgb(225,44,49)"/><text x="687.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (280 samples, 42.81%)</title><rect x="684" y="132" width="506" height="15" fill="rgb(208,201,29)"/><text x="687.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (279 samples, 42.66%)</title><rect x="686" y="148" width="504" height="15" fill="rgb(226,5,45)"/><text x="689.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.15%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(206,57,19)"/><text x="1191.00" y="174.50"></text></g></g></svg>