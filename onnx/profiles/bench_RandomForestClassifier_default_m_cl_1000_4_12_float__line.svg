<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2166" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2149.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2149.00"> </text><g id="frames"><g><title>fit (sklearn/ensemble/_forest.py:369) (1 samples, 0.15%)</title><rect x="10" y="116" width="1" height="15" fill="rgb(228,48,1)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (1 samples, 0.15%)</title><rect x="10" y="132" width="1" height="15" fill="rgb(254,101,20)"/><text x="13.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:151) (1 samples, 0.15%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(224,75,3)"/><text x="13.00" y="158.50"></text></g><g><title>set_params (sklearn/base.py:227) (1 samples, 0.15%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(252,176,14)"/><text x="13.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.15%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(232,208,24)"/><text x="13.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.15%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(254,133,18)"/><text x="13.00" y="206.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.15%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(213,155,16)"/><text x="13.00" y="222.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.15%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(223,213,0)"/><text x="13.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py:2240) (1 samples, 0.15%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(230,82,8)"/><text x="13.00" y="254.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.15%)</title><rect x="11" y="452" width="2" height="15" fill="rgb(241,16,52)"/><text x="14.00" y="462.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.15%)</title><rect x="11" y="468" width="2" height="15" fill="rgb(213,16,48)"/><text x="14.00" y="478.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.15%)</title><rect x="11" y="484" width="2" height="15" fill="rgb(245,212,54)"/><text x="14.00" y="494.50"></text></g><g><title>prepare_index (mapping.c:499) (1 samples, 0.15%)</title><rect x="13" y="452" width="2" height="15" fill="rgb(229,94,50)"/><text x="16.00" y="462.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:31) (4 samples, 0.59%)</title><rect x="10" y="52" width="6" height="15" fill="rgb(214,119,26)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:11) (4 samples, 0.59%)</title><rect x="10" y="68" width="6" height="15" fill="rgb(222,163,46)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:39) (4 samples, 0.59%)</title><rect x="10" y="84" width="6" height="15" fill="rgb(212,101,38)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (4 samples, 0.59%)</title><rect x="10" y="100" width="6" height="15" fill="rgb(210,222,9)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (3 samples, 0.44%)</title><rect x="11" y="116" width="5" height="15" fill="rgb(225,54,0)"/><text x="14.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (3 samples, 0.44%)</title><rect x="11" y="132" width="5" height="15" fill="rgb(205,111,1)"/><text x="14.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (3 samples, 0.44%)</title><rect x="11" y="148" width="5" height="15" fill="rgb(248,46,16)"/><text x="14.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (3 samples, 0.44%)</title><rect x="11" y="164" width="5" height="15" fill="rgb(221,35,11)"/><text x="14.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (3 samples, 0.44%)</title><rect x="11" y="180" width="5" height="15" fill="rgb(208,146,35)"/><text x="14.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (3 samples, 0.44%)</title><rect x="11" y="196" width="5" height="15" fill="rgb(230,61,28)"/><text x="14.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (3 samples, 0.44%)</title><rect x="11" y="212" width="5" height="15" fill="rgb(208,169,45)"/><text x="14.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (3 samples, 0.44%)</title><rect x="11" y="228" width="5" height="15" fill="rgb(221,206,31)"/><text x="14.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (3 samples, 0.44%)</title><rect x="11" y="244" width="5" height="15" fill="rgb(205,134,43)"/><text x="14.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (3 samples, 0.44%)</title><rect x="11" y="260" width="5" height="15" fill="rgb(224,119,53)"/><text x="14.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:143) (3 samples, 0.44%)</title><rect x="11" y="276" width="5" height="15" fill="rgb(224,167,35)"/><text x="14.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (3 samples, 0.44%)</title><rect x="11" y="292" width="5" height="15" fill="rgb(206,137,38)"/><text x="14.00" y="302.50"></text></g><g><title>__init__ (mtrand.c:3210) (3 samples, 0.44%)</title><rect x="11" y="308" width="5" height="15" fill="rgb(207,60,22)"/><text x="14.00" y="318.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (3 samples, 0.44%)</title><rect x="11" y="324" width="5" height="15" fill="rgb(249,15,44)"/><text x="14.00" y="334.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (3 samples, 0.44%)</title><rect x="11" y="340" width="5" height="15" fill="rgb(237,206,32)"/><text x="14.00" y="350.50"></text></g><g><title>__init__ (mt19937.c:2381) (3 samples, 0.44%)</title><rect x="11" y="356" width="5" height="15" fill="rgb(244,95,15)"/><text x="14.00" y="366.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (3 samples, 0.44%)</title><rect x="11" y="372" width="5" height="15" fill="rgb(227,216,24)"/><text x="14.00" y="382.50"></text></g><g><title>inner (contextlib.py:74) (3 samples, 0.44%)</title><rect x="11" y="388" width="5" height="15" fill="rgb(231,95,46)"/><text x="14.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c:5779) (3 samples, 0.44%)</title><rect x="11" y="404" width="5" height="15" fill="rgb(229,86,47)"/><text x="14.00" y="414.50"></text></g><g><title>generate_state (bit_generator.c:6081) (3 samples, 0.44%)</title><rect x="11" y="420" width="5" height="15" fill="rgb(207,2,28)"/><text x="14.00" y="430.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (3 samples, 0.44%)</title><rect x="11" y="436" width="5" height="15" fill="rgb(251,146,22)"/><text x="14.00" y="446.50"></text></g><g><title>prepare_index (mapping.c:597) (1 samples, 0.15%)</title><rect x="15" y="452" width="1" height="15" fill="rgb(224,222,8)"/><text x="18.00" y="462.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:28) (1 samples, 0.15%)</title><rect x="16" y="84" width="2" height="15" fill="rgb(209,91,7)"/><text x="19.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.15%)</title><rect x="16" y="100" width="2" height="15" fill="rgb(244,61,50)"/><text x="19.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.15%)</title><rect x="16" y="116" width="2" height="15" fill="rgb(224,199,27)"/><text x="19.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.15%)</title><rect x="16" y="132" width="2" height="15" fill="rgb(221,208,11)"/><text x="19.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.15%)</title><rect x="16" y="148" width="2" height="15" fill="rgb(216,114,9)"/><text x="19.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.15%)</title><rect x="16" y="164" width="2" height="15" fill="rgb(235,193,44)"/><text x="19.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.15%)</title><rect x="16" y="180" width="2" height="15" fill="rgb(225,162,39)"/><text x="19.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:65) (1 samples, 0.15%)</title><rect x="16" y="196" width="2" height="15" fill="rgb(219,147,2)"/><text x="19.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.15%)</title><rect x="16" y="212" width="2" height="15" fill="rgb(250,219,50)"/><text x="19.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.15%)</title><rect x="16" y="228" width="2" height="15" fill="rgb(238,148,6)"/><text x="19.00" y="238.50"></text></g><g><title>0x7f0e986544d0 (?) (1 samples, 0.15%)</title><rect x="16" y="244" width="2" height="15" fill="rgb(220,210,50)"/><text x="19.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.15%)</title><rect x="16" y="260" width="2" height="15" fill="rgb(239,103,31)"/><text x="19.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.15%)</title><rect x="16" y="276" width="2" height="15" fill="rgb(228,41,9)"/><text x="19.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.15%)</title><rect x="16" y="292" width="2" height="15" fill="rgb(247,153,44)"/><text x="19.00" y="302.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.30%)</title><rect x="23" y="196" width="4" height="15" fill="rgb(213,10,30)"/><text x="26.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (2 samples, 0.30%)</title><rect x="23" y="212" width="4" height="15" fill="rgb(246,19,24)"/><text x="26.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.30%)</title><rect x="23" y="228" width="4" height="15" fill="rgb(207,175,46)"/><text x="26.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.15%)</title><rect x="25" y="244" width="2" height="15" fill="rgb(252,87,49)"/><text x="28.00" y="254.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="25" y="260" width="2" height="15" fill="rgb(245,192,41)"/><text x="28.00" y="270.50"></text></g><g><title>get (queue.py:166) (2 samples, 0.30%)</title><rect x="27" y="196" width="3" height="15" fill="rgb(239,163,10)"/><text x="30.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.15%)</title><rect x="29" y="212" width="1" height="15" fill="rgb(211,120,37)"/><text x="32.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (9 samples, 1.33%)</title><rect x="20" y="180" width="16" height="15" fill="rgb(218,66,31)"/><text x="23.00" y="190.50"></text></g><g><title>get (queue.py:182) (3 samples, 0.44%)</title><rect x="30" y="196" width="6" height="15" fill="rgb(231,6,47)"/><text x="33.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (2 samples, 0.30%)</title><rect x="32" y="212" width="4" height="15" fill="rgb(212,218,32)"/><text x="35.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:797) (1 samples, 0.15%)</title><rect x="36" y="180" width="1" height="15" fill="rgb(212,209,14)"/><text x="39.00" y="190.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.15%)</title><rect x="39" y="228" width="2" height="15" fill="rgb(244,81,18)"/><text x="42.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (1 samples, 0.15%)</title><rect x="41" y="228" width="2" height="15" fill="rgb(223,108,47)"/><text x="44.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (2 samples, 0.30%)</title><rect x="43" y="228" width="3" height="15" fill="rgb(222,229,43)"/><text x="46.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (6 samples, 0.89%)</title><rect x="37" y="180" width="11" height="15" fill="rgb(214,2,40)"/><text x="40.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (6 samples, 0.89%)</title><rect x="37" y="196" width="11" height="15" fill="rgb(251,54,3)"/><text x="40.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (5 samples, 0.74%)</title><rect x="39" y="212" width="9" height="15" fill="rgb(217,214,8)"/><text x="42.00" y="222.50"></text></g><g><title>wraps (functools.py:79) (1 samples, 0.15%)</title><rect x="46" y="228" width="2" height="15" fill="rgb(222,98,8)"/><text x="49.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.15%)</title><rect x="48" y="180" width="2" height="15" fill="rgb(233,138,25)"/><text x="51.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (3 samples, 0.44%)</title><rect x="50" y="180" width="5" height="15" fill="rgb(225,96,52)"/><text x="53.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (6 samples, 0.89%)</title><rect x="55" y="196" width="10" height="15" fill="rgb(207,30,1)"/><text x="58.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.44%)</title><rect x="60" y="212" width="5" height="15" fill="rgb(248,72,5)"/><text x="63.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (3 samples, 0.44%)</title><rect x="65" y="212" width="6" height="15" fill="rgb(207,46,26)"/><text x="68.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.15%)</title><rect x="69" y="228" width="2" height="15" fill="rgb(248,210,15)"/><text x="72.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:118) (1 samples, 0.15%)</title><rect x="71" y="212" width="1" height="15" fill="rgb(236,224,27)"/><text x="74.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (11 samples, 1.63%)</title><rect x="55" y="180" width="19" height="15" fill="rgb(220,170,53)"/><text x="58.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (5 samples, 0.74%)</title><rect x="65" y="196" width="9" height="15" fill="rgb(207,164,24)"/><text x="68.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:83) (1 samples, 0.15%)</title><rect x="72" y="212" width="2" height="15" fill="rgb(234,94,22)"/><text x="75.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (1 samples, 0.15%)</title><rect x="74" y="180" width="2" height="15" fill="rgb(229,59,50)"/><text x="77.00" y="190.50"></text></g><g><title>put (queue.py:149) (1 samples, 0.15%)</title><rect x="76" y="196" width="2" height="15" fill="rgb(229,191,14)"/><text x="79.00" y="206.50"></text></g><g><title>_put (queue.py:213) (1 samples, 0.15%)</title><rect x="76" y="212" width="2" height="15" fill="rgb(244,164,25)"/><text x="79.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (3 samples, 0.44%)</title><rect x="76" y="180" width="5" height="15" fill="rgb(237,12,1)"/><text x="79.00" y="190.50"></text></g><g><title>put (queue.py:151) (2 samples, 0.30%)</title><rect x="78" y="196" width="3" height="15" fill="rgb(230,49,37)"/><text x="81.00" y="206.50"></text></g><g><title>notify (threading.py:348) (2 samples, 0.30%)</title><rect x="78" y="212" width="3" height="15" fill="rgb(246,86,39)"/><text x="81.00" y="222.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.15%)</title><rect x="81" y="196" width="2" height="15" fill="rgb(215,143,18)"/><text x="84.00" y="206.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.15%)</title><rect x="83" y="196" width="2" height="15" fill="rgb(214,25,8)"/><text x="86.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.15%)</title><rect x="83" y="212" width="2" height="15" fill="rgb(210,200,10)"/><text x="86.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (4 samples, 0.59%)</title><rect x="81" y="180" width="7" height="15" fill="rgb(231,150,34)"/><text x="84.00" y="190.50"></text></g><g><title>get (queue.py:182) (2 samples, 0.30%)</title><rect x="85" y="196" width="3" height="15" fill="rgb(219,132,17)"/><text x="88.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.15%)</title><rect x="86" y="212" width="2" height="15" fill="rgb(237,17,49)"/><text x="89.00" y="222.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.15%)</title><rect x="86" y="228" width="2" height="15" fill="rgb(223,156,9)"/><text x="89.00" y="238.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.15%)</title><rect x="86" y="244" width="2" height="15" fill="rgb(238,31,3)"/><text x="89.00" y="254.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="86" y="260" width="2" height="15" fill="rgb(249,136,28)"/><text x="89.00" y="270.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (1 samples, 0.15%)</title><rect x="88" y="180" width="2" height="15" fill="rgb(246,227,41)"/><text x="91.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:746) (2 samples, 0.30%)</title><rect x="92" y="196" width="3" height="15" fill="rgb(219,163,35)"/><text x="95.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:747) (1 samples, 0.15%)</title><rect x="95" y="196" width="2" height="15" fill="rgb(234,148,19)"/><text x="98.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (1 samples, 0.15%)</title><rect x="97" y="196" width="2" height="15" fill="rgb(217,33,47)"/><text x="100.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:329) (1 samples, 0.15%)</title><rect x="97" y="212" width="2" height="15" fill="rgb(233,169,4)"/><text x="100.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (3 samples, 0.44%)</title><rect x="100" y="244" width="6" height="15" fill="rgb(249,45,5)"/><text x="103.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (2 samples, 0.30%)</title><rect x="102" y="260" width="4" height="15" fill="rgb(244,179,51)"/><text x="105.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.30%)</title><rect x="106" y="324" width="3" height="15" fill="rgb(254,192,53)"/><text x="109.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.15%)</title><rect x="114" y="340" width="2" height="15" fill="rgb(211,49,36)"/><text x="117.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 0.89%)</title><rect x="109" y="324" width="10" height="15" fill="rgb(214,39,13)"/><text x="112.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.30%)</title><rect x="116" y="340" width="3" height="15" fill="rgb(228,56,33)"/><text x="119.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (11 samples, 1.63%)</title><rect x="106" y="292" width="19" height="15" fill="rgb(217,161,38)"/><text x="109.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 1.63%)</title><rect x="106" y="308" width="19" height="15" fill="rgb(207,158,39)"/><text x="109.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 0.44%)</title><rect x="119" y="324" width="6" height="15" fill="rgb(226,133,4)"/><text x="122.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.15%)</title><rect x="123" y="340" width="2" height="15" fill="rgb(241,24,21)"/><text x="126.00" y="350.50"></text></g><g><title>0x7f0e83d2df55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="125" y="324" width="1" height="15" fill="rgb(234,97,50)"/><text x="128.00" y="334.50"></text></g><g><title>0x7f0e83d1dd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="125" y="340" width="1" height="15" fill="rgb(217,13,30)"/><text x="128.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.15%)</title><rect x="125" y="356" width="1" height="15" fill="rgb(238,99,7)"/><text x="128.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.15%)</title><rect x="125" y="372" width="1" height="15" fill="rgb(245,112,46)"/><text x="128.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.15%)</title><rect x="125" y="388" width="1" height="15" fill="rgb(235,128,7)"/><text x="128.00" y="398.50"></text></g><g><title>0x7f0e83d20d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="126" y="372" width="2" height="15" fill="rgb(221,7,16)"/><text x="129.00" y="382.50"></text></g><g><title>0x7f0e83d20666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="126" y="388" width="2" height="15" fill="rgb(238,214,37)"/><text x="129.00" y="398.50"></text></g><g><title>0x7f0e83d162fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="126" y="404" width="2" height="15" fill="rgb(209,81,50)"/><text x="129.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:770) (1 samples, 0.15%)</title><rect x="126" y="420" width="2" height="15" fill="rgb(206,164,7)"/><text x="129.00" y="430.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:700) (1 samples, 0.15%)</title><rect x="126" y="436" width="2" height="15" fill="rgb(214,135,19)"/><text x="129.00" y="446.50"></text></g><g><title>0x7f0e83d3c2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.30%)</title><rect x="126" y="356" width="4" height="15" fill="rgb(248,217,47)"/><text x="129.00" y="366.50"></text></g><g><title>0x7f0e83d20efd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="128" y="372" width="2" height="15" fill="rgb(216,173,51)"/><text x="131.00" y="382.50"></text></g><g><title>0x7f0e83d112a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="128" y="388" width="2" height="15" fill="rgb(239,58,53)"/><text x="131.00" y="398.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.15%)</title><rect x="130" y="372" width="2" height="15" fill="rgb(225,64,20)"/><text x="133.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.15%)</title><rect x="130" y="388" width="2" height="15" fill="rgb(231,0,53)"/><text x="133.00" y="398.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.15%)</title><rect x="132" y="436" width="1" height="15" fill="rgb(243,201,30)"/><text x="135.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.15%)</title><rect x="132" y="452" width="1" height="15" fill="rgb(245,145,21)"/><text x="135.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="132" y="468" width="1" height="15" fill="rgb(217,195,1)"/><text x="135.00" y="478.50"></text></g><g><title>0x7f0eaa30b103 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="132" y="484" width="1" height="15" fill="rgb(241,19,39)"/><text x="135.00" y="494.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (3 samples, 0.44%)</title><rect x="132" y="420" width="5" height="15" fill="rgb(237,218,14)"/><text x="135.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (2 samples, 0.30%)</title><rect x="133" y="436" width="4" height="15" fill="rgb(208,72,35)"/><text x="136.00" y="446.50"></text></g><g><title>0x7f0e83d3c592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.74%)</title><rect x="130" y="356" width="9" height="15" fill="rgb(254,197,10)"/><text x="133.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (4 samples, 0.59%)</title><rect x="132" y="372" width="7" height="15" fill="rgb(219,55,45)"/><text x="135.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (4 samples, 0.59%)</title><rect x="132" y="388" width="7" height="15" fill="rgb(226,88,10)"/><text x="135.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (4 samples, 0.59%)</title><rect x="132" y="404" width="7" height="15" fill="rgb(211,20,41)"/><text x="135.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.15%)</title><rect x="137" y="420" width="2" height="15" fill="rgb(219,194,34)"/><text x="140.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.15%)</title><rect x="137" y="436" width="2" height="15" fill="rgb(250,133,48)"/><text x="140.00" y="446.50"></text></g><g><title>0x7f0e83d3c6a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="139" y="356" width="1" height="15" fill="rgb(249,195,14)"/><text x="142.00" y="366.50"></text></g><g><title>0x7f0e83d3c6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="140" y="356" width="2" height="15" fill="rgb(207,157,2)"/><text x="143.00" y="366.50"></text></g><g><title>0x7f0e83d3c6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="142" y="356" width="2" height="15" fill="rgb(246,143,11)"/><text x="145.00" y="366.50"></text></g><g><title>0x7f0e83d3c6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="144" y="356" width="2" height="15" fill="rgb(229,176,42)"/><text x="147.00" y="366.50"></text></g><g><title>0x7f0e83d3c6cf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="146" y="356" width="1" height="15" fill="rgb(249,103,0)"/><text x="149.00" y="366.50"></text></g><g><title>0x7f0e83d3c6d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="147" y="356" width="2" height="15" fill="rgb(212,40,12)"/><text x="150.00" y="366.50"></text></g><g><title>0x7f0e83d3c6e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="149" y="356" width="2" height="15" fill="rgb(237,149,50)"/><text x="152.00" y="366.50"></text></g><g><title>0x7f0e83d3c7b0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="151" y="356" width="2" height="15" fill="rgb(247,86,1)"/><text x="154.00" y="366.50"></text></g><g><title>0x7f0e83d3d405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 2.37%)</title><rect x="126" y="340" width="28" height="15" fill="rgb(211,44,18)"/><text x="129.00" y="350.50">0..</text></g><g><title>0x7f0e83d3cc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="153" y="356" width="1" height="15" fill="rgb(229,24,49)"/><text x="156.00" y="366.50"></text></g><g><title>0x7f0e83d14529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="153" y="372" width="1" height="15" fill="rgb(209,23,49)"/><text x="156.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.15%)</title><rect x="153" y="388" width="1" height="15" fill="rgb(227,136,52)"/><text x="156.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.15%)</title><rect x="153" y="404" width="1" height="15" fill="rgb(230,185,16)"/><text x="156.00" y="414.50"></text></g><g><title>0x7f0e83d2dfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.66%)</title><rect x="126" y="324" width="32" height="15" fill="rgb(239,90,41)"/><text x="129.00" y="334.50">0x..</text></g><g><title>0x7f0e83d3d540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.30%)</title><rect x="154" y="340" width="4" height="15" fill="rgb(231,99,41)"/><text x="157.00" y="350.50"></text></g><g><title>0x7f0e83d122f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.30%)</title><rect x="154" y="356" width="4" height="15" fill="rgb(244,122,46)"/><text x="157.00" y="366.50"></text></g><g><title>0x7f0e83d11530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.30%)</title><rect x="154" y="372" width="4" height="15" fill="rgb(244,26,30)"/><text x="157.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.30%)</title><rect x="154" y="388" width="4" height="15" fill="rgb(236,167,12)"/><text x="157.00" y="398.50"></text></g><g><title>array_take (methods.c:138) (3 samples, 0.44%)</title><rect x="158" y="340" width="5" height="15" fill="rgb(253,12,14)"/><text x="161.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.15%)</title><rect x="161" y="356" width="2" height="15" fill="rgb(214,204,54)"/><text x="164.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3890) (1 samples, 0.15%)</title><rect x="163" y="372" width="2" height="15" fill="rgb(242,124,26)"/><text x="166.00" y="382.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.15%)</title><rect x="165" y="372" width="2" height="15" fill="rgb(231,59,28)"/><text x="168.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="165" y="388" width="2" height="15" fill="rgb(235,5,14)"/><text x="168.00" y="398.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3948) (1 samples, 0.15%)</title><rect x="167" y="372" width="1" height="15" fill="rgb(220,13,31)"/><text x="170.00" y="382.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.15%)</title><rect x="168" y="372" width="2" height="15" fill="rgb(252,35,10)"/><text x="171.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (5 samples, 0.74%)</title><rect x="163" y="356" width="9" height="15" fill="rgb(223,200,49)"/><text x="166.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (1 samples, 0.15%)</title><rect x="170" y="372" width="2" height="15" fill="rgb(249,80,3)"/><text x="173.00" y="382.50"></text></g><g><title>0x7f0e83d2e05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.33%)</title><rect x="158" y="324" width="16" height="15" fill="rgb(223,129,12)"/><text x="161.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (6 samples, 0.89%)</title><rect x="163" y="340" width="11" height="15" fill="rgb(224,19,1)"/><text x="166.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.15%)</title><rect x="172" y="356" width="2" height="15" fill="rgb(231,161,29)"/><text x="175.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.15%)</title><rect x="172" y="372" width="2" height="15" fill="rgb(233,75,14)"/><text x="175.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.15%)</title><rect x="172" y="388" width="2" height="15" fill="rgb(250,97,3)"/><text x="175.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.15%)</title><rect x="172" y="404" width="2" height="15" fill="rgb(241,217,33)"/><text x="175.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.15%)</title><rect x="172" y="420" width="2" height="15" fill="rgb(238,81,4)"/><text x="175.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.15%)</title><rect x="172" y="436" width="2" height="15" fill="rgb(218,171,37)"/><text x="175.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="172" y="452" width="2" height="15" fill="rgb(251,192,4)"/><text x="175.00" y="462.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.15%)</title><rect x="175" y="372" width="2" height="15" fill="rgb(240,204,15)"/><text x="178.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (32 samples, 4.73%)</title><rect x="125" y="292" width="56" height="15" fill="rgb(220,121,21)"/><text x="128.00" y="302.50">predi..</text></g><g><title>0x7f0e83d2ed2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (32 samples, 4.73%)</title><rect x="125" y="308" width="56" height="15" fill="rgb(250,36,21)"/><text x="128.00" y="318.50">0x7f0..</text></g><g><title>0x7f0e83d2e14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.59%)</title><rect x="174" y="324" width="7" height="15" fill="rgb(232,219,8)"/><text x="177.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 0.44%)</title><rect x="175" y="340" width="6" height="15" fill="rgb(228,181,15)"/><text x="178.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 0.44%)</title><rect x="175" y="356" width="6" height="15" fill="rgb(247,142,7)"/><text x="178.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (2 samples, 0.30%)</title><rect x="177" y="372" width="4" height="15" fill="rgb(249,90,31)"/><text x="180.00" y="382.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.15%)</title><rect x="186" y="324" width="2" height="15" fill="rgb(224,224,10)"/><text x="189.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.30%)</title><rect x="186" y="308" width="3" height="15" fill="rgb(231,97,32)"/><text x="189.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.15%)</title><rect x="188" y="324" width="1" height="15" fill="rgb(233,92,36)"/><text x="191.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.15%)</title><rect x="188" y="340" width="1" height="15" fill="rgb(224,17,4)"/><text x="191.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.15%)</title><rect x="188" y="356" width="1" height="15" fill="rgb(227,198,13)"/><text x="191.00" y="366.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.15%)</title><rect x="188" y="372" width="1" height="15" fill="rgb(244,121,5)"/><text x="191.00" y="382.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.15%)</title><rect x="189" y="420" width="2" height="15" fill="rgb(211,5,22)"/><text x="192.00" y="430.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:32) (1 samples, 0.15%)</title><rect x="189" y="436" width="2" height="15" fill="rgb(251,65,24)"/><text x="192.00" y="446.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.44%)</title><rect x="189" y="356" width="6" height="15" fill="rgb(211,37,19)"/><text x="192.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.44%)</title><rect x="189" y="372" width="6" height="15" fill="rgb(216,170,11)"/><text x="192.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.44%)</title><rect x="189" y="388" width="6" height="15" fill="rgb(209,76,40)"/><text x="192.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.44%)</title><rect x="189" y="404" width="6" height="15" fill="rgb(223,91,50)"/><text x="192.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.30%)</title><rect x="191" y="420" width="4" height="15" fill="rgb(248,14,38)"/><text x="194.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.30%)</title><rect x="191" y="436" width="4" height="15" fill="rgb(254,204,49)"/><text x="194.00" y="446.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.15%)</title><rect x="195" y="372" width="1" height="15" fill="rgb(210,105,48)"/><text x="198.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.15%)</title><rect x="196" y="404" width="2" height="15" fill="rgb(211,151,29)"/><text x="199.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.15%)</title><rect x="196" y="420" width="2" height="15" fill="rgb(226,133,28)"/><text x="199.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.15%)</title><rect x="196" y="436" width="2" height="15" fill="rgb(207,197,14)"/><text x="199.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.15%)</title><rect x="196" y="452" width="2" height="15" fill="rgb(218,134,2)"/><text x="199.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.15%)</title><rect x="196" y="468" width="2" height="15" fill="rgb(235,174,23)"/><text x="199.00" y="478.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.15%)</title><rect x="196" y="484" width="2" height="15" fill="rgb(248,10,33)"/><text x="199.00" y="494.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:390) (1 samples, 0.15%)</title><rect x="198" y="420" width="2" height="15" fill="rgb(236,20,50)"/><text x="201.00" y="430.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.15%)</title><rect x="200" y="420" width="2" height="15" fill="rgb(224,160,14)"/><text x="203.00" y="430.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:51) (1 samples, 0.15%)</title><rect x="202" y="452" width="1" height="15" fill="rgb(239,196,7)"/><text x="205.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (4 samples, 0.59%)</title><rect x="198" y="404" width="7" height="15" fill="rgb(227,37,49)"/><text x="201.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.30%)</title><rect x="202" y="420" width="3" height="15" fill="rgb(220,94,0)"/><text x="205.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.30%)</title><rect x="202" y="436" width="3" height="15" fill="rgb(228,198,34)"/><text x="205.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.15%)</title><rect x="203" y="452" width="2" height="15" fill="rgb(219,226,53)"/><text x="206.00" y="462.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.15%)</title><rect x="203" y="468" width="2" height="15" fill="rgb(228,149,1)"/><text x="206.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.15%)</title><rect x="205" y="420" width="2" height="15" fill="rgb(218,22,16)"/><text x="208.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1240) (1 samples, 0.15%)</title><rect x="205" y="436" width="2" height="15" fill="rgb(234,122,16)"/><text x="208.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:452) (1 samples, 0.15%)</title><rect x="207" y="420" width="1" height="15" fill="rgb(250,196,30)"/><text x="210.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.44%)</title><rect x="205" y="404" width="5" height="15" fill="rgb(234,208,46)"/><text x="208.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.15%)</title><rect x="208" y="420" width="2" height="15" fill="rgb(254,150,30)"/><text x="211.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.15%)</title><rect x="208" y="436" width="2" height="15" fill="rgb(217,109,34)"/><text x="211.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="208" y="452" width="2" height="15" fill="rgb(231,12,27)"/><text x="211.00" y="462.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.30%)</title><rect x="212" y="436" width="3" height="15" fill="rgb(210,62,33)"/><text x="215.00" y="446.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.15%)</title><rect x="215" y="436" width="2" height="15" fill="rgb(246,204,51)"/><text x="218.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (3 samples, 0.44%)</title><rect x="219" y="452" width="5" height="15" fill="rgb(205,31,5)"/><text x="222.00" y="462.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (5 samples, 0.74%)</title><rect x="217" y="436" width="9" height="15" fill="rgb(252,219,28)"/><text x="220.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.15%)</title><rect x="224" y="452" width="2" height="15" fill="rgb(213,107,10)"/><text x="227.00" y="462.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.15%)</title><rect x="226" y="436" width="2" height="15" fill="rgb(244,144,19)"/><text x="229.00" y="446.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.15%)</title><rect x="228" y="436" width="1" height="15" fill="rgb(217,24,22)"/><text x="231.00" y="446.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (2 samples, 0.30%)</title><rect x="229" y="436" width="4" height="15" fill="rgb(244,110,32)"/><text x="232.00" y="446.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.15%)</title><rect x="233" y="436" width="2" height="15" fill="rgb(230,199,6)"/><text x="236.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (15 samples, 2.22%)</title><rect x="210" y="404" width="26" height="15" fill="rgb(248,18,20)"/><text x="213.00" y="414.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (15 samples, 2.22%)</title><rect x="210" y="420" width="26" height="15" fill="rgb(247,168,9)"/><text x="213.00" y="430.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.15%)</title><rect x="235" y="436" width="1" height="15" fill="rgb(250,101,24)"/><text x="238.00" y="446.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1874) (1 samples, 0.15%)</title><rect x="235" y="452" width="1" height="15" fill="rgb(235,83,46)"/><text x="238.00" y="462.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (33 samples, 4.88%)</title><rect x="181" y="292" width="57" height="15" fill="rgb(226,60,42)"/><text x="184.00" y="302.50">predic..</text></g><g><title>array_sum (methods.c:2215) (28 samples, 4.14%)</title><rect x="189" y="308" width="49" height="15" fill="rgb(238,130,43)"/><text x="192.00" y="318.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (28 samples, 4.14%)</title><rect x="189" y="324" width="49" height="15" fill="rgb(210,152,3)"/><text x="192.00" y="334.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (28 samples, 4.14%)</title><rect x="189" y="340" width="49" height="15" fill="rgb(235,47,25)"/><text x="192.00" y="350.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (25 samples, 3.70%)</title><rect x="195" y="356" width="43" height="15" fill="rgb(212,9,29)"/><text x="198.00" y="366.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (24 samples, 3.55%)</title><rect x="196" y="372" width="42" height="15" fill="rgb(243,225,44)"/><text x="199.00" y="382.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (24 samples, 3.55%)</title><rect x="196" y="388" width="42" height="15" fill="rgb(221,53,53)"/><text x="199.00" y="398.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.15%)</title><rect x="236" y="404" width="2" height="15" fill="rgb(218,205,24)"/><text x="239.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.15%)</title><rect x="236" y="420" width="2" height="15" fill="rgb(240,29,50)"/><text x="239.00" y="430.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="236" y="436" width="2" height="15" fill="rgb(251,140,37)"/><text x="239.00" y="446.50"></text></g><g><title>array_assign_subscript (mapping.c:2065) (1 samples, 0.15%)</title><rect x="240" y="308" width="2" height="15" fill="rgb(245,45,30)"/><text x="243.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.15%)</title><rect x="240" y="324" width="2" height="15" fill="rgb(241,149,11)"/><text x="243.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.15%)</title><rect x="240" y="340" width="2" height="15" fill="rgb(254,91,5)"/><text x="243.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.15%)</title><rect x="240" y="356" width="2" height="15" fill="rgb(231,182,48)"/><text x="243.00" y="366.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.15%)</title><rect x="242" y="308" width="1" height="15" fill="rgb(223,14,50)"/><text x="245.00" y="318.50"></text></g><g><title>binop_should_defer (binop_override.h:145) (1 samples, 0.15%)</title><rect x="242" y="324" width="1" height="15" fill="rgb(232,179,26)"/><text x="245.00" y="334.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c:112) (1 samples, 0.15%)</title><rect x="242" y="340" width="1" height="15" fill="rgb(211,88,28)"/><text x="245.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.15%)</title><rect x="245" y="356" width="2" height="15" fill="rgb(244,159,23)"/><text x="248.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.15%)</title><rect x="245" y="372" width="2" height="15" fill="rgb(238,202,33)"/><text x="248.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.15%)</title><rect x="245" y="388" width="2" height="15" fill="rgb(250,103,9)"/><text x="248.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.15%)</title><rect x="245" y="404" width="2" height="15" fill="rgb(208,89,3)"/><text x="248.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.15%)</title><rect x="245" y="420" width="2" height="15" fill="rgb(244,164,14)"/><text x="248.00" y="430.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.15%)</title><rect x="247" y="372" width="2" height="15" fill="rgb(252,40,4)"/><text x="250.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="247" y="388" width="2" height="15" fill="rgb(207,4,23)"/><text x="250.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.30%)</title><rect x="247" y="356" width="3" height="15" fill="rgb(235,101,51)"/><text x="250.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.15%)</title><rect x="249" y="372" width="1" height="15" fill="rgb(209,52,39)"/><text x="252.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (8 samples, 1.18%)</title><rect x="238" y="292" width="14" height="15" fill="rgb(229,219,11)"/><text x="241.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (5 samples, 0.74%)</title><rect x="243" y="308" width="9" height="15" fill="rgb(205,96,51)"/><text x="246.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.59%)</title><rect x="245" y="324" width="7" height="15" fill="rgb(238,207,44)"/><text x="248.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.59%)</title><rect x="245" y="340" width="7" height="15" fill="rgb(233,136,9)"/><text x="248.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.15%)</title><rect x="250" y="356" width="2" height="15" fill="rgb(239,179,4)"/><text x="253.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.15%)</title><rect x="250" y="372" width="2" height="15" fill="rgb(210,221,20)"/><text x="253.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.15%)</title><rect x="252" y="324" width="2" height="15" fill="rgb(253,16,54)"/><text x="255.00" y="334.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.15%)</title><rect x="252" y="340" width="2" height="15" fill="rgb(234,149,9)"/><text x="255.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.15%)</title><rect x="254" y="372" width="2" height="15" fill="rgb(218,59,41)"/><text x="257.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.30%)</title><rect x="254" y="356" width="3" height="15" fill="rgb(207,127,40)"/><text x="257.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.15%)</title><rect x="256" y="372" width="1" height="15" fill="rgb(254,111,51)"/><text x="259.00" y="382.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2305) (1 samples, 0.15%)</title><rect x="256" y="388" width="1" height="15" fill="rgb(244,209,3)"/><text x="259.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (2 samples, 0.30%)</title><rect x="257" y="404" width="4" height="15" fill="rgb(243,9,28)"/><text x="260.00" y="414.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.44%)</title><rect x="257" y="356" width="6" height="15" fill="rgb(208,158,23)"/><text x="260.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.44%)</title><rect x="257" y="372" width="6" height="15" fill="rgb(231,197,44)"/><text x="260.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.44%)</title><rect x="257" y="388" width="6" height="15" fill="rgb(219,14,24)"/><text x="260.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.15%)</title><rect x="261" y="404" width="2" height="15" fill="rgb(233,161,50)"/><text x="264.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.15%)</title><rect x="261" y="420" width="2" height="15" fill="rgb(248,40,3)"/><text x="264.00" y="430.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (5 samples, 0.74%)</title><rect x="263" y="372" width="8" height="15" fill="rgb(236,38,32)"/><text x="266.00" y="382.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (5 samples, 0.74%)</title><rect x="263" y="388" width="8" height="15" fill="rgb(242,142,36)"/><text x="266.00" y="398.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (5 samples, 0.74%)</title><rect x="263" y="404" width="8" height="15" fill="rgb(216,80,31)"/><text x="266.00" y="414.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (5 samples, 0.74%)</title><rect x="263" y="420" width="8" height="15" fill="rgb(224,215,54)"/><text x="266.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (6 samples, 0.89%)</title><rect x="263" y="356" width="10" height="15" fill="rgb(224,8,2)"/><text x="266.00" y="366.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:275) (1 samples, 0.15%)</title><rect x="271" y="372" width="2" height="15" fill="rgb(235,30,14)"/><text x="274.00" y="382.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (97 samples, 14.35%)</title><rect x="106" y="276" width="169" height="15" fill="rgb(218,198,34)"/><text x="109.00" y="286.50">_accumulate_predictio..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (13 samples, 1.92%)</title><rect x="252" y="292" width="23" height="15" fill="rgb(253,103,46)"/><text x="255.00" y="302.50">p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 1.92%)</title><rect x="252" y="308" width="23" height="15" fill="rgb(250,105,10)"/><text x="255.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 1.78%)</title><rect x="254" y="324" width="21" height="15" fill="rgb(254,117,33)"/><text x="257.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (12 samples, 1.78%)</title><rect x="254" y="340" width="21" height="15" fill="rgb(246,111,42)"/><text x="257.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.15%)</title><rect x="273" y="356" width="2" height="15" fill="rgb(215,48,37)"/><text x="276.00" y="366.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="273" y="372" width="2" height="15" fill="rgb(245,104,38)"/><text x="276.00" y="382.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (1 samples, 0.15%)</title><rect x="275" y="276" width="2" height="15" fill="rgb(207,69,49)"/><text x="278.00" y="286.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (1 samples, 0.15%)</title><rect x="277" y="276" width="1" height="15" fill="rgb(248,169,15)"/><text x="280.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.15%)</title><rect x="282" y="292" width="2" height="15" fill="rgb(244,175,47)"/><text x="285.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.15%)</title><rect x="282" y="308" width="2" height="15" fill="rgb(214,154,31)"/><text x="285.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.15%)</title><rect x="282" y="324" width="2" height="15" fill="rgb(251,188,53)"/><text x="285.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.15%)</title><rect x="282" y="340" width="2" height="15" fill="rgb(206,153,4)"/><text x="285.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.15%)</title><rect x="284" y="324" width="1" height="15" fill="rgb(218,196,30)"/><text x="287.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.15%)</title><rect x="284" y="340" width="1" height="15" fill="rgb(224,143,42)"/><text x="287.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.15%)</title><rect x="284" y="356" width="1" height="15" fill="rgb(215,85,16)"/><text x="287.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.15%)</title><rect x="284" y="372" width="1" height="15" fill="rgb(240,106,17)"/><text x="287.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.15%)</title><rect x="284" y="388" width="1" height="15" fill="rgb(216,3,48)"/><text x="287.00" y="398.50"></text></g><g><title>0x7f0eaa2a27c2 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="284" y="404" width="1" height="15" fill="rgb(235,199,15)"/><text x="287.00" y="414.50"></text></g><g><title>0x7f0eaa2a276c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="284" y="420" width="1" height="15" fill="rgb(220,71,49)"/><text x="287.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.30%)</title><rect x="285" y="324" width="4" height="15" fill="rgb(244,52,48)"/><text x="288.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.30%)</title><rect x="285" y="340" width="4" height="15" fill="rgb(212,221,24)"/><text x="288.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.30%)</title><rect x="285" y="356" width="4" height="15" fill="rgb(223,24,42)"/><text x="288.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.30%)</title><rect x="285" y="372" width="4" height="15" fill="rgb(251,79,38)"/><text x="288.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (2 samples, 0.30%)</title><rect x="285" y="388" width="4" height="15" fill="rgb(252,142,22)"/><text x="288.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.30%)</title><rect x="285" y="404" width="4" height="15" fill="rgb(243,187,34)"/><text x="288.00" y="414.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (7 samples, 1.04%)</title><rect x="278" y="276" width="13" height="15" fill="rgb(253,59,13)"/><text x="281.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.59%)</title><rect x="284" y="292" width="7" height="15" fill="rgb(224,68,51)"/><text x="287.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.59%)</title><rect x="284" y="308" width="7" height="15" fill="rgb(210,81,26)"/><text x="287.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.15%)</title><rect x="289" y="324" width="2" height="15" fill="rgb(215,105,28)"/><text x="292.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.15%)</title><rect x="289" y="340" width="2" height="15" fill="rgb(226,24,22)"/><text x="292.00" y="350.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.15%)</title><rect x="289" y="356" width="2" height="15" fill="rgb(240,222,52)"/><text x="292.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.15%)</title><rect x="291" y="276" width="1" height="15" fill="rgb(222,173,17)"/><text x="294.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (108 samples, 15.98%)</title><rect x="106" y="260" width="188" height="15" fill="rgb(248,107,45)"/><text x="109.00" y="270.50">&lt;listcomp&gt; (joblib/paral..</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.15%)</title><rect x="292" y="276" width="2" height="15" fill="rgb(230,3,49)"/><text x="295.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.15%)</title><rect x="292" y="292" width="2" height="15" fill="rgb(211,4,4)"/><text x="295.00" y="302.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.15%)</title><rect x="292" y="308" width="2" height="15" fill="rgb(233,16,12)"/><text x="295.00" y="318.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.15%)</title><rect x="292" y="324" width="2" height="15" fill="rgb(210,213,40)"/><text x="295.00" y="334.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.15%)</title><rect x="292" y="340" width="2" height="15" fill="rgb(233,45,21)"/><text x="295.00" y="350.50"></text></g><g><title>0x7f0ea950c380 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="292" y="356" width="2" height="15" fill="rgb(231,71,47)"/><text x="295.00" y="366.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (114 samples, 16.86%)</title><rect x="99" y="212" width="199" height="15" fill="rgb(238,117,13)"/><text x="102.00" y="222.50">apply_async (joblib/_paral..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (114 samples, 16.86%)</title><rect x="99" y="228" width="199" height="15" fill="rgb(245,171,17)"/><text x="102.00" y="238.50">__init__ (joblib/_parallel..</text></g><g><title>__call__ (joblib/parallel.py:256) (110 samples, 16.27%)</title><rect x="106" y="244" width="192" height="15" fill="rgb(211,172,14)"/><text x="109.00" y="254.50">__call__ (joblib/parallel..</text></g><g><title>__exit__ (joblib/parallel.py:215) (2 samples, 0.30%)</title><rect x="294" y="260" width="4" height="15" fill="rgb(237,182,36)"/><text x="297.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (2 samples, 0.30%)</title><rect x="294" y="276" width="4" height="15" fill="rgb(227,107,45)"/><text x="297.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (2 samples, 0.30%)</title><rect x="298" y="228" width="3" height="15" fill="rgb(210,123,10)"/><text x="301.00" y="238.50"></text></g><g><title>time_time (python3.7) (1 samples, 0.15%)</title><rect x="299" y="244" width="2" height="15" fill="rgb(254,217,18)"/><text x="302.00" y="254.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.15%)</title><rect x="299" y="260" width="2" height="15" fill="rgb(253,160,15)"/><text x="302.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (1 samples, 0.15%)</title><rect x="301" y="228" width="2" height="15" fill="rgb(234,227,54)"/><text x="304.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (1 samples, 0.15%)</title><rect x="303" y="228" width="2" height="15" fill="rgb(234,188,7)"/><text x="306.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (165 samples, 24.41%)</title><rect x="18" y="164" width="288" height="15" fill="rgb(247,46,48)"/><text x="21.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (124 samples, 18.34%)</title><rect x="90" y="180" width="216" height="15" fill="rgb(224,63,28)"/><text x="93.00" y="190.50">dispatch_one_batch (joblib/p..</text></g><g><title>_dispatch (joblib/parallel.py:753) (119 samples, 17.60%)</title><rect x="99" y="196" width="207" height="15" fill="rgb(234,170,10)"/><text x="102.00" y="206.50">_dispatch (joblib/parallel...</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (5 samples, 0.74%)</title><rect x="298" y="212" width="8" height="15" fill="rgb(230,111,14)"/><text x="301.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:339) (1 samples, 0.15%)</title><rect x="305" y="228" width="1" height="15" fill="rgb(208,25,53)"/><text x="308.00" y="238.50"></text></g><g><title>retrieve (joblib/parallel.py:903) (1 samples, 0.15%)</title><rect x="306" y="180" width="2" height="15" fill="rgb(228,185,29)"/><text x="309.00" y="190.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.15%)</title><rect x="306" y="196" width="2" height="15" fill="rgb(241,105,43)"/><text x="309.00" y="206.50"></text></g><g><title>pthread_self@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="306" y="212" width="2" height="15" fill="rgb(244,106,0)"/><text x="309.00" y="222.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:18) (167 samples, 24.70%)</title><rect x="18" y="100" width="292" height="15" fill="rgb(231,40,19)"/><text x="21.00" y="110.50">profile (bench_RandomForestClassifier_d..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (167 samples, 24.70%)</title><rect x="18" y="116" width="292" height="15" fill="rgb(253,156,37)"/><text x="21.00" y="126.50">time_predict (mlprodict/asv_benchmark/c..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (167 samples, 24.70%)</title><rect x="18" y="132" width="292" height="15" fill="rgb(206,93,33)"/><text x="21.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/commo..</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (167 samples, 24.70%)</title><rect x="18" y="148" width="292" height="15" fill="rgb(252,81,51)"/><text x="21.00" y="158.50">predict_proba (sklearn/ensemble/_forest..</text></g><g><title>__call__ (joblib/parallel.py:1016) (2 samples, 0.30%)</title><rect x="306" y="164" width="4" height="15" fill="rgb(239,139,47)"/><text x="309.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (1 samples, 0.15%)</title><rect x="308" y="180" width="2" height="15" fill="rgb(230,170,47)"/><text x="311.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:656) (1 samples, 0.15%)</title><rect x="310" y="148" width="1" height="15" fill="rgb(246,36,5)"/><text x="313.00" y="158.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:412) (1 samples, 0.15%)</title><rect x="310" y="164" width="1" height="15" fill="rgb(214,47,29)"/><text x="313.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (1 samples, 0.15%)</title><rect x="310" y="180" width="1" height="15" fill="rgb(240,106,14)"/><text x="313.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.15%)</title><rect x="310" y="196" width="1" height="15" fill="rgb(221,28,30)"/><text x="313.00" y="206.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:659) (1 samples, 0.15%)</title><rect x="311" y="148" width="2" height="15" fill="rgb(243,6,17)"/><text x="314.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:183) (1 samples, 0.15%)</title><rect x="311" y="164" width="2" height="15" fill="rgb(205,50,13)"/><text x="314.00" y="174.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.15%)</title><rect x="311" y="180" width="2" height="15" fill="rgb(227,210,11)"/><text x="314.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:663) (1 samples, 0.15%)</title><rect x="313" y="148" width="2" height="15" fill="rgb(230,11,4)"/><text x="316.00" y="158.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:663) (1 samples, 0.15%)</title><rect x="313" y="164" width="2" height="15" fill="rgb(232,216,4)"/><text x="316.00" y="174.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.15%)</title><rect x="313" y="180" width="2" height="15" fill="rgb(208,60,35)"/><text x="316.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.15%)</title><rect x="313" y="196" width="2" height="15" fill="rgb(212,105,52)"/><text x="316.00" y="206.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.15%)</title><rect x="313" y="212" width="2" height="15" fill="rgb(233,206,53)"/><text x="316.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.15%)</title><rect x="313" y="228" width="2" height="15" fill="rgb(208,131,22)"/><text x="316.00" y="238.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.15%)</title><rect x="313" y="244" width="2" height="15" fill="rgb(214,183,17)"/><text x="316.00" y="254.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.15%)</title><rect x="313" y="260" width="2" height="15" fill="rgb(232,228,49)"/><text x="316.00" y="270.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="313" y="276" width="2" height="15" fill="rgb(211,186,21)"/><text x="316.00" y="286.50"></text></g><g><title>0x7f0eaa30b103 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="313" y="292" width="2" height="15" fill="rgb(219,156,42)"/><text x="316.00" y="302.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:665) (1 samples, 0.15%)</title><rect x="315" y="148" width="2" height="15" fill="rgb(213,96,20)"/><text x="318.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:634) (1 samples, 0.15%)</title><rect x="317" y="164" width="1" height="15" fill="rgb(218,52,53)"/><text x="320.00" y="174.50"></text></g><g><title>__init__ (queue.py:45) (1 samples, 0.15%)</title><rect x="317" y="180" width="1" height="15" fill="rgb(235,23,38)"/><text x="320.00" y="190.50"></text></g><g><title>__init__ (threading.py:231) (1 samples, 0.15%)</title><rect x="317" y="196" width="1" height="15" fill="rgb(236,61,32)"/><text x="320.00" y="206.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:666) (2 samples, 0.30%)</title><rect x="317" y="148" width="3" height="15" fill="rgb(238,221,53)"/><text x="320.00" y="158.50"></text></g><g><title>_joblib_parallel_args (sklearn/utils/fixes.py:223) (1 samples, 0.15%)</title><rect x="318" y="164" width="2" height="15" fill="rgb(249,191,43)"/><text x="321.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (1 samples, 0.15%)</title><rect x="320" y="180" width="2" height="15" fill="rgb(248,19,6)"/><text x="323.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (1 samples, 0.15%)</title><rect x="320" y="196" width="2" height="15" fill="rgb(245,196,47)"/><text x="323.00" y="206.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (2 samples, 0.30%)</title><rect x="322" y="276" width="3" height="15" fill="rgb(235,134,48)"/><text x="325.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (2 samples, 0.30%)</title><rect x="322" y="292" width="3" height="15" fill="rgb(208,202,44)"/><text x="325.00" y="302.50"></text></g><g><title>array_sum (methods.c:2215) (2 samples, 0.30%)</title><rect x="322" y="308" width="3" height="15" fill="rgb(237,14,20)"/><text x="325.00" y="318.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (2 samples, 0.30%)</title><rect x="322" y="324" width="3" height="15" fill="rgb(233,228,32)"/><text x="325.00" y="334.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (2 samples, 0.30%)</title><rect x="322" y="340" width="3" height="15" fill="rgb(236,213,48)"/><text x="325.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.15%)</title><rect x="324" y="356" width="1" height="15" fill="rgb(242,157,10)"/><text x="327.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.15%)</title><rect x="324" y="372" width="1" height="15" fill="rgb(226,69,9)"/><text x="327.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.15%)</title><rect x="324" y="388" width="1" height="15" fill="rgb(229,110,44)"/><text x="327.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.15%)</title><rect x="324" y="404" width="1" height="15" fill="rgb(211,151,43)"/><text x="327.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.15%)</title><rect x="324" y="420" width="1" height="15" fill="rgb(213,141,42)"/><text x="327.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.15%)</title><rect x="324" y="436" width="1" height="15" fill="rgb(241,58,34)"/><text x="327.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.15%)</title><rect x="324" y="452" width="1" height="15" fill="rgb(231,111,23)"/><text x="327.00" y="462.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (4 samples, 0.59%)</title><rect x="320" y="164" width="7" height="15" fill="rgb(253,229,24)"/><text x="323.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (3 samples, 0.44%)</title><rect x="322" y="180" width="5" height="15" fill="rgb(205,222,12)"/><text x="325.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (3 samples, 0.44%)</title><rect x="322" y="196" width="5" height="15" fill="rgb(219,203,51)"/><text x="325.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (3 samples, 0.44%)</title><rect x="322" y="212" width="5" height="15" fill="rgb(252,204,28)"/><text x="325.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (3 samples, 0.44%)</title><rect x="322" y="228" width="5" height="15" fill="rgb(213,214,47)"/><text x="325.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (3 samples, 0.44%)</title><rect x="322" y="244" width="5" height="15" fill="rgb(220,179,14)"/><text x="325.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (3 samples, 0.44%)</title><rect x="322" y="260" width="5" height="15" fill="rgb(232,142,48)"/><text x="325.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (1 samples, 0.15%)</title><rect x="325" y="276" width="2" height="15" fill="rgb(249,59,42)"/><text x="328.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.15%)</title><rect x="325" y="292" width="2" height="15" fill="rgb(249,103,1)"/><text x="328.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.15%)</title><rect x="325" y="308" width="2" height="15" fill="rgb(227,121,53)"/><text x="328.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.15%)</title><rect x="325" y="324" width="2" height="15" fill="rgb(219,185,2)"/><text x="328.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.15%)</title><rect x="325" y="340" width="2" height="15" fill="rgb(242,97,47)"/><text x="328.00" y="350.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:782) (1 samples, 0.15%)</title><rect x="331" y="180" width="1" height="15" fill="rgb(248,200,14)"/><text x="334.00" y="190.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.15%)</title><rect x="336" y="196" width="2" height="15" fill="rgb(249,111,33)"/><text x="339.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (5 samples, 0.74%)</title><rect x="332" y="180" width="9" height="15" fill="rgb(205,70,19)"/><text x="335.00" y="190.50"></text></g><g><title>get (queue.py:166) (2 samples, 0.30%)</title><rect x="338" y="196" width="3" height="15" fill="rgb(252,129,37)"/><text x="341.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (2 samples, 0.30%)</title><rect x="338" y="212" width="3" height="15" fill="rgb(216,93,17)"/><text x="341.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:797) (2 samples, 0.30%)</title><rect x="341" y="180" width="4" height="15" fill="rgb(209,164,20)"/><text x="344.00" y="190.50"></text></g><g><title>update_wrapper (functools.py:54) (2 samples, 0.30%)</title><rect x="353" y="228" width="4" height="15" fill="rgb(206,86,40)"/><text x="356.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (2 samples, 0.30%)</title><rect x="357" y="228" width="3" height="15" fill="rgb(218,95,10)"/><text x="360.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (10 samples, 1.48%)</title><rect x="345" y="180" width="17" height="15" fill="rgb(210,108,34)"/><text x="348.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (8 samples, 1.18%)</title><rect x="348" y="196" width="14" height="15" fill="rgb(235,214,28)"/><text x="351.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (7 samples, 1.04%)</title><rect x="350" y="212" width="12" height="15" fill="rgb(236,202,22)"/><text x="353.00" y="222.50"></text></g><g><title>wraps (functools.py:79) (1 samples, 0.15%)</title><rect x="360" y="228" width="2" height="15" fill="rgb(231,151,51)"/><text x="363.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (2 samples, 0.30%)</title><rect x="362" y="180" width="4" height="15" fill="rgb(229,77,36)"/><text x="365.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (1 samples, 0.15%)</title><rect x="366" y="180" width="1" height="15" fill="rgb(238,50,7)"/><text x="369.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (5 samples, 0.74%)</title><rect x="371" y="196" width="9" height="15" fill="rgb(230,177,32)"/><text x="374.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.30%)</title><rect x="376" y="212" width="4" height="15" fill="rgb(216,198,42)"/><text x="379.00" y="222.50"></text></g><g><title>0x7f0eaa300e7a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="378" y="228" width="2" height="15" fill="rgb(233,112,7)"/><text x="381.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.15%)</title><rect x="380" y="228" width="1" height="15" fill="rgb(222,155,24)"/><text x="383.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (2 samples, 0.30%)</title><rect x="380" y="212" width="3" height="15" fill="rgb(214,154,21)"/><text x="383.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.15%)</title><rect x="381" y="228" width="2" height="15" fill="rgb(247,213,6)"/><text x="384.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:118) (1 samples, 0.15%)</title><rect x="383" y="212" width="2" height="15" fill="rgb(245,33,24)"/><text x="386.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:86) (1 samples, 0.15%)</title><rect x="385" y="212" width="2" height="15" fill="rgb(244,192,42)"/><text x="388.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (12 samples, 1.78%)</title><rect x="367" y="180" width="21" height="15" fill="rgb(243,20,15)"/><text x="370.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (5 samples, 0.74%)</title><rect x="380" y="196" width="8" height="15" fill="rgb(212,86,7)"/><text x="383.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.15%)</title><rect x="387" y="212" width="1" height="15" fill="rgb(240,167,27)"/><text x="390.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:242) (1 samples, 0.15%)</title><rect x="390" y="196" width="2" height="15" fill="rgb(216,197,26)"/><text x="393.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (3 samples, 0.44%)</title><rect x="388" y="180" width="6" height="15" fill="rgb(223,219,4)"/><text x="391.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:243) (1 samples, 0.15%)</title><rect x="392" y="196" width="2" height="15" fill="rgb(246,163,1)"/><text x="395.00" y="206.50"></text></g><g><title>put (queue.py:133) (1 samples, 0.15%)</title><rect x="395" y="196" width="2" height="15" fill="rgb(209,145,27)"/><text x="398.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (3 samples, 0.44%)</title><rect x="394" y="180" width="5" height="15" fill="rgb(251,116,53)"/><text x="397.00" y="190.50"></text></g><g><title>put (queue.py:151) (1 samples, 0.15%)</title><rect x="397" y="196" width="2" height="15" fill="rgb(218,21,53)"/><text x="400.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.15%)</title><rect x="397" y="212" width="2" height="15" fill="rgb(248,69,32)"/><text x="400.00" y="222.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.15%)</title><rect x="404" y="196" width="2" height="15" fill="rgb(238,88,5)"/><text x="407.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (7 samples, 1.04%)</title><rect x="399" y="180" width="12" height="15" fill="rgb(216,9,45)"/><text x="402.00" y="190.50"></text></g><g><title>get (queue.py:181) (3 samples, 0.44%)</title><rect x="406" y="196" width="5" height="15" fill="rgb(229,45,10)"/><text x="409.00" y="206.50"></text></g><g><title>notify (threading.py:345) (2 samples, 0.30%)</title><rect x="407" y="212" width="4" height="15" fill="rgb(240,9,13)"/><text x="410.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (2 samples, 0.30%)</title><rect x="407" y="228" width="4" height="15" fill="rgb(229,175,6)"/><text x="410.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.15%)</title><rect x="409" y="244" width="2" height="15" fill="rgb(237,46,29)"/><text x="412.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.15%)</title><rect x="409" y="260" width="2" height="15" fill="rgb(224,100,14)"/><text x="412.00" y="270.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="409" y="276" width="2" height="15" fill="rgb(217,158,42)"/><text x="412.00" y="286.50"></text></g><g><title>_dispatch (joblib/parallel.py:747) (1 samples, 0.15%)</title><rect x="411" y="196" width="2" height="15" fill="rgb(216,12,50)"/><text x="414.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (1 samples, 0.15%)</title><rect x="413" y="196" width="1" height="15" fill="rgb(237,174,49)"/><text x="416.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (2 samples, 0.30%)</title><rect x="414" y="196" width="4" height="15" fill="rgb(240,191,17)"/><text x="417.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (1 samples, 0.15%)</title><rect x="418" y="196" width="2" height="15" fill="rgb(251,130,24)"/><text x="421.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (4 samples, 0.59%)</title><rect x="423" y="244" width="7" height="15" fill="rgb(232,179,46)"/><text x="426.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.15%)</title><rect x="428" y="260" width="2" height="15" fill="rgb(251,5,14)"/><text x="431.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:255) (1 samples, 0.15%)</title><rect x="430" y="244" width="2" height="15" fill="rgb(242,207,2)"/><text x="433.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.15%)</title><rect x="439" y="292" width="2" height="15" fill="rgb(242,192,15)"/><text x="442.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.15%)</title><rect x="439" y="308" width="2" height="15" fill="rgb(242,24,16)"/><text x="442.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.15%)</title><rect x="439" y="324" width="2" height="15" fill="rgb(230,6,41)"/><text x="442.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.15%)</title><rect x="439" y="340" width="2" height="15" fill="rgb(237,8,36)"/><text x="442.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.30%)</title><rect x="442" y="308" width="4" height="15" fill="rgb(253,146,48)"/><text x="445.00" y="318.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.15%)</title><rect x="444" y="324" width="2" height="15" fill="rgb(248,176,18)"/><text x="447.00" y="334.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.15%)</title><rect x="446" y="308" width="2" height="15" fill="rgb(244,179,15)"/><text x="449.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.15%)</title><rect x="448" y="308" width="1" height="15" fill="rgb(208,110,14)"/><text x="451.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.15%)</title><rect x="451" y="324" width="2" height="15" fill="rgb(219,137,52)"/><text x="454.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.44%)</title><rect x="455" y="340" width="5" height="15" fill="rgb(206,154,31)"/><text x="458.00" y="350.50"></text></g><g><title>0x7f0eaa3c8168 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="458" y="356" width="2" height="15" fill="rgb(248,138,35)"/><text x="461.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (15 samples, 2.22%)</title><rect x="441" y="292" width="26" height="15" fill="rgb(232,226,30)"/><text x="444.00" y="302.50">p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 1.48%)</title><rect x="449" y="308" width="18" height="15" fill="rgb(213,28,47)"/><text x="452.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 1.18%)</title><rect x="453" y="324" width="14" height="15" fill="rgb(210,208,9)"/><text x="456.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (4 samples, 0.59%)</title><rect x="460" y="340" width="7" height="15" fill="rgb(216,201,54)"/><text x="463.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (1 samples, 0.15%)</title><rect x="467" y="292" width="2" height="15" fill="rgb(239,178,28)"/><text x="470.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.15%)</title><rect x="467" y="308" width="2" height="15" fill="rgb(222,51,32)"/><text x="470.00" y="318.50"></text></g><g><title>0x7f0e83d2df81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.30%)</title><rect x="470" y="324" width="4" height="15" fill="rgb(218,61,49)"/><text x="473.00" y="334.50"></text></g><g><title>0x7f0e83d3d27b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="474" y="340" width="2" height="15" fill="rgb(234,192,26)"/><text x="477.00" y="350.50"></text></g><g><title>0x7f0e83d3c1c8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="476" y="356" width="1" height="15" fill="rgb(250,54,23)"/><text x="479.00" y="366.50"></text></g><g><title>0x7f0e83d20d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="477" y="372" width="2" height="15" fill="rgb(229,158,36)"/><text x="480.00" y="382.50"></text></g><g><title>0x7f0e83d20666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="477" y="388" width="2" height="15" fill="rgb(220,197,25)"/><text x="480.00" y="398.50"></text></g><g><title>0x7f0e83d162fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="477" y="404" width="2" height="15" fill="rgb(219,111,54)"/><text x="480.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.15%)</title><rect x="477" y="420" width="2" height="15" fill="rgb(221,131,3)"/><text x="480.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.15%)</title><rect x="477" y="436" width="2" height="15" fill="rgb(251,134,9)"/><text x="480.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:576) (1 samples, 0.15%)</title><rect x="477" y="452" width="2" height="15" fill="rgb(242,162,8)"/><text x="480.00" y="462.50"></text></g><g><title>0x7f0e83d3c2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.30%)</title><rect x="477" y="356" width="4" height="15" fill="rgb(229,72,9)"/><text x="480.00" y="366.50"></text></g><g><title>0x7f0e83d20e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="479" y="372" width="2" height="15" fill="rgb(245,5,51)"/><text x="482.00" y="382.50"></text></g><g><title>0x7f0e83d142bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="479" y="388" width="2" height="15" fill="rgb(215,61,2)"/><text x="482.00" y="398.50"></text></g><g><title>0x7f0e83d1392e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="479" y="404" width="2" height="15" fill="rgb(239,147,54)"/><text x="482.00" y="414.50"></text></g><g><title>0x7f0eaa2ebdd6 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="483" y="484" width="1" height="15" fill="rgb(211,88,15)"/><text x="486.00" y="494.50"></text></g><g><title>0x7f0e83d3c592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.44%)</title><rect x="481" y="356" width="5" height="15" fill="rgb(249,0,54)"/><text x="484.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (3 samples, 0.44%)</title><rect x="481" y="372" width="5" height="15" fill="rgb(226,17,50)"/><text x="484.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (3 samples, 0.44%)</title><rect x="481" y="388" width="5" height="15" fill="rgb(230,154,26)"/><text x="484.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (3 samples, 0.44%)</title><rect x="481" y="404" width="5" height="15" fill="rgb(218,12,33)"/><text x="484.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (3 samples, 0.44%)</title><rect x="481" y="420" width="5" height="15" fill="rgb(209,122,1)"/><text x="484.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (3 samples, 0.44%)</title><rect x="481" y="436" width="5" height="15" fill="rgb(239,56,50)"/><text x="484.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (3 samples, 0.44%)</title><rect x="481" y="452" width="5" height="15" fill="rgb(241,123,8)"/><text x="484.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (3 samples, 0.44%)</title><rect x="481" y="468" width="5" height="15" fill="rgb(237,95,40)"/><text x="484.00" y="478.50"></text></g><g><title>0x7f0eaa30b0f9 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="484" y="484" width="2" height="15" fill="rgb(212,28,21)"/><text x="487.00" y="494.50"></text></g><g><title>0x7f0e83d3c698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="486" y="356" width="2" height="15" fill="rgb(224,1,38)"/><text x="489.00" y="366.50"></text></g><g><title>0x7f0e83d3c6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="488" y="356" width="2" height="15" fill="rgb(241,208,29)"/><text x="491.00" y="366.50"></text></g><g><title>0x7f0e83d3c6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.30%)</title><rect x="490" y="356" width="3" height="15" fill="rgb(232,131,49)"/><text x="493.00" y="366.50"></text></g><g><title>0x7f0e83d3c6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.59%)</title><rect x="493" y="356" width="7" height="15" fill="rgb(222,66,25)"/><text x="496.00" y="366.50"></text></g><g><title>0x7f0e83d3c6c6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="500" y="356" width="2" height="15" fill="rgb(242,152,16)"/><text x="503.00" y="366.50"></text></g><g><title>0x7f0e83d3c6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="502" y="356" width="1" height="15" fill="rgb(220,220,42)"/><text x="505.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="502" y="372" width="1" height="15" fill="rgb(205,24,26)"/><text x="505.00" y="382.50"></text></g><g><title>0x7f0e83d3c7a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.30%)</title><rect x="503" y="356" width="4" height="15" fill="rgb(244,109,5)"/><text x="506.00" y="366.50"></text></g><g><title>0x7f0e83d3d405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (19 samples, 2.81%)</title><rect x="476" y="340" width="33" height="15" fill="rgb(211,153,53)"/><text x="479.00" y="350.50">0x..</text></g><g><title>0x7f0e83d3cc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="507" y="356" width="2" height="15" fill="rgb(223,104,35)"/><text x="510.00" y="366.50"></text></g><g><title>0x7f0e83d14529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="507" y="372" width="2" height="15" fill="rgb(211,86,6)"/><text x="510.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:801) (1 samples, 0.15%)</title><rect x="507" y="388" width="2" height="15" fill="rgb(206,207,36)"/><text x="510.00" y="398.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.15%)</title><rect x="507" y="404" width="2" height="15" fill="rgb(249,214,31)"/><text x="510.00" y="414.50"></text></g><g><title>0x7f0e83d2dfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (21 samples, 3.11%)</title><rect x="474" y="324" width="36" height="15" fill="rgb(238,44,32)"/><text x="477.00" y="334.50">0x7..</text></g><g><title>0x7f0e83d3d540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="509" y="340" width="1" height="15" fill="rgb(248,193,16)"/><text x="512.00" y="350.50"></text></g><g><title>0x7f0e83d122f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="509" y="356" width="1" height="15" fill="rgb(243,81,19)"/><text x="512.00" y="366.50"></text></g><g><title>0x7f0e83d114f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="509" y="372" width="1" height="15" fill="rgb(242,109,10)"/><text x="512.00" y="382.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.15%)</title><rect x="510" y="372" width="2" height="15" fill="rgb(232,62,53)"/><text x="513.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="510" y="388" width="2" height="15" fill="rgb(236,198,51)"/><text x="513.00" y="398.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.15%)</title><rect x="512" y="372" width="2" height="15" fill="rgb(250,41,34)"/><text x="515.00" y="382.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (2 samples, 0.30%)</title><rect x="514" y="372" width="3" height="15" fill="rgb(222,61,33)"/><text x="517.00" y="382.50"></text></g><g><title>0x7f0e83d2e05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.74%)</title><rect x="510" y="324" width="9" height="15" fill="rgb(249,71,24)"/><text x="513.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (5 samples, 0.74%)</title><rect x="510" y="340" width="9" height="15" fill="rgb(226,126,32)"/><text x="513.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (5 samples, 0.74%)</title><rect x="510" y="356" width="9" height="15" fill="rgb(221,0,3)"/><text x="513.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3961) (1 samples, 0.15%)</title><rect x="517" y="372" width="2" height="15" fill="rgb(227,161,18)"/><text x="520.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.15%)</title><rect x="519" y="372" width="2" height="15" fill="rgb(226,217,0)"/><text x="522.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.15%)</title><rect x="521" y="372" width="2" height="15" fill="rgb(210,163,12)"/><text x="524.00" y="382.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.15%)</title><rect x="521" y="388" width="2" height="15" fill="rgb(235,95,31)"/><text x="524.00" y="398.50"></text></g><g><title>0x7f0eaa2ea97c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="521" y="404" width="2" height="15" fill="rgb(228,188,37)"/><text x="524.00" y="414.50"></text></g><g><title>0x7f0e83d2e14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.44%)</title><rect x="519" y="324" width="5" height="15" fill="rgb(210,110,31)"/><text x="522.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 0.44%)</title><rect x="519" y="340" width="5" height="15" fill="rgb(253,9,20)"/><text x="522.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 0.44%)</title><rect x="519" y="356" width="5" height="15" fill="rgb(232,222,34)"/><text x="522.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.15%)</title><rect x="523" y="372" width="1" height="15" fill="rgb(239,142,10)"/><text x="526.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (33 samples, 4.88%)</title><rect x="469" y="292" width="57" height="15" fill="rgb(206,13,35)"/><text x="472.00" y="302.50">predic..</text></g><g><title>0x7f0e83d2ed2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (32 samples, 4.73%)</title><rect x="470" y="308" width="56" height="15" fill="rgb(212,6,39)"/><text x="473.00" y="318.50">0x7f0..</text></g><g><title>0x7f0e83d2e328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="524" y="324" width="2" height="15" fill="rgb(211,170,54)"/><text x="527.00" y="334.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.15%)</title><rect x="524" y="340" width="2" height="15" fill="rgb(217,123,2)"/><text x="527.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.15%)</title><rect x="524" y="356" width="2" height="15" fill="rgb(237,159,52)"/><text x="527.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.15%)</title><rect x="524" y="372" width="2" height="15" fill="rgb(246,173,15)"/><text x="527.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.15%)</title><rect x="526" y="292" width="2" height="15" fill="rgb(224,49,4)"/><text x="529.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.15%)</title><rect x="526" y="308" width="2" height="15" fill="rgb(218,180,10)"/><text x="529.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.15%)</title><rect x="526" y="324" width="2" height="15" fill="rgb(241,91,1)"/><text x="529.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.15%)</title><rect x="535" y="308" width="2" height="15" fill="rgb(217,16,25)"/><text x="538.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:958) (1 samples, 0.15%)</title><rect x="535" y="324" width="2" height="15" fill="rgb(226,31,30)"/><text x="538.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.15%)</title><rect x="547" y="372" width="2" height="15" fill="rgb(244,85,37)"/><text x="550.00" y="382.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.30%)</title><rect x="549" y="404" width="3" height="15" fill="rgb(254,181,15)"/><text x="552.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.15%)</title><rect x="551" y="420" width="1" height="15" fill="rgb(219,43,28)"/><text x="554.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.15%)</title><rect x="551" y="436" width="1" height="15" fill="rgb(240,52,42)"/><text x="554.00" y="446.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.15%)</title><rect x="551" y="452" width="1" height="15" fill="rgb(238,6,45)"/><text x="554.00" y="462.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.15%)</title><rect x="551" y="468" width="1" height="15" fill="rgb(223,198,46)"/><text x="554.00" y="478.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (3 samples, 0.44%)</title><rect x="549" y="388" width="5" height="15" fill="rgb(246,43,4)"/><text x="552.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3447) (1 samples, 0.15%)</title><rect x="552" y="404" width="2" height="15" fill="rgb(224,199,20)"/><text x="555.00" y="414.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.15%)</title><rect x="552" y="420" width="2" height="15" fill="rgb(221,159,4)"/><text x="555.00" y="430.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.15%)</title><rect x="554" y="452" width="2" height="15" fill="rgb(206,12,24)"/><text x="557.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.30%)</title><rect x="554" y="404" width="4" height="15" fill="rgb(205,143,31)"/><text x="557.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.30%)</title><rect x="554" y="420" width="4" height="15" fill="rgb(253,63,44)"/><text x="557.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (2 samples, 0.30%)</title><rect x="554" y="436" width="4" height="15" fill="rgb(245,109,7)"/><text x="557.00" y="446.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.15%)</title><rect x="556" y="452" width="2" height="15" fill="rgb(205,50,52)"/><text x="559.00" y="462.50"></text></g><g><title>0x7f0eaa2a2760 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="556" y="468" width="2" height="15" fill="rgb(236,144,41)"/><text x="559.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.15%)</title><rect x="558" y="404" width="1" height="15" fill="rgb(250,148,24)"/><text x="561.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.15%)</title><rect x="558" y="420" width="1" height="15" fill="rgb(233,166,48)"/><text x="561.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.15%)</title><rect x="558" y="436" width="1" height="15" fill="rgb(221,71,28)"/><text x="561.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.15%)</title><rect x="558" y="452" width="1" height="15" fill="rgb(236,129,33)"/><text x="561.00" y="462.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.15%)</title><rect x="558" y="468" width="1" height="15" fill="rgb(231,106,46)"/><text x="561.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:558) (1 samples, 0.15%)</title><rect x="559" y="404" width="2" height="15" fill="rgb(216,221,6)"/><text x="562.00" y="414.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.15%)</title><rect x="559" y="420" width="2" height="15" fill="rgb(213,67,48)"/><text x="562.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3466) (1 samples, 0.15%)</title><rect x="561" y="420" width="2" height="15" fill="rgb(229,166,44)"/><text x="564.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.15%)</title><rect x="563" y="420" width="2" height="15" fill="rgb(213,64,18)"/><text x="566.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.15%)</title><rect x="565" y="420" width="1" height="15" fill="rgb(231,194,33)"/><text x="568.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (3 samples, 0.44%)</title><rect x="566" y="420" width="6" height="15" fill="rgb(215,214,49)"/><text x="569.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.15%)</title><rect x="572" y="436" width="1" height="15" fill="rgb(240,147,2)"/><text x="575.00" y="446.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (3 samples, 0.44%)</title><rect x="573" y="436" width="6" height="15" fill="rgb(253,22,39)"/><text x="576.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.30%)</title><rect x="582" y="452" width="4" height="15" fill="rgb(230,70,23)"/><text x="585.00" y="462.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (5 samples, 0.74%)</title><rect x="579" y="436" width="8" height="15" fill="rgb(210,59,46)"/><text x="582.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.15%)</title><rect x="586" y="452" width="1" height="15" fill="rgb(247,123,11)"/><text x="589.00" y="462.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (2 samples, 0.30%)</title><rect x="587" y="436" width="4" height="15" fill="rgb(225,20,37)"/><text x="590.00" y="446.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.15%)</title><rect x="591" y="436" width="2" height="15" fill="rgb(207,121,4)"/><text x="594.00" y="446.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.15%)</title><rect x="593" y="436" width="1" height="15" fill="rgb(254,129,44)"/><text x="596.00" y="446.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.15%)</title><rect x="594" y="436" width="2" height="15" fill="rgb(243,63,17)"/><text x="597.00" y="446.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:244) (1 samples, 0.15%)</title><rect x="596" y="436" width="2" height="15" fill="rgb(220,187,30)"/><text x="599.00" y="446.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (16 samples, 2.37%)</title><rect x="572" y="420" width="28" height="15" fill="rgb(235,27,37)"/><text x="575.00" y="430.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.15%)</title><rect x="598" y="436" width="2" height="15" fill="rgb(234,226,33)"/><text x="601.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (42 samples, 6.21%)</title><rect x="528" y="292" width="73" height="15" fill="rgb(208,77,48)"/><text x="531.00" y="302.50">predict_..</text></g><g><title>array_sum (methods.c:2215) (37 samples, 5.47%)</title><rect x="537" y="308" width="64" height="15" fill="rgb(213,50,45)"/><text x="540.00" y="318.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:108) (37 samples, 5.47%)</title><rect x="537" y="324" width="64" height="15" fill="rgb(214,65,47)"/><text x="540.00" y="334.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (34 samples, 5.03%)</title><rect x="542" y="340" width="59" height="15" fill="rgb(231,45,19)"/><text x="545.00" y="350.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (31 samples, 4.59%)</title><rect x="547" y="356" width="54" height="15" fill="rgb(246,207,21)"/><text x="550.00" y="366.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (30 samples, 4.44%)</title><rect x="549" y="372" width="52" height="15" fill="rgb(208,171,7)"/><text x="552.00" y="382.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (27 samples, 3.99%)</title><rect x="554" y="388" width="47" height="15" fill="rgb(215,24,3)"/><text x="557.00" y="398.50">PyUF..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (23 samples, 3.40%)</title><rect x="561" y="404" width="40" height="15" fill="rgb(239,42,24)"/><text x="564.00" y="414.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.15%)</title><rect x="600" y="420" width="1" height="15" fill="rgb(208,154,3)"/><text x="603.00" y="430.50"></text></g><g><title>0x7f0ea950c280 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="601" y="324" width="2" height="15" fill="rgb(214,72,42)"/><text x="604.00" y="334.50"></text></g><g><title>0x7f0eaa30b124 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="603" y="324" width="2" height="15" fill="rgb(247,124,54)"/><text x="606.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.15%)</title><rect x="605" y="340" width="1" height="15" fill="rgb(227,125,52)"/><text x="608.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.15%)</title><rect x="605" y="356" width="1" height="15" fill="rgb(219,205,2)"/><text x="608.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.15%)</title><rect x="606" y="340" width="2" height="15" fill="rgb(213,126,51)"/><text x="609.00" y="350.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.15%)</title><rect x="606" y="356" width="2" height="15" fill="rgb(212,138,10)"/><text x="609.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.15%)</title><rect x="608" y="372" width="2" height="15" fill="rgb(231,225,53)"/><text x="611.00" y="382.50"></text></g><g><title>DOUBLE_equal (loops.c.src:1773) (1 samples, 0.15%)</title><rect x="608" y="388" width="2" height="15" fill="rgb(222,196,13)"/><text x="611.00" y="398.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src:295) (1 samples, 0.15%)</title><rect x="608" y="404" width="2" height="15" fill="rgb(242,204,47)"/><text x="611.00" y="414.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src:981) (1 samples, 0.15%)</title><rect x="608" y="420" width="2" height="15" fill="rgb(212,188,25)"/><text x="611.00" y="430.50"></text></g><g><title>_mm_cmpeq_pd (emmintrin.h:339) (1 samples, 0.15%)</title><rect x="608" y="436" width="2" height="15" fill="rgb(212,177,9)"/><text x="611.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (6 samples, 0.89%)</title><rect x="601" y="292" width="11" height="15" fill="rgb(236,131,17)"/><text x="604.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (6 samples, 0.89%)</title><rect x="601" y="308" width="11" height="15" fill="rgb(209,158,2)"/><text x="604.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.59%)</title><rect x="605" y="324" width="7" height="15" fill="rgb(237,91,16)"/><text x="608.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.30%)</title><rect x="608" y="340" width="4" height="15" fill="rgb(218,66,10)"/><text x="611.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.30%)</title><rect x="608" y="356" width="4" height="15" fill="rgb(239,135,35)"/><text x="611.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.15%)</title><rect x="610" y="372" width="2" height="15" fill="rgb(239,206,12)"/><text x="613.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="610" y="388" width="2" height="15" fill="rgb(239,187,44)"/><text x="613.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.15%)</title><rect x="613" y="356" width="2" height="15" fill="rgb(214,86,28)"/><text x="616.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:235) (1 samples, 0.15%)</title><rect x="613" y="372" width="2" height="15" fill="rgb(239,83,35)"/><text x="616.00" y="382.50"></text></g><g><title>0x7f0eaa30b14a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="613" y="388" width="2" height="15" fill="rgb(213,154,2)"/><text x="616.00" y="398.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2039) (1 samples, 0.15%)</title><rect x="615" y="388" width="2" height="15" fill="rgb(210,209,49)"/><text x="618.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.30%)</title><rect x="617" y="404" width="3" height="15" fill="rgb(219,145,12)"/><text x="620.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.15%)</title><rect x="620" y="404" width="2" height="15" fill="rgb(222,132,19)"/><text x="623.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.44%)</title><rect x="622" y="404" width="5" height="15" fill="rgb(254,214,49)"/><text x="625.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (3 samples, 0.44%)</title><rect x="622" y="420" width="5" height="15" fill="rgb(250,148,39)"/><text x="625.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (8 samples, 1.18%)</title><rect x="615" y="356" width="14" height="15" fill="rgb(248,218,31)"/><text x="618.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (8 samples, 1.18%)</title><rect x="615" y="372" width="14" height="15" fill="rgb(239,47,42)"/><text x="618.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 1.04%)</title><rect x="617" y="388" width="12" height="15" fill="rgb(240,62,33)"/><text x="620.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:996) (1 samples, 0.15%)</title><rect x="627" y="404" width="2" height="15" fill="rgb(220,2,52)"/><text x="630.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.15%)</title><rect x="627" y="420" width="2" height="15" fill="rgb(239,47,13)"/><text x="630.00" y="430.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (1 samples, 0.15%)</title><rect x="629" y="404" width="2" height="15" fill="rgb(235,113,12)"/><text x="632.00" y="414.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.15%)</title><rect x="629" y="420" width="2" height="15" fill="rgb(220,185,22)"/><text x="632.00" y="430.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (112 samples, 16.57%)</title><rect x="437" y="276" width="196" height="15" fill="rgb(208,199,39)"/><text x="440.00" y="286.50">_accumulate_prediction (s..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (12 samples, 1.78%)</title><rect x="612" y="292" width="21" height="15" fill="rgb(221,201,27)"/><text x="615.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.63%)</title><rect x="613" y="308" width="20" height="15" fill="rgb(253,179,18)"/><text x="616.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.63%)</title><rect x="613" y="324" width="20" height="15" fill="rgb(218,81,3)"/><text x="616.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 1.63%)</title><rect x="613" y="340" width="20" height="15" fill="rgb(234,229,53)"/><text x="616.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.30%)</title><rect x="629" y="356" width="4" height="15" fill="rgb(250,18,27)"/><text x="632.00" y="366.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (2 samples, 0.30%)</title><rect x="629" y="372" width="4" height="15" fill="rgb(227,210,48)"/><text x="632.00" y="382.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (2 samples, 0.30%)</title><rect x="629" y="388" width="4" height="15" fill="rgb(241,199,22)"/><text x="632.00" y="398.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (1 samples, 0.15%)</title><rect x="631" y="404" width="2" height="15" fill="rgb(216,1,36)"/><text x="634.00" y="414.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.15%)</title><rect x="631" y="420" width="2" height="15" fill="rgb(240,75,41)"/><text x="634.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.15%)</title><rect x="633" y="308" width="1" height="15" fill="rgb(212,226,23)"/><text x="636.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.15%)</title><rect x="633" y="324" width="1" height="15" fill="rgb(215,160,14)"/><text x="636.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.15%)</title><rect x="633" y="340" width="1" height="15" fill="rgb(235,163,7)"/><text x="636.00" y="350.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.15%)</title><rect x="633" y="356" width="1" height="15" fill="rgb(230,158,49)"/><text x="636.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1079) (1 samples, 0.15%)</title><rect x="633" y="372" width="1" height="15" fill="rgb(240,206,23)"/><text x="636.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.15%)</title><rect x="634" y="308" width="2" height="15" fill="rgb(220,226,45)"/><text x="637.00" y="318.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1297) (1 samples, 0.15%)</title><rect x="634" y="324" width="2" height="15" fill="rgb(251,144,0)"/><text x="637.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.15%)</title><rect x="636" y="324" width="2" height="15" fill="rgb(252,24,26)"/><text x="639.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.15%)</title><rect x="636" y="340" width="2" height="15" fill="rgb(247,65,8)"/><text x="639.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.15%)</title><rect x="636" y="356" width="2" height="15" fill="rgb(227,68,8)"/><text x="639.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.15%)</title><rect x="636" y="372" width="2" height="15" fill="rgb(226,46,27)"/><text x="639.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:399) (1 samples, 0.15%)</title><rect x="636" y="388" width="2" height="15" fill="rgb(252,71,10)"/><text x="639.00" y="398.50"></text></g><g><title>sub_128 (npy_extint128.h:185) (1 samples, 0.15%)</title><rect x="636" y="404" width="2" height="15" fill="rgb(253,14,12)"/><text x="639.00" y="414.50"></text></g><g><title>add_128 (npy_extint128.h:149) (1 samples, 0.15%)</title><rect x="636" y="420" width="2" height="15" fill="rgb(222,43,21)"/><text x="639.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.59%)</title><rect x="633" y="292" width="7" height="15" fill="rgb(225,147,14)"/><text x="636.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.30%)</title><rect x="636" y="308" width="4" height="15" fill="rgb(237,26,37)"/><text x="639.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.15%)</title><rect x="638" y="324" width="2" height="15" fill="rgb(224,87,1)"/><text x="641.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.15%)</title><rect x="638" y="340" width="2" height="15" fill="rgb(238,221,8)"/><text x="641.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.15%)</title><rect x="638" y="356" width="2" height="15" fill="rgb(205,79,49)"/><text x="641.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.15%)</title><rect x="638" y="372" width="2" height="15" fill="rgb(249,18,37)"/><text x="641.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.15%)</title><rect x="638" y="388" width="2" height="15" fill="rgb(236,162,14)"/><text x="641.00" y="398.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.15%)</title><rect x="638" y="404" width="2" height="15" fill="rgb(217,12,48)"/><text x="641.00" y="414.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (118 samples, 17.46%)</title><rect x="435" y="260" width="206" height="15" fill="rgb(250,184,21)"/><text x="438.00" y="270.50">&lt;listcomp&gt; (joblib/parallel..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (5 samples, 0.74%)</title><rect x="633" y="276" width="8" height="15" fill="rgb(222,96,31)"/><text x="636.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.15%)</title><rect x="640" y="292" width="1" height="15" fill="rgb(209,112,35)"/><text x="643.00" y="302.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.15%)</title><rect x="640" y="308" width="1" height="15" fill="rgb(248,19,29)"/><text x="643.00" y="318.50"></text></g><g><title>unregister (joblib/parallel.py:219) (2 samples, 0.30%)</title><rect x="643" y="276" width="4" height="15" fill="rgb(209,220,41)"/><text x="646.00" y="286.50"></text></g><g><title>unregister (joblib/parallel.py:220) (1 samples, 0.15%)</title><rect x="647" y="276" width="1" height="15" fill="rgb(229,182,2)"/><text x="650.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (132 samples, 19.53%)</title><rect x="420" y="212" width="230" height="15" fill="rgb(221,225,21)"/><text x="423.00" y="222.50">apply_async (joblib/_parallel_..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (131 samples, 19.38%)</title><rect x="421" y="228" width="229" height="15" fill="rgb(222,49,46)"/><text x="424.00" y="238.50">__init__ (joblib/_parallel_bac..</text></g><g><title>__call__ (joblib/parallel.py:256) (125 samples, 18.49%)</title><rect x="432" y="244" width="218" height="15" fill="rgb(247,32,39)"/><text x="435.00" y="254.50">__call__ (joblib/parallel.py..</text></g><g><title>__exit__ (joblib/parallel.py:215) (5 samples, 0.74%)</title><rect x="641" y="260" width="9" height="15" fill="rgb(229,85,0)"/><text x="644.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:222) (1 samples, 0.15%)</title><rect x="648" y="276" width="2" height="15" fill="rgb(232,88,51)"/><text x="651.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:339) (1 samples, 0.15%)</title><rect x="650" y="228" width="2" height="15" fill="rgb(221,148,31)"/><text x="653.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (187 samples, 27.66%)</title><rect x="327" y="164" width="327" height="15" fill="rgb(244,11,45)"/><text x="330.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (139 samples, 20.56%)</title><rect x="411" y="180" width="243" height="15" fill="rgb(231,170,43)"/><text x="414.00" y="190.50">dispatch_one_batch (joblib/paral..</text></g><g><title>_dispatch (joblib/parallel.py:753) (134 samples, 19.82%)</title><rect x="420" y="196" width="234" height="15" fill="rgb(249,42,53)"/><text x="423.00" y="206.50">_dispatch (joblib/parallel.py:7..</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (2 samples, 0.30%)</title><rect x="650" y="212" width="4" height="15" fill="rgb(254,161,45)"/><text x="653.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:340) (1 samples, 0.15%)</title><rect x="652" y="228" width="2" height="15" fill="rgb(217,35,54)"/><text x="655.00" y="238.50"></text></g><g><title>retrieve (joblib/parallel.py:895) (1 samples, 0.15%)</title><rect x="654" y="180" width="1" height="15" fill="rgb(247,160,45)"/><text x="657.00" y="190.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (1 samples, 0.15%)</title><rect x="655" y="180" width="2" height="15" fill="rgb(216,130,52)"/><text x="658.00" y="190.50"></text></g><g><title>retrieve (joblib/parallel.py:907) (1 samples, 0.15%)</title><rect x="657" y="180" width="2" height="15" fill="rgb(209,216,13)"/><text x="660.00" y="190.50"></text></g><g><title>__call__ (joblib/parallel.py:1016) (4 samples, 0.59%)</title><rect x="654" y="164" width="7" height="15" fill="rgb(245,100,16)"/><text x="657.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:910) (1 samples, 0.15%)</title><rect x="659" y="180" width="2" height="15" fill="rgb(240,84,37)"/><text x="662.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:38) (370 samples, 54.73%)</title><rect x="16" y="52" width="646" height="15" fill="rgb(252,208,21)"/><text x="19.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:37) (370 samples, 54.73%)</title><rect x="16" y="68" width="646" height="15" fill="rgb(246,65,54)"/><text x="19.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:29) (369 samples, 54.59%)</title><rect x="18" y="84" width="644" height="15" fill="rgb(239,101,4)"/><text x="21.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:29)</text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:23) (202 samples, 29.88%)</title><rect x="310" y="100" width="352" height="15" fill="rgb(230,8,37)"/><text x="313.00" y="110.50">profile (bench_RandomForestClassifier_default_m..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (202 samples, 29.88%)</title><rect x="310" y="116" width="352" height="15" fill="rgb(248,73,11)"/><text x="313.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (202 samples, 29.88%)</title><rect x="310" y="132" width="352" height="15" fill="rgb(226,50,47)"/><text x="313.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (196 samples, 28.99%)</title><rect x="320" y="148" width="342" height="15" fill="rgb(249,176,29)"/><text x="323.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:669)</text></g><g><title>__call__ (joblib/parallel.py:957) (1 samples, 0.15%)</title><rect x="661" y="164" width="1" height="15" fill="rgb(237,95,31)"/><text x="664.00" y="174.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:1) (1 samples, 0.15%)</title><rect x="662" y="148" width="2" height="15" fill="rgb(209,172,2)"/><text x="665.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="662" y="164" width="2" height="15" fill="rgb(236,3,41)"/><text x="665.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="662" y="180" width="2" height="15" fill="rgb(208,163,35)"/><text x="665.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="662" y="196" width="2" height="15" fill="rgb(220,186,52)"/><text x="665.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="662" y="212" width="2" height="15" fill="rgb(212,3,49)"/><text x="665.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="662" y="228" width="2" height="15" fill="rgb(234,129,22)"/><text x="665.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.15%)</title><rect x="662" y="244" width="2" height="15" fill="rgb(253,61,52)"/><text x="665.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="662" y="260" width="2" height="15" fill="rgb(220,144,41)"/><text x="665.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="662" y="276" width="2" height="15" fill="rgb(247,211,32)"/><text x="665.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="662" y="292" width="2" height="15" fill="rgb(212,142,18)"/><text x="665.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="662" y="308" width="2" height="15" fill="rgb(206,201,46)"/><text x="665.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="662" y="324" width="2" height="15" fill="rgb(239,72,18)"/><text x="665.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="662" y="340" width="2" height="15" fill="rgb(220,224,30)"/><text x="665.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="662" y="356" width="2" height="15" fill="rgb(211,91,38)"/><text x="665.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:25) (1 samples, 0.15%)</title><rect x="662" y="372" width="2" height="15" fill="rgb(228,210,13)"/><text x="665.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="662" y="388" width="2" height="15" fill="rgb(250,212,18)"/><text x="665.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="662" y="404" width="2" height="15" fill="rgb(251,99,36)"/><text x="665.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="662" y="420" width="2" height="15" fill="rgb(205,83,26)"/><text x="665.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="662" y="436" width="2" height="15" fill="rgb(239,125,49)"/><text x="665.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="662" y="452" width="2" height="15" fill="rgb(249,113,14)"/><text x="665.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/financial.py:15) (1 samples, 0.15%)</title><rect x="662" y="468" width="2" height="15" fill="rgb(210,180,16)"/><text x="665.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="662" y="484" width="2" height="15" fill="rgb(239,193,25)"/><text x="665.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="662" y="500" width="2" height="15" fill="rgb(253,70,42)"/><text x="665.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="662" y="516" width="2" height="15" fill="rgb(253,195,50)"/><text x="665.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="662" y="532" width="2" height="15" fill="rgb(215,58,16)"/><text x="665.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="662" y="548" width="2" height="15" fill="rgb(240,171,49)"/><text x="665.00" y="558.50"></text></g><g><title>&lt;module&gt; (decimal.py:3) (1 samples, 0.15%)</title><rect x="662" y="564" width="2" height="15" fill="rgb(224,10,44)"/><text x="665.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="662" y="580" width="2" height="15" fill="rgb(214,23,49)"/><text x="665.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="662" y="596" width="2" height="15" fill="rgb(226,202,20)"/><text x="665.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.15%)</title><rect x="662" y="612" width="2" height="15" fill="rgb(231,153,45)"/><text x="665.00" y="622.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.15%)</title><rect x="662" y="628" width="2" height="15" fill="rgb(215,157,46)"/><text x="665.00" y="638.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.15%)</title><rect x="662" y="644" width="2" height="15" fill="rgb(228,65,23)"/><text x="665.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="662" y="660" width="2" height="15" fill="rgb(250,69,48)"/><text x="665.00" y="670.50"></text></g><g><title>0x7f0e9d122990 (?) (1 samples, 0.15%)</title><rect x="662" y="676" width="2" height="15" fill="rgb(233,220,21)"/><text x="665.00" y="686.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:8) (1 samples, 0.15%)</title><rect x="664" y="292" width="2" height="15" fill="rgb(230,143,0)"/><text x="667.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="664" y="308" width="2" height="15" fill="rgb(225,207,50)"/><text x="667.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="664" y="324" width="2" height="15" fill="rgb(227,189,51)"/><text x="667.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.15%)</title><rect x="664" y="340" width="2" height="15" fill="rgb(217,217,35)"/><text x="667.00" y="350.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.15%)</title><rect x="664" y="356" width="2" height="15" fill="rgb(233,151,16)"/><text x="667.00" y="366.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.15%)</title><rect x="664" y="372" width="2" height="15" fill="rgb(212,153,12)"/><text x="667.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="664" y="388" width="2" height="15" fill="rgb(232,88,34)"/><text x="667.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.15%)</title><rect x="664" y="404" width="2" height="15" fill="rgb(209,182,54)"/><text x="667.00" y="414.50"></text></g><g><title>0x7f0eaa572995 (libdl-2.29.so) (1 samples, 0.15%)</title><rect x="664" y="420" width="2" height="15" fill="rgb(252,101,7)"/><text x="667.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.15%)</title><rect x="664" y="436" width="2" height="15" fill="rgb(234,173,18)"/><text x="667.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.15%)</title><rect x="664" y="452" width="2" height="15" fill="rgb(224,6,23)"/><text x="667.00" y="462.50"></text></g><g><title>0x7f0eaa572258 (libdl-2.29.so) (1 samples, 0.15%)</title><rect x="664" y="468" width="2" height="15" fill="rgb(252,171,2)"/><text x="667.00" y="478.50"></text></g><g><title>0x7f0eaa5bfd7a (ld-2.29.so) (1 samples, 0.15%)</title><rect x="664" y="484" width="2" height="15" fill="rgb(230,163,46)"/><text x="667.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.15%)</title><rect x="664" y="500" width="2" height="15" fill="rgb(248,206,8)"/><text x="667.00" y="510.50"></text></g><g><title>0x7f0eaa5c0345 (ld-2.29.so) (1 samples, 0.15%)</title><rect x="664" y="516" width="2" height="15" fill="rgb(240,114,20)"/><text x="667.00" y="526.50"></text></g><g><title>0x7f0eaa5b8fec (ld-2.29.so) (1 samples, 0.15%)</title><rect x="664" y="532" width="2" height="15" fill="rgb(217,50,45)"/><text x="667.00" y="542.50"></text></g><g><title>0x7f0eaa5b756b (ld-2.29.so) (1 samples, 0.15%)</title><rect x="664" y="548" width="2" height="15" fill="rgb(208,164,40)"/><text x="667.00" y="558.50"></text></g><g><title>0x7f0eaa5b6902 (ld-2.29.so) (1 samples, 0.15%)</title><rect x="664" y="564" width="2" height="15" fill="rgb(244,148,48)"/><text x="667.00" y="574.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.15%)</title><rect x="666" y="980" width="2" height="15" fill="rgb(242,167,43)"/><text x="669.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:201) (1 samples, 0.15%)</title><rect x="666" y="996" width="2" height="15" fill="rgb(252,44,34)"/><text x="669.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.30%)</title><rect x="666" y="852" width="3" height="15" fill="rgb(249,206,43)"/><text x="669.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.30%)</title><rect x="666" y="868" width="3" height="15" fill="rgb(226,223,50)"/><text x="669.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.30%)</title><rect x="666" y="884" width="3" height="15" fill="rgb(209,111,14)"/><text x="669.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.30%)</title><rect x="666" y="900" width="3" height="15" fill="rgb(234,226,20)"/><text x="669.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.30%)</title><rect x="666" y="916" width="3" height="15" fill="rgb(228,39,34)"/><text x="669.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.30%)</title><rect x="666" y="932" width="3" height="15" fill="rgb(253,203,8)"/><text x="669.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.30%)</title><rect x="666" y="948" width="3" height="15" fill="rgb(226,196,53)"/><text x="669.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.30%)</title><rect x="666" y="964" width="3" height="15" fill="rgb(218,14,14)"/><text x="669.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.15%)</title><rect x="668" y="980" width="1" height="15" fill="rgb(248,65,29)"/><text x="671.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.15%)</title><rect x="668" y="996" width="1" height="15" fill="rgb(212,80,28)"/><text x="671.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.15%)</title><rect x="668" y="1012" width="1" height="15" fill="rgb(232,102,9)"/><text x="671.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:125) (1 samples, 0.15%)</title><rect x="668" y="1028" width="1" height="15" fill="rgb(220,25,43)"/><text x="671.00" y="1038.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.15%)</title><rect x="668" y="1044" width="1" height="15" fill="rgb(218,98,3)"/><text x="671.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.15%)</title><rect x="669" y="852" width="2" height="15" fill="rgb(239,28,4)"/><text x="672.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.15%)</title><rect x="669" y="868" width="2" height="15" fill="rgb(247,23,12)"/><text x="672.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.15%)</title><rect x="669" y="884" width="2" height="15" fill="rgb(240,169,25)"/><text x="672.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.15%)</title><rect x="669" y="900" width="2" height="15" fill="rgb(207,166,35)"/><text x="672.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.15%)</title><rect x="669" y="916" width="2" height="15" fill="rgb(213,227,11)"/><text x="672.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.15%)</title><rect x="669" y="932" width="2" height="15" fill="rgb(240,56,14)"/><text x="672.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.15%)</title><rect x="669" y="948" width="2" height="15" fill="rgb(209,161,44)"/><text x="672.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.15%)</title><rect x="669" y="964" width="2" height="15" fill="rgb(223,40,34)"/><text x="672.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.15%)</title><rect x="669" y="980" width="2" height="15" fill="rgb(209,187,25)"/><text x="672.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.15%)</title><rect x="669" y="996" width="2" height="15" fill="rgb(228,192,2)"/><text x="672.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.15%)</title><rect x="669" y="1012" width="2" height="15" fill="rgb(228,36,42)"/><text x="672.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.15%)</title><rect x="669" y="1028" width="2" height="15" fill="rgb(227,34,39)"/><text x="672.00" y="1038.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.59%)</title><rect x="666" y="820" width="7" height="15" fill="rgb(235,59,7)"/><text x="669.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.59%)</title><rect x="666" y="836" width="7" height="15" fill="rgb(253,104,19)"/><text x="669.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.15%)</title><rect x="671" y="852" width="2" height="15" fill="rgb(215,190,51)"/><text x="674.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.15%)</title><rect x="671" y="868" width="2" height="15" fill="rgb(238,142,3)"/><text x="674.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.15%)</title><rect x="671" y="884" width="2" height="15" fill="rgb(237,37,9)"/><text x="674.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.15%)</title><rect x="671" y="900" width="2" height="15" fill="rgb(215,168,52)"/><text x="674.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.15%)</title><rect x="671" y="916" width="2" height="15" fill="rgb(217,202,27)"/><text x="674.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.15%)</title><rect x="671" y="932" width="2" height="15" fill="rgb(234,45,45)"/><text x="674.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.15%)</title><rect x="671" y="948" width="2" height="15" fill="rgb(224,185,1)"/><text x="674.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.15%)</title><rect x="671" y="964" width="2" height="15" fill="rgb(244,107,12)"/><text x="674.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:351) (1 samples, 0.15%)</title><rect x="671" y="980" width="2" height="15" fill="rgb(211,165,34)"/><text x="674.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:2) (6 samples, 0.89%)</title><rect x="664" y="148" width="11" height="15" fill="rgb(205,99,17)"/><text x="667.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.89%)</title><rect x="664" y="164" width="11" height="15" fill="rgb(250,18,26)"/><text x="667.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 0.89%)</title><rect x="664" y="180" width="11" height="15" fill="rgb(234,227,3)"/><text x="667.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.89%)</title><rect x="664" y="196" width="11" height="15" fill="rgb(208,149,35)"/><text x="667.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.89%)</title><rect x="664" y="212" width="11" height="15" fill="rgb(208,159,26)"/><text x="667.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.89%)</title><rect x="664" y="228" width="11" height="15" fill="rgb(238,219,20)"/><text x="667.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.89%)</title><rect x="664" y="244" width="11" height="15" fill="rgb(252,186,42)"/><text x="667.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.89%)</title><rect x="664" y="260" width="11" height="15" fill="rgb(225,101,36)"/><text x="667.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.89%)</title><rect x="664" y="276" width="11" height="15" fill="rgb(214,37,31)"/><text x="667.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.74%)</title><rect x="666" y="292" width="9" height="15" fill="rgb(240,189,43)"/><text x="669.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="666" y="308" width="9" height="15" fill="rgb(246,6,39)"/><text x="669.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.74%)</title><rect x="666" y="324" width="9" height="15" fill="rgb(226,7,41)"/><text x="669.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.74%)</title><rect x="666" y="340" width="9" height="15" fill="rgb(230,58,29)"/><text x="669.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.74%)</title><rect x="666" y="356" width="9" height="15" fill="rgb(230,27,52)"/><text x="669.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="666" y="372" width="9" height="15" fill="rgb(240,194,21)"/><text x="669.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 0.74%)</title><rect x="666" y="388" width="9" height="15" fill="rgb(207,137,30)"/><text x="669.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="666" y="404" width="9" height="15" fill="rgb(249,207,27)"/><text x="669.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.74%)</title><rect x="666" y="420" width="9" height="15" fill="rgb(227,94,34)"/><text x="669.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.74%)</title><rect x="666" y="436" width="9" height="15" fill="rgb(227,6,46)"/><text x="669.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.74%)</title><rect x="666" y="452" width="9" height="15" fill="rgb(211,48,20)"/><text x="669.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="666" y="468" width="9" height="15" fill="rgb(225,148,49)"/><text x="669.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 0.74%)</title><rect x="666" y="484" width="9" height="15" fill="rgb(239,142,12)"/><text x="669.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="666" y="500" width="9" height="15" fill="rgb(238,224,13)"/><text x="669.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.74%)</title><rect x="666" y="516" width="9" height="15" fill="rgb(216,109,6)"/><text x="669.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.74%)</title><rect x="666" y="532" width="9" height="15" fill="rgb(242,27,29)"/><text x="669.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.74%)</title><rect x="666" y="548" width="9" height="15" fill="rgb(234,186,41)"/><text x="669.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="666" y="564" width="9" height="15" fill="rgb(227,3,10)"/><text x="669.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 0.74%)</title><rect x="666" y="580" width="9" height="15" fill="rgb(227,135,31)"/><text x="669.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="666" y="596" width="9" height="15" fill="rgb(216,87,28)"/><text x="669.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.74%)</title><rect x="666" y="612" width="9" height="15" fill="rgb(221,167,30)"/><text x="669.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="666" y="628" width="9" height="15" fill="rgb(219,156,0)"/><text x="669.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="666" y="644" width="9" height="15" fill="rgb(253,228,46)"/><text x="669.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.74%)</title><rect x="666" y="660" width="9" height="15" fill="rgb(223,219,49)"/><text x="669.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.74%)</title><rect x="666" y="676" width="9" height="15" fill="rgb(223,59,1)"/><text x="669.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.74%)</title><rect x="666" y="692" width="9" height="15" fill="rgb(231,185,53)"/><text x="669.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="666" y="708" width="9" height="15" fill="rgb(213,176,44)"/><text x="669.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 0.74%)</title><rect x="666" y="724" width="9" height="15" fill="rgb(221,170,23)"/><text x="669.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.74%)</title><rect x="666" y="740" width="9" height="15" fill="rgb(230,214,44)"/><text x="669.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.74%)</title><rect x="666" y="756" width="9" height="15" fill="rgb(206,148,46)"/><text x="669.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.74%)</title><rect x="666" y="772" width="9" height="15" fill="rgb(218,222,36)"/><text x="669.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.74%)</title><rect x="666" y="788" width="9" height="15" fill="rgb(248,174,2)"/><text x="669.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.74%)</title><rect x="666" y="804" width="9" height="15" fill="rgb(225,15,43)"/><text x="669.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.15%)</title><rect x="673" y="820" width="2" height="15" fill="rgb(220,37,51)"/><text x="676.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="673" y="836" width="2" height="15" fill="rgb(218,44,33)"/><text x="676.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="673" y="852" width="2" height="15" fill="rgb(207,110,33)"/><text x="676.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="673" y="868" width="2" height="15" fill="rgb(239,129,45)"/><text x="676.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="673" y="884" width="2" height="15" fill="rgb(251,75,7)"/><text x="676.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="673" y="900" width="2" height="15" fill="rgb(222,10,46)"/><text x="676.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:47) (1 samples, 0.15%)</title><rect x="673" y="916" width="2" height="15" fill="rgb(215,173,14)"/><text x="676.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.15%)</title><rect x="673" y="932" width="2" height="15" fill="rgb(223,158,7)"/><text x="676.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.15%)</title><rect x="673" y="948" width="2" height="15" fill="rgb(226,113,10)"/><text x="676.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.15%)</title><rect x="673" y="964" width="2" height="15" fill="rgb(209,222,16)"/><text x="676.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.15%)</title><rect x="673" y="980" width="2" height="15" fill="rgb(234,70,21)"/><text x="676.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.15%)</title><rect x="673" y="996" width="2" height="15" fill="rgb(244,11,16)"/><text x="676.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.15%)</title><rect x="673" y="1012" width="2" height="15" fill="rgb(229,69,21)"/><text x="676.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.15%)</title><rect x="673" y="1028" width="2" height="15" fill="rgb(211,168,41)"/><text x="676.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.15%)</title><rect x="673" y="1044" width="2" height="15" fill="rgb(241,121,32)"/><text x="676.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.15%)</title><rect x="673" y="1060" width="2" height="15" fill="rgb(227,51,1)"/><text x="676.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.15%)</title><rect x="673" y="1076" width="2" height="15" fill="rgb(239,50,19)"/><text x="676.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.15%)</title><rect x="673" y="1092" width="2" height="15" fill="rgb(221,118,14)"/><text x="676.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.15%)</title><rect x="673" y="1108" width="2" height="15" fill="rgb(250,115,1)"/><text x="676.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.15%)</title><rect x="673" y="1124" width="2" height="15" fill="rgb(234,65,23)"/><text x="676.00" y="1134.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.15%)</title><rect x="673" y="1140" width="2" height="15" fill="rgb(217,109,42)"/><text x="676.00" y="1150.50"></text></g><g><title>_parse (sre_parse.py:488) (1 samples, 0.15%)</title><rect x="673" y="1156" width="2" height="15" fill="rgb(225,35,13)"/><text x="676.00" y="1166.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:4) (1 samples, 0.15%)</title><rect x="675" y="148" width="1" height="15" fill="rgb(252,126,36)"/><text x="678.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="675" y="164" width="1" height="15" fill="rgb(226,108,39)"/><text x="678.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="675" y="180" width="1" height="15" fill="rgb(237,35,35)"/><text x="678.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="675" y="196" width="1" height="15" fill="rgb(228,50,20)"/><text x="678.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="675" y="212" width="1" height="15" fill="rgb(254,193,44)"/><text x="678.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="675" y="228" width="1" height="15" fill="rgb(250,139,51)"/><text x="678.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="675" y="244" width="1" height="15" fill="rgb(208,88,15)"/><text x="678.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="675" y="260" width="1" height="15" fill="rgb(233,164,10)"/><text x="678.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="675" y="276" width="1" height="15" fill="rgb(248,210,4)"/><text x="678.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.15%)</title><rect x="675" y="292" width="1" height="15" fill="rgb(205,151,14)"/><text x="678.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="675" y="308" width="1" height="15" fill="rgb(216,189,16)"/><text x="678.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="675" y="324" width="1" height="15" fill="rgb(226,101,52)"/><text x="678.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="675" y="340" width="1" height="15" fill="rgb(222,218,26)"/><text x="678.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="675" y="356" width="1" height="15" fill="rgb(228,91,0)"/><text x="678.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="675" y="372" width="1" height="15" fill="rgb(220,158,16)"/><text x="678.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.15%)</title><rect x="675" y="388" width="1" height="15" fill="rgb(225,185,40)"/><text x="678.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="675" y="404" width="1" height="15" fill="rgb(208,228,5)"/><text x="678.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="675" y="420" width="1" height="15" fill="rgb(252,150,14)"/><text x="678.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="675" y="436" width="1" height="15" fill="rgb(225,56,45)"/><text x="678.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="675" y="452" width="1" height="15" fill="rgb(251,227,39)"/><text x="678.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="675" y="468" width="1" height="15" fill="rgb(246,189,32)"/><text x="678.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.15%)</title><rect x="675" y="484" width="1" height="15" fill="rgb(219,168,50)"/><text x="678.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="675" y="500" width="1" height="15" fill="rgb(237,90,13)"/><text x="678.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="675" y="516" width="1" height="15" fill="rgb(252,114,3)"/><text x="678.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="675" y="532" width="1" height="15" fill="rgb(207,102,15)"/><text x="678.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="675" y="548" width="1" height="15" fill="rgb(240,129,8)"/><text x="678.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="675" y="564" width="1" height="15" fill="rgb(215,22,16)"/><text x="678.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.15%)</title><rect x="675" y="580" width="1" height="15" fill="rgb(211,133,44)"/><text x="678.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="675" y="596" width="1" height="15" fill="rgb(209,11,30)"/><text x="678.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="675" y="612" width="1" height="15" fill="rgb(237,74,10)"/><text x="678.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="675" y="628" width="1" height="15" fill="rgb(237,190,11)"/><text x="678.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="675" y="644" width="1" height="15" fill="rgb(235,46,48)"/><text x="678.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="675" y="660" width="1" height="15" fill="rgb(236,112,35)"/><text x="678.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.15%)</title><rect x="675" y="676" width="1" height="15" fill="rgb(249,71,45)"/><text x="678.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="675" y="692" width="1" height="15" fill="rgb(250,124,28)"/><text x="678.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="675" y="708" width="1" height="15" fill="rgb(220,166,33)"/><text x="678.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="675" y="724" width="1" height="15" fill="rgb(236,131,50)"/><text x="678.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="675" y="740" width="1" height="15" fill="rgb(231,135,11)"/><text x="678.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="675" y="756" width="1" height="15" fill="rgb(228,198,2)"/><text x="678.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.15%)</title><rect x="675" y="772" width="1" height="15" fill="rgb(243,48,49)"/><text x="678.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="675" y="788" width="1" height="15" fill="rgb(237,154,18)"/><text x="678.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="675" y="804" width="1" height="15" fill="rgb(217,34,6)"/><text x="678.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="675" y="820" width="1" height="15" fill="rgb(250,220,10)"/><text x="678.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="675" y="836" width="1" height="15" fill="rgb(221,207,50)"/><text x="678.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="675" y="852" width="1" height="15" fill="rgb(253,145,24)"/><text x="678.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="675" y="868" width="1" height="15" fill="rgb(246,148,40)"/><text x="678.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="675" y="884" width="1" height="15" fill="rgb(235,37,5)"/><text x="678.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.15%)</title><rect x="675" y="900" width="1" height="15" fill="rgb(242,51,3)"/><text x="678.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="675" y="916" width="1" height="15" fill="rgb(205,99,23)"/><text x="678.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="675" y="932" width="1" height="15" fill="rgb(230,22,1)"/><text x="678.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="675" y="948" width="1" height="15" fill="rgb(222,162,28)"/><text x="678.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="675" y="964" width="1" height="15" fill="rgb(246,188,34)"/><text x="678.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="675" y="980" width="1" height="15" fill="rgb(205,47,11)"/><text x="678.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="675" y="996" width="1" height="15" fill="rgb(219,149,36)"/><text x="678.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="675" y="1012" width="1" height="15" fill="rgb(230,97,41)"/><text x="678.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:92) (1 samples, 0.15%)</title><rect x="675" y="1028" width="1" height="15" fill="rgb(253,226,7)"/><text x="678.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2806) (1 samples, 0.15%)</title><rect x="675" y="1044" width="1" height="15" fill="rgb(246,19,17)"/><text x="678.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.15%)</title><rect x="675" y="1060" width="1" height="15" fill="rgb(249,154,29)"/><text x="678.00" y="1070.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:4892) (1 samples, 0.15%)</title><rect x="676" y="1108" width="2" height="15" fill="rgb(230,26,54)"/><text x="679.00" y="1118.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py:10747) (1 samples, 0.15%)</title><rect x="676" y="1124" width="2" height="15" fill="rgb(206,150,6)"/><text x="679.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="676" y="1140" width="2" height="15" fill="rgb(250,13,18)"/><text x="679.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="676" y="1156" width="2" height="15" fill="rgb(241,169,11)"/><text x="679.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="676" y="1172" width="2" height="15" fill="rgb(230,18,53)"/><text x="679.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="676" y="1188" width="2" height="15" fill="rgb(247,174,42)"/><text x="679.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="676" y="1204" width="2" height="15" fill="rgb(209,217,40)"/><text x="679.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="676" y="1220" width="2" height="15" fill="rgb(251,173,14)"/><text x="679.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="676" y="1236" width="2" height="15" fill="rgb(248,49,2)"/><text x="679.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/window.py:42) (1 samples, 0.15%)</title><rect x="676" y="1252" width="2" height="15" fill="rgb(237,205,1)"/><text x="679.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="676" y="1268" width="2" height="15" fill="rgb(219,142,47)"/><text x="679.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="676" y="1284" width="2" height="15" fill="rgb(228,48,32)"/><text x="679.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="676" y="1300" width="2" height="15" fill="rgb(237,131,36)"/><text x="679.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="676" y="1316" width="2" height="15" fill="rgb(208,205,23)"/><text x="679.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="676" y="1332" width="2" height="15" fill="rgb(252,203,23)"/><text x="679.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/base.py:99) (1 samples, 0.15%)</title><rect x="676" y="1348" width="2" height="15" fill="rgb(245,210,22)"/><text x="679.00" y="1358.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.30%)</title><rect x="676" y="436" width="4" height="15" fill="rgb(235,78,24)"/><text x="679.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="676" y="452" width="4" height="15" fill="rgb(217,227,36)"/><text x="679.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="676" y="468" width="4" height="15" fill="rgb(205,195,46)"/><text x="679.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="676" y="484" width="4" height="15" fill="rgb(218,154,25)"/><text x="679.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="676" y="500" width="4" height="15" fill="rgb(205,159,13)"/><text x="679.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="676" y="516" width="4" height="15" fill="rgb(247,91,45)"/><text x="679.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.30%)</title><rect x="676" y="532" width="4" height="15" fill="rgb(213,151,41)"/><text x="679.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="676" y="548" width="4" height="15" fill="rgb(238,37,32)"/><text x="679.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="676" y="564" width="4" height="15" fill="rgb(225,75,19)"/><text x="679.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="676" y="580" width="4" height="15" fill="rgb(233,98,6)"/><text x="679.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="676" y="596" width="4" height="15" fill="rgb(211,51,11)"/><text x="679.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="676" y="612" width="4" height="15" fill="rgb(209,108,20)"/><text x="679.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.30%)</title><rect x="676" y="628" width="4" height="15" fill="rgb(222,10,41)"/><text x="679.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="676" y="644" width="4" height="15" fill="rgb(207,8,30)"/><text x="679.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="676" y="660" width="4" height="15" fill="rgb(239,212,54)"/><text x="679.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="676" y="676" width="4" height="15" fill="rgb(251,45,5)"/><text x="679.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="676" y="692" width="4" height="15" fill="rgb(240,162,52)"/><text x="679.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="676" y="708" width="4" height="15" fill="rgb(251,99,41)"/><text x="679.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.30%)</title><rect x="676" y="724" width="4" height="15" fill="rgb(228,176,48)"/><text x="679.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="676" y="740" width="4" height="15" fill="rgb(248,69,42)"/><text x="679.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="676" y="756" width="4" height="15" fill="rgb(230,218,32)"/><text x="679.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="676" y="772" width="4" height="15" fill="rgb(250,50,1)"/><text x="679.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="676" y="788" width="4" height="15" fill="rgb(210,92,25)"/><text x="679.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="676" y="804" width="4" height="15" fill="rgb(220,73,53)"/><text x="679.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.30%)</title><rect x="676" y="820" width="4" height="15" fill="rgb(223,109,8)"/><text x="679.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="676" y="836" width="4" height="15" fill="rgb(244,148,33)"/><text x="679.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="676" y="852" width="4" height="15" fill="rgb(214,110,19)"/><text x="679.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="676" y="868" width="4" height="15" fill="rgb(221,175,21)"/><text x="679.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="676" y="884" width="4" height="15" fill="rgb(232,135,19)"/><text x="679.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="676" y="900" width="4" height="15" fill="rgb(240,108,33)"/><text x="679.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.30%)</title><rect x="676" y="916" width="4" height="15" fill="rgb(229,102,24)"/><text x="679.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="676" y="932" width="4" height="15" fill="rgb(238,125,34)"/><text x="679.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="676" y="948" width="4" height="15" fill="rgb(254,115,43)"/><text x="679.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="676" y="964" width="4" height="15" fill="rgb(244,176,37)"/><text x="679.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="676" y="980" width="4" height="15" fill="rgb(219,183,12)"/><text x="679.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="676" y="996" width="4" height="15" fill="rgb(254,55,40)"/><text x="679.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.30%)</title><rect x="676" y="1012" width="4" height="15" fill="rgb(220,112,18)"/><text x="679.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.30%)</title><rect x="676" y="1028" width="4" height="15" fill="rgb(211,99,48)"/><text x="679.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="676" y="1044" width="4" height="15" fill="rgb(205,16,2)"/><text x="679.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="676" y="1060" width="4" height="15" fill="rgb(246,74,41)"/><text x="679.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="676" y="1076" width="4" height="15" fill="rgb(220,198,14)"/><text x="679.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="676" y="1092" width="4" height="15" fill="rgb(218,133,33)"/><text x="679.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.15%)</title><rect x="678" y="1108" width="2" height="15" fill="rgb(251,121,49)"/><text x="681.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="678" y="1124" width="2" height="15" fill="rgb(235,105,4)"/><text x="681.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="678" y="1140" width="2" height="15" fill="rgb(230,5,40)"/><text x="681.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="678" y="1156" width="2" height="15" fill="rgb(216,33,18)"/><text x="681.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="678" y="1172" width="2" height="15" fill="rgb(235,21,49)"/><text x="681.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="678" y="1188" width="2" height="15" fill="rgb(231,68,38)"/><text x="681.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.15%)</title><rect x="678" y="1204" width="2" height="15" fill="rgb(236,193,53)"/><text x="681.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="678" y="1220" width="2" height="15" fill="rgb(246,90,36)"/><text x="681.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="678" y="1236" width="2" height="15" fill="rgb(211,125,26)"/><text x="681.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="678" y="1252" width="2" height="15" fill="rgb(249,148,48)"/><text x="681.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="678" y="1268" width="2" height="15" fill="rgb(214,1,52)"/><text x="681.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="678" y="1284" width="2" height="15" fill="rgb(245,45,13)"/><text x="681.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.15%)</title><rect x="678" y="1300" width="2" height="15" fill="rgb(217,107,24)"/><text x="681.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="678" y="1316" width="2" height="15" fill="rgb(213,88,40)"/><text x="681.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="678" y="1332" width="2" height="15" fill="rgb(251,30,42)"/><text x="681.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="678" y="1348" width="2" height="15" fill="rgb(207,85,45)"/><text x="681.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="678" y="1364" width="2" height="15" fill="rgb(232,170,32)"/><text x="681.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="678" y="1380" width="2" height="15" fill="rgb(237,206,30)"/><text x="681.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.15%)</title><rect x="678" y="1396" width="2" height="15" fill="rgb(211,186,19)"/><text x="681.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="678" y="1412" width="2" height="15" fill="rgb(254,41,48)"/><text x="681.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="678" y="1428" width="2" height="15" fill="rgb(250,71,39)"/><text x="681.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="678" y="1444" width="2" height="15" fill="rgb(252,228,20)"/><text x="681.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="678" y="1460" width="2" height="15" fill="rgb(218,138,42)"/><text x="681.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="678" y="1476" width="2" height="15" fill="rgb(219,28,15)"/><text x="681.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.15%)</title><rect x="678" y="1492" width="2" height="15" fill="rgb(213,92,18)"/><text x="681.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="678" y="1508" width="2" height="15" fill="rgb(218,193,27)"/><text x="681.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="678" y="1524" width="2" height="15" fill="rgb(247,76,29)"/><text x="681.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="678" y="1540" width="2" height="15" fill="rgb(233,36,14)"/><text x="681.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="678" y="1556" width="2" height="15" fill="rgb(254,179,47)"/><text x="681.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="678" y="1572" width="2" height="15" fill="rgb(219,49,35)"/><text x="681.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="678" y="1588" width="2" height="15" fill="rgb(219,127,37)"/><text x="681.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="678" y="1604" width="2" height="15" fill="rgb(252,195,19)"/><text x="681.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="678" y="1620" width="2" height="15" fill="rgb(221,18,45)"/><text x="681.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.15%)</title><rect x="678" y="1636" width="2" height="15" fill="rgb(209,166,46)"/><text x="681.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="678" y="1652" width="2" height="15" fill="rgb(237,26,44)"/><text x="681.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="678" y="1668" width="2" height="15" fill="rgb(236,117,42)"/><text x="681.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="678" y="1684" width="2" height="15" fill="rgb(248,144,42)"/><text x="681.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="678" y="1700" width="2" height="15" fill="rgb(239,114,47)"/><text x="681.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="678" y="1716" width="2" height="15" fill="rgb(244,134,51)"/><text x="681.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="678" y="1732" width="2" height="15" fill="rgb(218,221,12)"/><text x="681.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="678" y="1748" width="2" height="15" fill="rgb(235,106,24)"/><text x="681.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.15%)</title><rect x="678" y="1764" width="2" height="15" fill="rgb(213,141,8)"/><text x="681.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="678" y="1780" width="2" height="15" fill="rgb(213,198,2)"/><text x="681.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="678" y="1796" width="2" height="15" fill="rgb(205,47,4)"/><text x="681.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="678" y="1812" width="2" height="15" fill="rgb(227,186,28)"/><text x="681.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="678" y="1828" width="2" height="15" fill="rgb(252,148,45)"/><text x="681.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="678" y="1844" width="2" height="15" fill="rgb(236,67,43)"/><text x="681.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.15%)</title><rect x="678" y="1860" width="2" height="15" fill="rgb(213,111,40)"/><text x="681.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="678" y="1876" width="2" height="15" fill="rgb(206,127,23)"/><text x="681.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="678" y="1892" width="2" height="15" fill="rgb(227,45,34)"/><text x="681.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="678" y="1908" width="2" height="15" fill="rgb(248,72,10)"/><text x="681.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="678" y="1924" width="2" height="15" fill="rgb(213,198,49)"/><text x="681.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="678" y="1940" width="2" height="15" fill="rgb(218,96,49)"/><text x="681.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6341) (1 samples, 0.15%)</title><rect x="678" y="1956" width="2" height="15" fill="rgb(219,28,37)"/><text x="681.00" y="1966.50"></text></g><g><title>makeHTMLTags (pyparsing.py:5846) (1 samples, 0.15%)</title><rect x="678" y="1972" width="2" height="15" fill="rgb(224,62,6)"/><text x="681.00" y="1982.50"></text></g><g><title>_makeTags (pyparsing.py:5806) (1 samples, 0.15%)</title><rect x="678" y="1988" width="2" height="15" fill="rgb(251,138,8)"/><text x="681.00" y="1998.50"></text></g><g><title>setParseAction (pyparsing.py:1555) (1 samples, 0.15%)</title><rect x="678" y="2004" width="2" height="15" fill="rgb(206,225,18)"/><text x="681.00" y="2014.50"></text></g><g><title>_trim_arity (pyparsing.py:1308) (1 samples, 0.15%)</title><rect x="678" y="2020" width="2" height="15" fill="rgb(231,227,44)"/><text x="681.00" y="2030.50"></text></g><g><title>extract_stack (pyparsing.py:1292) (1 samples, 0.15%)</title><rect x="678" y="2036" width="2" height="15" fill="rgb(253,173,33)"/><text x="681.00" y="2046.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.15%)</title><rect x="678" y="2052" width="2" height="15" fill="rgb(226,65,35)"/><text x="681.00" y="2062.50"></text></g><g><title>extract (traceback.py:358) (1 samples, 0.15%)</title><rect x="678" y="2068" width="2" height="15" fill="rgb(241,106,31)"/><text x="681.00" y="2078.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.15%)</title><rect x="680" y="1460" width="2" height="15" fill="rgb(229,87,41)"/><text x="683.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.15%)</title><rect x="680" y="1476" width="2" height="15" fill="rgb(231,2,4)"/><text x="683.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.15%)</title><rect x="680" y="1492" width="2" height="15" fill="rgb(248,221,45)"/><text x="683.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.15%)</title><rect x="680" y="1508" width="2" height="15" fill="rgb(209,100,51)"/><text x="683.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.15%)</title><rect x="680" y="1524" width="2" height="15" fill="rgb(243,88,11)"/><text x="683.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.15%)</title><rect x="680" y="1540" width="2" height="15" fill="rgb(247,226,52)"/><text x="683.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.15%)</title><rect x="680" y="1556" width="2" height="15" fill="rgb(219,163,17)"/><text x="683.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.15%)</title><rect x="680" y="1572" width="2" height="15" fill="rgb(216,72,53)"/><text x="683.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.15%)</title><rect x="680" y="1588" width="2" height="15" fill="rgb(246,124,49)"/><text x="683.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.15%)</title><rect x="680" y="1604" width="2" height="15" fill="rgb(254,120,32)"/><text x="683.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.15%)</title><rect x="680" y="1620" width="2" height="15" fill="rgb(247,170,23)"/><text x="683.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.15%)</title><rect x="680" y="1636" width="2" height="15" fill="rgb(207,160,1)"/><text x="683.00" y="1646.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.15%)</title><rect x="680" y="1652" width="2" height="15" fill="rgb(237,158,9)"/><text x="683.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.15%)</title><rect x="682" y="1492" width="1" height="15" fill="rgb(210,164,8)"/><text x="685.00" y="1502.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.15%)</title><rect x="682" y="1508" width="1" height="15" fill="rgb(247,146,7)"/><text x="685.00" y="1518.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.15%)</title><rect x="682" y="1524" width="1" height="15" fill="rgb(253,1,53)"/><text x="685.00" y="1534.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.15%)</title><rect x="682" y="1540" width="1" height="15" fill="rgb(217,150,37)"/><text x="685.00" y="1550.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.15%)</title><rect x="682" y="1556" width="1" height="15" fill="rgb(211,193,4)"/><text x="685.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.15%)</title><rect x="683" y="1572" width="2" height="15" fill="rgb(251,192,32)"/><text x="686.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.15%)</title><rect x="683" y="1588" width="2" height="15" fill="rgb(233,212,7)"/><text x="686.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.15%)</title><rect x="683" y="1604" width="2" height="15" fill="rgb(207,142,30)"/><text x="686.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:588) (1 samples, 0.15%)</title><rect x="683" y="1620" width="2" height="15" fill="rgb(252,89,45)"/><text x="686.00" y="1630.50"></text></g><g><title>_compile (jinja2/environment.py:551) (1 samples, 0.15%)</title><rect x="683" y="1636" width="2" height="15" fill="rgb(249,21,29)"/><text x="686.00" y="1646.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="683" y="1652" width="2" height="15" fill="rgb(210,0,4)"/><text x="686.00" y="1662.50"></text></g><g><title>0x7f0eaa2ebdb0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="683" y="1668" width="2" height="15" fill="rgb(245,45,3)"/><text x="686.00" y="1678.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:4) (14 samples, 2.07%)</title><rect x="662" y="52" width="25" height="15" fill="rgb(212,71,44)"/><text x="665.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 2.07%)</title><rect x="662" y="68" width="25" height="15" fill="rgb(228,20,16)"/><text x="665.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 2.07%)</title><rect x="662" y="84" width="25" height="15" fill="rgb(242,229,49)"/><text x="665.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 2.07%)</title><rect x="662" y="100" width="25" height="15" fill="rgb(224,73,36)"/><text x="665.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 2.07%)</title><rect x="662" y="116" width="25" height="15" fill="rgb(252,65,7)"/><text x="665.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 2.07%)</title><rect x="662" y="132" width="25" height="15" fill="rgb(230,66,32)"/><text x="665.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:7) (6 samples, 0.89%)</title><rect x="676" y="148" width="11" height="15" fill="rgb(215,167,17)"/><text x="679.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.89%)</title><rect x="676" y="164" width="11" height="15" fill="rgb(216,36,11)"/><text x="679.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.89%)</title><rect x="676" y="180" width="11" height="15" fill="rgb(210,192,1)"/><text x="679.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.89%)</title><rect x="676" y="196" width="11" height="15" fill="rgb(226,124,3)"/><text x="679.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.89%)</title><rect x="676" y="212" width="11" height="15" fill="rgb(217,179,5)"/><text x="679.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.89%)</title><rect x="676" y="228" width="11" height="15" fill="rgb(221,40,21)"/><text x="679.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 0.89%)</title><rect x="676" y="244" width="11" height="15" fill="rgb(213,172,0)"/><text x="679.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.89%)</title><rect x="676" y="260" width="11" height="15" fill="rgb(205,96,13)"/><text x="679.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.89%)</title><rect x="676" y="276" width="11" height="15" fill="rgb(205,205,52)"/><text x="679.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.89%)</title><rect x="676" y="292" width="11" height="15" fill="rgb(217,134,48)"/><text x="679.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.89%)</title><rect x="676" y="308" width="11" height="15" fill="rgb(253,106,53)"/><text x="679.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.89%)</title><rect x="676" y="324" width="11" height="15" fill="rgb(247,223,40)"/><text x="679.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 0.89%)</title><rect x="676" y="340" width="11" height="15" fill="rgb(226,211,0)"/><text x="679.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.89%)</title><rect x="676" y="356" width="11" height="15" fill="rgb(251,165,10)"/><text x="679.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.89%)</title><rect x="676" y="372" width="11" height="15" fill="rgb(234,223,6)"/><text x="679.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.89%)</title><rect x="676" y="388" width="11" height="15" fill="rgb(207,176,9)"/><text x="679.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.89%)</title><rect x="676" y="404" width="11" height="15" fill="rgb(251,200,39)"/><text x="679.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.89%)</title><rect x="676" y="420" width="11" height="15" fill="rgb(215,131,18)"/><text x="679.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.59%)</title><rect x="680" y="436" width="7" height="15" fill="rgb(253,191,11)"/><text x="683.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.59%)</title><rect x="680" y="452" width="7" height="15" fill="rgb(237,74,47)"/><text x="683.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.59%)</title><rect x="680" y="468" width="7" height="15" fill="rgb(234,89,21)"/><text x="683.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.59%)</title><rect x="680" y="484" width="7" height="15" fill="rgb(233,206,39)"/><text x="683.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.59%)</title><rect x="680" y="500" width="7" height="15" fill="rgb(235,18,48)"/><text x="683.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.59%)</title><rect x="680" y="516" width="7" height="15" fill="rgb(231,44,53)"/><text x="683.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.59%)</title><rect x="680" y="532" width="7" height="15" fill="rgb(252,30,0)"/><text x="683.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.59%)</title><rect x="680" y="548" width="7" height="15" fill="rgb(246,97,30)"/><text x="683.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.59%)</title><rect x="680" y="564" width="7" height="15" fill="rgb(246,40,38)"/><text x="683.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.59%)</title><rect x="680" y="580" width="7" height="15" fill="rgb(217,10,41)"/><text x="683.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.59%)</title><rect x="680" y="596" width="7" height="15" fill="rgb(238,159,40)"/><text x="683.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.59%)</title><rect x="680" y="612" width="7" height="15" fill="rgb(253,186,41)"/><text x="683.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.59%)</title><rect x="680" y="628" width="7" height="15" fill="rgb(227,65,21)"/><text x="683.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.59%)</title><rect x="680" y="644" width="7" height="15" fill="rgb(254,101,45)"/><text x="683.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.59%)</title><rect x="680" y="660" width="7" height="15" fill="rgb(246,14,27)"/><text x="683.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.59%)</title><rect x="680" y="676" width="7" height="15" fill="rgb(249,141,46)"/><text x="683.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.59%)</title><rect x="680" y="692" width="7" height="15" fill="rgb(226,227,45)"/><text x="683.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.59%)</title><rect x="680" y="708" width="7" height="15" fill="rgb(240,26,18)"/><text x="683.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.59%)</title><rect x="680" y="724" width="7" height="15" fill="rgb(229,184,28)"/><text x="683.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.59%)</title><rect x="680" y="740" width="7" height="15" fill="rgb(223,78,19)"/><text x="683.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.59%)</title><rect x="680" y="756" width="7" height="15" fill="rgb(218,56,5)"/><text x="683.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.59%)</title><rect x="680" y="772" width="7" height="15" fill="rgb(214,109,51)"/><text x="683.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.59%)</title><rect x="680" y="788" width="7" height="15" fill="rgb(230,200,27)"/><text x="683.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.59%)</title><rect x="680" y="804" width="7" height="15" fill="rgb(206,154,26)"/><text x="683.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.59%)</title><rect x="680" y="820" width="7" height="15" fill="rgb(211,138,33)"/><text x="683.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.59%)</title><rect x="680" y="836" width="7" height="15" fill="rgb(232,175,0)"/><text x="683.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.59%)</title><rect x="680" y="852" width="7" height="15" fill="rgb(236,183,45)"/><text x="683.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.59%)</title><rect x="680" y="868" width="7" height="15" fill="rgb(205,121,15)"/><text x="683.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.59%)</title><rect x="680" y="884" width="7" height="15" fill="rgb(254,57,42)"/><text x="683.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.59%)</title><rect x="680" y="900" width="7" height="15" fill="rgb(222,161,42)"/><text x="683.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.59%)</title><rect x="680" y="916" width="7" height="15" fill="rgb(222,109,52)"/><text x="683.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.59%)</title><rect x="680" y="932" width="7" height="15" fill="rgb(237,173,37)"/><text x="683.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.59%)</title><rect x="680" y="948" width="7" height="15" fill="rgb(211,33,32)"/><text x="683.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.59%)</title><rect x="680" y="964" width="7" height="15" fill="rgb(232,168,12)"/><text x="683.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.59%)</title><rect x="680" y="980" width="7" height="15" fill="rgb(225,9,33)"/><text x="683.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.59%)</title><rect x="680" y="996" width="7" height="15" fill="rgb(230,214,27)"/><text x="683.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.59%)</title><rect x="680" y="1012" width="7" height="15" fill="rgb(233,71,4)"/><text x="683.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.59%)</title><rect x="680" y="1028" width="7" height="15" fill="rgb(251,118,23)"/><text x="683.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.59%)</title><rect x="680" y="1044" width="7" height="15" fill="rgb(248,51,41)"/><text x="683.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.59%)</title><rect x="680" y="1060" width="7" height="15" fill="rgb(205,5,24)"/><text x="683.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.59%)</title><rect x="680" y="1076" width="7" height="15" fill="rgb(230,0,15)"/><text x="683.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.59%)</title><rect x="680" y="1092" width="7" height="15" fill="rgb(235,194,42)"/><text x="683.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 0.59%)</title><rect x="680" y="1108" width="7" height="15" fill="rgb(223,210,15)"/><text x="683.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.59%)</title><rect x="680" y="1124" width="7" height="15" fill="rgb(213,10,48)"/><text x="683.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.59%)</title><rect x="680" y="1140" width="7" height="15" fill="rgb(233,102,41)"/><text x="683.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.59%)</title><rect x="680" y="1156" width="7" height="15" fill="rgb(245,29,2)"/><text x="683.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.59%)</title><rect x="680" y="1172" width="7" height="15" fill="rgb(214,185,5)"/><text x="683.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.59%)</title><rect x="680" y="1188" width="7" height="15" fill="rgb(208,1,28)"/><text x="683.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.59%)</title><rect x="680" y="1204" width="7" height="15" fill="rgb(232,162,34)"/><text x="683.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.59%)</title><rect x="680" y="1220" width="7" height="15" fill="rgb(207,11,38)"/><text x="683.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 0.59%)</title><rect x="680" y="1236" width="7" height="15" fill="rgb(254,65,52)"/><text x="683.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.59%)</title><rect x="680" y="1252" width="7" height="15" fill="rgb(210,224,40)"/><text x="683.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.59%)</title><rect x="680" y="1268" width="7" height="15" fill="rgb(225,60,7)"/><text x="683.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.59%)</title><rect x="680" y="1284" width="7" height="15" fill="rgb(227,133,51)"/><text x="683.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.59%)</title><rect x="680" y="1300" width="7" height="15" fill="rgb(209,23,3)"/><text x="683.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.59%)</title><rect x="680" y="1316" width="7" height="15" fill="rgb(249,6,49)"/><text x="683.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.59%)</title><rect x="680" y="1332" width="7" height="15" fill="rgb(229,195,22)"/><text x="683.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.59%)</title><rect x="680" y="1348" width="7" height="15" fill="rgb(227,193,53)"/><text x="683.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 0.59%)</title><rect x="680" y="1364" width="7" height="15" fill="rgb(249,25,54)"/><text x="683.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.59%)</title><rect x="680" y="1380" width="7" height="15" fill="rgb(247,163,32)"/><text x="683.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.59%)</title><rect x="680" y="1396" width="7" height="15" fill="rgb(241,112,23)"/><text x="683.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.59%)</title><rect x="680" y="1412" width="7" height="15" fill="rgb(206,185,16)"/><text x="683.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.59%)</title><rect x="680" y="1428" width="7" height="15" fill="rgb(224,191,7)"/><text x="683.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.59%)</title><rect x="680" y="1444" width="7" height="15" fill="rgb(214,61,30)"/><text x="683.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (3 samples, 0.44%)</title><rect x="682" y="1460" width="5" height="15" fill="rgb(237,36,24)"/><text x="685.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.44%)</title><rect x="682" y="1476" width="5" height="15" fill="rgb(235,62,10)"/><text x="685.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.30%)</title><rect x="683" y="1492" width="4" height="15" fill="rgb(206,228,41)"/><text x="686.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.30%)</title><rect x="683" y="1508" width="4" height="15" fill="rgb(234,29,27)"/><text x="686.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.30%)</title><rect x="683" y="1524" width="4" height="15" fill="rgb(239,125,46)"/><text x="686.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.30%)</title><rect x="683" y="1540" width="4" height="15" fill="rgb(216,130,28)"/><text x="686.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (2 samples, 0.30%)</title><rect x="683" y="1556" width="4" height="15" fill="rgb(224,67,8)"/><text x="686.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.15%)</title><rect x="685" y="1572" width="2" height="15" fill="rgb(205,20,13)"/><text x="688.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="685" y="1588" width="2" height="15" fill="rgb(241,51,29)"/><text x="688.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="685" y="1604" width="2" height="15" fill="rgb(230,98,26)"/><text x="688.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="685" y="1620" width="2" height="15" fill="rgb(209,81,2)"/><text x="688.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="685" y="1636" width="2" height="15" fill="rgb(226,109,52)"/><text x="688.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="685" y="1652" width="2" height="15" fill="rgb(209,19,2)"/><text x="688.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.15%)</title><rect x="685" y="1668" width="2" height="15" fill="rgb(205,128,30)"/><text x="688.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="685" y="1684" width="2" height="15" fill="rgb(251,48,2)"/><text x="688.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="685" y="1700" width="2" height="15" fill="rgb(237,66,19)"/><text x="688.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="685" y="1716" width="2" height="15" fill="rgb(245,226,14)"/><text x="688.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="685" y="1732" width="2" height="15" fill="rgb(217,222,49)"/><text x="688.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="685" y="1748" width="2" height="15" fill="rgb(240,6,41)"/><text x="688.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:15) (1 samples, 0.15%)</title><rect x="685" y="1764" width="2" height="15" fill="rgb(251,83,45)"/><text x="688.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="685" y="1780" width="2" height="15" fill="rgb(251,91,17)"/><text x="688.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="685" y="1796" width="2" height="15" fill="rgb(226,207,5)"/><text x="688.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="685" y="1812" width="2" height="15" fill="rgb(222,39,22)"/><text x="688.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="685" y="1828" width="2" height="15" fill="rgb(212,137,41)"/><text x="688.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="685" y="1844" width="2" height="15" fill="rgb(237,40,17)"/><text x="688.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="685" y="1860" width="2" height="15" fill="rgb(220,21,41)"/><text x="688.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="685" y="1876" width="2" height="15" fill="rgb(239,123,1)"/><text x="688.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py:19) (1 samples, 0.15%)</title><rect x="685" y="1892" width="2" height="15" fill="rgb(224,90,39)"/><text x="688.00" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="685" y="1908" width="2" height="15" fill="rgb(248,216,28)"/><text x="688.00" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="685" y="1924" width="2" height="15" fill="rgb(207,214,33)"/><text x="688.00" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="685" y="1940" width="2" height="15" fill="rgb(225,170,22)"/><text x="688.00" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="685" y="1956" width="2" height="15" fill="rgb(253,9,36)"/><text x="688.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="685" y="1972" width="2" height="15" fill="rgb(227,197,30)"/><text x="688.00" y="1982.50"></text></g><g><title>&lt;module&gt; (jinja2/utils.py:28) (1 samples, 0.15%)</title><rect x="685" y="1988" width="2" height="15" fill="rgb(220,130,24)"/><text x="688.00" y="1998.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.15%)</title><rect x="685" y="2004" width="2" height="15" fill="rgb(234,39,34)"/><text x="688.00" y="2014.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.15%)</title><rect x="685" y="2020" width="2" height="15" fill="rgb(232,38,52)"/><text x="688.00" y="2030.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.15%)</title><rect x="685" y="2036" width="2" height="15" fill="rgb(205,163,16)"/><text x="688.00" y="2046.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.15%)</title><rect x="685" y="2052" width="2" height="15" fill="rgb(215,0,22)"/><text x="688.00" y="2062.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.15%)</title><rect x="685" y="2068" width="2" height="15" fill="rgb(209,209,49)"/><text x="688.00" y="2078.50"></text></g><g><title>_parse (sre_parse.py:493) (1 samples, 0.15%)</title><rect x="685" y="2084" width="2" height="15" fill="rgb(243,91,21)"/><text x="688.00" y="2094.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.15%)</title><rect x="685" y="2100" width="2" height="15" fill="rgb(240,25,22)"/><text x="688.00" y="2110.50"></text></g><g><title>__next (sre_parse.py:248) (1 samples, 0.15%)</title><rect x="685" y="2116" width="2" height="15" fill="rgb(249,114,31)"/><text x="688.00" y="2126.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:169) (1 samples, 0.15%)</title><rect x="687" y="212" width="2" height="15" fill="rgb(237,116,44)"/><text x="690.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.15%)</title><rect x="687" y="228" width="2" height="15" fill="rgb(248,101,54)"/><text x="690.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.15%)</title><rect x="687" y="244" width="2" height="15" fill="rgb(214,118,16)"/><text x="690.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:946) (1 samples, 0.15%)</title><rect x="687" y="260" width="2" height="15" fill="rgb(225,205,13)"/><text x="690.00" y="270.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:28) (2 samples, 0.30%)</title><rect x="687" y="84" width="3" height="15" fill="rgb(213,188,23)"/><text x="690.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.30%)</title><rect x="687" y="100" width="3" height="15" fill="rgb(241,150,9)"/><text x="690.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.30%)</title><rect x="687" y="116" width="3" height="15" fill="rgb(210,153,41)"/><text x="690.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.30%)</title><rect x="687" y="132" width="3" height="15" fill="rgb(212,226,15)"/><text x="690.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.30%)</title><rect x="687" y="148" width="3" height="15" fill="rgb(249,137,41)"/><text x="690.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.30%)</title><rect x="687" y="164" width="3" height="15" fill="rgb(222,167,46)"/><text x="690.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.30%)</title><rect x="687" y="180" width="3" height="15" fill="rgb(251,223,38)"/><text x="690.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:60) (2 samples, 0.30%)</title><rect x="687" y="196" width="3" height="15" fill="rgb(215,88,19)"/><text x="690.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.15%)</title><rect x="689" y="212" width="1" height="15" fill="rgb(230,55,45)"/><text x="692.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:123) (1 samples, 0.15%)</title><rect x="689" y="228" width="1" height="15" fill="rgb(245,221,38)"/><text x="692.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py:94) (1 samples, 0.15%)</title><rect x="689" y="244" width="1" height="15" fill="rgb(215,147,47)"/><text x="692.00" y="254.50"></text></g><g><title>0x7f0e6af88422 (?) (1 samples, 0.15%)</title><rect x="690" y="244" width="2" height="15" fill="rgb(239,8,12)"/><text x="693.00" y="254.50"></text></g><g><title>0x7f0e6af8e89e (?) (1 samples, 0.15%)</title><rect x="690" y="260" width="2" height="15" fill="rgb(222,4,34)"/><text x="693.00" y="270.50"></text></g><g><title>0x7f0e6af8e74f (?) (1 samples, 0.15%)</title><rect x="690" y="276" width="2" height="15" fill="rgb(242,226,28)"/><text x="693.00" y="286.50"></text></g><g><title>0x7f0e6af94a3a (?) (1 samples, 0.15%)</title><rect x="690" y="292" width="2" height="15" fill="rgb(235,172,52)"/><text x="693.00" y="302.50"></text></g><g><title>0x7f0e742b0ab9 (libgomp.so.1.0.0) (1 samples, 0.15%)</title><rect x="690" y="308" width="2" height="15" fill="rgb(250,166,38)"/><text x="693.00" y="318.50"></text></g><g><title>0x7f0e742b1ea9 (libgomp.so.1.0.0) (1 samples, 0.15%)</title><rect x="690" y="324" width="2" height="15" fill="rgb(219,198,11)"/><text x="693.00" y="334.50"></text></g><g><title>0x7f0e742b0ab9 (libgomp.so.1.0.0) (1 samples, 0.15%)</title><rect x="692" y="452" width="2" height="15" fill="rgb(245,171,48)"/><text x="695.00" y="462.50"></text></g><g><title>0x7f0e742b1ea0 (libgomp.so.1.0.0) (1 samples, 0.15%)</title><rect x="692" y="468" width="2" height="15" fill="rgb(230,92,9)"/><text x="695.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:525) (3 samples, 0.44%)</title><rect x="696" y="484" width="5" height="15" fill="rgb(252,212,42)"/><text x="699.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:604) (2 samples, 0.30%)</title><rect x="701" y="484" width="3" height="15" fill="rgb(232,138,19)"/><text x="704.00" y="494.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_end (stl_tree.h:681) (1 samples, 0.15%)</title><rect x="704" y="532" width="2" height="15" fill="rgb(224,136,13)"/><text x="707.00" y="542.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1669) (3 samples, 0.44%)</title><rect x="706" y="532" width="5" height="15" fill="rgb(247,98,32)"/><text x="709.00" y="542.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1670) (7 samples, 1.04%)</title><rect x="711" y="532" width="12" height="15" fill="rgb(217,117,0)"/><text x="714.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:605) (12 samples, 1.78%)</title><rect x="704" y="484" width="21" height="15" fill="rgb(206,171,21)"/><text x="707.00" y="494.50"></text></g><g><title>std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_map.h:1105) (12 samples, 1.78%)</title><rect x="704" y="500" width="21" height="15" fill="rgb(224,183,33)"/><text x="707.00" y="510.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_tree.h:2334) (12 samples, 1.78%)</title><rect x="704" y="516" width="21" height="15" fill="rgb(220,130,37)"/><text x="707.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1671) (1 samples, 0.15%)</title><rect x="723" y="532" width="2" height="15" fill="rgb(250,189,54)"/><text x="726.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:615) (3 samples, 0.44%)</title><rect x="725" y="484" width="5" height="15" fill="rgb(220,212,35)"/><text x="728.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:618) (1 samples, 0.15%)</title><rect x="730" y="484" width="2" height="15" fill="rgb(252,14,27)"/><text x="733.00" y="494.50"></text></g><g><title>std::_Bit_reference::operator bool (stl_bvector.h:81) (1 samples, 0.15%)</title><rect x="730" y="500" width="2" height="15" fill="rgb(213,168,45)"/><text x="733.00" y="510.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:18) (25 samples, 3.70%)</title><rect x="690" y="100" width="44" height="15" fill="rgb(227,112,41)"/><text x="693.00" y="110.50">prof..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (25 samples, 3.70%)</title><rect x="690" y="116" width="44" height="15" fill="rgb(205,56,52)"/><text x="693.00" y="126.50">time..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (25 samples, 3.70%)</title><rect x="690" y="132" width="44" height="15" fill="rgb(215,203,0)"/><text x="693.00" y="142.50">&lt;lam..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (25 samples, 3.70%)</title><rect x="690" y="148" width="44" height="15" fill="rgb(213,39,7)"/><text x="693.00" y="158.50">run ..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (25 samples, 3.70%)</title><rect x="690" y="164" width="44" height="15" fill="rgb(207,79,32)"/><text x="693.00" y="174.50">_run..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (25 samples, 3.70%)</title><rect x="690" y="180" width="44" height="15" fill="rgb(243,49,23)"/><text x="693.00" y="190.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (25 samples, 3.70%)</title><rect x="690" y="196" width="44" height="15" fill="rgb(237,133,48)"/><text x="693.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (25 samples, 3.70%)</title><rect x="690" y="212" width="44" height="15" fill="rgb(205,37,44)"/><text x="693.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (25 samples, 3.70%)</title><rect x="690" y="228" width="44" height="15" fill="rgb(213,39,49)"/><text x="693.00" y="238.50">_run..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (24 samples, 3.55%)</title><rect x="692" y="244" width="42" height="15" fill="rgb(248,57,30)"/><text x="695.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (24 samples, 3.55%)</title><rect x="692" y="260" width="42" height="15" fill="rgb(220,210,36)"/><text x="695.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (24 samples, 3.55%)</title><rect x="692" y="276" width="42" height="15" fill="rgb(245,159,32)"/><text x="695.00" y="286.50">voi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (24 samples, 3.55%)</title><rect x="692" y="292" width="42" height="15" fill="rgb(243,145,10)"/><text x="695.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (24 samples, 3.55%)</title><rect x="692" y="308" width="42" height="15" fill="rgb(233,135,13)"/><text x="695.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (24 samples, 3.55%)</title><rect x="692" y="324" width="42" height="15" fill="rgb(240,196,32)"/><text x="695.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (24 samples, 3.55%)</title><rect x="692" y="340" width="42" height="15" fill="rgb(236,196,1)"/><text x="695.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h:538) (24 samples, 3.55%)</title><rect x="692" y="356" width="42" height="15" fill="rgb(215,64,19)"/><text x="695.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (24 samples, 3.55%)</title><rect x="692" y="372" width="42" height="15" fill="rgb(234,113,21)"/><text x="695.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (24 samples, 3.55%)</title><rect x="692" y="388" width="42" height="15" fill="rgb(230,157,34)"/><text x="695.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (24 samples, 3.55%)</title><rect x="692" y="404" width="42" height="15" fill="rgb(218,152,39)"/><text x="695.00" y="414.50">pyb..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (24 samples, 3.55%)</title><rect x="692" y="420" width="42" height="15" fill="rgb(227,121,52)"/><text x="695.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (24 samples, 3.55%)</title><rect x="692" y="436" width="42" height="15" fill="rgb(214,54,53)"/><text x="695.00" y="446.50">pyb..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (23 samples, 3.40%)</title><rect x="694" y="452" width="40" height="15" fill="rgb(222,227,26)"/><text x="697.00" y="462.50">GOM..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:427) (23 samples, 3.40%)</title><rect x="694" y="468" width="40" height="15" fill="rgb(240,20,24)"/><text x="697.00" y="478.50">Run..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:619) (1 samples, 0.15%)</title><rect x="732" y="484" width="2" height="15" fill="rgb(214,126,32)"/><text x="735.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:521) (1 samples, 0.15%)</title><rect x="734" y="484" width="2" height="15" fill="rgb(229,166,12)"/><text x="737.00" y="494.50"></text></g><g><title>std::isnan (cmath:642) (1 samples, 0.15%)</title><rect x="750" y="500" width="1" height="15" fill="rgb(245,93,39)"/><text x="753.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h:796) (1 samples, 0.15%)</title><rect x="751" y="500" width="2" height="15" fill="rgb(229,37,0)"/><text x="754.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:525) (11 samples, 1.63%)</title><rect x="736" y="484" width="19" height="15" fill="rgb(249,28,38)"/><text x="739.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.15%)</title><rect x="753" y="500" width="2" height="15" fill="rgb(251,217,1)"/><text x="756.00" y="510.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1669) (6 samples, 0.89%)</title><rect x="755" y="532" width="10" height="15" fill="rgb(227,221,17)"/><text x="758.00" y="542.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1670) (17 samples, 2.51%)</title><rect x="765" y="532" width="30" height="15" fill="rgb(244,163,24)"/><text x="768.00" y="542.50">st..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:605) (24 samples, 3.55%)</title><rect x="755" y="484" width="42" height="15" fill="rgb(222,213,33)"/><text x="758.00" y="494.50">Run..</text></g><g><title>std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_map.h:1105) (24 samples, 3.55%)</title><rect x="755" y="500" width="42" height="15" fill="rgb(243,203,24)"/><text x="758.00" y="510.50">std..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_tree.h:2334) (24 samples, 3.55%)</title><rect x="755" y="516" width="42" height="15" fill="rgb(208,115,12)"/><text x="758.00" y="526.50">std..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1671) (1 samples, 0.15%)</title><rect x="795" y="532" width="2" height="15" fill="rgb(217,72,49)"/><text x="798.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:606) (1 samples, 0.15%)</title><rect x="797" y="484" width="1" height="15" fill="rgb(209,11,8)"/><text x="800.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:609) (1 samples, 0.15%)</title><rect x="798" y="484" width="2" height="15" fill="rgb(245,87,5)"/><text x="801.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:615) (1 samples, 0.15%)</title><rect x="800" y="484" width="2" height="15" fill="rgb(214,67,38)"/><text x="803.00" y="494.50"></text></g><g><title>std::_Bit_reference::operator bool (stl_bvector.h:81) (1 samples, 0.15%)</title><rect x="802" y="500" width="2" height="15" fill="rgb(241,197,27)"/><text x="805.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:618) (2 samples, 0.30%)</title><rect x="802" y="484" width="3" height="15" fill="rgb(225,136,11)"/><text x="805.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (stl_bvector.h:857) (1 samples, 0.15%)</title><rect x="804" y="500" width="1" height="15" fill="rgb(242,224,22)"/><text x="807.00" y="510.50"></text></g><g><title>std::_Bit_iterator::operator* (stl_bvector.h:231) (1 samples, 0.15%)</title><rect x="804" y="516" width="1" height="15" fill="rgb(249,187,44)"/><text x="807.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:619) (1 samples, 0.15%)</title><rect x="805" y="484" width="2" height="15" fill="rgb(228,90,25)"/><text x="808.00" y="494.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:45) (70 samples, 10.36%)</title><rect x="687" y="52" width="122" height="15" fill="rgb(211,1,48)"/><text x="690.00" y="62.50">&lt;module&gt; (bench..</text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:44) (70 samples, 10.36%)</title><rect x="687" y="68" width="122" height="15" fill="rgb(247,66,21)"/><text x="690.00" y="78.50">profile_pyrt (b..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:29) (68 samples, 10.06%)</title><rect x="690" y="84" width="119" height="15" fill="rgb(235,155,50)"/><text x="693.00" y="94.50">setup_profile ..</text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:23) (43 samples, 6.36%)</title><rect x="734" y="100" width="75" height="15" fill="rgb(234,97,46)"/><text x="737.00" y="110.50">profile ..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (43 samples, 6.36%)</title><rect x="734" y="116" width="75" height="15" fill="rgb(236,61,10)"/><text x="737.00" y="126.50">time_pre..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (43 samples, 6.36%)</title><rect x="734" y="132" width="75" height="15" fill="rgb(215,102,48)"/><text x="737.00" y="142.50">&lt;lambda&gt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (43 samples, 6.36%)</title><rect x="734" y="148" width="75" height="15" fill="rgb(234,139,37)"/><text x="737.00" y="158.50">run (mlp..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (43 samples, 6.36%)</title><rect x="734" y="164" width="75" height="15" fill="rgb(217,128,33)"/><text x="737.00" y="174.50">_run_seq..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (43 samples, 6.36%)</title><rect x="734" y="180" width="75" height="15" fill="rgb(223,13,46)"/><text x="737.00" y="190.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (43 samples, 6.36%)</title><rect x="734" y="196" width="75" height="15" fill="rgb(243,30,37)"/><text x="737.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (43 samples, 6.36%)</title><rect x="734" y="212" width="75" height="15" fill="rgb(236,21,26)"/><text x="737.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (43 samples, 6.36%)</title><rect x="734" y="228" width="75" height="15" fill="rgb(229,113,34)"/><text x="737.00" y="238.50">_run (ml..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (43 samples, 6.36%)</title><rect x="734" y="244" width="75" height="15" fill="rgb(236,126,23)"/><text x="737.00" y="254.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (43 samples, 6.36%)</title><rect x="734" y="260" width="75" height="15" fill="rgb(253,18,7)"/><text x="737.00" y="270.50">void pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (43 samples, 6.36%)</title><rect x="734" y="276" width="75" height="15" fill="rgb(205,34,34)"/><text x="737.00" y="286.50">void pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (43 samples, 6.36%)</title><rect x="734" y="292" width="75" height="15" fill="rgb(233,23,0)"/><text x="737.00" y="302.50">pybind11..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (43 samples, 6.36%)</title><rect x="734" y="308" width="75" height="15" fill="rgb(235,191,13)"/><text x="737.00" y="318.50">pybind11..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (43 samples, 6.36%)</title><rect x="734" y="324" width="75" height="15" fill="rgb(244,33,43)"/><text x="737.00" y="334.50">pybind11..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (43 samples, 6.36%)</title><rect x="734" y="340" width="75" height="15" fill="rgb(241,166,43)"/><text x="737.00" y="350.50">pybind11..</text></g><g><title>pybind11::array::~array (numpy.h:538) (43 samples, 6.36%)</title><rect x="734" y="356" width="75" height="15" fill="rgb(229,139,17)"/><text x="737.00" y="366.50">pybind11..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (43 samples, 6.36%)</title><rect x="734" y="372" width="75" height="15" fill="rgb(221,97,39)"/><text x="737.00" y="382.50">pybind11..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (43 samples, 6.36%)</title><rect x="734" y="388" width="75" height="15" fill="rgb(227,167,53)"/><text x="737.00" y="398.50">pybind11..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (43 samples, 6.36%)</title><rect x="734" y="404" width="75" height="15" fill="rgb(236,225,33)"/><text x="737.00" y="414.50">pybind11..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (43 samples, 6.36%)</title><rect x="734" y="420" width="75" height="15" fill="rgb(210,140,34)"/><text x="737.00" y="430.50">RuntimeT..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (43 samples, 6.36%)</title><rect x="734" y="436" width="75" height="15" fill="rgb(250,7,34)"/><text x="737.00" y="446.50">pybind11..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (43 samples, 6.36%)</title><rect x="734" y="452" width="75" height="15" fill="rgb(209,227,21)"/><text x="737.00" y="462.50">GOMP_par..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:427) (43 samples, 6.36%)</title><rect x="734" y="468" width="75" height="15" fill="rgb(230,56,42)"/><text x="737.00" y="478.50">RuntimeT..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:644) (1 samples, 0.15%)</title><rect x="807" y="484" width="2" height="15" fill="rgb(219,62,47)"/><text x="810.00" y="494.50"></text></g><g><title>0x7f0e6a2a8ff9 (?) (1 samples, 0.15%)</title><rect x="809" y="212" width="2" height="15" fill="rgb(206,220,47)"/><text x="812.00" y="222.50"></text></g><g><title>0x7f0e6a2a3ef6 (?) (1 samples, 0.15%)</title><rect x="809" y="228" width="2" height="15" fill="rgb(249,154,4)"/><text x="812.00" y="238.50"></text></g><g><title>0x7f0e6a298962 (?) (1 samples, 0.15%)</title><rect x="809" y="244" width="2" height="15" fill="rgb(219,94,28)"/><text x="812.00" y="254.50"></text></g><g><title>0x7f0e6a2cc7a7 (?) (1 samples, 0.15%)</title><rect x="809" y="260" width="2" height="15" fill="rgb(219,96,1)"/><text x="812.00" y="270.50"></text></g><g><title>0x7f0e6a2cc379 (?) (1 samples, 0.15%)</title><rect x="809" y="276" width="2" height="15" fill="rgb(237,125,10)"/><text x="812.00" y="286.50"></text></g><g><title>0x7f0e6a72a8b8 (?) (1 samples, 0.15%)</title><rect x="809" y="292" width="2" height="15" fill="rgb(246,5,35)"/><text x="812.00" y="302.50"></text></g><g><title>0x7f0e6a728c7f (?) (1 samples, 0.15%)</title><rect x="809" y="308" width="2" height="15" fill="rgb(219,20,0)"/><text x="812.00" y="318.50"></text></g><g><title>0x7f0e6a73b99c (?) (1 samples, 0.15%)</title><rect x="809" y="324" width="2" height="15" fill="rgb(219,186,3)"/><text x="812.00" y="334.50"></text></g><g><title>0x7f0e6a45919e (?) (1 samples, 0.15%)</title><rect x="809" y="340" width="2" height="15" fill="rgb(214,108,34)"/><text x="812.00" y="350.50"></text></g><g><title>0x7f0e6a455ee0 (?) (1 samples, 0.15%)</title><rect x="809" y="356" width="2" height="15" fill="rgb(254,132,29)"/><text x="812.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (88 samples, 13.02%)</title><rect x="816" y="356" width="154" height="15" fill="rgb(221,42,50)"/><text x="819.00" y="366.50">onnxruntime::ml::Tr..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 13.61%)</title><rect x="811" y="340" width="160" height="15" fill="rgb(230,90,27)"/><text x="814.00" y="350.50">onnxruntime::ml::Tre..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="970" y="356" width="1" height="15" fill="rgb(209,93,16)"/><text x="973.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="970" y="372" width="1" height="15" fill="rgb(235,111,13)"/><text x="973.00" y="382.50"></text></g><g><title>0x7f0eaa2ea991 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="970" y="388" width="1" height="15" fill="rgb(231,173,6)"/><text x="973.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 14.20%)</title><rect x="811" y="260" width="167" height="15" fill="rgb(236,13,27)"/><text x="814.00" y="270.50">onnxruntime::Inferenc..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 14.20%)</title><rect x="811" y="276" width="167" height="15" fill="rgb(221,124,5)"/><text x="814.00" y="286.50">onnxruntime::Inferenc..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 14.20%)</title><rect x="811" y="292" width="167" height="15" fill="rgb(210,155,19)"/><text x="814.00" y="302.50">onnxruntime::utils::E..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 14.20%)</title><rect x="811" y="308" width="167" height="15" fill="rgb(240,10,8)"/><text x="814.00" y="318.50">onnxruntime::utils::E..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 14.20%)</title><rect x="811" y="324" width="167" height="15" fill="rgb(236,217,32)"/><text x="814.00" y="334.50">onnxruntime::Sequenti..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.59%)</title><rect x="971" y="340" width="7" height="15" fill="rgb(208,100,0)"/><text x="974.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.59%)</title><rect x="971" y="356" width="7" height="15" fill="rgb(216,218,0)"/><text x="974.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.44%)</title><rect x="973" y="372" width="5" height="15" fill="rgb(219,181,1)"/><text x="976.00" y="382.50"></text></g><g><title>0x7f0eaa2ebd67 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="977" y="388" width="1" height="15" fill="rgb(238,22,48)"/><text x="980.00" y="398.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:18) (98 samples, 14.50%)</title><rect x="809" y="100" width="171" height="15" fill="rgb(219,27,5)"/><text x="812.00" y="110.50">profile (bench_RandomF..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (98 samples, 14.50%)</title><rect x="809" y="116" width="171" height="15" fill="rgb(235,18,5)"/><text x="812.00" y="126.50">time_predict (mlprodic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (98 samples, 14.50%)</title><rect x="809" y="132" width="171" height="15" fill="rgb(248,117,41)"/><text x="812.00" y="142.50">&lt;lambda&gt; (mlprodict/as..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (98 samples, 14.50%)</title><rect x="809" y="148" width="171" height="15" fill="rgb(253,166,15)"/><text x="812.00" y="158.50">run (mlprodict/onnxrt/..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (98 samples, 14.50%)</title><rect x="809" y="164" width="171" height="15" fill="rgb(214,93,16)"/><text x="812.00" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (98 samples, 14.50%)</title><rect x="809" y="180" width="171" height="15" fill="rgb(225,84,17)"/><text x="812.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (onnxruntime/capi/session.py:136) (98 samples, 14.50%)</title><rect x="809" y="196" width="171" height="15" fill="rgb(205,76,25)"/><text x="812.00" y="206.50">run (onnxruntime/capi/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (97 samples, 14.35%)</title><rect x="811" y="212" width="169" height="15" fill="rgb(237,69,41)"/><text x="814.00" y="222.50">pybind11::cpp_functio..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (97 samples, 14.35%)</title><rect x="811" y="228" width="169" height="15" fill="rgb(236,177,44)"/><text x="814.00" y="238.50">void pybind11::cpp_fu..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (97 samples, 14.35%)</title><rect x="811" y="244" width="169" height="15" fill="rgb(230,29,5)"/><text x="814.00" y="254.50">onnxruntime::python::..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="978" y="260" width="2" height="15" fill="rgb(232,72,5)"/><text x="981.00" y="270.50"></text></g><g><title>0x7f0e6a26f8e0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="978" y="276" width="2" height="15" fill="rgb(244,48,52)"/><text x="981.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.15%)</title><rect x="984" y="148" width="1" height="15" fill="rgb(237,162,16)"/><text x="987.00" y="158.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="985" y="356" width="2" height="15" fill="rgb(222,104,48)"/><text x="988.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (112 samples, 16.57%)</title><rect x="987" y="356" width="196" height="15" fill="rgb(213,222,31)"/><text x="990.00" y="366.50">onnxruntime::ml::TreeEnse..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1183" y="356" width="1" height="15" fill="rgb(215,195,37)"/><text x="1186.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 17.01%)</title><rect x="985" y="340" width="201" height="15" fill="rgb(237,195,14)"/><text x="988.00" y="350.50">onnxruntime::ml::TreeEnsem..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1184" y="356" width="2" height="15" fill="rgb(232,154,23)"/><text x="1187.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1184" y="372" width="2" height="15" fill="rgb(212,181,29)"/><text x="1187.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="1186" y="356" width="2" height="15" fill="rgb(213,72,15)"/><text x="1189.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1186" y="372" width="2" height="15" fill="rgb(244,39,14)"/><text x="1189.00" y="382.50"></text></g><g><title>0x7f0eaa2ebd54 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1186" y="388" width="2" height="15" fill="rgb(231,104,2)"/><text x="1189.00" y="398.50"></text></g><g><title>all (676 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(229,2,14)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:52) (218 samples, 32.25%)</title><rect x="809" y="52" width="381" height="15" fill="rgb(209,9,51)"/><text x="812.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_m_cl..</text></g><g><title>profile_ort (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:51) (218 samples, 32.25%)</title><rect x="809" y="68" width="381" height="15" fill="rgb(240,4,24)"/><text x="812.00" y="78.50">profile_ort (bench_RandomForestClassifier_default_m..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:29) (218 samples, 32.25%)</title><rect x="809" y="84" width="381" height="15" fill="rgb(239,19,6)"/><text x="812.00" y="94.50">setup_profile (bench_RandomForestClassifier_default..</text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py:23) (120 samples, 17.75%)</title><rect x="980" y="100" width="210" height="15" fill="rgb(236,229,5)"/><text x="983.00" y="110.50">profile (bench_RandomForest..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (118 samples, 17.46%)</title><rect x="984" y="116" width="206" height="15" fill="rgb(223,166,39)"/><text x="987.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (118 samples, 17.46%)</title><rect x="984" y="132" width="206" height="15" fill="rgb(235,66,25)"/><text x="987.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (117 samples, 17.31%)</title><rect x="985" y="148" width="205" height="15" fill="rgb(225,98,32)"/><text x="988.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (117 samples, 17.31%)</title><rect x="985" y="164" width="205" height="15" fill="rgb(208,2,20)"/><text x="988.00" y="174.50">_run_whole_runtime (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (117 samples, 17.31%)</title><rect x="985" y="180" width="205" height="15" fill="rgb(230,190,10)"/><text x="988.00" y="190.50">run (mlprodict/onnxrt/ops_..</text></g><g><title>run (onnxruntime/capi/session.py:136) (117 samples, 17.31%)</title><rect x="985" y="196" width="205" height="15" fill="rgb(207,34,6)"/><text x="988.00" y="206.50">run (onnxruntime/capi/sess..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 17.31%)</title><rect x="985" y="212" width="205" height="15" fill="rgb(208,69,18)"/><text x="988.00" y="222.50">pybind11::cpp_function::di..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 17.31%)</title><rect x="985" y="228" width="205" height="15" fill="rgb(253,113,32)"/><text x="988.00" y="238.50">void pybind11::cpp_functio..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 17.31%)</title><rect x="985" y="244" width="205" height="15" fill="rgb(238,135,30)"/><text x="988.00" y="254.50">onnxruntime::python::addOb..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 17.31%)</title><rect x="985" y="260" width="205" height="15" fill="rgb(215,34,2)"/><text x="988.00" y="270.50">onnxruntime::InferenceSess..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 17.31%)</title><rect x="985" y="276" width="205" height="15" fill="rgb(207,49,49)"/><text x="988.00" y="286.50">onnxruntime::InferenceSess..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 17.31%)</title><rect x="985" y="292" width="205" height="15" fill="rgb(221,33,52)"/><text x="988.00" y="302.50">onnxruntime::utils::Execut..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 17.31%)</title><rect x="985" y="308" width="205" height="15" fill="rgb(253,177,43)"/><text x="988.00" y="318.50">onnxruntime::utils::Execut..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 17.31%)</title><rect x="985" y="324" width="205" height="15" fill="rgb(216,212,14)"/><text x="988.00" y="334.50">onnxruntime::SequentialExe..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(232,166,7)"/><text x="1189.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1188" y="356" width="2" height="15" fill="rgb(243,150,52)"/><text x="1191.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1188" y="372" width="2" height="15" fill="rgb(253,47,2)"/><text x="1191.00" y="382.50"></text></g></g></svg>