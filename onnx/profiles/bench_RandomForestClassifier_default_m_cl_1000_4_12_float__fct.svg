<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1926" onload="init(evt)" viewBox="0 0 1200 1926" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1926" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1909.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1909.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(249,226,16)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(238,218,27)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(246,195,36)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(209,196,15)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(226,61,7)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(219,23,11)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(209,59,32)"/><text x="13.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(217,57,46)"/><text x="13.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.15%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(242,12,54)"/><text x="13.00" y="1006.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(252,22,24)"/><text x="14.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(245,222,30)"/><text x="14.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(233,164,15)"/><text x="14.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(249,49,42)"/><text x="14.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(222,55,33)"/><text x="14.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(238,132,14)"/><text x="14.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="11" y="996" width="2" height="15" fill="rgb(239,34,37)"/><text x="14.00" y="1006.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.46%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(243,69,5)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(230,145,27)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(214,91,13)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(224,92,51)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(243,44,11)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(216,112,19)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.46%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(231,184,20)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(244,70,24)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(246,111,27)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(232,169,10)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(246,178,48)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(220,182,14)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.46%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(236,214,49)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(238,203,34)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(237,95,25)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(245,45,54)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(254,55,53)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(239,100,0)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.46%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(209,36,42)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(216,177,40)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(230,109,22)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(246,30,23)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(251,229,28)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(207,3,35)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(208,148,10)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(240,153,33)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(208,13,28)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.46%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(221,17,19)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(251,23,48)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(247,26,18)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(229,86,1)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(209,24,36)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(240,157,37)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.46%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(242,95,35)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.46%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(210,69,52)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.46%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(218,110,23)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="11" y="868" width="4" height="15" fill="rgb(225,185,0)"/><text x="14.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="11" y="884" width="4" height="15" fill="rgb(206,104,47)"/><text x="14.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="13" y="900" width="2" height="15" fill="rgb(212,210,46)"/><text x="16.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.15%)</title><rect x="13" y="916" width="2" height="15" fill="rgb(254,190,42)"/><text x="16.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(221,31,36)"/><text x="16.00" y="942.50"></text></g><g><title>0x7f7ac68a0237 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(248,11,53)"/><text x="16.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="500" width="2" height="15" fill="rgb(244,66,22)"/><text x="18.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="516" width="2" height="15" fill="rgb(231,214,50)"/><text x="18.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="532" width="2" height="15" fill="rgb(246,42,47)"/><text x="18.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="548" width="2" height="15" fill="rgb(235,35,0)"/><text x="18.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="564" width="2" height="15" fill="rgb(210,107,9)"/><text x="18.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.15%)</title><rect x="15" y="580" width="2" height="15" fill="rgb(235,195,50)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="596" width="2" height="15" fill="rgb(238,83,31)"/><text x="18.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="612" width="2" height="15" fill="rgb(231,127,30)"/><text x="18.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="628" width="2" height="15" fill="rgb(232,124,35)"/><text x="18.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="644" width="2" height="15" fill="rgb(237,28,24)"/><text x="18.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="660" width="2" height="15" fill="rgb(253,98,1)"/><text x="18.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.15%)</title><rect x="15" y="676" width="2" height="15" fill="rgb(250,207,30)"/><text x="18.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="692" width="2" height="15" fill="rgb(217,94,30)"/><text x="18.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="708" width="2" height="15" fill="rgb(230,208,20)"/><text x="18.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="724" width="2" height="15" fill="rgb(225,119,51)"/><text x="18.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="740" width="2" height="15" fill="rgb(245,105,10)"/><text x="18.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="756" width="2" height="15" fill="rgb(251,145,44)"/><text x="18.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.15%)</title><rect x="15" y="772" width="2" height="15" fill="rgb(252,174,15)"/><text x="18.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="788" width="2" height="15" fill="rgb(231,131,8)"/><text x="18.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="804" width="2" height="15" fill="rgb(237,151,4)"/><text x="18.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="820" width="2" height="15" fill="rgb(254,8,32)"/><text x="18.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="836" width="2" height="15" fill="rgb(252,6,33)"/><text x="18.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="852" width="2" height="15" fill="rgb(223,10,54)"/><text x="18.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.15%)</title><rect x="15" y="868" width="2" height="15" fill="rgb(220,94,3)"/><text x="18.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(212,16,22)"/><text x="18.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(217,123,26)"/><text x="18.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(226,209,19)"/><text x="18.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(214,223,3)"/><text x="18.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(219,181,31)"/><text x="18.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py) (1 samples, 0.15%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(215,170,24)"/><text x="18.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(222,99,29)"/><text x="18.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="996" width="2" height="15" fill="rgb(246,200,15)"/><text x="18.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1012" width="2" height="15" fill="rgb(218,3,9)"/><text x="18.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1028" width="2" height="15" fill="rgb(234,42,6)"/><text x="18.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1044" width="2" height="15" fill="rgb(214,171,41)"/><text x="18.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1060" width="2" height="15" fill="rgb(212,218,15)"/><text x="18.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1076" width="2" height="15" fill="rgb(241,3,49)"/><text x="18.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py) (1 samples, 0.15%)</title><rect x="15" y="1092" width="2" height="15" fill="rgb(214,208,46)"/><text x="18.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1108" width="2" height="15" fill="rgb(205,215,21)"/><text x="18.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1124" width="2" height="15" fill="rgb(249,47,11)"/><text x="18.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1140" width="2" height="15" fill="rgb(217,108,25)"/><text x="18.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1156" width="2" height="15" fill="rgb(222,190,47)"/><text x="18.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1172" width="2" height="15" fill="rgb(229,136,45)"/><text x="18.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1188" width="2" height="15" fill="rgb(232,160,15)"/><text x="18.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1204" width="2" height="15" fill="rgb(212,61,14)"/><text x="18.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py) (1 samples, 0.15%)</title><rect x="15" y="1220" width="2" height="15" fill="rgb(237,50,28)"/><text x="18.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1236" width="2" height="15" fill="rgb(237,63,40)"/><text x="18.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1252" width="2" height="15" fill="rgb(219,166,33)"/><text x="18.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1268" width="2" height="15" fill="rgb(211,95,42)"/><text x="18.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1284" width="2" height="15" fill="rgb(224,132,30)"/><text x="18.00" y="1294.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1300" width="2" height="15" fill="rgb(227,128,50)"/><text x="18.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="10" y="196" width="9" height="15" fill="rgb(224,203,29)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="10" y="212" width="9" height="15" fill="rgb(222,30,24)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="10" y="228" width="9" height="15" fill="rgb(238,170,11)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="10" y="244" width="9" height="15" fill="rgb(243,123,10)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.77%)</title><rect x="10" y="260" width="9" height="15" fill="rgb(228,32,1)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="10" y="276" width="9" height="15" fill="rgb(253,155,24)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.31%)</title><rect x="15" y="292" width="4" height="15" fill="rgb(246,31,2)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="308" width="4" height="15" fill="rgb(237,186,12)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="324" width="4" height="15" fill="rgb(245,211,15)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="340" width="4" height="15" fill="rgb(210,110,0)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="356" width="4" height="15" fill="rgb(253,161,31)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="372" width="4" height="15" fill="rgb(231,67,40)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.31%)</title><rect x="15" y="388" width="4" height="15" fill="rgb(226,226,43)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="404" width="4" height="15" fill="rgb(240,114,25)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="420" width="4" height="15" fill="rgb(226,52,6)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="436" width="4" height="15" fill="rgb(247,162,35)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="452" width="4" height="15" fill="rgb(226,124,27)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="468" width="4" height="15" fill="rgb(219,142,12)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.31%)</title><rect x="15" y="484" width="4" height="15" fill="rgb(243,181,38)"/><text x="18.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="500" width="2" height="15" fill="rgb(234,170,47)"/><text x="20.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="516" width="2" height="15" fill="rgb(222,158,38)"/><text x="20.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="532" width="2" height="15" fill="rgb(240,155,20)"/><text x="20.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="548" width="2" height="15" fill="rgb(232,207,19)"/><text x="20.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="564" width="2" height="15" fill="rgb(249,229,54)"/><text x="20.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="580" width="2" height="15" fill="rgb(219,111,52)"/><text x="20.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="596" width="2" height="15" fill="rgb(223,78,42)"/><text x="20.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.15%)</title><rect x="17" y="612" width="2" height="15" fill="rgb(222,156,51)"/><text x="20.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="628" width="2" height="15" fill="rgb(236,60,10)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="644" width="2" height="15" fill="rgb(233,221,36)"/><text x="20.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="660" width="2" height="15" fill="rgb(251,140,12)"/><text x="20.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="676" width="2" height="15" fill="rgb(232,115,11)"/><text x="20.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="692" width="2" height="15" fill="rgb(227,8,6)"/><text x="20.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.15%)</title><rect x="17" y="708" width="2" height="15" fill="rgb(214,155,29)"/><text x="20.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="724" width="2" height="15" fill="rgb(253,217,27)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="740" width="2" height="15" fill="rgb(207,26,50)"/><text x="20.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="756" width="2" height="15" fill="rgb(253,117,8)"/><text x="20.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="772" width="2" height="15" fill="rgb(215,28,25)"/><text x="20.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="788" width="2" height="15" fill="rgb(246,172,16)"/><text x="20.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.15%)</title><rect x="17" y="804" width="2" height="15" fill="rgb(219,195,31)"/><text x="20.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="820" width="2" height="15" fill="rgb(252,34,0)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="836" width="2" height="15" fill="rgb(221,115,12)"/><text x="20.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="852" width="2" height="15" fill="rgb(205,121,8)"/><text x="20.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="868" width="2" height="15" fill="rgb(218,209,21)"/><text x="20.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="884" width="2" height="15" fill="rgb(240,29,14)"/><text x="20.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.15%)</title><rect x="17" y="900" width="2" height="15" fill="rgb(251,139,43)"/><text x="20.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(252,172,9)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(210,26,13)"/><text x="20.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(222,85,45)"/><text x="20.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(246,44,45)"/><text x="20.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(228,178,17)"/><text x="20.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (1 samples, 0.15%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(245,9,20)"/><text x="20.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(207,20,41)"/><text x="20.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1028" width="2" height="15" fill="rgb(253,199,52)"/><text x="20.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1044" width="2" height="15" fill="rgb(229,96,16)"/><text x="20.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1060" width="2" height="15" fill="rgb(208,178,26)"/><text x="20.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1076" width="2" height="15" fill="rgb(211,221,31)"/><text x="20.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1092" width="2" height="15" fill="rgb(225,12,10)"/><text x="20.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="1108" width="2" height="15" fill="rgb(221,129,24)"/><text x="20.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1124" width="2" height="15" fill="rgb(205,123,33)"/><text x="20.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (1 samples, 0.15%)</title><rect x="17" y="1140" width="2" height="15" fill="rgb(220,122,43)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1156" width="2" height="15" fill="rgb(217,46,5)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1172" width="2" height="15" fill="rgb(212,100,17)"/><text x="20.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1188" width="2" height="15" fill="rgb(222,157,36)"/><text x="20.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="1204" width="2" height="15" fill="rgb(205,132,47)"/><text x="20.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1220" width="2" height="15" fill="rgb(210,182,24)"/><text x="20.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py) (1 samples, 0.15%)</title><rect x="17" y="1236" width="2" height="15" fill="rgb(232,3,10)"/><text x="20.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1252" width="2" height="15" fill="rgb(243,57,25)"/><text x="20.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1268" width="2" height="15" fill="rgb(230,71,14)"/><text x="20.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1284" width="2" height="15" fill="rgb(238,211,22)"/><text x="20.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="1300" width="2" height="15" fill="rgb(223,3,39)"/><text x="20.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1316" width="2" height="15" fill="rgb(208,128,28)"/><text x="20.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py) (1 samples, 0.15%)</title><rect x="17" y="1332" width="2" height="15" fill="rgb(238,36,49)"/><text x="20.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1348" width="2" height="15" fill="rgb(220,89,19)"/><text x="20.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1364" width="2" height="15" fill="rgb(219,102,9)"/><text x="20.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1380" width="2" height="15" fill="rgb(212,224,20)"/><text x="20.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="1396" width="2" height="15" fill="rgb(211,106,9)"/><text x="20.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1412" width="2" height="15" fill="rgb(214,27,36)"/><text x="20.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py) (1 samples, 0.15%)</title><rect x="17" y="1428" width="2" height="15" fill="rgb(232,24,54)"/><text x="20.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1444" width="2" height="15" fill="rgb(211,221,4)"/><text x="20.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1460" width="2" height="15" fill="rgb(239,216,36)"/><text x="20.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1476" width="2" height="15" fill="rgb(231,180,12)"/><text x="20.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="1492" width="2" height="15" fill="rgb(221,80,40)"/><text x="20.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1508" width="2" height="15" fill="rgb(244,54,32)"/><text x="20.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py) (1 samples, 0.15%)</title><rect x="17" y="1524" width="2" height="15" fill="rgb(228,55,46)"/><text x="20.00" y="1534.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1540" width="2" height="15" fill="rgb(234,190,12)"/><text x="20.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1556" width="2" height="15" fill="rgb(242,17,44)"/><text x="20.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1572" width="2" height="15" fill="rgb(205,67,52)"/><text x="20.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1588" width="2" height="15" fill="rgb(209,2,34)"/><text x="20.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1604" width="2" height="15" fill="rgb(215,60,30)"/><text x="20.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="1620" width="2" height="15" fill="rgb(233,168,54)"/><text x="20.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1636" width="2" height="15" fill="rgb(209,103,23)"/><text x="20.00" y="1646.50"></text></g><g><title>&lt;module&gt; (psutil/_pslinux.py) (1 samples, 0.15%)</title><rect x="17" y="1652" width="2" height="15" fill="rgb(220,129,44)"/><text x="20.00" y="1662.50"></text></g><g><title>Process (psutil/_pslinux.py) (1 samples, 0.15%)</title><rect x="17" y="1668" width="2" height="15" fill="rgb(225,58,0)"/><text x="20.00" y="1678.50"></text></g><g><title>wrap_exceptions (psutil/_pslinux.py) (1 samples, 0.15%)</title><rect x="17" y="1684" width="2" height="15" fill="rgb(253,207,51)"/><text x="20.00" y="1694.50"></text></g><g><title>update_wrapper (functools.py) (1 samples, 0.15%)</title><rect x="17" y="1700" width="2" height="15" fill="rgb(242,59,1)"/><text x="20.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="484" width="1" height="15" fill="rgb(246,90,17)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="500" width="1" height="15" fill="rgb(245,199,24)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="516" width="1" height="15" fill="rgb(246,5,52)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="532" width="1" height="15" fill="rgb(209,169,53)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="548" width="1" height="15" fill="rgb(241,126,10)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="564" width="1" height="15" fill="rgb(254,91,2)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.15%)</title><rect x="19" y="580" width="1" height="15" fill="rgb(221,171,40)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="596" width="1" height="15" fill="rgb(217,142,29)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="612" width="1" height="15" fill="rgb(253,3,41)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="628" width="1" height="15" fill="rgb(231,188,15)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="644" width="1" height="15" fill="rgb(250,37,19)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="660" width="1" height="15" fill="rgb(240,141,29)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.15%)</title><rect x="19" y="676" width="1" height="15" fill="rgb(244,118,3)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="692" width="1" height="15" fill="rgb(215,194,39)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="708" width="1" height="15" fill="rgb(234,98,8)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="724" width="1" height="15" fill="rgb(251,166,34)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="740" width="1" height="15" fill="rgb(239,221,39)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="756" width="1" height="15" fill="rgb(242,197,38)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.15%)</title><rect x="19" y="772" width="1" height="15" fill="rgb(248,5,12)"/><text x="22.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="788" width="1" height="15" fill="rgb(222,9,31)"/><text x="22.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="804" width="1" height="15" fill="rgb(205,54,47)"/><text x="22.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="820" width="1" height="15" fill="rgb(253,145,30)"/><text x="22.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="836" width="1" height="15" fill="rgb(216,205,10)"/><text x="22.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="852" width="1" height="15" fill="rgb(242,58,20)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.15%)</title><rect x="19" y="868" width="1" height="15" fill="rgb(207,153,33)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="884" width="1" height="15" fill="rgb(230,106,29)"/><text x="22.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="900" width="1" height="15" fill="rgb(221,109,20)"/><text x="22.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="916" width="1" height="15" fill="rgb(226,195,21)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="932" width="1" height="15" fill="rgb(221,119,17)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="948" width="1" height="15" fill="rgb(245,41,27)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="964" width="1" height="15" fill="rgb(243,165,40)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="980" width="1" height="15" fill="rgb(229,27,17)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="996" width="1" height="15" fill="rgb(235,70,7)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.15%)</title><rect x="19" y="1012" width="1" height="15" fill="rgb(241,2,16)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1028" width="1" height="15" fill="rgb(230,54,42)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1044" width="1" height="15" fill="rgb(243,136,14)"/><text x="22.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1060" width="1" height="15" fill="rgb(244,150,5)"/><text x="22.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="1076" width="1" height="15" fill="rgb(215,32,18)"/><text x="22.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1092" width="1" height="15" fill="rgb(225,223,27)"/><text x="22.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.15%)</title><rect x="19" y="1108" width="1" height="15" fill="rgb(225,34,39)"/><text x="22.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1124" width="1" height="15" fill="rgb(215,164,17)"/><text x="22.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1140" width="1" height="15" fill="rgb(236,148,44)"/><text x="22.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1156" width="1" height="15" fill="rgb(240,153,30)"/><text x="22.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1172" width="1" height="15" fill="rgb(223,139,52)"/><text x="22.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1188" width="1" height="15" fill="rgb(232,154,27)"/><text x="22.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="1204" width="1" height="15" fill="rgb(251,32,37)"/><text x="22.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1220" width="1" height="15" fill="rgb(241,12,9)"/><text x="22.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.15%)</title><rect x="19" y="1236" width="1" height="15" fill="rgb(207,30,40)"/><text x="22.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1252" width="1" height="15" fill="rgb(229,181,0)"/><text x="22.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1268" width="1" height="15" fill="rgb(208,21,28)"/><text x="22.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1284" width="1" height="15" fill="rgb(232,177,27)"/><text x="22.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1300" width="1" height="15" fill="rgb(222,87,42)"/><text x="22.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1316" width="1" height="15" fill="rgb(236,70,22)"/><text x="22.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="1332" width="1" height="15" fill="rgb(242,48,16)"/><text x="22.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1348" width="1" height="15" fill="rgb(224,87,32)"/><text x="22.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.15%)</title><rect x="19" y="1364" width="1" height="15" fill="rgb(219,68,26)"/><text x="22.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1380" width="1" height="15" fill="rgb(223,91,49)"/><text x="22.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1396" width="1" height="15" fill="rgb(228,3,52)"/><text x="22.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1412" width="1" height="15" fill="rgb(211,115,10)"/><text x="22.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="1428" width="1" height="15" fill="rgb(229,0,40)"/><text x="22.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1444" width="1" height="15" fill="rgb(238,30,21)"/><text x="22.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.15%)</title><rect x="19" y="1460" width="1" height="15" fill="rgb(231,134,54)"/><text x="22.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1476" width="1" height="15" fill="rgb(230,145,39)"/><text x="22.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1492" width="1" height="15" fill="rgb(239,133,11)"/><text x="22.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1508" width="1" height="15" fill="rgb(226,35,26)"/><text x="22.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="1524" width="1" height="15" fill="rgb(232,145,25)"/><text x="22.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="1540" width="1" height="15" fill="rgb(210,135,2)"/><text x="22.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.15%)</title><rect x="19" y="1556" width="1" height="15" fill="rgb(212,124,3)"/><text x="22.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.15%)</title><rect x="19" y="1572" width="1" height="15" fill="rgb(243,216,45)"/><text x="22.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.15%)</title><rect x="19" y="1588" width="1" height="15" fill="rgb(219,100,24)"/><text x="22.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.15%)</title><rect x="19" y="1604" width="1" height="15" fill="rgb(232,116,19)"/><text x="22.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.15%)</title><rect x="19" y="1620" width="1" height="15" fill="rgb(213,174,28)"/><text x="22.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.15%)</title><rect x="19" y="1636" width="1" height="15" fill="rgb(237,82,0)"/><text x="22.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.15%)</title><rect x="19" y="1652" width="1" height="15" fill="rgb(219,226,46)"/><text x="22.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.15%)</title><rect x="19" y="1668" width="1" height="15" fill="rgb(220,164,48)"/><text x="22.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.15%)</title><rect x="19" y="1684" width="1" height="15" fill="rgb(225,1,53)"/><text x="22.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.15%)</title><rect x="19" y="1700" width="1" height="15" fill="rgb(211,195,5)"/><text x="22.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.15%)</title><rect x="19" y="1716" width="1" height="15" fill="rgb(254,140,26)"/><text x="22.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.15%)</title><rect x="19" y="1732" width="1" height="15" fill="rgb(210,172,13)"/><text x="22.00" y="1742.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.15%)</title><rect x="19" y="1748" width="1" height="15" fill="rgb(247,92,38)"/><text x="22.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.15%)</title><rect x="19" y="1764" width="1" height="15" fill="rgb(235,13,54)"/><text x="22.00" y="1774.50"></text></g><g><title>visit_If (jinja2/compiler.py) (1 samples, 0.15%)</title><rect x="19" y="1780" width="1" height="15" fill="rgb(237,56,43)"/><text x="22.00" y="1790.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.15%)</title><rect x="19" y="1796" width="1" height="15" fill="rgb(214,183,36)"/><text x="22.00" y="1806.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.15%)</title><rect x="19" y="1812" width="1" height="15" fill="rgb(212,195,46)"/><text x="22.00" y="1822.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.15%)</title><rect x="19" y="1828" width="1" height="15" fill="rgb(216,98,27)"/><text x="22.00" y="1838.50"></text></g><g><title>find_undeclared (jinja2/compiler.py) (1 samples, 0.15%)</title><rect x="19" y="1844" width="1" height="15" fill="rgb(235,188,19)"/><text x="22.00" y="1854.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.15%)</title><rect x="19" y="1860" width="1" height="15" fill="rgb(253,182,34)"/><text x="22.00" y="1870.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.15%)</title><rect x="19" y="1876" width="1" height="15" fill="rgb(229,204,16)"/><text x="22.00" y="1886.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (2 samples, 0.31%)</title><rect x="19" y="436" width="3" height="15" fill="rgb(228,32,21)"/><text x="22.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="452" width="3" height="15" fill="rgb(229,139,52)"/><text x="22.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="468" width="3" height="15" fill="rgb(228,27,40)"/><text x="22.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="484" width="2" height="15" fill="rgb(240,142,40)"/><text x="23.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="500" width="2" height="15" fill="rgb(211,227,36)"/><text x="23.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="516" width="2" height="15" fill="rgb(220,164,42)"/><text x="23.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.15%)</title><rect x="20" y="532" width="2" height="15" fill="rgb(208,61,11)"/><text x="23.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="548" width="2" height="15" fill="rgb(218,78,54)"/><text x="23.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="564" width="2" height="15" fill="rgb(211,224,32)"/><text x="23.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="580" width="2" height="15" fill="rgb(210,48,31)"/><text x="23.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="596" width="2" height="15" fill="rgb(237,15,17)"/><text x="23.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="612" width="2" height="15" fill="rgb(238,57,44)"/><text x="23.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.15%)</title><rect x="20" y="628" width="2" height="15" fill="rgb(234,19,36)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="644" width="2" height="15" fill="rgb(236,12,30)"/><text x="23.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="660" width="2" height="15" fill="rgb(205,16,53)"/><text x="23.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="676" width="2" height="15" fill="rgb(248,197,9)"/><text x="23.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="692" width="2" height="15" fill="rgb(228,113,48)"/><text x="23.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="708" width="2" height="15" fill="rgb(252,194,52)"/><text x="23.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.15%)</title><rect x="20" y="724" width="2" height="15" fill="rgb(240,189,32)"/><text x="23.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="740" width="2" height="15" fill="rgb(218,49,49)"/><text x="23.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="756" width="2" height="15" fill="rgb(214,80,7)"/><text x="23.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="772" width="2" height="15" fill="rgb(238,224,50)"/><text x="23.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="788" width="2" height="15" fill="rgb(253,229,35)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="804" width="2" height="15" fill="rgb(214,204,32)"/><text x="23.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.15%)</title><rect x="20" y="820" width="2" height="15" fill="rgb(208,8,21)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="836" width="2" height="15" fill="rgb(245,163,21)"/><text x="23.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="852" width="2" height="15" fill="rgb(206,71,37)"/><text x="23.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="868" width="2" height="15" fill="rgb(253,6,28)"/><text x="23.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="884" width="2" height="15" fill="rgb(251,49,38)"/><text x="23.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(245,177,48)"/><text x="23.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.15%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(232,225,6)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(218,76,6)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(236,124,3)"/><text x="23.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(229,175,35)"/><text x="23.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="980" width="2" height="15" fill="rgb(243,74,1)"/><text x="23.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="996" width="2" height="15" fill="rgb(248,223,10)"/><text x="23.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.15%)</title><rect x="20" y="1012" width="2" height="15" fill="rgb(219,80,14)"/><text x="23.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1028" width="2" height="15" fill="rgb(243,202,1)"/><text x="23.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1044" width="2" height="15" fill="rgb(236,20,52)"/><text x="23.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1060" width="2" height="15" fill="rgb(253,117,38)"/><text x="23.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1076" width="2" height="15" fill="rgb(214,188,7)"/><text x="23.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1092" width="2" height="15" fill="rgb(249,8,27)"/><text x="23.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.15%)</title><rect x="20" y="1108" width="2" height="15" fill="rgb(251,69,25)"/><text x="23.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1124" width="2" height="15" fill="rgb(217,36,44)"/><text x="23.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1140" width="2" height="15" fill="rgb(215,88,9)"/><text x="23.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1156" width="2" height="15" fill="rgb(222,109,19)"/><text x="23.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1172" width="2" height="15" fill="rgb(234,14,31)"/><text x="23.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1188" width="2" height="15" fill="rgb(250,70,31)"/><text x="23.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.15%)</title><rect x="20" y="1204" width="2" height="15" fill="rgb(216,195,31)"/><text x="23.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1220" width="2" height="15" fill="rgb(244,219,22)"/><text x="23.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1236" width="2" height="15" fill="rgb(213,142,51)"/><text x="23.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1252" width="2" height="15" fill="rgb(218,227,30)"/><text x="23.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1268" width="2" height="15" fill="rgb(232,47,4)"/><text x="23.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1284" width="2" height="15" fill="rgb(254,209,35)"/><text x="23.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.15%)</title><rect x="20" y="1300" width="2" height="15" fill="rgb(210,55,2)"/><text x="23.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1316" width="2" height="15" fill="rgb(223,192,41)"/><text x="23.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1332" width="2" height="15" fill="rgb(241,163,6)"/><text x="23.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1348" width="2" height="15" fill="rgb(219,110,16)"/><text x="23.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1364" width="2" height="15" fill="rgb(222,213,5)"/><text x="23.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1380" width="2" height="15" fill="rgb(213,8,33)"/><text x="23.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.15%)</title><rect x="20" y="1396" width="2" height="15" fill="rgb(207,161,1)"/><text x="23.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1412" width="2" height="15" fill="rgb(242,195,45)"/><text x="23.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1428" width="2" height="15" fill="rgb(207,13,24)"/><text x="23.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1444" width="2" height="15" fill="rgb(240,76,42)"/><text x="23.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1460" width="2" height="15" fill="rgb(220,132,16)"/><text x="23.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1476" width="2" height="15" fill="rgb(219,173,53)"/><text x="23.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.15%)</title><rect x="20" y="1492" width="2" height="15" fill="rgb(222,227,40)"/><text x="23.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1508" width="2" height="15" fill="rgb(219,201,13)"/><text x="23.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1524" width="2" height="15" fill="rgb(211,48,42)"/><text x="23.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1540" width="2" height="15" fill="rgb(236,118,22)"/><text x="23.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1556" width="2" height="15" fill="rgb(240,121,14)"/><text x="23.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1572" width="2" height="15" fill="rgb(247,162,27)"/><text x="23.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.15%)</title><rect x="20" y="1588" width="2" height="15" fill="rgb(250,121,26)"/><text x="23.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1604" width="2" height="15" fill="rgb(206,156,54)"/><text x="23.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1620" width="2" height="15" fill="rgb(218,61,16)"/><text x="23.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1636" width="2" height="15" fill="rgb(243,155,48)"/><text x="23.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1652" width="2" height="15" fill="rgb(212,35,11)"/><text x="23.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1668" width="2" height="15" fill="rgb(231,229,5)"/><text x="23.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.15%)</title><rect x="20" y="1684" width="2" height="15" fill="rgb(236,52,46)"/><text x="23.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1700" width="2" height="15" fill="rgb(246,122,27)"/><text x="23.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1716" width="2" height="15" fill="rgb(210,18,43)"/><text x="23.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1732" width="2" height="15" fill="rgb(208,165,25)"/><text x="23.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1748" width="2" height="15" fill="rgb(248,94,13)"/><text x="23.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1764" width="2" height="15" fill="rgb(225,101,17)"/><text x="23.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.15%)</title><rect x="20" y="1780" width="2" height="15" fill="rgb(249,37,24)"/><text x="23.00" y="1790.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.15%)</title><rect x="20" y="1796" width="2" height="15" fill="rgb(215,28,22)"/><text x="23.00" y="1806.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.15%)</title><rect x="20" y="1812" width="2" height="15" fill="rgb(223,52,42)"/><text x="23.00" y="1822.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.15%)</title><rect x="20" y="1828" width="2" height="15" fill="rgb(238,51,19)"/><text x="23.00" y="1838.50"></text></g><g><title>getdoc (inspect.py) (1 samples, 0.15%)</title><rect x="20" y="1844" width="2" height="15" fill="rgb(213,38,8)"/><text x="23.00" y="1854.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.15%)</title><rect x="20" y="1860" width="2" height="15" fill="rgb(254,18,26)"/><text x="23.00" y="1870.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.46%)</title><rect x="19" y="340" width="5" height="15" fill="rgb(209,39,28)"/><text x="22.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="19" y="356" width="5" height="15" fill="rgb(223,31,23)"/><text x="22.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="19" y="372" width="5" height="15" fill="rgb(218,96,9)"/><text x="22.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="19" y="388" width="5" height="15" fill="rgb(207,119,40)"/><text x="22.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="19" y="404" width="5" height="15" fill="rgb(220,210,47)"/><text x="22.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="19" y="420" width="5" height="15" fill="rgb(213,224,21)"/><text x="22.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.15%)</title><rect x="22" y="436" width="2" height="15" fill="rgb(227,133,23)"/><text x="25.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="22" y="452" width="2" height="15" fill="rgb(213,76,42)"/><text x="25.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="22" y="468" width="2" height="15" fill="rgb(226,60,43)"/><text x="25.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="22" y="484" width="2" height="15" fill="rgb(229,184,33)"/><text x="25.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="22" y="500" width="2" height="15" fill="rgb(254,207,41)"/><text x="25.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="22" y="516" width="2" height="15" fill="rgb(207,112,25)"/><text x="25.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py) (1 samples, 0.15%)</title><rect x="22" y="532" width="2" height="15" fill="rgb(246,67,25)"/><text x="25.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="22" y="548" width="2" height="15" fill="rgb(226,92,3)"/><text x="25.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="22" y="564" width="2" height="15" fill="rgb(242,177,10)"/><text x="25.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="22" y="580" width="2" height="15" fill="rgb(223,62,0)"/><text x="25.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="22" y="596" width="2" height="15" fill="rgb(210,193,7)"/><text x="25.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="22" y="612" width="2" height="15" fill="rgb(245,151,53)"/><text x="25.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py) (1 samples, 0.15%)</title><rect x="22" y="628" width="2" height="15" fill="rgb(248,15,53)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="22" y="644" width="2" height="15" fill="rgb(250,182,47)"/><text x="25.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="22" y="660" width="2" height="15" fill="rgb(205,129,20)"/><text x="25.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="22" y="676" width="2" height="15" fill="rgb(254,138,32)"/><text x="25.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="22" y="692" width="2" height="15" fill="rgb(245,112,6)"/><text x="25.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="22" y="708" width="2" height="15" fill="rgb(208,89,1)"/><text x="25.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py) (1 samples, 0.15%)</title><rect x="22" y="724" width="2" height="15" fill="rgb(220,170,8)"/><text x="25.00" y="734.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.15%)</title><rect x="24" y="580" width="2" height="15" fill="rgb(242,21,50)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="596" width="2" height="15" fill="rgb(217,195,6)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="612" width="2" height="15" fill="rgb(217,8,19)"/><text x="27.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="628" width="2" height="15" fill="rgb(212,26,48)"/><text x="27.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="644" width="2" height="15" fill="rgb(226,21,26)"/><text x="27.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="660" width="2" height="15" fill="rgb(229,163,8)"/><text x="27.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="676" width="2" height="15" fill="rgb(228,156,16)"/><text x="27.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="24" y="692" width="2" height="15" fill="rgb(229,28,52)"/><text x="27.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="708" width="2" height="15" fill="rgb(245,125,23)"/><text x="27.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.15%)</title><rect x="24" y="724" width="2" height="15" fill="rgb(217,8,6)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="740" width="2" height="15" fill="rgb(229,107,11)"/><text x="27.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="756" width="2" height="15" fill="rgb(243,65,43)"/><text x="27.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="772" width="2" height="15" fill="rgb(217,152,54)"/><text x="27.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="24" y="788" width="2" height="15" fill="rgb(253,225,53)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="804" width="2" height="15" fill="rgb(209,166,20)"/><text x="27.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.15%)</title><rect x="24" y="820" width="2" height="15" fill="rgb(235,99,29)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(246,141,13)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(237,62,32)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(252,48,1)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(224,17,30)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(229,44,0)"/><text x="27.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.15%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(235,111,45)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(221,119,22)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(228,142,54)"/><text x="27.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(220,19,48)"/><text x="27.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(229,184,17)"/><text x="27.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(217,188,29)"/><text x="27.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1012" width="2" height="15" fill="rgb(251,189,43)"/><text x="27.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="24" y="1028" width="2" height="15" fill="rgb(232,183,52)"/><text x="27.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1044" width="2" height="15" fill="rgb(212,14,15)"/><text x="27.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.15%)</title><rect x="24" y="1060" width="2" height="15" fill="rgb(208,181,36)"/><text x="27.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1076" width="2" height="15" fill="rgb(223,34,20)"/><text x="27.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1092" width="2" height="15" fill="rgb(250,138,13)"/><text x="27.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1108" width="2" height="15" fill="rgb(232,167,10)"/><text x="27.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(251,150,4)"/><text x="27.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(205,2,32)"/><text x="27.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py) (1 samples, 0.15%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(254,122,25)"/><text x="27.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1172" width="2" height="15" fill="rgb(206,128,45)"/><text x="27.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1188" width="2" height="15" fill="rgb(232,168,38)"/><text x="27.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1204" width="2" height="15" fill="rgb(208,159,48)"/><text x="27.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1220" width="2" height="15" fill="rgb(234,110,15)"/><text x="27.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1236" width="2" height="15" fill="rgb(205,196,23)"/><text x="27.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="24" y="1252" width="2" height="15" fill="rgb(240,140,38)"/><text x="27.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1268" width="2" height="15" fill="rgb(223,159,19)"/><text x="27.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pysvn_helper.py) (1 samples, 0.15%)</title><rect x="24" y="1284" width="2" height="15" fill="rgb(207,191,3)"/><text x="27.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1300" width="2" height="15" fill="rgb(214,9,52)"/><text x="27.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1316" width="2" height="15" fill="rgb(215,41,3)"/><text x="27.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1332" width="2" height="15" fill="rgb(224,127,40)"/><text x="27.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="24" y="1348" width="2" height="15" fill="rgb(245,132,3)"/><text x="27.00" y="1358.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="24" y="1364" width="2" height="15" fill="rgb(215,211,26)"/><text x="27.00" y="1374.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="24" y="1380" width="2" height="15" fill="rgb(222,70,28)"/><text x="27.00" y="1390.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (5 samples, 0.77%)</title><rect x="19" y="244" width="9" height="15" fill="rgb(250,2,34)"/><text x="22.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="19" y="260" width="9" height="15" fill="rgb(243,227,27)"/><text x="22.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="19" y="276" width="9" height="15" fill="rgb(230,31,12)"/><text x="22.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="19" y="292" width="9" height="15" fill="rgb(244,170,49)"/><text x="22.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.77%)</title><rect x="19" y="308" width="9" height="15" fill="rgb(220,182,31)"/><text x="22.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="19" y="324" width="9" height="15" fill="rgb(238,105,36)"/><text x="22.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.31%)</title><rect x="24" y="340" width="4" height="15" fill="rgb(223,137,48)"/><text x="27.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="24" y="356" width="4" height="15" fill="rgb(239,49,26)"/><text x="27.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="24" y="372" width="4" height="15" fill="rgb(254,83,4)"/><text x="27.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="24" y="388" width="4" height="15" fill="rgb(223,15,12)"/><text x="27.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="24" y="404" width="4" height="15" fill="rgb(228,16,24)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="24" y="420" width="4" height="15" fill="rgb(216,117,18)"/><text x="27.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="24" y="436" width="4" height="15" fill="rgb(241,110,35)"/><text x="27.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="24" y="452" width="4" height="15" fill="rgb(236,154,12)"/><text x="27.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="24" y="468" width="4" height="15" fill="rgb(207,31,7)"/><text x="27.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.31%)</title><rect x="24" y="484" width="4" height="15" fill="rgb(253,162,45)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="24" y="500" width="4" height="15" fill="rgb(225,163,51)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="24" y="516" width="4" height="15" fill="rgb(210,25,14)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="24" y="532" width="4" height="15" fill="rgb(254,120,14)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="24" y="548" width="4" height="15" fill="rgb(221,107,51)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="24" y="564" width="4" height="15" fill="rgb(216,149,45)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.15%)</title><rect x="26" y="580" width="2" height="15" fill="rgb(250,214,50)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="596" width="2" height="15" fill="rgb(234,216,35)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="612" width="2" height="15" fill="rgb(229,60,29)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="628" width="2" height="15" fill="rgb(230,94,42)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="644" width="2" height="15" fill="rgb(242,176,10)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="660" width="2" height="15" fill="rgb(212,82,48)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.15%)</title><rect x="26" y="676" width="2" height="15" fill="rgb(229,226,8)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="692" width="2" height="15" fill="rgb(251,199,19)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="708" width="2" height="15" fill="rgb(214,141,11)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="724" width="2" height="15" fill="rgb(248,223,10)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="740" width="2" height="15" fill="rgb(237,101,3)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="756" width="2" height="15" fill="rgb(239,197,0)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.15%)</title><rect x="26" y="772" width="2" height="15" fill="rgb(247,76,34)"/><text x="29.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="788" width="2" height="15" fill="rgb(221,33,53)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="804" width="2" height="15" fill="rgb(206,140,44)"/><text x="29.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="820" width="2" height="15" fill="rgb(209,55,54)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="836" width="2" height="15" fill="rgb(211,30,6)"/><text x="29.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="852" width="2" height="15" fill="rgb(230,56,6)"/><text x="29.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(227,156,33)"/><text x="29.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(239,209,1)"/><text x="29.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.15%)</title><rect x="26" y="900" width="2" height="15" fill="rgb(212,62,52)"/><text x="29.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="916" width="2" height="15" fill="rgb(223,158,8)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="932" width="2" height="15" fill="rgb(241,86,10)"/><text x="29.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="948" width="2" height="15" fill="rgb(234,176,11)"/><text x="29.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="964" width="2" height="15" fill="rgb(251,127,20)"/><text x="29.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="980" width="2" height="15" fill="rgb(220,45,5)"/><text x="29.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="996" width="2" height="15" fill="rgb(239,227,40)"/><text x="29.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="1012" width="2" height="15" fill="rgb(241,121,34)"/><text x="29.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1028" width="2" height="15" fill="rgb(246,174,14)"/><text x="29.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.15%)</title><rect x="26" y="1044" width="2" height="15" fill="rgb(245,225,48)"/><text x="29.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1060" width="2" height="15" fill="rgb(251,106,31)"/><text x="29.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1076" width="2" height="15" fill="rgb(239,97,6)"/><text x="29.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1092" width="2" height="15" fill="rgb(224,12,48)"/><text x="29.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1108" width="2" height="15" fill="rgb(248,17,41)"/><text x="29.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1124" width="2" height="15" fill="rgb(250,53,12)"/><text x="29.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="1140" width="2" height="15" fill="rgb(207,114,33)"/><text x="29.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1156" width="2" height="15" fill="rgb(239,62,25)"/><text x="29.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.15%)</title><rect x="26" y="1172" width="2" height="15" fill="rgb(224,80,22)"/><text x="29.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1188" width="2" height="15" fill="rgb(208,126,42)"/><text x="29.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1204" width="2" height="15" fill="rgb(227,191,22)"/><text x="29.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1220" width="2" height="15" fill="rgb(250,34,52)"/><text x="29.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1236" width="2" height="15" fill="rgb(208,25,54)"/><text x="29.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1252" width="2" height="15" fill="rgb(218,133,9)"/><text x="29.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="1268" width="2" height="15" fill="rgb(250,17,8)"/><text x="29.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1284" width="2" height="15" fill="rgb(235,212,36)"/><text x="29.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py) (1 samples, 0.15%)</title><rect x="26" y="1300" width="2" height="15" fill="rgb(209,145,6)"/><text x="29.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1316" width="2" height="15" fill="rgb(233,116,7)"/><text x="29.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1332" width="2" height="15" fill="rgb(208,141,48)"/><text x="29.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1348" width="2" height="15" fill="rgb(242,22,24)"/><text x="29.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="1364" width="2" height="15" fill="rgb(229,1,1)"/><text x="29.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1380" width="2" height="15" fill="rgb(237,99,47)"/><text x="29.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py) (1 samples, 0.15%)</title><rect x="26" y="1396" width="2" height="15" fill="rgb(245,116,12)"/><text x="29.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1412" width="2" height="15" fill="rgb(206,191,9)"/><text x="29.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1428" width="2" height="15" fill="rgb(208,136,26)"/><text x="29.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1444" width="2" height="15" fill="rgb(253,69,14)"/><text x="29.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="1460" width="2" height="15" fill="rgb(236,79,28)"/><text x="29.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1476" width="2" height="15" fill="rgb(225,17,3)"/><text x="29.00" y="1486.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/extensions.py) (1 samples, 0.15%)</title><rect x="26" y="1492" width="2" height="15" fill="rgb(241,175,24)"/><text x="29.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1508" width="2" height="15" fill="rgb(243,111,0)"/><text x="29.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1524" width="2" height="15" fill="rgb(222,5,0)"/><text x="29.00" y="1534.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="1540" width="2" height="15" fill="rgb(234,98,50)"/><text x="29.00" y="1550.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="1556" width="2" height="15" fill="rgb(224,225,32)"/><text x="29.00" y="1566.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="1572" width="2" height="15" fill="rgb(219,74,13)"/><text x="29.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.69%)</title><rect x="10" y="68" width="19" height="15" fill="rgb(234,145,7)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.69%)</title><rect x="10" y="84" width="19" height="15" fill="rgb(232,146,2)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.69%)</title><rect x="10" y="100" width="19" height="15" fill="rgb(211,21,42)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.69%)</title><rect x="10" y="116" width="19" height="15" fill="rgb(239,50,43)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.69%)</title><rect x="10" y="132" width="19" height="15" fill="rgb(254,103,33)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py) (11 samples, 1.69%)</title><rect x="10" y="148" width="19" height="15" fill="rgb(221,193,8)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.69%)</title><rect x="10" y="164" width="19" height="15" fill="rgb(243,2,45)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.69%)</title><rect x="10" y="180" width="19" height="15" fill="rgb(222,182,47)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="19" y="196" width="10" height="15" fill="rgb(205,140,39)"/><text x="22.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.92%)</title><rect x="19" y="212" width="10" height="15" fill="rgb(214,58,3)"/><text x="22.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="19" y="228" width="10" height="15" fill="rgb(240,218,48)"/><text x="22.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.15%)</title><rect x="28" y="244" width="1" height="15" fill="rgb(232,169,41)"/><text x="31.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="260" width="1" height="15" fill="rgb(226,56,39)"/><text x="31.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="276" width="1" height="15" fill="rgb(230,196,19)"/><text x="31.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="292" width="1" height="15" fill="rgb(226,15,34)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="308" width="1" height="15" fill="rgb(240,40,52)"/><text x="31.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="324" width="1" height="15" fill="rgb(209,33,33)"/><text x="31.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="28" y="340" width="1" height="15" fill="rgb(232,190,3)"/><text x="31.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="356" width="1" height="15" fill="rgb(236,16,47)"/><text x="31.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.15%)</title><rect x="28" y="372" width="1" height="15" fill="rgb(250,86,22)"/><text x="31.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="388" width="1" height="15" fill="rgb(240,51,54)"/><text x="31.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="404" width="1" height="15" fill="rgb(225,201,29)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="420" width="1" height="15" fill="rgb(232,55,50)"/><text x="31.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="436" width="1" height="15" fill="rgb(240,191,52)"/><text x="31.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="452" width="1" height="15" fill="rgb(215,174,51)"/><text x="31.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="28" y="468" width="1" height="15" fill="rgb(206,128,10)"/><text x="31.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="484" width="1" height="15" fill="rgb(206,123,18)"/><text x="31.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.15%)</title><rect x="28" y="500" width="1" height="15" fill="rgb(219,80,25)"/><text x="31.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="516" width="1" height="15" fill="rgb(231,63,0)"/><text x="31.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="532" width="1" height="15" fill="rgb(227,122,14)"/><text x="31.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="548" width="1" height="15" fill="rgb(240,93,53)"/><text x="31.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="564" width="1" height="15" fill="rgb(208,143,49)"/><text x="31.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="580" width="1" height="15" fill="rgb(206,99,1)"/><text x="31.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="28" y="596" width="1" height="15" fill="rgb(232,63,1)"/><text x="31.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="612" width="1" height="15" fill="rgb(242,177,32)"/><text x="31.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.15%)</title><rect x="28" y="628" width="1" height="15" fill="rgb(218,159,9)"/><text x="31.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="644" width="1" height="15" fill="rgb(215,93,35)"/><text x="31.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="660" width="1" height="15" fill="rgb(208,196,26)"/><text x="31.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="676" width="1" height="15" fill="rgb(207,135,54)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="692" width="1" height="15" fill="rgb(205,179,16)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="708" width="1" height="15" fill="rgb(229,78,5)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="724" width="1" height="15" fill="rgb(222,49,47)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="28" y="740" width="1" height="15" fill="rgb(238,214,15)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="756" width="1" height="15" fill="rgb(241,39,11)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.15%)</title><rect x="28" y="772" width="1" height="15" fill="rgb(244,144,50)"/><text x="31.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="788" width="1" height="15" fill="rgb(212,215,18)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="804" width="1" height="15" fill="rgb(220,109,27)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="820" width="1" height="15" fill="rgb(246,186,27)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="836" width="1" height="15" fill="rgb(251,158,26)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="852" width="1" height="15" fill="rgb(224,172,38)"/><text x="31.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="28" y="868" width="1" height="15" fill="rgb(237,185,9)"/><text x="31.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="884" width="1" height="15" fill="rgb(210,181,22)"/><text x="31.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.15%)</title><rect x="28" y="900" width="1" height="15" fill="rgb(211,149,15)"/><text x="31.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="916" width="1" height="15" fill="rgb(227,28,5)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="932" width="1" height="15" fill="rgb(227,145,37)"/><text x="31.00" y="942.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="28" y="948" width="1" height="15" fill="rgb(210,212,14)"/><text x="31.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="28" y="964" width="1" height="15" fill="rgb(216,198,34)"/><text x="31.00" y="974.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="28" y="980" width="1" height="15" fill="rgb(217,61,42)"/><text x="31.00" y="990.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="28" y="996" width="1" height="15" fill="rgb(237,203,50)"/><text x="31.00" y="1006.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="28" y="1012" width="1" height="15" fill="rgb(252,2,9)"/><text x="31.00" y="1022.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="28" y="1028" width="1" height="15" fill="rgb(212,70,11)"/><text x="31.00" y="1038.50"></text></g><g><title>0x7f7a8685eff9 (?) (1 samples, 0.15%)</title><rect x="33" y="212" width="2" height="15" fill="rgb(233,88,39)"/><text x="36.00" y="222.50"></text></g><g><title>0x7f7a86859ef6 (?) (1 samples, 0.15%)</title><rect x="33" y="228" width="2" height="15" fill="rgb(254,56,24)"/><text x="36.00" y="238.50"></text></g><g><title>0x7f7a8684e962 (?) (1 samples, 0.15%)</title><rect x="33" y="244" width="2" height="15" fill="rgb(238,115,23)"/><text x="36.00" y="254.50"></text></g><g><title>0x7f7a868827a7 (?) (1 samples, 0.15%)</title><rect x="33" y="260" width="2" height="15" fill="rgb(227,101,30)"/><text x="36.00" y="270.50"></text></g><g><title>0x7f7a86882379 (?) (1 samples, 0.15%)</title><rect x="33" y="276" width="2" height="15" fill="rgb(223,15,35)"/><text x="36.00" y="286.50"></text></g><g><title>0x7f7a86ce08b8 (?) (1 samples, 0.15%)</title><rect x="33" y="292" width="2" height="15" fill="rgb(218,45,11)"/><text x="36.00" y="302.50"></text></g><g><title>0x7f7a86cdec7f (?) (1 samples, 0.15%)</title><rect x="33" y="308" width="2" height="15" fill="rgb(248,116,8)"/><text x="36.00" y="318.50"></text></g><g><title>0x7f7a86cf199c (?) (1 samples, 0.15%)</title><rect x="33" y="324" width="2" height="15" fill="rgb(253,222,52)"/><text x="36.00" y="334.50"></text></g><g><title>0x7f7a86a0f19e (?) (1 samples, 0.15%)</title><rect x="33" y="340" width="2" height="15" fill="rgb(225,73,11)"/><text x="36.00" y="350.50"></text></g><g><title>0x7f7a86a0bdf7 (?) (1 samples, 0.15%)</title><rect x="33" y="356" width="2" height="15" fill="rgb(222,153,44)"/><text x="36.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (199 samples, 30.52%)</title><rect x="35" y="340" width="360" height="15" fill="rgb(220,115,16)"/><text x="38.00" y="350.50">onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (193 samples, 29.60%)</title><rect x="46" y="356" width="349" height="15" fill="rgb(247,8,2)"/><text x="49.00" y="366.50">onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;:..</text></g><g><title>0x7f7ac6861b61 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="399" y="388" width="1" height="15" fill="rgb(221,74,6)"/><text x="402.00" y="398.50"></text></g><g><title>0x7f7ac686206d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="400" y="388" width="2" height="15" fill="rgb(252,60,14)"/><text x="403.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.61%)</title><rect x="397" y="356" width="7" height="15" fill="rgb(241,146,13)"/><text x="400.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.61%)</title><rect x="397" y="372" width="7" height="15" fill="rgb(225,61,13)"/><text x="400.00" y="382.50"></text></g><g><title>0x7f7ac6862395 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="402" y="388" width="2" height="15" fill="rgb(247,41,42)"/><text x="405.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (205 samples, 31.44%)</title><rect x="35" y="260" width="371" height="15" fill="rgb(227,45,33)"/><text x="38.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (205 samples, 31.44%)</title><rect x="35" y="276" width="371" height="15" fill="rgb(234,24,7)"/><text x="38.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (205 samples, 31.44%)</title><rect x="35" y="292" width="371" height="15" fill="rgb(213,24,33)"/><text x="38.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (205 samples, 31.44%)</title><rect x="35" y="308" width="371" height="15" fill="rgb(238,12,4)"/><text x="38.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (205 samples, 31.44%)</title><rect x="35" y="324" width="371" height="15" fill="rgb(246,130,50)"/><text x="38.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrunt..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.92%)</title><rect x="395" y="340" width="11" height="15" fill="rgb(242,84,29)"/><text x="398.00" y="350.50"></text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="404" y="356" width="2" height="15" fill="rgb(222,6,40)"/><text x="407.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="404" y="372" width="2" height="15" fill="rgb(225,109,9)"/><text x="407.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="404" y="388" width="2" height="15" fill="rgb(213,162,9)"/><text x="407.00" y="398.50"></text></g><g><title>0x7f7ac6862028 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="404" y="404" width="2" height="15" fill="rgb(252,59,4)"/><text x="407.00" y="414.50"></text></g><g><title>0x7f7ac685fc14 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="404" y="420" width="2" height="15" fill="rgb(233,143,46)"/><text x="407.00" y="430.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="406" y="260" width="3" height="15" fill="rgb(233,180,32)"/><text x="409.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="408" y="276" width="1" height="15" fill="rgb(233,151,37)"/><text x="411.00" y="286.50"></text></g><g><title>0x7f7ac68609ed (libc-2.29.so) (1 samples, 0.15%)</title><rect x="409" y="292" width="2" height="15" fill="rgb(225,135,20)"/><text x="412.00" y="302.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (212 samples, 32.52%)</title><rect x="29" y="100" width="384" height="15" fill="rgb(230,182,45)"/><text x="32.00" y="110.50">profile (bench_RandomForestClassifier_default_m_cl_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (210 samples, 32.21%)</title><rect x="33" y="116" width="380" height="15" fill="rgb(228,155,39)"/><text x="36.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (210 samples, 32.21%)</title><rect x="33" y="132" width="380" height="15" fill="rgb(244,64,36)"/><text x="36.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (210 samples, 32.21%)</title><rect x="33" y="148" width="380" height="15" fill="rgb(238,7,34)"/><text x="36.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (210 samples, 32.21%)</title><rect x="33" y="164" width="380" height="15" fill="rgb(232,93,9)"/><text x="36.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (210 samples, 32.21%)</title><rect x="33" y="180" width="380" height="15" fill="rgb(239,71,43)"/><text x="36.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (210 samples, 32.21%)</title><rect x="33" y="196" width="380" height="15" fill="rgb(221,100,28)"/><text x="36.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (209 samples, 32.06%)</title><rect x="35" y="212" width="378" height="15" fill="rgb(246,214,52)"/><text x="38.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/cap..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (209 samples, 32.06%)</title><rect x="35" y="228" width="378" height="15" fill="rgb(236,24,5)"/><text x="38.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (209 samples, 32.06%)</title><rect x="35" y="244" width="378" height="15" fill="rgb(243,27,9)"/><text x="38.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::mod..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="409" y="260" width="4" height="15" fill="rgb(252,26,25)"/><text x="412.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="409" y="276" width="4" height="15" fill="rgb(221,222,30)"/><text x="412.00" y="286.50"></text></g><g><title>0x7f7ac6860d07 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="411" y="292" width="2" height="15" fill="rgb(206,222,7)"/><text x="414.00" y="302.50"></text></g><g><title>0x7f7ab4baa7c9 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="413" y="324" width="2" height="15" fill="rgb(229,4,21)"/><text x="416.00" y="334.50"></text></g><g><title>google::protobuf::Reflection::FieldSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="413" y="340" width="2" height="15" fill="rgb(234,206,24)"/><text x="416.00" y="350.50"></text></g><g><title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::RepeatedField&lt;long&gt; &gt; (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="413" y="356" width="2" height="15" fill="rgb(210,208,8)"/><text x="416.00" y="366.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (214 samples, 32.82%)</title><rect x="29" y="68" width="388" height="15" fill="rgb(229,84,8)"/><text x="32.00" y="78.50">profile_ort (bench_RandomForestClassifier_default_m_..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (214 samples, 32.82%)</title><rect x="29" y="84" width="388" height="15" fill="rgb(229,207,4)"/><text x="32.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.31%)</title><rect x="413" y="100" width="4" height="15" fill="rgb(248,63,8)"/><text x="416.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.31%)</title><rect x="413" y="116" width="4" height="15" fill="rgb(237,160,2)"/><text x="416.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.31%)</title><rect x="413" y="132" width="4" height="15" fill="rgb(221,40,11)"/><text x="416.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.31%)</title><rect x="413" y="148" width="4" height="15" fill="rgb(218,114,42)"/><text x="416.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.31%)</title><rect x="413" y="164" width="4" height="15" fill="rgb(206,31,10)"/><text x="416.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.31%)</title><rect x="413" y="180" width="4" height="15" fill="rgb(206,117,7)"/><text x="416.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (2 samples, 0.31%)</title><rect x="413" y="196" width="4" height="15" fill="rgb(206,2,34)"/><text x="416.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (2 samples, 0.31%)</title><rect x="413" y="212" width="4" height="15" fill="rgb(206,175,50)"/><text x="416.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py) (2 samples, 0.31%)</title><rect x="413" y="228" width="4" height="15" fill="rgb(252,131,30)"/><text x="416.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.31%)</title><rect x="413" y="244" width="4" height="15" fill="rgb(217,116,26)"/><text x="416.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.31%)</title><rect x="413" y="260" width="4" height="15" fill="rgb(242,133,30)"/><text x="416.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.31%)</title><rect x="413" y="276" width="4" height="15" fill="rgb(225,92,24)"/><text x="416.00" y="286.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (2 samples, 0.31%)</title><rect x="413" y="292" width="4" height="15" fill="rgb(221,76,36)"/><text x="416.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c) (2 samples, 0.31%)</title><rect x="413" y="308" width="4" height="15" fill="rgb(207,82,5)"/><text x="416.00" y="318.50"></text></g><g><title>0x7f7ab4baa971 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="415" y="324" width="2" height="15" fill="rgb(227,203,49)"/><text x="418.00" y="334.50"></text></g><g><title>google::protobuf::Reflection::GetRepeatedInt64 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="415" y="340" width="2" height="15" fill="rgb(210,81,14)"/><text x="418.00" y="350.50"></text></g><g><title>0x7f7a874fe422 (?) (1 samples, 0.15%)</title><rect x="417" y="244" width="2" height="15" fill="rgb(224,107,43)"/><text x="420.00" y="254.50"></text></g><g><title>0x7f7a8750489e (?) (1 samples, 0.15%)</title><rect x="417" y="260" width="2" height="15" fill="rgb(210,6,50)"/><text x="420.00" y="270.50"></text></g><g><title>0x7f7a8750474f (?) (1 samples, 0.15%)</title><rect x="417" y="276" width="2" height="15" fill="rgb(234,141,11)"/><text x="420.00" y="286.50"></text></g><g><title>0x7f7a8750aa3a (?) (1 samples, 0.15%)</title><rect x="417" y="292" width="2" height="15" fill="rgb(236,38,37)"/><text x="420.00" y="302.50"></text></g><g><title>0x7f7a9081ccff (?) (1 samples, 0.15%)</title><rect x="417" y="308" width="2" height="15" fill="rgb(252,211,50)"/><text x="420.00" y="318.50"></text></g><g><title>0x7f7a8750578c (?) (1 samples, 0.15%)</title><rect x="417" y="324" width="2" height="15" fill="rgb(217,219,27)"/><text x="420.00" y="334.50"></text></g><g><title>0x7f7a874f1d42 (?) (1 samples, 0.15%)</title><rect x="417" y="340" width="2" height="15" fill="rgb(206,218,48)"/><text x="420.00" y="350.50"></text></g><g><title>std::isnan (cmath) (2 samples, 0.31%)</title><rect x="471" y="500" width="4" height="15" fill="rgb(233,65,54)"/><text x="474.00" y="510.50"></text></g><g><title>std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_map.h) (25 samples, 3.83%)</title><rect x="475" y="500" width="45" height="15" fill="rgb(217,127,0)"/><text x="478.00" y="510.50">std:..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_tree.h) (25 samples, 3.83%)</title><rect x="475" y="516" width="45" height="15" fill="rgb(229,129,23)"/><text x="478.00" y="526.50">std:..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h) (25 samples, 3.83%)</title><rect x="475" y="532" width="45" height="15" fill="rgb(218,97,30)"/><text x="478.00" y="542.50">std:..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (58 samples, 8.90%)</title><rect x="422" y="484" width="105" height="15" fill="rgb(205,183,14)"/><text x="425.00" y="494.50">RuntimeTreeE..</text></g><g><title>std::vector&lt;std::tuple&lt;long, long, long, float&gt;, std::allocator&lt;std::tuple&lt;long, long, long, float&gt; &gt; &gt;::operator[] (stl_vector.h) (4 samples, 0.61%)</title><rect x="520" y="500" width="7" height="15" fill="rgb(239,201,3)"/><text x="523.00" y="510.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (62 samples, 9.51%)</title><rect x="417" y="100" width="112" height="15" fill="rgb(222,215,6)"/><text x="420.00" y="110.50">profile (benc..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (62 samples, 9.51%)</title><rect x="417" y="116" width="112" height="15" fill="rgb(237,153,29)"/><text x="420.00" y="126.50">time_predict ..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (62 samples, 9.51%)</title><rect x="417" y="132" width="112" height="15" fill="rgb(233,221,26)"/><text x="420.00" y="142.50">&lt;lambda&gt; (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (62 samples, 9.51%)</title><rect x="417" y="148" width="112" height="15" fill="rgb(206,77,36)"/><text x="420.00" y="158.50">run (mlprodic..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (62 samples, 9.51%)</title><rect x="417" y="164" width="112" height="15" fill="rgb(235,222,5)"/><text x="420.00" y="174.50">_run_sequence..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (62 samples, 9.51%)</title><rect x="417" y="180" width="112" height="15" fill="rgb(243,191,34)"/><text x="420.00" y="190.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (62 samples, 9.51%)</title><rect x="417" y="196" width="112" height="15" fill="rgb(239,69,41)"/><text x="420.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (62 samples, 9.51%)</title><rect x="417" y="212" width="112" height="15" fill="rgb(213,36,30)"/><text x="420.00" y="222.50">run (mlprodic..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (62 samples, 9.51%)</title><rect x="417" y="228" width="112" height="15" fill="rgb(232,59,49)"/><text x="420.00" y="238.50">_run (mlprodi..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (61 samples, 9.36%)</title><rect x="419" y="244" width="110" height="15" fill="rgb(216,59,31)"/><text x="422.00" y="254.50">pybind11::cpp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (61 samples, 9.36%)</title><rect x="419" y="260" width="110" height="15" fill="rgb(236,81,54)"/><text x="422.00" y="270.50">void pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (61 samples, 9.36%)</title><rect x="419" y="276" width="110" height="15" fill="rgb(211,185,21)"/><text x="422.00" y="286.50">void pybind11..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (61 samples, 9.36%)</title><rect x="419" y="292" width="110" height="15" fill="rgb(216,186,34)"/><text x="422.00" y="302.50">pybind11::det..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (61 samples, 9.36%)</title><rect x="419" y="308" width="110" height="15" fill="rgb(231,104,22)"/><text x="422.00" y="318.50">pybind11::det..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (61 samples, 9.36%)</title><rect x="419" y="324" width="110" height="15" fill="rgb(249,203,35)"/><text x="422.00" y="334.50">pybind11::cpp..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (61 samples, 9.36%)</title><rect x="419" y="340" width="110" height="15" fill="rgb(220,44,25)"/><text x="422.00" y="350.50">pybind11::arr..</text></g><g><title>pybind11::array::~array (numpy.h) (61 samples, 9.36%)</title><rect x="419" y="356" width="110" height="15" fill="rgb(249,130,15)"/><text x="422.00" y="366.50">pybind11::arr..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (61 samples, 9.36%)</title><rect x="419" y="372" width="110" height="15" fill="rgb(238,218,9)"/><text x="422.00" y="382.50">pybind11::buf..</text></g><g><title>pybind11::object::~object (pytypes.h) (61 samples, 9.36%)</title><rect x="419" y="388" width="110" height="15" fill="rgb(249,134,18)"/><text x="422.00" y="398.50">pybind11::obj..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (61 samples, 9.36%)</title><rect x="419" y="404" width="110" height="15" fill="rgb(220,196,26)"/><text x="422.00" y="414.50">pybind11::han..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (61 samples, 9.36%)</title><rect x="419" y="420" width="110" height="15" fill="rgb(214,64,21)"/><text x="422.00" y="430.50">RuntimeTreeEn..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (61 samples, 9.36%)</title><rect x="419" y="436" width="110" height="15" fill="rgb(235,48,23)"/><text x="422.00" y="446.50">pybind11::gil..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (61 samples, 9.36%)</title><rect x="419" y="452" width="110" height="15" fill="rgb(248,148,2)"/><text x="422.00" y="462.50">GOMP_parallel..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (61 samples, 9.36%)</title><rect x="419" y="468" width="110" height="15" fill="rgb(216,93,6)"/><text x="422.00" y="478.50">RuntimeTreeEn..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.15%)</title><rect x="527" y="484" width="2" height="15" fill="rgb(232,66,16)"/><text x="530.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="527" y="500" width="2" height="15" fill="rgb(246,23,52)"/><text x="530.00" y="510.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (63 samples, 9.66%)</title><rect x="417" y="68" width="114" height="15" fill="rgb(249,228,41)"/><text x="420.00" y="78.50">profile_pyrt (..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (63 samples, 9.66%)</title><rect x="417" y="84" width="114" height="15" fill="rgb(231,27,3)"/><text x="420.00" y="94.50">setup_profile ..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.15%)</title><rect x="529" y="100" width="2" height="15" fill="rgb(219,12,22)"/><text x="532.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.15%)</title><rect x="529" y="116" width="2" height="15" fill="rgb(231,229,20)"/><text x="532.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.15%)</title><rect x="529" y="132" width="2" height="15" fill="rgb(214,145,10)"/><text x="532.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.15%)</title><rect x="529" y="148" width="2" height="15" fill="rgb(223,186,25)"/><text x="532.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.15%)</title><rect x="529" y="164" width="2" height="15" fill="rgb(242,33,22)"/><text x="532.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.15%)</title><rect x="529" y="180" width="2" height="15" fill="rgb(208,90,53)"/><text x="532.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (1 samples, 0.15%)</title><rect x="529" y="196" width="2" height="15" fill="rgb(240,184,15)"/><text x="532.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.15%)</title><rect x="529" y="212" width="2" height="15" fill="rgb(252,166,42)"/><text x="532.00" y="222.50"></text></g><g><title>0x7f7ac688112b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="571" y="196" width="1" height="15" fill="rgb(239,54,3)"/><text x="574.00" y="206.50"></text></g><g><title>update_wrapper (functools.py) (7 samples, 1.07%)</title><rect x="583" y="228" width="13" height="15" fill="rgb(230,98,0)"/><text x="586.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (15 samples, 2.30%)</title><rect x="572" y="196" width="28" height="15" fill="rgb(227,156,24)"/><text x="575.00" y="206.50">&lt;..</text></g><g><title>delayed (joblib/parallel.py) (10 samples, 1.53%)</title><rect x="581" y="212" width="19" height="15" fill="rgb(232,77,26)"/><text x="584.00" y="222.50"></text></g><g><title>wraps (functools.py) (2 samples, 0.31%)</title><rect x="596" y="228" width="4" height="15" fill="rgb(206,206,52)"/><text x="599.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.15%)</title><rect x="600" y="196" width="1" height="15" fill="rgb(212,12,29)"/><text x="603.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py) (7 samples, 1.07%)</title><rect x="601" y="196" width="13" height="15" fill="rgb(241,220,53)"/><text x="604.00" y="206.50"></text></g><g><title>__len__ (joblib/parallel.py) (1 samples, 0.15%)</title><rect x="614" y="196" width="2" height="15" fill="rgb(221,148,39)"/><text x="617.00" y="206.50"></text></g><g><title>__len__ (joblib/parallel.py) (1 samples, 0.15%)</title><rect x="623" y="212" width="2" height="15" fill="rgb(246,165,14)"/><text x="626.00" y="222.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.15%)</title><rect x="641" y="244" width="2" height="15" fill="rgb(225,211,6)"/><text x="644.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py) (9 samples, 1.38%)</title><rect x="628" y="228" width="17" height="15" fill="rgb(212,112,50)"/><text x="631.00" y="238.50"></text></g><g><title>print_progress (joblib/parallel.py) (1 samples, 0.15%)</title><rect x="643" y="244" width="2" height="15" fill="rgb(245,194,10)"/><text x="646.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="668" y="292" width="2" height="15" fill="rgb(233,144,45)"/><text x="671.00" y="302.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.15%)</title><rect x="670" y="292" width="2" height="15" fill="rgb(215,186,42)"/><text x="673.00" y="302.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.15%)</title><rect x="670" y="308" width="2" height="15" fill="rgb(225,81,52)"/><text x="673.00" y="318.50"></text></g><g><title>0x7f7aa02b3270 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="683" y="340" width="2" height="15" fill="rgb(213,88,51)"/><text x="686.00" y="350.50"></text></g><g><title>0x7f7aa02b21dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="685" y="356" width="1" height="15" fill="rgb(241,43,14)"/><text x="688.00" y="366.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.15%)</title><rect x="685" y="372" width="1" height="15" fill="rgb(215,100,16)"/><text x="688.00" y="382.50"></text></g><g><title>0x7f7aa02b2215 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="686" y="356" width="2" height="15" fill="rgb(226,196,46)"/><text x="689.00" y="366.50"></text></g><g><title>0x7f7aa02b2225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="688" y="356" width="4" height="15" fill="rgb(229,141,31)"/><text x="691.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.31%)</title><rect x="688" y="372" width="4" height="15" fill="rgb(251,1,32)"/><text x="691.00" y="382.50"></text></g><g><title>0x7f7aa02b22a3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="692" y="356" width="2" height="15" fill="rgb(248,187,21)"/><text x="695.00" y="366.50"></text></g><g><title>0x7f7aa028c277 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="694" y="404" width="1" height="15" fill="rgb(232,32,50)"/><text x="697.00" y="414.50"></text></g><g><title>0x7f7aa0296d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="694" y="372" width="3" height="15" fill="rgb(227,60,47)"/><text x="697.00" y="382.50"></text></g><g><title>0x7f7aa0296666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="694" y="388" width="3" height="15" fill="rgb(241,144,35)"/><text x="697.00" y="398.50"></text></g><g><title>0x7f7aa028c2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="695" y="404" width="2" height="15" fill="rgb(212,99,13)"/><text x="698.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.15%)</title><rect x="695" y="420" width="2" height="15" fill="rgb(246,59,18)"/><text x="698.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.15%)</title><rect x="695" y="436" width="2" height="15" fill="rgb(216,185,16)"/><text x="698.00" y="446.50"></text></g><g><title>0x7f7aa02b22df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.46%)</title><rect x="694" y="356" width="5" height="15" fill="rgb(249,32,46)"/><text x="697.00" y="366.50"></text></g><g><title>0x7f7aa0296e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="697" y="372" width="2" height="15" fill="rgb(212,166,42)"/><text x="700.00" y="382.50"></text></g><g><title>0x7f7aa0289f22 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="697" y="388" width="2" height="15" fill="rgb(243,3,3)"/><text x="700.00" y="398.50"></text></g><g><title>0x7f7aa02b248a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="699" y="356" width="2" height="15" fill="rgb(213,160,10)"/><text x="702.00" y="366.50"></text></g><g><title>0x7f7ac68811d6 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="699" y="372" width="2" height="15" fill="rgb(229,152,10)"/><text x="702.00" y="382.50"></text></g><g><title>0x7f7aa02b2511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="701" y="356" width="3" height="15" fill="rgb(205,130,23)"/><text x="704.00" y="366.50"></text></g><g><title>0x7f7ac6861d7e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="708" y="484" width="2" height="15" fill="rgb(235,194,33)"/><text x="711.00" y="494.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.31%)</title><rect x="708" y="468" width="4" height="15" fill="rgb(216,94,8)"/><text x="711.00" y="478.50"></text></g><g><title>0x7f7ac686221f (libc-2.29.so) (1 samples, 0.15%)</title><rect x="710" y="484" width="2" height="15" fill="rgb(215,182,18)"/><text x="713.00" y="494.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (3 samples, 0.46%)</title><rect x="708" y="452" width="6" height="15" fill="rgb(250,225,37)"/><text x="711.00" y="462.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="712" y="468" width="2" height="15" fill="rgb(206,74,45)"/><text x="715.00" y="478.50"></text></g><g><title>0x7f7aa02b2592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.92%)</title><rect x="704" y="356" width="11" height="15" fill="rgb(221,29,35)"/><text x="707.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (6 samples, 0.92%)</title><rect x="704" y="372" width="11" height="15" fill="rgb(230,93,33)"/><text x="707.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (5 samples, 0.77%)</title><rect x="706" y="388" width="9" height="15" fill="rgb(227,100,38)"/><text x="709.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c) (5 samples, 0.77%)</title><rect x="706" y="404" width="9" height="15" fill="rgb(221,120,23)"/><text x="709.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (5 samples, 0.77%)</title><rect x="706" y="420" width="9" height="15" fill="rgb(218,150,41)"/><text x="709.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (5 samples, 0.77%)</title><rect x="706" y="436" width="9" height="15" fill="rgb(215,87,19)"/><text x="709.00" y="446.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="714" y="452" width="1" height="15" fill="rgb(210,186,10)"/><text x="717.00" y="462.50"></text></g><g><title>0x7f7aa02b259c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="715" y="356" width="2" height="15" fill="rgb(210,206,4)"/><text x="718.00" y="366.50"></text></g><g><title>0x7f7aa02b2644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="717" y="356" width="2" height="15" fill="rgb(246,122,46)"/><text x="720.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="717" y="372" width="2" height="15" fill="rgb(250,160,25)"/><text x="720.00" y="382.50"></text></g><g><title>0x7f7aa02b2698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="719" y="356" width="4" height="15" fill="rgb(249,76,28)"/><text x="722.00" y="366.50"></text></g><g><title>0x7f7aa02b269b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="723" y="356" width="1" height="15" fill="rgb(223,203,16)"/><text x="726.00" y="366.50"></text></g><g><title>0x7f7aa02b26a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="724" y="356" width="2" height="15" fill="rgb(252,18,33)"/><text x="727.00" y="366.50"></text></g><g><title>0x7f7aa02b26aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.46%)</title><rect x="726" y="356" width="6" height="15" fill="rgb(207,67,11)"/><text x="729.00" y="366.50"></text></g><g><title>0x7f7aa02b26ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="732" y="356" width="1" height="15" fill="rgb(244,168,36)"/><text x="735.00" y="366.50"></text></g><g><title>0x7f7aa02b26b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.77%)</title><rect x="733" y="356" width="9" height="15" fill="rgb(228,35,15)"/><text x="736.00" y="366.50"></text></g><g><title>0x7f7aa02b26c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.61%)</title><rect x="742" y="356" width="8" height="15" fill="rgb(218,191,26)"/><text x="745.00" y="366.50"></text></g><g><title>0x7f7aa02b26d4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="750" y="356" width="2" height="15" fill="rgb(238,74,30)"/><text x="753.00" y="366.50"></text></g><g><title>0x7f7aa02b26e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="752" y="356" width="1" height="15" fill="rgb(230,172,46)"/><text x="755.00" y="366.50"></text></g><g><title>0x7f7aa02b26e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="753" y="356" width="2" height="15" fill="rgb(243,48,0)"/><text x="756.00" y="366.50"></text></g><g><title>0x7f7aa02b26f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="755" y="356" width="2" height="15" fill="rgb(229,176,52)"/><text x="758.00" y="366.50"></text></g><g><title>0x7f7aa02b2731 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="757" y="356" width="2" height="15" fill="rgb(243,143,44)"/><text x="760.00" y="366.50"></text></g><g><title>0x7f7aa02b27b0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="759" y="356" width="2" height="15" fill="rgb(214,212,10)"/><text x="762.00" y="366.50"></text></g><g><title>0x7f7aa02b27b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="761" y="356" width="3" height="15" fill="rgb(252,23,10)"/><text x="764.00" y="366.50"></text></g><g><title>0x7f7aa02b292f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="764" y="356" width="2" height="15" fill="rgb(234,77,15)"/><text x="767.00" y="366.50"></text></g><g><title>0x7f7aa02878a1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="764" y="372" width="2" height="15" fill="rgb(235,168,33)"/><text x="767.00" y="382.50"></text></g><g><title>0x7f7aa02a3fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (49 samples, 7.52%)</title><rect x="683" y="324" width="88" height="15" fill="rgb(232,145,3)"/><text x="686.00" y="334.50">0x7f7aa02a..</text></g><g><title>0x7f7aa02b3405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (48 samples, 7.36%)</title><rect x="685" y="340" width="86" height="15" fill="rgb(239,204,46)"/><text x="688.00" y="350.50">0x7f7aa02b..</text></g><g><title>0x7f7aa02b2c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.46%)</title><rect x="766" y="356" width="5" height="15" fill="rgb(228,26,52)"/><text x="769.00" y="366.50"></text></g><g><title>0x7f7aa028a529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.46%)</title><rect x="766" y="372" width="5" height="15" fill="rgb(220,77,53)"/><text x="769.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.46%)</title><rect x="766" y="388" width="5" height="15" fill="rgb(249,111,8)"/><text x="769.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.46%)</title><rect x="766" y="404" width="5" height="15" fill="rgb(252,227,22)"/><text x="769.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.15%)</title><rect x="770" y="420" width="1" height="15" fill="rgb(226,9,20)"/><text x="773.00" y="430.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.15%)</title><rect x="770" y="436" width="1" height="15" fill="rgb(232,189,6)"/><text x="773.00" y="446.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.15%)</title><rect x="770" y="452" width="1" height="15" fill="rgb(244,14,50)"/><text x="773.00" y="462.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.15%)</title><rect x="771" y="356" width="2" height="15" fill="rgb(254,48,36)"/><text x="774.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (3 samples, 0.46%)</title><rect x="773" y="372" width="6" height="15" fill="rgb(220,118,17)"/><text x="776.00" y="382.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.15%)</title><rect x="779" y="372" width="1" height="15" fill="rgb(209,175,25)"/><text x="782.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.15%)</title><rect x="779" y="388" width="1" height="15" fill="rgb(248,1,43)"/><text x="782.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.15%)</title><rect x="779" y="404" width="1" height="15" fill="rgb(223,220,32)"/><text x="782.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.15%)</title><rect x="779" y="420" width="1" height="15" fill="rgb(220,12,51)"/><text x="782.00" y="430.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.15%)</title><rect x="779" y="436" width="1" height="15" fill="rgb(250,223,12)"/><text x="782.00" y="446.50"></text></g><g><title>0x7f7aa02a405a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.92%)</title><rect x="771" y="324" width="11" height="15" fill="rgb(213,225,9)"/><text x="774.00" y="334.50"></text></g><g><title>array_take (methods.c) (6 samples, 0.92%)</title><rect x="771" y="340" width="11" height="15" fill="rgb(210,116,8)"/><text x="774.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (5 samples, 0.77%)</title><rect x="773" y="356" width="9" height="15" fill="rgb(234,18,39)"/><text x="776.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="780" y="372" width="2" height="15" fill="rgb(218,62,1)"/><text x="783.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="780" y="388" width="2" height="15" fill="rgb(241,43,24)"/><text x="783.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.15%)</title><rect x="780" y="404" width="2" height="15" fill="rgb(246,67,25)"/><text x="783.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.15%)</title><rect x="780" y="420" width="2" height="15" fill="rgb(226,87,30)"/><text x="783.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.15%)</title><rect x="780" y="436" width="2" height="15" fill="rgb(248,136,22)"/><text x="783.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="780" y="452" width="2" height="15" fill="rgb(225,129,20)"/><text x="783.00" y="462.50"></text></g><g><title>0x7f7ac68622f0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="780" y="468" width="2" height="15" fill="rgb(222,30,34)"/><text x="783.00" y="478.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 0.46%)</title><rect x="782" y="356" width="6" height="15" fill="rgb(217,157,35)"/><text x="785.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 0.46%)</title><rect x="782" y="372" width="6" height="15" fill="rgb(228,63,36)"/><text x="785.00" y="382.50"></text></g><g><title>_buffer_info_free (buffer.c) (2 samples, 0.31%)</title><rect x="784" y="388" width="4" height="15" fill="rgb(219,107,40)"/><text x="787.00" y="398.50"></text></g><g><title>0x7f7ac5a82380 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="788" y="404" width="2" height="15" fill="rgb(226,27,5)"/><text x="791.00" y="414.50"></text></g><g><title>0x7f7aa02a4d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (60 samples, 9.20%)</title><rect x="683" y="308" width="108" height="15" fill="rgb(243,42,8)"/><text x="686.00" y="318.50">0x7f7aa02a4d2..</text></g><g><title>0x7f7aa02a414f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.77%)</title><rect x="782" y="324" width="9" height="15" fill="rgb(239,174,6)"/><text x="785.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (5 samples, 0.77%)</title><rect x="782" y="340" width="9" height="15" fill="rgb(221,29,30)"/><text x="785.00" y="350.50"></text></g><g><title>npy_free_cache (alloc.c) (2 samples, 0.31%)</title><rect x="788" y="356" width="3" height="15" fill="rgb(218,211,32)"/><text x="791.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c) (2 samples, 0.31%)</title><rect x="788" y="372" width="3" height="15" fill="rgb(220,119,22)"/><text x="791.00" y="382.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (2 samples, 0.31%)</title><rect x="788" y="388" width="3" height="15" fill="rgb(210,198,21)"/><text x="791.00" y="398.50"></text></g><g><title>0x7f7ac6860ace (libc-2.29.so) (1 samples, 0.15%)</title><rect x="790" y="404" width="1" height="15" fill="rgb(209,77,34)"/><text x="793.00" y="414.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.15%)</title><rect x="791" y="308" width="2" height="15" fill="rgb(213,146,41)"/><text x="794.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.15%)</title><rect x="791" y="324" width="2" height="15" fill="rgb(226,218,21)"/><text x="794.00" y="334.50"></text></g><g><title>binop_should_defer (binop_override.h) (2 samples, 0.31%)</title><rect x="797" y="324" width="3" height="15" fill="rgb(251,38,13)"/><text x="800.00" y="334.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src) (1 samples, 0.15%)</title><rect x="799" y="340" width="1" height="15" fill="rgb(226,41,46)"/><text x="802.00" y="350.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.15%)</title><rect x="799" y="356" width="1" height="15" fill="rgb(217,139,36)"/><text x="802.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="802" y="372" width="2" height="15" fill="rgb(241,87,40)"/><text x="805.00" y="382.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="804" y="388" width="2" height="15" fill="rgb(249,24,27)"/><text x="807.00" y="398.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (3 samples, 0.46%)</title><rect x="802" y="356" width="6" height="15" fill="rgb(240,22,44)"/><text x="805.00" y="366.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.31%)</title><rect x="804" y="372" width="4" height="15" fill="rgb(250,197,33)"/><text x="807.00" y="382.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.15%)</title><rect x="806" y="388" width="2" height="15" fill="rgb(226,34,10)"/><text x="809.00" y="398.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="806" y="404" width="2" height="15" fill="rgb(246,162,5)"/><text x="809.00" y="414.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="806" y="420" width="2" height="15" fill="rgb(248,107,10)"/><text x="809.00" y="430.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.15%)</title><rect x="808" y="356" width="1" height="15" fill="rgb(232,224,28)"/><text x="811.00" y="366.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.15%)</title><rect x="808" y="372" width="1" height="15" fill="rgb(230,56,14)"/><text x="811.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="809" y="372" width="2" height="15" fill="rgb(239,162,26)"/><text x="812.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="809" y="388" width="2" height="15" fill="rgb(238,49,34)"/><text x="812.00" y="398.50"></text></g><g><title>DOUBLE_equal (loops.c.src) (1 samples, 0.15%)</title><rect x="811" y="388" width="2" height="15" fill="rgb(252,207,30)"/><text x="814.00" y="398.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src) (1 samples, 0.15%)</title><rect x="811" y="404" width="2" height="15" fill="rgb(246,90,52)"/><text x="814.00" y="414.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src) (1 samples, 0.15%)</title><rect x="811" y="420" width="2" height="15" fill="rgb(234,130,6)"/><text x="814.00" y="430.50"></text></g><g><title>sse2_compress4_to_byte_DOUBLE (simd.inc.src) (1 samples, 0.15%)</title><rect x="811" y="436" width="2" height="15" fill="rgb(230,141,21)"/><text x="814.00" y="446.50"></text></g><g><title>_mm_packs_epi16 (emmintrin.h) (1 samples, 0.15%)</title><rect x="811" y="452" width="2" height="15" fill="rgb(242,198,11)"/><text x="814.00" y="462.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.46%)</title><rect x="809" y="356" width="6" height="15" fill="rgb(235,103,45)"/><text x="812.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.31%)</title><rect x="811" y="372" width="4" height="15" fill="rgb(248,88,3)"/><text x="814.00" y="382.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="813" y="388" width="2" height="15" fill="rgb(229,40,23)"/><text x="816.00" y="398.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.31%)</title><rect x="815" y="356" width="3" height="15" fill="rgb(236,69,7)"/><text x="818.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.15%)</title><rect x="818" y="356" width="2" height="15" fill="rgb(209,24,46)"/><text x="821.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.69%)</title><rect x="802" y="340" width="20" height="15" fill="rgb(217,37,0)"/><text x="805.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="820" y="356" width="2" height="15" fill="rgb(206,56,20)"/><text x="823.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="820" y="372" width="2" height="15" fill="rgb(253,146,3)"/><text x="823.00" y="382.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.15%)</title><rect x="820" y="388" width="2" height="15" fill="rgb(209,199,30)"/><text x="823.00" y="398.50"></text></g><g><title>array_richcompare (arrayobject.c) (17 samples, 2.61%)</title><rect x="793" y="308" width="31" height="15" fill="rgb(211,45,50)"/><text x="796.00" y="318.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 1.99%)</title><rect x="800" y="324" width="24" height="15" fill="rgb(205,197,14)"/><text x="803.00" y="334.50">u..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="822" y="340" width="2" height="15" fill="rgb(210,42,44)"/><text x="825.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="822" y="356" width="2" height="15" fill="rgb(218,211,11)"/><text x="825.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="822" y="372" width="2" height="15" fill="rgb(215,86,19)"/><text x="825.00" y="382.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.15%)</title><rect x="826" y="324" width="2" height="15" fill="rgb(238,148,3)"/><text x="829.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.15%)</title><rect x="826" y="340" width="2" height="15" fill="rgb(249,118,17)"/><text x="829.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="826" y="356" width="2" height="15" fill="rgb(230,11,32)"/><text x="829.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.15%)</title><rect x="826" y="372" width="2" height="15" fill="rgb(208,59,17)"/><text x="829.00" y="382.50"></text></g><g><title>array_subscript (mapping.c) (4 samples, 0.61%)</title><rect x="824" y="308" width="7" height="15" fill="rgb(239,103,52)"/><text x="827.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (2 samples, 0.31%)</title><rect x="828" y="324" width="3" height="15" fill="rgb(229,142,39)"/><text x="831.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.15%)</title><rect x="831" y="372" width="2" height="15" fill="rgb(224,204,42)"/><text x="834.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.15%)</title><rect x="831" y="388" width="2" height="15" fill="rgb(234,83,49)"/><text x="834.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.15%)</title><rect x="831" y="404" width="2" height="15" fill="rgb(216,79,33)"/><text x="834.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.15%)</title><rect x="831" y="420" width="2" height="15" fill="rgb(249,176,20)"/><text x="834.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.15%)</title><rect x="831" y="436" width="2" height="15" fill="rgb(217,78,32)"/><text x="834.00" y="446.50"></text></g><g><title>0x7f7ac6876730 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="835" y="388" width="2" height="15" fill="rgb(236,14,28)"/><text x="838.00" y="398.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.15%)</title><rect x="837" y="388" width="1" height="15" fill="rgb(233,212,4)"/><text x="840.00" y="398.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.31%)</title><rect x="838" y="436" width="4" height="15" fill="rgb(252,118,9)"/><text x="841.00" y="446.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c) (1 samples, 0.15%)</title><rect x="842" y="436" width="2" height="15" fill="rgb(218,83,1)"/><text x="845.00" y="446.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="844" y="436" width="2" height="15" fill="rgb(253,22,30)"/><text x="847.00" y="446.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (2 samples, 0.31%)</title><rect x="846" y="436" width="3" height="15" fill="rgb(226,172,20)"/><text x="849.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 1.07%)</title><rect x="838" y="420" width="13" height="15" fill="rgb(206,9,27)"/><text x="841.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.15%)</title><rect x="849" y="436" width="2" height="15" fill="rgb(207,43,6)"/><text x="852.00" y="446.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.15%)</title><rect x="849" y="452" width="2" height="15" fill="rgb(227,178,27)"/><text x="852.00" y="462.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.15%)</title><rect x="849" y="468" width="2" height="15" fill="rgb(217,84,39)"/><text x="852.00" y="478.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.15%)</title><rect x="849" y="484" width="2" height="15" fill="rgb(226,93,8)"/><text x="852.00" y="494.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.31%)</title><rect x="851" y="420" width="4" height="15" fill="rgb(252,200,53)"/><text x="854.00" y="430.50"></text></g><g><title>0x7f7ac6860e64 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="853" y="436" width="2" height="15" fill="rgb(212,171,21)"/><text x="856.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="856" y="452" width="2" height="15" fill="rgb(231,64,47)"/><text x="859.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="856" y="468" width="2" height="15" fill="rgb(215,177,15)"/><text x="859.00" y="478.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.15%)</title><rect x="856" y="484" width="2" height="15" fill="rgb(241,12,38)"/><text x="859.00" y="494.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.15%)</title><rect x="856" y="500" width="2" height="15" fill="rgb(218,150,23)"/><text x="859.00" y="510.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (4 samples, 0.61%)</title><rect x="855" y="420" width="7" height="15" fill="rgb(217,152,38)"/><text x="858.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c) (4 samples, 0.61%)</title><rect x="855" y="436" width="7" height="15" fill="rgb(226,61,50)"/><text x="858.00" y="446.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.31%)</title><rect x="858" y="452" width="4" height="15" fill="rgb(239,45,3)"/><text x="861.00" y="462.50"></text></g><g><title>0x7f7ac6818a1e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="860" y="468" width="2" height="15" fill="rgb(223,169,22)"/><text x="863.00" y="478.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (4 samples, 0.61%)</title><rect x="862" y="420" width="7" height="15" fill="rgb(218,195,42)"/><text x="865.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.46%)</title><rect x="864" y="436" width="5" height="15" fill="rgb(218,3,52)"/><text x="867.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (3 samples, 0.46%)</title><rect x="864" y="452" width="5" height="15" fill="rgb(254,187,29)"/><text x="867.00" y="462.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.31%)</title><rect x="866" y="468" width="3" height="15" fill="rgb(207,22,33)"/><text x="869.00" y="478.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (2 samples, 0.31%)</title><rect x="869" y="420" width="4" height="15" fill="rgb(254,38,18)"/><text x="872.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (2 samples, 0.31%)</title><rect x="869" y="436" width="4" height="15" fill="rgb(253,23,7)"/><text x="872.00" y="446.50"></text></g><g><title>fetestexcept (libm-2.29.so) (2 samples, 0.31%)</title><rect x="869" y="452" width="4" height="15" fill="rgb(211,67,6)"/><text x="872.00" y="462.50"></text></g><g><title>DOUBLE_add (loops.c.src) (14 samples, 2.15%)</title><rect x="891" y="436" width="25" height="15" fill="rgb(252,153,5)"/><text x="894.00" y="446.50">D..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (7 samples, 1.07%)</title><rect x="904" y="452" width="12" height="15" fill="rgb(254,26,0)"/><text x="907.00" y="462.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (2 samples, 0.31%)</title><rect x="916" y="436" width="4" height="15" fill="rgb(224,199,45)"/><text x="919.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (56 samples, 8.59%)</title><rect x="838" y="404" width="102" height="15" fill="rgb(225,41,1)"/><text x="841.00" y="414.50">PyUFunc_Redu..</text></g><g><title>reduce_loop (ufunc_object.c) (37 samples, 5.67%)</title><rect x="873" y="420" width="67" height="15" fill="rgb(214,107,43)"/><text x="876.00" y="430.50">reduce_..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (11 samples, 1.69%)</title><rect x="920" y="436" width="20" height="15" fill="rgb(225,214,5)"/><text x="923.00" y="446.50"></text></g><g><title>array_sum (methods.c) (61 samples, 9.36%)</title><rect x="831" y="308" width="111" height="15" fill="rgb(242,191,53)"/><text x="834.00" y="318.50">array_sum (me..</text></g><g><title>forward_ndarray_method (methods.c) (61 samples, 9.36%)</title><rect x="831" y="324" width="111" height="15" fill="rgb(211,16,6)"/><text x="834.00" y="334.50">forward_ndarr..</text></g><g><title>_sum (numpy/core/_methods.py) (61 samples, 9.36%)</title><rect x="831" y="340" width="111" height="15" fill="rgb(228,85,30)"/><text x="834.00" y="350.50">_sum (numpy/c..</text></g><g><title>ufunc_reduce (ufunc_object.c) (61 samples, 9.36%)</title><rect x="831" y="356" width="111" height="15" fill="rgb(222,193,14)"/><text x="834.00" y="366.50">ufunc_reduce ..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (60 samples, 9.20%)</title><rect x="833" y="372" width="109" height="15" fill="rgb(222,121,52)"/><text x="836.00" y="382.50">PyUFunc_Gener..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (57 samples, 8.74%)</title><rect x="838" y="388" width="104" height="15" fill="rgb(236,85,45)"/><text x="841.00" y="398.50">PyUFunc_Redu..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.15%)</title><rect x="940" y="404" width="2" height="15" fill="rgb(239,190,37)"/><text x="943.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="940" y="420" width="2" height="15" fill="rgb(253,128,38)"/><text x="943.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="940" y="436" width="2" height="15" fill="rgb(237,131,32)"/><text x="943.00" y="446.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 0.77%)</title><rect x="958" y="340" width="9" height="15" fill="rgb(236,217,26)"/><text x="961.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (17 samples, 2.61%)</title><rect x="945" y="324" width="31" height="15" fill="rgb(242,45,6)"/><text x="948.00" y="334.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (5 samples, 0.77%)</title><rect x="967" y="340" width="9" height="15" fill="rgb(245,95,7)"/><text x="970.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (20 samples, 3.07%)</title><rect x="942" y="308" width="36" height="15" fill="rgb(240,161,46)"/><text x="945.00" y="318.50">che..</text></g><g><title>isclass (inspect.py) (1 samples, 0.15%)</title><rect x="976" y="324" width="2" height="15" fill="rgb(228,46,35)"/><text x="979.00" y="334.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.15%)</title><rect x="981" y="420" width="2" height="15" fill="rgb(208,147,51)"/><text x="984.00" y="430.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (9 samples, 1.38%)</title><rect x="981" y="372" width="17" height="15" fill="rgb(221,61,38)"/><text x="984.00" y="382.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (9 samples, 1.38%)</title><rect x="981" y="388" width="17" height="15" fill="rgb(237,17,16)"/><text x="984.00" y="398.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (9 samples, 1.38%)</title><rect x="981" y="404" width="17" height="15" fill="rgb(251,67,52)"/><text x="984.00" y="414.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (8 samples, 1.23%)</title><rect x="983" y="420" width="15" height="15" fill="rgb(233,178,8)"/><text x="986.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.15%)</title><rect x="998" y="388" width="1" height="15" fill="rgb(228,147,4)"/><text x="1001.00" y="398.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.15%)</title><rect x="999" y="388" width="2" height="15" fill="rgb(206,225,43)"/><text x="1002.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.46%)</title><rect x="998" y="372" width="5" height="15" fill="rgb(252,61,17)"/><text x="1001.00" y="382.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1001" y="388" width="2" height="15" fill="rgb(250,111,41)"/><text x="1004.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (27 samples, 4.14%)</title><rect x="980" y="340" width="48" height="15" fill="rgb(227,91,15)"/><text x="983.00" y="350.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c) (27 samples, 4.14%)</title><rect x="980" y="356" width="48" height="15" fill="rgb(241,68,46)"/><text x="983.00" y="366.50">iter..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (14 samples, 2.15%)</title><rect x="1003" y="372" width="25" height="15" fill="rgb(209,155,51)"/><text x="1006.00" y="382.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (14 samples, 2.15%)</title><rect x="1003" y="388" width="25" height="15" fill="rgb(241,30,53)"/><text x="1006.00" y="398.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (14 samples, 2.15%)</title><rect x="1003" y="404" width="25" height="15" fill="rgb(209,2,16)"/><text x="1006.00" y="414.50">P..</text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (12 samples, 1.84%)</title><rect x="1007" y="420" width="21" height="15" fill="rgb(217,96,23)"/><text x="1010.00" y="430.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1028" y="340" width="2" height="15" fill="rgb(206,158,20)"/><text x="1031.00" y="350.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1028" y="356" width="2" height="15" fill="rgb(235,154,42)"/><text x="1031.00" y="366.50"></text></g><g><title>ensure_dtype_nbo (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1028" y="372" width="2" height="15" fill="rgb(236,78,34)"/><text x="1031.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (200 samples, 30.67%)</title><rect x="672" y="292" width="362" height="15" fill="rgb(212,79,23)"/><text x="675.00" y="302.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (31 samples, 4.75%)</title><rect x="978" y="308" width="56" height="15" fill="rgb(226,197,43)"/><text x="981.00" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (31 samples, 4.75%)</title><rect x="978" y="324" width="56" height="15" fill="rgb(236,74,23)"/><text x="981.00" y="334.50">PyUFu..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.31%)</title><rect x="1030" y="340" width="4" height="15" fill="rgb(207,173,14)"/><text x="1033.00" y="350.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="1032" y="356" width="2" height="15" fill="rgb(221,179,30)"/><text x="1035.00" y="366.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1032" y="372" width="2" height="15" fill="rgb(212,143,37)"/><text x="1035.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1034" y="324" width="2" height="15" fill="rgb(243,155,9)"/><text x="1037.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.15%)</title><rect x="1034" y="340" width="2" height="15" fill="rgb(252,178,3)"/><text x="1037.00" y="350.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.15%)</title><rect x="1036" y="356" width="1" height="15" fill="rgb(223,45,3)"/><text x="1039.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.15%)</title><rect x="1037" y="372" width="2" height="15" fill="rgb(221,148,39)"/><text x="1040.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (4 samples, 0.61%)</title><rect x="1036" y="340" width="7" height="15" fill="rgb(207,146,18)"/><text x="1039.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.46%)</title><rect x="1037" y="356" width="6" height="15" fill="rgb(246,151,8)"/><text x="1040.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.31%)</title><rect x="1039" y="372" width="4" height="15" fill="rgb(210,98,25)"/><text x="1042.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.15%)</title><rect x="1041" y="388" width="2" height="15" fill="rgb(206,158,36)"/><text x="1044.00" y="398.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.15%)</title><rect x="1041" y="404" width="2" height="15" fill="rgb(246,104,43)"/><text x="1044.00" y="414.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.15%)</title><rect x="1041" y="420" width="2" height="15" fill="rgb(224,206,54)"/><text x="1044.00" y="430.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (2 samples, 0.31%)</title><rect x="1043" y="404" width="4" height="15" fill="rgb(218,54,37)"/><text x="1046.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 1.23%)</title><rect x="1036" y="324" width="14" height="15" fill="rgb(223,73,19)"/><text x="1039.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (4 samples, 0.61%)</title><rect x="1043" y="340" width="7" height="15" fill="rgb(245,45,54)"/><text x="1046.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (4 samples, 0.61%)</title><rect x="1043" y="356" width="7" height="15" fill="rgb(209,203,48)"/><text x="1046.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (4 samples, 0.61%)</title><rect x="1043" y="372" width="7" height="15" fill="rgb(252,24,4)"/><text x="1046.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (4 samples, 0.61%)</title><rect x="1043" y="388" width="7" height="15" fill="rgb(234,224,45)"/><text x="1046.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.31%)</title><rect x="1047" y="404" width="3" height="15" fill="rgb(235,141,23)"/><text x="1050.00" y="414.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (215 samples, 32.98%)</title><rect x="663" y="276" width="389" height="15" fill="rgb(246,214,17)"/><text x="666.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_forest.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.53%)</title><rect x="1034" y="292" width="18" height="15" fill="rgb(227,49,6)"/><text x="1037.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 1.53%)</title><rect x="1034" y="308" width="18" height="15" fill="rgb(225,14,29)"/><text x="1037.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1050" y="324" width="2" height="15" fill="rgb(242,168,30)"/><text x="1053.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (218 samples, 33.44%)</title><rect x="661" y="260" width="395" height="15" fill="rgb(225,114,22)"/><text x="664.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.31%)</title><rect x="1052" y="276" width="4" height="15" fill="rgb(209,7,27)"/><text x="1055.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.31%)</title><rect x="1052" y="292" width="4" height="15" fill="rgb(217,149,18)"/><text x="1055.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.31%)</title><rect x="1052" y="308" width="4" height="15" fill="rgb(252,183,0)"/><text x="1055.00" y="318.50"></text></g><g><title>__enter__ (joblib/parallel.py) (1 samples, 0.15%)</title><rect x="1056" y="260" width="1" height="15" fill="rgb(250,152,32)"/><text x="1059.00" y="270.50"></text></g><g><title>__exit__ (joblib/parallel.py) (6 samples, 0.92%)</title><rect x="1057" y="260" width="11" height="15" fill="rgb(226,219,27)"/><text x="1060.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py) (5 samples, 0.77%)</title><rect x="1059" y="276" width="9" height="15" fill="rgb(238,170,9)"/><text x="1062.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (253 samples, 38.80%)</title><rect x="625" y="212" width="458" height="15" fill="rgb(238,170,16)"/><text x="628.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (242 samples, 37.12%)</title><rect x="645" y="228" width="438" height="15" fill="rgb(214,180,36)"/><text x="648.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (242 samples, 37.12%)</title><rect x="645" y="244" width="438" height="15" fill="rgb(252,107,48)"/><text x="648.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (8 samples, 1.23%)</title><rect x="1068" y="260" width="15" height="15" fill="rgb(207,219,32)"/><text x="1071.00" y="270.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1083" y="212" width="2" height="15" fill="rgb(238,91,43)"/><text x="1086.00" y="222.50"></text></g><g><title>0x7ffc431f2b1d ([vdso]) (1 samples, 0.15%)</title><rect x="1083" y="228" width="2" height="15" fill="rgb(233,203,8)"/><text x="1086.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py) (260 samples, 39.88%)</title><rect x="616" y="196" width="470" height="15" fill="rgb(237,166,22)"/><text x="619.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>time_time (python3.7) (1 samples, 0.15%)</title><rect x="1085" y="212" width="1" height="15" fill="rgb(221,82,52)"/><text x="1088.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1085" y="228" width="1" height="15" fill="rgb(252,177,15)"/><text x="1088.00" y="238.50"></text></g><g><title>__exit__ (threading.py) (2 samples, 0.31%)</title><rect x="1099" y="212" width="4" height="15" fill="rgb(241,58,41)"/><text x="1102.00" y="222.50"></text></g><g><title>_qsize (queue.py) (2 samples, 0.31%)</title><rect x="1103" y="212" width="3" height="15" fill="rgb(214,51,50)"/><text x="1106.00" y="222.50"></text></g><g><title>get (queue.py) (12 samples, 1.84%)</title><rect x="1086" y="196" width="22" height="15" fill="rgb(252,127,47)"/><text x="1089.00" y="206.50">g..</text></g><g><title>notify (threading.py) (1 samples, 0.15%)</title><rect x="1106" y="212" width="2" height="15" fill="rgb(218,140,12)"/><text x="1109.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (1 samples, 0.15%)</title><rect x="1106" y="228" width="2" height="15" fill="rgb(248,213,5)"/><text x="1109.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.15%)</title><rect x="1106" y="244" width="2" height="15" fill="rgb(227,113,51)"/><text x="1109.00" y="254.50"></text></g><g><title>0x7f7ac693e140 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1115" y="212" width="2" height="15" fill="rgb(225,42,15)"/><text x="1118.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="1117" y="212" width="7" height="15" fill="rgb(231,38,46)"/><text x="1120.00" y="222.50"></text></g><g><title>0x7f7ac6876e7a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1123" y="228" width="1" height="15" fill="rgb(235,53,35)"/><text x="1126.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (15 samples, 2.30%)</title><rect x="1124" y="212" width="27" height="15" fill="rgb(241,197,14)"/><text x="1127.00" y="222.50">g..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (2 samples, 0.31%)</title><rect x="1148" y="228" width="3" height="15" fill="rgb(226,15,3)"/><text x="1151.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (25 samples, 3.83%)</title><rect x="1108" y="196" width="45" height="15" fill="rgb(218,27,6)"/><text x="1111.00" y="206.50">get_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.15%)</title><rect x="1151" y="212" width="2" height="15" fill="rgb(232,142,15)"/><text x="1154.00" y="222.50"></text></g><g><title>__enter__ (threading.py) (1 samples, 0.15%)</title><rect x="1157" y="212" width="2" height="15" fill="rgb(242,176,43)"/><text x="1160.00" y="222.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.15%)</title><rect x="1159" y="212" width="2" height="15" fill="rgb(253,191,50)"/><text x="1162.00" y="222.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.15%)</title><rect x="1159" y="228" width="2" height="15" fill="rgb(230,87,41)"/><text x="1162.00" y="238.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="1164" y="276" width="2" height="15" fill="rgb(241,41,45)"/><text x="1167.00" y="286.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (351 samples, 53.83%)</title><rect x="533" y="180" width="635" height="15" fill="rgb(242,72,2)"/><text x="536.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (8 samples, 1.23%)</title><rect x="1153" y="196" width="15" height="15" fill="rgb(213,114,13)"/><text x="1156.00" y="206.50"></text></g><g><title>notify (threading.py) (4 samples, 0.61%)</title><rect x="1161" y="212" width="7" height="15" fill="rgb(231,161,20)"/><text x="1164.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (2 samples, 0.31%)</title><rect x="1164" y="228" width="4" height="15" fill="rgb(253,180,47)"/><text x="1167.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.31%)</title><rect x="1164" y="244" width="4" height="15" fill="rgb(245,120,2)"/><text x="1167.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (2 samples, 0.31%)</title><rect x="1164" y="260" width="4" height="15" fill="rgb(231,0,50)"/><text x="1167.00" y="270.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="1166" y="276" width="2" height="15" fill="rgb(228,151,38)"/><text x="1169.00" y="286.50"></text></g><g><title>retrieve (joblib/parallel.py) (2 samples, 0.31%)</title><rect x="1168" y="180" width="3" height="15" fill="rgb(233,218,34)"/><text x="1171.00" y="190.50"></text></g><g><title>__call__ (joblib/parallel.py) (355 samples, 54.45%)</title><rect x="531" y="164" width="642" height="15" fill="rgb(253,40,22)"/><text x="534.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>short_format_time (joblib/logger.py) (1 samples, 0.15%)</title><rect x="1171" y="180" width="2" height="15" fill="rgb(217,73,24)"/><text x="1174.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.15%)</title><rect x="1173" y="164" width="2" height="15" fill="rgb(248,148,20)"/><text x="1176.00" y="174.50"></text></g><g><title>__init__ (queue.py) (1 samples, 0.15%)</title><rect x="1173" y="180" width="2" height="15" fill="rgb(243,14,11)"/><text x="1176.00" y="190.50"></text></g><g><title>__init__ (threading.py) (1 samples, 0.15%)</title><rect x="1173" y="196" width="2" height="15" fill="rgb(211,173,51)"/><text x="1176.00" y="206.50"></text></g><g><title>_joblib_parallel_args (sklearn/utils/fixes.py) (1 samples, 0.15%)</title><rect x="1175" y="164" width="2" height="15" fill="rgb(239,31,18)"/><text x="1178.00" y="174.50"></text></g><g><title>__init__ (distutils/version.py) (1 samples, 0.15%)</title><rect x="1175" y="180" width="2" height="15" fill="rgb(251,181,54)"/><text x="1178.00" y="190.50"></text></g><g><title>parse (distutils/version.py) (1 samples, 0.15%)</title><rect x="1175" y="196" width="2" height="15" fill="rgb(211,70,46)"/><text x="1178.00" y="206.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.15%)</title><rect x="1175" y="212" width="2" height="15" fill="rgb(245,109,14)"/><text x="1178.00" y="222.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py) (1 samples, 0.15%)</title><rect x="1177" y="164" width="2" height="15" fill="rgb(237,168,3)"/><text x="1180.00" y="174.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py) (1 samples, 0.15%)</title><rect x="1177" y="180" width="2" height="15" fill="rgb(226,27,48)"/><text x="1180.00" y="190.50"></text></g><g><title>profile_skl (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (360 samples, 55.21%)</title><rect x="531" y="68" width="651" height="15" fill="rgb(248,125,38)"/><text x="534.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (360 samples, 55.21%)</title><rect x="531" y="84" width="651" height="15" fill="rgb(240,172,38)"/><text x="534.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py)</text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (360 samples, 55.21%)</title><rect x="531" y="100" width="651" height="15" fill="rgb(245,208,27)"/><text x="534.00" y="110.50">profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (360 samples, 55.21%)</title><rect x="531" y="116" width="651" height="15" fill="rgb(237,104,34)"/><text x="534.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (360 samples, 55.21%)</title><rect x="531" y="132" width="651" height="15" fill="rgb(252,128,24)"/><text x="534.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py) (360 samples, 55.21%)</title><rect x="531" y="148" width="651" height="15" fill="rgb(208,158,12)"/><text x="534.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py)</text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py) (2 samples, 0.31%)</title><rect x="1179" y="164" width="3" height="15" fill="rgb(206,198,54)"/><text x="1182.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (2 samples, 0.31%)</title><rect x="1179" y="180" width="3" height="15" fill="rgb(244,84,3)"/><text x="1182.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (2 samples, 0.31%)</title><rect x="1179" y="196" width="3" height="15" fill="rgb(237,64,1)"/><text x="1182.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.15%)</title><rect x="1180" y="212" width="2" height="15" fill="rgb(208,90,29)"/><text x="1183.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="1180" y="228" width="2" height="15" fill="rgb(254,173,19)"/><text x="1183.00" y="238.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py) (1 samples, 0.15%)</title><rect x="1182" y="260" width="2" height="15" fill="rgb(240,139,8)"/><text x="1185.00" y="270.50"></text></g><g><title>randint (mtrand.c) (1 samples, 0.15%)</title><rect x="1182" y="276" width="2" height="15" fill="rgb(205,41,17)"/><text x="1185.00" y="286.50"></text></g><g><title>randint (mtrand.c) (1 samples, 0.15%)</title><rect x="1182" y="292" width="2" height="15" fill="rgb(230,117,29)"/><text x="1185.00" y="302.50"></text></g><g><title>bounded_integers__rand_int64 (bounded_integers.c) (1 samples, 0.15%)</title><rect x="1182" y="308" width="2" height="15" fill="rgb(223,132,23)"/><text x="1185.00" y="318.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;) (1 samples, 0.15%)</title><rect x="1182" y="324" width="2" height="15" fill="rgb(252,212,44)"/><text x="1185.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.15%)</title><rect x="1182" y="340" width="2" height="15" fill="rgb(228,150,53)"/><text x="1185.00" y="350.50"></text></g><g><title>prod (numpy/core/fromnumeric.py) (1 samples, 0.15%)</title><rect x="1182" y="356" width="2" height="15" fill="rgb(244,67,33)"/><text x="1185.00" y="366.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.15%)</title><rect x="1182" y="372" width="2" height="15" fill="rgb(219,182,23)"/><text x="1185.00" y="382.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1182" y="388" width="2" height="15" fill="rgb(205,183,35)"/><text x="1185.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1182" y="404" width="2" height="15" fill="rgb(219,76,9)"/><text x="1185.00" y="414.50"></text></g><g><title>0x7f7aa02a37af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="1184" y="292" width="2" height="15" fill="rgb(230,7,17)"/><text x="1187.00" y="302.50"></text></g><g><title>0x7f7aa02881e5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="1184" y="308" width="2" height="15" fill="rgb(205,8,2)"/><text x="1187.00" y="318.50"></text></g><g><title>any (&lt;__array_function__ internals&gt;) (1 samples, 0.15%)</title><rect x="1186" y="324" width="2" height="15" fill="rgb(235,165,42)"/><text x="1189.00" y="334.50"></text></g><g><title>0x7f7ac5ad40bd (?) (1 samples, 0.15%)</title><rect x="1186" y="340" width="2" height="15" fill="rgb(219,47,42)"/><text x="1189.00" y="350.50"></text></g><g><title>any (numpy/core/fromnumeric.py) (1 samples, 0.15%)</title><rect x="1186" y="356" width="2" height="15" fill="rgb(217,145,13)"/><text x="1189.00" y="366.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.15%)</title><rect x="1186" y="372" width="2" height="15" fill="rgb(211,85,22)"/><text x="1189.00" y="382.50"></text></g><g><title>0x7f7ac5ce80b8 (?) (1 samples, 0.15%)</title><rect x="1186" y="388" width="2" height="15" fill="rgb(230,221,18)"/><text x="1189.00" y="398.50"></text></g><g><title>0x7f7ac5ce6327 (?) (1 samples, 0.15%)</title><rect x="1186" y="404" width="2" height="15" fill="rgb(248,225,40)"/><text x="1189.00" y="414.50"></text></g><g><title>0x7f7ac5bc0cb2 (?) (1 samples, 0.15%)</title><rect x="1186" y="420" width="2" height="15" fill="rgb(226,200,1)"/><text x="1189.00" y="430.50"></text></g><g><title>0x7f7ac5ce4a99 (?) (1 samples, 0.15%)</title><rect x="1186" y="436" width="2" height="15" fill="rgb(224,36,20)"/><text x="1189.00" y="446.50"></text></g><g><title>0x7f7ac5d115cf (?) (1 samples, 0.15%)</title><rect x="1186" y="452" width="2" height="15" fill="rgb(252,76,37)"/><text x="1189.00" y="462.50"></text></g><g><title>all (652 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(244,37,52)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (652 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(218,31,14)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py)</text></g><g><title>start (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (4 samples, 0.61%)</title><rect x="1182" y="68" width="8" height="15" fill="rgb(234,146,0)"/><text x="1185.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py) (4 samples, 0.61%)</title><rect x="1182" y="84" width="8" height="15" fill="rgb(212,52,21)"/><text x="1185.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.61%)</title><rect x="1182" y="100" width="8" height="15" fill="rgb(210,43,50)"/><text x="1185.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (4 samples, 0.61%)</title><rect x="1182" y="116" width="8" height="15" fill="rgb(207,132,39)"/><text x="1185.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 0.61%)</title><rect x="1182" y="132" width="8" height="15" fill="rgb(209,132,0)"/><text x="1185.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (4 samples, 0.61%)</title><rect x="1182" y="148" width="8" height="15" fill="rgb(232,61,45)"/><text x="1185.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (4 samples, 0.61%)</title><rect x="1182" y="164" width="8" height="15" fill="rgb(248,80,36)"/><text x="1185.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (4 samples, 0.61%)</title><rect x="1182" y="180" width="8" height="15" fill="rgb(248,89,27)"/><text x="1185.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (4 samples, 0.61%)</title><rect x="1182" y="196" width="8" height="15" fill="rgb(211,94,28)"/><text x="1185.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 0.61%)</title><rect x="1182" y="212" width="8" height="15" fill="rgb(234,176,36)"/><text x="1185.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (4 samples, 0.61%)</title><rect x="1182" y="228" width="8" height="15" fill="rgb(219,14,45)"/><text x="1185.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (4 samples, 0.61%)</title><rect x="1182" y="244" width="8" height="15" fill="rgb(217,165,47)"/><text x="1185.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.46%)</title><rect x="1184" y="260" width="6" height="15" fill="rgb(206,172,22)"/><text x="1187.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.46%)</title><rect x="1184" y="276" width="6" height="15" fill="rgb(213,196,44)"/><text x="1187.00" y="286.50"></text></g><g><title>check_classification_targets (sklearn/utils/multiclass.py) (2 samples, 0.31%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(233,165,32)"/><text x="1189.00" y="302.50"></text></g><g><title>type_of_target (sklearn/utils/multiclass.py) (2 samples, 0.31%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(222,131,27)"/><text x="1189.00" y="318.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;) (1 samples, 0.15%)</title><rect x="1188" y="324" width="2" height="15" fill="rgb(239,197,14)"/><text x="1191.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.15%)</title><rect x="1188" y="340" width="2" height="15" fill="rgb(207,228,24)"/><text x="1191.00" y="350.50"></text></g><g><title>unique (numpy/lib/arraysetops.py) (1 samples, 0.15%)</title><rect x="1188" y="356" width="2" height="15" fill="rgb(232,91,25)"/><text x="1191.00" y="366.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.15%)</title><rect x="1188" y="372" width="2" height="15" fill="rgb(220,17,53)"/><text x="1191.00" y="382.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.15%)</title><rect x="1188" y="388" width="2" height="15" fill="rgb(228,169,20)"/><text x="1191.00" y="398.50"></text></g></g></svg>