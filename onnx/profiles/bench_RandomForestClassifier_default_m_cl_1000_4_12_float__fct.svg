<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2166" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2149.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2149.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(214,153,11)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(247,150,23)"/><text x="13.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(214,118,23)"/><text x="13.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(252,76,35)"/><text x="13.00" y="926.50"></text></g><g><title>_has (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(251,66,44)"/><text x="13.00" y="942.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.15%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(215,137,14)"/><text x="13.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.15%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(246,6,40)"/><text x="13.00" y="974.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.15%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(220,71,14)"/><text x="13.00" y="990.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="868" width="2" height="15" fill="rgb(208,125,14)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="884" width="2" height="15" fill="rgb(212,212,52)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(239,89,2)"/><text x="14.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(244,91,27)"/><text x="14.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(219,158,48)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(230,198,16)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(239,72,35)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(231,188,10)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(219,189,25)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(209,111,41)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(206,206,45)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(252,90,31)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.44%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(223,79,52)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(218,152,27)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(206,111,51)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(241,130,36)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(235,96,47)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(210,54,40)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.44%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(217,137,39)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.44%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(229,65,4)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.44%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(215,221,36)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="13" y="868" width="2" height="15" fill="rgb(215,75,12)"/><text x="16.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="13" y="884" width="2" height="15" fill="rgb(207,25,7)"/><text x="16.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="13" y="900" width="2" height="15" fill="rgb(215,31,34)"/><text x="16.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="13" y="916" width="2" height="15" fill="rgb(205,153,26)"/><text x="16.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(210,65,29)"/><text x="16.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(210,67,46)"/><text x="16.00" y="958.50"></text></g><g><title>sub (re.py) (1 samples, 0.15%)</title><rect x="13" y="964" width="2" height="15" fill="rgb(246,211,41)"/><text x="16.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.15%)</title><rect x="13" y="980" width="2" height="15" fill="rgb(220,152,54)"/><text x="16.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.15%)</title><rect x="13" y="996" width="2" height="15" fill="rgb(220,210,1)"/><text x="16.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.15%)</title><rect x="13" y="1012" width="2" height="15" fill="rgb(238,147,25)"/><text x="16.00" y="1022.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.15%)</title><rect x="13" y="1028" width="2" height="15" fill="rgb(226,14,53)"/><text x="16.00" y="1038.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 0.58%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(226,109,7)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(252,132,46)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(251,114,18)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(237,45,15)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.58%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(251,117,49)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(226,20,37)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.58%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(208,194,42)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(232,106,38)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(227,133,35)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(205,181,44)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.58%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(226,227,38)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(251,157,54)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 0.58%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(215,93,38)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(242,67,4)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(216,74,20)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(229,132,20)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.58%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(219,85,39)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(212,148,53)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 0.58%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(216,110,1)"/><text x="13.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="596" width="1" height="15" fill="rgb(224,225,19)"/><text x="18.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="612" width="1" height="15" fill="rgb(224,126,17)"/><text x="18.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="628" width="1" height="15" fill="rgb(236,186,23)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="644" width="1" height="15" fill="rgb(207,227,30)"/><text x="18.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="660" width="1" height="15" fill="rgb(248,26,24)"/><text x="18.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="676" width="1" height="15" fill="rgb(213,95,23)"/><text x="18.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="692" width="1" height="15" fill="rgb(216,98,27)"/><text x="18.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor_pb2.py) (1 samples, 0.15%)</title><rect x="15" y="708" width="1" height="15" fill="rgb(236,82,42)"/><text x="18.00" y="718.50"></text></g><g><title>__new__ (protobuf/descriptor.py) (1 samples, 0.15%)</title><rect x="15" y="724" width="1" height="15" fill="rgb(210,24,29)"/><text x="18.00" y="734.50"></text></g><g><title>0x7fa7310bdf3a (?) (1 samples, 0.15%)</title><rect x="15" y="740" width="1" height="15" fill="rgb(218,76,2)"/><text x="18.00" y="750.50"></text></g><g><title>0x7fa731107a16 (?) (1 samples, 0.15%)</title><rect x="15" y="756" width="1" height="15" fill="rgb(240,131,16)"/><text x="18.00" y="766.50"></text></g><g><title>0x7fa7310feb36 (?) (1 samples, 0.15%)</title><rect x="15" y="772" width="1" height="15" fill="rgb(253,17,17)"/><text x="18.00" y="782.50"></text></g><g><title>0x7fa7310fea13 (?) (1 samples, 0.15%)</title><rect x="15" y="788" width="1" height="15" fill="rgb(221,228,14)"/><text x="18.00" y="798.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="15" y="804" width="1" height="15" fill="rgb(239,42,30)"/><text x="18.00" y="814.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py) (1 samples, 0.15%)</title><rect x="16" y="580" width="2" height="15" fill="rgb(235,172,2)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="16" y="596" width="2" height="15" fill="rgb(235,173,31)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="16" y="612" width="2" height="15" fill="rgb(251,13,7)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="16" y="628" width="2" height="15" fill="rgb(208,59,45)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="16" y="644" width="2" height="15" fill="rgb(253,46,23)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="16" y="660" width="2" height="15" fill="rgb(236,142,19)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/base.py) (1 samples, 0.15%)</title><rect x="16" y="676" width="2" height="15" fill="rgb(236,133,1)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="16" y="692" width="2" height="15" fill="rgb(244,208,26)"/><text x="19.00" y="702.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="16" y="708" width="2" height="15" fill="rgb(224,222,11)"/><text x="19.00" y="718.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="16" y="724" width="2" height="15" fill="rgb(212,218,54)"/><text x="19.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="916" width="2" height="15" fill="rgb(251,181,29)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="932" width="2" height="15" fill="rgb(208,215,20)"/><text x="21.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="948" width="2" height="15" fill="rgb(236,23,42)"/><text x="21.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="964" width="2" height="15" fill="rgb(224,123,40)"/><text x="21.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="980" width="2" height="15" fill="rgb(250,192,38)"/><text x="21.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.15%)</title><rect x="18" y="996" width="2" height="15" fill="rgb(209,57,36)"/><text x="21.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1012" width="2" height="15" fill="rgb(211,4,36)"/><text x="21.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1028" width="2" height="15" fill="rgb(227,224,18)"/><text x="21.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1044" width="2" height="15" fill="rgb(232,121,45)"/><text x="21.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1060" width="2" height="15" fill="rgb(234,17,17)"/><text x="21.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1076" width="2" height="15" fill="rgb(252,198,10)"/><text x="21.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="1092" width="2" height="15" fill="rgb(214,136,22)"/><text x="21.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1108" width="2" height="15" fill="rgb(244,68,33)"/><text x="21.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.15%)</title><rect x="18" y="1124" width="2" height="15" fill="rgb(216,169,43)"/><text x="21.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1140" width="2" height="15" fill="rgb(244,0,51)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1156" width="2" height="15" fill="rgb(239,31,25)"/><text x="21.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1172" width="2" height="15" fill="rgb(254,194,50)"/><text x="21.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="1188" width="2" height="15" fill="rgb(212,121,48)"/><text x="21.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1204" width="2" height="15" fill="rgb(237,124,52)"/><text x="21.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.15%)</title><rect x="18" y="1220" width="2" height="15" fill="rgb(250,129,13)"/><text x="21.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1236" width="2" height="15" fill="rgb(211,132,26)"/><text x="21.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1252" width="2" height="15" fill="rgb(237,184,46)"/><text x="21.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1268" width="2" height="15" fill="rgb(214,177,43)"/><text x="21.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="1284" width="2" height="15" fill="rgb(233,91,10)"/><text x="21.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1300" width="2" height="15" fill="rgb(245,74,34)"/><text x="21.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.15%)</title><rect x="18" y="1316" width="2" height="15" fill="rgb(217,37,9)"/><text x="21.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1332" width="2" height="15" fill="rgb(238,91,33)"/><text x="21.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1348" width="2" height="15" fill="rgb(228,147,27)"/><text x="21.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1364" width="2" height="15" fill="rgb(212,80,19)"/><text x="21.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="1380" width="2" height="15" fill="rgb(242,164,30)"/><text x="21.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1396" width="2" height="15" fill="rgb(206,205,36)"/><text x="21.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.15%)</title><rect x="18" y="1412" width="2" height="15" fill="rgb(225,159,42)"/><text x="21.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1428" width="2" height="15" fill="rgb(252,18,26)"/><text x="21.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1444" width="2" height="15" fill="rgb(215,129,47)"/><text x="21.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1460" width="2" height="15" fill="rgb(250,177,50)"/><text x="21.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="1476" width="2" height="15" fill="rgb(219,165,31)"/><text x="21.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1492" width="2" height="15" fill="rgb(245,14,8)"/><text x="21.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.15%)</title><rect x="18" y="1508" width="2" height="15" fill="rgb(231,155,30)"/><text x="21.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1524" width="2" height="15" fill="rgb(222,89,28)"/><text x="21.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1540" width="2" height="15" fill="rgb(242,82,23)"/><text x="21.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1556" width="2" height="15" fill="rgb(218,130,33)"/><text x="21.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="1572" width="2" height="15" fill="rgb(208,59,21)"/><text x="21.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1588" width="2" height="15" fill="rgb(235,143,46)"/><text x="21.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/__init__.py) (1 samples, 0.15%)</title><rect x="18" y="1604" width="2" height="15" fill="rgb(231,167,27)"/><text x="21.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1620" width="2" height="15" fill="rgb(239,60,21)"/><text x="21.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1636" width="2" height="15" fill="rgb(244,158,44)"/><text x="21.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1652" width="2" height="15" fill="rgb(213,115,17)"/><text x="21.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="1668" width="2" height="15" fill="rgb(253,106,29)"/><text x="21.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1684" width="2" height="15" fill="rgb(206,127,13)"/><text x="21.00" y="1694.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/iterative.py) (1 samples, 0.15%)</title><rect x="18" y="1700" width="2" height="15" fill="rgb(205,62,30)"/><text x="21.00" y="1710.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1716" width="2" height="15" fill="rgb(225,94,12)"/><text x="21.00" y="1726.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1732" width="2" height="15" fill="rgb(214,3,30)"/><text x="21.00" y="1742.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1748" width="2" height="15" fill="rgb(222,227,37)"/><text x="21.00" y="1758.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="18" y="1764" width="2" height="15" fill="rgb(241,24,39)"/><text x="21.00" y="1774.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="18" y="1780" width="2" height="15" fill="rgb(226,23,14)"/><text x="21.00" y="1790.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/interface.py) (1 samples, 0.15%)</title><rect x="18" y="1796" width="2" height="15" fill="rgb(232,178,24)"/><text x="21.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="16" y="500" width="7" height="15" fill="rgb(215,8,0)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="16" y="516" width="7" height="15" fill="rgb(208,74,51)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="16" y="532" width="7" height="15" fill="rgb(247,135,36)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.58%)</title><rect x="16" y="548" width="7" height="15" fill="rgb(209,41,32)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="16" y="564" width="7" height="15" fill="rgb(226,112,13)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 0.44%)</title><rect x="18" y="580" width="5" height="15" fill="rgb(226,188,33)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="18" y="596" width="5" height="15" fill="rgb(232,73,23)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="18" y="612" width="5" height="15" fill="rgb(228,227,21)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="18" y="628" width="5" height="15" fill="rgb(233,28,48)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="18" y="644" width="5" height="15" fill="rgb(243,107,53)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="18" y="660" width="5" height="15" fill="rgb(215,32,17)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 0.44%)</title><rect x="18" y="676" width="5" height="15" fill="rgb(250,210,3)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="18" y="692" width="5" height="15" fill="rgb(249,155,29)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="18" y="708" width="5" height="15" fill="rgb(238,189,7)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="18" y="724" width="5" height="15" fill="rgb(235,200,50)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="18" y="740" width="5" height="15" fill="rgb(244,137,11)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="18" y="756" width="5" height="15" fill="rgb(220,17,5)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 0.44%)</title><rect x="18" y="772" width="5" height="15" fill="rgb(233,170,54)"/><text x="21.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="18" y="788" width="5" height="15" fill="rgb(221,129,46)"/><text x="21.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="18" y="804" width="5" height="15" fill="rgb(230,2,30)"/><text x="21.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="18" y="820" width="5" height="15" fill="rgb(231,134,27)"/><text x="21.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="18" y="836" width="5" height="15" fill="rgb(220,199,42)"/><text x="21.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="18" y="852" width="5" height="15" fill="rgb(249,12,35)"/><text x="21.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="18" y="868" width="5" height="15" fill="rgb(213,35,29)"/><text x="21.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="18" y="884" width="5" height="15" fill="rgb(238,140,35)"/><text x="21.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 0.44%)</title><rect x="18" y="900" width="5" height="15" fill="rgb(242,184,24)"/><text x="21.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="20" y="916" width="3" height="15" fill="rgb(215,170,16)"/><text x="23.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="20" y="932" width="3" height="15" fill="rgb(240,104,35)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="20" y="948" width="3" height="15" fill="rgb(225,194,45)"/><text x="23.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="20" y="964" width="3" height="15" fill="rgb(222,11,3)"/><text x="23.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="20" y="980" width="3" height="15" fill="rgb(240,119,22)"/><text x="23.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.29%)</title><rect x="20" y="996" width="3" height="15" fill="rgb(217,134,22)"/><text x="23.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="20" y="1012" width="3" height="15" fill="rgb(234,179,1)"/><text x="23.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py) (2 samples, 0.29%)</title><rect x="20" y="1028" width="3" height="15" fill="rgb(222,184,0)"/><text x="23.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.15%)</title><rect x="22" y="1044" width="1" height="15" fill="rgb(244,62,44)"/><text x="25.00" y="1054.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.15%)</title><rect x="22" y="1060" width="1" height="15" fill="rgb(224,65,25)"/><text x="25.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.15%)</title><rect x="22" y="1076" width="1" height="15" fill="rgb(226,5,9)"/><text x="25.00" y="1086.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.15%)</title><rect x="22" y="1092" width="1" height="15" fill="rgb(219,50,11)"/><text x="25.00" y="1102.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.15%)</title><rect x="22" y="1108" width="1" height="15" fill="rgb(249,171,11)"/><text x="25.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.15%)</title><rect x="22" y="1124" width="1" height="15" fill="rgb(206,191,9)"/><text x="25.00" y="1134.50"></text></g><g><title>_signature_bound_method (inspect.py) (1 samples, 0.15%)</title><rect x="22" y="1140" width="1" height="15" fill="rgb(247,224,22)"/><text x="25.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.31%)</title><rect x="10" y="196" width="15" height="15" fill="rgb(254,129,40)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.31%)</title><rect x="10" y="212" width="15" height="15" fill="rgb(223,142,0)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.31%)</title><rect x="10" y="228" width="15" height="15" fill="rgb(220,29,9)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.31%)</title><rect x="10" y="244" width="15" height="15" fill="rgb(232,220,3)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.31%)</title><rect x="10" y="260" width="15" height="15" fill="rgb(251,32,23)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.31%)</title><rect x="10" y="276" width="15" height="15" fill="rgb(222,120,4)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (5 samples, 0.73%)</title><rect x="16" y="292" width="9" height="15" fill="rgb(235,115,53)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="16" y="308" width="9" height="15" fill="rgb(245,148,17)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="16" y="324" width="9" height="15" fill="rgb(239,69,7)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="16" y="340" width="9" height="15" fill="rgb(210,61,30)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.73%)</title><rect x="16" y="356" width="9" height="15" fill="rgb(210,187,5)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="16" y="372" width="9" height="15" fill="rgb(217,183,35)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (5 samples, 0.73%)</title><rect x="16" y="388" width="9" height="15" fill="rgb(209,210,35)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="16" y="404" width="9" height="15" fill="rgb(213,190,38)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="16" y="420" width="9" height="15" fill="rgb(217,29,4)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="16" y="436" width="9" height="15" fill="rgb(226,158,8)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.73%)</title><rect x="16" y="452" width="9" height="15" fill="rgb(206,101,34)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="16" y="468" width="9" height="15" fill="rgb(223,48,21)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (5 samples, 0.73%)</title><rect x="16" y="484" width="9" height="15" fill="rgb(249,217,53)"/><text x="19.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="500" width="2" height="15" fill="rgb(214,1,31)"/><text x="26.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="516" width="2" height="15" fill="rgb(250,161,4)"/><text x="26.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="532" width="2" height="15" fill="rgb(219,45,46)"/><text x="26.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="548" width="2" height="15" fill="rgb(247,72,52)"/><text x="26.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="564" width="2" height="15" fill="rgb(239,21,5)"/><text x="26.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="23" y="580" width="2" height="15" fill="rgb(231,117,36)"/><text x="26.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="596" width="2" height="15" fill="rgb(250,22,8)"/><text x="26.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.15%)</title><rect x="23" y="612" width="2" height="15" fill="rgb(221,140,53)"/><text x="26.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="628" width="2" height="15" fill="rgb(252,87,51)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="644" width="2" height="15" fill="rgb(254,229,15)"/><text x="26.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="660" width="2" height="15" fill="rgb(205,213,9)"/><text x="26.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="23" y="676" width="2" height="15" fill="rgb(252,82,6)"/><text x="26.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="692" width="2" height="15" fill="rgb(234,185,48)"/><text x="26.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.15%)</title><rect x="23" y="708" width="2" height="15" fill="rgb(236,213,45)"/><text x="26.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="724" width="2" height="15" fill="rgb(213,108,44)"/><text x="26.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="740" width="2" height="15" fill="rgb(248,162,14)"/><text x="26.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="756" width="2" height="15" fill="rgb(245,83,41)"/><text x="26.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="23" y="772" width="2" height="15" fill="rgb(247,53,9)"/><text x="26.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="788" width="2" height="15" fill="rgb(221,188,13)"/><text x="26.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.15%)</title><rect x="23" y="804" width="2" height="15" fill="rgb(245,142,32)"/><text x="26.00" y="814.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="820" width="2" height="15" fill="rgb(217,190,23)"/><text x="26.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="836" width="2" height="15" fill="rgb(248,195,24)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="852" width="2" height="15" fill="rgb(208,142,6)"/><text x="26.00" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="868" width="2" height="15" fill="rgb(218,39,48)"/><text x="26.00" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="884" width="2" height="15" fill="rgb(211,86,27)"/><text x="26.00" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="23" y="900" width="2" height="15" fill="rgb(254,116,40)"/><text x="26.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="916" width="2" height="15" fill="rgb(211,112,11)"/><text x="26.00" y="926.50"></text></g><g><title>&lt;module&gt; (joblib/hashing.py) (1 samples, 0.15%)</title><rect x="23" y="932" width="2" height="15" fill="rgb(240,116,10)"/><text x="26.00" y="942.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.15%)</title><rect x="25" y="1412" width="2" height="15" fill="rgb(231,20,10)"/><text x="28.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.29%)</title><rect x="25" y="1204" width="3" height="15" fill="rgb(242,18,35)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="25" y="1220" width="3" height="15" fill="rgb(250,227,21)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="25" y="1236" width="3" height="15" fill="rgb(234,56,17)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="25" y="1252" width="3" height="15" fill="rgb(251,112,29)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.29%)</title><rect x="25" y="1268" width="3" height="15" fill="rgb(222,82,10)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="25" y="1284" width="3" height="15" fill="rgb(221,146,30)"/><text x="28.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.29%)</title><rect x="25" y="1300" width="3" height="15" fill="rgb(218,200,1)"/><text x="28.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.29%)</title><rect x="25" y="1316" width="3" height="15" fill="rgb(242,98,9)"/><text x="28.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.29%)</title><rect x="25" y="1332" width="3" height="15" fill="rgb(230,73,4)"/><text x="28.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.29%)</title><rect x="25" y="1348" width="3" height="15" fill="rgb(235,49,53)"/><text x="28.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (2 samples, 0.29%)</title><rect x="25" y="1364" width="3" height="15" fill="rgb(205,194,3)"/><text x="28.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (2 samples, 0.29%)</title><rect x="25" y="1380" width="3" height="15" fill="rgb(227,11,23)"/><text x="28.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (2 samples, 0.29%)</title><rect x="25" y="1396" width="3" height="15" fill="rgb(243,216,14)"/><text x="28.00" y="1406.50"></text></g><g><title>sre_ucs1_match.cold.27 (python3.7) (1 samples, 0.15%)</title><rect x="27" y="1412" width="1" height="15" fill="rgb(244,115,51)"/><text x="30.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="25" y="1124" width="5" height="15" fill="rgb(244,203,50)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="25" y="1140" width="5" height="15" fill="rgb(236,195,17)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="25" y="1156" width="5" height="15" fill="rgb(220,191,25)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="25" y="1172" width="5" height="15" fill="rgb(210,42,50)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="25" y="1188" width="5" height="15" fill="rgb(236,229,47)"/><text x="28.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/proto/__init__.py) (1 samples, 0.15%)</title><rect x="28" y="1204" width="2" height="15" fill="rgb(214,226,9)"/><text x="31.00" y="1214.50"></text></g><g><title>_check_onnx_version (skl2onnx/proto/__init__.py) (1 samples, 0.15%)</title><rect x="28" y="1220" width="2" height="15" fill="rgb(208,58,19)"/><text x="31.00" y="1230.50"></text></g><g><title>get_distribution (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="28" y="1236" width="2" height="15" fill="rgb(239,41,51)"/><text x="31.00" y="1246.50"></text></g><g><title>parse (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="28" y="1252" width="2" height="15" fill="rgb(224,212,24)"/><text x="31.00" y="1262.50"></text></g><g><title>parse_requirements (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="28" y="1268" width="2" height="15" fill="rgb(237,178,43)"/><text x="31.00" y="1278.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="28" y="1284" width="2" height="15" fill="rgb(206,165,18)"/><text x="31.00" y="1294.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.15%)</title><rect x="28" y="1300" width="2" height="15" fill="rgb(240,38,49)"/><text x="31.00" y="1310.50"></text></g><g><title>parseString (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="28" y="1316" width="2" height="15" fill="rgb(252,19,29)"/><text x="31.00" y="1326.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="28" y="1332" width="2" height="15" fill="rgb(235,18,43)"/><text x="31.00" y="1342.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="28" y="1348" width="2" height="15" fill="rgb(222,145,22)"/><text x="31.00" y="1358.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="28" y="1364" width="2" height="15" fill="rgb(249,12,28)"/><text x="31.00" y="1374.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="28" y="1380" width="2" height="15" fill="rgb(247,28,46)"/><text x="31.00" y="1390.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="28" y="1396" width="2" height="15" fill="rgb(251,22,3)"/><text x="31.00" y="1406.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="28" y="1412" width="2" height="15" fill="rgb(249,79,17)"/><text x="31.00" y="1422.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="28" y="1428" width="2" height="15" fill="rgb(230,168,31)"/><text x="31.00" y="1438.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="28" y="1444" width="2" height="15" fill="rgb(230,197,1)"/><text x="31.00" y="1454.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.15%)</title><rect x="28" y="1460" width="2" height="15" fill="rgb(232,169,16)"/><text x="31.00" y="1470.50"></text></g><g><title>__str__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="28" y="1476" width="2" height="15" fill="rgb(206,17,9)"/><text x="31.00" y="1486.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.15%)</title><rect x="28" y="1492" width="2" height="15" fill="rgb(248,19,40)"/><text x="31.00" y="1502.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="28" y="1508" width="2" height="15" fill="rgb(245,191,0)"/><text x="31.00" y="1518.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.15%)</title><rect x="28" y="1524" width="2" height="15" fill="rgb(233,161,44)"/><text x="31.00" y="1534.50"></text></g><g><title>0x7fa742d6c74d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="28" y="1540" width="2" height="15" fill="rgb(243,43,31)"/><text x="31.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="30" y="1476" width="4" height="15" fill="rgb(223,201,6)"/><text x="33.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="30" y="1492" width="4" height="15" fill="rgb(225,128,31)"/><text x="33.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="30" y="1508" width="4" height="15" fill="rgb(227,140,46)"/><text x="33.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.29%)</title><rect x="30" y="1524" width="4" height="15" fill="rgb(210,177,19)"/><text x="33.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="30" y="1540" width="4" height="15" fill="rgb(238,188,14)"/><text x="33.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (2 samples, 0.29%)</title><rect x="30" y="1556" width="4" height="15" fill="rgb(251,193,44)"/><text x="33.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (2 samples, 0.29%)</title><rect x="30" y="1572" width="4" height="15" fill="rgb(247,89,3)"/><text x="33.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (2 samples, 0.29%)</title><rect x="30" y="1588" width="4" height="15" fill="rgb(235,97,12)"/><text x="33.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (2 samples, 0.29%)</title><rect x="30" y="1604" width="4" height="15" fill="rgb(221,63,32)"/><text x="33.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (2 samples, 0.29%)</title><rect x="30" y="1620" width="4" height="15" fill="rgb(246,90,0)"/><text x="33.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (2 samples, 0.29%)</title><rect x="30" y="1636" width="4" height="15" fill="rgb(238,154,19)"/><text x="33.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (2 samples, 0.29%)</title><rect x="30" y="1652" width="4" height="15" fill="rgb(217,36,29)"/><text x="33.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (2 samples, 0.29%)</title><rect x="30" y="1668" width="4" height="15" fill="rgb(227,225,48)"/><text x="33.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (2 samples, 0.29%)</title><rect x="30" y="1684" width="4" height="15" fill="rgb(230,156,40)"/><text x="33.00" y="1694.50"></text></g><g><title>analyze_node (jinja2/idtracking.py) (2 samples, 0.29%)</title><rect x="30" y="1700" width="4" height="15" fill="rgb(212,99,24)"/><text x="33.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (2 samples, 0.29%)</title><rect x="30" y="1716" width="4" height="15" fill="rgb(229,131,50)"/><text x="33.00" y="1726.50"></text></g><g><title>_simple_visit (jinja2/idtracking.py) (1 samples, 0.15%)</title><rect x="32" y="1732" width="2" height="15" fill="rgb(254,87,43)"/><text x="35.00" y="1742.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.15%)</title><rect x="32" y="1748" width="2" height="15" fill="rgb(234,66,24)"/><text x="35.00" y="1758.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.15%)</title><rect x="32" y="1764" width="2" height="15" fill="rgb(233,142,36)"/><text x="35.00" y="1774.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.15%)</title><rect x="32" y="1780" width="2" height="15" fill="rgb(209,180,20)"/><text x="35.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="484" width="10" height="15" fill="rgb(224,170,5)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="500" width="10" height="15" fill="rgb(253,2,42)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="516" width="10" height="15" fill="rgb(222,120,17)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="532" width="10" height="15" fill="rgb(240,150,0)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.88%)</title><rect x="25" y="548" width="10" height="15" fill="rgb(236,193,20)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="564" width="10" height="15" fill="rgb(252,13,19)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 0.88%)</title><rect x="25" y="580" width="10" height="15" fill="rgb(213,4,32)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="596" width="10" height="15" fill="rgb(209,104,14)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="612" width="10" height="15" fill="rgb(241,57,19)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="628" width="10" height="15" fill="rgb(241,218,44)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.88%)</title><rect x="25" y="644" width="10" height="15" fill="rgb(244,146,13)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="660" width="10" height="15" fill="rgb(239,150,5)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 0.88%)</title><rect x="25" y="676" width="10" height="15" fill="rgb(215,223,26)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="692" width="10" height="15" fill="rgb(254,66,20)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="708" width="10" height="15" fill="rgb(206,164,47)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="724" width="10" height="15" fill="rgb(231,153,45)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.88%)</title><rect x="25" y="740" width="10" height="15" fill="rgb(220,198,13)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="756" width="10" height="15" fill="rgb(235,52,26)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (6 samples, 0.88%)</title><rect x="25" y="772" width="10" height="15" fill="rgb(218,193,25)"/><text x="28.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="788" width="10" height="15" fill="rgb(253,94,36)"/><text x="28.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="804" width="10" height="15" fill="rgb(229,106,53)"/><text x="28.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="820" width="10" height="15" fill="rgb(211,189,36)"/><text x="28.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.88%)</title><rect x="25" y="836" width="10" height="15" fill="rgb(214,81,45)"/><text x="28.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="852" width="10" height="15" fill="rgb(243,150,13)"/><text x="28.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (6 samples, 0.88%)</title><rect x="25" y="868" width="10" height="15" fill="rgb(251,126,30)"/><text x="28.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="884" width="10" height="15" fill="rgb(210,195,11)"/><text x="28.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="900" width="10" height="15" fill="rgb(228,152,36)"/><text x="28.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="916" width="10" height="15" fill="rgb(228,14,51)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="932" width="10" height="15" fill="rgb(247,198,38)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="948" width="10" height="15" fill="rgb(254,81,52)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="964" width="10" height="15" fill="rgb(208,59,48)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.88%)</title><rect x="25" y="980" width="10" height="15" fill="rgb(215,165,34)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="996" width="10" height="15" fill="rgb(205,173,30)"/><text x="28.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (6 samples, 0.88%)</title><rect x="25" y="1012" width="10" height="15" fill="rgb(247,201,4)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="1028" width="10" height="15" fill="rgb(236,146,2)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="1044" width="10" height="15" fill="rgb(248,81,54)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="1060" width="10" height="15" fill="rgb(218,65,32)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.88%)</title><rect x="25" y="1076" width="10" height="15" fill="rgb(234,34,25)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.88%)</title><rect x="25" y="1092" width="10" height="15" fill="rgb(212,192,50)"/><text x="28.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (6 samples, 0.88%)</title><rect x="25" y="1108" width="10" height="15" fill="rgb(228,87,2)"/><text x="28.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1124" width="5" height="15" fill="rgb(206,72,3)"/><text x="33.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1140" width="5" height="15" fill="rgb(246,49,33)"/><text x="33.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1156" width="5" height="15" fill="rgb(241,45,7)"/><text x="33.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1172" width="5" height="15" fill="rgb(220,132,33)"/><text x="33.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1188" width="5" height="15" fill="rgb(217,74,4)"/><text x="33.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="30" y="1204" width="5" height="15" fill="rgb(215,152,38)"/><text x="33.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1220" width="5" height="15" fill="rgb(221,200,20)"/><text x="33.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.44%)</title><rect x="30" y="1236" width="5" height="15" fill="rgb(243,199,26)"/><text x="33.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1252" width="5" height="15" fill="rgb(209,125,50)"/><text x="33.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1268" width="5" height="15" fill="rgb(251,5,12)"/><text x="33.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1284" width="5" height="15" fill="rgb(246,30,23)"/><text x="33.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1300" width="5" height="15" fill="rgb(236,169,8)"/><text x="33.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1316" width="5" height="15" fill="rgb(253,148,38)"/><text x="33.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="30" y="1332" width="5" height="15" fill="rgb(233,80,23)"/><text x="33.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1348" width="5" height="15" fill="rgb(237,198,45)"/><text x="33.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.44%)</title><rect x="30" y="1364" width="5" height="15" fill="rgb(234,98,5)"/><text x="33.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1380" width="5" height="15" fill="rgb(254,105,21)"/><text x="33.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1396" width="5" height="15" fill="rgb(252,61,28)"/><text x="33.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1412" width="5" height="15" fill="rgb(228,136,27)"/><text x="33.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="30" y="1428" width="5" height="15" fill="rgb(217,4,40)"/><text x="33.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="30" y="1444" width="5" height="15" fill="rgb(226,199,17)"/><text x="33.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.44%)</title><rect x="30" y="1460" width="5" height="15" fill="rgb(248,206,41)"/><text x="33.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.15%)</title><rect x="34" y="1476" width="1" height="15" fill="rgb(232,208,45)"/><text x="37.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.15%)</title><rect x="34" y="1492" width="1" height="15" fill="rgb(208,16,48)"/><text x="37.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.15%)</title><rect x="34" y="1508" width="1" height="15" fill="rgb(238,217,13)"/><text x="37.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.15%)</title><rect x="34" y="1524" width="1" height="15" fill="rgb(252,8,46)"/><text x="37.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.15%)</title><rect x="34" y="1540" width="1" height="15" fill="rgb(236,135,54)"/><text x="37.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.15%)</title><rect x="34" y="1556" width="1" height="15" fill="rgb(211,216,3)"/><text x="37.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.15%)</title><rect x="34" y="1572" width="1" height="15" fill="rgb(206,180,14)"/><text x="37.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.15%)</title><rect x="34" y="1588" width="1" height="15" fill="rgb(218,22,26)"/><text x="37.00" y="1598.50"></text></g><g><title>0x7fa71828740e (?) (1 samples, 0.15%)</title><rect x="35" y="916" width="2" height="15" fill="rgb(209,2,18)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="932" width="2" height="15" fill="rgb(238,90,50)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="948" width="2" height="15" fill="rgb(228,63,31)"/><text x="38.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="964" width="2" height="15" fill="rgb(234,162,18)"/><text x="38.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="35" y="980" width="2" height="15" fill="rgb(229,216,50)"/><text x="38.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="996" width="2" height="15" fill="rgb(212,103,22)"/><text x="38.00" y="1006.50"></text></g><g><title>0x7fa718040cd2 (?) (1 samples, 0.15%)</title><rect x="35" y="1012" width="2" height="15" fill="rgb(246,111,53)"/><text x="38.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1028" width="2" height="15" fill="rgb(240,191,33)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1044" width="2" height="15" fill="rgb(213,56,39)"/><text x="38.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1060" width="2" height="15" fill="rgb(254,149,54)"/><text x="38.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="35" y="1076" width="2" height="15" fill="rgb(205,143,27)"/><text x="38.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1092" width="2" height="15" fill="rgb(215,58,8)"/><text x="38.00" y="1102.50"></text></g><g><title>0x7fa7177360e5 (?) (1 samples, 0.15%)</title><rect x="35" y="1108" width="2" height="15" fill="rgb(227,74,35)"/><text x="38.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1124" width="2" height="15" fill="rgb(205,99,24)"/><text x="38.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1140" width="2" height="15" fill="rgb(230,225,52)"/><text x="38.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1156" width="2" height="15" fill="rgb(254,38,40)"/><text x="38.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="35" y="1172" width="2" height="15" fill="rgb(212,134,16)"/><text x="38.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1188" width="2" height="15" fill="rgb(236,86,11)"/><text x="38.00" y="1198.50"></text></g><g><title>0x7fa7174bae68 (?) (1 samples, 0.15%)</title><rect x="35" y="1204" width="2" height="15" fill="rgb(246,128,22)"/><text x="38.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1220" width="2" height="15" fill="rgb(240,218,51)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1236" width="2" height="15" fill="rgb(210,145,49)"/><text x="38.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1252" width="2" height="15" fill="rgb(226,175,23)"/><text x="38.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="35" y="1268" width="2" height="15" fill="rgb(253,152,53)"/><text x="38.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1284" width="2" height="15" fill="rgb(239,94,23)"/><text x="38.00" y="1294.50"></text></g><g><title>0x7fa71724b2fb (?) (1 samples, 0.15%)</title><rect x="35" y="1300" width="2" height="15" fill="rgb(236,204,24)"/><text x="38.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1316" width="2" height="15" fill="rgb(251,128,2)"/><text x="38.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1332" width="2" height="15" fill="rgb(222,212,0)"/><text x="38.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1348" width="2" height="15" fill="rgb(214,123,48)"/><text x="38.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="35" y="1364" width="2" height="15" fill="rgb(216,160,18)"/><text x="38.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1380" width="2" height="15" fill="rgb(219,202,36)"/><text x="38.00" y="1390.50"></text></g><g><title>0x7fa71702f153 (?) (1 samples, 0.15%)</title><rect x="35" y="1396" width="2" height="15" fill="rgb(250,40,33)"/><text x="38.00" y="1406.50"></text></g><g><title>0x7fa71702dc13 (?) (1 samples, 0.15%)</title><rect x="35" y="1412" width="2" height="15" fill="rgb(209,5,2)"/><text x="38.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1428" width="2" height="15" fill="rgb(246,91,52)"/><text x="38.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1444" width="2" height="15" fill="rgb(245,26,44)"/><text x="38.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1460" width="2" height="15" fill="rgb(209,181,31)"/><text x="38.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="35" y="1476" width="2" height="15" fill="rgb(234,214,19)"/><text x="38.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1492" width="2" height="15" fill="rgb(227,73,24)"/><text x="38.00" y="1502.50"></text></g><g><title>0x7fa716dca181 (?) (1 samples, 0.15%)</title><rect x="35" y="1508" width="2" height="15" fill="rgb(222,202,52)"/><text x="38.00" y="1518.50"></text></g><g><title>0x7fa716dcd1c9 (?) (1 samples, 0.15%)</title><rect x="35" y="1524" width="2" height="15" fill="rgb(216,205,22)"/><text x="38.00" y="1534.50"></text></g><g><title>0x7fa716df9167 (?) (1 samples, 0.15%)</title><rect x="35" y="1540" width="2" height="15" fill="rgb(242,225,30)"/><text x="38.00" y="1550.50"></text></g><g><title>0x7fa716df4b64 (?) (1 samples, 0.15%)</title><rect x="35" y="1556" width="2" height="15" fill="rgb(230,225,40)"/><text x="38.00" y="1566.50"></text></g><g><title>0x7fa716dd807b (?) (1 samples, 0.15%)</title><rect x="35" y="1572" width="2" height="15" fill="rgb(241,158,53)"/><text x="38.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.15%)</title><rect x="35" y="1588" width="2" height="15" fill="rgb(222,108,4)"/><text x="38.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.15%)</title><rect x="35" y="1604" width="2" height="15" fill="rgb(232,221,3)"/><text x="38.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.15%)</title><rect x="35" y="1620" width="2" height="15" fill="rgb(210,156,27)"/><text x="38.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.15%)</title><rect x="35" y="1636" width="2" height="15" fill="rgb(252,93,48)"/><text x="38.00" y="1646.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.15%)</title><rect x="35" y="1652" width="2" height="15" fill="rgb(253,193,20)"/><text x="38.00" y="1662.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.15%)</title><rect x="35" y="1668" width="2" height="15" fill="rgb(252,103,22)"/><text x="38.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (2 samples, 0.29%)</title><rect x="35" y="724" width="4" height="15" fill="rgb(227,208,18)"/><text x="38.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="740" width="4" height="15" fill="rgb(252,152,11)"/><text x="38.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="756" width="4" height="15" fill="rgb(222,158,48)"/><text x="38.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="772" width="4" height="15" fill="rgb(249,28,52)"/><text x="38.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.29%)</title><rect x="35" y="788" width="4" height="15" fill="rgb(249,207,22)"/><text x="38.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="804" width="4" height="15" fill="rgb(224,8,42)"/><text x="38.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (2 samples, 0.29%)</title><rect x="35" y="820" width="4" height="15" fill="rgb(243,124,38)"/><text x="38.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="836" width="4" height="15" fill="rgb(249,70,21)"/><text x="38.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="852" width="4" height="15" fill="rgb(241,138,16)"/><text x="38.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="868" width="4" height="15" fill="rgb(218,196,22)"/><text x="38.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.29%)</title><rect x="35" y="884" width="4" height="15" fill="rgb(232,26,39)"/><text x="38.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="900" width="4" height="15" fill="rgb(228,209,23)"/><text x="38.00" y="910.50"></text></g><g><title>0x7fa71828740e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="37" y="916" width="2" height="15" fill="rgb(222,199,2)"/><text x="40.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="932" width="2" height="15" fill="rgb(245,138,46)"/><text x="40.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="948" width="2" height="15" fill="rgb(218,100,52)"/><text x="40.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="964" width="2" height="15" fill="rgb(239,92,53)"/><text x="40.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="37" y="980" width="2" height="15" fill="rgb(252,118,22)"/><text x="40.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="996" width="2" height="15" fill="rgb(248,118,50)"/><text x="40.00" y="1006.50"></text></g><g><title>0x7fa718040cd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="37" y="1012" width="2" height="15" fill="rgb(205,131,49)"/><text x="40.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1028" width="2" height="15" fill="rgb(235,116,25)"/><text x="40.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1044" width="2" height="15" fill="rgb(212,104,43)"/><text x="40.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1060" width="2" height="15" fill="rgb(245,212,43)"/><text x="40.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="37" y="1076" width="2" height="15" fill="rgb(220,146,43)"/><text x="40.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1092" width="2" height="15" fill="rgb(251,109,30)"/><text x="40.00" y="1102.50"></text></g><g><title>0x7fa7177360e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="37" y="1108" width="2" height="15" fill="rgb(219,125,31)"/><text x="40.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1124" width="2" height="15" fill="rgb(242,55,6)"/><text x="40.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1140" width="2" height="15" fill="rgb(245,24,22)"/><text x="40.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1156" width="2" height="15" fill="rgb(213,8,9)"/><text x="40.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="37" y="1172" width="2" height="15" fill="rgb(228,130,49)"/><text x="40.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1188" width="2" height="15" fill="rgb(228,7,3)"/><text x="40.00" y="1198.50"></text></g><g><title>0x7fa7174bae68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="37" y="1204" width="2" height="15" fill="rgb(236,220,11)"/><text x="40.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1220" width="2" height="15" fill="rgb(237,106,49)"/><text x="40.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1236" width="2" height="15" fill="rgb(236,39,31)"/><text x="40.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1252" width="2" height="15" fill="rgb(212,191,52)"/><text x="40.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="37" y="1268" width="2" height="15" fill="rgb(218,213,14)"/><text x="40.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1284" width="2" height="15" fill="rgb(219,48,47)"/><text x="40.00" y="1294.50"></text></g><g><title>0x7fa71724b2fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="37" y="1300" width="2" height="15" fill="rgb(206,36,16)"/><text x="40.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1316" width="2" height="15" fill="rgb(253,22,43)"/><text x="40.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1332" width="2" height="15" fill="rgb(215,130,14)"/><text x="40.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1348" width="2" height="15" fill="rgb(210,130,49)"/><text x="40.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="37" y="1364" width="2" height="15" fill="rgb(227,39,37)"/><text x="40.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1380" width="2" height="15" fill="rgb(244,67,42)"/><text x="40.00" y="1390.50"></text></g><g><title>0x7fa71702f153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="37" y="1396" width="2" height="15" fill="rgb(220,95,25)"/><text x="40.00" y="1406.50"></text></g><g><title>0x7fa71702dc13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="37" y="1412" width="2" height="15" fill="rgb(252,195,15)"/><text x="40.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1428" width="2" height="15" fill="rgb(247,77,3)"/><text x="40.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1444" width="2" height="15" fill="rgb(247,36,13)"/><text x="40.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1460" width="2" height="15" fill="rgb(243,165,26)"/><text x="40.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="37" y="1476" width="2" height="15" fill="rgb(234,203,19)"/><text x="40.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1492" width="2" height="15" fill="rgb(220,3,46)"/><text x="40.00" y="1502.50"></text></g><g><title>0x7fa716dca181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="37" y="1508" width="2" height="15" fill="rgb(240,219,29)"/><text x="40.00" y="1518.50"></text></g><g><title>0x7fa716dcd1c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="37" y="1524" width="2" height="15" fill="rgb(213,18,13)"/><text x="40.00" y="1534.50"></text></g><g><title>0x7fa716df9167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="37" y="1540" width="2" height="15" fill="rgb(227,140,33)"/><text x="40.00" y="1550.50"></text></g><g><title>0x7fa716df4b64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="37" y="1556" width="2" height="15" fill="rgb(220,38,35)"/><text x="40.00" y="1566.50"></text></g><g><title>0x7fa716dd807b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="37" y="1572" width="2" height="15" fill="rgb(249,44,48)"/><text x="40.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.15%)</title><rect x="37" y="1588" width="2" height="15" fill="rgb(243,189,1)"/><text x="40.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.15%)</title><rect x="37" y="1604" width="2" height="15" fill="rgb(238,208,20)"/><text x="40.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.15%)</title><rect x="37" y="1620" width="2" height="15" fill="rgb(209,56,42)"/><text x="40.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.15%)</title><rect x="37" y="1636" width="2" height="15" fill="rgb(241,82,13)"/><text x="40.00" y="1646.50"></text></g><g><title>dirname (posixpath.py) (1 samples, 0.15%)</title><rect x="37" y="1652" width="2" height="15" fill="rgb(216,132,53)"/><text x="40.00" y="1662.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.15%)</title><rect x="37" y="1668" width="2" height="15" fill="rgb(254,46,32)"/><text x="40.00" y="1678.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py) (1 samples, 0.15%)</title><rect x="39" y="1124" width="2" height="15" fill="rgb(246,72,21)"/><text x="42.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="1140" width="2" height="15" fill="rgb(206,220,47)"/><text x="42.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="1156" width="2" height="15" fill="rgb(230,102,15)"/><text x="42.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="1172" width="2" height="15" fill="rgb(210,118,1)"/><text x="42.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="1188" width="2" height="15" fill="rgb(250,131,45)"/><text x="42.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="1204" width="2" height="15" fill="rgb(214,190,52)"/><text x="42.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="39" y="1220" width="2" height="15" fill="rgb(220,225,45)"/><text x="42.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="1236" width="2" height="15" fill="rgb(222,68,35)"/><text x="42.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/window.py) (1 samples, 0.15%)</title><rect x="39" y="1252" width="2" height="15" fill="rgb(246,31,40)"/><text x="42.00" y="1262.50"></text></g><g><title>Expanding (pandas/core/window.py) (1 samples, 0.15%)</title><rect x="39" y="1268" width="2" height="15" fill="rgb(235,56,10)"/><text x="42.00" y="1278.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.15%)</title><rect x="39" y="1284" width="2" height="15" fill="rgb(218,172,41)"/><text x="42.00" y="1294.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.15%)</title><rect x="39" y="1300" width="2" height="15" fill="rgb(237,75,41)"/><text x="42.00" y="1310.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.15%)</title><rect x="39" y="1316" width="2" height="15" fill="rgb(241,112,20)"/><text x="42.00" y="1326.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.15%)</title><rect x="39" y="1332" width="2" height="15" fill="rgb(232,68,43)"/><text x="42.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="1540" width="1" height="15" fill="rgb(221,166,50)"/><text x="44.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="1556" width="1" height="15" fill="rgb(244,103,0)"/><text x="44.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="1572" width="1" height="15" fill="rgb(211,224,51)"/><text x="44.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="1588" width="1" height="15" fill="rgb(245,50,51)"/><text x="44.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="41" y="1604" width="1" height="15" fill="rgb(216,44,32)"/><text x="44.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="1620" width="1" height="15" fill="rgb(214,204,51)"/><text x="44.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.15%)</title><rect x="41" y="1636" width="1" height="15" fill="rgb(228,147,28)"/><text x="44.00" y="1646.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/__init__.py) (1 samples, 0.15%)</title><rect x="41" y="1652" width="1" height="15" fill="rgb(227,110,48)"/><text x="44.00" y="1662.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py) (1 samples, 0.15%)</title><rect x="42" y="1588" width="2" height="15" fill="rgb(211,180,39)"/><text x="45.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="1604" width="2" height="15" fill="rgb(243,214,14)"/><text x="45.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="1620" width="2" height="15" fill="rgb(238,170,46)"/><text x="45.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="1636" width="2" height="15" fill="rgb(239,62,43)"/><text x="45.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="1652" width="2" height="15" fill="rgb(233,114,31)"/><text x="45.00" y="1662.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="1668" width="2" height="15" fill="rgb(209,57,42)"/><text x="45.00" y="1678.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="1684" width="2" height="15" fill="rgb(221,45,23)"/><text x="45.00" y="1694.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 0.15%)</title><rect x="44" y="1684" width="2" height="15" fill="rgb(215,28,29)"/><text x="47.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="1700" width="2" height="15" fill="rgb(217,87,21)"/><text x="47.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="1716" width="2" height="15" fill="rgb(252,140,51)"/><text x="47.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="1732" width="2" height="15" fill="rgb(221,198,39)"/><text x="47.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="44" y="1748" width="2" height="15" fill="rgb(240,71,12)"/><text x="47.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="1764" width="2" height="15" fill="rgb(213,142,23)"/><text x="47.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 0.15%)</title><rect x="44" y="1780" width="2" height="15" fill="rgb(237,58,8)"/><text x="47.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (1 samples, 0.15%)</title><rect x="44" y="1796" width="2" height="15" fill="rgb(217,137,28)"/><text x="47.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (1 samples, 0.15%)</title><rect x="44" y="1812" width="2" height="15" fill="rgb(244,24,4)"/><text x="47.00" y="1822.50"></text></g><g><title>linspace (&lt;__array_function__ internals&gt;) (1 samples, 0.15%)</title><rect x="44" y="1828" width="2" height="15" fill="rgb(242,185,28)"/><text x="47.00" y="1838.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.15%)</title><rect x="44" y="1844" width="2" height="15" fill="rgb(219,32,17)"/><text x="47.00" y="1854.50"></text></g><g><title>linspace (numpy/core/function_base.py) (1 samples, 0.15%)</title><rect x="44" y="1860" width="2" height="15" fill="rgb(223,164,24)"/><text x="47.00" y="1870.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.15%)</title><rect x="44" y="1876" width="2" height="15" fill="rgb(215,154,23)"/><text x="47.00" y="1886.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.15%)</title><rect x="44" y="1892" width="2" height="15" fill="rgb(237,171,13)"/><text x="47.00" y="1902.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.15%)</title><rect x="44" y="1908" width="2" height="15" fill="rgb(235,140,50)"/><text x="47.00" y="1918.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.15%)</title><rect x="44" y="1924" width="2" height="15" fill="rgb(217,143,17)"/><text x="47.00" y="1934.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.15%)</title><rect x="44" y="1940" width="2" height="15" fill="rgb(254,16,25)"/><text x="47.00" y="1950.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.15%)</title><rect x="44" y="1956" width="2" height="15" fill="rgb(223,139,15)"/><text x="47.00" y="1966.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (13 samples, 1.90%)</title><rect x="25" y="340" width="22" height="15" fill="rgb(253,181,45)"/><text x="28.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.90%)</title><rect x="25" y="356" width="22" height="15" fill="rgb(238,36,51)"/><text x="28.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.90%)</title><rect x="25" y="372" width="22" height="15" fill="rgb(214,25,32)"/><text x="28.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.90%)</title><rect x="25" y="388" width="22" height="15" fill="rgb(249,78,4)"/><text x="28.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 1.90%)</title><rect x="25" y="404" width="22" height="15" fill="rgb(234,43,53)"/><text x="28.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.90%)</title><rect x="25" y="420" width="22" height="15" fill="rgb(234,21,5)"/><text x="28.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (13 samples, 1.90%)</title><rect x="25" y="436" width="22" height="15" fill="rgb(235,108,44)"/><text x="28.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.90%)</title><rect x="25" y="452" width="22" height="15" fill="rgb(221,15,17)"/><text x="28.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.90%)</title><rect x="25" y="468" width="22" height="15" fill="rgb(233,63,45)"/><text x="28.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.02%)</title><rect x="35" y="484" width="12" height="15" fill="rgb(251,85,1)"/><text x="38.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.02%)</title><rect x="35" y="500" width="12" height="15" fill="rgb(244,95,25)"/><text x="38.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.02%)</title><rect x="35" y="516" width="12" height="15" fill="rgb(226,101,37)"/><text x="38.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (7 samples, 1.02%)</title><rect x="35" y="532" width="12" height="15" fill="rgb(220,74,49)"/><text x="38.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.02%)</title><rect x="35" y="548" width="12" height="15" fill="rgb(210,51,16)"/><text x="38.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.02%)</title><rect x="35" y="564" width="12" height="15" fill="rgb(250,211,15)"/><text x="38.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.02%)</title><rect x="35" y="580" width="12" height="15" fill="rgb(253,36,44)"/><text x="38.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.02%)</title><rect x="35" y="596" width="12" height="15" fill="rgb(248,209,19)"/><text x="38.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.02%)</title><rect x="35" y="612" width="12" height="15" fill="rgb(243,104,1)"/><text x="38.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (7 samples, 1.02%)</title><rect x="35" y="628" width="12" height="15" fill="rgb(209,177,45)"/><text x="38.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.02%)</title><rect x="35" y="644" width="12" height="15" fill="rgb(251,220,7)"/><text x="38.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.02%)</title><rect x="35" y="660" width="12" height="15" fill="rgb(242,127,1)"/><text x="38.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.02%)</title><rect x="35" y="676" width="12" height="15" fill="rgb(215,212,46)"/><text x="38.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.02%)</title><rect x="35" y="692" width="12" height="15" fill="rgb(254,174,26)"/><text x="38.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.02%)</title><rect x="35" y="708" width="12" height="15" fill="rgb(230,18,11)"/><text x="38.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (5 samples, 0.73%)</title><rect x="39" y="724" width="8" height="15" fill="rgb(218,78,11)"/><text x="42.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="740" width="8" height="15" fill="rgb(233,20,40)"/><text x="42.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="756" width="8" height="15" fill="rgb(232,140,11)"/><text x="42.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="772" width="8" height="15" fill="rgb(222,118,13)"/><text x="42.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.73%)</title><rect x="39" y="788" width="8" height="15" fill="rgb(224,8,1)"/><text x="42.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="804" width="8" height="15" fill="rgb(216,49,46)"/><text x="42.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (5 samples, 0.73%)</title><rect x="39" y="820" width="8" height="15" fill="rgb(242,188,23)"/><text x="42.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="836" width="8" height="15" fill="rgb(246,85,51)"/><text x="42.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="852" width="8" height="15" fill="rgb(214,75,24)"/><text x="42.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="868" width="8" height="15" fill="rgb(243,133,30)"/><text x="42.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.73%)</title><rect x="39" y="884" width="8" height="15" fill="rgb(241,78,3)"/><text x="42.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="900" width="8" height="15" fill="rgb(251,113,31)"/><text x="42.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (5 samples, 0.73%)</title><rect x="39" y="916" width="8" height="15" fill="rgb(230,155,45)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="932" width="8" height="15" fill="rgb(222,120,1)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="948" width="8" height="15" fill="rgb(246,196,36)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="964" width="8" height="15" fill="rgb(223,91,19)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.73%)</title><rect x="39" y="980" width="8" height="15" fill="rgb(248,168,5)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="996" width="8" height="15" fill="rgb(228,92,3)"/><text x="42.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (5 samples, 0.73%)</title><rect x="39" y="1012" width="8" height="15" fill="rgb(234,143,2)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="1028" width="8" height="15" fill="rgb(240,46,10)"/><text x="42.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="1044" width="8" height="15" fill="rgb(219,150,38)"/><text x="42.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="1060" width="8" height="15" fill="rgb(223,71,13)"/><text x="42.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.73%)</title><rect x="39" y="1076" width="8" height="15" fill="rgb(233,170,36)"/><text x="42.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.73%)</title><rect x="39" y="1092" width="8" height="15" fill="rgb(247,9,34)"/><text x="42.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (5 samples, 0.73%)</title><rect x="39" y="1108" width="8" height="15" fill="rgb(220,223,3)"/><text x="42.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1124" width="6" height="15" fill="rgb(234,202,49)"/><text x="44.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1140" width="6" height="15" fill="rgb(217,77,11)"/><text x="44.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1156" width="6" height="15" fill="rgb(249,51,27)"/><text x="44.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.58%)</title><rect x="41" y="1172" width="6" height="15" fill="rgb(234,221,20)"/><text x="44.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1188" width="6" height="15" fill="rgb(232,228,4)"/><text x="44.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (4 samples, 0.58%)</title><rect x="41" y="1204" width="6" height="15" fill="rgb(240,56,44)"/><text x="44.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1220" width="6" height="15" fill="rgb(219,25,12)"/><text x="44.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1236" width="6" height="15" fill="rgb(249,40,15)"/><text x="44.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1252" width="6" height="15" fill="rgb(211,161,30)"/><text x="44.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.58%)</title><rect x="41" y="1268" width="6" height="15" fill="rgb(245,97,47)"/><text x="44.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1284" width="6" height="15" fill="rgb(205,163,30)"/><text x="44.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (4 samples, 0.58%)</title><rect x="41" y="1300" width="6" height="15" fill="rgb(227,16,24)"/><text x="44.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1316" width="6" height="15" fill="rgb(252,189,24)"/><text x="44.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1332" width="6" height="15" fill="rgb(205,51,45)"/><text x="44.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1348" width="6" height="15" fill="rgb(208,19,54)"/><text x="44.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.58%)</title><rect x="41" y="1364" width="6" height="15" fill="rgb(237,218,29)"/><text x="44.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1380" width="6" height="15" fill="rgb(225,62,0)"/><text x="44.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (4 samples, 0.58%)</title><rect x="41" y="1396" width="6" height="15" fill="rgb(253,207,31)"/><text x="44.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1412" width="6" height="15" fill="rgb(215,47,13)"/><text x="44.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1428" width="6" height="15" fill="rgb(205,160,30)"/><text x="44.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1444" width="6" height="15" fill="rgb(233,139,19)"/><text x="44.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.58%)</title><rect x="41" y="1460" width="6" height="15" fill="rgb(244,122,54)"/><text x="44.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1476" width="6" height="15" fill="rgb(224,209,16)"/><text x="44.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (4 samples, 0.58%)</title><rect x="41" y="1492" width="6" height="15" fill="rgb(236,227,11)"/><text x="44.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1508" width="6" height="15" fill="rgb(245,27,29)"/><text x="44.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="41" y="1524" width="6" height="15" fill="rgb(244,88,50)"/><text x="44.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="42" y="1540" width="5" height="15" fill="rgb(216,44,34)"/><text x="45.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="42" y="1556" width="5" height="15" fill="rgb(239,66,44)"/><text x="45.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="42" y="1572" width="5" height="15" fill="rgb(224,23,20)"/><text x="45.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.29%)</title><rect x="44" y="1588" width="3" height="15" fill="rgb(236,69,13)"/><text x="47.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="44" y="1604" width="3" height="15" fill="rgb(215,139,46)"/><text x="47.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="44" y="1620" width="3" height="15" fill="rgb(241,15,26)"/><text x="47.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="44" y="1636" width="3" height="15" fill="rgb(230,166,44)"/><text x="47.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.29%)</title><rect x="44" y="1652" width="3" height="15" fill="rgb(211,84,24)"/><text x="47.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="44" y="1668" width="3" height="15" fill="rgb(231,190,33)"/><text x="47.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.15%)</title><rect x="46" y="1684" width="1" height="15" fill="rgb(251,88,4)"/><text x="49.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1700" width="1" height="15" fill="rgb(244,146,27)"/><text x="49.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1716" width="1" height="15" fill="rgb(252,27,53)"/><text x="49.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1732" width="1" height="15" fill="rgb(249,82,29)"/><text x="49.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="46" y="1748" width="1" height="15" fill="rgb(227,6,31)"/><text x="49.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1764" width="1" height="15" fill="rgb(212,54,29)"/><text x="49.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.15%)</title><rect x="46" y="1780" width="1" height="15" fill="rgb(246,180,51)"/><text x="49.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1796" width="1" height="15" fill="rgb(232,77,0)"/><text x="49.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1812" width="1" height="15" fill="rgb(254,180,15)"/><text x="49.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1828" width="1" height="15" fill="rgb(215,161,26)"/><text x="49.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="46" y="1844" width="1" height="15" fill="rgb(249,90,47)"/><text x="49.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1860" width="1" height="15" fill="rgb(229,95,47)"/><text x="49.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.15%)</title><rect x="46" y="1876" width="1" height="15" fill="rgb(238,226,8)"/><text x="49.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1892" width="1" height="15" fill="rgb(220,10,38)"/><text x="49.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1908" width="1" height="15" fill="rgb(216,125,1)"/><text x="49.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1924" width="1" height="15" fill="rgb(241,153,37)"/><text x="49.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1940" width="1" height="15" fill="rgb(218,162,45)"/><text x="49.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1956" width="1" height="15" fill="rgb(247,159,26)"/><text x="49.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="46" y="1972" width="1" height="15" fill="rgb(224,160,29)"/><text x="49.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1988" width="1" height="15" fill="rgb(221,216,10)"/><text x="49.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py) (1 samples, 0.15%)</title><rect x="46" y="2004" width="1" height="15" fill="rgb(246,9,25)"/><text x="49.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.15%)</title><rect x="46" y="2020" width="1" height="15" fill="rgb(245,173,8)"/><text x="49.00" y="2030.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.15%)</title><rect x="46" y="2036" width="1" height="15" fill="rgb(251,182,45)"/><text x="49.00" y="2046.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.15%)</title><rect x="46" y="2052" width="1" height="15" fill="rgb(232,198,12)"/><text x="49.00" y="2062.50"></text></g><g><title>is_alias (matplotlib/artist.py) (1 samples, 0.15%)</title><rect x="46" y="2068" width="1" height="15" fill="rgb(216,151,40)"/><text x="49.00" y="2078.50"></text></g><g><title>getdoc (inspect.py) (1 samples, 0.15%)</title><rect x="46" y="2084" width="1" height="15" fill="rgb(221,120,8)"/><text x="49.00" y="2094.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.15%)</title><rect x="46" y="2100" width="1" height="15" fill="rgb(245,62,2)"/><text x="49.00" y="2110.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.15%)</title><rect x="46" y="2116" width="1" height="15" fill="rgb(215,77,50)"/><text x="49.00" y="2126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="948" width="2" height="15" fill="rgb(244,40,1)"/><text x="50.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="964" width="2" height="15" fill="rgb(247,75,42)"/><text x="50.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="980" width="2" height="15" fill="rgb(252,107,19)"/><text x="50.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="996" width="2" height="15" fill="rgb(254,224,16)"/><text x="50.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="47" y="1012" width="2" height="15" fill="rgb(219,91,49)"/><text x="50.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1028" width="2" height="15" fill="rgb(244,131,51)"/><text x="50.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.15%)</title><rect x="47" y="1044" width="2" height="15" fill="rgb(239,29,13)"/><text x="50.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1060" width="2" height="15" fill="rgb(237,84,6)"/><text x="50.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1076" width="2" height="15" fill="rgb(249,90,9)"/><text x="50.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1092" width="2" height="15" fill="rgb(222,22,12)"/><text x="50.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1108" width="2" height="15" fill="rgb(229,113,29)"/><text x="50.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1124" width="2" height="15" fill="rgb(225,130,32)"/><text x="50.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="47" y="1140" width="2" height="15" fill="rgb(228,179,36)"/><text x="50.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1156" width="2" height="15" fill="rgb(247,112,8)"/><text x="50.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.15%)</title><rect x="47" y="1172" width="2" height="15" fill="rgb(233,132,27)"/><text x="50.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1188" width="2" height="15" fill="rgb(205,103,31)"/><text x="50.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1204" width="2" height="15" fill="rgb(251,60,10)"/><text x="50.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1220" width="2" height="15" fill="rgb(205,227,9)"/><text x="50.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="47" y="1236" width="2" height="15" fill="rgb(218,174,39)"/><text x="50.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1252" width="2" height="15" fill="rgb(228,10,26)"/><text x="50.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py) (1 samples, 0.15%)</title><rect x="47" y="1268" width="2" height="15" fill="rgb(216,218,41)"/><text x="50.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1284" width="2" height="15" fill="rgb(215,1,51)"/><text x="50.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1300" width="2" height="15" fill="rgb(234,215,6)"/><text x="50.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1316" width="2" height="15" fill="rgb(210,149,20)"/><text x="50.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="47" y="1332" width="2" height="15" fill="rgb(212,177,50)"/><text x="50.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="47" y="1348" width="2" height="15" fill="rgb(219,170,41)"/><text x="50.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.15%)</title><rect x="47" y="1364" width="2" height="15" fill="rgb(219,25,54)"/><text x="50.00" y="1374.50"></text></g><g><title>init_static_locks (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.15%)</title><rect x="47" y="1380" width="2" height="15" fill="rgb(233,19,16)"/><text x="50.00" y="1390.50"></text></g><g><title>_ensure_ffi_initialized (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.15%)</title><rect x="47" y="1396" width="2" height="15" fill="rgb(226,97,19)"/><text x="50.00" y="1406.50"></text></g><g><title>build_conditional_library (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.15%)</title><rect x="47" y="1412" width="2" height="15" fill="rgb(243,57,0)"/><text x="50.00" y="1422.50"></text></g><g><title>0x7fa70e33cebd (?) (1 samples, 0.15%)</title><rect x="47" y="1428" width="2" height="15" fill="rgb(233,148,46)"/><text x="50.00" y="1438.50"></text></g><g><title>0x7fa70e33cc14 (?) (1 samples, 0.15%)</title><rect x="47" y="1444" width="2" height="15" fill="rgb(233,143,10)"/><text x="50.00" y="1454.50"></text></g><g><title>0x7fa70e33c365 (?) (1 samples, 0.15%)</title><rect x="47" y="1460" width="2" height="15" fill="rgb(237,91,13)"/><text x="50.00" y="1470.50"></text></g><g><title>sprintf (libc-2.29.so) (1 samples, 0.15%)</title><rect x="47" y="1476" width="2" height="15" fill="rgb(232,141,30)"/><text x="50.00" y="1486.50"></text></g><g><title>0x7fa742d47a69 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="47" y="1492" width="2" height="15" fill="rgb(252,210,23)"/><text x="50.00" y="1502.50"></text></g><g><title>0x7fa742d535e0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="47" y="1508" width="2" height="15" fill="rgb(209,200,47)"/><text x="50.00" y="1518.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ed25519.py) (1 samples, 0.15%)</title><rect x="49" y="1188" width="2" height="15" fill="rgb(214,108,2)"/><text x="52.00" y="1198.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="49" y="1204" width="2" height="15" fill="rgb(239,159,29)"/><text x="52.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (25 samples, 3.65%)</title><rect x="10" y="68" width="43" height="15" fill="rgb(211,78,14)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (25 samples, 3.65%)</title><rect x="10" y="84" width="43" height="15" fill="rgb(217,15,47)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (25 samples, 3.65%)</title><rect x="10" y="100" width="43" height="15" fill="rgb(252,216,1)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (25 samples, 3.65%)</title><rect x="10" y="116" width="43" height="15" fill="rgb(242,133,11)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (25 samples, 3.65%)</title><rect x="10" y="132" width="43" height="15" fill="rgb(210,62,0)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py) (25 samples, 3.65%)</title><rect x="10" y="148" width="43" height="15" fill="rgb(235,155,9)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (25 samples, 3.65%)</title><rect x="10" y="164" width="43" height="15" fill="rgb(210,124,32)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (25 samples, 3.65%)</title><rect x="10" y="180" width="43" height="15" fill="rgb(248,108,19)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.34%)</title><rect x="25" y="196" width="28" height="15" fill="rgb(246,76,15)"/><text x="28.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 2.34%)</title><rect x="25" y="212" width="28" height="15" fill="rgb(221,149,54)"/><text x="28.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.34%)</title><rect x="25" y="228" width="28" height="15" fill="rgb(214,8,39)"/><text x="28.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (16 samples, 2.34%)</title><rect x="25" y="244" width="28" height="15" fill="rgb(240,207,1)"/><text x="28.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.34%)</title><rect x="25" y="260" width="28" height="15" fill="rgb(216,148,53)"/><text x="28.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.34%)</title><rect x="25" y="276" width="28" height="15" fill="rgb(233,209,24)"/><text x="28.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.34%)</title><rect x="25" y="292" width="28" height="15" fill="rgb(244,187,1)"/><text x="28.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 2.34%)</title><rect x="25" y="308" width="28" height="15" fill="rgb(216,54,39)"/><text x="28.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.34%)</title><rect x="25" y="324" width="28" height="15" fill="rgb(237,120,35)"/><text x="28.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.44%)</title><rect x="47" y="340" width="6" height="15" fill="rgb(223,204,43)"/><text x="50.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="356" width="6" height="15" fill="rgb(252,153,42)"/><text x="50.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="372" width="6" height="15" fill="rgb(209,72,31)"/><text x="50.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="388" width="6" height="15" fill="rgb(252,157,2)"/><text x="50.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="404" width="6" height="15" fill="rgb(238,143,54)"/><text x="50.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="420" width="6" height="15" fill="rgb(234,55,9)"/><text x="50.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="436" width="6" height="15" fill="rgb(218,44,20)"/><text x="50.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="47" y="452" width="6" height="15" fill="rgb(219,144,11)"/><text x="50.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="468" width="6" height="15" fill="rgb(233,50,0)"/><text x="50.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.44%)</title><rect x="47" y="484" width="6" height="15" fill="rgb(217,34,50)"/><text x="50.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="500" width="6" height="15" fill="rgb(214,209,42)"/><text x="50.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="516" width="6" height="15" fill="rgb(212,3,51)"/><text x="50.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="532" width="6" height="15" fill="rgb(214,69,26)"/><text x="50.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="47" y="548" width="6" height="15" fill="rgb(208,213,3)"/><text x="50.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="564" width="6" height="15" fill="rgb(245,125,2)"/><text x="50.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (3 samples, 0.44%)</title><rect x="47" y="580" width="6" height="15" fill="rgb(223,190,5)"/><text x="50.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="596" width="6" height="15" fill="rgb(209,189,0)"/><text x="50.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="612" width="6" height="15" fill="rgb(240,73,6)"/><text x="50.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="628" width="6" height="15" fill="rgb(242,169,11)"/><text x="50.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="47" y="644" width="6" height="15" fill="rgb(213,54,39)"/><text x="50.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="660" width="6" height="15" fill="rgb(227,76,40)"/><text x="50.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (3 samples, 0.44%)</title><rect x="47" y="676" width="6" height="15" fill="rgb(237,135,24)"/><text x="50.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="692" width="6" height="15" fill="rgb(205,186,21)"/><text x="50.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="708" width="6" height="15" fill="rgb(245,196,36)"/><text x="50.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="724" width="6" height="15" fill="rgb(253,89,35)"/><text x="50.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="47" y="740" width="6" height="15" fill="rgb(246,102,4)"/><text x="50.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="756" width="6" height="15" fill="rgb(240,171,52)"/><text x="50.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (3 samples, 0.44%)</title><rect x="47" y="772" width="6" height="15" fill="rgb(233,178,15)"/><text x="50.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="788" width="6" height="15" fill="rgb(218,137,0)"/><text x="50.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="804" width="6" height="15" fill="rgb(230,176,11)"/><text x="50.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="820" width="6" height="15" fill="rgb(227,25,54)"/><text x="50.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="836" width="6" height="15" fill="rgb(213,56,15)"/><text x="50.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="852" width="6" height="15" fill="rgb(240,58,36)"/><text x="50.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="47" y="868" width="6" height="15" fill="rgb(222,183,50)"/><text x="50.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="884" width="6" height="15" fill="rgb(223,72,30)"/><text x="50.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (3 samples, 0.44%)</title><rect x="47" y="900" width="6" height="15" fill="rgb(252,65,44)"/><text x="50.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="916" width="6" height="15" fill="rgb(212,201,34)"/><text x="50.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="47" y="932" width="6" height="15" fill="rgb(215,152,2)"/><text x="50.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="49" y="948" width="4" height="15" fill="rgb(220,95,10)"/><text x="52.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.29%)</title><rect x="49" y="964" width="4" height="15" fill="rgb(239,37,13)"/><text x="52.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="49" y="980" width="4" height="15" fill="rgb(205,197,49)"/><text x="52.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (2 samples, 0.29%)</title><rect x="49" y="996" width="4" height="15" fill="rgb(238,177,53)"/><text x="52.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="49" y="1012" width="4" height="15" fill="rgb(250,57,40)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="49" y="1028" width="4" height="15" fill="rgb(241,190,42)"/><text x="52.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="49" y="1044" width="4" height="15" fill="rgb(233,176,53)"/><text x="52.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.29%)</title><rect x="49" y="1060" width="4" height="15" fill="rgb(243,39,46)"/><text x="52.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="49" y="1076" width="4" height="15" fill="rgb(246,181,49)"/><text x="52.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (2 samples, 0.29%)</title><rect x="49" y="1092" width="4" height="15" fill="rgb(206,144,20)"/><text x="52.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="49" y="1108" width="4" height="15" fill="rgb(225,26,28)"/><text x="52.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="49" y="1124" width="4" height="15" fill="rgb(220,148,42)"/><text x="52.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="49" y="1140" width="4" height="15" fill="rgb(252,60,11)"/><text x="52.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.29%)</title><rect x="49" y="1156" width="4" height="15" fill="rgb(212,157,18)"/><text x="52.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="49" y="1172" width="4" height="15" fill="rgb(209,15,29)"/><text x="52.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/ciphers/algorithms.py) (1 samples, 0.15%)</title><rect x="51" y="1188" width="2" height="15" fill="rgb(214,223,44)"/><text x="54.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.15%)</title><rect x="51" y="1204" width="2" height="15" fill="rgb(238,209,43)"/><text x="54.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.15%)</title><rect x="51" y="1220" width="2" height="15" fill="rgb(254,69,23)"/><text x="54.00" y="1230.50"></text></g><g><title>0x7fa702d14ff9 (?) (1 samples, 0.15%)</title><rect x="56" y="212" width="2" height="15" fill="rgb(243,88,14)"/><text x="59.00" y="222.50"></text></g><g><title>0x7fa702d0fef6 (?) (1 samples, 0.15%)</title><rect x="56" y="228" width="2" height="15" fill="rgb(254,24,45)"/><text x="59.00" y="238.50"></text></g><g><title>0x7fa702d04962 (?) (1 samples, 0.15%)</title><rect x="56" y="244" width="2" height="15" fill="rgb(246,74,45)"/><text x="59.00" y="254.50"></text></g><g><title>0x7fa702d387a7 (?) (1 samples, 0.15%)</title><rect x="56" y="260" width="2" height="15" fill="rgb(234,40,43)"/><text x="59.00" y="270.50"></text></g><g><title>0x7fa702d38379 (?) (1 samples, 0.15%)</title><rect x="56" y="276" width="2" height="15" fill="rgb(218,18,2)"/><text x="59.00" y="286.50"></text></g><g><title>0x7fa7031968b8 (?) (1 samples, 0.15%)</title><rect x="56" y="292" width="2" height="15" fill="rgb(242,130,6)"/><text x="59.00" y="302.50"></text></g><g><title>0x7fa703194c7f (?) (1 samples, 0.15%)</title><rect x="56" y="308" width="2" height="15" fill="rgb(210,102,3)"/><text x="59.00" y="318.50"></text></g><g><title>0x7fa7031a799c (?) (1 samples, 0.15%)</title><rect x="56" y="324" width="2" height="15" fill="rgb(216,44,39)"/><text x="59.00" y="334.50"></text></g><g><title>0x7fa702ec519e (?) (1 samples, 0.15%)</title><rect x="56" y="340" width="2" height="15" fill="rgb(216,186,18)"/><text x="59.00" y="350.50"></text></g><g><title>0x7fa702ec1ed7 (?) (1 samples, 0.15%)</title><rect x="56" y="356" width="2" height="15" fill="rgb(254,187,32)"/><text x="59.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="58" y="292" width="1" height="15" fill="rgb(215,172,11)"/><text x="61.00" y="302.50"></text></g><g><title>onnxruntime::TensorType&lt;float&gt;::GetElementType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="58" y="308" width="1" height="15" fill="rgb(216,5,24)"/><text x="61.00" y="318.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="59" y="340" width="2" height="15" fill="rgb(224,90,12)"/><text x="62.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (208 samples, 30.36%)</title><rect x="61" y="340" width="358" height="15" fill="rgb(209,3,1)"/><text x="64.00" y="350.50">onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (205 samples, 29.93%)</title><rect x="66" y="356" width="353" height="15" fill="rgb(223,76,34)"/><text x="69.00" y="366.50">onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;:..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="418" y="372" width="1" height="15" fill="rgb(218,218,37)"/><text x="421.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="418" y="388" width="1" height="15" fill="rgb(250,34,53)"/><text x="421.00" y="398.50"></text></g><g><title>0x7fa742d57b12 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="423" y="388" width="2" height="15" fill="rgb(209,72,13)"/><text x="426.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (214 samples, 31.24%)</title><rect x="58" y="260" width="368" height="15" fill="rgb(242,90,27)"/><text x="61.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/c..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (214 samples, 31.24%)</title><rect x="58" y="276" width="368" height="15" fill="rgb(232,212,35)"/><text x="61.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/c..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (213 samples, 31.09%)</title><rect x="59" y="292" width="367" height="15" fill="rgb(241,66,41)"/><text x="62.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/cap..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (213 samples, 31.09%)</title><rect x="59" y="308" width="367" height="15" fill="rgb(231,149,52)"/><text x="62.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (213 samples, 31.09%)</title><rect x="59" y="324" width="367" height="15" fill="rgb(215,200,34)"/><text x="62.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrun..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.58%)</title><rect x="419" y="340" width="7" height="15" fill="rgb(249,70,4)"/><text x="422.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.58%)</title><rect x="419" y="356" width="7" height="15" fill="rgb(235,198,11)"/><text x="422.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.58%)</title><rect x="419" y="372" width="7" height="15" fill="rgb(240,129,47)"/><text x="422.00" y="382.50"></text></g><g><title>0x7fa742d57db4 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="425" y="388" width="1" height="15" fill="rgb(230,202,2)"/><text x="428.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.44%)</title><rect x="426" y="260" width="6" height="15" fill="rgb(226,139,8)"/><text x="429.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="432" y="292" width="1" height="15" fill="rgb(228,167,20)"/><text x="435.00" y="302.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (222 samples, 32.41%)</title><rect x="53" y="100" width="382" height="15" fill="rgb(217,30,28)"/><text x="56.00" y="110.50">profile (bench_RandomForestClassifier_default_m_cl_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (220 samples, 32.12%)</title><rect x="56" y="116" width="379" height="15" fill="rgb(221,143,46)"/><text x="59.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (220 samples, 32.12%)</title><rect x="56" y="132" width="379" height="15" fill="rgb(211,39,2)"/><text x="59.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (220 samples, 32.12%)</title><rect x="56" y="148" width="379" height="15" fill="rgb(235,81,45)"/><text x="59.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (220 samples, 32.12%)</title><rect x="56" y="164" width="379" height="15" fill="rgb(254,133,11)"/><text x="59.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (220 samples, 32.12%)</title><rect x="56" y="180" width="379" height="15" fill="rgb(208,34,21)"/><text x="59.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (220 samples, 32.12%)</title><rect x="56" y="196" width="379" height="15" fill="rgb(229,225,46)"/><text x="59.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (219 samples, 31.97%)</title><rect x="58" y="212" width="377" height="15" fill="rgb(219,155,7)"/><text x="61.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/cap..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (219 samples, 31.97%)</title><rect x="58" y="228" width="377" height="15" fill="rgb(243,57,19)"/><text x="61.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (219 samples, 31.97%)</title><rect x="58" y="244" width="377" height="15" fill="rgb(230,12,4)"/><text x="61.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::mod..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.29%)</title><rect x="432" y="260" width="3" height="15" fill="rgb(250,177,15)"/><text x="435.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.29%)</title><rect x="432" y="276" width="3" height="15" fill="rgb(214,199,25)"/><text x="435.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="433" y="292" width="2" height="15" fill="rgb(215,219,25)"/><text x="436.00" y="302.50"></text></g><g><title>0x7fa742d56d07 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="433" y="308" width="2" height="15" fill="rgb(205,61,3)"/><text x="436.00" y="318.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.15%)</title><rect x="435" y="132" width="2" height="15" fill="rgb(242,226,0)"/><text x="438.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.15%)</title><rect x="435" y="148" width="2" height="15" fill="rgb(205,141,16)"/><text x="438.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.15%)</title><rect x="435" y="164" width="2" height="15" fill="rgb(216,89,8)"/><text x="438.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="180" width="2" height="15" fill="rgb(232,70,33)"/><text x="438.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="196" width="2" height="15" fill="rgb(217,152,17)"/><text x="438.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="212" width="2" height="15" fill="rgb(226,100,31)"/><text x="438.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="435" y="228" width="2" height="15" fill="rgb(236,84,21)"/><text x="438.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="244" width="2" height="15" fill="rgb(234,100,12)"/><text x="438.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.15%)</title><rect x="435" y="260" width="2" height="15" fill="rgb(246,55,42)"/><text x="438.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="276" width="2" height="15" fill="rgb(222,103,21)"/><text x="438.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="292" width="2" height="15" fill="rgb(210,62,53)"/><text x="438.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="308" width="2" height="15" fill="rgb(235,134,29)"/><text x="438.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="435" y="324" width="2" height="15" fill="rgb(243,227,27)"/><text x="438.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="340" width="2" height="15" fill="rgb(241,17,0)"/><text x="438.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.15%)</title><rect x="435" y="356" width="2" height="15" fill="rgb(251,176,8)"/><text x="438.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="372" width="2" height="15" fill="rgb(221,198,46)"/><text x="438.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="388" width="2" height="15" fill="rgb(215,40,12)"/><text x="438.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="404" width="2" height="15" fill="rgb(246,209,17)"/><text x="438.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="435" y="420" width="2" height="15" fill="rgb(252,33,29)"/><text x="438.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="436" width="2" height="15" fill="rgb(223,68,16)"/><text x="438.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.15%)</title><rect x="435" y="452" width="2" height="15" fill="rgb(208,98,23)"/><text x="438.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="468" width="2" height="15" fill="rgb(251,142,12)"/><text x="438.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="484" width="2" height="15" fill="rgb(237,197,7)"/><text x="438.00" y="494.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="435" y="500" width="2" height="15" fill="rgb(252,116,23)"/><text x="438.00" y="510.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="435" y="516" width="2" height="15" fill="rgb(218,62,35)"/><text x="438.00" y="526.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="435" y="532" width="2" height="15" fill="rgb(216,157,45)"/><text x="438.00" y="542.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (224 samples, 32.70%)</title><rect x="53" y="68" width="385" height="15" fill="rgb(238,115,8)"/><text x="56.00" y="78.50">profile_ort (bench_RandomForestClassifier_default_m_..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (224 samples, 32.70%)</title><rect x="53" y="84" width="385" height="15" fill="rgb(243,202,25)"/><text x="56.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.29%)</title><rect x="435" y="100" width="3" height="15" fill="rgb(228,7,23)"/><text x="438.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.29%)</title><rect x="435" y="116" width="3" height="15" fill="rgb(223,35,11)"/><text x="438.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.15%)</title><rect x="437" y="132" width="1" height="15" fill="rgb(249,81,45)"/><text x="440.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.15%)</title><rect x="437" y="148" width="1" height="15" fill="rgb(212,177,0)"/><text x="440.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.15%)</title><rect x="437" y="164" width="1" height="15" fill="rgb(230,115,1)"/><text x="440.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.15%)</title><rect x="437" y="180" width="1" height="15" fill="rgb(248,63,38)"/><text x="440.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (1 samples, 0.15%)</title><rect x="437" y="196" width="1" height="15" fill="rgb(229,166,50)"/><text x="440.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.15%)</title><rect x="437" y="212" width="1" height="15" fill="rgb(228,182,41)"/><text x="440.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.15%)</title><rect x="437" y="228" width="1" height="15" fill="rgb(216,109,40)"/><text x="440.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="437" y="244" width="1" height="15" fill="rgb(233,189,37)"/><text x="440.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.15%)</title><rect x="437" y="260" width="1" height="15" fill="rgb(232,172,36)"/><text x="440.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.15%)</title><rect x="437" y="276" width="1" height="15" fill="rgb(225,138,7)"/><text x="440.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.15%)</title><rect x="437" y="292" width="1" height="15" fill="rgb(210,179,37)"/><text x="440.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py) (1 samples, 0.15%)</title><rect x="437" y="308" width="1" height="15" fill="rgb(212,86,42)"/><text x="440.00" y="318.50"></text></g><g><title>0x7fa7039f4422 (?) (1 samples, 0.15%)</title><rect x="438" y="244" width="2" height="15" fill="rgb(248,48,24)"/><text x="441.00" y="254.50"></text></g><g><title>0x7fa7039fa89e (?) (1 samples, 0.15%)</title><rect x="438" y="260" width="2" height="15" fill="rgb(229,96,52)"/><text x="441.00" y="270.50"></text></g><g><title>0x7fa7039fa74f (?) (1 samples, 0.15%)</title><rect x="438" y="276" width="2" height="15" fill="rgb(232,92,54)"/><text x="441.00" y="286.50"></text></g><g><title>0x7fa703a00a3a (?) (1 samples, 0.15%)</title><rect x="438" y="292" width="2" height="15" fill="rgb(218,87,33)"/><text x="441.00" y="302.50"></text></g><g><title>0x7fa70cd12cff (?) (1 samples, 0.15%)</title><rect x="438" y="308" width="2" height="15" fill="rgb(238,159,42)"/><text x="441.00" y="318.50"></text></g><g><title>0x7fa7039fb78c (?) (1 samples, 0.15%)</title><rect x="438" y="324" width="2" height="15" fill="rgb(240,34,25)"/><text x="441.00" y="334.50"></text></g><g><title>0x7fa7039e73d6 (?) (1 samples, 0.15%)</title><rect x="438" y="340" width="2" height="15" fill="rgb(217,66,49)"/><text x="441.00" y="350.50"></text></g><g><title>0x7fa70cd1dea9 (libgomp.so.1.0.0) (3 samples, 0.44%)</title><rect x="440" y="468" width="5" height="15" fill="rgb(211,44,51)"/><text x="443.00" y="478.50"></text></g><g><title>0x7fa70cd1deab (libgomp.so.1.0.0) (1 samples, 0.15%)</title><rect x="445" y="468" width="2" height="15" fill="rgb(238,33,51)"/><text x="448.00" y="478.50"></text></g><g><title>0x7fa70cd1cab9 (libgomp.so.1.0.0) (5 samples, 0.73%)</title><rect x="440" y="452" width="9" height="15" fill="rgb(227,84,28)"/><text x="443.00" y="462.50"></text></g><g><title>0x7fa70cd1dee1 (libgomp.so.1.0.0) (1 samples, 0.15%)</title><rect x="447" y="468" width="2" height="15" fill="rgb(250,113,43)"/><text x="450.00" y="478.50"></text></g><g><title>0x7fa70cd1dcf0 (libgomp.so.1.0.0) (1 samples, 0.15%)</title><rect x="449" y="484" width="1" height="15" fill="rgb(214,190,50)"/><text x="452.00" y="494.50"></text></g><g><title>0x7fa70cd1bdaa (libgomp.so.1.0.0) (2 samples, 0.29%)</title><rect x="449" y="468" width="3" height="15" fill="rgb(240,122,3)"/><text x="452.00" y="478.50"></text></g><g><title>0x7fa70cd1dcfb (libgomp.so.1.0.0) (1 samples, 0.15%)</title><rect x="450" y="484" width="2" height="15" fill="rgb(222,79,54)"/><text x="453.00" y="494.50"></text></g><g><title>std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_map.h) (30 samples, 4.38%)</title><rect x="500" y="500" width="52" height="15" fill="rgb(221,64,14)"/><text x="503.00" y="510.50">std::..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_tree.h) (30 samples, 4.38%)</title><rect x="500" y="516" width="52" height="15" fill="rgb(247,170,1)"/><text x="503.00" y="526.50">std::..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h) (29 samples, 4.23%)</title><rect x="502" y="532" width="50" height="15" fill="rgb(206,49,2)"/><text x="505.00" y="542.50">std::..</text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (stl_bvector.h) (3 samples, 0.44%)</title><rect x="552" y="500" width="5" height="15" fill="rgb(223,187,22)"/><text x="555.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h) (2 samples, 0.29%)</title><rect x="557" y="500" width="4" height="15" fill="rgb(230,193,26)"/><text x="560.00" y="510.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (72 samples, 10.51%)</title><rect x="438" y="68" width="124" height="15" fill="rgb(232,124,44)"/><text x="441.00" y="78.50">profile_pyrt (b..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (72 samples, 10.51%)</title><rect x="438" y="84" width="124" height="15" fill="rgb(228,215,40)"/><text x="441.00" y="94.50">setup_profile (..</text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (72 samples, 10.51%)</title><rect x="438" y="100" width="124" height="15" fill="rgb(217,134,49)"/><text x="441.00" y="110.50">profile (bench_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (72 samples, 10.51%)</title><rect x="438" y="116" width="124" height="15" fill="rgb(239,119,45)"/><text x="441.00" y="126.50">time_predict (m..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (72 samples, 10.51%)</title><rect x="438" y="132" width="124" height="15" fill="rgb(254,81,38)"/><text x="441.00" y="142.50">&lt;lambda&gt; (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (72 samples, 10.51%)</title><rect x="438" y="148" width="124" height="15" fill="rgb(212,218,0)"/><text x="441.00" y="158.50">run (mlprodict/..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (72 samples, 10.51%)</title><rect x="438" y="164" width="124" height="15" fill="rgb(229,193,8)"/><text x="441.00" y="174.50">_run_sequence_r..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (72 samples, 10.51%)</title><rect x="438" y="180" width="124" height="15" fill="rgb(213,56,3)"/><text x="441.00" y="190.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (72 samples, 10.51%)</title><rect x="438" y="196" width="124" height="15" fill="rgb(226,41,49)"/><text x="441.00" y="206.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (72 samples, 10.51%)</title><rect x="438" y="212" width="124" height="15" fill="rgb(238,47,42)"/><text x="441.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (72 samples, 10.51%)</title><rect x="438" y="228" width="124" height="15" fill="rgb(209,202,12)"/><text x="441.00" y="238.50">_run (mlprodict..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (71 samples, 10.36%)</title><rect x="440" y="244" width="122" height="15" fill="rgb(249,201,41)"/><text x="443.00" y="254.50">pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (71 samples, 10.36%)</title><rect x="440" y="260" width="122" height="15" fill="rgb(244,219,27)"/><text x="443.00" y="270.50">void pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (71 samples, 10.36%)</title><rect x="440" y="276" width="122" height="15" fill="rgb(231,65,32)"/><text x="443.00" y="286.50">void pybind11::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (71 samples, 10.36%)</title><rect x="440" y="292" width="122" height="15" fill="rgb(224,168,35)"/><text x="443.00" y="302.50">pybind11::detai..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (71 samples, 10.36%)</title><rect x="440" y="308" width="122" height="15" fill="rgb(227,42,4)"/><text x="443.00" y="318.50">pybind11::detai..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (71 samples, 10.36%)</title><rect x="440" y="324" width="122" height="15" fill="rgb(239,132,14)"/><text x="443.00" y="334.50">pybind11::cpp_f..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (71 samples, 10.36%)</title><rect x="440" y="340" width="122" height="15" fill="rgb(213,34,9)"/><text x="443.00" y="350.50">pybind11::array..</text></g><g><title>pybind11::array::~array (numpy.h) (71 samples, 10.36%)</title><rect x="440" y="356" width="122" height="15" fill="rgb(208,178,47)"/><text x="443.00" y="366.50">pybind11::array..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (71 samples, 10.36%)</title><rect x="440" y="372" width="122" height="15" fill="rgb(244,217,7)"/><text x="443.00" y="382.50">pybind11::buffe..</text></g><g><title>pybind11::object::~object (pytypes.h) (71 samples, 10.36%)</title><rect x="440" y="388" width="122" height="15" fill="rgb(206,169,48)"/><text x="443.00" y="398.50">pybind11::objec..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (71 samples, 10.36%)</title><rect x="440" y="404" width="122" height="15" fill="rgb(217,126,8)"/><text x="443.00" y="414.50">pybind11::handl..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (71 samples, 10.36%)</title><rect x="440" y="420" width="122" height="15" fill="rgb(232,106,20)"/><text x="443.00" y="430.50">RuntimeTreeEnse..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (71 samples, 10.36%)</title><rect x="440" y="436" width="122" height="15" fill="rgb(206,144,8)"/><text x="443.00" y="446.50">pybind11::gil_s..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (66 samples, 9.64%)</title><rect x="449" y="452" width="113" height="15" fill="rgb(243,214,26)"/><text x="452.00" y="462.50">GOMP_parallel..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (64 samples, 9.34%)</title><rect x="452" y="468" width="110" height="15" fill="rgb(207,215,16)"/><text x="455.00" y="478.50">RuntimeTreeEn..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (64 samples, 9.34%)</title><rect x="452" y="484" width="110" height="15" fill="rgb(241,215,12)"/><text x="455.00" y="494.50">RuntimeTreeEn..</text></g><g><title>std::vector&lt;std::tuple&lt;long, long, long, float&gt;, std::allocator&lt;std::tuple&lt;long, long, long, float&gt; &gt; &gt;::operator[] (stl_vector.h) (1 samples, 0.15%)</title><rect x="561" y="500" width="1" height="15" fill="rgb(231,171,8)"/><text x="564.00" y="510.50"></text></g><g><title>_print (joblib/parallel.py) (1 samples, 0.15%)</title><rect x="568" y="180" width="1" height="15" fill="rgb(217,176,45)"/><text x="571.00" y="190.50"></text></g><g><title>update_wrapper (functools.py) (7 samples, 1.02%)</title><rect x="607" y="228" width="12" height="15" fill="rgb(218,150,27)"/><text x="610.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (17 samples, 2.48%)</title><rect x="595" y="196" width="29" height="15" fill="rgb(242,14,43)"/><text x="598.00" y="206.50">&lt;g..</text></g><g><title>delayed (joblib/parallel.py) (14 samples, 2.04%)</title><rect x="600" y="212" width="24" height="15" fill="rgb(218,46,12)"/><text x="603.00" y="222.50">d..</text></g><g><title>wraps (functools.py) (3 samples, 0.44%)</title><rect x="619" y="228" width="5" height="15" fill="rgb(226,81,1)"/><text x="622.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py) (3 samples, 0.44%)</title><rect x="624" y="196" width="6" height="15" fill="rgb(234,162,13)"/><text x="627.00" y="206.50"></text></g><g><title>__len__ (joblib/parallel.py) (1 samples, 0.15%)</title><rect x="643" y="212" width="2" height="15" fill="rgb(238,82,18)"/><text x="646.00" y="222.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.15%)</title><rect x="659" y="244" width="2" height="15" fill="rgb(226,215,33)"/><text x="662.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py) (10 samples, 1.46%)</title><rect x="645" y="228" width="17" height="15" fill="rgb(235,73,36)"/><text x="648.00" y="238.50"></text></g><g><title>batch_completed (joblib/_parallel_backends.py) (1 samples, 0.15%)</title><rect x="661" y="244" width="1" height="15" fill="rgb(215,81,35)"/><text x="664.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="690" y="292" width="2" height="15" fill="rgb(223,153,17)"/><text x="693.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="690" y="308" width="2" height="15" fill="rgb(254,88,47)"/><text x="693.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="690" y="324" width="2" height="15" fill="rgb(254,190,6)"/><text x="693.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="690" y="340" width="2" height="15" fill="rgb(232,90,16)"/><text x="693.00" y="350.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.15%)</title><rect x="692" y="292" width="1" height="15" fill="rgb(250,111,45)"/><text x="695.00" y="302.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.15%)</title><rect x="693" y="292" width="2" height="15" fill="rgb(232,64,21)"/><text x="696.00" y="302.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.15%)</title><rect x="693" y="308" width="2" height="15" fill="rgb(244,117,12)"/><text x="696.00" y="318.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="693" y="324" width="2" height="15" fill="rgb(215,221,40)"/><text x="696.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="704" y="372" width="1" height="15" fill="rgb(208,49,10)"/><text x="707.00" y="382.50"></text></g><g><title>0x7fa71c789d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="704" y="340" width="3" height="15" fill="rgb(250,229,37)"/><text x="707.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.29%)</title><rect x="704" y="356" width="3" height="15" fill="rgb(250,188,21)"/><text x="707.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="705" y="372" width="2" height="15" fill="rgb(222,40,33)"/><text x="708.00" y="382.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.15%)</title><rect x="705" y="388" width="2" height="15" fill="rgb(239,78,49)"/><text x="708.00" y="398.50"></text></g><g><title>0x7fa71c799f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.44%)</title><rect x="704" y="324" width="5" height="15" fill="rgb(232,130,36)"/><text x="707.00" y="334.50"></text></g><g><title>0x7fa71c789d69 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="707" y="340" width="2" height="15" fill="rgb(217,82,39)"/><text x="710.00" y="350.50"></text></g><g><title>0x7fa71c799f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="709" y="324" width="2" height="15" fill="rgb(249,5,31)"/><text x="712.00" y="334.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.15%)</title><rect x="711" y="388" width="1" height="15" fill="rgb(244,184,10)"/><text x="714.00" y="398.50"></text></g><g><title>0x7fa71c7a8225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.44%)</title><rect x="711" y="356" width="5" height="15" fill="rgb(246,189,26)"/><text x="714.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (3 samples, 0.44%)</title><rect x="711" y="372" width="5" height="15" fill="rgb(243,207,35)"/><text x="714.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (2 samples, 0.29%)</title><rect x="712" y="388" width="4" height="15" fill="rgb(214,119,36)"/><text x="715.00" y="398.50"></text></g><g><title>0x7fa71c78c604 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="716" y="388" width="2" height="15" fill="rgb(218,104,11)"/><text x="719.00" y="398.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.15%)</title><rect x="723" y="452" width="1" height="15" fill="rgb(209,220,4)"/><text x="726.00" y="462.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="723" y="468" width="1" height="15" fill="rgb(239,189,26)"/><text x="726.00" y="478.50"></text></g><g><title>0x7fa71c78cd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.88%)</title><rect x="716" y="372" width="10" height="15" fill="rgb(213,111,19)"/><text x="719.00" y="382.50"></text></g><g><title>0x7fa71c78c666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.73%)</title><rect x="718" y="388" width="8" height="15" fill="rgb(215,169,5)"/><text x="721.00" y="398.50"></text></g><g><title>0x7fa71c7822fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.73%)</title><rect x="718" y="404" width="8" height="15" fill="rgb(225,186,9)"/><text x="721.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (5 samples, 0.73%)</title><rect x="718" y="420" width="8" height="15" fill="rgb(230,165,16)"/><text x="721.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (5 samples, 0.73%)</title><rect x="718" y="436" width="8" height="15" fill="rgb(211,125,18)"/><text x="721.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.15%)</title><rect x="724" y="452" width="2" height="15" fill="rgb(248,168,14)"/><text x="727.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="724" y="468" width="2" height="15" fill="rgb(233,145,4)"/><text x="727.00" y="478.50"></text></g><g><title>0x7fa71c77fa9a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="726" y="404" width="2" height="15" fill="rgb(211,213,25)"/><text x="729.00" y="414.50"></text></g><g><title>0x7fa71c7a82df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.17%)</title><rect x="716" y="356" width="14" height="15" fill="rgb(245,37,10)"/><text x="719.00" y="366.50"></text></g><g><title>0x7fa71c78ce72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="726" y="372" width="4" height="15" fill="rgb(212,196,26)"/><text x="729.00" y="382.50"></text></g><g><title>0x7fa71c7802bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="726" y="388" width="4" height="15" fill="rgb(248,115,22)"/><text x="729.00" y="398.50"></text></g><g><title>0x7fa71c77fc7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="728" y="404" width="2" height="15" fill="rgb(205,125,53)"/><text x="731.00" y="414.50"></text></g><g><title>0x7fa71c7a8364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="730" y="356" width="3" height="15" fill="rgb(240,177,40)"/><text x="733.00" y="366.50"></text></g><g><title>0x7fa71c7a84b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="733" y="356" width="2" height="15" fill="rgb(218,212,34)"/><text x="736.00" y="366.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.15%)</title><rect x="738" y="388" width="2" height="15" fill="rgb(227,26,40)"/><text x="741.00" y="398.50"></text></g><g><title>0x7fa71c7a8592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.58%)</title><rect x="735" y="356" width="7" height="15" fill="rgb(212,26,39)"/><text x="738.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (3 samples, 0.44%)</title><rect x="736" y="372" width="6" height="15" fill="rgb(214,74,42)"/><text x="739.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.15%)</title><rect x="740" y="388" width="2" height="15" fill="rgb(253,2,46)"/><text x="743.00" y="398.50"></text></g><g><title>0x7fa71c7a8684 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="742" y="356" width="1" height="15" fill="rgb(205,31,40)"/><text x="745.00" y="366.50"></text></g><g><title>0x7fa71c7a8687 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="743" y="356" width="2" height="15" fill="rgb(215,6,1)"/><text x="746.00" y="366.50"></text></g><g><title>0x7fa71c7a869b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="745" y="356" width="2" height="15" fill="rgb(243,192,17)"/><text x="748.00" y="366.50"></text></g><g><title>0x7fa71c7a86a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="747" y="356" width="2" height="15" fill="rgb(221,106,24)"/><text x="750.00" y="366.50"></text></g><g><title>0x7fa71c7a86a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="749" y="356" width="1" height="15" fill="rgb(221,91,24)"/><text x="752.00" y="366.50"></text></g><g><title>0x7fa71c7a86aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.44%)</title><rect x="750" y="356" width="5" height="15" fill="rgb(210,113,37)"/><text x="753.00" y="366.50"></text></g><g><title>0x7fa71c7a86ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="755" y="356" width="2" height="15" fill="rgb(219,224,16)"/><text x="758.00" y="366.50"></text></g><g><title>0x7fa71c7a86b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.44%)</title><rect x="757" y="356" width="5" height="15" fill="rgb(242,34,33)"/><text x="760.00" y="366.50"></text></g><g><title>0x7fa71c7a86b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="762" y="356" width="4" height="15" fill="rgb(215,39,48)"/><text x="765.00" y="366.50"></text></g><g><title>0x7fa71c7a86c6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="766" y="356" width="1" height="15" fill="rgb(218,217,34)"/><text x="769.00" y="366.50"></text></g><g><title>0x7fa71c7a86c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="767" y="356" width="2" height="15" fill="rgb(246,60,34)"/><text x="770.00" y="366.50"></text></g><g><title>0x7fa71c7a86e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="769" y="356" width="2" height="15" fill="rgb(245,202,46)"/><text x="772.00" y="366.50"></text></g><g><title>0x7fa71c7a87a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="771" y="356" width="2" height="15" fill="rgb(216,191,10)"/><text x="774.00" y="366.50"></text></g><g><title>0x7fa71c7a87a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="773" y="356" width="3" height="15" fill="rgb(216,147,22)"/><text x="776.00" y="366.50"></text></g><g><title>0x7fa71c7a9405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (39 samples, 5.69%)</title><rect x="711" y="340" width="67" height="15" fill="rgb(210,187,23)"/><text x="714.00" y="350.50">0x7fa71..</text></g><g><title>0x7fa71c7a8c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="776" y="356" width="2" height="15" fill="rgb(233,55,54)"/><text x="779.00" y="366.50"></text></g><g><title>0x7fa71c7805f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="776" y="372" width="2" height="15" fill="rgb(247,136,26)"/><text x="779.00" y="382.50"></text></g><g><title>0x7fa71c77ff4f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="776" y="388" width="2" height="15" fill="rgb(218,189,53)"/><text x="779.00" y="398.50"></text></g><g><title>0x7fa71c799fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (41 samples, 5.99%)</title><rect x="711" y="324" width="70" height="15" fill="rgb(209,201,7)"/><text x="714.00" y="334.50">0x7fa71..</text></g><g><title>0x7fa71c7a9540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="778" y="340" width="3" height="15" fill="rgb(233,123,22)"/><text x="781.00" y="350.50"></text></g><g><title>0x7fa71c77e2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="778" y="356" width="3" height="15" fill="rgb(240,202,45)"/><text x="781.00" y="366.50"></text></g><g><title>0x7fa71c77d4f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="778" y="372" width="3" height="15" fill="rgb(211,222,28)"/><text x="781.00" y="382.50"></text></g><g><title>0x7fa71c79a032 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="781" y="324" width="2" height="15" fill="rgb(218,48,35)"/><text x="784.00" y="334.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (10 samples, 1.46%)</title><rect x="786" y="372" width="18" height="15" fill="rgb(228,25,52)"/><text x="789.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.15%)</title><rect x="804" y="372" width="1" height="15" fill="rgb(254,53,48)"/><text x="807.00" y="382.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.15%)</title><rect x="804" y="388" width="1" height="15" fill="rgb(239,65,15)"/><text x="807.00" y="398.50"></text></g><g><title>0x7fa71c79a05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 2.04%)</title><rect x="783" y="324" width="24" height="15" fill="rgb(230,94,32)"/><text x="786.00" y="334.50">0..</text></g><g><title>array_take (methods.c) (14 samples, 2.04%)</title><rect x="783" y="340" width="24" height="15" fill="rgb(210,224,45)"/><text x="786.00" y="350.50">a..</text></g><g><title>PyArray_TakeFrom (item_selection.c) (12 samples, 1.75%)</title><rect x="786" y="356" width="21" height="15" fill="rgb(233,32,43)"/><text x="789.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="805" y="372" width="2" height="15" fill="rgb(241,87,5)"/><text x="808.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="805" y="388" width="2" height="15" fill="rgb(228,126,45)"/><text x="808.00" y="398.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="805" y="404" width="2" height="15" fill="rgb(219,120,3)"/><text x="808.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="807" y="356" width="2" height="15" fill="rgb(231,17,17)"/><text x="810.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="807" y="372" width="2" height="15" fill="rgb(245,137,24)"/><text x="810.00" y="382.50"></text></g><g><title>0x7fa71c79ad2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (62 samples, 9.05%)</title><rect x="704" y="308" width="107" height="15" fill="rgb(223,143,20)"/><text x="707.00" y="318.50">0x7fa71c79ad2..</text></g><g><title>0x7fa71c79a14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.29%)</title><rect x="807" y="324" width="4" height="15" fill="rgb(217,82,21)"/><text x="810.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.29%)</title><rect x="807" y="340" width="4" height="15" fill="rgb(229,30,24)"/><text x="810.00" y="350.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.15%)</title><rect x="809" y="356" width="2" height="15" fill="rgb(218,74,53)"/><text x="812.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.15%)</title><rect x="809" y="372" width="2" height="15" fill="rgb(247,71,38)"/><text x="812.00" y="382.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.15%)</title><rect x="809" y="388" width="2" height="15" fill="rgb(251,25,13)"/><text x="812.00" y="398.50"></text></g><g><title>0x7fa742d56a89 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="809" y="404" width="2" height="15" fill="rgb(216,80,1)"/><text x="812.00" y="414.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.15%)</title><rect x="811" y="308" width="1" height="15" fill="rgb(248,164,46)"/><text x="814.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.15%)</title><rect x="811" y="324" width="1" height="15" fill="rgb(240,54,46)"/><text x="814.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.15%)</title><rect x="811" y="340" width="1" height="15" fill="rgb(246,186,13)"/><text x="814.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.15%)</title><rect x="811" y="356" width="1" height="15" fill="rgb(208,57,1)"/><text x="814.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="812" y="308" width="2" height="15" fill="rgb(234,19,39)"/><text x="815.00" y="318.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c) (1 samples, 0.15%)</title><rect x="816" y="324" width="1" height="15" fill="rgb(215,138,9)"/><text x="819.00" y="334.50"></text></g><g><title>binop_should_defer (binop_override.h) (1 samples, 0.15%)</title><rect x="817" y="324" width="2" height="15" fill="rgb(217,5,8)"/><text x="820.00" y="334.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c) (1 samples, 0.15%)</title><rect x="817" y="340" width="2" height="15" fill="rgb(234,177,39)"/><text x="820.00" y="350.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="819" y="356" width="2" height="15" fill="rgb(228,195,51)"/><text x="822.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.44%)</title><rect x="821" y="356" width="5" height="15" fill="rgb(208,216,52)"/><text x="824.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (3 samples, 0.44%)</title><rect x="821" y="372" width="5" height="15" fill="rgb(232,105,21)"/><text x="824.00" y="382.50"></text></g><g><title>DOUBLE_equal (loops.c.src) (3 samples, 0.44%)</title><rect x="821" y="388" width="5" height="15" fill="rgb(212,111,44)"/><text x="824.00" y="398.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src) (2 samples, 0.29%)</title><rect x="823" y="404" width="3" height="15" fill="rgb(250,61,52)"/><text x="826.00" y="414.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src) (1 samples, 0.15%)</title><rect x="824" y="420" width="2" height="15" fill="rgb(217,9,35)"/><text x="827.00" y="430.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.15%)</title><rect x="829" y="388" width="2" height="15" fill="rgb(225,23,52)"/><text x="832.00" y="398.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.15%)</title><rect x="829" y="404" width="2" height="15" fill="rgb(250,159,12)"/><text x="832.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="831" y="388" width="2" height="15" fill="rgb(245,215,0)"/><text x="834.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.15%)</title><rect x="831" y="404" width="2" height="15" fill="rgb(224,136,34)"/><text x="834.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.15%)</title><rect x="831" y="420" width="2" height="15" fill="rgb(233,165,49)"/><text x="834.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (5 samples, 0.73%)</title><rect x="826" y="356" width="9" height="15" fill="rgb(222,225,27)"/><text x="829.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 0.58%)</title><rect x="828" y="372" width="7" height="15" fill="rgb(232,127,33)"/><text x="831.00" y="382.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.15%)</title><rect x="833" y="388" width="2" height="15" fill="rgb(214,38,5)"/><text x="836.00" y="398.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="833" y="404" width="2" height="15" fill="rgb(252,19,13)"/><text x="836.00" y="414.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="833" y="420" width="2" height="15" fill="rgb(233,26,19)"/><text x="836.00" y="430.50"></text></g><g><title>0x7fa741f79350 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="833" y="436" width="2" height="15" fill="rgb(216,157,53)"/><text x="836.00" y="446.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.15%)</title><rect x="835" y="356" width="1" height="15" fill="rgb(209,67,4)"/><text x="838.00" y="366.50"></text></g><g><title>array_richcompare (arrayobject.c) (14 samples, 2.04%)</title><rect x="814" y="308" width="24" height="15" fill="rgb(210,180,53)"/><text x="817.00" y="318.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 1.61%)</title><rect x="819" y="324" width="19" height="15" fill="rgb(225,200,3)"/><text x="822.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.61%)</title><rect x="819" y="340" width="19" height="15" fill="rgb(218,185,24)"/><text x="822.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="836" y="356" width="2" height="15" fill="rgb(227,16,17)"/><text x="839.00" y="366.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.15%)</title><rect x="845" y="372" width="2" height="15" fill="rgb(252,167,40)"/><text x="848.00" y="382.50"></text></g><g><title>array_subscript (mapping.c) (6 samples, 0.88%)</title><rect x="838" y="308" width="10" height="15" fill="rgb(209,21,31)"/><text x="841.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c) (4 samples, 0.58%)</title><rect x="842" y="324" width="6" height="15" fill="rgb(238,6,5)"/><text x="845.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.29%)</title><rect x="845" y="340" width="3" height="15" fill="rgb(233,79,10)"/><text x="848.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.29%)</title><rect x="845" y="356" width="3" height="15" fill="rgb(222,162,29)"/><text x="848.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="847" y="372" width="1" height="15" fill="rgb(235,193,16)"/><text x="850.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (7 samples, 1.02%)</title><rect x="852" y="404" width="12" height="15" fill="rgb(252,136,10)"/><text x="855.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (7 samples, 1.02%)</title><rect x="852" y="420" width="12" height="15" fill="rgb(223,185,40)"/><text x="855.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (7 samples, 1.02%)</title><rect x="852" y="436" width="12" height="15" fill="rgb(233,211,43)"/><text x="855.00" y="446.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.15%)</title><rect x="862" y="452" width="2" height="15" fill="rgb(253,29,27)"/><text x="865.00" y="462.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (9 samples, 1.31%)</title><rect x="850" y="372" width="16" height="15" fill="rgb(247,66,21)"/><text x="853.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (8 samples, 1.17%)</title><rect x="852" y="388" width="14" height="15" fill="rgb(219,213,48)"/><text x="855.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.15%)</title><rect x="864" y="404" width="2" height="15" fill="rgb(233,9,21)"/><text x="867.00" y="414.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.15%)</title><rect x="866" y="436" width="1" height="15" fill="rgb(240,43,0)"/><text x="869.00" y="446.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.15%)</title><rect x="866" y="452" width="1" height="15" fill="rgb(230,24,18)"/><text x="869.00" y="462.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.15%)</title><rect x="866" y="468" width="1" height="15" fill="rgb(232,135,20)"/><text x="869.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.29%)</title><rect x="866" y="420" width="3" height="15" fill="rgb(213,131,27)"/><text x="869.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="867" y="436" width="2" height="15" fill="rgb(208,151,1)"/><text x="870.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="867" y="452" width="2" height="15" fill="rgb(217,37,23)"/><text x="870.00" y="462.50"></text></g><g><title>0x7fa742d586df (libc-2.29.so) (1 samples, 0.15%)</title><rect x="867" y="468" width="2" height="15" fill="rgb(207,184,44)"/><text x="870.00" y="478.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.29%)</title><rect x="869" y="420" width="4" height="15" fill="rgb(251,20,10)"/><text x="872.00" y="430.50"></text></g><g><title>0x7fa742d56a89 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="871" y="436" width="2" height="15" fill="rgb(244,120,34)"/><text x="874.00" y="446.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.29%)</title><rect x="873" y="420" width="3" height="15" fill="rgb(240,14,1)"/><text x="876.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.29%)</title><rect x="873" y="436" width="3" height="15" fill="rgb(213,37,24)"/><text x="876.00" y="446.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.29%)</title><rect x="873" y="452" width="3" height="15" fill="rgb(233,62,37)"/><text x="876.00" y="462.50"></text></g><g><title>0x7fa742d0ea19 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="874" y="468" width="2" height="15" fill="rgb(227,143,8)"/><text x="877.00" y="478.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.15%)</title><rect x="874" y="484" width="2" height="15" fill="rgb(226,14,16)"/><text x="877.00" y="494.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.15%)</title><rect x="878" y="468" width="1" height="15" fill="rgb(242,42,26)"/><text x="881.00" y="478.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.15%)</title><rect x="879" y="468" width="2" height="15" fill="rgb(209,208,39)"/><text x="882.00" y="478.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (4 samples, 0.58%)</title><rect x="876" y="420" width="7" height="15" fill="rgb(234,105,29)"/><text x="879.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (4 samples, 0.58%)</title><rect x="876" y="436" width="7" height="15" fill="rgb(229,205,21)"/><text x="879.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (4 samples, 0.58%)</title><rect x="876" y="452" width="7" height="15" fill="rgb(209,84,20)"/><text x="879.00" y="462.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="881" y="468" width="2" height="15" fill="rgb(240,155,27)"/><text x="884.00" y="478.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="883" y="420" width="2" height="15" fill="rgb(236,36,13)"/><text x="886.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src) (19 samples, 2.77%)</title><rect x="904" y="436" width="32" height="15" fill="rgb(227,85,52)"/><text x="907.00" y="446.50">DO..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (5 samples, 0.73%)</title><rect x="928" y="452" width="8" height="15" fill="rgb(253,143,23)"/><text x="931.00" y="462.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="936" y="436" width="2" height="15" fill="rgb(213,36,47)"/><text x="939.00" y="446.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="938" y="436" width="2" height="15" fill="rgb(254,41,21)"/><text x="941.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (54 samples, 7.88%)</title><rect x="866" y="404" width="93" height="15" fill="rgb(230,34,6)"/><text x="869.00" y="414.50">PyUFunc_Red..</text></g><g><title>reduce_loop (ufunc_object.c) (43 samples, 6.28%)</title><rect x="885" y="420" width="74" height="15" fill="rgb(226,32,5)"/><text x="888.00" y="430.50">reduce_l..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (11 samples, 1.61%)</title><rect x="940" y="436" width="19" height="15" fill="rgb(252,91,43)"/><text x="943.00" y="446.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="959" y="436" width="1" height="15" fill="rgb(235,53,41)"/><text x="962.00" y="446.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="959" y="452" width="1" height="15" fill="rgb(245,30,53)"/><text x="962.00" y="462.50"></text></g><g><title>array_sum (methods.c) (66 samples, 9.64%)</title><rect x="848" y="308" width="114" height="15" fill="rgb(207,69,8)"/><text x="851.00" y="318.50">array_sum (met..</text></g><g><title>forward_ndarray_method (methods.c) (66 samples, 9.64%)</title><rect x="848" y="324" width="114" height="15" fill="rgb(218,29,36)"/><text x="851.00" y="334.50">forward_ndarra..</text></g><g><title>_sum (numpy/core/_methods.py) (65 samples, 9.49%)</title><rect x="850" y="340" width="112" height="15" fill="rgb(220,44,53)"/><text x="853.00" y="350.50">_sum (numpy/c..</text></g><g><title>ufunc_reduce (ufunc_object.c) (65 samples, 9.49%)</title><rect x="850" y="356" width="112" height="15" fill="rgb(247,45,28)"/><text x="853.00" y="366.50">ufunc_reduce ..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (56 samples, 8.18%)</title><rect x="866" y="372" width="96" height="15" fill="rgb(240,55,38)"/><text x="869.00" y="382.50">PyUFunc_Gen..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (56 samples, 8.18%)</title><rect x="866" y="388" width="96" height="15" fill="rgb(209,27,32)"/><text x="869.00" y="398.50">PyUFunc_Red..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.29%)</title><rect x="959" y="404" width="3" height="15" fill="rgb(211,26,49)"/><text x="962.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.29%)</title><rect x="959" y="420" width="3" height="15" fill="rgb(228,199,39)"/><text x="962.00" y="430.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 0.15%)</title><rect x="960" y="436" width="2" height="15" fill="rgb(224,206,3)"/><text x="963.00" y="446.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.15%)</title><rect x="979" y="340" width="2" height="15" fill="rgb(235,229,26)"/><text x="982.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (11 samples, 1.61%)</title><rect x="967" y="324" width="19" height="15" fill="rgb(221,0,38)"/><text x="970.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.44%)</title><rect x="981" y="340" width="5" height="15" fill="rgb(209,16,45)"/><text x="984.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (15 samples, 2.19%)</title><rect x="962" y="308" width="26" height="15" fill="rgb(248,55,0)"/><text x="965.00" y="318.50">c..</text></g><g><title>isclass (inspect.py) (1 samples, 0.15%)</title><rect x="986" y="324" width="2" height="15" fill="rgb(205,122,29)"/><text x="989.00" y="334.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.15%)</title><rect x="990" y="340" width="1" height="15" fill="rgb(216,173,44)"/><text x="993.00" y="350.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.15%)</title><rect x="990" y="356" width="1" height="15" fill="rgb(227,66,25)"/><text x="993.00" y="366.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.15%)</title><rect x="991" y="420" width="2" height="15" fill="rgb(219,119,40)"/><text x="994.00" y="430.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (10 samples, 1.46%)</title><rect x="991" y="372" width="18" height="15" fill="rgb(231,113,39)"/><text x="994.00" y="382.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (10 samples, 1.46%)</title><rect x="991" y="388" width="18" height="15" fill="rgb(234,188,52)"/><text x="994.00" y="398.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (10 samples, 1.46%)</title><rect x="991" y="404" width="18" height="15" fill="rgb(247,170,52)"/><text x="994.00" y="414.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (9 samples, 1.31%)</title><rect x="993" y="420" width="16" height="15" fill="rgb(232,61,49)"/><text x="996.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1009" y="388" width="1" height="15" fill="rgb(232,41,38)"/><text x="1012.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.29%)</title><rect x="1009" y="372" width="3" height="15" fill="rgb(230,80,36)"/><text x="1012.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1010" y="388" width="2" height="15" fill="rgb(246,159,29)"/><text x="1013.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.15%)</title><rect x="1010" y="404" width="2" height="15" fill="rgb(237,136,31)"/><text x="1013.00" y="414.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="1012" y="388" width="2" height="15" fill="rgb(206,50,13)"/><text x="1015.00" y="398.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (12 samples, 1.75%)</title><rect x="1012" y="372" width="21" height="15" fill="rgb(250,86,48)"/><text x="1015.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (11 samples, 1.61%)</title><rect x="1014" y="388" width="19" height="15" fill="rgb(229,215,3)"/><text x="1017.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (10 samples, 1.46%)</title><rect x="1016" y="404" width="17" height="15" fill="rgb(250,4,25)"/><text x="1019.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (4 samples, 0.58%)</title><rect x="1026" y="420" width="7" height="15" fill="rgb(251,45,14)"/><text x="1029.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (25 samples, 3.65%)</title><rect x="991" y="340" width="43" height="15" fill="rgb(243,109,21)"/><text x="994.00" y="350.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c) (25 samples, 3.65%)</title><rect x="991" y="356" width="43" height="15" fill="rgb(209,39,18)"/><text x="994.00" y="366.50">iter..</text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="1033" y="372" width="1" height="15" fill="rgb(225,68,38)"/><text x="1036.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1034" y="340" width="2" height="15" fill="rgb(215,115,17)"/><text x="1037.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1034" y="356" width="2" height="15" fill="rgb(213,38,47)"/><text x="1037.00" y="366.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.15%)</title><rect x="1034" y="372" width="2" height="15" fill="rgb(229,47,53)"/><text x="1037.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (29 samples, 4.23%)</title><rect x="988" y="324" width="50" height="15" fill="rgb(209,96,49)"/><text x="991.00" y="334.50">PyUFu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1036" y="340" width="2" height="15" fill="rgb(235,86,46)"/><text x="1039.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (200 samples, 29.20%)</title><rect x="695" y="292" width="345" height="15" fill="rgb(209,185,32)"/><text x="698.00" y="302.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (30 samples, 4.38%)</title><rect x="988" y="308" width="52" height="15" fill="rgb(252,85,34)"/><text x="991.00" y="318.50">ufunc..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1038" y="324" width="2" height="15" fill="rgb(215,9,26)"/><text x="1041.00" y="334.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1040" y="324" width="1" height="15" fill="rgb(251,127,50)"/><text x="1043.00" y="334.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.15%)</title><rect x="1045" y="372" width="2" height="15" fill="rgb(211,76,23)"/><text x="1048.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.29%)</title><rect x="1045" y="340" width="3" height="15" fill="rgb(230,87,20)"/><text x="1048.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.29%)</title><rect x="1045" y="356" width="3" height="15" fill="rgb(252,214,11)"/><text x="1048.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.15%)</title><rect x="1047" y="372" width="1" height="15" fill="rgb(215,71,14)"/><text x="1050.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.15%)</title><rect x="1047" y="388" width="1" height="15" fill="rgb(249,169,47)"/><text x="1050.00" y="398.50"></text></g><g><title>safe_mul (npy_extint128.h) (1 samples, 0.15%)</title><rect x="1047" y="404" width="1" height="15" fill="rgb(246,95,16)"/><text x="1050.00" y="414.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1048" y="340" width="2" height="15" fill="rgb(222,197,42)"/><text x="1051.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.15%)</title><rect x="1052" y="356" width="1" height="15" fill="rgb(216,118,20)"/><text x="1055.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 1.17%)</title><rect x="1041" y="324" width="14" height="15" fill="rgb(236,161,32)"/><text x="1044.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (3 samples, 0.44%)</title><rect x="1050" y="340" width="5" height="15" fill="rgb(241,202,5)"/><text x="1053.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="1053" y="356" width="2" height="15" fill="rgb(206,133,20)"/><text x="1056.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1055" y="324" width="2" height="15" fill="rgb(246,130,30)"/><text x="1058.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.61%)</title><rect x="1040" y="308" width="19" height="15" fill="rgb(240,53,9)"/><text x="1043.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="1057" y="324" width="2" height="15" fill="rgb(250,58,15)"/><text x="1060.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="1057" y="340" width="2" height="15" fill="rgb(252,75,30)"/><text x="1060.00" y="350.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (220 samples, 32.12%)</title><rect x="681" y="276" width="379" height="15" fill="rgb(220,127,16)"/><text x="684.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_forest.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 1.75%)</title><rect x="1040" y="292" width="20" height="15" fill="rgb(237,12,27)"/><text x="1043.00" y="302.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1059" y="308" width="1" height="15" fill="rgb(223,114,3)"/><text x="1062.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (222 samples, 32.41%)</title><rect x="680" y="260" width="382" height="15" fill="rgb(234,5,26)"/><text x="683.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="1060" y="276" width="2" height="15" fill="rgb(244,123,48)"/><text x="1063.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="1060" y="292" width="2" height="15" fill="rgb(231,113,39)"/><text x="1063.00" y="302.50"></text></g><g><title>__exit__ (joblib/parallel.py) (5 samples, 0.73%)</title><rect x="1062" y="260" width="9" height="15" fill="rgb(251,102,32)"/><text x="1065.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py) (4 samples, 0.58%)</title><rect x="1064" y="276" width="7" height="15" fill="rgb(218,39,19)"/><text x="1067.00" y="286.50"></text></g><g><title>_dispatch (joblib/parallel.py) (261 samples, 38.10%)</title><rect x="630" y="196" width="449" height="15" fill="rgb(253,4,0)"/><text x="633.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>apply_async (joblib/_parallel_backends.py) (252 samples, 36.79%)</title><rect x="645" y="212" width="434" height="15" fill="rgb(246,120,44)"/><text x="648.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (242 samples, 35.33%)</title><rect x="662" y="228" width="417" height="15" fill="rgb(215,102,33)"/><text x="665.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (239 samples, 34.89%)</title><rect x="668" y="244" width="411" height="15" fill="rgb(225,162,32)"/><text x="671.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (5 samples, 0.73%)</title><rect x="1071" y="260" width="8" height="15" fill="rgb(250,203,43)"/><text x="1074.00" y="270.50"></text></g><g><title>__enter__ (threading.py) (2 samples, 0.29%)</title><rect x="1093" y="212" width="3" height="15" fill="rgb(248,143,46)"/><text x="1096.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.15%)</title><rect x="1095" y="228" width="1" height="15" fill="rgb(230,98,22)"/><text x="1098.00" y="238.50"></text></g><g><title>_qsize (queue.py) (1 samples, 0.15%)</title><rect x="1096" y="212" width="2" height="15" fill="rgb(236,61,54)"/><text x="1099.00" y="222.50"></text></g><g><title>get (queue.py) (13 samples, 1.90%)</title><rect x="1079" y="196" width="23" height="15" fill="rgb(207,73,23)"/><text x="1082.00" y="206.50">g..</text></g><g><title>notify (threading.py) (2 samples, 0.29%)</title><rect x="1098" y="212" width="4" height="15" fill="rgb(231,99,3)"/><text x="1101.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.58%)</title><rect x="1114" y="212" width="7" height="15" fill="rgb(231,119,44)"/><text x="1117.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (12 samples, 1.75%)</title><rect x="1121" y="212" width="20" height="15" fill="rgb(224,23,53)"/><text x="1124.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (6 samples, 0.88%)</title><rect x="1131" y="228" width="10" height="15" fill="rgb(210,124,36)"/><text x="1134.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.15%)</title><rect x="1140" y="244" width="1" height="15" fill="rgb(241,72,32)"/><text x="1143.00" y="254.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="1141" y="212" width="2" height="15" fill="rgb(240,89,25)"/><text x="1144.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (25 samples, 3.65%)</title><rect x="1102" y="196" width="43" height="15" fill="rgb(233,205,45)"/><text x="1105.00" y="206.50">get_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.15%)</title><rect x="1143" y="212" width="2" height="15" fill="rgb(216,195,29)"/><text x="1146.00" y="222.50"></text></g><g><title>_put (queue.py) (1 samples, 0.15%)</title><rect x="1146" y="212" width="2" height="15" fill="rgb(240,111,29)"/><text x="1149.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (340 samples, 49.64%)</title><rect x="569" y="180" width="586" height="15" fill="rgb(236,98,16)"/><text x="572.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (6 samples, 0.88%)</title><rect x="1145" y="196" width="10" height="15" fill="rgb(247,113,31)"/><text x="1148.00" y="206.50"></text></g><g><title>notify (threading.py) (4 samples, 0.58%)</title><rect x="1148" y="212" width="7" height="15" fill="rgb(240,66,54)"/><text x="1151.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (1 samples, 0.15%)</title><rect x="1153" y="228" width="2" height="15" fill="rgb(250,166,48)"/><text x="1156.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py) (347 samples, 50.66%)</title><rect x="562" y="164" width="598" height="15" fill="rgb(219,101,21)"/><text x="565.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (3 samples, 0.44%)</title><rect x="1155" y="180" width="5" height="15" fill="rgb(251,153,21)"/><text x="1158.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py) (2 samples, 0.29%)</title><rect x="1160" y="164" width="4" height="15" fill="rgb(246,193,28)"/><text x="1163.00" y="174.50"></text></g><g><title>__init__ (queue.py) (1 samples, 0.15%)</title><rect x="1162" y="180" width="2" height="15" fill="rgb(245,27,14)"/><text x="1165.00" y="190.50"></text></g><g><title>__init__ (threading.py) (1 samples, 0.15%)</title><rect x="1162" y="196" width="2" height="15" fill="rgb(252,110,52)"/><text x="1165.00" y="206.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py) (1 samples, 0.15%)</title><rect x="1164" y="164" width="1" height="15" fill="rgb(233,101,35)"/><text x="1167.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1164" y="180" width="1" height="15" fill="rgb(229,43,29)"/><text x="1167.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1164" y="196" width="1" height="15" fill="rgb(249,118,41)"/><text x="1167.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1164" y="212" width="1" height="15" fill="rgb(211,34,17)"/><text x="1167.00" y="222.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1164" y="228" width="1" height="15" fill="rgb(243,116,16)"/><text x="1167.00" y="238.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.15%)</title><rect x="1164" y="244" width="1" height="15" fill="rgb(219,120,32)"/><text x="1167.00" y="254.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (352 samples, 51.39%)</title><rect x="562" y="100" width="607" height="15" fill="rgb(240,220,47)"/><text x="565.00" y="110.50">profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (352 samples, 51.39%)</title><rect x="562" y="116" width="607" height="15" fill="rgb(234,1,7)"/><text x="565.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (352 samples, 51.39%)</title><rect x="562" y="132" width="607" height="15" fill="rgb(243,73,27)"/><text x="565.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py) (352 samples, 51.39%)</title><rect x="562" y="148" width="607" height="15" fill="rgb(241,212,0)"/><text x="565.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py)</text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py) (2 samples, 0.29%)</title><rect x="1165" y="164" width="4" height="15" fill="rgb(209,105,5)"/><text x="1168.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (2 samples, 0.29%)</title><rect x="1165" y="180" width="4" height="15" fill="rgb(225,156,47)"/><text x="1168.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.29%)</title><rect x="1165" y="196" width="4" height="15" fill="rgb(243,197,21)"/><text x="1168.00" y="206.50"></text></g><g><title>array_flatten (methods.c) (1 samples, 0.15%)</title><rect x="1169" y="244" width="2" height="15" fill="rgb(210,4,28)"/><text x="1172.00" y="254.50"></text></g><g><title>PyArray_Flatten (shape.c) (1 samples, 0.15%)</title><rect x="1169" y="260" width="2" height="15" fill="rgb(239,201,2)"/><text x="1172.00" y="270.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c) (1 samples, 0.15%)</title><rect x="1169" y="276" width="2" height="15" fill="rgb(253,114,25)"/><text x="1172.00" y="286.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.15%)</title><rect x="1169" y="292" width="2" height="15" fill="rgb(222,129,39)"/><text x="1172.00" y="302.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.15%)</title><rect x="1169" y="308" width="2" height="15" fill="rgb(247,146,13)"/><text x="1172.00" y="318.50"></text></g><g><title>profile_skl (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (355 samples, 51.82%)</title><rect x="562" y="68" width="612" height="15" fill="rgb(248,181,5)"/><text x="565.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (355 samples, 51.82%)</title><rect x="562" y="84" width="612" height="15" fill="rgb(210,4,8)"/><text x="565.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.44%)</title><rect x="1169" y="100" width="5" height="15" fill="rgb(233,51,49)"/><text x="1172.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.44%)</title><rect x="1169" y="116" width="5" height="15" fill="rgb(235,114,7)"/><text x="1172.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.44%)</title><rect x="1169" y="132" width="5" height="15" fill="rgb(245,123,33)"/><text x="1172.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (3 samples, 0.44%)</title><rect x="1169" y="148" width="5" height="15" fill="rgb(239,174,47)"/><text x="1172.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (3 samples, 0.44%)</title><rect x="1169" y="164" width="5" height="15" fill="rgb(236,18,7)"/><text x="1172.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (3 samples, 0.44%)</title><rect x="1169" y="180" width="5" height="15" fill="rgb(206,57,26)"/><text x="1172.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py) (3 samples, 0.44%)</title><rect x="1169" y="196" width="5" height="15" fill="rgb(237,162,32)"/><text x="1172.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (3 samples, 0.44%)</title><rect x="1169" y="212" width="5" height="15" fill="rgb(224,153,4)"/><text x="1172.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py) (3 samples, 0.44%)</title><rect x="1169" y="228" width="5" height="15" fill="rgb(244,130,27)"/><text x="1172.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py) (2 samples, 0.29%)</title><rect x="1171" y="244" width="3" height="15" fill="rgb(223,93,54)"/><text x="1174.00" y="254.50"></text></g><g><title>float_richcompare (scalarmath.c.src) (1 samples, 0.15%)</title><rect x="1172" y="260" width="2" height="15" fill="rgb(226,9,23)"/><text x="1175.00" y="270.50"></text></g><g><title>gentype_richcompare (scalartypes.c.src) (1 samples, 0.15%)</title><rect x="1172" y="276" width="2" height="15" fill="rgb(222,104,44)"/><text x="1175.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c) (1 samples, 0.15%)</title><rect x="1172" y="292" width="2" height="15" fill="rgb(223,163,40)"/><text x="1175.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1172" y="308" width="2" height="15" fill="rgb(215,181,16)"/><text x="1175.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1172" y="324" width="2" height="15" fill="rgb(248,48,35)"/><text x="1175.00" y="334.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1172" y="340" width="2" height="15" fill="rgb(225,164,4)"/><text x="1175.00" y="350.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.15%)</title><rect x="1174" y="116" width="2" height="15" fill="rgb(232,199,0)"/><text x="1177.00" y="126.50"></text></g><g><title>__init__ (mtrand.c) (1 samples, 0.15%)</title><rect x="1174" y="132" width="2" height="15" fill="rgb(233,86,31)"/><text x="1177.00" y="142.50"></text></g><g><title>RandomState___init__ (mtrand.c) (1 samples, 0.15%)</title><rect x="1174" y="148" width="2" height="15" fill="rgb(209,223,48)"/><text x="1177.00" y="158.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (1 samples, 0.15%)</title><rect x="1174" y="164" width="2" height="15" fill="rgb(214,93,7)"/><text x="1177.00" y="174.50"></text></g><g><title>__init__ (mt19937.c) (1 samples, 0.15%)</title><rect x="1174" y="180" width="2" height="15" fill="rgb(250,184,48)"/><text x="1177.00" y="190.50"></text></g><g><title>MT19937___init__ (mt19937.c) (1 samples, 0.15%)</title><rect x="1174" y="196" width="2" height="15" fill="rgb(245,135,7)"/><text x="1177.00" y="206.50"></text></g><g><title>__init__ (bit_generator.c) (1 samples, 0.15%)</title><rect x="1174" y="212" width="2" height="15" fill="rgb(210,183,27)"/><text x="1177.00" y="222.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c) (1 samples, 0.15%)</title><rect x="1174" y="228" width="2" height="15" fill="rgb(219,125,2)"/><text x="1177.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.15%)</title><rect x="1174" y="244" width="2" height="15" fill="rgb(245,68,7)"/><text x="1177.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.15%)</title><rect x="1174" y="260" width="2" height="15" fill="rgb(250,211,17)"/><text x="1177.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.15%)</title><rect x="1174" y="276" width="2" height="15" fill="rgb(209,179,19)"/><text x="1177.00" y="286.50"></text></g><g><title>_pickle_dump (_pickle.c.h) (1 samples, 0.15%)</title><rect x="1176" y="116" width="1" height="15" fill="rgb(207,139,4)"/><text x="1179.00" y="126.50"></text></g><g><title>_pickle_dump_impl (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="132" width="1" height="15" fill="rgb(250,133,25)"/><text x="1179.00" y="142.50"></text></g><g><title>dump (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="148" width="1" height="15" fill="rgb(221,6,2)"/><text x="1179.00" y="158.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="164" width="1" height="15" fill="rgb(221,181,29)"/><text x="1179.00" y="174.50"></text></g><g><title>save_dict (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="180" width="1" height="15" fill="rgb(216,113,17)"/><text x="1179.00" y="190.50"></text></g><g><title>batch_dict_exact (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="196" width="1" height="15" fill="rgb(224,12,2)"/><text x="1179.00" y="206.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="212" width="1" height="15" fill="rgb(222,79,20)"/><text x="1179.00" y="222.50"></text></g><g><title>save_reduce (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="228" width="1" height="15" fill="rgb(234,159,40)"/><text x="1179.00" y="238.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="244" width="1" height="15" fill="rgb(245,106,54)"/><text x="1179.00" y="254.50"></text></g><g><title>save_dict (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="260" width="1" height="15" fill="rgb(212,134,17)"/><text x="1179.00" y="270.50"></text></g><g><title>batch_dict_exact (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="276" width="1" height="15" fill="rgb(243,131,6)"/><text x="1179.00" y="286.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="292" width="1" height="15" fill="rgb(220,35,13)"/><text x="1179.00" y="302.50"></text></g><g><title>save_list (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="308" width="1" height="15" fill="rgb(226,150,20)"/><text x="1179.00" y="318.50"></text></g><g><title>batch_list_exact (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="324" width="1" height="15" fill="rgb(237,149,11)"/><text x="1179.00" y="334.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="340" width="1" height="15" fill="rgb(247,162,1)"/><text x="1179.00" y="350.50"></text></g><g><title>save_reduce (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="356" width="1" height="15" fill="rgb(231,57,36)"/><text x="1179.00" y="366.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="372" width="1" height="15" fill="rgb(215,26,13)"/><text x="1179.00" y="382.50"></text></g><g><title>save_dict (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="388" width="1" height="15" fill="rgb(217,226,2)"/><text x="1179.00" y="398.50"></text></g><g><title>batch_dict_exact (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="404" width="1" height="15" fill="rgb(234,91,34)"/><text x="1179.00" y="414.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="420" width="1" height="15" fill="rgb(209,166,13)"/><text x="1179.00" y="430.50"></text></g><g><title>save_reduce (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="436" width="1" height="15" fill="rgb(244,74,40)"/><text x="1179.00" y="446.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="452" width="1" height="15" fill="rgb(238,100,26)"/><text x="1179.00" y="462.50"></text></g><g><title>save_dict (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="468" width="1" height="15" fill="rgb(250,87,9)"/><text x="1179.00" y="478.50"></text></g><g><title>batch_dict_exact (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="484" width="1" height="15" fill="rgb(212,177,51)"/><text x="1179.00" y="494.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="500" width="1" height="15" fill="rgb(247,229,20)"/><text x="1179.00" y="510.50"></text></g><g><title>save_reduce (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="516" width="1" height="15" fill="rgb(242,197,52)"/><text x="1179.00" y="526.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="532" width="1" height="15" fill="rgb(240,118,26)"/><text x="1179.00" y="542.50"></text></g><g><title>save_tuple (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="548" width="1" height="15" fill="rgb(236,21,32)"/><text x="1179.00" y="558.50"></text></g><g><title>store_tuple_elements (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="564" width="1" height="15" fill="rgb(241,55,53)"/><text x="1179.00" y="574.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="580" width="1" height="15" fill="rgb(213,183,21)"/><text x="1179.00" y="590.50"></text></g><g><title>save_bytes (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="596" width="1" height="15" fill="rgb(244,57,0)"/><text x="1179.00" y="606.50"></text></g><g><title>_Pickler_write_bytes (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="612" width="1" height="15" fill="rgb(225,218,18)"/><text x="1179.00" y="622.50"></text></g><g><title>_Pickler_Write (_pickle.c) (1 samples, 0.15%)</title><rect x="1176" y="628" width="1" height="15" fill="rgb(227,198,22)"/><text x="1179.00" y="638.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.15%)</title><rect x="1177" y="132" width="2" height="15" fill="rgb(234,156,17)"/><text x="1180.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.15%)</title><rect x="1177" y="148" width="2" height="15" fill="rgb(243,211,0)"/><text x="1180.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (1 samples, 0.15%)</title><rect x="1177" y="164" width="2" height="15" fill="rgb(234,54,25)"/><text x="1180.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.15%)</title><rect x="1177" y="180" width="2" height="15" fill="rgb(225,75,26)"/><text x="1180.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.15%)</title><rect x="1177" y="196" width="2" height="15" fill="rgb(207,160,21)"/><text x="1180.00" y="206.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.15%)</title><rect x="1177" y="212" width="2" height="15" fill="rgb(248,136,31)"/><text x="1180.00" y="222.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.15%)</title><rect x="1177" y="228" width="2" height="15" fill="rgb(254,129,26)"/><text x="1180.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.15%)</title><rect x="1177" y="244" width="2" height="15" fill="rgb(208,53,37)"/><text x="1180.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.15%)</title><rect x="1177" y="260" width="2" height="15" fill="rgb(245,134,16)"/><text x="1180.00" y="270.50"></text></g><g><title>__Pyx_PyIter_Next2 (bit_generator.c) (1 samples, 0.15%)</title><rect x="1183" y="420" width="1" height="15" fill="rgb(219,9,24)"/><text x="1186.00" y="430.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py) (2 samples, 0.29%)</title><rect x="1183" y="260" width="3" height="15" fill="rgb(231,133,51)"/><text x="1186.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (2 samples, 0.29%)</title><rect x="1183" y="276" width="3" height="15" fill="rgb(249,79,51)"/><text x="1186.00" y="286.50"></text></g><g><title>__init__ (mtrand.c) (2 samples, 0.29%)</title><rect x="1183" y="292" width="3" height="15" fill="rgb(228,92,27)"/><text x="1186.00" y="302.50"></text></g><g><title>RandomState___init__ (mtrand.c) (2 samples, 0.29%)</title><rect x="1183" y="308" width="3" height="15" fill="rgb(240,35,51)"/><text x="1186.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (2 samples, 0.29%)</title><rect x="1183" y="324" width="3" height="15" fill="rgb(236,133,25)"/><text x="1186.00" y="334.50"></text></g><g><title>__init__ (mt19937.c) (2 samples, 0.29%)</title><rect x="1183" y="340" width="3" height="15" fill="rgb(253,110,36)"/><text x="1186.00" y="350.50"></text></g><g><title>MT19937___init__ (mt19937.c) (2 samples, 0.29%)</title><rect x="1183" y="356" width="3" height="15" fill="rgb(206,121,17)"/><text x="1186.00" y="366.50"></text></g><g><title>inner (contextlib.py) (2 samples, 0.29%)</title><rect x="1183" y="372" width="3" height="15" fill="rgb(237,80,6)"/><text x="1186.00" y="382.50"></text></g><g><title>generate_state (bit_generator.c) (2 samples, 0.29%)</title><rect x="1183" y="388" width="3" height="15" fill="rgb(249,178,31)"/><text x="1186.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c) (2 samples, 0.29%)</title><rect x="1183" y="404" width="3" height="15" fill="rgb(251,52,12)"/><text x="1186.00" y="414.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c) (1 samples, 0.15%)</title><rect x="1184" y="420" width="2" height="15" fill="rgb(211,212,4)"/><text x="1187.00" y="430.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (684 samples, 99.85%)</title><rect x="10" y="52" width="1178" height="15" fill="rgb(219,73,32)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py)</text></g><g><title>start (bench_RandomForestClassifier_default_m_cl_1000_4_12_float_.py) (8 samples, 1.17%)</title><rect x="1174" y="68" width="14" height="15" fill="rgb(239,51,34)"/><text x="1177.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py) (8 samples, 1.17%)</title><rect x="1174" y="84" width="14" height="15" fill="rgb(219,101,17)"/><text x="1177.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 1.17%)</title><rect x="1174" y="100" width="14" height="15" fill="rgb(252,142,19)"/><text x="1177.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (6 samples, 0.88%)</title><rect x="1177" y="116" width="11" height="15" fill="rgb(228,78,2)"/><text x="1180.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py) (5 samples, 0.73%)</title><rect x="1179" y="132" width="9" height="15" fill="rgb(232,140,20)"/><text x="1182.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (5 samples, 0.73%)</title><rect x="1179" y="148" width="9" height="15" fill="rgb(232,217,26)"/><text x="1182.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (4 samples, 0.58%)</title><rect x="1181" y="164" width="7" height="15" fill="rgb(237,64,28)"/><text x="1184.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (3 samples, 0.44%)</title><rect x="1183" y="180" width="5" height="15" fill="rgb(250,155,54)"/><text x="1186.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (3 samples, 0.44%)</title><rect x="1183" y="196" width="5" height="15" fill="rgb(245,24,49)"/><text x="1186.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (3 samples, 0.44%)</title><rect x="1183" y="212" width="5" height="15" fill="rgb(215,169,49)"/><text x="1186.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (3 samples, 0.44%)</title><rect x="1183" y="228" width="5" height="15" fill="rgb(231,15,12)"/><text x="1186.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (3 samples, 0.44%)</title><rect x="1183" y="244" width="5" height="15" fill="rgb(254,115,54)"/><text x="1186.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.15%)</title><rect x="1186" y="260" width="2" height="15" fill="rgb(206,224,28)"/><text x="1189.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.15%)</title><rect x="1186" y="276" width="2" height="15" fill="rgb(250,38,16)"/><text x="1189.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (1 samples, 0.15%)</title><rect x="1186" y="292" width="2" height="15" fill="rgb(251,192,0)"/><text x="1189.00" y="302.50"></text></g><g><title>__init__ (mtrand.c) (1 samples, 0.15%)</title><rect x="1186" y="308" width="2" height="15" fill="rgb(233,176,5)"/><text x="1189.00" y="318.50"></text></g><g><title>RandomState___init__ (mtrand.c) (1 samples, 0.15%)</title><rect x="1186" y="324" width="2" height="15" fill="rgb(243,154,42)"/><text x="1189.00" y="334.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (1 samples, 0.15%)</title><rect x="1186" y="340" width="2" height="15" fill="rgb(250,21,23)"/><text x="1189.00" y="350.50"></text></g><g><title>__init__ (mt19937.c) (1 samples, 0.15%)</title><rect x="1186" y="356" width="2" height="15" fill="rgb(210,188,5)"/><text x="1189.00" y="366.50"></text></g><g><title>MT19937___init__ (mt19937.c) (1 samples, 0.15%)</title><rect x="1186" y="372" width="2" height="15" fill="rgb(224,183,35)"/><text x="1189.00" y="382.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.15%)</title><rect x="1186" y="388" width="2" height="15" fill="rgb(219,200,34)"/><text x="1189.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="1186" y="404" width="2" height="15" fill="rgb(213,203,26)"/><text x="1189.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="1186" y="420" width="2" height="15" fill="rgb(216,122,32)"/><text x="1189.00" y="430.50"></text></g><g><title>all (685 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(240,6,32)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.15%)</title><rect x="1188" y="52" width="2" height="15" fill="rgb(254,68,46)"/><text x="1191.00" y="62.50"></text></g></g></svg>