<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1558" onload="init(evt)" viewBox="0 0 1200 1558" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1558" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1541.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1541.00"> </text><g id="frames"><g><title>format_option (skl2onnx/algebra/automation.py) (1 samples, 0.26%)</title><rect x="13" y="1460" width="3" height="15" fill="rgb(224,140,54)"/><text x="16.00" y="1470.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.77%)</title><rect x="10" y="628" width="9" height="15" fill="rgb(244,157,25)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="644" width="9" height="15" fill="rgb(223,127,38)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="660" width="9" height="15" fill="rgb(237,224,15)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="676" width="9" height="15" fill="rgb(208,137,11)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="10" y="692" width="9" height="15" fill="rgb(219,128,31)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="708" width="9" height="15" fill="rgb(236,191,32)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.77%)</title><rect x="10" y="724" width="9" height="15" fill="rgb(209,190,25)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="740" width="9" height="15" fill="rgb(218,91,11)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="756" width="9" height="15" fill="rgb(235,147,1)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="772" width="9" height="15" fill="rgb(225,55,4)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="788" width="9" height="15" fill="rgb(220,168,42)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="804" width="9" height="15" fill="rgb(231,25,48)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="820" width="9" height="15" fill="rgb(253,172,35)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="10" y="836" width="9" height="15" fill="rgb(228,135,32)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="852" width="9" height="15" fill="rgb(252,50,46)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.77%)</title><rect x="10" y="868" width="9" height="15" fill="rgb(219,128,7)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="884" width="9" height="15" fill="rgb(245,1,46)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="900" width="9" height="15" fill="rgb(242,79,35)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="916" width="9" height="15" fill="rgb(226,27,27)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="10" y="932" width="9" height="15" fill="rgb(240,75,17)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="948" width="9" height="15" fill="rgb(218,205,18)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.77%)</title><rect x="10" y="964" width="9" height="15" fill="rgb(245,62,4)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="980" width="9" height="15" fill="rgb(220,221,4)"/><text x="13.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="996" width="9" height="15" fill="rgb(227,9,49)"/><text x="13.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="1012" width="9" height="15" fill="rgb(236,176,41)"/><text x="13.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="1028" width="9" height="15" fill="rgb(218,46,39)"/><text x="13.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="1044" width="9" height="15" fill="rgb(231,140,14)"/><text x="13.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="10" y="1060" width="9" height="15" fill="rgb(209,131,36)"/><text x="13.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="1076" width="9" height="15" fill="rgb(254,29,2)"/><text x="13.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.77%)</title><rect x="10" y="1092" width="9" height="15" fill="rgb(244,176,54)"/><text x="13.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="1108" width="9" height="15" fill="rgb(208,83,30)"/><text x="13.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="1124" width="9" height="15" fill="rgb(206,131,51)"/><text x="13.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="1140" width="9" height="15" fill="rgb(244,69,1)"/><text x="13.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="1156" width="9" height="15" fill="rgb(233,228,26)"/><text x="13.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="1172" width="9" height="15" fill="rgb(208,182,26)"/><text x="13.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="10" y="1188" width="9" height="15" fill="rgb(218,202,54)"/><text x="13.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="1204" width="9" height="15" fill="rgb(250,202,0)"/><text x="13.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.77%)</title><rect x="10" y="1220" width="9" height="15" fill="rgb(238,154,17)"/><text x="13.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="1236" width="9" height="15" fill="rgb(254,36,32)"/><text x="13.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="1252" width="9" height="15" fill="rgb(224,155,29)"/><text x="13.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="1268" width="9" height="15" fill="rgb(217,195,52)"/><text x="13.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="10" y="1284" width="9" height="15" fill="rgb(254,59,53)"/><text x="13.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="10" y="1300" width="9" height="15" fill="rgb(215,30,38)"/><text x="13.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.77%)</title><rect x="10" y="1316" width="9" height="15" fill="rgb(205,159,4)"/><text x="13.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.77%)</title><rect x="10" y="1332" width="9" height="15" fill="rgb(215,208,17)"/><text x="13.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.77%)</title><rect x="10" y="1348" width="9" height="15" fill="rgb(227,170,20)"/><text x="13.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.51%)</title><rect x="13" y="1364" width="6" height="15" fill="rgb(247,1,40)"/><text x="16.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.51%)</title><rect x="13" y="1380" width="6" height="15" fill="rgb(218,114,48)"/><text x="16.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.51%)</title><rect x="13" y="1396" width="6" height="15" fill="rgb(213,211,50)"/><text x="16.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.51%)</title><rect x="13" y="1412" width="6" height="15" fill="rgb(221,124,27)"/><text x="16.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.51%)</title><rect x="13" y="1428" width="6" height="15" fill="rgb(231,201,37)"/><text x="16.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.51%)</title><rect x="13" y="1444" width="6" height="15" fill="rgb(220,191,33)"/><text x="16.00" y="1454.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.26%)</title><rect x="16" y="1460" width="3" height="15" fill="rgb(230,102,26)"/><text x="19.00" y="1470.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.26%)</title><rect x="16" y="1476" width="3" height="15" fill="rgb(232,191,16)"/><text x="19.00" y="1486.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.26%)</title><rect x="16" y="1492" width="3" height="15" fill="rgb(222,211,12)"/><text x="19.00" y="1502.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.26%)</title><rect x="16" y="1508" width="3" height="15" fill="rgb(244,217,23)"/><text x="19.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="19" y="804" width="3" height="15" fill="rgb(245,195,9)"/><text x="22.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_twenty_newsgroups.py) (1 samples, 0.26%)</title><rect x="19" y="820" width="3" height="15" fill="rgb(238,0,21)"/><text x="22.00" y="830.50"></text></g><g><title>compile (re.py) (1 samples, 0.26%)</title><rect x="19" y="836" width="3" height="15" fill="rgb(210,39,18)"/><text x="22.00" y="846.50"></text></g><g><title>_compile (re.py) (1 samples, 0.26%)</title><rect x="19" y="852" width="3" height="15" fill="rgb(226,203,14)"/><text x="22.00" y="862.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.26%)</title><rect x="19" y="868" width="3" height="15" fill="rgb(210,154,0)"/><text x="22.00" y="878.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.26%)</title><rect x="19" y="884" width="3" height="15" fill="rgb(205,143,40)"/><text x="22.00" y="894.50"></text></g><g><title>_compile_info (sre_compile.py) (1 samples, 0.26%)</title><rect x="19" y="900" width="3" height="15" fill="rgb(238,102,37)"/><text x="22.00" y="910.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.26%)</title><rect x="19" y="916" width="3" height="15" fill="rgb(226,194,53)"/><text x="22.00" y="926.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate_problems.py) (2 samples, 0.51%)</title><rect x="19" y="628" width="6" height="15" fill="rgb(219,169,50)"/><text x="22.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="644" width="6" height="15" fill="rgb(216,20,20)"/><text x="22.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="660" width="6" height="15" fill="rgb(234,123,3)"/><text x="22.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="676" width="6" height="15" fill="rgb(210,57,16)"/><text x="22.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="19" y="692" width="6" height="15" fill="rgb(240,38,50)"/><text x="22.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="708" width="6" height="15" fill="rgb(215,182,44)"/><text x="22.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (2 samples, 0.51%)</title><rect x="19" y="724" width="6" height="15" fill="rgb(209,84,48)"/><text x="22.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="740" width="6" height="15" fill="rgb(241,130,44)"/><text x="22.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="756" width="6" height="15" fill="rgb(206,45,27)"/><text x="22.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="19" y="772" width="6" height="15" fill="rgb(225,28,13)"/><text x="22.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="19" y="788" width="6" height="15" fill="rgb(237,124,2)"/><text x="22.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="22" y="804" width="3" height="15" fill="rgb(233,120,24)"/><text x="25.00" y="814.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="22" y="820" width="3" height="15" fill="rgb(231,48,8)"/><text x="25.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="10" y="340" width="18" height="15" fill="rgb(212,54,39)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="10" y="356" width="18" height="15" fill="rgb(231,201,51)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="10" y="372" width="18" height="15" fill="rgb(246,3,42)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="10" y="388" width="18" height="15" fill="rgb(213,147,45)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.53%)</title><rect x="10" y="404" width="18" height="15" fill="rgb(226,163,39)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="10" y="420" width="18" height="15" fill="rgb(240,166,42)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 1.53%)</title><rect x="10" y="436" width="18" height="15" fill="rgb(211,130,42)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="10" y="452" width="18" height="15" fill="rgb(211,58,40)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="10" y="468" width="18" height="15" fill="rgb(248,95,51)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="10" y="484" width="18" height="15" fill="rgb(234,167,1)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.53%)</title><rect x="10" y="500" width="18" height="15" fill="rgb(240,157,40)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="10" y="516" width="18" height="15" fill="rgb(210,109,32)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 1.53%)</title><rect x="10" y="532" width="18" height="15" fill="rgb(231,39,50)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="10" y="548" width="18" height="15" fill="rgb(246,15,43)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="10" y="564" width="18" height="15" fill="rgb(249,170,31)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="10" y="580" width="18" height="15" fill="rgb(209,42,37)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.53%)</title><rect x="10" y="596" width="18" height="15" fill="rgb(205,182,41)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="10" y="612" width="18" height="15" fill="rgb(219,198,25)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.26%)</title><rect x="25" y="628" width="3" height="15" fill="rgb(230,218,39)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="644" width="3" height="15" fill="rgb(231,200,39)"/><text x="28.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="660" width="3" height="15" fill="rgb(206,11,37)"/><text x="28.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="676" width="3" height="15" fill="rgb(244,70,51)"/><text x="28.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="25" y="692" width="3" height="15" fill="rgb(216,218,7)"/><text x="28.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="708" width="3" height="15" fill="rgb(239,27,15)"/><text x="28.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.26%)</title><rect x="25" y="724" width="3" height="15" fill="rgb(241,101,39)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="740" width="3" height="15" fill="rgb(214,102,2)"/><text x="28.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="756" width="3" height="15" fill="rgb(251,228,20)"/><text x="28.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="772" width="3" height="15" fill="rgb(242,149,19)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="25" y="788" width="3" height="15" fill="rgb(210,149,5)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="804" width="3" height="15" fill="rgb(240,222,30)"/><text x="28.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.26%)</title><rect x="25" y="820" width="3" height="15" fill="rgb(224,90,27)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="836" width="3" height="15" fill="rgb(236,177,37)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="852" width="3" height="15" fill="rgb(229,172,29)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="868" width="3" height="15" fill="rgb(224,170,4)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="25" y="884" width="3" height="15" fill="rgb(233,41,48)"/><text x="28.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="25" y="900" width="3" height="15" fill="rgb(233,62,38)"/><text x="28.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="25" y="916" width="3" height="15" fill="rgb(251,181,46)"/><text x="28.00" y="926.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.26%)</title><rect x="28" y="580" width="3" height="15" fill="rgb(225,210,51)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="596" width="3" height="15" fill="rgb(230,80,4)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="612" width="3" height="15" fill="rgb(249,209,30)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="628" width="3" height="15" fill="rgb(231,80,23)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="644" width="3" height="15" fill="rgb(245,189,43)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="660" width="3" height="15" fill="rgb(219,89,24)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.26%)</title><rect x="28" y="676" width="3" height="15" fill="rgb(253,138,26)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="692" width="3" height="15" fill="rgb(250,136,26)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="708" width="3" height="15" fill="rgb(219,183,30)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="724" width="3" height="15" fill="rgb(251,49,50)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="740" width="3" height="15" fill="rgb(223,84,51)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="756" width="3" height="15" fill="rgb(232,106,36)"/><text x="31.00" y="766.50"></text></g><g><title>0x7f3d46c1940e (?) (1 samples, 0.26%)</title><rect x="28" y="772" width="3" height="15" fill="rgb(234,20,3)"/><text x="31.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="788" width="3" height="15" fill="rgb(218,133,32)"/><text x="31.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="804" width="3" height="15" fill="rgb(211,4,3)"/><text x="31.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="820" width="3" height="15" fill="rgb(254,49,28)"/><text x="31.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="836" width="3" height="15" fill="rgb(207,119,15)"/><text x="31.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="852" width="3" height="15" fill="rgb(223,40,16)"/><text x="31.00" y="862.50"></text></g><g><title>0x7f3d469d2cd2 (?) (1 samples, 0.26%)</title><rect x="28" y="868" width="3" height="15" fill="rgb(222,202,29)"/><text x="31.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="884" width="3" height="15" fill="rgb(222,49,53)"/><text x="31.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="900" width="3" height="15" fill="rgb(240,32,29)"/><text x="31.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="916" width="3" height="15" fill="rgb(215,41,45)"/><text x="31.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="932" width="3" height="15" fill="rgb(205,151,46)"/><text x="31.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="948" width="3" height="15" fill="rgb(213,215,33)"/><text x="31.00" y="958.50"></text></g><g><title>0x7f3d460c80e5 (?) (1 samples, 0.26%)</title><rect x="28" y="964" width="3" height="15" fill="rgb(205,216,21)"/><text x="31.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="980" width="3" height="15" fill="rgb(225,80,10)"/><text x="31.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="996" width="3" height="15" fill="rgb(209,16,18)"/><text x="31.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1012" width="3" height="15" fill="rgb(247,168,27)"/><text x="31.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="1028" width="3" height="15" fill="rgb(207,120,32)"/><text x="31.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1044" width="3" height="15" fill="rgb(250,93,14)"/><text x="31.00" y="1054.50"></text></g><g><title>0x7f3d45e4ce68 (?) (1 samples, 0.26%)</title><rect x="28" y="1060" width="3" height="15" fill="rgb(229,13,39)"/><text x="31.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1076" width="3" height="15" fill="rgb(243,118,3)"/><text x="31.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1092" width="3" height="15" fill="rgb(237,29,27)"/><text x="31.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1108" width="3" height="15" fill="rgb(236,67,53)"/><text x="31.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="1124" width="3" height="15" fill="rgb(217,103,26)"/><text x="31.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1140" width="3" height="15" fill="rgb(245,226,6)"/><text x="31.00" y="1150.50"></text></g><g><title>0x7f3d45bdd2fb (?) (1 samples, 0.26%)</title><rect x="28" y="1156" width="3" height="15" fill="rgb(209,72,52)"/><text x="31.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1172" width="3" height="15" fill="rgb(244,17,43)"/><text x="31.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1188" width="3" height="15" fill="rgb(224,211,47)"/><text x="31.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1204" width="3" height="15" fill="rgb(221,7,45)"/><text x="31.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="1220" width="3" height="15" fill="rgb(245,184,12)"/><text x="31.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1236" width="3" height="15" fill="rgb(206,13,51)"/><text x="31.00" y="1246.50"></text></g><g><title>0x7f3d459c1153 (?) (1 samples, 0.26%)</title><rect x="28" y="1252" width="3" height="15" fill="rgb(229,218,22)"/><text x="31.00" y="1262.50"></text></g><g><title>0x7f3d459bfc13 (?) (1 samples, 0.26%)</title><rect x="28" y="1268" width="3" height="15" fill="rgb(228,21,9)"/><text x="31.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1284" width="3" height="15" fill="rgb(237,150,45)"/><text x="31.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1300" width="3" height="15" fill="rgb(209,216,52)"/><text x="31.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1316" width="3" height="15" fill="rgb(224,130,0)"/><text x="31.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="1332" width="3" height="15" fill="rgb(236,158,19)"/><text x="31.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1348" width="3" height="15" fill="rgb(232,97,21)"/><text x="31.00" y="1358.50"></text></g><g><title>0x7f3d4575c181 (?) (1 samples, 0.26%)</title><rect x="28" y="1364" width="3" height="15" fill="rgb(206,5,16)"/><text x="31.00" y="1374.50"></text></g><g><title>0x7f3d4575f1c9 (?) (1 samples, 0.26%)</title><rect x="28" y="1380" width="3" height="15" fill="rgb(213,70,50)"/><text x="31.00" y="1390.50"></text></g><g><title>0x7f3d4578b167 (?) (1 samples, 0.26%)</title><rect x="28" y="1396" width="3" height="15" fill="rgb(214,20,53)"/><text x="31.00" y="1406.50"></text></g><g><title>0x7f3d45786b64 (?) (1 samples, 0.26%)</title><rect x="28" y="1412" width="3" height="15" fill="rgb(213,133,1)"/><text x="31.00" y="1422.50"></text></g><g><title>0x7f3d4576a07b (?) (1 samples, 0.26%)</title><rect x="28" y="1428" width="3" height="15" fill="rgb(233,94,43)"/><text x="31.00" y="1438.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.26%)</title><rect x="28" y="1444" width="3" height="15" fill="rgb(223,67,16)"/><text x="31.00" y="1454.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.26%)</title><rect x="28" y="1460" width="3" height="15" fill="rgb(207,217,27)"/><text x="31.00" y="1470.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.26%)</title><rect x="28" y="1476" width="3" height="15" fill="rgb(216,215,47)"/><text x="31.00" y="1486.50"></text></g><g><title>PyThread_acquire_lock (python3.7) (1 samples, 0.26%)</title><rect x="28" y="1492" width="3" height="15" fill="rgb(227,20,1)"/><text x="31.00" y="1502.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="28" y="1508" width="3" height="15" fill="rgb(223,97,37)"/><text x="31.00" y="1518.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.26%)</title><rect x="31" y="580" width="3" height="15" fill="rgb(226,221,13)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="596" width="3" height="15" fill="rgb(241,76,24)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="612" width="3" height="15" fill="rgb(209,110,29)"/><text x="34.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="628" width="3" height="15" fill="rgb(224,39,39)"/><text x="34.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="644" width="3" height="15" fill="rgb(243,202,11)"/><text x="34.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="660" width="3" height="15" fill="rgb(237,110,24)"/><text x="34.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="676" width="3" height="15" fill="rgb(254,56,20)"/><text x="34.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="31" y="692" width="3" height="15" fill="rgb(220,9,20)"/><text x="34.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="708" width="3" height="15" fill="rgb(221,86,42)"/><text x="34.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.26%)</title><rect x="31" y="724" width="3" height="15" fill="rgb(217,209,21)"/><text x="34.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="740" width="3" height="15" fill="rgb(218,22,2)"/><text x="34.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="756" width="3" height="15" fill="rgb(208,104,17)"/><text x="34.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="772" width="3" height="15" fill="rgb(210,192,0)"/><text x="34.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="31" y="788" width="3" height="15" fill="rgb(212,225,36)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="804" width="3" height="15" fill="rgb(224,202,36)"/><text x="34.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py) (1 samples, 0.26%)</title><rect x="31" y="820" width="3" height="15" fill="rgb(222,93,50)"/><text x="34.00" y="830.50"></text></g><g><title>IntervalArray (pandas/core/arrays/interval.py) (1 samples, 0.26%)</title><rect x="31" y="836" width="3" height="15" fill="rgb(244,104,31)"/><text x="34.00" y="846.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.26%)</title><rect x="31" y="852" width="3" height="15" fill="rgb(227,20,3)"/><text x="34.00" y="862.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.26%)</title><rect x="31" y="868" width="3" height="15" fill="rgb(250,10,40)"/><text x="34.00" y="878.50"></text></g><g><title>sub (re.py) (1 samples, 0.26%)</title><rect x="31" y="884" width="3" height="15" fill="rgb(241,197,11)"/><text x="34.00" y="894.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.26%)</title><rect x="31" y="900" width="3" height="15" fill="rgb(215,2,53)"/><text x="34.00" y="910.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="31" y="916" width="3" height="15" fill="rgb(221,149,35)"/><text x="34.00" y="926.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.77%)</title><rect x="28" y="484" width="9" height="15" fill="rgb(235,215,39)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="28" y="500" width="9" height="15" fill="rgb(244,83,48)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="28" y="516" width="9" height="15" fill="rgb(215,151,27)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="28" y="532" width="9" height="15" fill="rgb(206,114,48)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="28" y="548" width="9" height="15" fill="rgb(224,152,12)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="28" y="564" width="9" height="15" fill="rgb(229,147,4)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (pytz/__init__.py) (1 samples, 0.26%)</title><rect x="34" y="580" width="3" height="15" fill="rgb(230,199,18)"/><text x="37.00" y="590.50"></text></g><g><title>__new__ (pytz/lazy.py) (1 samples, 0.26%)</title><rect x="34" y="596" width="3" height="15" fill="rgb(227,3,1)"/><text x="37.00" y="606.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (10 samples, 2.55%)</title><rect x="10" y="292" width="30" height="15" fill="rgb(239,20,12)"/><text x="13.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.55%)</title><rect x="10" y="308" width="30" height="15" fill="rgb(229,56,34)"/><text x="13.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.55%)</title><rect x="10" y="324" width="30" height="15" fill="rgb(216,180,45)"/><text x="13.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="28" y="340" width="12" height="15" fill="rgb(232,41,35)"/><text x="31.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.02%)</title><rect x="28" y="356" width="12" height="15" fill="rgb(231,12,21)"/><text x="31.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="28" y="372" width="12" height="15" fill="rgb(230,144,15)"/><text x="31.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.02%)</title><rect x="28" y="388" width="12" height="15" fill="rgb(216,166,31)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="28" y="404" width="12" height="15" fill="rgb(216,133,7)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="28" y="420" width="12" height="15" fill="rgb(237,130,34)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="28" y="436" width="12" height="15" fill="rgb(233,131,34)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.02%)</title><rect x="28" y="452" width="12" height="15" fill="rgb(243,185,50)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="28" y="468" width="12" height="15" fill="rgb(246,39,45)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py) (1 samples, 0.26%)</title><rect x="37" y="484" width="3" height="15" fill="rgb(222,229,34)"/><text x="40.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="500" width="3" height="15" fill="rgb(254,206,46)"/><text x="40.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="516" width="3" height="15" fill="rgb(219,75,8)"/><text x="40.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="532" width="3" height="15" fill="rgb(205,28,20)"/><text x="40.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="548" width="3" height="15" fill="rgb(246,134,52)"/><text x="40.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="564" width="3" height="15" fill="rgb(205,225,32)"/><text x="40.00" y="574.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/_matrix_io.py) (1 samples, 0.26%)</title><rect x="37" y="580" width="3" height="15" fill="rgb(207,33,50)"/><text x="40.00" y="590.50"></text></g><g><title>__new__ (protobuf/descriptor.py) (1 samples, 0.26%)</title><rect x="40" y="596" width="3" height="15" fill="rgb(245,25,34)"/><text x="43.00" y="606.50"></text></g><g><title>0x7f3d4873ba3a (?) (1 samples, 0.26%)</title><rect x="40" y="612" width="3" height="15" fill="rgb(226,195,32)"/><text x="43.00" y="622.50"></text></g><g><title>0x7f3d48742866 (?) (1 samples, 0.26%)</title><rect x="40" y="628" width="3" height="15" fill="rgb(217,3,14)"/><text x="43.00" y="638.50"></text></g><g><title>0x7f3d48743299 (?) (1 samples, 0.26%)</title><rect x="40" y="644" width="3" height="15" fill="rgb(253,164,51)"/><text x="43.00" y="654.50"></text></g><g><title>0x7f3d487afc92 (?) (1 samples, 0.26%)</title><rect x="40" y="660" width="3" height="15" fill="rgb(250,169,38)"/><text x="43.00" y="670.50"></text></g><g><title>0x7f3d487c3ee7 (?) (1 samples, 0.26%)</title><rect x="40" y="676" width="3" height="15" fill="rgb(216,42,19)"/><text x="43.00" y="686.50"></text></g><g><title>0x7f3d487ae4ac (?) (1 samples, 0.26%)</title><rect x="40" y="692" width="3" height="15" fill="rgb(231,202,44)"/><text x="43.00" y="702.50"></text></g><g><title>0x7f3d487c3e47 (?) (1 samples, 0.26%)</title><rect x="40" y="708" width="3" height="15" fill="rgb(245,92,29)"/><text x="43.00" y="718.50"></text></g><g><title>0x7f3d487addfb (?) (1 samples, 0.26%)</title><rect x="40" y="724" width="3" height="15" fill="rgb(236,87,53)"/><text x="43.00" y="734.50"></text></g><g><title>0x7f3d4878b47a (?) (1 samples, 0.26%)</title><rect x="40" y="740" width="3" height="15" fill="rgb(227,50,11)"/><text x="43.00" y="750.50"></text></g><g><title>0x7f3d49eaf6f5 (?) (1 samples, 0.26%)</title><rect x="40" y="756" width="3" height="15" fill="rgb(241,7,48)"/><text x="43.00" y="766.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="40" y="772" width="3" height="15" fill="rgb(243,123,22)"/><text x="43.00" y="782.50"></text></g><g><title>0x7f3d5a3d5330 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="40" y="788" width="3" height="15" fill="rgb(236,173,10)"/><text x="43.00" y="798.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.51%)</title><rect x="43" y="868" width="6" height="15" fill="rgb(217,58,13)"/><text x="46.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.51%)</title><rect x="43" y="884" width="6" height="15" fill="rgb(243,8,14)"/><text x="46.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.51%)</title><rect x="43" y="900" width="6" height="15" fill="rgb(238,166,50)"/><text x="46.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.51%)</title><rect x="43" y="916" width="6" height="15" fill="rgb(206,77,15)"/><text x="46.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="43" y="932" width="6" height="15" fill="rgb(231,19,32)"/><text x="46.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="43" y="948" width="6" height="15" fill="rgb(230,66,9)"/><text x="46.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="43" y="964" width="6" height="15" fill="rgb(213,215,52)"/><text x="46.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="980" width="3" height="15" fill="rgb(240,198,31)"/><text x="49.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="996" width="3" height="15" fill="rgb(253,11,1)"/><text x="49.00" y="1006.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="49" y="868" width="3" height="15" fill="rgb(229,86,25)"/><text x="52.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="49" y="884" width="3" height="15" fill="rgb(240,143,52)"/><text x="52.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="49" y="900" width="3" height="15" fill="rgb(237,52,24)"/><text x="52.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="49" y="916" width="3" height="15" fill="rgb(252,125,54)"/><text x="52.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="49" y="932" width="3" height="15" fill="rgb(223,198,43)"/><text x="52.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.26%)</title><rect x="49" y="948" width="3" height="15" fill="rgb(205,39,38)"/><text x="52.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="49" y="964" width="3" height="15" fill="rgb(238,73,37)"/><text x="52.00" y="974.50"></text></g><g><title>0x7f3d5a413237 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="49" y="980" width="3" height="15" fill="rgb(205,214,48)"/><text x="52.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.02%)</title><rect x="43" y="836" width="12" height="15" fill="rgb(214,184,5)"/><text x="46.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.02%)</title><rect x="43" y="852" width="12" height="15" fill="rgb(224,119,19)"/><text x="46.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="52" y="868" width="3" height="15" fill="rgb(244,101,46)"/><text x="55.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="52" y="884" width="3" height="15" fill="rgb(226,225,41)"/><text x="55.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="52" y="900" width="3" height="15" fill="rgb(221,201,25)"/><text x="55.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="52" y="916" width="3" height="15" fill="rgb(206,223,48)"/><text x="55.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="52" y="932" width="3" height="15" fill="rgb(212,128,10)"/><text x="55.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.26%)</title><rect x="52" y="948" width="3" height="15" fill="rgb(252,11,13)"/><text x="55.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.26%)</title><rect x="52" y="964" width="3" height="15" fill="rgb(229,161,32)"/><text x="55.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.26%)</title><rect x="52" y="980" width="3" height="15" fill="rgb(246,96,33)"/><text x="55.00" y="990.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.26%)</title><rect x="52" y="996" width="3" height="15" fill="rgb(245,3,7)"/><text x="55.00" y="1006.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.26%)</title><rect x="55" y="1188" width="3" height="15" fill="rgb(230,198,46)"/><text x="58.00" y="1198.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.26%)</title><rect x="55" y="1204" width="3" height="15" fill="rgb(253,47,27)"/><text x="58.00" y="1214.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.26%)</title><rect x="55" y="1220" width="3" height="15" fill="rgb(239,64,53)"/><text x="58.00" y="1230.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.26%)</title><rect x="55" y="1236" width="3" height="15" fill="rgb(226,163,41)"/><text x="58.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="43" y="596" width="18" height="15" fill="rgb(211,47,42)"/><text x="46.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="43" y="612" width="18" height="15" fill="rgb(248,17,38)"/><text x="46.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="43" y="628" width="18" height="15" fill="rgb(229,112,35)"/><text x="46.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="43" y="644" width="18" height="15" fill="rgb(210,101,17)"/><text x="46.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="43" y="660" width="18" height="15" fill="rgb(229,207,23)"/><text x="46.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="43" y="676" width="18" height="15" fill="rgb(214,1,42)"/><text x="46.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.53%)</title><rect x="43" y="692" width="18" height="15" fill="rgb(254,152,37)"/><text x="46.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="43" y="708" width="18" height="15" fill="rgb(209,14,7)"/><text x="46.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 1.53%)</title><rect x="43" y="724" width="18" height="15" fill="rgb(211,78,27)"/><text x="46.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="43" y="740" width="18" height="15" fill="rgb(248,168,18)"/><text x="46.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="43" y="756" width="18" height="15" fill="rgb(226,185,29)"/><text x="46.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="43" y="772" width="18" height="15" fill="rgb(227,74,23)"/><text x="46.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.53%)</title><rect x="43" y="788" width="18" height="15" fill="rgb(237,155,12)"/><text x="46.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.53%)</title><rect x="43" y="804" width="18" height="15" fill="rgb(234,15,4)"/><text x="46.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 1.53%)</title><rect x="43" y="820" width="18" height="15" fill="rgb(218,85,40)"/><text x="46.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="55" y="836" width="6" height="15" fill="rgb(206,34,38)"/><text x="58.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="55" y="852" width="6" height="15" fill="rgb(251,218,45)"/><text x="58.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="55" y="868" width="6" height="15" fill="rgb(223,116,38)"/><text x="58.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="55" y="884" width="6" height="15" fill="rgb(220,175,3)"/><text x="58.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="55" y="900" width="6" height="15" fill="rgb(220,22,10)"/><text x="58.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (2 samples, 0.51%)</title><rect x="55" y="916" width="6" height="15" fill="rgb(212,10,12)"/><text x="58.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="55" y="932" width="6" height="15" fill="rgb(207,6,17)"/><text x="58.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="55" y="948" width="6" height="15" fill="rgb(220,203,10)"/><text x="58.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="55" y="964" width="6" height="15" fill="rgb(218,110,43)"/><text x="58.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="55" y="980" width="6" height="15" fill="rgb(213,130,3)"/><text x="58.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (2 samples, 0.51%)</title><rect x="55" y="996" width="6" height="15" fill="rgb(219,90,8)"/><text x="58.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="55" y="1012" width="6" height="15" fill="rgb(212,27,10)"/><text x="58.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="55" y="1028" width="6" height="15" fill="rgb(213,24,24)"/><text x="58.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="55" y="1044" width="6" height="15" fill="rgb(233,173,51)"/><text x="58.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="55" y="1060" width="6" height="15" fill="rgb(213,68,11)"/><text x="58.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="55" y="1076" width="6" height="15" fill="rgb(223,1,41)"/><text x="58.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (2 samples, 0.51%)</title><rect x="55" y="1092" width="6" height="15" fill="rgb(217,98,26)"/><text x="58.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py) (2 samples, 0.51%)</title><rect x="55" y="1108" width="6" height="15" fill="rgb(251,30,0)"/><text x="58.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (2 samples, 0.51%)</title><rect x="55" y="1124" width="6" height="15" fill="rgb(238,66,31)"/><text x="58.00" y="1134.50"></text></g><g><title>compile (re.py) (2 samples, 0.51%)</title><rect x="55" y="1140" width="6" height="15" fill="rgb(251,19,10)"/><text x="58.00" y="1150.50"></text></g><g><title>_compile (re.py) (2 samples, 0.51%)</title><rect x="55" y="1156" width="6" height="15" fill="rgb(236,11,35)"/><text x="58.00" y="1166.50"></text></g><g><title>compile (sre_compile.py) (2 samples, 0.51%)</title><rect x="55" y="1172" width="6" height="15" fill="rgb(224,181,14)"/><text x="58.00" y="1182.50"></text></g><g><title>_sre_compile (python3.7) (1 samples, 0.26%)</title><rect x="58" y="1188" width="3" height="15" fill="rgb(206,38,52)"/><text x="61.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.59%)</title><rect x="10" y="196" width="54" height="15" fill="rgb(245,218,34)"/><text x="13.00" y="206.50">_call..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.59%)</title><rect x="10" y="212" width="54" height="15" fill="rgb(240,208,11)"/><text x="13.00" y="222.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.59%)</title><rect x="10" y="228" width="54" height="15" fill="rgb(213,76,4)"/><text x="13.00" y="238.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.59%)</title><rect x="10" y="244" width="54" height="15" fill="rgb(209,153,54)"/><text x="13.00" y="254.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 4.59%)</title><rect x="10" y="260" width="54" height="15" fill="rgb(214,15,29)"/><text x="13.00" y="270.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.59%)</title><rect x="10" y="276" width="54" height="15" fill="rgb(208,102,46)"/><text x="13.00" y="286.50">_call..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (8 samples, 2.04%)</title><rect x="40" y="292" width="24" height="15" fill="rgb(231,103,40)"/><text x="43.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.04%)</title><rect x="40" y="308" width="24" height="15" fill="rgb(225,227,24)"/><text x="43.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.04%)</title><rect x="40" y="324" width="24" height="15" fill="rgb(249,88,49)"/><text x="43.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.04%)</title><rect x="40" y="340" width="24" height="15" fill="rgb(226,90,29)"/><text x="43.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.04%)</title><rect x="40" y="356" width="24" height="15" fill="rgb(232,35,20)"/><text x="43.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.04%)</title><rect x="40" y="372" width="24" height="15" fill="rgb(219,96,16)"/><text x="43.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (8 samples, 2.04%)</title><rect x="40" y="388" width="24" height="15" fill="rgb(245,124,23)"/><text x="43.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.04%)</title><rect x="40" y="404" width="24" height="15" fill="rgb(219,211,12)"/><text x="43.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.04%)</title><rect x="40" y="420" width="24" height="15" fill="rgb(237,179,9)"/><text x="43.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.04%)</title><rect x="40" y="436" width="24" height="15" fill="rgb(249,19,34)"/><text x="43.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.04%)</title><rect x="40" y="452" width="24" height="15" fill="rgb(219,54,39)"/><text x="43.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.04%)</title><rect x="40" y="468" width="24" height="15" fill="rgb(241,204,4)"/><text x="43.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (8 samples, 2.04%)</title><rect x="40" y="484" width="24" height="15" fill="rgb(243,82,48)"/><text x="43.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.04%)</title><rect x="40" y="500" width="24" height="15" fill="rgb(216,7,29)"/><text x="43.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.04%)</title><rect x="40" y="516" width="24" height="15" fill="rgb(233,163,19)"/><text x="43.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.04%)</title><rect x="40" y="532" width="24" height="15" fill="rgb(218,103,43)"/><text x="43.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.04%)</title><rect x="40" y="548" width="24" height="15" fill="rgb(225,114,11)"/><text x="43.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.04%)</title><rect x="40" y="564" width="24" height="15" fill="rgb(228,205,3)"/><text x="43.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (8 samples, 2.04%)</title><rect x="40" y="580" width="24" height="15" fill="rgb(205,64,23)"/><text x="43.00" y="590.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="61" y="596" width="3" height="15" fill="rgb(237,211,50)"/><text x="64.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="61" y="612" width="3" height="15" fill="rgb(211,72,14)"/><text x="64.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="61" y="628" width="3" height="15" fill="rgb(211,111,32)"/><text x="64.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="61" y="644" width="3" height="15" fill="rgb(232,125,27)"/><text x="64.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="61" y="660" width="3" height="15" fill="rgb(228,100,15)"/><text x="64.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="61" y="676" width="3" height="15" fill="rgb(237,106,46)"/><text x="64.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="61" y="692" width="3" height="15" fill="rgb(211,204,14)"/><text x="64.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor_pb2.py) (1 samples, 0.26%)</title><rect x="61" y="708" width="3" height="15" fill="rgb(219,227,2)"/><text x="64.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (1 samples, 0.26%)</title><rect x="64" y="244" width="3" height="15" fill="rgb(231,9,19)"/><text x="67.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="260" width="3" height="15" fill="rgb(207,20,51)"/><text x="67.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="276" width="3" height="15" fill="rgb(234,40,43)"/><text x="67.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="292" width="3" height="15" fill="rgb(223,81,44)"/><text x="67.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="64" y="308" width="3" height="15" fill="rgb(223,162,45)"/><text x="67.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="324" width="3" height="15" fill="rgb(212,33,10)"/><text x="67.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.26%)</title><rect x="64" y="340" width="3" height="15" fill="rgb(209,159,6)"/><text x="67.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="356" width="3" height="15" fill="rgb(235,164,40)"/><text x="67.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="372" width="3" height="15" fill="rgb(224,82,36)"/><text x="67.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="388" width="3" height="15" fill="rgb(219,35,43)"/><text x="67.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="404" width="3" height="15" fill="rgb(252,62,25)"/><text x="67.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="420" width="3" height="15" fill="rgb(224,92,2)"/><text x="67.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="436" width="3" height="15" fill="rgb(244,96,0)"/><text x="67.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="64" y="452" width="3" height="15" fill="rgb(205,177,38)"/><text x="67.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="468" width="3" height="15" fill="rgb(232,90,48)"/><text x="67.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.26%)</title><rect x="64" y="484" width="3" height="15" fill="rgb(244,25,49)"/><text x="67.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="500" width="3" height="15" fill="rgb(213,111,29)"/><text x="67.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="516" width="3" height="15" fill="rgb(247,144,5)"/><text x="67.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="532" width="3" height="15" fill="rgb(230,5,23)"/><text x="67.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="64" y="548" width="3" height="15" fill="rgb(243,7,20)"/><text x="67.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="564" width="3" height="15" fill="rgb(231,140,16)"/><text x="67.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.26%)</title><rect x="64" y="580" width="3" height="15" fill="rgb(226,210,10)"/><text x="67.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="596" width="3" height="15" fill="rgb(250,190,54)"/><text x="67.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="612" width="3" height="15" fill="rgb(232,107,12)"/><text x="67.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="628" width="3" height="15" fill="rgb(241,113,36)"/><text x="67.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="644" width="3" height="15" fill="rgb(237,98,14)"/><text x="67.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="660" width="3" height="15" fill="rgb(206,196,29)"/><text x="67.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="676" width="3" height="15" fill="rgb(227,204,49)"/><text x="67.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="64" y="692" width="3" height="15" fill="rgb(224,209,28)"/><text x="67.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="708" width="3" height="15" fill="rgb(236,225,21)"/><text x="67.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.26%)</title><rect x="64" y="724" width="3" height="15" fill="rgb(243,210,52)"/><text x="67.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="740" width="3" height="15" fill="rgb(207,161,32)"/><text x="67.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="756" width="3" height="15" fill="rgb(249,77,33)"/><text x="67.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="64" y="772" width="3" height="15" fill="rgb(251,12,0)"/><text x="67.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="64" y="788" width="3" height="15" fill="rgb(217,192,38)"/><text x="67.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="64" y="804" width="3" height="15" fill="rgb(232,122,4)"/><text x="67.00" y="814.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="64" y="820" width="3" height="15" fill="rgb(214,55,13)"/><text x="67.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="260" width="3" height="15" fill="rgb(234,167,47)"/><text x="70.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="276" width="3" height="15" fill="rgb(254,77,19)"/><text x="70.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="292" width="3" height="15" fill="rgb(225,23,43)"/><text x="70.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="67" y="308" width="3" height="15" fill="rgb(206,63,24)"/><text x="70.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="324" width="3" height="15" fill="rgb(210,125,4)"/><text x="70.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.26%)</title><rect x="67" y="340" width="3" height="15" fill="rgb(206,202,13)"/><text x="70.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="356" width="3" height="15" fill="rgb(210,22,47)"/><text x="70.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="372" width="3" height="15" fill="rgb(251,206,23)"/><text x="70.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="388" width="3" height="15" fill="rgb(227,34,46)"/><text x="70.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="67" y="404" width="3" height="15" fill="rgb(210,162,51)"/><text x="70.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="420" width="3" height="15" fill="rgb(226,202,21)"/><text x="70.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.26%)</title><rect x="67" y="436" width="3" height="15" fill="rgb(237,94,22)"/><text x="70.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="452" width="3" height="15" fill="rgb(229,175,50)"/><text x="70.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="468" width="3" height="15" fill="rgb(216,193,46)"/><text x="70.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="484" width="3" height="15" fill="rgb(234,229,9)"/><text x="70.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="67" y="500" width="3" height="15" fill="rgb(210,172,37)"/><text x="70.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="516" width="3" height="15" fill="rgb(225,76,36)"/><text x="70.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/main.py) (1 samples, 0.26%)</title><rect x="67" y="532" width="3" height="15" fill="rgb(252,95,20)"/><text x="70.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="548" width="3" height="15" fill="rgb(213,147,0)"/><text x="70.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="564" width="3" height="15" fill="rgb(219,118,53)"/><text x="70.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="580" width="3" height="15" fill="rgb(225,126,38)"/><text x="70.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="67" y="596" width="3" height="15" fill="rgb(219,202,21)"/><text x="70.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="612" width="3" height="15" fill="rgb(227,60,54)"/><text x="70.00" y="622.50"></text></g><g><title>&lt;module&gt; (argparse.py) (1 samples, 0.26%)</title><rect x="67" y="628" width="3" height="15" fill="rgb(239,91,0)"/><text x="70.00" y="638.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="70" y="420" width="3" height="15" fill="rgb(236,161,25)"/><text x="73.00" y="430.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="70" y="436" width="3" height="15" fill="rgb(211,213,4)"/><text x="73.00" y="446.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="70" y="452" width="3" height="15" fill="rgb(222,47,5)"/><text x="73.00" y="462.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="70" y="468" width="3" height="15" fill="rgb(243,172,52)"/><text x="73.00" y="478.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="70" y="484" width="3" height="15" fill="rgb(207,152,51)"/><text x="73.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 5.61%)</title><rect x="10" y="68" width="66" height="15" fill="rgb(249,62,7)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 5.61%)</title><rect x="10" y="84" width="66" height="15" fill="rgb(245,169,21)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 5.61%)</title><rect x="10" y="100" width="66" height="15" fill="rgb(224,10,7)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (22 samples, 5.61%)</title><rect x="10" y="116" width="66" height="15" fill="rgb(218,100,48)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (22 samples, 5.61%)</title><rect x="10" y="132" width="66" height="15" fill="rgb(217,215,25)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py) (22 samples, 5.61%)</title><rect x="10" y="148" width="66" height="15" fill="rgb(249,229,1)"/><text x="13.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 5.61%)</title><rect x="10" y="164" width="66" height="15" fill="rgb(222,116,15)"/><text x="13.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 5.61%)</title><rect x="10" y="180" width="66" height="15" fill="rgb(207,213,16)"/><text x="13.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="64" y="196" width="12" height="15" fill="rgb(218,209,48)"/><text x="67.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.02%)</title><rect x="64" y="212" width="12" height="15" fill="rgb(218,65,41)"/><text x="67.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.02%)</title><rect x="64" y="228" width="12" height="15" fill="rgb(232,104,20)"/><text x="67.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.77%)</title><rect x="67" y="244" width="9" height="15" fill="rgb(250,202,12)"/><text x="70.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="70" y="260" width="6" height="15" fill="rgb(216,75,5)"/><text x="73.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="70" y="276" width="6" height="15" fill="rgb(241,96,37)"/><text x="73.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="70" y="292" width="6" height="15" fill="rgb(251,191,13)"/><text x="73.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="70" y="308" width="6" height="15" fill="rgb(217,182,31)"/><text x="73.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="70" y="324" width="6" height="15" fill="rgb(224,223,19)"/><text x="73.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="70" y="340" width="6" height="15" fill="rgb(241,184,40)"/><text x="73.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="70" y="356" width="6" height="15" fill="rgb(234,32,36)"/><text x="73.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (2 samples, 0.51%)</title><rect x="70" y="372" width="6" height="15" fill="rgb(252,160,33)"/><text x="73.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="70" y="388" width="6" height="15" fill="rgb(225,102,17)"/><text x="73.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="70" y="404" width="6" height="15" fill="rgb(212,172,41)"/><text x="73.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="73" y="420" width="3" height="15" fill="rgb(212,224,11)"/><text x="76.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="73" y="436" width="3" height="15" fill="rgb(236,88,17)"/><text x="76.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="73" y="452" width="3" height="15" fill="rgb(221,28,24)"/><text x="76.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.26%)</title><rect x="73" y="468" width="3" height="15" fill="rgb(221,136,49)"/><text x="76.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="73" y="484" width="3" height="15" fill="rgb(226,93,16)"/><text x="76.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="73" y="500" width="3" height="15" fill="rgb(248,33,8)"/><text x="76.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="73" y="516" width="3" height="15" fill="rgb(213,41,28)"/><text x="76.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="73" y="532" width="3" height="15" fill="rgb(245,73,49)"/><text x="76.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="73" y="548" width="3" height="15" fill="rgb(212,41,51)"/><text x="76.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py) (1 samples, 0.26%)</title><rect x="73" y="564" width="3" height="15" fill="rgb(215,170,39)"/><text x="76.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="73" y="580" width="3" height="15" fill="rgb(248,110,6)"/><text x="76.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="73" y="596" width="3" height="15" fill="rgb(212,110,17)"/><text x="76.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="73" y="612" width="3" height="15" fill="rgb(236,212,29)"/><text x="76.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="73" y="628" width="3" height="15" fill="rgb(248,143,51)"/><text x="76.00" y="638.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="73" y="644" width="3" height="15" fill="rgb(205,205,8)"/><text x="76.00" y="654.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="73" y="660" width="3" height="15" fill="rgb(223,91,39)"/><text x="76.00" y="670.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="73" y="676" width="3" height="15" fill="rgb(222,221,8)"/><text x="76.00" y="686.50"></text></g><g><title>0x7f3d1ac7cff9 (?) (1 samples, 0.26%)</title><rect x="106" y="212" width="3" height="15" fill="rgb(209,131,4)"/><text x="109.00" y="222.50"></text></g><g><title>0x7f3d1ac77ef6 (?) (1 samples, 0.26%)</title><rect x="106" y="228" width="3" height="15" fill="rgb(234,190,8)"/><text x="109.00" y="238.50"></text></g><g><title>0x7f3d1ac6c91a (?) (1 samples, 0.26%)</title><rect x="106" y="244" width="3" height="15" fill="rgb(250,180,16)"/><text x="109.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="106" y="260" width="3" height="15" fill="rgb(232,204,30)"/><text x="109.00" y="270.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.51%)</title><rect x="112" y="244" width="6" height="15" fill="rgb(228,202,52)"/><text x="115.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="115" y="260" width="3" height="15" fill="rgb(227,11,36)"/><text x="118.00" y="270.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="118" y="244" width="3" height="15" fill="rgb(222,209,11)"/><text x="121.00" y="254.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="118" y="260" width="3" height="15" fill="rgb(246,144,16)"/><text x="121.00" y="270.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="121" y="244" width="3" height="15" fill="rgb(205,149,45)"/><text x="124.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="124" y="260" width="3" height="15" fill="rgb(209,190,52)"/><text x="127.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="124" y="276" width="3" height="15" fill="rgb(206,157,39)"/><text x="127.00" y="286.50"></text></g><g><title>0x7f3d5a3e9e98 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="127" y="292" width="3" height="15" fill="rgb(221,61,6)"/><text x="130.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (8 samples, 2.04%)</title><rect x="109" y="212" width="24" height="15" fill="rgb(228,226,21)"/><text x="112.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.79%)</title><rect x="112" y="228" width="21" height="15" fill="rgb(211,176,17)"/><text x="115.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="124" y="244" width="9" height="15" fill="rgb(245,9,6)"/><text x="127.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="127" y="260" width="6" height="15" fill="rgb(244,212,44)"/><text x="130.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="127" y="276" width="6" height="15" fill="rgb(230,117,16)"/><text x="130.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="130" y="292" width="3" height="15" fill="rgb(226,35,18)"/><text x="133.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.26%)</title><rect x="133" y="212" width="3" height="15" fill="rgb(242,133,46)"/><text x="136.00" y="222.50"></text></g><g><title>0x7fff59b5bb28 ([vdso]) (1 samples, 0.26%)</title><rect x="133" y="228" width="3" height="15" fill="rgb(242,83,41)"/><text x="136.00" y="238.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="145" y="292" width="6" height="15" fill="rgb(220,32,28)"/><text x="148.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="148" y="308" width="3" height="15" fill="rgb(220,21,38)"/><text x="151.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="157" y="356" width="6" height="15" fill="rgb(247,142,40)"/><text x="160.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="157" y="372" width="6" height="15" fill="rgb(209,174,13)"/><text x="160.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="157" y="388" width="6" height="15" fill="rgb(244,16,5)"/><text x="160.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::AllocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="160" y="404" width="3" height="15" fill="rgb(247,203,11)"/><text x="163.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="163" y="356" width="3" height="15" fill="rgb(224,63,9)"/><text x="166.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="163" y="372" width="3" height="15" fill="rgb(215,74,16)"/><text x="166.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.02%)</title><rect x="157" y="340" width="12" height="15" fill="rgb(227,72,30)"/><text x="160.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="166" y="356" width="3" height="15" fill="rgb(211,219,12)"/><text x="169.00" y="366.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="166" y="372" width="3" height="15" fill="rgb(242,32,26)"/><text x="169.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="166" y="388" width="3" height="15" fill="rgb(238,98,29)"/><text x="169.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="169" y="340" width="3" height="15" fill="rgb(251,128,33)"/><text x="172.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="172" y="356" width="3" height="15" fill="rgb(221,67,50)"/><text x="175.00" y="366.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.28%)</title><rect x="172" y="340" width="15" height="15" fill="rgb(236,42,33)"/><text x="175.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.02%)</title><rect x="175" y="356" width="12" height="15" fill="rgb(233,54,42)"/><text x="178.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.02%)</title><rect x="175" y="372" width="12" height="15" fill="rgb(225,199,2)"/><text x="178.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.02%)</title><rect x="175" y="388" width="12" height="15" fill="rgb(207,59,25)"/><text x="178.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="178" y="404" width="9" height="15" fill="rgb(225,87,37)"/><text x="181.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="181" y="420" width="6" height="15" fill="rgb(238,155,39)"/><text x="184.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="181" y="436" width="6" height="15" fill="rgb(223,106,54)"/><text x="184.00" y="446.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.32%)</title><rect x="151" y="308" width="39" height="15" fill="rgb(212,20,50)"/><text x="154.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.32%)</title><rect x="151" y="324" width="39" height="15" fill="rgb(233,202,47)"/><text x="154.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="187" y="340" width="3" height="15" fill="rgb(233,202,19)"/><text x="190.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="187" y="356" width="3" height="15" fill="rgb(242,96,37)"/><text x="190.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="187" y="372" width="3" height="15" fill="rgb(205,71,18)"/><text x="190.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="187" y="388" width="3" height="15" fill="rgb(249,200,13)"/><text x="190.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="187" y="404" width="3" height="15" fill="rgb(230,15,3)"/><text x="190.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="187" y="420" width="3" height="15" fill="rgb(215,53,29)"/><text x="190.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="187" y="436" width="3" height="15" fill="rgb(226,138,48)"/><text x="190.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="187" y="452" width="3" height="15" fill="rgb(214,178,16)"/><text x="190.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::GetAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="187" y="468" width="3" height="15" fill="rgb(227,125,36)"/><text x="190.00" y="478.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 3.57%)</title><rect x="151" y="292" width="42" height="15" fill="rgb(229,88,34)"/><text x="154.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="190" y="308" width="3" height="15" fill="rgb(246,216,40)"/><text x="193.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="190" y="324" width="3" height="15" fill="rgb(207,190,43)"/><text x="193.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 4.34%)</title><rect x="145" y="260" width="51" height="15" fill="rgb(217,136,29)"/><text x="148.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 4.34%)</title><rect x="145" y="276" width="51" height="15" fill="rgb(238,128,1)"/><text x="148.00" y="286.50">onnxr..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="193" y="292" width="3" height="15" fill="rgb(211,168,36)"/><text x="196.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.26%)</title><rect x="193" y="308" width="3" height="15" fill="rgb(245,45,54)"/><text x="196.00" y="318.50"></text></g><g><title>0x7fff59b5ba62 ([vdso]) (1 samples, 0.26%)</title><rect x="193" y="324" width="3" height="15" fill="rgb(227,114,38)"/><text x="196.00" y="334.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="196" y="260" width="3" height="15" fill="rgb(238,69,45)"/><text x="199.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.26%)</title><rect x="199" y="292" width="3" height="15" fill="rgb(216,104,37)"/><text x="202.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="199" y="260" width="6" height="15" fill="rgb(207,40,14)"/><text x="202.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.51%)</title><rect x="199" y="276" width="6" height="15" fill="rgb(219,168,11)"/><text x="202.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="202" y="292" width="3" height="15" fill="rgb(243,66,10)"/><text x="205.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.26%)</title><rect x="202" y="308" width="3" height="15" fill="rgb(245,125,18)"/><text x="205.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.26%)</title><rect x="202" y="324" width="3" height="15" fill="rgb(211,126,4)"/><text x="205.00" y="334.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="205" y="260" width="3" height="15" fill="rgb(236,175,45)"/><text x="208.00" y="270.50"></text></g><g><title>onnxruntime::common::Status::ToString[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="205" y="276" width="3" height="15" fill="rgb(224,192,44)"/><text x="208.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.26%)</title><rect x="208" y="276" width="3" height="15" fill="rgb(223,70,36)"/><text x="211.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 6.89%)</title><rect x="136" y="244" width="81" height="15" fill="rgb(250,89,44)"/><text x="139.00" y="254.50">onnxrunti..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="208" y="260" width="9" height="15" fill="rgb(250,180,32)"/><text x="211.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="211" y="276" width="6" height="15" fill="rgb(243,196,44)"/><text x="214.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="211" y="292" width="6" height="15" fill="rgb(237,45,24)"/><text x="214.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="214" y="308" width="3" height="15" fill="rgb(225,42,26)"/><text x="217.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="214" y="324" width="3" height="15" fill="rgb(232,35,23)"/><text x="217.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="214" y="340" width="3" height="15" fill="rgb(249,119,0)"/><text x="217.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="214" y="356" width="3" height="15" fill="rgb(237,206,26)"/><text x="217.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="214" y="372" width="3" height="15" fill="rgb(224,15,2)"/><text x="217.00" y="382.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.02%)</title><rect x="217" y="244" width="12" height="15" fill="rgb(234,153,28)"/><text x="220.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="220" y="260" width="9" height="15" fill="rgb(222,25,30)"/><text x="223.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="226" y="276" width="3" height="15" fill="rgb(247,155,7)"/><text x="229.00" y="286.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (52 samples, 13.27%)</title><rect x="76" y="68" width="156" height="15" fill="rgb(206,179,32)"/><text x="79.00" y="78.50">profile_ort (bench_L..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (52 samples, 13.27%)</title><rect x="76" y="84" width="156" height="15" fill="rgb(220,82,31)"/><text x="79.00" y="94.50">setup_profile (bench..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (52 samples, 13.27%)</title><rect x="76" y="100" width="156" height="15" fill="rgb(244,95,51)"/><text x="79.00" y="110.50">profile (bench_Logis..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (52 samples, 13.27%)</title><rect x="76" y="116" width="156" height="15" fill="rgb(241,219,31)"/><text x="79.00" y="126.50">time_predict (mlprod..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (52 samples, 13.27%)</title><rect x="76" y="132" width="156" height="15" fill="rgb(208,101,52)"/><text x="79.00" y="142.50">&lt;lambda&gt; (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (50 samples, 12.76%)</title><rect x="82" y="148" width="150" height="15" fill="rgb(218,155,14)"/><text x="85.00" y="158.50">run (mlprodict/onnx..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (48 samples, 12.24%)</title><rect x="88" y="164" width="144" height="15" fill="rgb(212,73,14)"/><text x="91.00" y="174.50">_run_whole_runtime..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (44 samples, 11.22%)</title><rect x="100" y="180" width="132" height="15" fill="rgb(252,169,48)"/><text x="103.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py) (43 samples, 10.97%)</title><rect x="103" y="196" width="129" height="15" fill="rgb(226,7,34)"/><text x="106.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 8.16%)</title><rect x="136" y="212" width="96" height="15" fill="rgb(231,9,45)"/><text x="139.00" y="222.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 8.16%)</title><rect x="136" y="228" width="96" height="15" fill="rgb(234,163,49)"/><text x="139.00" y="238.50">void pybind..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="229" y="244" width="3" height="15" fill="rgb(228,71,5)"/><text x="232.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.51%)</title><rect x="301" y="180" width="7" height="15" fill="rgb(244,24,38)"/><text x="304.00" y="190.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.51%)</title><rect x="383" y="212" width="6" height="15" fill="rgb(211,51,18)"/><text x="386.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.51%)</title><rect x="383" y="228" width="6" height="15" fill="rgb(206,48,19)"/><text x="386.00" y="238.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.26%)</title><rect x="386" y="244" width="3" height="15" fill="rgb(218,1,39)"/><text x="389.00" y="254.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.26%)</title><rect x="386" y="260" width="3" height="15" fill="rgb(223,185,26)"/><text x="389.00" y="270.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.26%)</title><rect x="416" y="260" width="3" height="15" fill="rgb(205,197,27)"/><text x="419.00" y="270.50"></text></g><g><title>0x7f3d5a3e9730 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="431" y="324" width="3" height="15" fill="rgb(212,183,9)"/><text x="434.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.26%)</title><rect x="437" y="340" width="3" height="15" fill="rgb(237,81,32)"/><text x="440.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (13 samples, 3.32%)</title><rect x="404" y="244" width="39" height="15" fill="rgb(215,155,27)"/><text x="407.00" y="254.50">arg..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 2.04%)</title><rect x="419" y="260" width="24" height="15" fill="rgb(216,51,0)"/><text x="422.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (8 samples, 2.04%)</title><rect x="419" y="276" width="24" height="15" fill="rgb(245,78,2)"/><text x="422.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 1.53%)</title><rect x="425" y="292" width="18" height="15" fill="rgb(245,46,36)"/><text x="428.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (5 samples, 1.28%)</title><rect x="428" y="308" width="15" height="15" fill="rgb(236,32,53)"/><text x="431.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (3 samples, 0.77%)</title><rect x="434" y="324" width="9" height="15" fill="rgb(239,193,25)"/><text x="437.00" y="334.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="440" y="340" width="3" height="15" fill="rgb(219,116,6)"/><text x="443.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (11 samples, 2.81%)</title><rect x="443" y="244" width="33" height="15" fill="rgb(207,76,33)"/><text x="446.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (7 samples, 1.79%)</title><rect x="455" y="260" width="21" height="15" fill="rgb(225,12,34)"/><text x="458.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.53%)</title><rect x="458" y="276" width="18" height="15" fill="rgb(243,188,50)"/><text x="461.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (5 samples, 1.28%)</title><rect x="461" y="292" width="15" height="15" fill="rgb(228,91,47)"/><text x="464.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (3 samples, 0.77%)</title><rect x="467" y="308" width="9" height="15" fill="rgb(212,130,30)"/><text x="470.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (3 samples, 0.77%)</title><rect x="467" y="324" width="9" height="15" fill="rgb(245,29,50)"/><text x="470.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.26%)</title><rect x="473" y="340" width="3" height="15" fill="rgb(250,139,46)"/><text x="476.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="473" y="356" width="3" height="15" fill="rgb(241,86,24)"/><text x="476.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="473" y="372" width="3" height="15" fill="rgb(244,73,2)"/><text x="476.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.51%)</title><rect x="479" y="260" width="6" height="15" fill="rgb(207,194,28)"/><text x="482.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.51%)</title><rect x="479" y="276" width="6" height="15" fill="rgb(224,144,22)"/><text x="482.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.51%)</title><rect x="479" y="292" width="6" height="15" fill="rgb(229,78,1)"/><text x="482.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="482" y="308" width="3" height="15" fill="rgb(233,170,37)"/><text x="485.00" y="318.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.26%)</title><rect x="494" y="276" width="3" height="15" fill="rgb(242,59,27)"/><text x="497.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.26%)</title><rect x="494" y="292" width="3" height="15" fill="rgb(219,196,48)"/><text x="497.00" y="302.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.51%)</title><rect x="497" y="292" width="6" height="15" fill="rgb(218,191,10)"/><text x="500.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.51%)</title><rect x="497" y="308" width="6" height="15" fill="rgb(213,123,41)"/><text x="500.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.51%)</title><rect x="497" y="324" width="6" height="15" fill="rgb(237,124,20)"/><text x="500.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.26%)</title><rect x="500" y="340" width="3" height="15" fill="rgb(244,109,36)"/><text x="503.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.26%)</title><rect x="500" y="356" width="3" height="15" fill="rgb(231,213,14)"/><text x="503.00" y="366.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.26%)</title><rect x="500" y="372" width="3" height="15" fill="rgb(245,191,20)"/><text x="503.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.26%)</title><rect x="506" y="324" width="3" height="15" fill="rgb(242,30,48)"/><text x="509.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.26%)</title><rect x="506" y="340" width="3" height="15" fill="rgb(250,186,24)"/><text x="509.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.26%)</title><rect x="506" y="356" width="3" height="15" fill="rgb(238,102,32)"/><text x="509.00" y="366.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.26%)</title><rect x="509" y="324" width="3" height="15" fill="rgb(235,20,13)"/><text x="512.00" y="334.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="509" y="340" width="3" height="15" fill="rgb(243,199,42)"/><text x="512.00" y="350.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.26%)</title><rect x="512" y="324" width="3" height="15" fill="rgb(242,189,31)"/><text x="515.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.28%)</title><rect x="503" y="308" width="15" height="15" fill="rgb(248,56,40)"/><text x="506.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.26%)</title><rect x="515" y="324" width="3" height="15" fill="rgb(210,43,16)"/><text x="518.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.26%)</title><rect x="515" y="340" width="3" height="15" fill="rgb(225,144,2)"/><text x="518.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.26%)</title><rect x="518" y="308" width="3" height="15" fill="rgb(250,136,41)"/><text x="521.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.26%)</title><rect x="518" y="324" width="3" height="15" fill="rgb(231,133,26)"/><text x="521.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.79%)</title><rect x="503" y="292" width="21" height="15" fill="rgb(220,9,47)"/><text x="506.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.26%)</title><rect x="521" y="308" width="3" height="15" fill="rgb(206,42,24)"/><text x="524.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.26%)</title><rect x="521" y="324" width="3" height="15" fill="rgb(215,166,40)"/><text x="524.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 2.55%)</title><rect x="497" y="276" width="30" height="15" fill="rgb(245,173,11)"/><text x="500.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.26%)</title><rect x="524" y="292" width="3" height="15" fill="rgb(230,176,3)"/><text x="527.00" y="302.50"></text></g><g><title>0x7f3d3c7d833d (?) (1 samples, 0.26%)</title><rect x="524" y="308" width="3" height="15" fill="rgb(219,104,22)"/><text x="527.00" y="318.50"></text></g><g><title>0x7f3d3c7fa214 (?) (1 samples, 0.26%)</title><rect x="524" y="324" width="3" height="15" fill="rgb(208,88,5)"/><text x="527.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.26%)</title><rect x="524" y="340" width="3" height="15" fill="rgb(232,177,45)"/><text x="527.00" y="350.50"></text></g><g><title>0x7f3d5a552e06 (libm-2.29.so) (1 samples, 0.26%)</title><rect x="524" y="356" width="3" height="15" fill="rgb(210,1,6)"/><text x="527.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (46 samples, 11.73%)</title><rect x="392" y="228" width="138" height="15" fill="rgb(219,20,49)"/><text x="395.00" y="238.50">_run (mlprodict/o..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (18 samples, 4.59%)</title><rect x="476" y="244" width="54" height="15" fill="rgb(211,193,13)"/><text x="479.00" y="254.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 3.83%)</title><rect x="485" y="260" width="45" height="15" fill="rgb(228,104,34)"/><text x="488.00" y="270.50">PyUF..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.26%)</title><rect x="527" y="276" width="3" height="15" fill="rgb(226,155,38)"/><text x="530.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.26%)</title><rect x="527" y="292" width="3" height="15" fill="rgb(251,93,53)"/><text x="530.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.51%)</title><rect x="551" y="276" width="6" height="15" fill="rgb(237,145,51)"/><text x="554.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.51%)</title><rect x="551" y="292" width="6" height="15" fill="rgb(207,142,19)"/><text x="554.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.77%)</title><rect x="551" y="260" width="9" height="15" fill="rgb(223,141,46)"/><text x="554.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.26%)</title><rect x="557" y="276" width="3" height="15" fill="rgb(238,42,41)"/><text x="560.00" y="286.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.26%)</title><rect x="560" y="276" width="3" height="15" fill="rgb(238,69,37)"/><text x="563.00" y="286.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.51%)</title><rect x="560" y="260" width="6" height="15" fill="rgb(221,140,30)"/><text x="563.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.26%)</title><rect x="563" y="276" width="3" height="15" fill="rgb(206,165,23)"/><text x="566.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.26%)</title><rect x="563" y="292" width="3" height="15" fill="rgb(216,86,2)"/><text x="566.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.77%)</title><rect x="572" y="324" width="9" height="15" fill="rgb(220,156,5)"/><text x="575.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.77%)</title><rect x="572" y="340" width="9" height="15" fill="rgb(234,54,42)"/><text x="575.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.77%)</title><rect x="572" y="356" width="9" height="15" fill="rgb(226,43,24)"/><text x="575.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.77%)</title><rect x="572" y="372" width="9" height="15" fill="rgb(251,208,31)"/><text x="575.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.77%)</title><rect x="572" y="388" width="9" height="15" fill="rgb(247,160,41)"/><text x="575.00" y="398.50"></text></g><g><title>0x7f3d5a4b1151 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="578" y="404" width="3" height="15" fill="rgb(233,153,52)"/><text x="581.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.26%)</title><rect x="587" y="340" width="3" height="15" fill="rgb(227,77,8)"/><text x="590.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.26%)</title><rect x="590" y="340" width="3" height="15" fill="rgb(215,121,10)"/><text x="593.00" y="350.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.26%)</title><rect x="593" y="340" width="3" height="15" fill="rgb(242,68,43)"/><text x="596.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="596" y="372" width="4" height="15" fill="rgb(247,9,11)"/><text x="599.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="600" y="372" width="3" height="15" fill="rgb(213,82,11)"/><text x="603.00" y="382.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c) (1 samples, 0.26%)</title><rect x="603" y="372" width="3" height="15" fill="rgb(205,182,31)"/><text x="606.00" y="382.50"></text></g><g><title>array_sum (methods.c) (14 samples, 3.57%)</title><rect x="566" y="260" width="43" height="15" fill="rgb(234,143,44)"/><text x="569.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 3.57%)</title><rect x="566" y="276" width="43" height="15" fill="rgb(232,53,39)"/><text x="569.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (13 samples, 3.32%)</title><rect x="569" y="292" width="40" height="15" fill="rgb(227,167,41)"/><text x="572.00" y="302.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 3.06%)</title><rect x="572" y="308" width="37" height="15" fill="rgb(231,175,41)"/><text x="575.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 2.30%)</title><rect x="581" y="324" width="28" height="15" fill="rgb(227,34,25)"/><text x="584.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 1.02%)</title><rect x="596" y="340" width="13" height="15" fill="rgb(205,168,49)"/><text x="599.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 1.02%)</title><rect x="596" y="356" width="13" height="15" fill="rgb(208,41,30)"/><text x="599.00" y="366.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.26%)</title><rect x="606" y="372" width="3" height="15" fill="rgb(242,19,30)"/><text x="609.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.26%)</title><rect x="606" y="388" width="3" height="15" fill="rgb(235,140,31)"/><text x="609.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.26%)</title><rect x="606" y="404" width="3" height="15" fill="rgb(226,81,18)"/><text x="609.00" y="414.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.26%)</title><rect x="615" y="276" width="3" height="15" fill="rgb(216,14,35)"/><text x="618.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.26%)</title><rect x="615" y="292" width="3" height="15" fill="rgb(227,39,50)"/><text x="618.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.26%)</title><rect x="615" y="308" width="3" height="15" fill="rgb(235,157,32)"/><text x="618.00" y="318.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.26%)</title><rect x="627" y="292" width="3" height="15" fill="rgb(246,81,28)"/><text x="630.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.26%)</title><rect x="630" y="340" width="3" height="15" fill="rgb(236,87,8)"/><text x="633.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.51%)</title><rect x="630" y="324" width="6" height="15" fill="rgb(205,33,11)"/><text x="633.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.26%)</title><rect x="633" y="340" width="3" height="15" fill="rgb(254,176,51)"/><text x="636.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.02%)</title><rect x="630" y="292" width="12" height="15" fill="rgb(245,32,28)"/><text x="633.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.02%)</title><rect x="630" y="308" width="12" height="15" fill="rgb(254,46,12)"/><text x="633.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_divide_FLOAT (simd.inc.src) (2 samples, 0.51%)</title><rect x="636" y="324" width="6" height="15" fill="rgb(238,95,32)"/><text x="639.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.51%)</title><rect x="642" y="292" width="6" height="15" fill="rgb(215,59,45)"/><text x="645.00" y="302.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (139 samples, 35.46%)</title><rect x="232" y="68" width="419" height="15" fill="rgb(224,109,12)"/><text x="235.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_sol..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (139 samples, 35.46%)</title><rect x="232" y="84" width="419" height="15" fill="rgb(234,118,5)"/><text x="235.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_so..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (139 samples, 35.46%)</title><rect x="232" y="100" width="419" height="15" fill="rgb(226,228,29)"/><text x="235.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (136 samples, 34.69%)</title><rect x="241" y="116" width="410" height="15" fill="rgb(206,139,12)"/><text x="244.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 33.67%)</title><rect x="253" y="132" width="398" height="15" fill="rgb(223,118,9)"/><text x="256.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (129 samples, 32.91%)</title><rect x="262" y="148" width="389" height="15" fill="rgb(246,36,52)"/><text x="265.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (126 samples, 32.14%)</title><rect x="271" y="164" width="380" height="15" fill="rgb(228,163,42)"/><text x="274.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (114 samples, 29.08%)</title><rect x="308" y="180" width="343" height="15" fill="rgb(236,117,42)"/><text x="311.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (90 samples, 22.96%)</title><rect x="380" y="196" width="271" height="15" fill="rgb(235,118,12)"/><text x="383.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (87 samples, 22.19%)</title><rect x="389" y="212" width="262" height="15" fill="rgb(223,30,30)"/><text x="392.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.p..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (40 samples, 10.20%)</title><rect x="530" y="228" width="121" height="15" fill="rgb(230,171,12)"/><text x="533.00" y="238.50">_run (mlprodict..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (38 samples, 9.69%)</title><rect x="536" y="244" width="115" height="15" fill="rgb(249,210,44)"/><text x="539.00" y="254.50">norm_l1 (mlpro..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 3.57%)</title><rect x="609" y="260" width="42" height="15" fill="rgb(245,101,4)"/><text x="612.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 2.81%)</title><rect x="618" y="276" width="33" height="15" fill="rgb(222,137,23)"/><text x="621.00" y="286.50">Py..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.26%)</title><rect x="648" y="292" width="3" height="15" fill="rgb(245,39,51)"/><text x="651.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.26%)</title><rect x="702" y="196" width="3" height="15" fill="rgb(246,2,8)"/><text x="705.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.26%)</title><rect x="702" y="212" width="3" height="15" fill="rgb(241,104,26)"/><text x="705.00" y="222.50"></text></g><g><title>0x7f3d595f5ef0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="702" y="228" width="3" height="15" fill="rgb(211,25,20)"/><text x="705.00" y="238.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 1.02%)</title><rect x="699" y="180" width="12" height="15" fill="rgb(225,58,21)"/><text x="702.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.51%)</title><rect x="705" y="196" width="6" height="15" fill="rgb(243,197,37)"/><text x="708.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.51%)</title><rect x="705" y="212" width="6" height="15" fill="rgb(215,226,49)"/><text x="708.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="708" y="228" width="3" height="15" fill="rgb(221,158,16)"/><text x="711.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="708" y="244" width="3" height="15" fill="rgb(243,207,44)"/><text x="711.00" y="254.50"></text></g><g><title>0x7f3d5a3f4120 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="714" y="308" width="3" height="15" fill="rgb(242,219,10)"/><text x="717.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.51%)</title><rect x="714" y="292" width="6" height="15" fill="rgb(205,47,3)"/><text x="717.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.26%)</title><rect x="717" y="308" width="3" height="15" fill="rgb(249,183,23)"/><text x="720.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="720" y="292" width="3" height="15" fill="rgb(228,60,39)"/><text x="723.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.26%)</title><rect x="720" y="308" width="3" height="15" fill="rgb(214,216,14)"/><text x="723.00" y="318.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.26%)</title><rect x="723" y="292" width="3" height="15" fill="rgb(210,102,15)"/><text x="726.00" y="302.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.26%)</title><rect x="726" y="292" width="3" height="15" fill="rgb(250,66,37)"/><text x="729.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.26%)</title><rect x="726" y="308" width="3" height="15" fill="rgb(227,166,41)"/><text x="729.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.26%)</title><rect x="726" y="324" width="3" height="15" fill="rgb(253,216,19)"/><text x="729.00" y="334.50"></text></g><g><title>0x7f3d5a3f3d50 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="726" y="340" width="3" height="15" fill="rgb(248,123,33)"/><text x="729.00" y="350.50"></text></g><g><title>0x7f3d595f6710 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="732" y="308" width="3" height="15" fill="rgb(210,71,34)"/><text x="735.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 2.30%)</title><rect x="714" y="276" width="27" height="15" fill="rgb(253,98,8)"/><text x="717.00" y="286.50">P..</text></g><g><title>PyArray_FillWithScalar (convert.c) (4 samples, 1.02%)</title><rect x="729" y="292" width="12" height="15" fill="rgb(233,120,25)"/><text x="732.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.51%)</title><rect x="735" y="308" width="6" height="15" fill="rgb(228,61,31)"/><text x="738.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.51%)</title><rect x="735" y="324" width="6" height="15" fill="rgb(237,150,49)"/><text x="738.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.26%)</title><rect x="738" y="340" width="3" height="15" fill="rgb(223,226,33)"/><text x="741.00" y="350.50"></text></g><g><title>array_sum (methods.c) (11 samples, 2.81%)</title><rect x="711" y="180" width="33" height="15" fill="rgb(233,20,38)"/><text x="714.00" y="190.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (11 samples, 2.81%)</title><rect x="711" y="196" width="33" height="15" fill="rgb(240,1,29)"/><text x="714.00" y="206.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (11 samples, 2.81%)</title><rect x="711" y="212" width="33" height="15" fill="rgb(209,102,18)"/><text x="714.00" y="222.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 2.55%)</title><rect x="714" y="228" width="30" height="15" fill="rgb(224,71,52)"/><text x="717.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (10 samples, 2.55%)</title><rect x="714" y="244" width="30" height="15" fill="rgb(230,207,50)"/><text x="717.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 2.55%)</title><rect x="714" y="260" width="30" height="15" fill="rgb(218,156,7)"/><text x="717.00" y="270.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.26%)</title><rect x="741" y="276" width="3" height="15" fill="rgb(209,19,47)"/><text x="744.00" y="286.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 0.51%)</title><rect x="756" y="196" width="6" height="15" fill="rgb(248,189,37)"/><text x="759.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.26%)</title><rect x="759" y="212" width="3" height="15" fill="rgb(228,30,47)"/><text x="762.00" y="222.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.26%)</title><rect x="762" y="212" width="3" height="15" fill="rgb(208,93,48)"/><text x="765.00" y="222.50"></text></g><g><title>can_elide_temp (temp_elide.c) (1 samples, 0.26%)</title><rect x="762" y="228" width="3" height="15" fill="rgb(235,212,42)"/><text x="765.00" y="238.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.26%)</title><rect x="765" y="276" width="3" height="15" fill="rgb(231,28,6)"/><text x="768.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.51%)</title><rect x="768" y="276" width="6" height="15" fill="rgb(247,197,43)"/><text x="771.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.51%)</title><rect x="768" y="292" width="6" height="15" fill="rgb(229,127,26)"/><text x="771.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.26%)</title><rect x="771" y="308" width="3" height="15" fill="rgb(228,53,27)"/><text x="774.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.26%)</title><rect x="771" y="324" width="3" height="15" fill="rgb(229,120,17)"/><text x="774.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="771" y="340" width="3" height="15" fill="rgb(232,49,34)"/><text x="774.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.26%)</title><rect x="771" y="356" width="3" height="15" fill="rgb(209,228,6)"/><text x="774.00" y="366.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.26%)</title><rect x="771" y="372" width="3" height="15" fill="rgb(231,135,44)"/><text x="774.00" y="382.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.26%)</title><rect x="771" y="388" width="3" height="15" fill="rgb(240,58,32)"/><text x="774.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="774" y="276" width="3" height="15" fill="rgb(205,156,9)"/><text x="777.00" y="286.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.26%)</title><rect x="777" y="292" width="3" height="15" fill="rgb(239,169,22)"/><text x="780.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.53%)</title><rect x="765" y="228" width="18" height="15" fill="rgb(251,29,50)"/><text x="768.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.53%)</title><rect x="765" y="244" width="18" height="15" fill="rgb(212,36,28)"/><text x="768.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.53%)</title><rect x="765" y="260" width="18" height="15" fill="rgb(206,102,53)"/><text x="768.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.51%)</title><rect x="777" y="276" width="6" height="15" fill="rgb(223,177,25)"/><text x="780.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.26%)</title><rect x="780" y="292" width="3" height="15" fill="rgb(222,206,47)"/><text x="783.00" y="302.50"></text></g><g><title>array_add (number.c) (8 samples, 2.04%)</title><rect x="762" y="196" width="24" height="15" fill="rgb(245,167,5)"/><text x="765.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.79%)</title><rect x="765" y="212" width="21" height="15" fill="rgb(231,55,0)"/><text x="768.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.26%)</title><rect x="783" y="228" width="3" height="15" fill="rgb(215,228,0)"/><text x="786.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="786" y="196" width="3" height="15" fill="rgb(213,188,18)"/><text x="789.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="786" y="212" width="3" height="15" fill="rgb(239,90,1)"/><text x="789.00" y="222.50"></text></g><g><title>0x7f3d595f57c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="786" y="228" width="3" height="15" fill="rgb(241,206,22)"/><text x="789.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (5 samples, 1.28%)</title><rect x="837" y="212" width="15" height="15" fill="rgb(221,58,29)"/><text x="840.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.26%)</title><rect x="852" y="212" width="3" height="15" fill="rgb(247,162,0)"/><text x="855.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.51%)</title><rect x="855" y="212" width="6" height="15" fill="rgb(207,97,48)"/><text x="858.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="864" y="228" width="9" height="15" fill="rgb(242,180,36)"/><text x="867.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (5 samples, 1.28%)</title><rect x="861" y="212" width="15" height="15" fill="rgb(253,102,3)"/><text x="864.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="873" y="228" width="3" height="15" fill="rgb(239,60,3)"/><text x="876.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.26%)</title><rect x="876" y="212" width="3" height="15" fill="rgb(232,222,48)"/><text x="879.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.26%)</title><rect x="910" y="228" width="3" height="15" fill="rgb(233,22,34)"/><text x="913.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (14 samples, 3.57%)</title><rect x="879" y="212" width="43" height="15" fill="rgb(228,94,25)"/><text x="882.00" y="222.50">_num..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.77%)</title><rect x="913" y="228" width="9" height="15" fill="rgb(254,134,27)"/><text x="916.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.26%)</title><rect x="919" y="244" width="3" height="15" fill="rgb(253,136,38)"/><text x="922.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.26%)</title><rect x="922" y="212" width="3" height="15" fill="rgb(239,166,33)"/><text x="925.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="922" y="228" width="3" height="15" fill="rgb(224,147,49)"/><text x="925.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (3 samples, 0.77%)</title><rect x="925" y="212" width="9" height="15" fill="rgb(254,107,7)"/><text x="928.00" y="222.50"></text></g><g><title>simplefilter (warnings.py) (6 samples, 1.53%)</title><rect x="934" y="212" width="18" height="15" fill="rgb(246,111,31)"/><text x="937.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (6 samples, 1.53%)</title><rect x="934" y="228" width="18" height="15" fill="rgb(223,180,39)"/><text x="937.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (55 samples, 14.03%)</title><rect x="789" y="196" width="166" height="15" fill="rgb(212,32,29)"/><text x="792.00" y="206.50">check_array (sklearn/..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.26%)</title><rect x="952" y="212" width="3" height="15" fill="rgb(242,76,50)"/><text x="955.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.51%)</title><rect x="985" y="228" width="6" height="15" fill="rgb(224,141,23)"/><text x="988.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (14 samples, 3.57%)</title><rect x="955" y="196" width="42" height="15" fill="rgb(231,61,33)"/><text x="958.00" y="206.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (10 samples, 2.55%)</title><rect x="967" y="212" width="30" height="15" fill="rgb(247,5,34)"/><text x="970.00" y="222.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.51%)</title><rect x="991" y="228" width="6" height="15" fill="rgb(237,169,39)"/><text x="994.00" y="238.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.51%)</title><rect x="1003" y="212" width="6" height="15" fill="rgb(216,83,49)"/><text x="1006.00" y="222.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.26%)</title><rect x="1009" y="228" width="3" height="15" fill="rgb(205,10,43)"/><text x="1012.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.26%)</title><rect x="1012" y="228" width="3" height="15" fill="rgb(231,219,14)"/><text x="1015.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.26%)</title><rect x="1012" y="244" width="3" height="15" fill="rgb(228,9,8)"/><text x="1015.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (2 samples, 0.51%)</title><rect x="1036" y="260" width="6" height="15" fill="rgb(229,100,51)"/><text x="1039.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (2 samples, 0.51%)</title><rect x="1036" y="276" width="6" height="15" fill="rgb(217,110,25)"/><text x="1039.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.51%)</title><rect x="1036" y="292" width="6" height="15" fill="rgb(253,32,52)"/><text x="1039.00" y="302.50"></text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="1039" y="308" width="3" height="15" fill="rgb(209,11,33)"/><text x="1042.00" y="318.50"></text></g><g><title>0x7f3d5a3f3d50 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1042" y="356" width="3" height="15" fill="rgb(213,99,0)"/><text x="1045.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.51%)</title><rect x="1042" y="276" width="6" height="15" fill="rgb(235,77,53)"/><text x="1045.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.51%)</title><rect x="1042" y="292" width="6" height="15" fill="rgb(248,98,14)"/><text x="1045.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.51%)</title><rect x="1042" y="308" width="6" height="15" fill="rgb(249,164,13)"/><text x="1045.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.51%)</title><rect x="1042" y="324" width="6" height="15" fill="rgb(232,63,26)"/><text x="1045.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.51%)</title><rect x="1042" y="340" width="6" height="15" fill="rgb(253,180,48)"/><text x="1045.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1045" y="356" width="3" height="15" fill="rgb(226,105,29)"/><text x="1048.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1048" y="276" width="3" height="15" fill="rgb(218,155,17)"/><text x="1051.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.02%)</title><rect x="1042" y="260" width="12" height="15" fill="rgb(227,120,43)"/><text x="1045.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1051" y="276" width="3" height="15" fill="rgb(238,156,33)"/><text x="1054.00" y="286.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1051" y="292" width="3" height="15" fill="rgb(248,128,34)"/><text x="1054.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1054" y="260" width="3" height="15" fill="rgb(220,164,2)"/><text x="1057.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="1054" y="276" width="3" height="15" fill="rgb(252,128,18)"/><text x="1057.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (1 samples, 0.26%)</title><rect x="1057" y="260" width="3" height="15" fill="rgb(228,27,38)"/><text x="1060.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.26%)</title><rect x="1057" y="276" width="3" height="15" fill="rgb(207,8,3)"/><text x="1060.00" y="286.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.26%)</title><rect x="1057" y="292" width="3" height="15" fill="rgb(227,19,12)"/><text x="1060.00" y="302.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.26%)</title><rect x="1060" y="260" width="3" height="15" fill="rgb(217,119,11)"/><text x="1063.00" y="270.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.26%)</title><rect x="1063" y="260" width="3" height="15" fill="rgb(234,180,35)"/><text x="1066.00" y="270.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.26%)</title><rect x="1063" y="276" width="3" height="15" fill="rgb(213,38,50)"/><text x="1066.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.26%)</title><rect x="1066" y="276" width="3" height="15" fill="rgb(226,229,19)"/><text x="1069.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.51%)</title><rect x="1066" y="260" width="6" height="15" fill="rgb(235,8,35)"/><text x="1069.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="1069" y="276" width="3" height="15" fill="rgb(249,147,41)"/><text x="1072.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.26%)</title><rect x="1069" y="292" width="3" height="15" fill="rgb(247,200,38)"/><text x="1072.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.26%)</title><rect x="1069" y="308" width="3" height="15" fill="rgb(205,13,43)"/><text x="1072.00" y="318.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (110 samples, 28.06%)</title><rect x="744" y="180" width="331" height="15" fill="rgb(206,134,22)"/><text x="747.00" y="190.50">decision_function (sklearn/linear_model/_bas..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (26 samples, 6.63%)</title><rect x="997" y="196" width="78" height="15" fill="rgb(239,90,52)"/><text x="1000.00" y="206.50">safe_spar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 5.61%)</title><rect x="1009" y="212" width="66" height="15" fill="rgb(207,137,53)"/><text x="1012.00" y="222.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (20 samples, 5.10%)</title><rect x="1015" y="228" width="60" height="15" fill="rgb(227,97,42)"/><text x="1018.00" y="238.50">PyUFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (19 samples, 4.85%)</title><rect x="1018" y="244" width="57" height="15" fill="rgb(240,23,53)"/><text x="1021.00" y="254.50">PyUFun..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1072" y="260" width="3" height="15" fill="rgb(223,60,24)"/><text x="1075.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.26%)</title><rect x="1075" y="228" width="3" height="15" fill="rgb(216,127,5)"/><text x="1078.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 1.02%)</title><rect x="1075" y="196" width="12" height="15" fill="rgb(236,228,4)"/><text x="1078.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 1.02%)</title><rect x="1075" y="212" width="12" height="15" fill="rgb(240,24,16)"/><text x="1078.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (3 samples, 0.77%)</title><rect x="1078" y="228" width="9" height="15" fill="rgb(245,21,27)"/><text x="1081.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.26%)</title><rect x="1084" y="244" width="3" height="15" fill="rgb(230,17,17)"/><text x="1087.00" y="254.50"></text></g><g><title>0x7f3d5a4b1ff0 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1084" y="260" width="3" height="15" fill="rgb(208,157,42)"/><text x="1087.00" y="270.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.26%)</title><rect x="1096" y="260" width="3" height="15" fill="rgb(227,172,48)"/><text x="1099.00" y="270.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.51%)</title><rect x="1096" y="228" width="6" height="15" fill="rgb(253,133,33)"/><text x="1099.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.51%)</title><rect x="1096" y="244" width="6" height="15" fill="rgb(217,52,32)"/><text x="1099.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.26%)</title><rect x="1099" y="260" width="3" height="15" fill="rgb(251,30,35)"/><text x="1102.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.26%)</title><rect x="1099" y="276" width="3" height="15" fill="rgb(227,124,29)"/><text x="1102.00" y="286.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.26%)</title><rect x="1099" y="292" width="3" height="15" fill="rgb(209,10,7)"/><text x="1102.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (1 samples, 0.26%)</title><rect x="1102" y="244" width="3" height="15" fill="rgb(237,174,18)"/><text x="1105.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.51%)</title><rect x="1102" y="228" width="6" height="15" fill="rgb(253,38,21)"/><text x="1105.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1105" y="244" width="3" height="15" fill="rgb(237,205,31)"/><text x="1108.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1105" y="260" width="3" height="15" fill="rgb(252,92,54)"/><text x="1108.00" y="270.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.26%)</title><rect x="1105" y="276" width="3" height="15" fill="rgb(232,154,6)"/><text x="1108.00" y="286.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.26%)</title><rect x="1105" y="292" width="3" height="15" fill="rgb(224,197,38)"/><text x="1108.00" y="302.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.26%)</title><rect x="1105" y="308" width="3" height="15" fill="rgb(230,14,30)"/><text x="1108.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.53%)</title><rect x="1093" y="212" width="18" height="15" fill="rgb(235,13,8)"/><text x="1096.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1108" y="228" width="3" height="15" fill="rgb(231,26,23)"/><text x="1111.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1111" y="212" width="3" height="15" fill="rgb(208,82,27)"/><text x="1114.00" y="222.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="1114" y="212" width="3" height="15" fill="rgb(243,74,31)"/><text x="1117.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="1114" y="228" width="3" height="15" fill="rgb(241,40,47)"/><text x="1117.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (146 samples, 37.24%)</title><rect x="681" y="164" width="439" height="15" fill="rgb(243,85,20)"/><text x="684.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 3.83%)</title><rect x="1075" y="180" width="45" height="15" fill="rgb(241,10,19)"/><text x="1078.00" y="190.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 2.81%)</title><rect x="1087" y="196" width="33" height="15" fill="rgb(239,101,11)"/><text x="1090.00" y="206.50">Py..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1117" y="212" width="3" height="15" fill="rgb(212,119,8)"/><text x="1120.00" y="222.50"></text></g><g><title>0x7f3d5a3f4120 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1117" y="228" width="3" height="15" fill="rgb(251,221,17)"/><text x="1120.00" y="238.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.26%)</title><rect x="1120" y="164" width="3" height="15" fill="rgb(227,76,31)"/><text x="1123.00" y="174.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="1120" y="180" width="3" height="15" fill="rgb(232,190,44)"/><text x="1123.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.77%)</title><rect x="1174" y="196" width="9" height="15" fill="rgb(232,134,10)"/><text x="1177.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (391 samples, 99.74%)</title><rect x="10" y="52" width="1176" height="15" fill="rgb(220,60,9)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (178 samples, 45.41%)</title><rect x="651" y="68" width="535" height="15" fill="rgb(227,6,39)"/><text x="654.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (178 samples, 45.41%)</title><rect x="651" y="84" width="535" height="15" fill="rgb(224,119,6)"/><text x="654.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_on..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (178 samples, 45.41%)</title><rect x="651" y="100" width="535" height="15" fill="rgb(251,70,1)"/><text x="654.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (177 samples, 45.15%)</title><rect x="654" y="116" width="532" height="15" fill="rgb(228,83,37)"/><text x="657.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (174 samples, 44.39%)</title><rect x="663" y="132" width="523" height="15" fill="rgb(228,170,17)"/><text x="666.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (173 samples, 44.13%)</title><rect x="666" y="148" width="520" height="15" fill="rgb(218,155,30)"/><text x="669.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (21 samples, 5.36%)</title><rect x="1123" y="164" width="63" height="15" fill="rgb(244,19,8)"/><text x="1126.00" y="174.50">check_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (14 samples, 3.57%)</title><rect x="1144" y="180" width="42" height="15" fill="rgb(245,227,48)"/><text x="1147.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.26%)</title><rect x="1183" y="196" width="3" height="15" fill="rgb(247,186,25)"/><text x="1186.00" y="206.50"></text></g><g><title>all (392 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(249,204,39)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.26%)</title><rect x="1186" y="52" width="4" height="15" fill="rgb(233,21,28)"/><text x="1189.00" y="62.50"></text></g></g></svg>