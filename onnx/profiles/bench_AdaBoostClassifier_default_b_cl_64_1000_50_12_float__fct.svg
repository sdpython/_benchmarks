<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2182" onload="init(evt)" viewBox="0 0 1200 2182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2182" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2165.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2165.00"> </text><g id="frames"><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(215,67,33)"/><text x="13.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(253,82,37)"/><text x="13.00" y="926.50"></text></g><g><title>_has (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(205,193,14)"/><text x="13.00" y="942.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.11%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(237,174,8)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (3 samples, 0.32%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(215,53,32)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (3 samples, 0.32%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(254,83,53)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(243,154,27)"/><text x="14.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(227,46,16)"/><text x="14.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(221,79,31)"/><text x="14.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(241,218,7)"/><text x="14.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(229,198,39)"/><text x="14.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="12" y="980" width="1" height="15" fill="rgb(239,168,8)"/><text x="15.00" y="990.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(245,158,28)"/><text x="16.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(219,191,33)"/><text x="16.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(227,113,27)"/><text x="16.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.11%)</title><rect x="15" y="996" width="1" height="15" fill="rgb(235,95,10)"/><text x="18.00" y="1006.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="15" y="1012" width="1" height="15" fill="rgb(251,101,51)"/><text x="18.00" y="1022.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="15" y="1028" width="1" height="15" fill="rgb(229,166,1)"/><text x="18.00" y="1038.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.32%)</title><rect x="13" y="868" width="4" height="15" fill="rgb(240,16,26)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.32%)</title><rect x="13" y="884" width="4" height="15" fill="rgb(223,131,26)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.32%)</title><rect x="13" y="900" width="4" height="15" fill="rgb(254,144,51)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.32%)</title><rect x="13" y="916" width="4" height="15" fill="rgb(244,108,22)"/><text x="16.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (3 samples, 0.32%)</title><rect x="13" y="932" width="4" height="15" fill="rgb(242,225,4)"/><text x="16.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.11%)</title><rect x="16" y="948" width="1" height="15" fill="rgb(242,34,12)"/><text x="19.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 0.75%)</title><rect x="10" y="292" width="8" height="15" fill="rgb(214,84,43)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="308" width="8" height="15" fill="rgb(231,167,7)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="324" width="8" height="15" fill="rgb(239,200,2)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="340" width="8" height="15" fill="rgb(216,130,52)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.75%)</title><rect x="10" y="356" width="8" height="15" fill="rgb(237,97,3)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="372" width="8" height="15" fill="rgb(212,112,27)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 0.75%)</title><rect x="10" y="388" width="8" height="15" fill="rgb(224,187,44)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="404" width="8" height="15" fill="rgb(234,150,8)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="420" width="8" height="15" fill="rgb(216,194,10)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="436" width="8" height="15" fill="rgb(252,6,49)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.75%)</title><rect x="10" y="452" width="8" height="15" fill="rgb(220,67,4)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="468" width="8" height="15" fill="rgb(213,72,52)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 0.75%)</title><rect x="10" y="484" width="8" height="15" fill="rgb(228,226,17)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="500" width="8" height="15" fill="rgb(207,152,32)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="516" width="8" height="15" fill="rgb(219,44,44)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="532" width="8" height="15" fill="rgb(247,146,0)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.75%)</title><rect x="10" y="548" width="8" height="15" fill="rgb(224,183,23)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="564" width="8" height="15" fill="rgb(206,42,43)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 0.75%)</title><rect x="10" y="580" width="8" height="15" fill="rgb(242,154,2)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="596" width="8" height="15" fill="rgb(232,144,7)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="612" width="8" height="15" fill="rgb(250,209,8)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="628" width="8" height="15" fill="rgb(233,208,3)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="644" width="8" height="15" fill="rgb(216,148,44)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="660" width="8" height="15" fill="rgb(214,13,43)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="676" width="8" height="15" fill="rgb(241,207,52)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.75%)</title><rect x="10" y="692" width="8" height="15" fill="rgb(209,83,1)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="708" width="8" height="15" fill="rgb(216,211,29)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 0.75%)</title><rect x="10" y="724" width="8" height="15" fill="rgb(207,142,14)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="740" width="8" height="15" fill="rgb(225,37,48)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="756" width="8" height="15" fill="rgb(254,83,43)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="772" width="8" height="15" fill="rgb(223,99,4)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.75%)</title><rect x="10" y="788" width="8" height="15" fill="rgb(219,50,1)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="10" y="804" width="8" height="15" fill="rgb(245,131,34)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 0.75%)</title><rect x="10" y="820" width="8" height="15" fill="rgb(216,72,4)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 0.75%)</title><rect x="10" y="836" width="8" height="15" fill="rgb(240,157,9)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 0.75%)</title><rect x="10" y="852" width="8" height="15" fill="rgb(229,20,30)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="17" y="868" width="1" height="15" fill="rgb(220,83,48)"/><text x="20.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="17" y="884" width="1" height="15" fill="rgb(250,4,24)"/><text x="20.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="17" y="900" width="1" height="15" fill="rgb(235,126,18)"/><text x="20.00" y="910.50"></text></g><g><title>__init__ (logging/__init__.py) (1 samples, 0.11%)</title><rect x="18" y="308" width="2" height="15" fill="rgb(242,174,4)"/><text x="21.00" y="318.50"></text></g><g><title>__init__ (logging/__init__.py) (1 samples, 0.11%)</title><rect x="18" y="324" width="2" height="15" fill="rgb(222,97,48)"/><text x="21.00" y="334.50"></text></g><g><title>createLock (logging/__init__.py) (1 samples, 0.11%)</title><rect x="18" y="340" width="2" height="15" fill="rgb(207,56,36)"/><text x="21.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.08%)</title><rect x="10" y="196" width="12" height="15" fill="rgb(233,109,16)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.08%)</title><rect x="10" y="212" width="12" height="15" fill="rgb(211,127,25)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.08%)</title><rect x="10" y="228" width="12" height="15" fill="rgb(217,178,11)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.08%)</title><rect x="10" y="244" width="12" height="15" fill="rgb(251,65,25)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.08%)</title><rect x="10" y="260" width="12" height="15" fill="rgb(228,140,47)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.08%)</title><rect x="10" y="276" width="12" height="15" fill="rgb(222,222,54)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.32%)</title><rect x="18" y="292" width="4" height="15" fill="rgb(247,214,16)"/><text x="21.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="308" width="2" height="15" fill="rgb(241,62,32)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="324" width="2" height="15" fill="rgb(215,92,12)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="340" width="2" height="15" fill="rgb(224,127,27)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="20" y="356" width="2" height="15" fill="rgb(207,142,31)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="372" width="2" height="15" fill="rgb(225,229,42)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.22%)</title><rect x="20" y="388" width="2" height="15" fill="rgb(228,57,11)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="404" width="2" height="15" fill="rgb(248,77,8)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="420" width="2" height="15" fill="rgb(220,224,1)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="436" width="2" height="15" fill="rgb(245,228,25)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="20" y="452" width="2" height="15" fill="rgb(234,132,38)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="468" width="2" height="15" fill="rgb(242,26,6)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.22%)</title><rect x="20" y="484" width="2" height="15" fill="rgb(220,109,53)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="500" width="2" height="15" fill="rgb(212,72,30)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="516" width="2" height="15" fill="rgb(244,64,12)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="532" width="2" height="15" fill="rgb(234,77,35)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="20" y="548" width="2" height="15" fill="rgb(241,84,16)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="564" width="2" height="15" fill="rgb(226,91,20)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.22%)</title><rect x="20" y="580" width="2" height="15" fill="rgb(234,50,40)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="596" width="2" height="15" fill="rgb(216,22,45)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="612" width="2" height="15" fill="rgb(205,200,14)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="628" width="2" height="15" fill="rgb(220,27,12)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="20" y="644" width="2" height="15" fill="rgb(213,103,21)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="660" width="2" height="15" fill="rgb(223,65,19)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.22%)</title><rect x="20" y="676" width="2" height="15" fill="rgb(239,22,54)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="692" width="2" height="15" fill="rgb(224,207,54)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="708" width="2" height="15" fill="rgb(253,71,43)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="724" width="2" height="15" fill="rgb(249,62,33)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="20" y="740" width="2" height="15" fill="rgb(213,8,22)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="756" width="2" height="15" fill="rgb(224,81,12)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.22%)</title><rect x="20" y="772" width="2" height="15" fill="rgb(242,179,33)"/><text x="23.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="788" width="2" height="15" fill="rgb(238,123,39)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="804" width="2" height="15" fill="rgb(206,196,14)"/><text x="23.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="820" width="2" height="15" fill="rgb(235,148,12)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="836" width="2" height="15" fill="rgb(250,140,16)"/><text x="23.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="852" width="2" height="15" fill="rgb(216,224,24)"/><text x="23.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="20" y="868" width="2" height="15" fill="rgb(224,226,6)"/><text x="23.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="884" width="2" height="15" fill="rgb(211,153,46)"/><text x="23.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.22%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(234,76,15)"/><text x="23.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(211,134,10)"/><text x="23.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(223,94,2)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(208,207,9)"/><text x="23.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(209,228,42)"/><text x="23.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="980" width="2" height="15" fill="rgb(231,114,46)"/><text x="23.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="20" y="996" width="2" height="15" fill="rgb(225,97,48)"/><text x="23.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="20" y="1012" width="2" height="15" fill="rgb(226,81,24)"/><text x="23.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py) (2 samples, 0.22%)</title><rect x="20" y="1028" width="2" height="15" fill="rgb(207,158,43)"/><text x="23.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.22%)</title><rect x="20" y="1044" width="2" height="15" fill="rgb(229,5,19)"/><text x="23.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (2 samples, 0.22%)</title><rect x="20" y="1060" width="2" height="15" fill="rgb(225,211,51)"/><text x="23.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.11%)</title><rect x="21" y="1076" width="1" height="15" fill="rgb(211,134,31)"/><text x="24.00" y="1086.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.11%)</title><rect x="21" y="1092" width="1" height="15" fill="rgb(235,183,19)"/><text x="24.00" y="1102.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="21" y="1108" width="1" height="15" fill="rgb(218,20,47)"/><text x="24.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="21" y="1124" width="1" height="15" fill="rgb(234,167,33)"/><text x="24.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="21" y="1140" width="1" height="15" fill="rgb(241,113,45)"/><text x="24.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.11%)</title><rect x="21" y="1156" width="1" height="15" fill="rgb(233,191,47)"/><text x="24.00" y="1166.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.11%)</title><rect x="21" y="1172" width="1" height="15" fill="rgb(235,54,54)"/><text x="24.00" y="1182.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1428" width="1" height="15" fill="rgb(220,64,26)"/><text x="25.00" y="1438.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1444" width="1" height="15" fill="rgb(221,5,45)"/><text x="25.00" y="1454.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.11%)</title><rect x="22" y="1460" width="1" height="15" fill="rgb(221,89,33)"/><text x="25.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1124" width="4" height="15" fill="rgb(236,179,26)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1140" width="4" height="15" fill="rgb(222,110,43)"/><text x="25.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1156" width="4" height="15" fill="rgb(254,20,2)"/><text x="25.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="22" y="1172" width="4" height="15" fill="rgb(210,151,17)"/><text x="25.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1188" width="4" height="15" fill="rgb(241,202,15)"/><text x="25.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (3 samples, 0.32%)</title><rect x="22" y="1204" width="4" height="15" fill="rgb(247,224,51)"/><text x="25.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1220" width="4" height="15" fill="rgb(219,95,32)"/><text x="25.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1236" width="4" height="15" fill="rgb(213,217,53)"/><text x="25.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1252" width="4" height="15" fill="rgb(248,126,27)"/><text x="25.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="22" y="1268" width="4" height="15" fill="rgb(223,158,4)"/><text x="25.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1284" width="4" height="15" fill="rgb(224,10,17)"/><text x="25.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (3 samples, 0.32%)</title><rect x="22" y="1300" width="4" height="15" fill="rgb(222,205,27)"/><text x="25.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1316" width="4" height="15" fill="rgb(251,218,21)"/><text x="25.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1332" width="4" height="15" fill="rgb(228,54,20)"/><text x="25.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1348" width="4" height="15" fill="rgb(230,177,19)"/><text x="25.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.32%)</title><rect x="22" y="1364" width="4" height="15" fill="rgb(240,121,3)"/><text x="25.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1380" width="4" height="15" fill="rgb(233,155,31)"/><text x="25.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/impute/__init__.py) (3 samples, 0.32%)</title><rect x="22" y="1396" width="4" height="15" fill="rgb(223,31,31)"/><text x="25.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="22" y="1412" width="4" height="15" fill="rgb(213,138,14)"/><text x="25.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="23" y="1428" width="3" height="15" fill="rgb(250,94,32)"/><text x="26.00" y="1438.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="23" y="1444" width="3" height="15" fill="rgb(244,14,52)"/><text x="26.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="484" width="5" height="15" fill="rgb(245,41,49)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="500" width="5" height="15" fill="rgb(224,32,24)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="516" width="5" height="15" fill="rgb(216,93,33)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="532" width="5" height="15" fill="rgb(212,205,17)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.43%)</title><rect x="22" y="548" width="5" height="15" fill="rgb(212,177,4)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="564" width="5" height="15" fill="rgb(238,20,39)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 0.43%)</title><rect x="22" y="580" width="5" height="15" fill="rgb(235,7,38)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="596" width="5" height="15" fill="rgb(251,53,48)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="612" width="5" height="15" fill="rgb(236,201,3)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="628" width="5" height="15" fill="rgb(223,91,8)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.43%)</title><rect x="22" y="644" width="5" height="15" fill="rgb(226,217,17)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="660" width="5" height="15" fill="rgb(228,222,33)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 0.43%)</title><rect x="22" y="676" width="5" height="15" fill="rgb(242,32,21)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="692" width="5" height="15" fill="rgb(234,3,43)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="708" width="5" height="15" fill="rgb(249,40,5)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="724" width="5" height="15" fill="rgb(253,50,50)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.43%)</title><rect x="22" y="740" width="5" height="15" fill="rgb(223,33,40)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="756" width="5" height="15" fill="rgb(221,162,12)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 0.43%)</title><rect x="22" y="772" width="5" height="15" fill="rgb(243,11,8)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="788" width="5" height="15" fill="rgb(233,125,51)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="804" width="5" height="15" fill="rgb(244,8,6)"/><text x="25.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="820" width="5" height="15" fill="rgb(227,6,48)"/><text x="25.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.43%)</title><rect x="22" y="836" width="5" height="15" fill="rgb(250,159,51)"/><text x="25.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="852" width="5" height="15" fill="rgb(252,58,16)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 0.43%)</title><rect x="22" y="868" width="5" height="15" fill="rgb(234,189,17)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="884" width="5" height="15" fill="rgb(215,28,17)"/><text x="25.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="900" width="5" height="15" fill="rgb(252,100,37)"/><text x="25.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="916" width="5" height="15" fill="rgb(238,60,48)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="932" width="5" height="15" fill="rgb(219,185,17)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="948" width="5" height="15" fill="rgb(251,191,40)"/><text x="25.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="964" width="5" height="15" fill="rgb(228,47,38)"/><text x="25.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.43%)</title><rect x="22" y="980" width="5" height="15" fill="rgb(231,208,26)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="996" width="5" height="15" fill="rgb(254,28,9)"/><text x="25.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 0.43%)</title><rect x="22" y="1012" width="5" height="15" fill="rgb(223,162,49)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="1028" width="5" height="15" fill="rgb(239,21,25)"/><text x="25.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="1044" width="5" height="15" fill="rgb(223,203,13)"/><text x="25.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="1060" width="5" height="15" fill="rgb(238,61,36)"/><text x="25.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.43%)</title><rect x="22" y="1076" width="5" height="15" fill="rgb(233,135,7)"/><text x="25.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="22" y="1092" width="5" height="15" fill="rgb(215,25,9)"/><text x="25.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 0.43%)</title><rect x="22" y="1108" width="5" height="15" fill="rgb(223,132,16)"/><text x="25.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1124" width="1" height="15" fill="rgb(252,207,24)"/><text x="29.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1140" width="1" height="15" fill="rgb(217,56,9)"/><text x="29.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1156" width="1" height="15" fill="rgb(234,185,30)"/><text x="29.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1172" width="1" height="15" fill="rgb(215,154,38)"/><text x="29.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1188" width="1" height="15" fill="rgb(235,15,38)"/><text x="29.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1204" width="1" height="15" fill="rgb(221,166,37)"/><text x="29.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1220" width="1" height="15" fill="rgb(240,12,31)"/><text x="29.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.11%)</title><rect x="26" y="1236" width="1" height="15" fill="rgb(242,138,50)"/><text x="29.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1252" width="1" height="15" fill="rgb(219,15,24)"/><text x="29.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1268" width="1" height="15" fill="rgb(219,121,5)"/><text x="29.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1284" width="1" height="15" fill="rgb(206,76,12)"/><text x="29.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1300" width="1" height="15" fill="rgb(232,206,11)"/><text x="29.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1316" width="1" height="15" fill="rgb(220,18,36)"/><text x="29.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1332" width="1" height="15" fill="rgb(238,72,32)"/><text x="29.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1348" width="1" height="15" fill="rgb(230,82,46)"/><text x="29.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.11%)</title><rect x="26" y="1364" width="1" height="15" fill="rgb(226,19,34)"/><text x="29.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1380" width="1" height="15" fill="rgb(253,67,27)"/><text x="29.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1396" width="1" height="15" fill="rgb(213,155,27)"/><text x="29.00" y="1406.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1412" width="1" height="15" fill="rgb(233,100,51)"/><text x="29.00" y="1422.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1428" width="1" height="15" fill="rgb(246,50,17)"/><text x="29.00" y="1438.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1444" width="1" height="15" fill="rgb(228,68,22)"/><text x="29.00" y="1454.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1460" width="1" height="15" fill="rgb(239,104,13)"/><text x="29.00" y="1470.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1476" width="1" height="15" fill="rgb(221,82,3)"/><text x="29.00" y="1486.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1492" width="1" height="15" fill="rgb(253,37,32)"/><text x="29.00" y="1502.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.54%)</title><rect x="22" y="340" width="7" height="15" fill="rgb(212,220,43)"/><text x="25.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="22" y="356" width="7" height="15" fill="rgb(222,24,5)"/><text x="25.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="22" y="372" width="7" height="15" fill="rgb(253,212,45)"/><text x="25.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="22" y="388" width="7" height="15" fill="rgb(205,79,0)"/><text x="25.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="22" y="404" width="7" height="15" fill="rgb(207,43,41)"/><text x="25.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="22" y="420" width="7" height="15" fill="rgb(232,207,32)"/><text x="25.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 0.54%)</title><rect x="22" y="436" width="7" height="15" fill="rgb(253,57,51)"/><text x="25.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="22" y="452" width="7" height="15" fill="rgb(248,126,23)"/><text x="25.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="22" y="468" width="7" height="15" fill="rgb(250,137,23)"/><text x="25.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="484" width="2" height="15" fill="rgb(240,52,29)"/><text x="30.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="500" width="2" height="15" fill="rgb(235,144,36)"/><text x="30.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="516" width="2" height="15" fill="rgb(240,11,46)"/><text x="30.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.11%)</title><rect x="27" y="532" width="2" height="15" fill="rgb(219,119,38)"/><text x="30.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="548" width="2" height="15" fill="rgb(237,100,41)"/><text x="30.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="564" width="2" height="15" fill="rgb(220,47,0)"/><text x="30.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="580" width="2" height="15" fill="rgb(211,74,42)"/><text x="30.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="596" width="2" height="15" fill="rgb(206,125,39)"/><text x="30.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="612" width="2" height="15" fill="rgb(254,116,31)"/><text x="30.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="628" width="2" height="15" fill="rgb(213,66,14)"/><text x="30.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="644" width="2" height="15" fill="rgb(251,141,49)"/><text x="30.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="660" width="2" height="15" fill="rgb(227,98,18)"/><text x="30.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="676" width="2" height="15" fill="rgb(243,3,44)"/><text x="30.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="692" width="2" height="15" fill="rgb(210,125,7)"/><text x="30.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="708" width="2" height="15" fill="rgb(221,180,2)"/><text x="30.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.11%)</title><rect x="27" y="724" width="2" height="15" fill="rgb(239,206,9)"/><text x="30.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="740" width="2" height="15" fill="rgb(226,129,51)"/><text x="30.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="756" width="2" height="15" fill="rgb(209,39,28)"/><text x="30.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="772" width="2" height="15" fill="rgb(221,164,14)"/><text x="30.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="788" width="2" height="15" fill="rgb(240,57,35)"/><text x="30.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="804" width="2" height="15" fill="rgb(227,163,40)"/><text x="30.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="820" width="2" height="15" fill="rgb(247,213,20)"/><text x="30.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="836" width="2" height="15" fill="rgb(233,219,27)"/><text x="30.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="852" width="2" height="15" fill="rgb(225,221,13)"/><text x="30.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="868" width="2" height="15" fill="rgb(235,188,0)"/><text x="30.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="884" width="2" height="15" fill="rgb(244,14,47)"/><text x="30.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="900" width="2" height="15" fill="rgb(223,119,14)"/><text x="30.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.11%)</title><rect x="27" y="916" width="2" height="15" fill="rgb(219,227,18)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="932" width="2" height="15" fill="rgb(205,147,9)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="948" width="2" height="15" fill="rgb(244,55,44)"/><text x="30.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="964" width="2" height="15" fill="rgb(235,168,44)"/><text x="30.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="980" width="2" height="15" fill="rgb(217,133,30)"/><text x="30.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="996" width="2" height="15" fill="rgb(229,43,23)"/><text x="30.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.11%)</title><rect x="27" y="1012" width="2" height="15" fill="rgb(233,165,34)"/><text x="30.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1028" width="2" height="15" fill="rgb(211,187,48)"/><text x="30.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1044" width="2" height="15" fill="rgb(246,63,15)"/><text x="30.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1060" width="2" height="15" fill="rgb(229,129,51)"/><text x="30.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1076" width="2" height="15" fill="rgb(223,32,5)"/><text x="30.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1092" width="2" height="15" fill="rgb(205,190,4)"/><text x="30.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.11%)</title><rect x="27" y="1108" width="2" height="15" fill="rgb(208,132,40)"/><text x="30.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1124" width="2" height="15" fill="rgb(236,42,51)"/><text x="30.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1140" width="2" height="15" fill="rgb(222,103,35)"/><text x="30.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1156" width="2" height="15" fill="rgb(230,144,21)"/><text x="30.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1172" width="2" height="15" fill="rgb(213,160,27)"/><text x="30.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1188" width="2" height="15" fill="rgb(209,212,8)"/><text x="30.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="1204" width="2" height="15" fill="rgb(252,0,3)"/><text x="30.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1220" width="2" height="15" fill="rgb(211,149,40)"/><text x="30.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1236" width="2" height="15" fill="rgb(247,31,1)"/><text x="30.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1252" width="2" height="15" fill="rgb(225,144,36)"/><text x="30.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1268" width="2" height="15" fill="rgb(221,35,15)"/><text x="30.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1284" width="2" height="15" fill="rgb(216,202,27)"/><text x="30.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.11%)</title><rect x="27" y="1300" width="2" height="15" fill="rgb(207,37,21)"/><text x="30.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1316" width="2" height="15" fill="rgb(217,72,39)"/><text x="30.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1332" width="2" height="15" fill="rgb(222,128,47)"/><text x="30.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1348" width="2" height="15" fill="rgb(233,113,4)"/><text x="30.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1364" width="2" height="15" fill="rgb(217,95,53)"/><text x="30.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1380" width="2" height="15" fill="rgb(233,109,3)"/><text x="30.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="1396" width="2" height="15" fill="rgb(208,108,45)"/><text x="30.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1412" width="2" height="15" fill="rgb(246,220,42)"/><text x="30.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1428" width="2" height="15" fill="rgb(252,98,6)"/><text x="30.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1444" width="2" height="15" fill="rgb(212,176,18)"/><text x="30.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1460" width="2" height="15" fill="rgb(216,89,37)"/><text x="30.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1476" width="2" height="15" fill="rgb(229,181,20)"/><text x="30.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.11%)</title><rect x="27" y="1492" width="2" height="15" fill="rgb(206,89,11)"/><text x="30.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1508" width="2" height="15" fill="rgb(251,105,32)"/><text x="30.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1524" width="2" height="15" fill="rgb(225,189,21)"/><text x="30.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1540" width="2" height="15" fill="rgb(216,140,7)"/><text x="30.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1556" width="2" height="15" fill="rgb(254,34,48)"/><text x="30.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1572" width="2" height="15" fill="rgb(225,188,20)"/><text x="30.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.11%)</title><rect x="27" y="1588" width="2" height="15" fill="rgb(241,87,52)"/><text x="30.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1604" width="2" height="15" fill="rgb(226,207,27)"/><text x="30.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1620" width="2" height="15" fill="rgb(247,32,24)"/><text x="30.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1636" width="2" height="15" fill="rgb(220,171,1)"/><text x="30.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1652" width="2" height="15" fill="rgb(243,197,45)"/><text x="30.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1668" width="2" height="15" fill="rgb(213,11,21)"/><text x="30.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.11%)</title><rect x="27" y="1684" width="2" height="15" fill="rgb(214,103,28)"/><text x="30.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1700" width="2" height="15" fill="rgb(224,19,12)"/><text x="30.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1716" width="2" height="15" fill="rgb(210,59,27)"/><text x="30.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1732" width="2" height="15" fill="rgb(212,167,29)"/><text x="30.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1748" width="2" height="15" fill="rgb(244,36,29)"/><text x="30.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1764" width="2" height="15" fill="rgb(253,113,54)"/><text x="30.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.11%)</title><rect x="27" y="1780" width="2" height="15" fill="rgb(205,39,46)"/><text x="30.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1796" width="2" height="15" fill="rgb(234,193,44)"/><text x="30.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1812" width="2" height="15" fill="rgb(207,135,5)"/><text x="30.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1828" width="2" height="15" fill="rgb(213,29,50)"/><text x="30.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1844" width="2" height="15" fill="rgb(240,117,38)"/><text x="30.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1860" width="2" height="15" fill="rgb(230,120,30)"/><text x="30.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.11%)</title><rect x="27" y="1876" width="2" height="15" fill="rgb(217,91,26)"/><text x="30.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1892" width="2" height="15" fill="rgb(214,131,20)"/><text x="30.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1908" width="2" height="15" fill="rgb(207,32,0)"/><text x="30.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1924" width="2" height="15" fill="rgb(238,154,43)"/><text x="30.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1940" width="2" height="15" fill="rgb(228,137,1)"/><text x="30.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1956" width="2" height="15" fill="rgb(234,155,16)"/><text x="30.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py) (1 samples, 0.11%)</title><rect x="27" y="1972" width="2" height="15" fill="rgb(247,59,22)"/><text x="30.00" y="1982.50"></text></g><g><title>json_load (matplotlib/font_manager.py) (1 samples, 0.11%)</title><rect x="27" y="1988" width="2" height="15" fill="rgb(215,219,30)"/><text x="30.00" y="1998.50"></text></g><g><title>load (json/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="2004" width="2" height="15" fill="rgb(209,180,53)"/><text x="30.00" y="2014.50"></text></g><g><title>loads (json/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="2020" width="2" height="15" fill="rgb(224,211,42)"/><text x="30.00" y="2030.50"></text></g><g><title>decode (json/decoder.py) (1 samples, 0.11%)</title><rect x="27" y="2036" width="2" height="15" fill="rgb(207,85,49)"/><text x="30.00" y="2046.50"></text></g><g><title>raw_decode (json/decoder.py) (1 samples, 0.11%)</title><rect x="27" y="2052" width="2" height="15" fill="rgb(207,191,16)"/><text x="30.00" y="2062.50"></text></g><g><title>0x7f610c340720 (?) (1 samples, 0.11%)</title><rect x="27" y="2068" width="2" height="15" fill="rgb(213,38,52)"/><text x="30.00" y="2078.50"></text></g><g><title>0x7f610c342568 (?) (1 samples, 0.11%)</title><rect x="27" y="2084" width="2" height="15" fill="rgb(224,13,54)"/><text x="30.00" y="2094.50"></text></g><g><title>0x7f610c3418fe (?) (1 samples, 0.11%)</title><rect x="27" y="2100" width="2" height="15" fill="rgb(250,27,45)"/><text x="30.00" y="2110.50"></text></g><g><title>0x7f610c34175d (?) (1 samples, 0.11%)</title><rect x="27" y="2116" width="2" height="15" fill="rgb(229,167,33)"/><text x="30.00" y="2126.50"></text></g><g><title>0x7f610c3420d5 (?) (1 samples, 0.11%)</title><rect x="27" y="2132" width="2" height="15" fill="rgb(235,115,13)"/><text x="30.00" y="2142.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.11%)</title><rect x="29" y="580" width="1" height="15" fill="rgb(237,41,53)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="596" width="1" height="15" fill="rgb(240,107,20)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="612" width="1" height="15" fill="rgb(215,223,2)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="628" width="1" height="15" fill="rgb(212,176,45)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="644" width="1" height="15" fill="rgb(215,118,47)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="660" width="1" height="15" fill="rgb(241,159,19)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.11%)</title><rect x="29" y="676" width="1" height="15" fill="rgb(224,134,33)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="692" width="1" height="15" fill="rgb(233,225,12)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="708" width="1" height="15" fill="rgb(214,12,11)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="724" width="1" height="15" fill="rgb(242,25,28)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="740" width="1" height="15" fill="rgb(235,59,40)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="756" width="1" height="15" fill="rgb(246,113,50)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.11%)</title><rect x="29" y="772" width="1" height="15" fill="rgb(220,78,7)"/><text x="32.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.11%)</title><rect x="29" y="788" width="1" height="15" fill="rgb(227,95,4)"/><text x="32.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="29" y="804" width="1" height="15" fill="rgb(224,91,3)"/><text x="32.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="29" y="820" width="1" height="15" fill="rgb(249,188,9)"/><text x="32.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="29" y="836" width="1" height="15" fill="rgb(247,205,45)"/><text x="32.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="29" y="852" width="1" height="15" fill="rgb(212,123,0)"/><text x="32.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="29" y="868" width="1" height="15" fill="rgb(248,16,24)"/><text x="32.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="29" y="884" width="1" height="15" fill="rgb(245,42,20)"/><text x="32.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="29" y="900" width="1" height="15" fill="rgb(243,3,31)"/><text x="32.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.11%)</title><rect x="29" y="916" width="1" height="15" fill="rgb(220,140,43)"/><text x="32.00" y="926.50"></text></g><g><title>__init__ (sre_parse.py) (1 samples, 0.11%)</title><rect x="29" y="932" width="1" height="15" fill="rgb(253,80,23)"/><text x="32.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 0.75%)</title><rect x="22" y="244" width="9" height="15" fill="rgb(226,212,50)"/><text x="25.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="22" y="260" width="9" height="15" fill="rgb(215,142,37)"/><text x="25.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="22" y="276" width="9" height="15" fill="rgb(253,32,26)"/><text x="25.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="22" y="292" width="9" height="15" fill="rgb(237,89,16)"/><text x="25.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.75%)</title><rect x="22" y="308" width="9" height="15" fill="rgb(216,79,18)"/><text x="25.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.75%)</title><rect x="22" y="324" width="9" height="15" fill="rgb(229,154,15)"/><text x="25.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.22%)</title><rect x="29" y="340" width="2" height="15" fill="rgb(236,110,8)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="29" y="356" width="2" height="15" fill="rgb(223,203,16)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="29" y="372" width="2" height="15" fill="rgb(226,167,0)"/><text x="32.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="29" y="388" width="2" height="15" fill="rgb(222,203,2)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="29" y="404" width="2" height="15" fill="rgb(219,90,48)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="29" y="420" width="2" height="15" fill="rgb(211,149,47)"/><text x="32.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="29" y="436" width="2" height="15" fill="rgb(206,204,29)"/><text x="32.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="29" y="452" width="2" height="15" fill="rgb(217,107,21)"/><text x="32.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="29" y="468" width="2" height="15" fill="rgb(249,46,50)"/><text x="32.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.22%)</title><rect x="29" y="484" width="2" height="15" fill="rgb(235,10,6)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="29" y="500" width="2" height="15" fill="rgb(227,174,18)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="29" y="516" width="2" height="15" fill="rgb(224,173,41)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="29" y="532" width="2" height="15" fill="rgb(210,205,53)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="29" y="548" width="2" height="15" fill="rgb(251,15,3)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="29" y="564" width="2" height="15" fill="rgb(224,108,17)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.11%)</title><rect x="30" y="580" width="1" height="15" fill="rgb(206,193,38)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="596" width="1" height="15" fill="rgb(250,50,17)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="612" width="1" height="15" fill="rgb(223,161,19)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="628" width="1" height="15" fill="rgb(214,24,21)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="644" width="1" height="15" fill="rgb(206,66,33)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="660" width="1" height="15" fill="rgb(206,96,28)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.11%)</title><rect x="30" y="676" width="1" height="15" fill="rgb(251,169,13)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="692" width="1" height="15" fill="rgb(241,108,2)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="708" width="1" height="15" fill="rgb(253,133,3)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="724" width="1" height="15" fill="rgb(225,209,47)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="740" width="1" height="15" fill="rgb(251,148,11)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="756" width="1" height="15" fill="rgb(235,219,23)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.11%)</title><rect x="30" y="772" width="1" height="15" fill="rgb(209,33,54)"/><text x="33.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="788" width="1" height="15" fill="rgb(231,217,12)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="804" width="1" height="15" fill="rgb(243,160,47)"/><text x="33.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="820" width="1" height="15" fill="rgb(246,202,12)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="836" width="1" height="15" fill="rgb(223,10,32)"/><text x="33.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="852" width="1" height="15" fill="rgb(251,215,11)"/><text x="33.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="868" width="1" height="15" fill="rgb(211,18,45)"/><text x="33.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="884" width="1" height="15" fill="rgb(219,219,17)"/><text x="33.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.11%)</title><rect x="30" y="900" width="1" height="15" fill="rgb(211,116,15)"/><text x="33.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="916" width="1" height="15" fill="rgb(248,24,26)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="932" width="1" height="15" fill="rgb(240,182,41)"/><text x="33.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="948" width="1" height="15" fill="rgb(222,34,20)"/><text x="33.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="964" width="1" height="15" fill="rgb(253,92,18)"/><text x="33.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="980" width="1" height="15" fill="rgb(235,206,17)"/><text x="33.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="996" width="1" height="15" fill="rgb(249,50,7)"/><text x="33.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1012" width="1" height="15" fill="rgb(211,155,21)"/><text x="33.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1028" width="1" height="15" fill="rgb(214,134,10)"/><text x="33.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.11%)</title><rect x="30" y="1044" width="1" height="15" fill="rgb(248,159,44)"/><text x="33.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1060" width="1" height="15" fill="rgb(254,223,16)"/><text x="33.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1076" width="1" height="15" fill="rgb(227,120,24)"/><text x="33.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1092" width="1" height="15" fill="rgb(251,153,28)"/><text x="33.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1108" width="1" height="15" fill="rgb(215,194,36)"/><text x="33.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1124" width="1" height="15" fill="rgb(239,87,28)"/><text x="33.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1140" width="1" height="15" fill="rgb(229,2,38)"/><text x="33.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1156" width="1" height="15" fill="rgb(210,7,18)"/><text x="33.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.11%)</title><rect x="30" y="1172" width="1" height="15" fill="rgb(216,125,11)"/><text x="33.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1188" width="1" height="15" fill="rgb(212,152,52)"/><text x="33.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1204" width="1" height="15" fill="rgb(227,185,20)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1220" width="1" height="15" fill="rgb(219,131,11)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1236" width="1" height="15" fill="rgb(234,49,15)"/><text x="33.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1252" width="1" height="15" fill="rgb(208,96,15)"/><text x="33.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1268" width="1" height="15" fill="rgb(221,128,42)"/><text x="33.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1284" width="1" height="15" fill="rgb(224,36,24)"/><text x="33.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py) (1 samples, 0.11%)</title><rect x="30" y="1300" width="1" height="15" fill="rgb(253,145,25)"/><text x="33.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1316" width="1" height="15" fill="rgb(217,84,35)"/><text x="33.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1332" width="1" height="15" fill="rgb(236,139,38)"/><text x="33.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1348" width="1" height="15" fill="rgb(230,79,16)"/><text x="33.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1364" width="1" height="15" fill="rgb(214,61,17)"/><text x="33.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1380" width="1" height="15" fill="rgb(245,99,10)"/><text x="33.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py) (1 samples, 0.11%)</title><rect x="30" y="1396" width="1" height="15" fill="rgb(227,224,47)"/><text x="33.00" y="1406.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1412" width="1" height="15" fill="rgb(227,209,12)"/><text x="33.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1428" width="1" height="15" fill="rgb(239,187,33)"/><text x="33.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1444" width="1" height="15" fill="rgb(233,147,24)"/><text x="33.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1460" width="1" height="15" fill="rgb(243,1,1)"/><text x="33.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1476" width="1" height="15" fill="rgb(229,79,47)"/><text x="33.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1492" width="1" height="15" fill="rgb(240,214,48)"/><text x="33.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1508" width="1" height="15" fill="rgb(251,119,39)"/><text x="33.00" y="1518.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/asymmetric/rsa.py) (1 samples, 0.11%)</title><rect x="30" y="1524" width="1" height="15" fill="rgb(248,81,23)"/><text x="33.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1540" width="1" height="15" fill="rgb(229,133,46)"/><text x="33.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1556" width="1" height="15" fill="rgb(251,215,26)"/><text x="33.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1572" width="1" height="15" fill="rgb(228,162,8)"/><text x="33.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1588" width="1" height="15" fill="rgb(249,185,47)"/><text x="33.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1604" width="1" height="15" fill="rgb(224,135,46)"/><text x="33.00" y="1614.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/interfaces.py) (1 samples, 0.11%)</title><rect x="30" y="1620" width="1" height="15" fill="rgb(207,203,48)"/><text x="33.00" y="1630.50"></text></g><g><title>wrapper (six.py) (1 samples, 0.11%)</title><rect x="30" y="1636" width="1" height="15" fill="rgb(228,60,33)"/><text x="33.00" y="1646.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.11%)</title><rect x="30" y="1652" width="1" height="15" fill="rgb(246,14,12)"/><text x="33.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="868" width="1" height="15" fill="rgb(239,137,42)"/><text x="34.00" y="878.50"></text></g><g><title>&lt;module&gt; (traceback.py) (1 samples, 0.11%)</title><rect x="31" y="884" width="1" height="15" fill="rgb(229,19,22)"/><text x="34.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="900" width="1" height="15" fill="rgb(217,11,9)"/><text x="34.00" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="916" width="1" height="15" fill="rgb(208,8,31)"/><text x="34.00" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="932" width="1" height="15" fill="rgb(228,149,35)"/><text x="34.00" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="948" width="1" height="15" fill="rgb(213,130,51)"/><text x="34.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="964" width="1" height="15" fill="rgb(232,157,32)"/><text x="34.00" y="974.50"></text></g><g><title>&lt;module&gt; (linecache.py) (1 samples, 0.11%)</title><rect x="31" y="980" width="1" height="15" fill="rgb(230,92,13)"/><text x="34.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="996" width="1" height="15" fill="rgb(240,87,14)"/><text x="34.00" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1012" width="1" height="15" fill="rgb(248,22,1)"/><text x="34.00" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1028" width="1" height="15" fill="rgb(249,136,53)"/><text x="34.00" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="1044" width="1" height="15" fill="rgb(216,96,13)"/><text x="34.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1060" width="1" height="15" fill="rgb(215,114,41)"/><text x="34.00" y="1070.50"></text></g><g><title>&lt;module&gt; (tokenize.py) (1 samples, 0.11%)</title><rect x="31" y="1076" width="1" height="15" fill="rgb(223,204,6)"/><text x="34.00" y="1086.50"></text></g><g><title>compile (re.py) (1 samples, 0.11%)</title><rect x="31" y="1092" width="1" height="15" fill="rgb(242,82,33)"/><text x="34.00" y="1102.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="31" y="1108" width="1" height="15" fill="rgb(239,212,39)"/><text x="34.00" y="1118.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="31" y="1124" width="1" height="15" fill="rgb(205,25,11)"/><text x="34.00" y="1134.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.11%)</title><rect x="31" y="1140" width="1" height="15" fill="rgb(233,213,22)"/><text x="34.00" y="1150.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="31" y="1156" width="1" height="15" fill="rgb(228,32,54)"/><text x="34.00" y="1166.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.22%)</title><rect x="31" y="372" width="3" height="15" fill="rgb(252,72,17)"/><text x="34.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="388" width="3" height="15" fill="rgb(218,77,4)"/><text x="34.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="404" width="3" height="15" fill="rgb(245,214,42)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="420" width="3" height="15" fill="rgb(239,136,36)"/><text x="34.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="436" width="3" height="15" fill="rgb(253,130,12)"/><text x="34.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="452" width="3" height="15" fill="rgb(246,136,50)"/><text x="34.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="31" y="468" width="3" height="15" fill="rgb(211,226,2)"/><text x="34.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="484" width="3" height="15" fill="rgb(249,120,37)"/><text x="34.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (2 samples, 0.22%)</title><rect x="31" y="500" width="3" height="15" fill="rgb(249,112,32)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="516" width="3" height="15" fill="rgb(235,111,0)"/><text x="34.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="532" width="3" height="15" fill="rgb(209,82,8)"/><text x="34.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="548" width="3" height="15" fill="rgb(250,224,4)"/><text x="34.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="31" y="564" width="3" height="15" fill="rgb(237,115,28)"/><text x="34.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="580" width="3" height="15" fill="rgb(221,100,43)"/><text x="34.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (2 samples, 0.22%)</title><rect x="31" y="596" width="3" height="15" fill="rgb(221,144,42)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="612" width="3" height="15" fill="rgb(206,26,3)"/><text x="34.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="628" width="3" height="15" fill="rgb(228,52,35)"/><text x="34.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="644" width="3" height="15" fill="rgb(249,219,28)"/><text x="34.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="31" y="660" width="3" height="15" fill="rgb(234,72,28)"/><text x="34.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="676" width="3" height="15" fill="rgb(249,228,18)"/><text x="34.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (2 samples, 0.22%)</title><rect x="31" y="692" width="3" height="15" fill="rgb(206,46,33)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="708" width="3" height="15" fill="rgb(222,213,36)"/><text x="34.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="724" width="3" height="15" fill="rgb(205,220,35)"/><text x="34.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="740" width="3" height="15" fill="rgb(215,138,29)"/><text x="34.00" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="31" y="756" width="3" height="15" fill="rgb(247,204,49)"/><text x="34.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="772" width="3" height="15" fill="rgb(220,207,10)"/><text x="34.00" y="782.50"></text></g><g><title>&lt;module&gt; (threading.py) (2 samples, 0.22%)</title><rect x="31" y="788" width="3" height="15" fill="rgb(252,46,51)"/><text x="34.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="804" width="3" height="15" fill="rgb(235,221,0)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="820" width="3" height="15" fill="rgb(248,141,21)"/><text x="34.00" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="836" width="3" height="15" fill="rgb(239,206,10)"/><text x="34.00" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="31" y="852" width="3" height="15" fill="rgb(209,175,18)"/><text x="34.00" y="862.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="32" y="868" width="2" height="15" fill="rgb(220,2,43)"/><text x="35.00" y="878.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="32" y="884" width="2" height="15" fill="rgb(213,145,21)"/><text x="35.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.11%)</title><rect x="34" y="372" width="1" height="15" fill="rgb(226,88,4)"/><text x="37.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="388" width="1" height="15" fill="rgb(212,91,20)"/><text x="37.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="404" width="1" height="15" fill="rgb(215,156,21)"/><text x="37.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="420" width="1" height="15" fill="rgb(229,17,32)"/><text x="37.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="34" y="436" width="1" height="15" fill="rgb(223,15,16)"/><text x="37.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="452" width="1" height="15" fill="rgb(221,214,42)"/><text x="37.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py) (1 samples, 0.11%)</title><rect x="34" y="468" width="1" height="15" fill="rgb(214,178,15)"/><text x="37.00" y="478.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="484" width="1" height="15" fill="rgb(250,194,9)"/><text x="37.00" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="500" width="1" height="15" fill="rgb(236,65,52)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="516" width="1" height="15" fill="rgb(229,99,47)"/><text x="37.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.26%)</title><rect x="10" y="68" width="26" height="15" fill="rgb(225,20,40)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.26%)</title><rect x="10" y="84" width="26" height="15" fill="rgb(238,188,15)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.26%)</title><rect x="10" y="100" width="26" height="15" fill="rgb(226,175,11)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 2.26%)</title><rect x="10" y="116" width="26" height="15" fill="rgb(235,152,32)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.26%)</title><rect x="10" y="132" width="26" height="15" fill="rgb(205,217,24)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py) (21 samples, 2.26%)</title><rect x="10" y="148" width="26" height="15" fill="rgb(242,188,38)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.26%)</title><rect x="10" y="164" width="26" height="15" fill="rgb(233,128,23)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.26%)</title><rect x="10" y="180" width="26" height="15" fill="rgb(243,172,17)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.18%)</title><rect x="22" y="196" width="14" height="15" fill="rgb(205,96,2)"/><text x="25.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.18%)</title><rect x="22" y="212" width="14" height="15" fill="rgb(252,27,2)"/><text x="25.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.18%)</title><rect x="22" y="228" width="14" height="15" fill="rgb(222,97,1)"/><text x="25.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (4 samples, 0.43%)</title><rect x="31" y="244" width="5" height="15" fill="rgb(226,54,11)"/><text x="34.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="31" y="260" width="5" height="15" fill="rgb(230,51,45)"/><text x="34.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="31" y="276" width="5" height="15" fill="rgb(220,180,51)"/><text x="34.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="31" y="292" width="5" height="15" fill="rgb(244,219,19)"/><text x="34.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="31" y="308" width="5" height="15" fill="rgb(238,20,17)"/><text x="34.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="31" y="324" width="5" height="15" fill="rgb(210,8,37)"/><text x="34.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.43%)</title><rect x="31" y="340" width="5" height="15" fill="rgb(213,15,19)"/><text x="34.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="31" y="356" width="5" height="15" fill="rgb(235,65,27)"/><text x="34.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/ma/__init__.py) (1 samples, 0.11%)</title><rect x="35" y="372" width="1" height="15" fill="rgb(250,97,16)"/><text x="38.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="388" width="1" height="15" fill="rgb(239,38,29)"/><text x="38.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="404" width="1" height="15" fill="rgb(223,198,9)"/><text x="38.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="420" width="1" height="15" fill="rgb(244,200,12)"/><text x="38.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="436" width="1" height="15" fill="rgb(223,78,49)"/><text x="38.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="452" width="1" height="15" fill="rgb(215,115,20)"/><text x="38.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="468" width="1" height="15" fill="rgb(214,208,11)"/><text x="38.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="484" width="1" height="15" fill="rgb(247,1,3)"/><text x="38.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/ma/core.py) (1 samples, 0.11%)</title><rect x="35" y="500" width="1" height="15" fill="rgb(225,179,11)"/><text x="38.00" y="510.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.11%)</title><rect x="35" y="516" width="1" height="15" fill="rgb(221,228,37)"/><text x="38.00" y="526.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.11%)</title><rect x="35" y="532" width="1" height="15" fill="rgb(243,128,0)"/><text x="38.00" y="542.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.11%)</title><rect x="35" y="548" width="1" height="15" fill="rgb(254,69,52)"/><text x="38.00" y="558.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.11%)</title><rect x="35" y="564" width="1" height="15" fill="rgb(244,102,46)"/><text x="38.00" y="574.50"></text></g><g><title>0x7f60db603ff9 (?) (1 samples, 0.11%)</title><rect x="40" y="212" width="1" height="15" fill="rgb(239,147,47)"/><text x="43.00" y="222.50"></text></g><g><title>0x7f60db5feef6 (?) (1 samples, 0.11%)</title><rect x="40" y="228" width="1" height="15" fill="rgb(239,218,38)"/><text x="43.00" y="238.50"></text></g><g><title>0x7f60db5f3962 (?) (1 samples, 0.11%)</title><rect x="40" y="244" width="1" height="15" fill="rgb(215,50,47)"/><text x="43.00" y="254.50"></text></g><g><title>0x7f60db6277a7 (?) (1 samples, 0.11%)</title><rect x="40" y="260" width="1" height="15" fill="rgb(212,16,46)"/><text x="43.00" y="270.50"></text></g><g><title>0x7f60db627379 (?) (1 samples, 0.11%)</title><rect x="40" y="276" width="1" height="15" fill="rgb(235,39,18)"/><text x="43.00" y="286.50"></text></g><g><title>0x7f60dba858b8 (?) (1 samples, 0.11%)</title><rect x="40" y="292" width="1" height="15" fill="rgb(248,124,18)"/><text x="43.00" y="302.50"></text></g><g><title>0x7f60dba83c7f (?) (1 samples, 0.11%)</title><rect x="40" y="308" width="1" height="15" fill="rgb(247,179,13)"/><text x="43.00" y="318.50"></text></g><g><title>0x7f60dba9699c (?) (1 samples, 0.11%)</title><rect x="40" y="324" width="1" height="15" fill="rgb(213,146,31)"/><text x="43.00" y="334.50"></text></g><g><title>0x7f60db7b4396 (?) (1 samples, 0.11%)</title><rect x="40" y="340" width="1" height="15" fill="rgb(206,172,32)"/><text x="43.00" y="350.50"></text></g><g><title>0x7f60db5e1dfc (?) (1 samples, 0.11%)</title><rect x="40" y="356" width="1" height="15" fill="rgb(217,151,23)"/><text x="43.00" y="366.50"></text></g><g><title>0x7f60db60f7a7 (?) (1 samples, 0.11%)</title><rect x="40" y="372" width="1" height="15" fill="rgb(207,108,18)"/><text x="43.00" y="382.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="41" y="340" width="3" height="15" fill="rgb(242,123,4)"/><text x="44.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="43" y="356" width="1" height="15" fill="rgb(221,182,3)"/><text x="46.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="43" y="372" width="1" height="15" fill="rgb(211,14,2)"/><text x="46.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="44" y="340" width="1" height="15" fill="rgb(229,176,29)"/><text x="47.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="44" y="356" width="1" height="15" fill="rgb(207,59,40)"/><text x="47.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="44" y="372" width="1" height="15" fill="rgb(232,163,24)"/><text x="47.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="44" y="388" width="1" height="15" fill="rgb(234,84,33)"/><text x="47.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="44" y="404" width="1" height="15" fill="rgb(238,10,51)"/><text x="47.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="44" y="420" width="1" height="15" fill="rgb(215,124,51)"/><text x="47.00" y="430.50"></text></g><g><title>0x7f61200ec028 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="44" y="436" width="1" height="15" fill="rgb(254,113,24)"/><text x="47.00" y="446.50"></text></g><g><title>0x7f61200e9bd1 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="44" y="452" width="1" height="15" fill="rgb(215,165,21)"/><text x="47.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="45" y="340" width="3" height="15" fill="rgb(211,35,28)"/><text x="48.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="45" y="356" width="3" height="15" fill="rgb(220,96,16)"/><text x="48.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="45" y="372" width="3" height="15" fill="rgb(253,144,26)"/><text x="48.00" y="382.50"></text></g><g><title>0x7f61200ead13 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="46" y="388" width="2" height="15" fill="rgb(245,112,13)"/><text x="49.00" y="398.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.18%)</title><rect x="48" y="340" width="14" height="15" fill="rgb(223,55,50)"/><text x="51.00" y="350.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 1.94%)</title><rect x="62" y="340" width="22" height="15" fill="rgb(215,212,21)"/><text x="65.00" y="350.50">o..</text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 1.94%)</title><rect x="62" y="356" width="22" height="15" fill="rgb(227,171,41)"/><text x="65.00" y="366.50">o..</text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 1.94%)</title><rect x="62" y="372" width="22" height="15" fill="rgb(253,45,45)"/><text x="65.00" y="382.50">o..</text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.18%)</title><rect x="70" y="388" width="14" height="15" fill="rgb(206,63,42)"/><text x="73.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.32%)</title><rect x="84" y="340" width="4" height="15" fill="rgb(212,167,39)"/><text x="87.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="87" y="356" width="1" height="15" fill="rgb(205,110,30)"/><text x="90.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="87" y="372" width="1" height="15" fill="rgb(213,90,31)"/><text x="90.00" y="382.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="88" y="340" width="2" height="15" fill="rgb(205,150,54)"/><text x="91.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="88" y="356" width="2" height="15" fill="rgb(238,3,1)"/><text x="91.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="88" y="372" width="2" height="15" fill="rgb(217,81,47)"/><text x="91.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="88" y="388" width="2" height="15" fill="rgb(249,123,6)"/><text x="91.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="88" y="404" width="2" height="15" fill="rgb(215,146,34)"/><text x="91.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="88" y="420" width="2" height="15" fill="rgb(244,213,50)"/><text x="91.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="88" y="436" width="2" height="15" fill="rgb(231,193,29)"/><text x="91.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="88" y="452" width="2" height="15" fill="rgb(237,177,11)"/><text x="91.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="88" y="468" width="2" height="15" fill="rgb(227,158,16)"/><text x="91.00" y="478.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.72%)</title><rect x="90" y="372" width="20" height="15" fill="rgb(229,115,14)"/><text x="93.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="105" y="388" width="5" height="15" fill="rgb(236,20,16)"/><text x="108.00" y="398.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.83%)</title><rect x="90" y="340" width="21" height="15" fill="rgb(228,138,25)"/><text x="93.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.83%)</title><rect x="90" y="356" width="21" height="15" fill="rgb(206,21,18)"/><text x="93.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="110" y="372" width="1" height="15" fill="rgb(218,125,9)"/><text x="113.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="110" y="388" width="1" height="15" fill="rgb(227,215,3)"/><text x="113.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="110" y="404" width="1" height="15" fill="rgb(247,208,44)"/><text x="113.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="110" y="420" width="1" height="15" fill="rgb(210,49,48)"/><text x="113.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="110" y="436" width="1" height="15" fill="rgb(212,90,21)"/><text x="113.00" y="446.50"></text></g><g><title>0x7f60db5cb9d0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="164" y="356" width="2" height="15" fill="rgb(211,132,0)"/><text x="167.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.54%)</title><rect x="166" y="356" width="6" height="15" fill="rgb(229,137,22)"/><text x="169.00" y="366.50"></text></g><g><title>0x7f610fbb6d50 (libstdc++.so.6.0.28) (3 samples, 0.32%)</title><rect x="264" y="404" width="3" height="15" fill="rgb(212,12,24)"/><text x="267.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (25 samples, 2.69%)</title><rect x="261" y="388" width="32" height="15" fill="rgb(232,130,3)"/><text x="264.00" y="398.50">op..</text></g><g><title>malloc (libc-2.29.so) (20 samples, 2.15%)</title><rect x="267" y="404" width="26" height="15" fill="rgb(206,178,54)"/><text x="270.00" y="414.50">m..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 11.84%)</title><rect x="172" y="356" width="140" height="15" fill="rgb(220,213,1)"/><text x="175.00" y="366.50">onnxruntime::ml::..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 6.78%)</title><rect x="232" y="372" width="80" height="15" fill="rgb(237,119,22)"/><text x="235.00" y="382.50">std::_Rb_..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (15 samples, 1.61%)</title><rect x="293" y="388" width="19" height="15" fill="rgb(212,193,37)"/><text x="296.00" y="398.50"></text></g><g><title>0x7f612010ad50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="327" y="372" width="1" height="15" fill="rgb(231,19,16)"/><text x="330.00" y="382.50"></text></g><g><title>0x7f612010adae (libc-2.29.so) (1 samples, 0.11%)</title><rect x="328" y="372" width="2" height="15" fill="rgb(232,98,49)"/><text x="331.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.61%)</title><rect x="312" y="356" width="19" height="15" fill="rgb(237,20,38)"/><text x="315.00" y="366.50"></text></g><g><title>0x7f612010adbe (libc-2.29.so) (1 samples, 0.11%)</title><rect x="330" y="372" width="1" height="15" fill="rgb(250,70,39)"/><text x="333.00" y="382.50"></text></g><g><title>0x7f61200ea906 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="335" y="372" width="2" height="15" fill="rgb(220,49,6)"/><text x="338.00" y="382.50"></text></g><g><title>0x7f61200ea908 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="337" y="372" width="1" height="15" fill="rgb(211,199,48)"/><text x="340.00" y="382.50"></text></g><g><title>0x7f61200ea91c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="338" y="372" width="2" height="15" fill="rgb(240,12,9)"/><text x="341.00" y="382.50"></text></g><g><title>0x7f61200ea91e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="340" y="372" width="1" height="15" fill="rgb(228,209,44)"/><text x="343.00" y="382.50"></text></g><g><title>0x7f61200ea929 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="341" y="372" width="1" height="15" fill="rgb(251,96,25)"/><text x="344.00" y="382.50"></text></g><g><title>0x7f61200ea92c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="342" y="372" width="2" height="15" fill="rgb(242,138,44)"/><text x="345.00" y="382.50"></text></g><g><title>0x7f61200ea938 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="344" y="372" width="1" height="15" fill="rgb(215,97,30)"/><text x="347.00" y="382.50"></text></g><g><title>0x7f61200ea96a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="345" y="372" width="1" height="15" fill="rgb(246,137,46)"/><text x="348.00" y="382.50"></text></g><g><title>0x7f61200ea991 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="346" y="372" width="3" height="15" fill="rgb(225,197,16)"/><text x="349.00" y="382.50"></text></g><g><title>0x7f61200ea998 (libc-2.29.so) (3 samples, 0.32%)</title><rect x="349" y="372" width="3" height="15" fill="rgb(216,111,49)"/><text x="352.00" y="382.50"></text></g><g><title>0x7f61200eaa38 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="352" y="372" width="2" height="15" fill="rgb(225,188,33)"/><text x="355.00" y="382.50"></text></g><g><title>0x7f61200eaa41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="354" y="372" width="1" height="15" fill="rgb(248,221,11)"/><text x="357.00" y="382.50"></text></g><g><title>0x7f61200eaa4c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="355" y="372" width="1" height="15" fill="rgb(227,152,24)"/><text x="358.00" y="382.50"></text></g><g><title>0x7f61200eaa55 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="356" y="372" width="2" height="15" fill="rgb(212,96,7)"/><text x="359.00" y="382.50"></text></g><g><title>0x7f61200eabc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="358" y="372" width="1" height="15" fill="rgb(234,65,46)"/><text x="361.00" y="382.50"></text></g><g><title>0x7f61200eabd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="359" y="372" width="1" height="15" fill="rgb(205,140,28)"/><text x="362.00" y="382.50"></text></g><g><title>0x7f61200eabe4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="360" y="372" width="1" height="15" fill="rgb(214,131,3)"/><text x="363.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (7 samples, 0.75%)</title><rect x="361" y="372" width="9" height="15" fill="rgb(230,14,27)"/><text x="364.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="370" y="372" width="2" height="15" fill="rgb(218,191,36)"/><text x="373.00" y="382.50"></text></g><g><title>0x7f61200ea902 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="382" y="388" width="2" height="15" fill="rgb(212,214,18)"/><text x="385.00" y="398.50"></text></g><g><title>0x7f61200ea90a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="384" y="388" width="1" height="15" fill="rgb(209,107,2)"/><text x="387.00" y="398.50"></text></g><g><title>0x7f61200ea965 (libc-2.29.so) (3 samples, 0.32%)</title><rect x="385" y="388" width="4" height="15" fill="rgb(248,211,46)"/><text x="388.00" y="398.50"></text></g><g><title>0x7f61200ea96a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="389" y="388" width="2" height="15" fill="rgb(240,43,29)"/><text x="392.00" y="398.50"></text></g><g><title>0x7f61200ea97c (libc-2.29.so) (2 samples, 0.22%)</title><rect x="391" y="388" width="2" height="15" fill="rgb(210,154,38)"/><text x="394.00" y="398.50"></text></g><g><title>0x7f61200ea991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="393" y="388" width="1" height="15" fill="rgb(237,195,33)"/><text x="396.00" y="398.50"></text></g><g><title>0x7f61200eabe8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="394" y="388" width="2" height="15" fill="rgb(243,182,3)"/><text x="397.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (52 samples, 5.60%)</title><rect x="331" y="356" width="66" height="15" fill="rgb(245,121,10)"/><text x="334.00" y="366.50">std::_R..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 2.15%)</title><rect x="372" y="372" width="25" height="15" fill="rgb(216,41,18)"/><text x="375.00" y="382.50">s..</text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="396" y="388" width="1" height="15" fill="rgb(228,216,30)"/><text x="399.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (229 samples, 24.65%)</title><rect x="111" y="340" width="291" height="15" fill="rgb(221,170,13)"/><text x="114.00" y="350.50">onnxruntime::ml::TreeEnsembleClassifier..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (4 samples, 0.43%)</title><rect x="397" y="356" width="5" height="15" fill="rgb(230,214,44)"/><text x="400.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 31.00%)</title><rect x="41" y="260" width="366" height="15" fill="rgb(211,166,1)"/><text x="44.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/c..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 31.00%)</title><rect x="41" y="276" width="366" height="15" fill="rgb(205,45,27)"/><text x="44.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/c..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 31.00%)</title><rect x="41" y="292" width="366" height="15" fill="rgb(224,30,34)"/><text x="44.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/cap..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 31.00%)</title><rect x="41" y="308" width="366" height="15" fill="rgb(243,32,26)"/><text x="44.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (288 samples, 31.00%)</title><rect x="41" y="324" width="366" height="15" fill="rgb(236,92,47)"/><text x="44.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrun..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="402" y="340" width="5" height="15" fill="rgb(242,170,14)"/><text x="405.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.32%)</title><rect x="403" y="356" width="4" height="15" fill="rgb(228,168,16)"/><text x="406.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.32%)</title><rect x="403" y="372" width="4" height="15" fill="rgb(242,32,33)"/><text x="406.00" y="382.50"></text></g><g><title>0x7f60db5ca8e0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="410" y="276" width="2" height="15" fill="rgb(252,57,15)"/><text x="413.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.75%)</title><rect x="407" y="260" width="9" height="15" fill="rgb(240,74,41)"/><text x="410.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.32%)</title><rect x="412" y="276" width="4" height="15" fill="rgb(223,25,16)"/><text x="415.00" y="286.50"></text></g><g><title>0x7f61200eaa51 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="416" y="292" width="1" height="15" fill="rgb(213,52,1)"/><text x="419.00" y="302.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py) (301 samples, 32.40%)</title><rect x="36" y="100" width="382" height="15" fill="rgb(244,211,12)"/><text x="39.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (298 samples, 32.08%)</title><rect x="40" y="116" width="378" height="15" fill="rgb(222,109,39)"/><text x="43.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (298 samples, 32.08%)</title><rect x="40" y="132" width="378" height="15" fill="rgb(248,57,30)"/><text x="43.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (298 samples, 32.08%)</title><rect x="40" y="148" width="378" height="15" fill="rgb(247,175,36)"/><text x="43.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (298 samples, 32.08%)</title><rect x="40" y="164" width="378" height="15" fill="rgb(227,153,10)"/><text x="43.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (298 samples, 32.08%)</title><rect x="40" y="180" width="378" height="15" fill="rgb(219,199,11)"/><text x="43.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (298 samples, 32.08%)</title><rect x="40" y="196" width="378" height="15" fill="rgb(242,19,27)"/><text x="43.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (297 samples, 31.97%)</title><rect x="41" y="212" width="377" height="15" fill="rgb(237,67,3)"/><text x="44.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/cap..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (297 samples, 31.97%)</title><rect x="41" y="228" width="377" height="15" fill="rgb(222,60,52)"/><text x="44.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (297 samples, 31.97%)</title><rect x="41" y="244" width="377" height="15" fill="rgb(213,32,47)"/><text x="44.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::mod..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="416" y="260" width="2" height="15" fill="rgb(210,52,0)"/><text x="419.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="416" y="276" width="2" height="15" fill="rgb(216,71,41)"/><text x="419.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="417" y="292" width="1" height="15" fill="rgb(218,191,17)"/><text x="420.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="417" y="308" width="1" height="15" fill="rgb(216,48,51)"/><text x="420.00" y="318.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="418" y="244" width="2" height="15" fill="rgb(223,151,45)"/><text x="421.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="418" y="260" width="2" height="15" fill="rgb(209,102,40)"/><text x="421.00" y="270.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (2 samples, 0.22%)</title><rect x="418" y="196" width="3" height="15" fill="rgb(253,124,46)"/><text x="421.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (2 samples, 0.22%)</title><rect x="418" y="212" width="3" height="15" fill="rgb(222,143,49)"/><text x="421.00" y="222.50"></text></g><g><title>apply_reshape (onnxconverter_common/onnx_ops.py) (2 samples, 0.22%)</title><rect x="418" y="228" width="3" height="15" fill="rgb(243,31,13)"/><text x="421.00" y="238.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="420" y="244" width="1" height="15" fill="rgb(210,142,31)"/><text x="423.00" y="254.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="420" y="260" width="1" height="15" fill="rgb(221,191,22)"/><text x="423.00" y="270.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py) (304 samples, 32.72%)</title><rect x="36" y="68" width="386" height="15" fill="rgb(244,45,53)"/><text x="39.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_b_cl_6..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py) (304 samples, 32.72%)</title><rect x="36" y="84" width="386" height="15" fill="rgb(239,3,10)"/><text x="39.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.32%)</title><rect x="418" y="100" width="4" height="15" fill="rgb(226,202,38)"/><text x="421.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.32%)</title><rect x="418" y="116" width="4" height="15" fill="rgb(206,169,29)"/><text x="421.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.32%)</title><rect x="418" y="132" width="4" height="15" fill="rgb(245,120,13)"/><text x="421.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (3 samples, 0.32%)</title><rect x="418" y="148" width="4" height="15" fill="rgb(208,132,0)"/><text x="421.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (3 samples, 0.32%)</title><rect x="418" y="164" width="4" height="15" fill="rgb(221,10,52)"/><text x="421.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (3 samples, 0.32%)</title><rect x="418" y="180" width="4" height="15" fill="rgb(232,153,29)"/><text x="421.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py) (1 samples, 0.11%)</title><rect x="421" y="196" width="1" height="15" fill="rgb(226,110,32)"/><text x="424.00" y="206.50"></text></g><g><title>get_unique_operator_name (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="421" y="212" width="1" height="15" fill="rgb(229,229,26)"/><text x="424.00" y="222.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="421" y="228" width="1" height="15" fill="rgb(231,30,11)"/><text x="424.00" y="238.50"></text></g><g><title>sub (re.py) (1 samples, 0.11%)</title><rect x="421" y="244" width="1" height="15" fill="rgb(217,45,12)"/><text x="424.00" y="254.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="421" y="260" width="1" height="15" fill="rgb(223,181,8)"/><text x="424.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.22%)</title><rect x="460" y="196" width="3" height="15" fill="rgb(223,201,30)"/><text x="463.00" y="206.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.11%)</title><rect x="469" y="292" width="2" height="15" fill="rgb(243,12,52)"/><text x="472.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.11%)</title><rect x="469" y="308" width="2" height="15" fill="rgb(247,170,6)"/><text x="472.00" y="318.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.22%)</title><rect x="469" y="276" width="3" height="15" fill="rgb(254,15,51)"/><text x="472.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.11%)</title><rect x="471" y="292" width="1" height="15" fill="rgb(213,93,32)"/><text x="474.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (3 samples, 0.32%)</title><rect x="469" y="212" width="4" height="15" fill="rgb(237,51,19)"/><text x="472.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.32%)</title><rect x="469" y="228" width="4" height="15" fill="rgb(205,38,25)"/><text x="472.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (3 samples, 0.32%)</title><rect x="469" y="244" width="4" height="15" fill="rgb(245,22,7)"/><text x="472.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.32%)</title><rect x="469" y="260" width="4" height="15" fill="rgb(207,87,1)"/><text x="472.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="472" y="276" width="1" height="15" fill="rgb(245,48,12)"/><text x="475.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_equal.py) (1 samples, 0.11%)</title><rect x="473" y="212" width="1" height="15" fill="rgb(229,158,11)"/><text x="476.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="473" y="228" width="1" height="15" fill="rgb(233,226,11)"/><text x="476.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="473" y="244" width="1" height="15" fill="rgb(240,17,10)"/><text x="476.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="473" y="260" width="1" height="15" fill="rgb(246,141,40)"/><text x="476.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="473" y="276" width="1" height="15" fill="rgb(208,213,44)"/><text x="476.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="473" y="292" width="1" height="15" fill="rgb(243,106,2)"/><text x="476.00" y="302.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.11%)</title><rect x="473" y="308" width="1" height="15" fill="rgb(245,139,28)"/><text x="476.00" y="318.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.11%)</title><rect x="474" y="244" width="2" height="15" fill="rgb(242,93,6)"/><text x="477.00" y="254.50"></text></g><g><title>0x7f6120100730 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="474" y="260" width="2" height="15" fill="rgb(219,171,31)"/><text x="477.00" y="270.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="478" y="292" width="1" height="15" fill="rgb(239,182,50)"/><text x="481.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (4 samples, 0.43%)</title><rect x="476" y="244" width="5" height="15" fill="rgb(230,44,48)"/><text x="479.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (4 samples, 0.43%)</title><rect x="476" y="260" width="5" height="15" fill="rgb(252,74,1)"/><text x="479.00" y="270.50"></text></g><g><title>array_item (mapping.c) (2 samples, 0.22%)</title><rect x="478" y="276" width="3" height="15" fill="rgb(208,106,9)"/><text x="481.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.11%)</title><rect x="479" y="292" width="2" height="15" fill="rgb(226,0,25)"/><text x="482.00" y="302.50"></text></g><g><title>scalar_value (scalarapi.c) (1 samples, 0.11%)</title><rect x="479" y="308" width="2" height="15" fill="rgb(222,37,34)"/><text x="482.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (6 samples, 0.65%)</title><rect x="474" y="212" width="8" height="15" fill="rgb(245,98,30)"/><text x="477.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (6 samples, 0.65%)</title><rect x="474" y="228" width="8" height="15" fill="rgb(214,18,54)"/><text x="477.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.11%)</title><rect x="481" y="244" width="1" height="15" fill="rgb(205,48,2)"/><text x="484.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.11%)</title><rect x="481" y="260" width="1" height="15" fill="rgb(241,229,18)"/><text x="484.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="481" y="276" width="1" height="15" fill="rgb(236,223,22)"/><text x="484.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="482" y="276" width="1" height="15" fill="rgb(239,195,30)"/><text x="485.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="482" y="292" width="1" height="15" fill="rgb(243,100,22)"/><text x="485.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.11%)</title><rect x="482" y="308" width="1" height="15" fill="rgb(211,204,7)"/><text x="485.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.11%)</title><rect x="482" y="324" width="1" height="15" fill="rgb(240,173,47)"/><text x="485.00" y="334.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="483" y="356" width="2" height="15" fill="rgb(229,40,36)"/><text x="486.00" y="366.50"></text></g><g><title>array_add (number.c) (4 samples, 0.43%)</title><rect x="482" y="228" width="5" height="15" fill="rgb(244,54,10)"/><text x="485.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.43%)</title><rect x="482" y="244" width="5" height="15" fill="rgb(242,28,38)"/><text x="485.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.43%)</title><rect x="482" y="260" width="5" height="15" fill="rgb(222,113,2)"/><text x="485.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.32%)</title><rect x="483" y="276" width="4" height="15" fill="rgb(210,58,6)"/><text x="486.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (3 samples, 0.32%)</title><rect x="483" y="292" width="4" height="15" fill="rgb(230,220,30)"/><text x="486.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (3 samples, 0.32%)</title><rect x="483" y="308" width="4" height="15" fill="rgb(235,116,52)"/><text x="486.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (3 samples, 0.32%)</title><rect x="483" y="324" width="4" height="15" fill="rgb(212,119,53)"/><text x="486.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (3 samples, 0.32%)</title><rect x="483" y="340" width="4" height="15" fill="rgb(215,50,21)"/><text x="486.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.22%)</title><rect x="485" y="356" width="2" height="15" fill="rgb(212,185,36)"/><text x="488.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (5 samples, 0.54%)</title><rect x="482" y="212" width="6" height="15" fill="rgb(232,215,36)"/><text x="485.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="487" y="228" width="1" height="15" fill="rgb(215,25,28)"/><text x="490.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="487" y="244" width="1" height="15" fill="rgb(219,102,43)"/><text x="490.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="487" y="260" width="1" height="15" fill="rgb(225,36,15)"/><text x="490.00" y="270.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.11%)</title><rect x="487" y="276" width="1" height="15" fill="rgb(212,156,14)"/><text x="490.00" y="286.50"></text></g><g><title>0x7f61200eab87 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="487" y="292" width="1" height="15" fill="rgb(236,198,45)"/><text x="490.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.32%)</title><rect x="499" y="260" width="3" height="15" fill="rgb(249,98,6)"/><text x="502.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.32%)</title><rect x="499" y="276" width="3" height="15" fill="rgb(240,106,51)"/><text x="502.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (3 samples, 0.32%)</title><rect x="499" y="292" width="3" height="15" fill="rgb(233,86,29)"/><text x="502.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="501" y="308" width="1" height="15" fill="rgb(250,133,19)"/><text x="504.00" y="318.50"></text></g><g><title>PyUFunc_MultiplicationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="502" y="276" width="2" height="15" fill="rgb(239,99,28)"/><text x="505.00" y="286.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="504" y="276" width="1" height="15" fill="rgb(220,42,3)"/><text x="507.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="504" y="292" width="1" height="15" fill="rgb(249,211,4)"/><text x="507.00" y="302.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="504" y="308" width="1" height="15" fill="rgb(246,150,38)"/><text x="507.00" y="318.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="504" y="324" width="1" height="15" fill="rgb(232,40,24)"/><text x="507.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.11%)</title><rect x="505" y="292" width="1" height="15" fill="rgb(206,10,47)"/><text x="508.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.11%)</title><rect x="505" y="308" width="1" height="15" fill="rgb(209,106,7)"/><text x="508.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.11%)</title><rect x="505" y="324" width="1" height="15" fill="rgb(218,101,43)"/><text x="508.00" y="334.50"></text></g><g><title>FLOAT_multiply (loops.c.src) (1 samples, 0.11%)</title><rect x="506" y="308" width="1" height="15" fill="rgb(227,99,40)"/><text x="509.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="509" y="324" width="1" height="15" fill="rgb(244,149,3)"/><text x="512.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.11%)</title><rect x="510" y="324" width="1" height="15" fill="rgb(236,79,24)"/><text x="513.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="511" y="324" width="1" height="15" fill="rgb(205,217,18)"/><text x="514.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.54%)</title><rect x="507" y="308" width="7" height="15" fill="rgb(210,98,15)"/><text x="510.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.11%)</title><rect x="512" y="324" width="2" height="15" fill="rgb(253,74,28)"/><text x="515.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="514" y="308" width="1" height="15" fill="rgb(254,152,38)"/><text x="517.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="514" y="324" width="1" height="15" fill="rgb(235,155,28)"/><text x="517.00" y="334.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.11%)</title><rect x="515" y="308" width="1" height="15" fill="rgb(230,102,47)"/><text x="518.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.22%)</title><rect x="516" y="308" width="3" height="15" fill="rgb(252,146,17)"/><text x="519.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.22%)</title><rect x="516" y="324" width="3" height="15" fill="rgb(235,19,26)"/><text x="519.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.22%)</title><rect x="516" y="340" width="3" height="15" fill="rgb(208,175,35)"/><text x="519.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="518" y="356" width="1" height="15" fill="rgb(253,52,18)"/><text x="521.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="519" y="308" width="1" height="15" fill="rgb(253,12,5)"/><text x="522.00" y="318.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (2 samples, 0.22%)</title><rect x="520" y="308" width="3" height="15" fill="rgb(232,203,12)"/><text x="523.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="521" y="324" width="2" height="15" fill="rgb(223,115,32)"/><text x="524.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (16 samples, 1.72%)</title><rect x="505" y="276" width="20" height="15" fill="rgb(210,33,35)"/><text x="508.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (15 samples, 1.61%)</title><rect x="506" y="292" width="19" height="15" fill="rgb(226,210,11)"/><text x="509.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src) (2 samples, 0.22%)</title><rect x="523" y="308" width="2" height="15" fill="rgb(235,131,3)"/><text x="526.00" y="318.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="524" y="324" width="1" height="15" fill="rgb(205,44,23)"/><text x="527.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (28 samples, 3.01%)</title><rect x="491" y="228" width="35" height="15" fill="rgb(218,61,37)"/><text x="494.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 2.37%)</title><rect x="499" y="244" width="27" height="15" fill="rgb(207,43,34)"/><text x="502.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (19 samples, 2.05%)</title><rect x="502" y="260" width="24" height="15" fill="rgb(218,33,47)"/><text x="505.00" y="270.50">P..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="525" y="276" width="1" height="15" fill="rgb(211,219,48)"/><text x="528.00" y="286.50"></text></g><g><title>0x7f611f30dc90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="525" y="292" width="1" height="15" fill="rgb(253,194,52)"/><text x="528.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.11%)</title><rect x="526" y="228" width="2" height="15" fill="rgb(210,145,26)"/><text x="529.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.11%)</title><rect x="526" y="244" width="2" height="15" fill="rgb(248,33,14)"/><text x="529.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.11%)</title><rect x="526" y="260" width="2" height="15" fill="rgb(222,164,52)"/><text x="529.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="526" y="276" width="2" height="15" fill="rgb(205,206,43)"/><text x="529.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="526" y="292" width="2" height="15" fill="rgb(243,134,54)"/><text x="529.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="526" y="308" width="2" height="15" fill="rgb(216,110,10)"/><text x="529.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="526" y="324" width="2" height="15" fill="rgb(242,218,32)"/><text x="529.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.11%)</title><rect x="526" y="340" width="2" height="15" fill="rgb(249,114,4)"/><text x="529.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.11%)</title><rect x="526" y="356" width="2" height="15" fill="rgb(244,35,9)"/><text x="529.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="526" y="372" width="2" height="15" fill="rgb(207,2,41)"/><text x="529.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="526" y="388" width="2" height="15" fill="rgb(245,105,27)"/><text x="529.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="526" y="404" width="2" height="15" fill="rgb(234,88,47)"/><text x="529.00" y="414.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="526" y="420" width="2" height="15" fill="rgb(215,1,38)"/><text x="529.00" y="430.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="526" y="436" width="2" height="15" fill="rgb(221,105,29)"/><text x="529.00" y="446.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py) (1 samples, 0.11%)</title><rect x="528" y="228" width="1" height="15" fill="rgb(248,174,26)"/><text x="531.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.11%)</title><rect x="528" y="244" width="1" height="15" fill="rgb(214,93,22)"/><text x="531.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="528" y="260" width="1" height="15" fill="rgb(232,88,2)"/><text x="531.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="528" y="276" width="1" height="15" fill="rgb(228,80,40)"/><text x="531.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py) (1 samples, 0.11%)</title><rect x="529" y="228" width="1" height="15" fill="rgb(234,165,0)"/><text x="532.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="529" y="244" width="1" height="15" fill="rgb(230,146,40)"/><text x="532.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="529" y="260" width="1" height="15" fill="rgb(240,209,1)"/><text x="532.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="529" y="276" width="1" height="15" fill="rgb(210,11,16)"/><text x="532.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="529" y="292" width="1" height="15" fill="rgb(218,163,46)"/><text x="532.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src) (1 samples, 0.11%)</title><rect x="529" y="308" width="1" height="15" fill="rgb(213,42,13)"/><text x="532.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="529" y="324" width="1" height="15" fill="rgb(243,76,12)"/><text x="532.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="530" y="260" width="2" height="15" fill="rgb(246,130,47)"/><text x="533.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="530" y="276" width="2" height="15" fill="rgb(232,36,25)"/><text x="533.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="530" y="292" width="2" height="15" fill="rgb(245,36,41)"/><text x="533.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.11%)</title><rect x="530" y="308" width="2" height="15" fill="rgb(218,75,25)"/><text x="533.00" y="318.50"></text></g><g><title>0x7f61201c9004 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="530" y="324" width="2" height="15" fill="rgb(223,27,17)"/><text x="533.00" y="334.50"></text></g><g><title>0x7f611f30c7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="532" y="276" width="1" height="15" fill="rgb(236,126,50)"/><text x="535.00" y="286.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.11%)</title><rect x="534" y="340" width="1" height="15" fill="rgb(254,95,41)"/><text x="537.00" y="350.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.32%)</title><rect x="533" y="292" width="4" height="15" fill="rgb(206,200,49)"/><text x="536.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.32%)</title><rect x="533" y="308" width="4" height="15" fill="rgb(233,181,2)"/><text x="536.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (3 samples, 0.32%)</title><rect x="533" y="324" width="4" height="15" fill="rgb(235,91,44)"/><text x="536.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="535" y="340" width="2" height="15" fill="rgb(240,204,12)"/><text x="538.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="535" y="356" width="2" height="15" fill="rgb(248,181,15)"/><text x="538.00" y="366.50"></text></g><g><title>0x7f612026c960 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="539" y="324" width="1" height="15" fill="rgb(220,177,1)"/><text x="542.00" y="334.50"></text></g><g><title>0x7f612026c979 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="540" y="324" width="3" height="15" fill="rgb(217,218,42)"/><text x="543.00" y="334.50"></text></g><g><title>0x7f612026c997 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="543" y="324" width="1" height="15" fill="rgb(247,161,1)"/><text x="546.00" y="334.50"></text></g><g><title>0x7f612026c9af (libm-2.29.so) (1 samples, 0.11%)</title><rect x="544" y="324" width="2" height="15" fill="rgb(229,147,20)"/><text x="547.00" y="334.50"></text></g><g><title>0x7f612026c9bd (libm-2.29.so) (3 samples, 0.32%)</title><rect x="546" y="324" width="3" height="15" fill="rgb(244,190,43)"/><text x="549.00" y="334.50"></text></g><g><title>0x7f612026c9f0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="549" y="324" width="2" height="15" fill="rgb(236,165,44)"/><text x="552.00" y="334.50"></text></g><g><title>0x7f612026c9f4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="551" y="324" width="1" height="15" fill="rgb(221,52,42)"/><text x="554.00" y="334.50"></text></g><g><title>0x7f612026c9f8 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="552" y="324" width="2" height="15" fill="rgb(220,115,10)"/><text x="555.00" y="334.50"></text></g><g><title>0x7f612026ca04 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="554" y="324" width="3" height="15" fill="rgb(215,209,47)"/><text x="557.00" y="334.50"></text></g><g><title>0x7f612026ca15 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="557" y="324" width="2" height="15" fill="rgb(231,66,33)"/><text x="560.00" y="334.50"></text></g><g><title>0x7f612026ca1d (libm-2.29.so) (2 samples, 0.22%)</title><rect x="559" y="324" width="3" height="15" fill="rgb(234,45,22)"/><text x="562.00" y="334.50"></text></g><g><title>0x7f612026ca21 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="562" y="324" width="1" height="15" fill="rgb(239,14,52)"/><text x="565.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (25 samples, 2.69%)</title><rect x="533" y="276" width="32" height="15" fill="rgb(224,219,15)"/><text x="536.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (22 samples, 2.37%)</title><rect x="537" y="292" width="28" height="15" fill="rgb(210,220,36)"/><text x="540.00" y="302.50">t..</text></g><g><title>FLOAT_log (loops.c.src) (22 samples, 2.37%)</title><rect x="537" y="308" width="28" height="15" fill="rgb(233,34,26)"/><text x="540.00" y="318.50">F..</text></g><g><title>logf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="563" y="324" width="2" height="15" fill="rgb(208,13,38)"/><text x="566.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.22%)</title><rect x="565" y="276" width="2" height="15" fill="rgb(209,220,19)"/><text x="568.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (31 samples, 3.34%)</title><rect x="530" y="228" width="40" height="15" fill="rgb(242,194,20)"/><text x="533.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (31 samples, 3.34%)</title><rect x="530" y="244" width="40" height="15" fill="rgb(209,57,7)"/><text x="533.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (30 samples, 3.23%)</title><rect x="532" y="260" width="38" height="15" fill="rgb(238,144,45)"/><text x="535.00" y="270.50">PyU..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.22%)</title><rect x="567" y="276" width="3" height="15" fill="rgb(239,180,29)"/><text x="570.00" y="286.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="568" y="292" width="2" height="15" fill="rgb(218,14,45)"/><text x="571.00" y="302.50"></text></g><g><title>_sum_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="571" y="260" width="1" height="15" fill="rgb(227,129,24)"/><text x="574.00" y="270.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (2 samples, 0.22%)</title><rect x="577" y="308" width="3" height="15" fill="rgb(252,143,4)"/><text x="580.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.22%)</title><rect x="580" y="324" width="2" height="15" fill="rgb(229,123,44)"/><text x="583.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.22%)</title><rect x="580" y="340" width="2" height="15" fill="rgb(213,216,4)"/><text x="583.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.22%)</title><rect x="580" y="356" width="2" height="15" fill="rgb(230,26,51)"/><text x="583.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.22%)</title><rect x="580" y="372" width="2" height="15" fill="rgb(249,209,16)"/><text x="583.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.22%)</title><rect x="580" y="388" width="2" height="15" fill="rgb(218,19,0)"/><text x="583.00" y="398.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.11%)</title><rect x="586" y="340" width="1" height="15" fill="rgb(230,120,11)"/><text x="589.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.11%)</title><rect x="586" y="356" width="1" height="15" fill="rgb(216,32,39)"/><text x="589.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.11%)</title><rect x="586" y="372" width="1" height="15" fill="rgb(215,27,1)"/><text x="589.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.22%)</title><rect x="587" y="372" width="3" height="15" fill="rgb(252,32,53)"/><text x="590.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.22%)</title><rect x="587" y="388" width="3" height="15" fill="rgb(254,27,35)"/><text x="590.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.11%)</title><rect x="589" y="404" width="1" height="15" fill="rgb(252,123,1)"/><text x="592.00" y="414.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="589" y="420" width="1" height="15" fill="rgb(254,72,13)"/><text x="592.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="590" y="436" width="1" height="15" fill="rgb(231,134,14)"/><text x="593.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="590" y="452" width="1" height="15" fill="rgb(214,178,54)"/><text x="593.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="590" y="468" width="1" height="15" fill="rgb(229,56,41)"/><text x="593.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="590" y="484" width="1" height="15" fill="rgb(249,203,30)"/><text x="593.00" y="494.50"></text></g><g><title>0x7f61200ebb12 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="590" y="500" width="1" height="15" fill="rgb(223,187,24)"/><text x="593.00" y="510.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.22%)</title><rect x="590" y="404" width="3" height="15" fill="rgb(235,69,29)"/><text x="593.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.22%)</title><rect x="590" y="420" width="3" height="15" fill="rgb(252,21,40)"/><text x="593.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="591" y="436" width="2" height="15" fill="rgb(248,48,39)"/><text x="594.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="591" y="452" width="2" height="15" fill="rgb(243,210,5)"/><text x="594.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="591" y="468" width="2" height="15" fill="rgb(211,107,36)"/><text x="594.00" y="478.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 0.32%)</title><rect x="590" y="372" width="4" height="15" fill="rgb(253,161,44)"/><text x="593.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 0.32%)</title><rect x="590" y="388" width="4" height="15" fill="rgb(233,80,12)"/><text x="593.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="593" y="404" width="1" height="15" fill="rgb(241,224,28)"/><text x="596.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="593" y="420" width="1" height="15" fill="rgb(254,52,31)"/><text x="596.00" y="430.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="594" y="404" width="1" height="15" fill="rgb(248,225,6)"/><text x="597.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="594" y="420" width="1" height="15" fill="rgb(219,25,16)"/><text x="597.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="594" y="436" width="1" height="15" fill="rgb(212,172,17)"/><text x="597.00" y="446.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="594" y="452" width="1" height="15" fill="rgb(222,193,45)"/><text x="597.00" y="462.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.22%)</title><rect x="594" y="372" width="2" height="15" fill="rgb(224,132,13)"/><text x="597.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.22%)</title><rect x="594" y="388" width="2" height="15" fill="rgb(250,33,30)"/><text x="597.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="595" y="404" width="1" height="15" fill="rgb(254,67,52)"/><text x="598.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="595" y="420" width="1" height="15" fill="rgb(253,147,2)"/><text x="598.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="595" y="436" width="1" height="15" fill="rgb(233,227,51)"/><text x="598.00" y="446.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.11%)</title><rect x="596" y="372" width="2" height="15" fill="rgb(242,66,18)"/><text x="599.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (5 samples, 0.54%)</title><rect x="603" y="388" width="6" height="15" fill="rgb(229,189,43)"/><text x="606.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (2 samples, 0.22%)</title><rect x="606" y="404" width="3" height="15" fill="rgb(211,179,9)"/><text x="609.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (24 samples, 2.58%)</title><rect x="587" y="356" width="31" height="15" fill="rgb(220,115,32)"/><text x="590.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (16 samples, 1.72%)</title><rect x="598" y="372" width="20" height="15" fill="rgb(212,166,45)"/><text x="601.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (7 samples, 0.75%)</title><rect x="609" y="388" width="9" height="15" fill="rgb(205,218,30)"/><text x="612.00" y="398.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="617" y="404" width="1" height="15" fill="rgb(231,28,23)"/><text x="620.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (42 samples, 4.52%)</title><rect x="570" y="228" width="53" height="15" fill="rgb(233,65,45)"/><text x="573.00" y="238.50">_run ..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (42 samples, 4.52%)</title><rect x="570" y="244" width="53" height="15" fill="rgb(217,122,5)"/><text x="573.00" y="254.50">sum (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (40 samples, 4.31%)</title><rect x="572" y="260" width="51" height="15" fill="rgb(220,166,35)"/><text x="575.00" y="270.50">array..</text></g><g><title>sum (numpy/core/fromnumeric.py) (40 samples, 4.31%)</title><rect x="572" y="276" width="51" height="15" fill="rgb(219,33,9)"/><text x="575.00" y="286.50">sum (..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (39 samples, 4.20%)</title><rect x="573" y="292" width="50" height="15" fill="rgb(243,154,29)"/><text x="576.00" y="302.50">_wrap..</text></g><g><title>ufunc_reduce (ufunc_object.c) (34 samples, 3.66%)</title><rect x="580" y="308" width="43" height="15" fill="rgb(219,175,6)"/><text x="583.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (32 samples, 3.44%)</title><rect x="582" y="324" width="41" height="15" fill="rgb(253,103,37)"/><text x="585.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (28 samples, 3.01%)</title><rect x="587" y="340" width="36" height="15" fill="rgb(208,155,51)"/><text x="590.00" y="350.50">PyU..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (4 samples, 0.43%)</title><rect x="618" y="356" width="5" height="15" fill="rgb(211,141,30)"/><text x="621.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.32%)</title><rect x="619" y="372" width="4" height="15" fill="rgb(240,194,7)"/><text x="622.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (3 samples, 0.32%)</title><rect x="619" y="388" width="4" height="15" fill="rgb(247,144,54)"/><text x="622.00" y="398.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="622" y="404" width="1" height="15" fill="rgb(206,110,16)"/><text x="625.00" y="414.50"></text></g><g><title>ensure_dtype_nbo (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="622" y="420" width="1" height="15" fill="rgb(243,9,30)"/><text x="625.00" y="430.50"></text></g><g><title>0x7f60e0c48422 (?) (1 samples, 0.11%)</title><rect x="623" y="244" width="1" height="15" fill="rgb(231,121,26)"/><text x="626.00" y="254.50"></text></g><g><title>0x7f60e0c4e89e (?) (1 samples, 0.11%)</title><rect x="623" y="260" width="1" height="15" fill="rgb(219,199,7)"/><text x="626.00" y="270.50"></text></g><g><title>0x7f60e0c4e74f (?) (1 samples, 0.11%)</title><rect x="623" y="276" width="1" height="15" fill="rgb(205,207,28)"/><text x="626.00" y="286.50"></text></g><g><title>0x7f60e0c54a3a (?) (1 samples, 0.11%)</title><rect x="623" y="292" width="1" height="15" fill="rgb(242,95,34)"/><text x="626.00" y="302.50"></text></g><g><title>0x7f60ea0b0ab9 (?) (1 samples, 0.11%)</title><rect x="623" y="308" width="1" height="15" fill="rgb(218,121,40)"/><text x="626.00" y="318.50"></text></g><g><title>0x7f60ea0b1ea9 (?) (1 samples, 0.11%)</title><rect x="623" y="324" width="1" height="15" fill="rgb(249,126,2)"/><text x="626.00" y="334.50"></text></g><g><title>0x7f60ea0b1ea0 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="624" y="468" width="2" height="15" fill="rgb(253,70,15)"/><text x="627.00" y="478.50"></text></g><g><title>0x7f60ea0b1ea9 (libgomp.so.1.0.0) (16 samples, 1.72%)</title><rect x="626" y="468" width="20" height="15" fill="rgb(245,6,43)"/><text x="629.00" y="478.50"></text></g><g><title>0x7f60ea0b1eab (libgomp.so.1.0.0) (14 samples, 1.51%)</title><rect x="646" y="468" width="18" height="15" fill="rgb(231,52,48)"/><text x="649.00" y="478.50"></text></g><g><title>0x7f60ea0b1ead (libgomp.so.1.0.0) (13 samples, 1.40%)</title><rect x="664" y="468" width="16" height="15" fill="rgb(217,61,5)"/><text x="667.00" y="478.50"></text></g><g><title>0x7f60ea0b0ab9 (libgomp.so.1.0.0) (45 samples, 4.84%)</title><rect x="624" y="452" width="57" height="15" fill="rgb(222,158,3)"/><text x="627.00" y="462.50">0x7f60..</text></g><g><title>0x7f60ea0b1ee1 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="680" y="468" width="1" height="15" fill="rgb(250,137,22)"/><text x="683.00" y="478.50"></text></g><g><title>0x7f60ea0b1cf9 (libgomp.so.1.0.0) (9 samples, 0.97%)</title><rect x="681" y="484" width="12" height="15" fill="rgb(239,79,44)"/><text x="684.00" y="494.50"></text></g><g><title>0x7f60ea0b1cfb (libgomp.so.1.0.0) (8 samples, 0.86%)</title><rect x="693" y="484" width="10" height="15" fill="rgb(206,189,40)"/><text x="696.00" y="494.50"></text></g><g><title>0x7f60ea0afdaa (libgomp.so.1.0.0) (19 samples, 2.05%)</title><rect x="681" y="468" width="25" height="15" fill="rgb(250,24,15)"/><text x="684.00" y="478.50">0..</text></g><g><title>0x7f60ea0b1cfd (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="703" y="484" width="3" height="15" fill="rgb(242,82,18)"/><text x="706.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (192 samples, 20.67%)</title><rect x="463" y="196" width="244" height="15" fill="rgb(211,216,15)"/><text x="466.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (172 samples, 18.51%)</title><rect x="488" y="212" width="219" height="15" fill="rgb(249,54,51)"/><text x="491.00" y="222.50">run (mlprodict/onnxrt/ops_cp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (66 samples, 7.10%)</title><rect x="623" y="228" width="84" height="15" fill="rgb(239,185,22)"/><text x="626.00" y="238.50">_run (mlp..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (65 samples, 7.00%)</title><rect x="624" y="244" width="83" height="15" fill="rgb(231,44,11)"/><text x="627.00" y="254.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (65 samples, 7.00%)</title><rect x="624" y="260" width="83" height="15" fill="rgb(235,49,31)"/><text x="627.00" y="270.50">void pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (65 samples, 7.00%)</title><rect x="624" y="276" width="83" height="15" fill="rgb(212,205,50)"/><text x="627.00" y="286.50">void pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (65 samples, 7.00%)</title><rect x="624" y="292" width="83" height="15" fill="rgb(233,48,40)"/><text x="627.00" y="302.50">pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (65 samples, 7.00%)</title><rect x="624" y="308" width="83" height="15" fill="rgb(215,169,11)"/><text x="627.00" y="318.50">pybind11:..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (65 samples, 7.00%)</title><rect x="624" y="324" width="83" height="15" fill="rgb(235,100,36)"/><text x="627.00" y="334.50">pybind11:..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (65 samples, 7.00%)</title><rect x="624" y="340" width="83" height="15" fill="rgb(207,224,27)"/><text x="627.00" y="350.50">pybind11:..</text></g><g><title>pybind11::array::~array (numpy.h) (65 samples, 7.00%)</title><rect x="624" y="356" width="83" height="15" fill="rgb(254,190,19)"/><text x="627.00" y="366.50">pybind11:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (65 samples, 7.00%)</title><rect x="624" y="372" width="83" height="15" fill="rgb(226,38,50)"/><text x="627.00" y="382.50">pybind11:..</text></g><g><title>pybind11::object::~object (pytypes.h) (65 samples, 7.00%)</title><rect x="624" y="388" width="83" height="15" fill="rgb(234,181,39)"/><text x="627.00" y="398.50">pybind11:..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (65 samples, 7.00%)</title><rect x="624" y="404" width="83" height="15" fill="rgb(230,92,29)"/><text x="627.00" y="414.50">pybind11:..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (65 samples, 7.00%)</title><rect x="624" y="420" width="83" height="15" fill="rgb(233,149,1)"/><text x="627.00" y="430.50">RuntimeTr..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (65 samples, 7.00%)</title><rect x="624" y="436" width="83" height="15" fill="rgb(232,56,51)"/><text x="627.00" y="446.50">pybind11:..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (20 samples, 2.15%)</title><rect x="681" y="452" width="26" height="15" fill="rgb(212,138,5)"/><text x="684.00" y="462.50">G..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (1 samples, 0.11%)</title><rect x="706" y="468" width="1" height="15" fill="rgb(250,76,16)"/><text x="709.00" y="478.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::~vector (stl_bvector.h) (1 samples, 0.11%)</title><rect x="706" y="484" width="1" height="15" fill="rgb(205,168,8)"/><text x="709.00" y="494.50"></text></g><g><title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::~_Bvector_base (stl_bvector.h) (1 samples, 0.11%)</title><rect x="706" y="500" width="1" height="15" fill="rgb(231,161,19)"/><text x="709.00" y="510.50"></text></g><g><title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_deallocate (stl_bvector.h) (1 samples, 0.11%)</title><rect x="706" y="516" width="1" height="15" fill="rgb(245,87,21)"/><text x="709.00" y="526.50"></text></g><g><title>write_scores&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (1 samples, 0.11%)</title><rect x="706" y="532" width="1" height="15" fill="rgb(236,121,15)"/><text x="709.00" y="542.50"></text></g><g><title>0x7f60e0c31e60 (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="706" y="548" width="1" height="15" fill="rgb(254,71,54)"/><text x="709.00" y="558.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.22%)</title><rect x="720" y="372" width="2" height="15" fill="rgb(212,88,14)"/><text x="723.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.22%)</title><rect x="720" y="388" width="2" height="15" fill="rgb(240,221,21)"/><text x="723.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.22%)</title><rect x="720" y="404" width="2" height="15" fill="rgb(235,226,9)"/><text x="723.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="722" y="388" width="1" height="15" fill="rgb(227,46,14)"/><text x="725.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="722" y="404" width="1" height="15" fill="rgb(230,207,9)"/><text x="725.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (5 samples, 0.54%)</title><rect x="723" y="420" width="7" height="15" fill="rgb(224,134,36)"/><text x="726.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="730" y="420" width="1" height="15" fill="rgb(217,33,18)"/><text x="733.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="730" y="436" width="1" height="15" fill="rgb(221,66,45)"/><text x="733.00" y="446.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.11%)</title><rect x="730" y="452" width="1" height="15" fill="rgb(215,104,3)"/><text x="733.00" y="462.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.11%)</title><rect x="730" y="468" width="1" height="15" fill="rgb(225,218,45)"/><text x="733.00" y="478.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="731" y="420" width="1" height="15" fill="rgb(226,179,47)"/><text x="734.00" y="430.50"></text></g><g><title>0x7f61200ebd32 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="734" y="468" width="1" height="15" fill="rgb(253,64,29)"/><text x="737.00" y="478.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (3 samples, 0.32%)</title><rect x="732" y="436" width="4" height="15" fill="rgb(251,23,31)"/><text x="735.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="734" y="452" width="2" height="15" fill="rgb(217,138,7)"/><text x="737.00" y="462.50"></text></g><g><title>0x7f61200ec2a3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="735" y="468" width="1" height="15" fill="rgb(233,103,18)"/><text x="738.00" y="478.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 0.75%)</title><rect x="732" y="420" width="9" height="15" fill="rgb(224,107,35)"/><text x="735.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.43%)</title><rect x="736" y="436" width="5" height="15" fill="rgb(240,98,16)"/><text x="739.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.32%)</title><rect x="737" y="452" width="4" height="15" fill="rgb(239,74,39)"/><text x="740.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (3 samples, 0.32%)</title><rect x="737" y="468" width="4" height="15" fill="rgb(210,102,41)"/><text x="740.00" y="478.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="741" y="420" width="1" height="15" fill="rgb(249,20,47)"/><text x="744.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (19 samples, 2.05%)</title><rect x="722" y="372" width="24" height="15" fill="rgb(208,184,23)"/><text x="725.00" y="382.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (18 samples, 1.94%)</title><rect x="723" y="388" width="23" height="15" fill="rgb(216,12,32)"/><text x="726.00" y="398.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (18 samples, 1.94%)</title><rect x="723" y="404" width="23" height="15" fill="rgb(231,136,45)"/><text x="726.00" y="414.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (3 samples, 0.32%)</title><rect x="742" y="420" width="4" height="15" fill="rgb(213,185,52)"/><text x="745.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (3 samples, 0.32%)</title><rect x="742" y="436" width="4" height="15" fill="rgb(250,4,24)"/><text x="745.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src) (3 samples, 0.32%)</title><rect x="742" y="452" width="4" height="15" fill="rgb(239,57,13)"/><text x="745.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (3 samples, 0.32%)</title><rect x="742" y="468" width="4" height="15" fill="rgb(239,67,52)"/><text x="745.00" y="478.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (23 samples, 2.48%)</title><rect x="718" y="340" width="29" height="15" fill="rgb(211,205,44)"/><text x="721.00" y="350.50">_c..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 2.37%)</title><rect x="720" y="356" width="27" height="15" fill="rgb(230,156,2)"/><text x="723.00" y="366.50">u..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="746" y="372" width="1" height="15" fill="rgb(226,27,33)"/><text x="749.00" y="382.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="746" y="388" width="1" height="15" fill="rgb(243,190,34)"/><text x="749.00" y="398.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="746" y="404" width="1" height="15" fill="rgb(248,202,29)"/><text x="749.00" y="414.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (2 samples, 0.22%)</title><rect x="747" y="340" width="3" height="15" fill="rgb(251,132,23)"/><text x="750.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="755" y="356" width="8" height="15" fill="rgb(240,153,37)"/><text x="758.00" y="366.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="764" y="372" width="1" height="15" fill="rgb(225,144,20)"/><text x="767.00" y="382.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.22%)</title><rect x="775" y="468" width="3" height="15" fill="rgb(250,171,11)"/><text x="778.00" y="478.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.11%)</title><rect x="777" y="484" width="1" height="15" fill="rgb(215,194,41)"/><text x="780.00" y="494.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="777" y="500" width="1" height="15" fill="rgb(228,105,40)"/><text x="780.00" y="510.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (55 samples, 5.92%)</title><rect x="709" y="260" width="70" height="15" fill="rgb(237,153,49)"/><text x="712.00" y="270.50">clip (n..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (53 samples, 5.71%)</title><rect x="712" y="276" width="67" height="15" fill="rgb(234,196,32)"/><text x="715.00" y="286.50">_wrapfu..</text></g><g><title>array_clip (methods.c) (51 samples, 5.49%)</title><rect x="714" y="292" width="65" height="15" fill="rgb(214,73,47)"/><text x="717.00" y="302.50">array_c..</text></g><g><title>forward_ndarray_method (methods.c) (51 samples, 5.49%)</title><rect x="714" y="308" width="65" height="15" fill="rgb(222,42,27)"/><text x="717.00" y="318.50">forward..</text></g><g><title>_clip (numpy/core/_methods.py) (50 samples, 5.38%)</title><rect x="716" y="324" width="63" height="15" fill="rgb(239,75,44)"/><text x="719.00" y="334.50">_clip ..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (23 samples, 2.48%)</title><rect x="750" y="340" width="29" height="15" fill="rgb(250,216,42)"/><text x="753.00" y="350.50">_c..</text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (13 samples, 1.40%)</title><rect x="763" y="356" width="16" height="15" fill="rgb(228,211,37)"/><text x="766.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (11 samples, 1.18%)</title><rect x="765" y="372" width="14" height="15" fill="rgb(222,210,32)"/><text x="768.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (10 samples, 1.08%)</title><rect x="767" y="388" width="12" height="15" fill="rgb(220,100,28)"/><text x="770.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (6 samples, 0.65%)</title><rect x="772" y="404" width="7" height="15" fill="rgb(242,67,13)"/><text x="775.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (5 samples, 0.54%)</title><rect x="773" y="420" width="6" height="15" fill="rgb(213,11,54)"/><text x="776.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (3 samples, 0.32%)</title><rect x="775" y="436" width="4" height="15" fill="rgb(247,225,31)"/><text x="778.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.32%)</title><rect x="775" y="452" width="4" height="15" fill="rgb(226,141,46)"/><text x="778.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="778" y="468" width="1" height="15" fill="rgb(248,44,18)"/><text x="781.00" y="478.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (282 samples, 30.36%)</title><rect x="422" y="164" width="359" height="15" fill="rgb(220,17,24)"/><text x="425.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (275 samples, 29.60%)</title><rect x="431" y="180" width="350" height="15" fill="rgb(220,41,6)"/><text x="434.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (58 samples, 6.24%)</title><rect x="707" y="196" width="74" height="15" fill="rgb(233,161,16)"/><text x="710.00" y="206.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (56 samples, 6.03%)</title><rect x="709" y="212" width="72" height="15" fill="rgb(237,1,18)"/><text x="712.00" y="222.50">_run (ml..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (56 samples, 6.03%)</title><rect x="709" y="228" width="72" height="15" fill="rgb(254,81,31)"/><text x="712.00" y="238.50">clip (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (56 samples, 6.03%)</title><rect x="709" y="244" width="72" height="15" fill="rgb(215,52,47)"/><text x="712.00" y="254.50">array_im..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="779" y="260" width="2" height="15" fill="rgb(227,96,18)"/><text x="782.00" y="270.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="779" y="276" width="2" height="15" fill="rgb(238,220,3)"/><text x="782.00" y="286.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py) (283 samples, 30.46%)</title><rect x="422" y="100" width="360" height="15" fill="rgb(229,84,43)"/><text x="425.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_6..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (283 samples, 30.46%)</title><rect x="422" y="116" width="360" height="15" fill="rgb(231,56,26)"/><text x="425.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (283 samples, 30.46%)</title><rect x="422" y="132" width="360" height="15" fill="rgb(224,145,33)"/><text x="425.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (283 samples, 30.46%)</title><rect x="422" y="148" width="360" height="15" fill="rgb(223,2,43)"/><text x="425.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="781" y="164" width="1" height="15" fill="rgb(227,187,46)"/><text x="784.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="781" y="180" width="1" height="15" fill="rgb(242,202,17)"/><text x="784.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="781" y="196" width="1" height="15" fill="rgb(250,110,38)"/><text x="784.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="781" y="212" width="1" height="15" fill="rgb(238,108,33)"/><text x="784.00" y="222.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.11%)</title><rect x="782" y="180" width="1" height="15" fill="rgb(241,33,1)"/><text x="785.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.11%)</title><rect x="782" y="196" width="1" height="15" fill="rgb(251,89,21)"/><text x="785.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="782" y="212" width="1" height="15" fill="rgb(254,3,36)"/><text x="785.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="782" y="228" width="1" height="15" fill="rgb(220,223,5)"/><text x="785.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="782" y="244" width="1" height="15" fill="rgb(214,44,47)"/><text x="785.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="782" y="260" width="1" height="15" fill="rgb(224,181,34)"/><text x="785.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="782" y="276" width="1" height="15" fill="rgb(208,60,6)"/><text x="785.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.11%)</title><rect x="782" y="292" width="1" height="15" fill="rgb(234,48,33)"/><text x="785.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="782" y="308" width="1" height="15" fill="rgb(233,23,46)"/><text x="785.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="782" y="324" width="1" height="15" fill="rgb(242,56,53)"/><text x="785.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="782" y="340" width="1" height="15" fill="rgb(225,20,54)"/><text x="785.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="782" y="356" width="1" height="15" fill="rgb(241,199,44)"/><text x="785.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="782" y="372" width="1" height="15" fill="rgb(251,218,33)"/><text x="785.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.11%)</title><rect x="782" y="388" width="1" height="15" fill="rgb(208,27,51)"/><text x="785.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="782" y="404" width="1" height="15" fill="rgb(245,229,39)"/><text x="785.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="782" y="420" width="1" height="15" fill="rgb(241,161,2)"/><text x="785.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="782" y="436" width="1" height="15" fill="rgb(248,76,12)"/><text x="785.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="782" y="452" width="1" height="15" fill="rgb(217,210,9)"/><text x="785.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="782" y="468" width="1" height="15" fill="rgb(250,147,3)"/><text x="785.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.11%)</title><rect x="782" y="484" width="1" height="15" fill="rgb(219,180,6)"/><text x="785.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.11%)</title><rect x="782" y="500" width="1" height="15" fill="rgb(241,123,40)"/><text x="785.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="782" y="516" width="1" height="15" fill="rgb(249,59,15)"/><text x="785.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="782" y="532" width="1" height="15" fill="rgb(206,152,8)"/><text x="785.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="782" y="548" width="1" height="15" fill="rgb(253,134,51)"/><text x="785.00" y="558.50"></text></g><g><title>_compile (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="782" y="564" width="1" height="15" fill="rgb(241,114,10)"/><text x="785.00" y="574.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py) (285 samples, 30.68%)</title><rect x="422" y="68" width="362" height="15" fill="rgb(248,137,20)"/><text x="425.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py) (285 samples, 30.68%)</title><rect x="422" y="84" width="362" height="15" fill="rgb(209,155,44)"/><text x="425.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.22%)</title><rect x="782" y="100" width="2" height="15" fill="rgb(221,76,2)"/><text x="785.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.22%)</title><rect x="782" y="116" width="2" height="15" fill="rgb(245,35,30)"/><text x="785.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.22%)</title><rect x="782" y="132" width="2" height="15" fill="rgb(207,166,7)"/><text x="785.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.22%)</title><rect x="782" y="148" width="2" height="15" fill="rgb(254,153,38)"/><text x="785.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.22%)</title><rect x="782" y="164" width="2" height="15" fill="rgb(226,30,40)"/><text x="785.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.11%)</title><rect x="783" y="180" width="1" height="15" fill="rgb(237,152,38)"/><text x="786.00" y="190.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="783" y="196" width="1" height="15" fill="rgb(216,149,37)"/><text x="786.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="786" y="180" width="1" height="15" fill="rgb(215,31,35)"/><text x="789.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="786" y="196" width="1" height="15" fill="rgb(233,44,3)"/><text x="789.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="786" y="212" width="1" height="15" fill="rgb(251,45,24)"/><text x="789.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="788" y="324" width="1" height="15" fill="rgb(216,223,15)"/><text x="791.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="788" y="340" width="1" height="15" fill="rgb(241,193,13)"/><text x="791.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="789" y="356" width="2" height="15" fill="rgb(213,126,52)"/><text x="792.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="789" y="372" width="2" height="15" fill="rgb(244,163,25)"/><text x="792.00" y="382.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.54%)</title><rect x="786" y="164" width="6" height="15" fill="rgb(229,178,22)"/><text x="789.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (4 samples, 0.43%)</title><rect x="787" y="180" width="5" height="15" fill="rgb(244,144,15)"/><text x="790.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (4 samples, 0.43%)</title><rect x="787" y="196" width="5" height="15" fill="rgb(243,29,51)"/><text x="790.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.43%)</title><rect x="787" y="212" width="5" height="15" fill="rgb(241,35,7)"/><text x="790.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (4 samples, 0.43%)</title><rect x="787" y="228" width="5" height="15" fill="rgb(224,101,15)"/><text x="790.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (4 samples, 0.43%)</title><rect x="787" y="244" width="5" height="15" fill="rgb(228,70,9)"/><text x="790.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 0.32%)</title><rect x="788" y="260" width="4" height="15" fill="rgb(210,10,4)"/><text x="791.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 0.32%)</title><rect x="788" y="276" width="4" height="15" fill="rgb(240,163,51)"/><text x="791.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 0.32%)</title><rect x="788" y="292" width="4" height="15" fill="rgb(254,24,29)"/><text x="791.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 0.32%)</title><rect x="788" y="308" width="4" height="15" fill="rgb(214,95,28)"/><text x="791.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (2 samples, 0.22%)</title><rect x="789" y="324" width="3" height="15" fill="rgb(214,132,27)"/><text x="792.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (2 samples, 0.22%)</title><rect x="789" y="340" width="3" height="15" fill="rgb(221,149,1)"/><text x="792.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="791" y="356" width="1" height="15" fill="rgb(248,98,50)"/><text x="794.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="791" y="372" width="1" height="15" fill="rgb(233,210,39)"/><text x="794.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="791" y="388" width="1" height="15" fill="rgb(231,32,4)"/><text x="794.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="791" y="404" width="1" height="15" fill="rgb(243,14,25)"/><text x="794.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="791" y="420" width="1" height="15" fill="rgb(231,9,46)"/><text x="794.00" y="430.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="792" y="164" width="1" height="15" fill="rgb(212,39,41)"/><text x="795.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="792" y="180" width="1" height="15" fill="rgb(215,88,4)"/><text x="795.00" y="190.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.11%)</title><rect x="792" y="196" width="1" height="15" fill="rgb(220,42,32)"/><text x="795.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.11%)</title><rect x="792" y="212" width="1" height="15" fill="rgb(251,138,53)"/><text x="795.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (1 samples, 0.11%)</title><rect x="801" y="212" width="1" height="15" fill="rgb(239,46,15)"/><text x="804.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="802" y="228" width="1" height="15" fill="rgb(239,177,5)"/><text x="805.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="802" y="244" width="1" height="15" fill="rgb(211,229,23)"/><text x="805.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.22%)</title><rect x="802" y="212" width="3" height="15" fill="rgb(222,204,19)"/><text x="805.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="803" y="228" width="2" height="15" fill="rgb(211,217,5)"/><text x="806.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="803" y="244" width="2" height="15" fill="rgb(213,157,36)"/><text x="806.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="803" y="260" width="2" height="15" fill="rgb(224,121,47)"/><text x="806.00" y="270.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.11%)</title><rect x="803" y="276" width="2" height="15" fill="rgb(230,87,40)"/><text x="806.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="805" y="212" width="1" height="15" fill="rgb(251,124,22)"/><text x="808.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="805" y="228" width="1" height="15" fill="rgb(252,196,36)"/><text x="808.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="805" y="244" width="1" height="15" fill="rgb(219,16,46)"/><text x="808.00" y="254.50"></text></g><g><title>array_clip (methods.c) (1 samples, 0.11%)</title><rect x="805" y="260" width="1" height="15" fill="rgb(218,72,48)"/><text x="808.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.11%)</title><rect x="805" y="276" width="1" height="15" fill="rgb(238,89,14)"/><text x="808.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="805" y="292" width="1" height="15" fill="rgb(222,55,51)"/><text x="808.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="805" y="308" width="1" height="15" fill="rgb(205,148,32)"/><text x="808.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="805" y="324" width="1" height="15" fill="rgb(213,96,50)"/><text x="808.00" y="334.50"></text></g><g><title>PyUFunc_MultiplicationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="807" y="260" width="1" height="15" fill="rgb(225,53,40)"/><text x="810.00" y="270.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.11%)</title><rect x="808" y="292" width="2" height="15" fill="rgb(213,144,19)"/><text x="811.00" y="302.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.11%)</title><rect x="808" y="308" width="2" height="15" fill="rgb(238,138,7)"/><text x="811.00" y="318.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.22%)</title><rect x="808" y="276" width="3" height="15" fill="rgb(249,94,49)"/><text x="811.00" y="286.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.11%)</title><rect x="810" y="292" width="1" height="15" fill="rgb(240,121,18)"/><text x="813.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.32%)</title><rect x="808" y="260" width="4" height="15" fill="rgb(242,27,16)"/><text x="811.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="811" y="276" width="1" height="15" fill="rgb(242,10,9)"/><text x="814.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="812" y="276" width="2" height="15" fill="rgb(221,68,2)"/><text x="815.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="812" y="292" width="2" height="15" fill="rgb(254,62,48)"/><text x="815.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="812" y="308" width="2" height="15" fill="rgb(253,208,52)"/><text x="815.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="812" y="324" width="2" height="15" fill="rgb(223,42,39)"/><text x="815.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="814" y="292" width="1" height="15" fill="rgb(223,147,10)"/><text x="817.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 0.65%)</title><rect x="812" y="260" width="8" height="15" fill="rgb(224,181,10)"/><text x="815.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (5 samples, 0.54%)</title><rect x="814" y="276" width="6" height="15" fill="rgb(253,7,20)"/><text x="817.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src) (4 samples, 0.43%)</title><rect x="815" y="292" width="5" height="15" fill="rgb(216,169,53)"/><text x="818.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.32%)</title><rect x="816" y="308" width="4" height="15" fill="rgb(205,35,54)"/><text x="819.00" y="318.50"></text></g><g><title>array_multiply (number.c) (13 samples, 1.40%)</title><rect x="806" y="212" width="16" height="15" fill="rgb(219,73,46)"/><text x="809.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 1.40%)</title><rect x="806" y="228" width="16" height="15" fill="rgb(209,86,15)"/><text x="809.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 1.40%)</title><rect x="806" y="244" width="16" height="15" fill="rgb(254,108,2)"/><text x="809.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.22%)</title><rect x="820" y="260" width="2" height="15" fill="rgb(229,35,22)"/><text x="823.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="821" y="276" width="1" height="15" fill="rgb(252,219,40)"/><text x="824.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="821" y="292" width="1" height="15" fill="rgb(205,134,6)"/><text x="824.00" y="302.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.11%)</title><rect x="821" y="308" width="1" height="15" fill="rgb(228,20,32)"/><text x="824.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="821" y="324" width="1" height="15" fill="rgb(214,120,33)"/><text x="824.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.22%)</title><rect x="822" y="212" width="3" height="15" fill="rgb(225,71,36)"/><text x="825.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.22%)</title><rect x="822" y="228" width="3" height="15" fill="rgb(233,36,6)"/><text x="825.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.22%)</title><rect x="822" y="244" width="3" height="15" fill="rgb(241,154,25)"/><text x="825.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.22%)</title><rect x="822" y="260" width="3" height="15" fill="rgb(225,34,0)"/><text x="825.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="824" y="276" width="1" height="15" fill="rgb(254,152,3)"/><text x="827.00" y="286.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.11%)</title><rect x="825" y="260" width="1" height="15" fill="rgb(244,84,40)"/><text x="828.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="825" y="276" width="1" height="15" fill="rgb(243,114,23)"/><text x="828.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="826" y="260" width="1" height="15" fill="rgb(210,136,16)"/><text x="829.00" y="270.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.32%)</title><rect x="827" y="340" width="4" height="15" fill="rgb(207,14,46)"/><text x="830.00" y="350.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (4 samples, 0.43%)</title><rect x="827" y="292" width="6" height="15" fill="rgb(251,213,43)"/><text x="830.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (4 samples, 0.43%)</title><rect x="827" y="308" width="6" height="15" fill="rgb(235,174,1)"/><text x="830.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (4 samples, 0.43%)</title><rect x="827" y="324" width="6" height="15" fill="rgb(240,19,37)"/><text x="830.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="831" y="340" width="2" height="15" fill="rgb(239,19,30)"/><text x="834.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="833" y="308" width="1" height="15" fill="rgb(220,8,30)"/><text x="836.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.11%)</title><rect x="833" y="324" width="1" height="15" fill="rgb(232,45,13)"/><text x="836.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="833" y="340" width="1" height="15" fill="rgb(218,134,46)"/><text x="836.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="833" y="356" width="1" height="15" fill="rgb(235,162,14)"/><text x="836.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="833" y="372" width="1" height="15" fill="rgb(227,104,41)"/><text x="836.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="833" y="388" width="1" height="15" fill="rgb(230,81,46)"/><text x="836.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="833" y="404" width="1" height="15" fill="rgb(251,144,51)"/><text x="836.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="833" y="420" width="1" height="15" fill="rgb(254,45,28)"/><text x="836.00" y="430.50"></text></g><g><title>0x7f61200ebdb0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="833" y="436" width="1" height="15" fill="rgb(232,95,27)"/><text x="836.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.22%)</title><rect x="833" y="292" width="2" height="15" fill="rgb(211,36,50)"/><text x="836.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.11%)</title><rect x="834" y="308" width="1" height="15" fill="rgb(254,112,35)"/><text x="837.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.11%)</title><rect x="834" y="324" width="1" height="15" fill="rgb(212,67,12)"/><text x="837.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 0.75%)</title><rect x="835" y="292" width="9" height="15" fill="rgb(213,145,47)"/><text x="838.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 0.75%)</title><rect x="835" y="308" width="9" height="15" fill="rgb(252,176,29)"/><text x="838.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 0.75%)</title><rect x="835" y="324" width="9" height="15" fill="rgb(209,114,20)"/><text x="838.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.32%)</title><rect x="840" y="340" width="4" height="15" fill="rgb(220,55,18)"/><text x="843.00" y="350.50"></text></g><g><title>array_subtract (number.c) (16 samples, 1.72%)</title><rect x="825" y="212" width="20" height="15" fill="rgb(215,89,49)"/><text x="828.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 1.72%)</title><rect x="825" y="228" width="20" height="15" fill="rgb(236,28,18)"/><text x="828.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 1.72%)</title><rect x="825" y="244" width="20" height="15" fill="rgb(243,37,13)"/><text x="828.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (14 samples, 1.51%)</title><rect x="827" y="260" width="18" height="15" fill="rgb(214,193,17)"/><text x="830.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (14 samples, 1.51%)</title><rect x="827" y="276" width="18" height="15" fill="rgb(214,106,44)"/><text x="830.00" y="286.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="844" y="292" width="1" height="15" fill="rgb(223,228,4)"/><text x="847.00" y="302.50"></text></g><g><title>0x7f6120100e6d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="850" y="356" width="2" height="15" fill="rgb(230,107,38)"/><text x="853.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 0.43%)</title><rect x="848" y="276" width="5" height="15" fill="rgb(232,36,17)"/><text x="851.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 0.43%)</title><rect x="848" y="292" width="5" height="15" fill="rgb(234,26,39)"/><text x="851.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (4 samples, 0.43%)</title><rect x="848" y="308" width="5" height="15" fill="rgb(234,181,15)"/><text x="851.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (4 samples, 0.43%)</title><rect x="848" y="324" width="5" height="15" fill="rgb(253,78,14)"/><text x="851.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (4 samples, 0.43%)</title><rect x="848" y="340" width="5" height="15" fill="rgb(222,16,35)"/><text x="851.00" y="350.50"></text></g><g><title>0x7f6120100e7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="852" y="356" width="1" height="15" fill="rgb(207,205,43)"/><text x="855.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="853" y="340" width="1" height="15" fill="rgb(239,12,24)"/><text x="856.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.11%)</title><rect x="853" y="356" width="1" height="15" fill="rgb(252,48,7)"/><text x="856.00" y="366.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="854" y="340" width="1" height="15" fill="rgb(236,38,36)"/><text x="857.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.32%)</title><rect x="853" y="324" width="4" height="15" fill="rgb(205,100,42)"/><text x="856.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="855" y="340" width="2" height="15" fill="rgb(244,216,7)"/><text x="858.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="857" y="324" width="1" height="15" fill="rgb(230,7,19)"/><text x="860.00" y="334.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.11%)</title><rect x="858" y="324" width="1" height="15" fill="rgb(213,211,41)"/><text x="861.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="859" y="324" width="2" height="15" fill="rgb(236,13,32)"/><text x="862.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="859" y="340" width="2" height="15" fill="rgb(226,145,26)"/><text x="862.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="859" y="356" width="2" height="15" fill="rgb(252,130,4)"/><text x="862.00" y="366.50"></text></g><g><title>0x7f61200a2a4d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="859" y="372" width="2" height="15" fill="rgb(248,148,1)"/><text x="862.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src) (10 samples, 1.08%)</title><rect x="867" y="340" width="13" height="15" fill="rgb(240,16,3)"/><text x="870.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (4 samples, 0.43%)</title><rect x="874" y="356" width="6" height="15" fill="rgb(253,225,5)"/><text x="877.00" y="366.50"></text></g><g><title>array_sum (methods.c) (31 samples, 3.34%)</title><rect x="845" y="212" width="40" height="15" fill="rgb(222,37,21)"/><text x="848.00" y="222.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (31 samples, 3.34%)</title><rect x="845" y="228" width="40" height="15" fill="rgb(226,86,27)"/><text x="848.00" y="238.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (30 samples, 3.23%)</title><rect x="847" y="244" width="38" height="15" fill="rgb(248,217,25)"/><text x="850.00" y="254.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (29 samples, 3.12%)</title><rect x="848" y="260" width="37" height="15" fill="rgb(228,196,34)"/><text x="851.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (25 samples, 2.69%)</title><rect x="853" y="276" width="32" height="15" fill="rgb(217,214,34)"/><text x="856.00" y="286.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (25 samples, 2.69%)</title><rect x="853" y="292" width="32" height="15" fill="rgb(234,222,8)"/><text x="856.00" y="302.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (25 samples, 2.69%)</title><rect x="853" y="308" width="32" height="15" fill="rgb(210,62,9)"/><text x="856.00" y="318.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (19 samples, 2.05%)</title><rect x="861" y="324" width="24" height="15" fill="rgb(251,11,18)"/><text x="864.00" y="334.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (4 samples, 0.43%)</title><rect x="880" y="340" width="5" height="15" fill="rgb(220,176,8)"/><text x="883.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="900" y="356" width="1" height="15" fill="rgb(251,163,18)"/><text x="903.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="900" y="372" width="1" height="15" fill="rgb(210,153,40)"/><text x="903.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="900" y="388" width="1" height="15" fill="rgb(244,190,1)"/><text x="903.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="902" y="404" width="2" height="15" fill="rgb(223,177,36)"/><text x="905.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.32%)</title><rect x="902" y="372" width="4" height="15" fill="rgb(221,76,54)"/><text x="905.00" y="382.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (3 samples, 0.32%)</title><rect x="902" y="388" width="4" height="15" fill="rgb(252,209,14)"/><text x="905.00" y="398.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (2 samples, 0.22%)</title><rect x="904" y="404" width="2" height="15" fill="rgb(243,68,47)"/><text x="907.00" y="414.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (2 samples, 0.22%)</title><rect x="904" y="420" width="2" height="15" fill="rgb(216,214,16)"/><text x="907.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 0.75%)</title><rect x="906" y="372" width="9" height="15" fill="rgb(250,119,5)"/><text x="909.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (6 samples, 0.65%)</title><rect x="908" y="388" width="7" height="15" fill="rgb(222,181,38)"/><text x="911.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (6 samples, 0.65%)</title><rect x="908" y="404" width="7" height="15" fill="rgb(207,40,38)"/><text x="911.00" y="414.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="915" y="372" width="1" height="15" fill="rgb(254,5,28)"/><text x="918.00" y="382.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (16 samples, 1.72%)</title><rect x="897" y="324" width="21" height="15" fill="rgb(251,137,14)"/><text x="900.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 1.51%)</title><rect x="900" y="340" width="18" height="15" fill="rgb(226,110,36)"/><text x="903.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 1.40%)</title><rect x="901" y="356" width="17" height="15" fill="rgb(243,76,51)"/><text x="904.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.11%)</title><rect x="916" y="372" width="2" height="15" fill="rgb(211,63,54)"/><text x="919.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="921" y="340" width="6" height="15" fill="rgb(210,46,14)"/><text x="924.00" y="350.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="928" y="356" width="1" height="15" fill="rgb(246,35,27)"/><text x="931.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="930" y="388" width="2" height="15" fill="rgb(252,3,52)"/><text x="933.00" y="398.50"></text></g><g><title>PyArray_FromInterface (ctors.c) (1 samples, 0.11%)</title><rect x="934" y="468" width="1" height="15" fill="rgb(234,0,47)"/><text x="937.00" y="478.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (3 samples, 0.32%)</title><rect x="933" y="420" width="4" height="15" fill="rgb(213,71,24)"/><text x="936.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.32%)</title><rect x="933" y="436" width="4" height="15" fill="rgb(226,219,25)"/><text x="936.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.22%)</title><rect x="934" y="452" width="3" height="15" fill="rgb(217,191,33)"/><text x="937.00" y="462.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.11%)</title><rect x="935" y="468" width="2" height="15" fill="rgb(219,85,39)"/><text x="938.00" y="478.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (5 samples, 0.54%)</title><rect x="932" y="388" width="6" height="15" fill="rgb(234,13,41)"/><text x="935.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (5 samples, 0.54%)</title><rect x="932" y="404" width="6" height="15" fill="rgb(240,27,0)"/><text x="935.00" y="414.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.11%)</title><rect x="937" y="420" width="1" height="15" fill="rgb(232,108,30)"/><text x="940.00" y="430.50"></text></g><g><title>0x7f61201c8e02 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="937" y="436" width="1" height="15" fill="rgb(247,199,16)"/><text x="940.00" y="446.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (10 samples, 1.08%)</title><rect x="927" y="340" width="12" height="15" fill="rgb(233,161,52)"/><text x="930.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 0.86%)</title><rect x="929" y="356" width="10" height="15" fill="rgb(250,129,30)"/><text x="932.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (8 samples, 0.86%)</title><rect x="929" y="372" width="10" height="15" fill="rgb(235,149,21)"/><text x="932.00" y="382.50"></text></g><g><title>gentype_ndim_get (scalartypes.c.src) (1 samples, 0.11%)</title><rect x="938" y="388" width="1" height="15" fill="rgb(243,209,2)"/><text x="941.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.22%)</title><rect x="939" y="356" width="3" height="15" fill="rgb(237,145,26)"/><text x="942.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.22%)</title><rect x="939" y="372" width="3" height="15" fill="rgb(229,153,18)"/><text x="942.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.22%)</title><rect x="939" y="388" width="3" height="15" fill="rgb(235,1,11)"/><text x="942.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.22%)</title><rect x="939" y="404" width="3" height="15" fill="rgb(224,204,45)"/><text x="942.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.22%)</title><rect x="939" y="420" width="3" height="15" fill="rgb(232,59,14)"/><text x="942.00" y="430.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="942" y="372" width="1" height="15" fill="rgb(219,29,34)"/><text x="945.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="943" y="372" width="1" height="15" fill="rgb(237,41,8)"/><text x="946.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="943" y="388" width="1" height="15" fill="rgb(246,171,25)"/><text x="946.00" y="398.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="944" y="372" width="2" height="15" fill="rgb(243,54,16)"/><text x="947.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="944" y="388" width="2" height="15" fill="rgb(244,5,17)"/><text x="947.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="944" y="404" width="2" height="15" fill="rgb(228,131,18)"/><text x="947.00" y="414.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (42 samples, 4.52%)</title><rect x="894" y="244" width="53" height="15" fill="rgb(221,84,43)"/><text x="897.00" y="254.50">clip ..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (40 samples, 4.31%)</title><rect x="896" y="260" width="51" height="15" fill="rgb(212,83,12)"/><text x="899.00" y="270.50">_wrap..</text></g><g><title>array_clip (methods.c) (39 samples, 4.20%)</title><rect x="897" y="276" width="50" height="15" fill="rgb(248,37,41)"/><text x="900.00" y="286.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (39 samples, 4.20%)</title><rect x="897" y="292" width="50" height="15" fill="rgb(254,71,39)"/><text x="900.00" y="302.50">forwa..</text></g><g><title>_clip (numpy/core/_methods.py) (39 samples, 4.20%)</title><rect x="897" y="308" width="50" height="15" fill="rgb(239,169,50)"/><text x="900.00" y="318.50">_clip..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (23 samples, 2.48%)</title><rect x="918" y="324" width="29" height="15" fill="rgb(208,132,23)"/><text x="921.00" y="334.50">_c..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 0.65%)</title><rect x="939" y="340" width="8" height="15" fill="rgb(252,75,53)"/><text x="942.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.43%)</title><rect x="942" y="356" width="5" height="15" fill="rgb(230,144,16)"/><text x="945.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="946" y="372" width="1" height="15" fill="rgb(207,23,18)"/><text x="949.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="946" y="388" width="1" height="15" fill="rgb(253,17,17)"/><text x="949.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="946" y="404" width="1" height="15" fill="rgb(240,190,3)"/><text x="949.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="946" y="420" width="1" height="15" fill="rgb(243,212,0)"/><text x="949.00" y="430.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="946" y="436" width="1" height="15" fill="rgb(241,210,54)"/><text x="949.00" y="446.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (50 samples, 5.38%)</title><rect x="885" y="212" width="63" height="15" fill="rgb(230,190,54)"/><text x="888.00" y="222.50">clip (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (46 samples, 4.95%)</title><rect x="890" y="228" width="58" height="15" fill="rgb(219,46,37)"/><text x="893.00" y="238.50">array_..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="947" y="244" width="1" height="15" fill="rgb(205,54,50)"/><text x="950.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="947" y="260" width="1" height="15" fill="rgb(228,202,19)"/><text x="950.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="947" y="276" width="1" height="15" fill="rgb(253,145,3)"/><text x="950.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="947" y="292" width="1" height="15" fill="rgb(240,54,7)"/><text x="950.00" y="302.50"></text></g><g><title>0x7f60f9b2ed24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="956" y="228" width="1" height="15" fill="rgb(226,95,21)"/><text x="959.00" y="238.50"></text></g><g><title>0x7f60f9b3c1c8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="957" y="276" width="1" height="15" fill="rgb(239,39,2)"/><text x="960.00" y="286.50"></text></g><g><title>0x7f60f9b20d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="958" y="292" width="2" height="15" fill="rgb(251,178,10)"/><text x="961.00" y="302.50"></text></g><g><title>0x7f60f9b20666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="958" y="308" width="2" height="15" fill="rgb(235,197,7)"/><text x="961.00" y="318.50"></text></g><g><title>0x7f60f9b162fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="958" y="324" width="2" height="15" fill="rgb(225,211,15)"/><text x="961.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.11%)</title><rect x="958" y="340" width="2" height="15" fill="rgb(216,12,34)"/><text x="961.00" y="350.50"></text></g><g><title>0x7f60f9b3c2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="958" y="276" width="3" height="15" fill="rgb(228,103,20)"/><text x="961.00" y="286.50"></text></g><g><title>0x7f60f9b20d5c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="960" y="292" width="1" height="15" fill="rgb(230,124,46)"/><text x="963.00" y="302.50"></text></g><g><title>0x7f60f9b3c53e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="961" y="276" width="1" height="15" fill="rgb(208,65,4)"/><text x="964.00" y="286.50"></text></g><g><title>0x7f60f9b3c6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="962" y="276" width="3" height="15" fill="rgb(240,110,19)"/><text x="965.00" y="286.50"></text></g><g><title>0x7f60f9b3c6e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="965" y="276" width="2" height="15" fill="rgb(239,38,19)"/><text x="968.00" y="286.50"></text></g><g><title>0x7f60f9b3c7b0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="967" y="276" width="1" height="15" fill="rgb(235,157,1)"/><text x="970.00" y="286.50"></text></g><g><title>0x7f60f9b3c8aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="968" y="276" width="2" height="15" fill="rgb(243,107,11)"/><text x="971.00" y="286.50"></text></g><g><title>0x7f60f9b3c8c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="970" y="276" width="1" height="15" fill="rgb(231,20,35)"/><text x="973.00" y="286.50"></text></g><g><title>0x7f60f9b2dfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 1.51%)</title><rect x="957" y="244" width="18" height="15" fill="rgb(220,195,15)"/><text x="960.00" y="254.50"></text></g><g><title>0x7f60f9b3d405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 1.51%)</title><rect x="957" y="260" width="18" height="15" fill="rgb(243,51,5)"/><text x="960.00" y="270.50"></text></g><g><title>0x7f60f9b3cc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.32%)</title><rect x="971" y="276" width="4" height="15" fill="rgb(229,134,30)"/><text x="974.00" y="286.50"></text></g><g><title>0x7f60f9b14529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.32%)</title><rect x="971" y="292" width="4" height="15" fill="rgb(226,204,12)"/><text x="974.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.32%)</title><rect x="971" y="308" width="4" height="15" fill="rgb(223,202,41)"/><text x="974.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.32%)</title><rect x="971" y="324" width="4" height="15" fill="rgb(219,10,30)"/><text x="974.00" y="334.50"></text></g><g><title>0x7f60f9b2e05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.43%)</title><rect x="975" y="244" width="5" height="15" fill="rgb(231,196,44)"/><text x="978.00" y="254.50"></text></g><g><title>array_take (methods.c) (4 samples, 0.43%)</title><rect x="975" y="260" width="5" height="15" fill="rgb(253,176,50)"/><text x="978.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (3 samples, 0.32%)</title><rect x="976" y="276" width="4" height="15" fill="rgb(223,55,46)"/><text x="979.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (3 samples, 0.32%)</title><rect x="976" y="292" width="4" height="15" fill="rgb(241,33,0)"/><text x="979.00" y="302.50"></text></g><g><title>0x7f60f9b2e13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="980" y="244" width="1" height="15" fill="rgb(250,181,17)"/><text x="983.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="980" y="260" width="1" height="15" fill="rgb(251,213,40)"/><text x="983.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="980" y="276" width="1" height="15" fill="rgb(219,165,13)"/><text x="983.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="980" y="292" width="1" height="15" fill="rgb(250,89,43)"/><text x="983.00" y="302.50"></text></g><g><title>0x7f60f9b2e14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="981" y="244" width="1" height="15" fill="rgb(205,172,35)"/><text x="984.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="981" y="260" width="1" height="15" fill="rgb(238,196,17)"/><text x="984.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="981" y="276" width="1" height="15" fill="rgb(215,224,43)"/><text x="984.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="981" y="292" width="1" height="15" fill="rgb(238,186,39)"/><text x="984.00" y="302.50"></text></g><g><title>0x7f60f9b2e2b5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="982" y="244" width="2" height="15" fill="rgb(217,219,34)"/><text x="985.00" y="254.50"></text></g><g><title>0x7f60f9b2e328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="984" y="244" width="1" height="15" fill="rgb(205,18,10)"/><text x="987.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.11%)</title><rect x="984" y="260" width="1" height="15" fill="rgb(237,178,10)"/><text x="987.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.11%)</title><rect x="984" y="276" width="1" height="15" fill="rgb(210,189,12)"/><text x="987.00" y="286.50"></text></g><g><title>0x7f60f9b2ed2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (23 samples, 2.48%)</title><rect x="957" y="228" width="29" height="15" fill="rgb(221,120,44)"/><text x="960.00" y="238.50">0x..</text></g><g><title>0x7f60f9b2e8d3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="985" y="244" width="1" height="15" fill="rgb(210,24,53)"/><text x="988.00" y="254.50"></text></g><g><title>0x7f60f9b0abbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="985" y="260" width="1" height="15" fill="rgb(205,195,8)"/><text x="988.00" y="270.50"></text></g><g><title>0x7f60f9b11d60 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="985" y="276" width="1" height="15" fill="rgb(216,92,15)"/><text x="988.00" y="286.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.22%)</title><rect x="996" y="260" width="3" height="15" fill="rgb(214,222,27)"/><text x="999.00" y="270.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.11%)</title><rect x="999" y="260" width="1" height="15" fill="rgb(224,9,19)"/><text x="1002.00" y="270.50"></text></g><g><title>get_config (sklearn/_config.py) (2 samples, 0.22%)</title><rect x="1004" y="276" width="3" height="15" fill="rgb(252,84,23)"/><text x="1007.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 0.86%)</title><rect x="1000" y="260" width="10" height="15" fill="rgb(221,131,30)"/><text x="1003.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.32%)</title><rect x="1007" y="276" width="3" height="15" fill="rgb(214,28,40)"/><text x="1010.00" y="286.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1010" y="260" width="2" height="15" fill="rgb(211,28,42)"/><text x="1013.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (10 samples, 1.08%)</title><rect x="1012" y="260" width="12" height="15" fill="rgb(220,92,33)"/><text x="1015.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.32%)</title><rect x="1021" y="276" width="3" height="15" fill="rgb(217,48,41)"/><text x="1024.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.11%)</title><rect x="1023" y="292" width="1" height="15" fill="rgb(241,137,37)"/><text x="1026.00" y="302.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.11%)</title><rect x="1024" y="260" width="2" height="15" fill="rgb(242,162,30)"/><text x="1027.00" y="270.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.22%)</title><rect x="1026" y="260" width="2" height="15" fill="rgb(223,77,16)"/><text x="1029.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="1027" y="276" width="1" height="15" fill="rgb(231,172,51)"/><text x="1030.00" y="286.50"></text></g><g><title>simplefilter (warnings.py) (3 samples, 0.32%)</title><rect x="1028" y="260" width="4" height="15" fill="rgb(206,135,16)"/><text x="1031.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 0.32%)</title><rect x="1028" y="276" width="4" height="15" fill="rgb(250,81,9)"/><text x="1031.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (37 samples, 3.98%)</title><rect x="986" y="228" width="47" height="15" fill="rgb(210,213,22)"/><text x="989.00" y="238.50">_val..</text></g><g><title>check_array (sklearn/utils/validation.py) (36 samples, 3.88%)</title><rect x="988" y="244" width="45" height="15" fill="rgb(251,185,51)"/><text x="991.00" y="254.50">chec..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.11%)</title><rect x="1032" y="260" width="1" height="15" fill="rgb(253,140,49)"/><text x="1035.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="1033" y="244" width="2" height="15" fill="rgb(227,47,32)"/><text x="1036.00" y="254.50"></text></g><g><title>array_assign_subscript (mapping.c) (3 samples, 0.32%)</title><rect x="1033" y="228" width="4" height="15" fill="rgb(224,182,53)"/><text x="1036.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (2 samples, 0.22%)</title><rect x="1035" y="244" width="2" height="15" fill="rgb(231,4,45)"/><text x="1038.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c) (2 samples, 0.22%)</title><rect x="1035" y="260" width="2" height="15" fill="rgb(235,1,0)"/><text x="1038.00" y="270.50"></text></g><g><title>0x7f611f30bc90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1036" y="276" width="1" height="15" fill="rgb(207,31,13)"/><text x="1039.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1037" y="228" width="1" height="15" fill="rgb(237,15,49)"/><text x="1040.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="1037" y="244" width="1" height="15" fill="rgb(253,67,42)"/><text x="1040.00" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (2 samples, 0.22%)</title><rect x="1038" y="276" width="3" height="15" fill="rgb(246,5,11)"/><text x="1041.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1040" y="292" width="1" height="15" fill="rgb(243,170,53)"/><text x="1043.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1040" y="308" width="1" height="15" fill="rgb(249,36,44)"/><text x="1043.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1040" y="324" width="1" height="15" fill="rgb(206,83,48)"/><text x="1043.00" y="334.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1041" y="276" width="1" height="15" fill="rgb(246,189,50)"/><text x="1044.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1041" y="292" width="1" height="15" fill="rgb(205,222,43)"/><text x="1044.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1042" y="276" width="1" height="15" fill="rgb(244,145,13)"/><text x="1045.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="1042" y="292" width="1" height="15" fill="rgb(214,118,9)"/><text x="1045.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="1042" y="308" width="1" height="15" fill="rgb(237,148,16)"/><text x="1045.00" y="318.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="1045" y="308" width="1" height="15" fill="rgb(232,202,32)"/><text x="1048.00" y="318.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.11%)</title><rect x="1045" y="324" width="1" height="15" fill="rgb(212,176,15)"/><text x="1048.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="1045" y="340" width="1" height="15" fill="rgb(223,54,41)"/><text x="1048.00" y="350.50"></text></g><g><title>array_richcompare (arrayobject.c) (7 samples, 0.75%)</title><rect x="1038" y="228" width="9" height="15" fill="rgb(251,221,5)"/><text x="1041.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 0.75%)</title><rect x="1038" y="244" width="9" height="15" fill="rgb(222,143,34)"/><text x="1041.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 0.75%)</title><rect x="1038" y="260" width="9" height="15" fill="rgb(218,77,39)"/><text x="1041.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.32%)</title><rect x="1043" y="276" width="4" height="15" fill="rgb(239,62,17)"/><text x="1046.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.22%)</title><rect x="1045" y="292" width="2" height="15" fill="rgb(226,225,52)"/><text x="1048.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="1046" y="308" width="1" height="15" fill="rgb(240,127,30)"/><text x="1049.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="1046" y="324" width="1" height="15" fill="rgb(233,186,49)"/><text x="1049.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.11%)</title><rect x="1047" y="228" width="2" height="15" fill="rgb(228,41,22)"/><text x="1050.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.11%)</title><rect x="1047" y="244" width="2" height="15" fill="rgb(219,215,39)"/><text x="1050.00" y="254.50"></text></g><g><title>0x7f612010b120 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1049" y="260" width="1" height="15" fill="rgb(238,173,3)"/><text x="1052.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="1054" y="292" width="1" height="15" fill="rgb(254,63,18)"/><text x="1057.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="1054" y="308" width="1" height="15" fill="rgb(227,217,26)"/><text x="1057.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="1054" y="324" width="1" height="15" fill="rgb(213,123,41)"/><text x="1057.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="1054" y="340" width="1" height="15" fill="rgb(236,66,50)"/><text x="1057.00" y="350.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.11%)</title><rect x="1054" y="356" width="1" height="15" fill="rgb(206,207,4)"/><text x="1057.00" y="366.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.11%)</title><rect x="1055" y="308" width="1" height="15" fill="rgb(234,167,51)"/><text x="1058.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="1056" y="356" width="1" height="15" fill="rgb(241,1,39)"/><text x="1059.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1056" y="372" width="1" height="15" fill="rgb(239,124,52)"/><text x="1059.00" y="382.50"></text></g><g><title>0x7f61200ec700 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1056" y="388" width="1" height="15" fill="rgb(247,32,27)"/><text x="1059.00" y="398.50"></text></g><g><title>0x7f61200e9aaf (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1056" y="404" width="1" height="15" fill="rgb(219,159,11)"/><text x="1059.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.22%)</title><rect x="1056" y="340" width="3" height="15" fill="rgb(220,73,5)"/><text x="1059.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="1057" y="356" width="2" height="15" fill="rgb(221,194,47)"/><text x="1060.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.22%)</title><rect x="1059" y="340" width="2" height="15" fill="rgb(215,97,4)"/><text x="1062.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.22%)</title><rect x="1059" y="356" width="2" height="15" fill="rgb(254,180,26)"/><text x="1062.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="1060" y="372" width="1" height="15" fill="rgb(210,176,23)"/><text x="1063.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="1060" y="388" width="1" height="15" fill="rgb(238,125,44)"/><text x="1063.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1060" y="404" width="1" height="15" fill="rgb(218,80,1)"/><text x="1063.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1060" y="420" width="1" height="15" fill="rgb(250,91,2)"/><text x="1063.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="1060" y="436" width="1" height="15" fill="rgb(246,0,7)"/><text x="1063.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1060" y="452" width="1" height="15" fill="rgb(245,213,34)"/><text x="1063.00" y="462.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="1061" y="340" width="1" height="15" fill="rgb(223,167,48)"/><text x="1064.00" y="350.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="1061" y="356" width="1" height="15" fill="rgb(236,196,31)"/><text x="1064.00" y="366.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1061" y="372" width="1" height="15" fill="rgb(240,64,5)"/><text x="1064.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src) (13 samples, 1.40%)</title><rect x="1065" y="356" width="17" height="15" fill="rgb(221,87,15)"/><text x="1068.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (7 samples, 0.75%)</title><rect x="1073" y="372" width="9" height="15" fill="rgb(236,110,27)"/><text x="1076.00" y="382.50"></text></g><g><title>array_sum (methods.c) (28 samples, 3.01%)</title><rect x="1049" y="228" width="35" height="15" fill="rgb(228,137,21)"/><text x="1052.00" y="238.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (28 samples, 3.01%)</title><rect x="1049" y="244" width="35" height="15" fill="rgb(251,42,48)"/><text x="1052.00" y="254.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (27 samples, 2.91%)</title><rect x="1050" y="260" width="34" height="15" fill="rgb(240,45,10)"/><text x="1053.00" y="270.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (24 samples, 2.58%)</title><rect x="1054" y="276" width="30" height="15" fill="rgb(216,141,8)"/><text x="1057.00" y="286.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (23 samples, 2.48%)</title><rect x="1055" y="292" width="29" height="15" fill="rgb(219,86,18)"/><text x="1058.00" y="302.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (22 samples, 2.37%)</title><rect x="1056" y="308" width="28" height="15" fill="rgb(244,160,0)"/><text x="1059.00" y="318.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (22 samples, 2.37%)</title><rect x="1056" y="324" width="28" height="15" fill="rgb(242,78,38)"/><text x="1059.00" y="334.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (17 samples, 1.83%)</title><rect x="1062" y="340" width="22" height="15" fill="rgb(223,131,48)"/><text x="1065.00" y="350.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.22%)</title><rect x="1082" y="356" width="2" height="15" fill="rgb(241,135,24)"/><text x="1085.00" y="366.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (14 samples, 1.51%)</title><rect x="1084" y="228" width="18" height="15" fill="rgb(216,63,38)"/><text x="1087.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 0.86%)</title><rect x="1092" y="244" width="10" height="15" fill="rgb(252,13,27)"/><text x="1095.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="1101" y="260" width="1" height="15" fill="rgb(207,188,18)"/><text x="1104.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="1102" y="244" width="1" height="15" fill="rgb(218,31,30)"/><text x="1105.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="1102" y="260" width="1" height="15" fill="rgb(211,148,45)"/><text x="1105.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="1102" y="276" width="1" height="15" fill="rgb(231,90,15)"/><text x="1105.00" y="286.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="1103" y="276" width="1" height="15" fill="rgb(249,66,15)"/><text x="1106.00" y="286.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="1104" y="340" width="2" height="15" fill="rgb(237,24,12)"/><text x="1107.00" y="350.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (11 samples, 1.18%)</title><rect x="1104" y="292" width="14" height="15" fill="rgb(247,202,28)"/><text x="1107.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (11 samples, 1.18%)</title><rect x="1104" y="308" width="14" height="15" fill="rgb(212,171,46)"/><text x="1107.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (11 samples, 1.18%)</title><rect x="1104" y="324" width="14" height="15" fill="rgb(205,223,17)"/><text x="1107.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (10 samples, 1.08%)</title><rect x="1106" y="340" width="12" height="15" fill="rgb(205,116,32)"/><text x="1109.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1118" y="292" width="2" height="15" fill="rgb(207,152,17)"/><text x="1121.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1118" y="308" width="2" height="15" fill="rgb(215,6,4)"/><text x="1121.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="1120" y="308" width="1" height="15" fill="rgb(221,107,34)"/><text x="1123.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1120" y="324" width="1" height="15" fill="rgb(223,10,54)"/><text x="1123.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (20 samples, 2.15%)</title><rect x="1103" y="244" width="26" height="15" fill="rgb(206,128,25)"/><text x="1106.00" y="254.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (20 samples, 2.15%)</title><rect x="1103" y="260" width="26" height="15" fill="rgb(213,23,50)"/><text x="1106.00" y="270.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (19 samples, 2.05%)</title><rect x="1104" y="276" width="25" height="15" fill="rgb(210,212,7)"/><text x="1107.00" y="286.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 0.75%)</title><rect x="1120" y="292" width="9" height="15" fill="rgb(229,79,49)"/><text x="1123.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 0.65%)</title><rect x="1121" y="308" width="8" height="15" fill="rgb(219,91,48)"/><text x="1124.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (6 samples, 0.65%)</title><rect x="1121" y="324" width="8" height="15" fill="rgb(216,130,25)"/><text x="1124.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.32%)</title><rect x="1125" y="340" width="4" height="15" fill="rgb(233,0,42)"/><text x="1128.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (143 samples, 15.39%)</title><rect x="948" y="212" width="182" height="15" fill="rgb(211,146,27)"/><text x="951.00" y="222.50">predict_proba (sklearn/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 2.37%)</title><rect x="1102" y="228" width="28" height="15" fill="rgb(252,86,23)"/><text x="1105.00" y="238.50">u..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1129" y="244" width="1" height="15" fill="rgb(254,186,53)"/><text x="1132.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1129" y="260" width="1" height="15" fill="rgb(206,177,6)"/><text x="1132.00" y="270.50"></text></g><g><title>0x7f61202bcdd0 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="1134" y="292" width="3" height="15" fill="rgb(246,78,5)"/><text x="1137.00" y="302.50"></text></g><g><title>0x7f61202bcdee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1137" y="292" width="2" height="15" fill="rgb(226,90,14)"/><text x="1140.00" y="302.50"></text></g><g><title>0x7f61202bce01 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1139" y="292" width="1" height="15" fill="rgb(219,183,49)"/><text x="1142.00" y="302.50"></text></g><g><title>0x7f61202bce40 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1140" y="292" width="3" height="15" fill="rgb(210,55,41)"/><text x="1143.00" y="302.50"></text></g><g><title>0x7f61202bce4d (libm-2.29.so) (3 samples, 0.32%)</title><rect x="1143" y="292" width="3" height="15" fill="rgb(217,4,52)"/><text x="1146.00" y="302.50"></text></g><g><title>0x7f61202bce61 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1146" y="292" width="3" height="15" fill="rgb(215,47,49)"/><text x="1149.00" y="302.50"></text></g><g><title>0x7f61202bce7e (libm-2.29.so) (3 samples, 0.32%)</title><rect x="1149" y="292" width="4" height="15" fill="rgb(229,13,23)"/><text x="1152.00" y="302.50"></text></g><g><title>0x7f61202bcea2 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="1153" y="292" width="3" height="15" fill="rgb(234,114,29)"/><text x="1156.00" y="302.50"></text></g><g><title>0x7f61202bceb6 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1156" y="292" width="3" height="15" fill="rgb(226,177,40)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7f61202bceca (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1159" y="292" width="1" height="15" fill="rgb(246,137,36)"/><text x="1162.00" y="302.50"></text></g><g><title>0x7f61202bceda (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1160" y="292" width="2" height="15" fill="rgb(237,6,6)"/><text x="1163.00" y="302.50"></text></g><g><title>0x7f61202bcef6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1162" y="292" width="1" height="15" fill="rgb(211,162,4)"/><text x="1165.00" y="302.50"></text></g><g><title>0x7f61202bcefa (libm-2.29.so) (6 samples, 0.65%)</title><rect x="1163" y="292" width="7" height="15" fill="rgb(227,209,50)"/><text x="1166.00" y="302.50"></text></g><g><title>0x7f61202bcf0a (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1170" y="292" width="2" height="15" fill="rgb(242,77,7)"/><text x="1173.00" y="302.50"></text></g><g><title>0x7f61202bcf97 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1172" y="292" width="1" height="15" fill="rgb(251,0,9)"/><text x="1175.00" y="302.50"></text></g><g><title>0x7f61202bcf9f (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1173" y="292" width="1" height="15" fill="rgb(236,84,3)"/><text x="1176.00" y="302.50"></text></g><g><title>0x7f61202bcfab (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1174" y="292" width="2" height="15" fill="rgb(222,200,6)"/><text x="1177.00" y="302.50"></text></g><g><title>0x7f61202bd013 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1176" y="292" width="1" height="15" fill="rgb(238,214,24)"/><text x="1179.00" y="302.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (39 samples, 4.20%)</title><rect x="1130" y="276" width="49" height="15" fill="rgb(219,60,45)"/><text x="1133.00" y="286.50">PyUF..</text></g><g><title>log (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1177" y="292" width="2" height="15" fill="rgb(252,3,19)"/><text x="1180.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (40 samples, 4.31%)</title><rect x="1130" y="244" width="51" height="15" fill="rgb(228,53,10)"/><text x="1133.00" y="254.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (40 samples, 4.31%)</title><rect x="1130" y="260" width="51" height="15" fill="rgb(220,22,39)"/><text x="1133.00" y="270.50">trivi..</text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="1179" y="276" width="2" height="15" fill="rgb(238,227,53)"/><text x="1182.00" y="286.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py) (313 samples, 33.69%)</title><rect x="784" y="68" width="398" height="15" fill="rgb(230,209,6)"/><text x="787.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_64_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py) (313 samples, 33.69%)</title><rect x="784" y="84" width="398" height="15" fill="rgb(237,167,12)"/><text x="787.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_6..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py) (313 samples, 33.69%)</title><rect x="784" y="100" width="398" height="15" fill="rgb(243,48,23)"/><text x="787.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1000..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (313 samples, 33.69%)</title><rect x="784" y="116" width="398" height="15" fill="rgb(254,51,4)"/><text x="787.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (313 samples, 33.69%)</title><rect x="784" y="132" width="398" height="15" fill="rgb(252,0,26)"/><text x="787.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (312 samples, 33.58%)</title><rect x="786" y="148" width="396" height="15" fill="rgb(250,185,25)"/><text x="789.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (306 samples, 32.94%)</title><rect x="793" y="164" width="389" height="15" fill="rgb(249,115,4)"/><text x="796.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (306 samples, 32.94%)</title><rect x="793" y="180" width="389" height="15" fill="rgb(231,89,12)"/><text x="796.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (306 samples, 32.94%)</title><rect x="793" y="196" width="389" height="15" fill="rgb(228,64,31)"/><text x="796.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (41 samples, 4.41%)</title><rect x="1130" y="212" width="52" height="15" fill="rgb(240,132,43)"/><text x="1133.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (41 samples, 4.41%)</title><rect x="1130" y="228" width="52" height="15" fill="rgb(252,58,33)"/><text x="1133.00" y="238.50">PyUFu..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1181" y="244" width="1" height="15" fill="rgb(213,37,27)"/><text x="1184.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.11%)</title><rect x="1181" y="260" width="1" height="15" fill="rgb(234,26,42)"/><text x="1184.00" y="270.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (2 samples, 0.22%)</title><rect x="1182" y="180" width="2" height="15" fill="rgb(218,64,32)"/><text x="1185.00" y="190.50"></text></g><g><title>clone (sklearn/base.py) (2 samples, 0.22%)</title><rect x="1182" y="196" width="2" height="15" fill="rgb(216,206,27)"/><text x="1185.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py) (2 samples, 0.22%)</title><rect x="1182" y="212" width="2" height="15" fill="rgb(254,17,47)"/><text x="1185.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py) (2 samples, 0.22%)</title><rect x="1182" y="228" width="2" height="15" fill="rgb(213,209,5)"/><text x="1185.00" y="238.50"></text></g><g><title>signature (inspect.py) (2 samples, 0.22%)</title><rect x="1182" y="244" width="2" height="15" fill="rgb(236,45,29)"/><text x="1185.00" y="254.50"></text></g><g><title>from_callable (inspect.py) (2 samples, 0.22%)</title><rect x="1182" y="260" width="2" height="15" fill="rgb(246,170,11)"/><text x="1185.00" y="270.50"></text></g><g><title>_signature_from_callable (inspect.py) (2 samples, 0.22%)</title><rect x="1182" y="276" width="2" height="15" fill="rgb(233,27,40)"/><text x="1185.00" y="286.50"></text></g><g><title>_signature_from_function (inspect.py) (2 samples, 0.22%)</title><rect x="1182" y="292" width="2" height="15" fill="rgb(223,156,39)"/><text x="1185.00" y="302.50"></text></g><g><title>__init__ (inspect.py) (2 samples, 0.22%)</title><rect x="1182" y="308" width="2" height="15" fill="rgb(236,109,41)"/><text x="1185.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1186" y="212" width="1" height="15" fill="rgb(235,170,14)"/><text x="1189.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1186" y="228" width="1" height="15" fill="rgb(209,118,29)"/><text x="1189.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1186" y="244" width="1" height="15" fill="rgb(233,83,27)"/><text x="1189.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.32%)</title><rect x="1184" y="180" width="4" height="15" fill="rgb(209,104,11)"/><text x="1187.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (2 samples, 0.22%)</title><rect x="1186" y="196" width="2" height="15" fill="rgb(216,205,1)"/><text x="1189.00" y="206.50"></text></g><g><title>check_classification_targets (sklearn/utils/multiclass.py) (1 samples, 0.11%)</title><rect x="1187" y="212" width="1" height="15" fill="rgb(235,38,2)"/><text x="1190.00" y="222.50"></text></g><g><title>type_of_target (sklearn/utils/multiclass.py) (1 samples, 0.11%)</title><rect x="1187" y="228" width="1" height="15" fill="rgb(243,18,37)"/><text x="1190.00" y="238.50"></text></g><g><title>all (929 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(212,58,51)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py) (929 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(250,129,15)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_float_.py) (6 samples, 0.65%)</title><rect x="1182" y="68" width="8" height="15" fill="rgb(222,94,51)"/><text x="1185.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py) (6 samples, 0.65%)</title><rect x="1182" y="84" width="8" height="15" fill="rgb(244,109,1)"/><text x="1185.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 0.65%)</title><rect x="1182" y="100" width="8" height="15" fill="rgb(231,199,3)"/><text x="1185.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (6 samples, 0.65%)</title><rect x="1182" y="116" width="8" height="15" fill="rgb(251,62,0)"/><text x="1185.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (6 samples, 0.65%)</title><rect x="1182" y="132" width="8" height="15" fill="rgb(253,126,51)"/><text x="1185.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (6 samples, 0.65%)</title><rect x="1182" y="148" width="8" height="15" fill="rgb(228,221,35)"/><text x="1185.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (6 samples, 0.65%)</title><rect x="1182" y="164" width="8" height="15" fill="rgb(230,191,4)"/><text x="1185.00" y="174.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (1 samples, 0.11%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(209,211,42)"/><text x="1191.00" y="190.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.11%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(223,148,33)"/><text x="1191.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(227,208,15)"/><text x="1191.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(220,148,12)"/><text x="1191.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(231,196,9)"/><text x="1191.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(219,38,46)"/><text x="1191.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(228,213,34)"/><text x="1191.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(254,218,13)"/><text x="1191.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(232,37,4)"/><text x="1191.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="1188" y="324" width="2" height="15" fill="rgb(215,143,47)"/><text x="1191.00" y="334.50"></text></g></g></svg>