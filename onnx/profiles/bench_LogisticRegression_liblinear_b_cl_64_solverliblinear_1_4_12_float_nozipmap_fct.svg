<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2086" onload="init(evt)" viewBox="0 0 1200 2086" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2086" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2069.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2069.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="10" y="868" width="8" height="15" fill="rgb(210,208,7)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="14" y="884" width="4" height="15" fill="rgb(235,89,51)"/><text x="17.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="14" y="900" width="4" height="15" fill="rgb(226,4,29)"/><text x="17.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="14" y="916" width="4" height="15" fill="rgb(215,32,42)"/><text x="17.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="14" y="932" width="4" height="15" fill="rgb(243,106,26)"/><text x="17.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="14" y="948" width="4" height="15" fill="rgb(239,215,29)"/><text x="17.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="14" y="964" width="4" height="15" fill="rgb(249,206,19)"/><text x="17.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="14" y="980" width="4" height="15" fill="rgb(208,175,21)"/><text x="17.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="14" y="996" width="4" height="15" fill="rgb(226,226,29)"/><text x="17.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="14" y="1012" width="4" height="15" fill="rgb(208,80,3)"/><text x="17.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.35%)</title><rect x="14" y="1028" width="4" height="15" fill="rgb(230,82,52)"/><text x="17.00" y="1038.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="18" y="932" width="4" height="15" fill="rgb(233,103,16)"/><text x="21.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="18" y="948" width="4" height="15" fill="rgb(206,226,51)"/><text x="21.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="18" y="964" width="4" height="15" fill="rgb(239,140,43)"/><text x="21.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.35%)</title><rect x="18" y="980" width="4" height="15" fill="rgb(239,155,18)"/><text x="21.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.35%)</title><rect x="18" y="996" width="4" height="15" fill="rgb(218,218,4)"/><text x="21.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.35%)</title><rect x="18" y="1012" width="4" height="15" fill="rgb(235,182,40)"/><text x="21.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.35%)</title><rect x="18" y="1028" width="4" height="15" fill="rgb(234,215,37)"/><text x="21.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.35%)</title><rect x="18" y="1044" width="4" height="15" fill="rgb(241,3,36)"/><text x="21.00" y="1054.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.35%)</title><rect x="18" y="1060" width="4" height="15" fill="rgb(239,188,46)"/><text x="21.00" y="1070.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.35%)</title><rect x="18" y="1076" width="4" height="15" fill="rgb(234,150,35)"/><text x="21.00" y="1086.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.38%)</title><rect x="10" y="292" width="16" height="15" fill="rgb(250,125,48)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="308" width="16" height="15" fill="rgb(218,203,48)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="324" width="16" height="15" fill="rgb(249,162,23)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="340" width="16" height="15" fill="rgb(233,174,5)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="10" y="356" width="16" height="15" fill="rgb(208,42,2)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="372" width="16" height="15" fill="rgb(250,137,36)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.38%)</title><rect x="10" y="388" width="16" height="15" fill="rgb(229,92,12)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="404" width="16" height="15" fill="rgb(246,107,21)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="420" width="16" height="15" fill="rgb(232,2,15)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="436" width="16" height="15" fill="rgb(242,159,51)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="10" y="452" width="16" height="15" fill="rgb(247,20,26)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="468" width="16" height="15" fill="rgb(215,62,29)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.38%)</title><rect x="10" y="484" width="16" height="15" fill="rgb(241,162,12)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="500" width="16" height="15" fill="rgb(225,214,25)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="516" width="16" height="15" fill="rgb(214,49,54)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="532" width="16" height="15" fill="rgb(226,153,12)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="10" y="548" width="16" height="15" fill="rgb(235,81,32)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="564" width="16" height="15" fill="rgb(232,9,45)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.38%)</title><rect x="10" y="580" width="16" height="15" fill="rgb(215,34,10)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="596" width="16" height="15" fill="rgb(224,85,0)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="612" width="16" height="15" fill="rgb(245,70,2)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="628" width="16" height="15" fill="rgb(227,160,40)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="644" width="16" height="15" fill="rgb(218,215,23)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="660" width="16" height="15" fill="rgb(209,131,17)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="676" width="16" height="15" fill="rgb(212,113,4)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="10" y="692" width="16" height="15" fill="rgb(246,19,8)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="708" width="16" height="15" fill="rgb(220,77,32)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.38%)</title><rect x="10" y="724" width="16" height="15" fill="rgb(227,41,32)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="740" width="16" height="15" fill="rgb(211,155,13)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="756" width="16" height="15" fill="rgb(207,214,49)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="772" width="16" height="15" fill="rgb(211,101,51)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="10" y="788" width="16" height="15" fill="rgb(250,51,36)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="10" y="804" width="16" height="15" fill="rgb(244,83,48)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.38%)</title><rect x="10" y="820" width="16" height="15" fill="rgb(246,41,3)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.38%)</title><rect x="10" y="836" width="16" height="15" fill="rgb(246,211,49)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.38%)</title><rect x="10" y="852" width="16" height="15" fill="rgb(222,89,34)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="18" y="868" width="8" height="15" fill="rgb(230,151,52)"/><text x="21.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="18" y="884" width="8" height="15" fill="rgb(205,117,24)"/><text x="21.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="18" y="900" width="8" height="15" fill="rgb(211,229,1)"/><text x="21.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="18" y="916" width="8" height="15" fill="rgb(251,29,51)"/><text x="21.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="932" width="4" height="15" fill="rgb(239,145,4)"/><text x="25.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="948" width="4" height="15" fill="rgb(241,29,8)"/><text x="25.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="500" width="4" height="15" fill="rgb(249,57,18)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="516" width="4" height="15" fill="rgb(206,133,27)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="532" width="4" height="15" fill="rgb(252,161,19)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="548" width="4" height="15" fill="rgb(226,198,8)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="564" width="4" height="15" fill="rgb(215,156,22)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.35%)</title><rect x="26" y="580" width="4" height="15" fill="rgb(235,221,54)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="596" width="4" height="15" fill="rgb(224,83,34)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="612" width="4" height="15" fill="rgb(231,104,22)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="628" width="4" height="15" fill="rgb(226,160,33)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="644" width="4" height="15" fill="rgb(251,138,22)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="660" width="4" height="15" fill="rgb(245,48,25)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.35%)</title><rect x="26" y="676" width="4" height="15" fill="rgb(245,144,2)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="692" width="4" height="15" fill="rgb(231,207,40)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="708" width="4" height="15" fill="rgb(211,79,2)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="724" width="4" height="15" fill="rgb(236,180,50)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="740" width="4" height="15" fill="rgb(238,1,42)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="756" width="4" height="15" fill="rgb(216,189,24)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.35%)</title><rect x="26" y="772" width="4" height="15" fill="rgb(230,205,25)"/><text x="29.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="788" width="4" height="15" fill="rgb(207,201,20)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="804" width="4" height="15" fill="rgb(212,53,49)"/><text x="29.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="820" width="4" height="15" fill="rgb(248,26,37)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="836" width="4" height="15" fill="rgb(220,13,19)"/><text x="29.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="852" width="4" height="15" fill="rgb(246,77,6)"/><text x="29.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="868" width="4" height="15" fill="rgb(212,215,18)"/><text x="29.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="884" width="4" height="15" fill="rgb(208,145,42)"/><text x="29.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.35%)</title><rect x="26" y="900" width="4" height="15" fill="rgb(232,30,14)"/><text x="29.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="916" width="4" height="15" fill="rgb(240,164,17)"/><text x="29.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="932" width="4" height="15" fill="rgb(234,82,37)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="948" width="4" height="15" fill="rgb(233,90,52)"/><text x="29.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="964" width="4" height="15" fill="rgb(253,119,32)"/><text x="29.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="980" width="4" height="15" fill="rgb(251,2,39)"/><text x="29.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="996" width="4" height="15" fill="rgb(222,155,8)"/><text x="29.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1012" width="4" height="15" fill="rgb(246,27,43)"/><text x="29.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.35%)</title><rect x="26" y="1028" width="4" height="15" fill="rgb(246,112,32)"/><text x="29.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.35%)</title><rect x="26" y="1044" width="4" height="15" fill="rgb(251,66,45)"/><text x="29.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.08%)</title><rect x="10" y="196" width="24" height="15" fill="rgb(220,211,19)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.08%)</title><rect x="10" y="212" width="24" height="15" fill="rgb(248,103,13)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.08%)</title><rect x="10" y="228" width="24" height="15" fill="rgb(231,106,38)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.08%)</title><rect x="10" y="244" width="24" height="15" fill="rgb(230,223,50)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.08%)</title><rect x="10" y="260" width="24" height="15" fill="rgb(221,85,20)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.08%)</title><rect x="10" y="276" width="24" height="15" fill="rgb(243,2,3)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.69%)</title><rect x="26" y="292" width="8" height="15" fill="rgb(226,182,7)"/><text x="29.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="26" y="308" width="8" height="15" fill="rgb(251,150,30)"/><text x="29.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="26" y="324" width="8" height="15" fill="rgb(206,146,5)"/><text x="29.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="26" y="340" width="8" height="15" fill="rgb(223,177,21)"/><text x="29.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="26" y="356" width="8" height="15" fill="rgb(227,117,24)"/><text x="29.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="26" y="372" width="8" height="15" fill="rgb(231,209,33)"/><text x="29.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.69%)</title><rect x="26" y="388" width="8" height="15" fill="rgb(244,72,17)"/><text x="29.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="26" y="404" width="8" height="15" fill="rgb(223,170,42)"/><text x="29.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="26" y="420" width="8" height="15" fill="rgb(207,147,1)"/><text x="29.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="26" y="436" width="8" height="15" fill="rgb(216,101,37)"/><text x="29.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="26" y="452" width="8" height="15" fill="rgb(244,158,51)"/><text x="29.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="26" y="468" width="8" height="15" fill="rgb(235,35,25)"/><text x="29.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.69%)</title><rect x="26" y="484" width="8" height="15" fill="rgb(208,142,24)"/><text x="29.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="500" width="4" height="15" fill="rgb(225,210,11)"/><text x="33.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="516" width="4" height="15" fill="rgb(216,173,47)"/><text x="33.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="532" width="4" height="15" fill="rgb(210,182,43)"/><text x="33.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="548" width="4" height="15" fill="rgb(209,93,31)"/><text x="33.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="564" width="4" height="15" fill="rgb(237,166,19)"/><text x="33.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="580" width="4" height="15" fill="rgb(231,219,39)"/><text x="33.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="596" width="4" height="15" fill="rgb(212,21,19)"/><text x="33.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.35%)</title><rect x="30" y="612" width="4" height="15" fill="rgb(211,178,10)"/><text x="33.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="628" width="4" height="15" fill="rgb(221,208,47)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="644" width="4" height="15" fill="rgb(237,178,17)"/><text x="33.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="660" width="4" height="15" fill="rgb(229,188,27)"/><text x="33.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="676" width="4" height="15" fill="rgb(229,65,35)"/><text x="33.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="692" width="4" height="15" fill="rgb(215,125,42)"/><text x="33.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.35%)</title><rect x="30" y="708" width="4" height="15" fill="rgb(237,102,3)"/><text x="33.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="724" width="4" height="15" fill="rgb(244,158,35)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="740" width="4" height="15" fill="rgb(238,61,0)"/><text x="33.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="756" width="4" height="15" fill="rgb(252,221,24)"/><text x="33.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="772" width="4" height="15" fill="rgb(235,135,18)"/><text x="33.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="788" width="4" height="15" fill="rgb(223,3,48)"/><text x="33.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.35%)</title><rect x="30" y="804" width="4" height="15" fill="rgb(251,157,40)"/><text x="33.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="820" width="4" height="15" fill="rgb(253,30,42)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="836" width="4" height="15" fill="rgb(238,25,16)"/><text x="33.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="852" width="4" height="15" fill="rgb(237,8,17)"/><text x="33.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="868" width="4" height="15" fill="rgb(238,144,39)"/><text x="33.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="884" width="4" height="15" fill="rgb(205,204,35)"/><text x="33.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.35%)</title><rect x="30" y="900" width="4" height="15" fill="rgb(206,173,50)"/><text x="33.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="916" width="4" height="15" fill="rgb(236,62,49)"/><text x="33.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="932" width="4" height="15" fill="rgb(248,198,35)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="948" width="4" height="15" fill="rgb(208,43,40)"/><text x="33.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="964" width="4" height="15" fill="rgb(210,154,8)"/><text x="33.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="980" width="4" height="15" fill="rgb(252,23,54)"/><text x="33.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="996" width="4" height="15" fill="rgb(239,106,42)"/><text x="33.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="1012" width="4" height="15" fill="rgb(214,207,45)"/><text x="33.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py) (1 samples, 0.35%)</title><rect x="30" y="1028" width="4" height="15" fill="rgb(225,18,28)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="1044" width="4" height="15" fill="rgb(219,28,41)"/><text x="33.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="1060" width="4" height="15" fill="rgb(216,105,13)"/><text x="33.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="1076" width="4" height="15" fill="rgb(214,120,42)"/><text x="33.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="1092" width="4" height="15" fill="rgb(213,139,29)"/><text x="33.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="1108" width="4" height="15" fill="rgb(215,142,38)"/><text x="33.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py) (1 samples, 0.35%)</title><rect x="30" y="1124" width="4" height="15" fill="rgb(207,186,5)"/><text x="33.00" y="1134.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/convert.py) (1 samples, 0.35%)</title><rect x="34" y="868" width="4" height="15" fill="rgb(216,81,52)"/><text x="37.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="884" width="4" height="15" fill="rgb(224,110,27)"/><text x="37.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="900" width="4" height="15" fill="rgb(217,201,0)"/><text x="37.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="916" width="4" height="15" fill="rgb(228,85,54)"/><text x="37.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="932" width="4" height="15" fill="rgb(228,221,33)"/><text x="37.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="948" width="4" height="15" fill="rgb(223,175,5)"/><text x="37.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_operator_mixin.py) (1 samples, 0.35%)</title><rect x="34" y="964" width="4" height="15" fill="rgb(252,185,7)"/><text x="37.00" y="974.50"></text></g><g><title>OnnxOperatorMixin (skl2onnx/algebra/onnx_operator_mixin.py) (1 samples, 0.35%)</title><rect x="34" y="980" width="4" height="15" fill="rgb(251,124,41)"/><text x="37.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="484" width="8" height="15" fill="rgb(238,154,4)"/><text x="37.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="500" width="8" height="15" fill="rgb(208,37,2)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="516" width="8" height="15" fill="rgb(231,159,38)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="532" width="8" height="15" fill="rgb(239,140,7)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="34" y="548" width="8" height="15" fill="rgb(227,109,48)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="564" width="8" height="15" fill="rgb(205,128,44)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.69%)</title><rect x="34" y="580" width="8" height="15" fill="rgb(220,99,41)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="596" width="8" height="15" fill="rgb(221,167,20)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="612" width="8" height="15" fill="rgb(219,139,36)"/><text x="37.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="628" width="8" height="15" fill="rgb(227,13,52)"/><text x="37.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="34" y="644" width="8" height="15" fill="rgb(225,123,23)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="660" width="8" height="15" fill="rgb(247,157,20)"/><text x="37.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.69%)</title><rect x="34" y="676" width="8" height="15" fill="rgb(247,48,41)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="692" width="8" height="15" fill="rgb(208,202,38)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="708" width="8" height="15" fill="rgb(209,104,9)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="724" width="8" height="15" fill="rgb(254,192,54)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="34" y="740" width="8" height="15" fill="rgb(246,39,13)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="756" width="8" height="15" fill="rgb(222,71,29)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.69%)</title><rect x="34" y="772" width="8" height="15" fill="rgb(235,86,29)"/><text x="37.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="788" width="8" height="15" fill="rgb(223,227,29)"/><text x="37.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="804" width="8" height="15" fill="rgb(221,203,33)"/><text x="37.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="820" width="8" height="15" fill="rgb(216,184,15)"/><text x="37.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="34" y="836" width="8" height="15" fill="rgb(247,182,49)"/><text x="37.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="852" width="8" height="15" fill="rgb(216,157,20)"/><text x="37.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.35%)</title><rect x="38" y="868" width="4" height="15" fill="rgb(221,207,13)"/><text x="41.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="884" width="4" height="15" fill="rgb(212,56,0)"/><text x="41.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="900" width="4" height="15" fill="rgb(215,67,52)"/><text x="41.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="916" width="4" height="15" fill="rgb(244,214,20)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="932" width="4" height="15" fill="rgb(248,101,29)"/><text x="41.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="948" width="4" height="15" fill="rgb(223,80,21)"/><text x="41.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="964" width="4" height="15" fill="rgb(228,138,17)"/><text x="41.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="980" width="4" height="15" fill="rgb(236,131,9)"/><text x="41.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="996" width="4" height="15" fill="rgb(216,171,3)"/><text x="41.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.35%)</title><rect x="38" y="1012" width="4" height="15" fill="rgb(217,108,0)"/><text x="41.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1028" width="4" height="15" fill="rgb(225,96,18)"/><text x="41.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1044" width="4" height="15" fill="rgb(211,109,20)"/><text x="41.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1060" width="4" height="15" fill="rgb(220,110,18)"/><text x="41.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="1076" width="4" height="15" fill="rgb(229,211,23)"/><text x="41.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1092" width="4" height="15" fill="rgb(252,218,10)"/><text x="41.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.35%)</title><rect x="38" y="1108" width="4" height="15" fill="rgb(219,45,20)"/><text x="41.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1124" width="4" height="15" fill="rgb(217,1,5)"/><text x="41.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1140" width="4" height="15" fill="rgb(234,208,9)"/><text x="41.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1156" width="4" height="15" fill="rgb(236,94,22)"/><text x="41.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1172" width="4" height="15" fill="rgb(229,32,9)"/><text x="41.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1188" width="4" height="15" fill="rgb(222,25,10)"/><text x="41.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="1204" width="4" height="15" fill="rgb(222,207,26)"/><text x="41.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1220" width="4" height="15" fill="rgb(248,54,37)"/><text x="41.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.35%)</title><rect x="38" y="1236" width="4" height="15" fill="rgb(218,21,35)"/><text x="41.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1252" width="4" height="15" fill="rgb(213,17,41)"/><text x="41.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1268" width="4" height="15" fill="rgb(224,147,21)"/><text x="41.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1284" width="4" height="15" fill="rgb(215,87,25)"/><text x="41.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1300" width="4" height="15" fill="rgb(237,139,13)"/><text x="41.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1316" width="4" height="15" fill="rgb(233,200,34)"/><text x="41.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="1332" width="4" height="15" fill="rgb(246,58,50)"/><text x="41.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1348" width="4" height="15" fill="rgb(230,12,2)"/><text x="41.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.35%)</title><rect x="38" y="1364" width="4" height="15" fill="rgb(210,89,25)"/><text x="41.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1380" width="4" height="15" fill="rgb(221,157,49)"/><text x="41.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1396" width="4" height="15" fill="rgb(238,63,14)"/><text x="41.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1412" width="4" height="15" fill="rgb(243,109,35)"/><text x="41.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="1428" width="4" height="15" fill="rgb(227,114,46)"/><text x="41.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1444" width="4" height="15" fill="rgb(219,156,47)"/><text x="41.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.35%)</title><rect x="38" y="1460" width="4" height="15" fill="rgb(219,183,5)"/><text x="41.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1476" width="4" height="15" fill="rgb(218,109,49)"/><text x="41.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1492" width="4" height="15" fill="rgb(223,18,18)"/><text x="41.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1508" width="4" height="15" fill="rgb(214,33,15)"/><text x="41.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="1524" width="4" height="15" fill="rgb(246,49,39)"/><text x="41.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1540" width="4" height="15" fill="rgb(252,126,49)"/><text x="41.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.35%)</title><rect x="38" y="1556" width="4" height="15" fill="rgb(217,180,29)"/><text x="41.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.35%)</title><rect x="38" y="1572" width="4" height="15" fill="rgb(233,62,51)"/><text x="41.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1588" width="4" height="15" fill="rgb(214,122,3)"/><text x="41.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1604" width="4" height="15" fill="rgb(206,224,2)"/><text x="41.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1620" width="4" height="15" fill="rgb(240,45,42)"/><text x="41.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="1636" width="4" height="15" fill="rgb(243,131,49)"/><text x="41.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1652" width="4" height="15" fill="rgb(241,61,4)"/><text x="41.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.35%)</title><rect x="38" y="1668" width="4" height="15" fill="rgb(235,1,29)"/><text x="41.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1684" width="4" height="15" fill="rgb(216,200,29)"/><text x="41.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1700" width="4" height="15" fill="rgb(215,185,21)"/><text x="41.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1716" width="4" height="15" fill="rgb(233,93,43)"/><text x="41.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="1732" width="4" height="15" fill="rgb(240,38,53)"/><text x="41.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1748" width="4" height="15" fill="rgb(249,15,19)"/><text x="41.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py) (1 samples, 0.35%)</title><rect x="38" y="1764" width="4" height="15" fill="rgb(209,207,49)"/><text x="41.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1780" width="4" height="15" fill="rgb(250,219,43)"/><text x="41.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1796" width="4" height="15" fill="rgb(233,29,42)"/><text x="41.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1812" width="4" height="15" fill="rgb(234,45,49)"/><text x="41.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1828" width="4" height="15" fill="rgb(236,209,0)"/><text x="41.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1844" width="4" height="15" fill="rgb(252,172,42)"/><text x="41.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="1860" width="4" height="15" fill="rgb(218,136,33)"/><text x="41.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1876" width="4" height="15" fill="rgb(241,113,50)"/><text x="41.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py) (1 samples, 0.35%)</title><rect x="38" y="1892" width="4" height="15" fill="rgb(254,124,10)"/><text x="41.00" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1908" width="4" height="15" fill="rgb(239,169,35)"/><text x="41.00" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1924" width="4" height="15" fill="rgb(217,224,18)"/><text x="41.00" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1940" width="4" height="15" fill="rgb(227,57,0)"/><text x="41.00" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="1956" width="4" height="15" fill="rgb(224,121,40)"/><text x="41.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1972" width="4" height="15" fill="rgb(205,20,28)"/><text x="41.00" y="1982.50"></text></g><g><title>&lt;module&gt; (jinja2/utils.py) (1 samples, 0.35%)</title><rect x="38" y="1988" width="4" height="15" fill="rgb(231,91,3)"/><text x="41.00" y="1998.50"></text></g><g><title>compile (re.py) (1 samples, 0.35%)</title><rect x="38" y="2004" width="4" height="15" fill="rgb(238,114,11)"/><text x="41.00" y="2014.50"></text></g><g><title>_compile (re.py) (1 samples, 0.35%)</title><rect x="38" y="2020" width="4" height="15" fill="rgb(210,30,16)"/><text x="41.00" y="2030.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.35%)</title><rect x="38" y="2036" width="4" height="15" fill="rgb(228,79,43)"/><text x="41.00" y="2046.50"></text></g><g><title>0x7f2e98f2540e (?) (1 samples, 0.35%)</title><rect x="42" y="916" width="4" height="15" fill="rgb(233,70,24)"/><text x="45.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="932" width="4" height="15" fill="rgb(221,63,21)"/><text x="45.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="948" width="4" height="15" fill="rgb(208,27,47)"/><text x="45.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="964" width="4" height="15" fill="rgb(212,48,14)"/><text x="45.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="42" y="980" width="4" height="15" fill="rgb(206,17,8)"/><text x="45.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="996" width="4" height="15" fill="rgb(213,163,14)"/><text x="45.00" y="1006.50"></text></g><g><title>0x7f2e98cdebb0 (?) (1 samples, 0.35%)</title><rect x="42" y="1012" width="4" height="15" fill="rgb(216,126,17)"/><text x="45.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1028" width="4" height="15" fill="rgb(238,227,26)"/><text x="45.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1044" width="4" height="15" fill="rgb(238,227,43)"/><text x="45.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1060" width="4" height="15" fill="rgb(228,153,8)"/><text x="45.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="42" y="1076" width="4" height="15" fill="rgb(227,53,37)"/><text x="45.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1092" width="4" height="15" fill="rgb(232,131,6)"/><text x="45.00" y="1102.50"></text></g><g><title>0x7f2e98665e18 (?) (1 samples, 0.35%)</title><rect x="42" y="1108" width="4" height="15" fill="rgb(240,126,6)"/><text x="45.00" y="1118.50"></text></g><g><title>0x7f2e9866828a (?) (1 samples, 0.35%)</title><rect x="42" y="1124" width="4" height="15" fill="rgb(237,25,30)"/><text x="45.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1140" width="4" height="15" fill="rgb(205,12,2)"/><text x="45.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1156" width="4" height="15" fill="rgb(209,85,27)"/><text x="45.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1172" width="4" height="15" fill="rgb(213,100,46)"/><text x="45.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="42" y="1188" width="4" height="15" fill="rgb(243,141,36)"/><text x="45.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1204" width="4" height="15" fill="rgb(207,142,19)"/><text x="45.00" y="1214.50"></text></g><g><title>&lt;module&gt; (dateutil/tz/__init__.py) (1 samples, 0.35%)</title><rect x="42" y="1220" width="4" height="15" fill="rgb(214,106,10)"/><text x="45.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (2 samples, 0.69%)</title><rect x="42" y="724" width="8" height="15" fill="rgb(227,225,54)"/><text x="45.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="42" y="740" width="8" height="15" fill="rgb(216,101,25)"/><text x="45.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="42" y="756" width="8" height="15" fill="rgb(223,190,39)"/><text x="45.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="42" y="772" width="8" height="15" fill="rgb(253,94,17)"/><text x="45.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="42" y="788" width="8" height="15" fill="rgb(212,212,36)"/><text x="45.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="42" y="804" width="8" height="15" fill="rgb(234,19,10)"/><text x="45.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (2 samples, 0.69%)</title><rect x="42" y="820" width="8" height="15" fill="rgb(205,33,22)"/><text x="45.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="42" y="836" width="8" height="15" fill="rgb(239,139,50)"/><text x="45.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="42" y="852" width="8" height="15" fill="rgb(220,64,43)"/><text x="45.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="42" y="868" width="8" height="15" fill="rgb(227,52,46)"/><text x="45.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="42" y="884" width="8" height="15" fill="rgb(237,30,46)"/><text x="45.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="42" y="900" width="8" height="15" fill="rgb(250,117,23)"/><text x="45.00" y="910.50"></text></g><g><title>0x7f2e98f2540e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="46" y="916" width="4" height="15" fill="rgb(235,163,8)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="932" width="4" height="15" fill="rgb(251,174,22)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="948" width="4" height="15" fill="rgb(245,47,9)"/><text x="49.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="964" width="4" height="15" fill="rgb(225,8,50)"/><text x="49.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="46" y="980" width="4" height="15" fill="rgb(251,86,25)"/><text x="49.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="996" width="4" height="15" fill="rgb(213,173,54)"/><text x="49.00" y="1006.50"></text></g><g><title>0x7f2e98cdecd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="46" y="1012" width="4" height="15" fill="rgb(213,30,23)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1028" width="4" height="15" fill="rgb(228,170,17)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1044" width="4" height="15" fill="rgb(234,222,4)"/><text x="49.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1060" width="4" height="15" fill="rgb(248,174,24)"/><text x="49.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="46" y="1076" width="4" height="15" fill="rgb(249,155,50)"/><text x="49.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1092" width="4" height="15" fill="rgb(230,38,24)"/><text x="49.00" y="1102.50"></text></g><g><title>0x7f2e983d40e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="46" y="1108" width="4" height="15" fill="rgb(226,54,7)"/><text x="49.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1124" width="4" height="15" fill="rgb(205,166,38)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1140" width="4" height="15" fill="rgb(207,61,42)"/><text x="49.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1156" width="4" height="15" fill="rgb(253,140,1)"/><text x="49.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="46" y="1172" width="4" height="15" fill="rgb(236,166,35)"/><text x="49.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1188" width="4" height="15" fill="rgb(208,158,41)"/><text x="49.00" y="1198.50"></text></g><g><title>0x7f2e98158e68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="46" y="1204" width="4" height="15" fill="rgb(219,7,9)"/><text x="49.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1220" width="4" height="15" fill="rgb(241,57,13)"/><text x="49.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1236" width="4" height="15" fill="rgb(252,8,30)"/><text x="49.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1252" width="4" height="15" fill="rgb(240,101,25)"/><text x="49.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="46" y="1268" width="4" height="15" fill="rgb(208,226,1)"/><text x="49.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1284" width="4" height="15" fill="rgb(235,88,51)"/><text x="49.00" y="1294.50"></text></g><g><title>0x7f2e97ee92fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="46" y="1300" width="4" height="15" fill="rgb(230,135,13)"/><text x="49.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1316" width="4" height="15" fill="rgb(239,40,49)"/><text x="49.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1332" width="4" height="15" fill="rgb(225,57,17)"/><text x="49.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1348" width="4" height="15" fill="rgb(214,154,12)"/><text x="49.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="46" y="1364" width="4" height="15" fill="rgb(229,123,41)"/><text x="49.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1380" width="4" height="15" fill="rgb(237,102,26)"/><text x="49.00" y="1390.50"></text></g><g><title>0x7f2e97ccd153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="46" y="1396" width="4" height="15" fill="rgb(220,170,7)"/><text x="49.00" y="1406.50"></text></g><g><title>0x7f2e97ccbc13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="46" y="1412" width="4" height="15" fill="rgb(230,11,50)"/><text x="49.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1428" width="4" height="15" fill="rgb(228,125,13)"/><text x="49.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1444" width="4" height="15" fill="rgb(214,52,26)"/><text x="49.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1460" width="4" height="15" fill="rgb(248,209,53)"/><text x="49.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="46" y="1476" width="4" height="15" fill="rgb(209,206,0)"/><text x="49.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1492" width="4" height="15" fill="rgb(252,207,25)"/><text x="49.00" y="1502.50"></text></g><g><title>0x7f2e97a24eda (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="46" y="1508" width="4" height="15" fill="rgb(224,133,13)"/><text x="49.00" y="1518.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.73%)</title><rect x="34" y="340" width="20" height="15" fill="rgb(250,164,42)"/><text x="37.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.73%)</title><rect x="34" y="356" width="20" height="15" fill="rgb(206,130,31)"/><text x="37.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.73%)</title><rect x="34" y="372" width="20" height="15" fill="rgb(252,191,6)"/><text x="37.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.73%)</title><rect x="34" y="388" width="20" height="15" fill="rgb(216,82,17)"/><text x="37.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.73%)</title><rect x="34" y="404" width="20" height="15" fill="rgb(223,137,13)"/><text x="37.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.73%)</title><rect x="34" y="420" width="20" height="15" fill="rgb(209,60,11)"/><text x="37.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 1.73%)</title><rect x="34" y="436" width="20" height="15" fill="rgb(230,127,25)"/><text x="37.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.73%)</title><rect x="34" y="452" width="20" height="15" fill="rgb(234,44,25)"/><text x="37.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.73%)</title><rect x="34" y="468" width="20" height="15" fill="rgb(253,218,35)"/><text x="37.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="484" width="12" height="15" fill="rgb(229,223,38)"/><text x="45.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.04%)</title><rect x="42" y="500" width="12" height="15" fill="rgb(207,211,49)"/><text x="45.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="516" width="12" height="15" fill="rgb(225,225,12)"/><text x="45.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.04%)</title><rect x="42" y="532" width="12" height="15" fill="rgb(208,6,37)"/><text x="45.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="548" width="12" height="15" fill="rgb(220,226,1)"/><text x="45.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="564" width="12" height="15" fill="rgb(214,10,36)"/><text x="45.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="580" width="12" height="15" fill="rgb(253,191,27)"/><text x="45.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.04%)</title><rect x="42" y="596" width="12" height="15" fill="rgb(205,180,52)"/><text x="45.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="612" width="12" height="15" fill="rgb(249,80,35)"/><text x="45.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 1.04%)</title><rect x="42" y="628" width="12" height="15" fill="rgb(241,129,17)"/><text x="45.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="644" width="12" height="15" fill="rgb(238,194,9)"/><text x="45.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="660" width="12" height="15" fill="rgb(229,223,15)"/><text x="45.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="676" width="12" height="15" fill="rgb(240,54,22)"/><text x="45.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.04%)</title><rect x="42" y="692" width="12" height="15" fill="rgb(218,183,18)"/><text x="45.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="708" width="12" height="15" fill="rgb(239,133,16)"/><text x="45.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.35%)</title><rect x="50" y="724" width="4" height="15" fill="rgb(227,162,29)"/><text x="53.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="50" y="740" width="4" height="15" fill="rgb(224,164,1)"/><text x="53.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.15%)</title><rect x="10" y="68" width="48" height="15" fill="rgb(219,218,3)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.15%)</title><rect x="10" y="84" width="48" height="15" fill="rgb(207,86,50)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.15%)</title><rect x="10" y="100" width="48" height="15" fill="rgb(211,47,7)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 4.15%)</title><rect x="10" y="116" width="48" height="15" fill="rgb(243,83,14)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.15%)</title><rect x="10" y="132" width="48" height="15" fill="rgb(251,54,14)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (12 samples, 4.15%)</title><rect x="10" y="148" width="48" height="15" fill="rgb(244,173,24)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.15%)</title><rect x="10" y="164" width="48" height="15" fill="rgb(243,140,28)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.15%)</title><rect x="10" y="180" width="48" height="15" fill="rgb(243,2,8)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.08%)</title><rect x="34" y="196" width="24" height="15" fill="rgb(207,180,39)"/><text x="37.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.08%)</title><rect x="34" y="212" width="24" height="15" fill="rgb(213,210,51)"/><text x="37.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.08%)</title><rect x="34" y="228" width="24" height="15" fill="rgb(246,48,2)"/><text x="37.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 2.08%)</title><rect x="34" y="244" width="24" height="15" fill="rgb(245,126,51)"/><text x="37.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.08%)</title><rect x="34" y="260" width="24" height="15" fill="rgb(247,88,4)"/><text x="37.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.08%)</title><rect x="34" y="276" width="24" height="15" fill="rgb(223,11,13)"/><text x="37.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.08%)</title><rect x="34" y="292" width="24" height="15" fill="rgb(223,143,3)"/><text x="37.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.08%)</title><rect x="34" y="308" width="24" height="15" fill="rgb(250,151,6)"/><text x="37.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.08%)</title><rect x="34" y="324" width="24" height="15" fill="rgb(250,84,9)"/><text x="37.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.35%)</title><rect x="54" y="340" width="4" height="15" fill="rgb(224,53,49)"/><text x="57.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="356" width="4" height="15" fill="rgb(205,229,47)"/><text x="57.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="372" width="4" height="15" fill="rgb(252,167,11)"/><text x="57.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="388" width="4" height="15" fill="rgb(217,141,35)"/><text x="57.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="404" width="4" height="15" fill="rgb(251,202,27)"/><text x="57.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="420" width="4" height="15" fill="rgb(213,1,53)"/><text x="57.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="436" width="4" height="15" fill="rgb(215,140,40)"/><text x="57.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="452" width="4" height="15" fill="rgb(208,96,19)"/><text x="57.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="468" width="4" height="15" fill="rgb(234,52,44)"/><text x="57.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.35%)</title><rect x="54" y="484" width="4" height="15" fill="rgb(252,212,11)"/><text x="57.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="500" width="4" height="15" fill="rgb(245,216,43)"/><text x="57.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="516" width="4" height="15" fill="rgb(254,178,42)"/><text x="57.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="532" width="4" height="15" fill="rgb(225,84,43)"/><text x="57.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="548" width="4" height="15" fill="rgb(225,202,32)"/><text x="57.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="564" width="4" height="15" fill="rgb(224,55,50)"/><text x="57.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.35%)</title><rect x="54" y="580" width="4" height="15" fill="rgb(244,3,28)"/><text x="57.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="596" width="4" height="15" fill="rgb(250,35,28)"/><text x="57.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="612" width="4" height="15" fill="rgb(244,227,32)"/><text x="57.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="628" width="4" height="15" fill="rgb(219,122,14)"/><text x="57.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="644" width="4" height="15" fill="rgb(214,183,27)"/><text x="57.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="660" width="4" height="15" fill="rgb(218,98,26)"/><text x="57.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.35%)</title><rect x="54" y="676" width="4" height="15" fill="rgb(252,24,52)"/><text x="57.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="692" width="4" height="15" fill="rgb(243,219,20)"/><text x="57.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="708" width="4" height="15" fill="rgb(235,22,27)"/><text x="57.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="724" width="4" height="15" fill="rgb(224,209,27)"/><text x="57.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="740" width="4" height="15" fill="rgb(222,192,43)"/><text x="57.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="756" width="4" height="15" fill="rgb(251,2,53)"/><text x="57.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.35%)</title><rect x="54" y="772" width="4" height="15" fill="rgb(227,150,15)"/><text x="57.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="788" width="4" height="15" fill="rgb(238,91,31)"/><text x="57.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="804" width="4" height="15" fill="rgb(215,151,19)"/><text x="57.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="820" width="4" height="15" fill="rgb(251,94,33)"/><text x="57.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="836" width="4" height="15" fill="rgb(227,161,0)"/><text x="57.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="852" width="4" height="15" fill="rgb(230,218,38)"/><text x="57.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="868" width="4" height="15" fill="rgb(219,39,27)"/><text x="57.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="884" width="4" height="15" fill="rgb(236,200,18)"/><text x="57.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.35%)</title><rect x="54" y="900" width="4" height="15" fill="rgb(224,14,22)"/><text x="57.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="916" width="4" height="15" fill="rgb(214,70,20)"/><text x="57.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="932" width="4" height="15" fill="rgb(205,101,16)"/><text x="57.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="948" width="4" height="15" fill="rgb(237,36,19)"/><text x="57.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="964" width="4" height="15" fill="rgb(250,200,19)"/><text x="57.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="980" width="4" height="15" fill="rgb(216,36,11)"/><text x="57.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="996" width="4" height="15" fill="rgb(220,62,32)"/><text x="57.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="1012" width="4" height="15" fill="rgb(210,207,49)"/><text x="57.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1028" width="4" height="15" fill="rgb(246,96,11)"/><text x="57.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.35%)</title><rect x="54" y="1044" width="4" height="15" fill="rgb(217,128,32)"/><text x="57.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1060" width="4" height="15" fill="rgb(251,39,37)"/><text x="57.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1076" width="4" height="15" fill="rgb(251,115,37)"/><text x="57.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1092" width="4" height="15" fill="rgb(223,18,28)"/><text x="57.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1108" width="4" height="15" fill="rgb(244,118,34)"/><text x="57.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1124" width="4" height="15" fill="rgb(229,32,3)"/><text x="57.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="1140" width="4" height="15" fill="rgb(252,61,3)"/><text x="57.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1156" width="4" height="15" fill="rgb(223,131,15)"/><text x="57.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.35%)</title><rect x="54" y="1172" width="4" height="15" fill="rgb(226,8,6)"/><text x="57.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1188" width="4" height="15" fill="rgb(245,160,29)"/><text x="57.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1204" width="4" height="15" fill="rgb(241,16,3)"/><text x="57.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1220" width="4" height="15" fill="rgb(206,95,11)"/><text x="57.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1236" width="4" height="15" fill="rgb(205,14,15)"/><text x="57.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1252" width="4" height="15" fill="rgb(214,205,38)"/><text x="57.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="1268" width="4" height="15" fill="rgb(206,194,5)"/><text x="57.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1284" width="4" height="15" fill="rgb(249,92,26)"/><text x="57.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py) (1 samples, 0.35%)</title><rect x="54" y="1300" width="4" height="15" fill="rgb(211,113,25)"/><text x="57.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1316" width="4" height="15" fill="rgb(228,18,30)"/><text x="57.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1332" width="4" height="15" fill="rgb(216,91,21)"/><text x="57.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1348" width="4" height="15" fill="rgb(254,177,47)"/><text x="57.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="1364" width="4" height="15" fill="rgb(211,34,14)"/><text x="57.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1380" width="4" height="15" fill="rgb(224,49,27)"/><text x="57.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py) (1 samples, 0.35%)</title><rect x="54" y="1396" width="4" height="15" fill="rgb(214,135,46)"/><text x="57.00" y="1406.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1412" width="4" height="15" fill="rgb(209,103,43)"/><text x="57.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1428" width="4" height="15" fill="rgb(252,106,22)"/><text x="57.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1444" width="4" height="15" fill="rgb(248,73,51)"/><text x="57.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1460" width="4" height="15" fill="rgb(239,14,0)"/><text x="57.00" y="1470.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="1476" width="4" height="15" fill="rgb(235,156,3)"/><text x="57.00" y="1486.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="1492" width="4" height="15" fill="rgb(205,173,37)"/><text x="57.00" y="1502.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="1508" width="4" height="15" fill="rgb(251,74,46)"/><text x="57.00" y="1518.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="1524" width="4" height="15" fill="rgb(237,26,31)"/><text x="57.00" y="1534.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="1540" width="4" height="15" fill="rgb(217,218,13)"/><text x="57.00" y="1550.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="1556" width="4" height="15" fill="rgb(217,177,25)"/><text x="57.00" y="1566.50"></text></g><g><title>0x7f2e81e0eff9 (?) (1 samples, 0.35%)</title><rect x="99" y="212" width="4" height="15" fill="rgb(235,36,6)"/><text x="102.00" y="222.50"></text></g><g><title>0x7f2e81e09ef6 (?) (1 samples, 0.35%)</title><rect x="99" y="228" width="4" height="15" fill="rgb(241,107,10)"/><text x="102.00" y="238.50"></text></g><g><title>0x7f2e81dff2cc (?) (1 samples, 0.35%)</title><rect x="99" y="244" width="4" height="15" fill="rgb(217,209,12)"/><text x="102.00" y="254.50"></text></g><g><title>0x7f2e81e1c274 (?) (1 samples, 0.35%)</title><rect x="99" y="260" width="4" height="15" fill="rgb(213,209,23)"/><text x="102.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.35%)</title><rect x="99" y="276" width="4" height="15" fill="rgb(228,117,36)"/><text x="102.00" y="286.50"></text></g><g><title>0x7ffe1a5e1a00 ([vdso]) (1 samples, 0.35%)</title><rect x="103" y="212" width="4" height="15" fill="rgb(205,135,42)"/><text x="106.00" y="222.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="116" y="244" width="4" height="15" fill="rgb(219,210,7)"/><text x="119.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="120" y="260" width="4" height="15" fill="rgb(219,164,16)"/><text x="123.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="120" y="276" width="4" height="15" fill="rgb(231,44,7)"/><text x="123.00" y="286.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_value [clone .isra.101] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="120" y="292" width="4" height="15" fill="rgb(229,228,20)"/><text x="123.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (5 samples, 1.73%)</title><rect x="107" y="212" width="21" height="15" fill="rgb(220,189,0)"/><text x="110.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.38%)</title><rect x="112" y="228" width="16" height="15" fill="rgb(230,9,47)"/><text x="115.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="120" y="244" width="8" height="15" fill="rgb(218,187,27)"/><text x="123.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="124" y="260" width="4" height="15" fill="rgb(222,199,39)"/><text x="127.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="124" y="276" width="4" height="15" fill="rgb(222,59,7)"/><text x="127.00" y="286.50"></text></g><g><title>std::type_info::hash_code (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="124" y="292" width="4" height="15" fill="rgb(251,89,24)"/><text x="127.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="136" y="372" width="4" height="15" fill="rgb(229,47,17)"/><text x="139.00" y="382.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="140" y="372" width="4" height="15" fill="rgb(213,59,45)"/><text x="143.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.04%)</title><rect x="136" y="340" width="12" height="15" fill="rgb(231,126,53)"/><text x="139.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.04%)</title><rect x="136" y="356" width="12" height="15" fill="rgb(223,29,39)"/><text x="139.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::RoundedBytes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="144" y="372" width="4" height="15" fill="rgb(227,197,46)"/><text x="147.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="148" y="340" width="4" height="15" fill="rgb(222,42,30)"/><text x="151.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelInfo::node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="148" y="356" width="4" height="15" fill="rgb(206,93,2)"/><text x="151.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="161" y="452" width="4" height="15" fill="rgb(247,190,19)"/><text x="164.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="161" y="468" width="4" height="15" fill="rgb(224,208,44)"/><text x="164.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="161" y="484" width="4" height="15" fill="rgb(235,190,22)"/><text x="164.00" y="494.50"></text></g><g><title>0x7f2ec1d9ff0a (libc-2.29.so) (1 samples, 0.35%)</title><rect x="161" y="500" width="4" height="15" fill="rgb(243,1,34)"/><text x="164.00" y="510.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;long&gt;::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="165" y="452" width="4" height="15" fill="rgb(252,147,49)"/><text x="168.00" y="462.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.73%)</title><rect x="152" y="356" width="21" height="15" fill="rgb(215,84,49)"/><text x="155.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.73%)</title><rect x="152" y="372" width="21" height="15" fill="rgb(240,197,2)"/><text x="155.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.73%)</title><rect x="152" y="388" width="21" height="15" fill="rgb(237,131,42)"/><text x="155.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.38%)</title><rect x="156" y="404" width="17" height="15" fill="rgb(208,44,50)"/><text x="159.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.38%)</title><rect x="156" y="420" width="17" height="15" fill="rgb(223,139,35)"/><text x="159.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.38%)</title><rect x="156" y="436" width="17" height="15" fill="rgb(225,170,5)"/><text x="159.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="169" y="452" width="4" height="15" fill="rgb(215,144,47)"/><text x="172.00" y="462.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="173" y="356" width="8" height="15" fill="rgb(240,182,26)"/><text x="176.00" y="366.50"></text></g><g><title>0x7f2ec1f1de06 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="177" y="372" width="4" height="15" fill="rgb(211,94,38)"/><text x="180.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.84%)</title><rect x="128" y="260" width="57" height="15" fill="rgb(234,85,49)"/><text x="131.00" y="270.50">onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 4.50%)</title><rect x="132" y="276" width="53" height="15" fill="rgb(252,27,54)"/><text x="135.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 4.50%)</title><rect x="132" y="292" width="53" height="15" fill="rgb(225,106,45)"/><text x="135.00" y="302.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 4.50%)</title><rect x="132" y="308" width="53" height="15" fill="rgb(229,182,46)"/><text x="135.00" y="318.50">onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 4.50%)</title><rect x="132" y="324" width="53" height="15" fill="rgb(253,27,7)"/><text x="135.00" y="334.50">onnxr..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.77%)</title><rect x="152" y="340" width="33" height="15" fill="rgb(245,215,7)"/><text x="155.00" y="350.50">on..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="181" y="356" width="4" height="15" fill="rgb(220,153,34)"/><text x="184.00" y="366.50"></text></g><g><title>0x7f2eb186ad50 (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="181" y="372" width="4" height="15" fill="rgb(212,228,46)"/><text x="184.00" y="382.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 5.19%)</title><rect x="128" y="244" width="61" height="15" fill="rgb(249,93,2)"/><text x="131.00" y="254.50">onnxru..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="185" y="260" width="4" height="15" fill="rgb(232,67,38)"/><text x="188.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="185" y="276" width="4" height="15" fill="rgb(249,188,25)"/><text x="188.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="185" y="292" width="4" height="15" fill="rgb(206,80,38)"/><text x="188.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="185" y="308" width="4" height="15" fill="rgb(218,138,25)"/><text x="188.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="185" y="324" width="4" height="15" fill="rgb(212,204,32)"/><text x="188.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="185" y="340" width="4" height="15" fill="rgb(211,204,37)"/><text x="188.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="185" y="356" width="4" height="15" fill="rgb(212,180,33)"/><text x="188.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="185" y="372" width="4" height="15" fill="rgb(222,174,20)"/><text x="188.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="185" y="388" width="4" height="15" fill="rgb(224,224,49)"/><text x="188.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="185" y="404" width="4" height="15" fill="rgb(211,23,10)"/><text x="188.00" y="414.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="189" y="244" width="4" height="15" fill="rgb(248,128,27)"/><text x="192.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="189" y="260" width="4" height="15" fill="rgb(236,66,52)"/><text x="192.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="193" y="244" width="4" height="15" fill="rgb(244,14,23)"/><text x="196.00" y="254.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="193" y="260" width="4" height="15" fill="rgb(252,224,6)"/><text x="196.00" y="270.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="197" y="244" width="4" height="15" fill="rgb(220,2,52)"/><text x="200.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.35%)</title><rect x="197" y="260" width="4" height="15" fill="rgb(218,4,44)"/><text x="200.00" y="270.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="201" y="244" width="4" height="15" fill="rgb(223,212,20)"/><text x="204.00" y="254.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py) (37 samples, 12.80%)</title><rect x="58" y="68" width="152" height="15" fill="rgb(238,19,39)"/><text x="61.00" y="78.50">profile_ort (bench_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py) (37 samples, 12.80%)</title><rect x="58" y="84" width="152" height="15" fill="rgb(232,81,50)"/><text x="61.00" y="94.50">setup_profile (benc..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py) (37 samples, 12.80%)</title><rect x="58" y="100" width="152" height="15" fill="rgb(217,8,36)"/><text x="61.00" y="110.50">profile (bench_Logi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (36 samples, 12.46%)</title><rect x="63" y="116" width="147" height="15" fill="rgb(223,163,47)"/><text x="66.00" y="126.50">time_predict (mlpr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (32 samples, 11.07%)</title><rect x="79" y="132" width="131" height="15" fill="rgb(245,65,2)"/><text x="82.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (32 samples, 11.07%)</title><rect x="79" y="148" width="131" height="15" fill="rgb(217,208,36)"/><text x="82.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (32 samples, 11.07%)</title><rect x="79" y="164" width="131" height="15" fill="rgb(234,95,52)"/><text x="82.00" y="174.50">_run_whole_runti..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (29 samples, 10.03%)</title><rect x="91" y="180" width="119" height="15" fill="rgb(239,94,18)"/><text x="94.00" y="190.50">run (mlprodict..</text></g><g><title>run (onnxruntime/capi/session.py) (29 samples, 10.03%)</title><rect x="91" y="196" width="119" height="15" fill="rgb(247,12,28)"/><text x="94.00" y="206.50">run (onnxrunti..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 6.92%)</title><rect x="128" y="212" width="82" height="15" fill="rgb(250,104,21)"/><text x="131.00" y="222.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 6.92%)</title><rect x="128" y="228" width="82" height="15" fill="rgb(228,44,43)"/><text x="131.00" y="238.50">void pybi..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="205" y="244" width="5" height="15" fill="rgb(244,222,50)"/><text x="208.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.35%)</title><rect x="267" y="180" width="4" height="15" fill="rgb(221,124,3)"/><text x="270.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.35%)</title><rect x="312" y="196" width="4" height="15" fill="rgb(246,44,1)"/><text x="315.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.35%)</title><rect x="320" y="212" width="4" height="15" fill="rgb(246,20,14)"/><text x="323.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.35%)</title><rect x="320" y="228" width="4" height="15" fill="rgb(217,228,53)"/><text x="323.00" y="238.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.35%)</title><rect x="352" y="260" width="5" height="15" fill="rgb(248,97,27)"/><text x="355.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.35%)</title><rect x="365" y="340" width="4" height="15" fill="rgb(248,153,37)"/><text x="368.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="365" y="356" width="4" height="15" fill="rgb(233,44,3)"/><text x="368.00" y="366.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (2 samples, 0.69%)</title><rect x="365" y="324" width="8" height="15" fill="rgb(218,172,34)"/><text x="368.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="369" y="340" width="4" height="15" fill="rgb(234,145,25)"/><text x="372.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (7 samples, 2.42%)</title><rect x="348" y="244" width="29" height="15" fill="rgb(211,2,5)"/><text x="351.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.73%)</title><rect x="357" y="260" width="20" height="15" fill="rgb(246,194,43)"/><text x="360.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (5 samples, 1.73%)</title><rect x="357" y="276" width="20" height="15" fill="rgb(239,84,48)"/><text x="360.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 1.38%)</title><rect x="361" y="292" width="16" height="15" fill="rgb(222,200,46)"/><text x="364.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (3 samples, 1.04%)</title><rect x="365" y="308" width="12" height="15" fill="rgb(247,106,54)"/><text x="368.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.35%)</title><rect x="373" y="324" width="4" height="15" fill="rgb(229,136,21)"/><text x="376.00" y="334.50"></text></g><g><title>0x7f2ec1e7cff4 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="373" y="340" width="4" height="15" fill="rgb(225,133,49)"/><text x="376.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.35%)</title><rect x="393" y="324" width="4" height="15" fill="rgb(241,113,50)"/><text x="396.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.35%)</title><rect x="393" y="340" width="4" height="15" fill="rgb(220,80,8)"/><text x="396.00" y="350.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.35%)</title><rect x="393" y="356" width="4" height="15" fill="rgb(228,133,54)"/><text x="396.00" y="366.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (6 samples, 2.08%)</title><rect x="377" y="244" width="24" height="15" fill="rgb(249,162,24)"/><text x="380.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (4 samples, 1.38%)</title><rect x="385" y="260" width="16" height="15" fill="rgb(238,119,18)"/><text x="388.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.04%)</title><rect x="389" y="276" width="12" height="15" fill="rgb(250,50,35)"/><text x="392.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (2 samples, 0.69%)</title><rect x="393" y="292" width="8" height="15" fill="rgb(240,119,46)"/><text x="396.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (2 samples, 0.69%)</title><rect x="393" y="308" width="8" height="15" fill="rgb(213,47,17)"/><text x="396.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (1 samples, 0.35%)</title><rect x="397" y="324" width="4" height="15" fill="rgb(249,92,38)"/><text x="400.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.35%)</title><rect x="397" y="340" width="4" height="15" fill="rgb(249,22,46)"/><text x="400.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.35%)</title><rect x="397" y="356" width="4" height="15" fill="rgb(218,21,42)"/><text x="400.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="397" y="372" width="4" height="15" fill="rgb(244,42,16)"/><text x="400.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="397" y="388" width="4" height="15" fill="rgb(251,81,5)"/><text x="400.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.35%)</title><rect x="401" y="260" width="5" height="15" fill="rgb(230,126,29)"/><text x="404.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.35%)</title><rect x="401" y="276" width="5" height="15" fill="rgb(215,225,10)"/><text x="404.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.35%)</title><rect x="401" y="292" width="5" height="15" fill="rgb(248,63,9)"/><text x="404.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="406" y="276" width="4" height="15" fill="rgb(253,95,10)"/><text x="409.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="406" y="292" width="4" height="15" fill="rgb(230,163,34)"/><text x="409.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.35%)</title><rect x="410" y="276" width="4" height="15" fill="rgb(224,33,47)"/><text x="413.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.35%)</title><rect x="410" y="292" width="4" height="15" fill="rgb(226,107,14)"/><text x="413.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="418" y="324" width="4" height="15" fill="rgb(205,154,37)"/><text x="421.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.04%)</title><rect x="414" y="308" width="12" height="15" fill="rgb(208,114,32)"/><text x="417.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.35%)</title><rect x="422" y="324" width="4" height="15" fill="rgb(226,189,47)"/><text x="425.00" y="334.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c) (1 samples, 0.35%)</title><rect x="422" y="340" width="4" height="15" fill="rgb(231,112,6)"/><text x="425.00" y="350.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.35%)</title><rect x="426" y="308" width="4" height="15" fill="rgb(243,54,25)"/><text x="429.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 2.08%)</title><rect x="414" y="292" width="24" height="15" fill="rgb(234,225,29)"/><text x="417.00" y="302.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.69%)</title><rect x="430" y="308" width="8" height="15" fill="rgb(249,84,26)"/><text x="433.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.35%)</title><rect x="434" y="324" width="4" height="15" fill="rgb(218,98,16)"/><text x="437.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 2.42%)</title><rect x="414" y="276" width="28" height="15" fill="rgb(214,178,2)"/><text x="417.00" y="286.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.35%)</title><rect x="438" y="292" width="4" height="15" fill="rgb(224,25,51)"/><text x="441.00" y="302.50"></text></g><g><title>0x7f2ead08633d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="438" y="308" width="4" height="15" fill="rgb(241,185,35)"/><text x="441.00" y="318.50"></text></g><g><title>0x7f2ead0a8214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="438" y="324" width="4" height="15" fill="rgb(228,133,43)"/><text x="441.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.35%)</title><rect x="438" y="340" width="4" height="15" fill="rgb(217,219,10)"/><text x="441.00" y="350.50"></text></g><g><title>0x7f2ec1f1de00 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="438" y="356" width="4" height="15" fill="rgb(211,139,1)"/><text x="441.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.81%)</title><rect x="406" y="260" width="44" height="15" fill="rgb(220,218,31)"/><text x="409.00" y="270.50">PyUF..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.69%)</title><rect x="442" y="276" width="8" height="15" fill="rgb(246,66,16)"/><text x="445.00" y="286.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.35%)</title><rect x="446" y="292" width="4" height="15" fill="rgb(254,130,12)"/><text x="449.00" y="302.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.35%)</title><rect x="446" y="308" width="4" height="15" fill="rgb(225,135,10)"/><text x="449.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (32 samples, 11.07%)</title><rect x="324" y="228" width="131" height="15" fill="rgb(218,103,51)"/><text x="327.00" y="238.50">_run (mlprodict/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 4.50%)</title><rect x="401" y="244" width="54" height="15" fill="rgb(248,72,7)"/><text x="404.00" y="254.50">ufunc..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.35%)</title><rect x="450" y="260" width="5" height="15" fill="rgb(241,72,51)"/><text x="453.00" y="270.50"></text></g><g><title>0x7f2ec1dbf120 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="463" y="260" width="4" height="15" fill="rgb(243,177,29)"/><text x="466.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="467" y="260" width="4" height="15" fill="rgb(210,59,36)"/><text x="470.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.35%)</title><rect x="467" y="276" width="4" height="15" fill="rgb(228,19,47)"/><text x="470.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="471" y="308" width="4" height="15" fill="rgb(231,80,10)"/><text x="474.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.35%)</title><rect x="471" y="324" width="4" height="15" fill="rgb(228,137,31)"/><text x="474.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.69%)</title><rect x="471" y="260" width="8" height="15" fill="rgb(251,129,53)"/><text x="474.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.69%)</title><rect x="471" y="276" width="8" height="15" fill="rgb(208,43,27)"/><text x="474.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.69%)</title><rect x="471" y="292" width="8" height="15" fill="rgb(237,0,2)"/><text x="474.00" y="302.50"></text></g><g><title>_fix_unknown_dimension (shape.c) (1 samples, 0.35%)</title><rect x="475" y="308" width="4" height="15" fill="rgb(210,116,46)"/><text x="478.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.69%)</title><rect x="487" y="324" width="8" height="15" fill="rgb(208,125,30)"/><text x="490.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.69%)</title><rect x="487" y="340" width="8" height="15" fill="rgb(215,26,4)"/><text x="490.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.69%)</title><rect x="487" y="356" width="8" height="15" fill="rgb(240,114,16)"/><text x="490.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.69%)</title><rect x="487" y="372" width="8" height="15" fill="rgb(250,180,22)"/><text x="490.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.69%)</title><rect x="487" y="388" width="8" height="15" fill="rgb(242,140,42)"/><text x="490.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.35%)</title><rect x="495" y="372" width="4" height="15" fill="rgb(214,217,20)"/><text x="498.00" y="382.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.35%)</title><rect x="499" y="372" width="5" height="15" fill="rgb(206,105,16)"/><text x="502.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.35%)</title><rect x="499" y="388" width="5" height="15" fill="rgb(231,3,53)"/><text x="502.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.35%)</title><rect x="499" y="404" width="5" height="15" fill="rgb(250,40,0)"/><text x="502.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.35%)</title><rect x="504" y="372" width="4" height="15" fill="rgb(221,112,18)"/><text x="507.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 1.38%)</title><rect x="495" y="356" width="17" height="15" fill="rgb(234,172,9)"/><text x="498.00" y="366.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c) (1 samples, 0.35%)</title><rect x="508" y="372" width="4" height="15" fill="rgb(251,15,51)"/><text x="511.00" y="382.50"></text></g><g><title>array_sum (methods.c) (9 samples, 3.11%)</title><rect x="479" y="260" width="37" height="15" fill="rgb(205,79,49)"/><text x="482.00" y="270.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (9 samples, 3.11%)</title><rect x="479" y="276" width="37" height="15" fill="rgb(236,120,3)"/><text x="482.00" y="286.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (8 samples, 2.77%)</title><rect x="483" y="292" width="33" height="15" fill="rgb(217,52,30)"/><text x="486.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (7 samples, 2.42%)</title><rect x="487" y="308" width="29" height="15" fill="rgb(220,185,2)"/><text x="490.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 1.73%)</title><rect x="495" y="324" width="21" height="15" fill="rgb(232,78,26)"/><text x="498.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.73%)</title><rect x="495" y="340" width="21" height="15" fill="rgb(211,96,40)"/><text x="498.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.35%)</title><rect x="512" y="356" width="4" height="15" fill="rgb(243,198,35)"/><text x="515.00" y="366.50"></text></g><g><title>0x7f2ec0fc0d50 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="512" y="372" width="4" height="15" fill="rgb(240,23,49)"/><text x="515.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.35%)</title><rect x="516" y="276" width="4" height="15" fill="rgb(224,175,1)"/><text x="519.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.35%)</title><rect x="516" y="292" width="4" height="15" fill="rgb(222,160,17)"/><text x="519.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.35%)</title><rect x="516" y="308" width="4" height="15" fill="rgb(251,11,46)"/><text x="519.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.35%)</title><rect x="524" y="292" width="4" height="15" fill="rgb(225,22,31)"/><text x="527.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.69%)</title><rect x="532" y="308" width="8" height="15" fill="rgb(238,224,18)"/><text x="535.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.69%)</title><rect x="532" y="324" width="8" height="15" fill="rgb(247,145,3)"/><text x="535.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="536" y="340" width="4" height="15" fill="rgb(224,195,43)"/><text x="539.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.35%)</title><rect x="540" y="324" width="4" height="15" fill="rgb(244,210,47)"/><text x="543.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.35%)</title><rect x="540" y="340" width="4" height="15" fill="rgb(250,200,38)"/><text x="543.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.35%)</title><rect x="540" y="356" width="4" height="15" fill="rgb(207,215,39)"/><text x="543.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.73%)</title><rect x="528" y="292" width="20" height="15" fill="rgb(245,91,31)"/><text x="531.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.69%)</title><rect x="540" y="308" width="8" height="15" fill="rgb(251,119,23)"/><text x="543.00" y="318.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.35%)</title><rect x="544" y="324" width="4" height="15" fill="rgb(225,58,48)"/><text x="547.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.35%)</title><rect x="548" y="292" width="5" height="15" fill="rgb(205,78,29)"/><text x="551.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 3.11%)</title><rect x="520" y="276" width="37" height="15" fill="rgb(219,127,25)"/><text x="523.00" y="286.50">PyU..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.35%)</title><rect x="553" y="292" width="4" height="15" fill="rgb(230,123,14)"/><text x="556.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.35%)</title><rect x="553" y="308" width="4" height="15" fill="rgb(250,138,51)"/><text x="556.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.35%)</title><rect x="553" y="324" width="4" height="15" fill="rgb(243,149,38)"/><text x="556.00" y="334.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py) (86 samples, 29.76%)</title><rect x="210" y="68" width="351" height="15" fill="rgb(224,0,18)"/><text x="213.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinea..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py) (86 samples, 29.76%)</title><rect x="210" y="84" width="351" height="15" fill="rgb(210,171,1)"/><text x="213.00" y="94.50">setup_profile (bench_LogisticRegression_libline..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py) (86 samples, 29.76%)</title><rect x="210" y="100" width="351" height="15" fill="rgb(211,2,6)"/><text x="213.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (85 samples, 29.41%)</title><rect x="214" y="116" width="347" height="15" fill="rgb(218,122,25)"/><text x="217.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (83 samples, 28.72%)</title><rect x="222" y="132" width="339" height="15" fill="rgb(211,159,48)"/><text x="225.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (82 samples, 28.37%)</title><rect x="226" y="148" width="335" height="15" fill="rgb(206,76,17)"/><text x="229.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (81 samples, 28.03%)</title><rect x="230" y="164" width="331" height="15" fill="rgb(225,104,17)"/><text x="233.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (71 samples, 24.57%)</title><rect x="271" y="180" width="290" height="15" fill="rgb(209,98,51)"/><text x="274.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_n..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (60 samples, 20.76%)</title><rect x="316" y="196" width="245" height="15" fill="rgb(221,17,51)"/><text x="319.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (58 samples, 20.07%)</title><rect x="324" y="212" width="237" height="15" fill="rgb(237,177,35)"/><text x="327.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (26 samples, 9.00%)</title><rect x="455" y="228" width="106" height="15" fill="rgb(207,195,5)"/><text x="458.00" y="238.50">_run (mlprod..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (24 samples, 8.30%)</title><rect x="463" y="244" width="98" height="15" fill="rgb(245,148,39)"/><text x="466.00" y="254.50">norm_l1 (ml..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 3.81%)</title><rect x="516" y="260" width="45" height="15" fill="rgb(238,227,20)"/><text x="519.00" y="270.50">ufun..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.35%)</title><rect x="557" y="276" width="4" height="15" fill="rgb(242,95,8)"/><text x="560.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.35%)</title><rect x="557" y="292" width="4" height="15" fill="rgb(246,65,13)"/><text x="560.00" y="302.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.35%)</title><rect x="610" y="180" width="4" height="15" fill="rgb(244,103,48)"/><text x="613.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.35%)</title><rect x="610" y="196" width="4" height="15" fill="rgb(238,167,42)"/><text x="613.00" y="206.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.35%)</title><rect x="610" y="212" width="4" height="15" fill="rgb(252,126,3)"/><text x="613.00" y="222.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.35%)</title><rect x="630" y="308" width="4" height="15" fill="rgb(245,222,48)"/><text x="633.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.69%)</title><rect x="630" y="244" width="8" height="15" fill="rgb(209,196,33)"/><text x="633.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.69%)</title><rect x="630" y="260" width="8" height="15" fill="rgb(253,217,20)"/><text x="633.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.69%)</title><rect x="630" y="276" width="8" height="15" fill="rgb(224,78,26)"/><text x="633.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.69%)</title><rect x="630" y="292" width="8" height="15" fill="rgb(225,68,52)"/><text x="633.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.35%)</title><rect x="634" y="308" width="4" height="15" fill="rgb(236,21,7)"/><text x="637.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.69%)</title><rect x="638" y="260" width="8" height="15" fill="rgb(248,211,52)"/><text x="641.00" y="270.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.35%)</title><rect x="646" y="260" width="5" height="15" fill="rgb(227,215,33)"/><text x="649.00" y="270.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.35%)</title><rect x="646" y="276" width="5" height="15" fill="rgb(219,186,7)"/><text x="649.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.35%)</title><rect x="646" y="292" width="5" height="15" fill="rgb(214,108,26)"/><text x="649.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.35%)</title><rect x="651" y="308" width="4" height="15" fill="rgb(240,108,43)"/><text x="654.00" y="318.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c) (1 samples, 0.35%)</title><rect x="651" y="324" width="4" height="15" fill="rgb(253,56,21)"/><text x="654.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.35%)</title><rect x="655" y="308" width="4" height="15" fill="rgb(217,150,50)"/><text x="658.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.04%)</title><rect x="651" y="292" width="12" height="15" fill="rgb(240,227,8)"/><text x="654.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.35%)</title><rect x="659" y="308" width="4" height="15" fill="rgb(233,37,46)"/><text x="662.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.35%)</title><rect x="659" y="324" width="4" height="15" fill="rgb(208,38,24)"/><text x="662.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.35%)</title><rect x="663" y="292" width="4" height="15" fill="rgb(225,28,16)"/><text x="666.00" y="302.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.35%)</title><rect x="667" y="292" width="4" height="15" fill="rgb(244,25,26)"/><text x="670.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.35%)</title><rect x="667" y="308" width="4" height="15" fill="rgb(250,136,35)"/><text x="670.00" y="318.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.35%)</title><rect x="667" y="324" width="4" height="15" fill="rgb(226,205,23)"/><text x="670.00" y="334.50"></text></g><g><title>array_sum (methods.c) (15 samples, 5.19%)</title><rect x="614" y="180" width="61" height="15" fill="rgb(217,123,2)"/><text x="617.00" y="190.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (15 samples, 5.19%)</title><rect x="614" y="196" width="61" height="15" fill="rgb(206,229,30)"/><text x="617.00" y="206.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (12 samples, 4.15%)</title><rect x="626" y="212" width="49" height="15" fill="rgb(206,210,29)"/><text x="629.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (11 samples, 3.81%)</title><rect x="630" y="228" width="45" height="15" fill="rgb(220,162,32)"/><text x="633.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 3.11%)</title><rect x="638" y="244" width="37" height="15" fill="rgb(254,108,26)"/><text x="641.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (6 samples, 2.08%)</title><rect x="651" y="260" width="24" height="15" fill="rgb(213,139,51)"/><text x="654.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (6 samples, 2.08%)</title><rect x="651" y="276" width="24" height="15" fill="rgb(225,19,42)"/><text x="654.00" y="286.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.35%)</title><rect x="671" y="292" width="4" height="15" fill="rgb(220,114,46)"/><text x="674.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.35%)</title><rect x="671" y="308" width="4" height="15" fill="rgb(242,51,16)"/><text x="674.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.35%)</title><rect x="700" y="244" width="4" height="15" fill="rgb(213,171,31)"/><text x="703.00" y="254.50"></text></g><g><title>PyArray_Transpose (shape.c) (3 samples, 1.04%)</title><rect x="695" y="196" width="13" height="15" fill="rgb(220,68,19)"/><text x="698.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (3 samples, 1.04%)</title><rect x="695" y="212" width="13" height="15" fill="rgb(230,139,18)"/><text x="698.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 1.04%)</title><rect x="695" y="228" width="13" height="15" fill="rgb(220,79,47)"/><text x="698.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="704" y="244" width="4" height="15" fill="rgb(253,125,9)"/><text x="707.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.69%)</title><rect x="712" y="292" width="8" height="15" fill="rgb(216,147,29)"/><text x="715.00" y="302.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.35%)</title><rect x="716" y="308" width="4" height="15" fill="rgb(219,215,42)"/><text x="719.00" y="318.50"></text></g><g><title>array_add (number.c) (4 samples, 1.38%)</title><rect x="708" y="196" width="16" height="15" fill="rgb(232,8,33)"/><text x="711.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 1.04%)</title><rect x="712" y="212" width="12" height="15" fill="rgb(246,113,48)"/><text x="715.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 1.04%)</title><rect x="712" y="228" width="12" height="15" fill="rgb(248,121,52)"/><text x="715.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 1.04%)</title><rect x="712" y="244" width="12" height="15" fill="rgb(217,33,40)"/><text x="715.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 1.04%)</title><rect x="712" y="260" width="12" height="15" fill="rgb(250,99,5)"/><text x="715.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.04%)</title><rect x="712" y="276" width="12" height="15" fill="rgb(207,25,3)"/><text x="715.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.35%)</title><rect x="720" y="292" width="4" height="15" fill="rgb(237,102,15)"/><text x="723.00" y="302.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.35%)</title><rect x="720" y="308" width="4" height="15" fill="rgb(235,177,15)"/><text x="723.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="724" y="196" width="4" height="15" fill="rgb(232,150,33)"/><text x="727.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.35%)</title><rect x="724" y="212" width="4" height="15" fill="rgb(214,0,2)"/><text x="727.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.35%)</title><rect x="724" y="228" width="4" height="15" fill="rgb(217,41,25)"/><text x="727.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.04%)</title><rect x="785" y="212" width="13" height="15" fill="rgb(228,222,6)"/><text x="788.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (4 samples, 1.38%)</title><rect x="798" y="212" width="16" height="15" fill="rgb(213,226,7)"/><text x="801.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.35%)</title><rect x="814" y="212" width="4" height="15" fill="rgb(234,29,24)"/><text x="817.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="838" y="228" width="4" height="15" fill="rgb(229,42,49)"/><text x="841.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (7 samples, 2.42%)</title><rect x="818" y="212" width="29" height="15" fill="rgb(240,19,14)"/><text x="821.00" y="222.50">_a..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.35%)</title><rect x="842" y="228" width="5" height="15" fill="rgb(222,16,23)"/><text x="845.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (9 samples, 3.11%)</title><rect x="847" y="212" width="36" height="15" fill="rgb(209,48,45)"/><text x="850.00" y="222.50">_nu..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 1.04%)</title><rect x="871" y="228" width="12" height="15" fill="rgb(231,158,47)"/><text x="874.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.69%)</title><rect x="875" y="244" width="8" height="15" fill="rgb(208,126,0)"/><text x="878.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.35%)</title><rect x="883" y="212" width="4" height="15" fill="rgb(243,108,17)"/><text x="886.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.35%)</title><rect x="883" y="228" width="4" height="15" fill="rgb(214,90,37)"/><text x="886.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (4 samples, 1.38%)</title><rect x="887" y="212" width="17" height="15" fill="rgb(221,24,19)"/><text x="890.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (4 samples, 1.38%)</title><rect x="887" y="228" width="17" height="15" fill="rgb(250,217,10)"/><text x="890.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (51 samples, 17.65%)</title><rect x="728" y="196" width="208" height="15" fill="rgb(228,181,11)"/><text x="731.00" y="206.50">check_array (sklearn/utils/..</text></g><g><title>simplefilter (warnings.py) (8 samples, 2.77%)</title><rect x="904" y="212" width="32" height="15" fill="rgb(231,97,11)"/><text x="907.00" y="222.50">si..</text></g><g><title>_add_filter (warnings.py) (6 samples, 2.08%)</title><rect x="912" y="228" width="24" height="15" fill="rgb(213,140,45)"/><text x="915.00" y="238.50">_..</text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.38%)</title><rect x="973" y="228" width="16" height="15" fill="rgb(231,205,16)"/><text x="976.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (16 samples, 5.54%)</title><rect x="936" y="196" width="66" height="15" fill="rgb(230,68,4)"/><text x="939.00" y="206.50">check_i..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (15 samples, 5.19%)</title><rect x="940" y="212" width="62" height="15" fill="rgb(230,22,5)"/><text x="943.00" y="222.50">&lt;listc..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.04%)</title><rect x="989" y="228" width="13" height="15" fill="rgb(250,14,54)"/><text x="992.00" y="238.50"></text></g><g><title>0x7f2ec1dbf120 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1014" y="212" width="4" height="15" fill="rgb(215,200,37)"/><text x="1017.00" y="222.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.69%)</title><rect x="1018" y="212" width="8" height="15" fill="rgb(221,48,8)"/><text x="1021.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.69%)</title><rect x="1026" y="212" width="8" height="15" fill="rgb(217,126,4)"/><text x="1029.00" y="222.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.35%)</title><rect x="1047" y="340" width="4" height="15" fill="rgb(222,179,2)"/><text x="1050.00" y="350.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.69%)</title><rect x="1047" y="324" width="8" height="15" fill="rgb(211,114,24)"/><text x="1050.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1051" y="340" width="4" height="15" fill="rgb(217,141,35)"/><text x="1054.00" y="350.50"></text></g><g><title>0x7f2ec1d568b8 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1051" y="356" width="4" height="15" fill="rgb(230,179,44)"/><text x="1054.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 1.38%)</title><rect x="1043" y="292" width="16" height="15" fill="rgb(224,9,9)"/><text x="1046.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 1.04%)</title><rect x="1047" y="308" width="12" height="15" fill="rgb(209,121,11)"/><text x="1050.00" y="318.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.35%)</title><rect x="1055" y="324" width="4" height="15" fill="rgb(247,137,28)"/><text x="1058.00" y="334.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.35%)</title><rect x="1055" y="340" width="4" height="15" fill="rgb(208,189,28)"/><text x="1058.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (7 samples, 2.42%)</title><rect x="1038" y="276" width="29" height="15" fill="rgb(222,10,54)"/><text x="1041.00" y="286.50">np..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.69%)</title><rect x="1059" y="292" width="8" height="15" fill="rgb(206,149,51)"/><text x="1062.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.35%)</title><rect x="1063" y="308" width="4" height="15" fill="rgb(209,50,43)"/><text x="1066.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="1063" y="324" width="4" height="15" fill="rgb(245,205,36)"/><text x="1066.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="1063" y="340" width="4" height="15" fill="rgb(212,184,3)"/><text x="1066.00" y="350.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.35%)</title><rect x="1067" y="276" width="4" height="15" fill="rgb(246,57,52)"/><text x="1070.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (9 samples, 3.11%)</title><rect x="1038" y="260" width="37" height="15" fill="rgb(206,44,0)"/><text x="1041.00" y="270.50">Npy..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.35%)</title><rect x="1071" y="276" width="4" height="15" fill="rgb(217,163,6)"/><text x="1074.00" y="286.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.35%)</title><rect x="1071" y="292" width="4" height="15" fill="rgb(245,21,44)"/><text x="1074.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="1075" y="260" width="4" height="15" fill="rgb(205,86,13)"/><text x="1078.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.35%)</title><rect x="1075" y="276" width="4" height="15" fill="rgb(212,102,40)"/><text x="1078.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.35%)</title><rect x="1075" y="292" width="4" height="15" fill="rgb(240,99,19)"/><text x="1078.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.35%)</title><rect x="1075" y="308" width="4" height="15" fill="rgb(214,212,47)"/><text x="1078.00" y="318.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c) (1 samples, 0.35%)</title><rect x="1079" y="260" width="4" height="15" fill="rgb(209,77,53)"/><text x="1082.00" y="270.50"></text></g><g><title>0x7f2ec0fc0e80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="1083" y="292" width="4" height="15" fill="rgb(213,30,36)"/><text x="1086.00" y="302.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (102 samples, 35.29%)</title><rect x="675" y="180" width="417" height="15" fill="rgb(253,0,32)"/><text x="678.00" y="190.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (22 samples, 7.61%)</title><rect x="1002" y="196" width="90" height="15" fill="rgb(237,220,42)"/><text x="1005.00" y="206.50">safe_spars..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 4.84%)</title><rect x="1034" y="212" width="58" height="15" fill="rgb(208,19,42)"/><text x="1037.00" y="222.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 4.84%)</title><rect x="1034" y="228" width="58" height="15" fill="rgb(239,86,7)"/><text x="1037.00" y="238.50">PyUFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (14 samples, 4.84%)</title><rect x="1034" y="244" width="58" height="15" fill="rgb(241,203,20)"/><text x="1037.00" y="254.50">PyUFun..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.69%)</title><rect x="1083" y="260" width="9" height="15" fill="rgb(244,21,53)"/><text x="1086.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (2 samples, 0.69%)</title><rect x="1083" y="276" width="9" height="15" fill="rgb(217,98,48)"/><text x="1086.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.35%)</title><rect x="1087" y="292" width="5" height="15" fill="rgb(214,117,35)"/><text x="1090.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.69%)</title><rect x="1092" y="196" width="8" height="15" fill="rgb(238,23,4)"/><text x="1095.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.69%)</title><rect x="1092" y="212" width="8" height="15" fill="rgb(206,220,33)"/><text x="1095.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.69%)</title><rect x="1092" y="228" width="8" height="15" fill="rgb(224,41,20)"/><text x="1095.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.35%)</title><rect x="1096" y="244" width="4" height="15" fill="rgb(215,227,41)"/><text x="1099.00" y="254.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="1104" y="212" width="4" height="15" fill="rgb(239,118,4)"/><text x="1107.00" y="222.50"></text></g><g><title>PyUFunc_DivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="1104" y="228" width="4" height="15" fill="rgb(219,199,44)"/><text x="1107.00" y="238.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="1104" y="244" width="4" height="15" fill="rgb(240,148,27)"/><text x="1107.00" y="254.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.35%)</title><rect x="1108" y="228" width="4" height="15" fill="rgb(240,66,50)"/><text x="1111.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.35%)</title><rect x="1108" y="244" width="4" height="15" fill="rgb(248,173,8)"/><text x="1111.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.35%)</title><rect x="1108" y="260" width="4" height="15" fill="rgb(226,118,16)"/><text x="1111.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1108" y="276" width="4" height="15" fill="rgb(247,111,22)"/><text x="1111.00" y="286.50"></text></g><g><title>0x7f2ec1d567c2 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1108" y="292" width="4" height="15" fill="rgb(212,30,54)"/><text x="1111.00" y="302.50"></text></g><g><title>0x7f2ec1d56769 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1108" y="308" width="4" height="15" fill="rgb(206,161,19)"/><text x="1111.00" y="318.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (1 samples, 0.35%)</title><rect x="1112" y="244" width="4" height="15" fill="rgb(228,80,21)"/><text x="1115.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (1 samples, 0.35%)</title><rect x="1112" y="260" width="4" height="15" fill="rgb(207,85,35)"/><text x="1115.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.35%)</title><rect x="1116" y="244" width="4" height="15" fill="rgb(253,31,45)"/><text x="1119.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.35%)</title><rect x="1116" y="260" width="4" height="15" fill="rgb(214,215,1)"/><text x="1119.00" y="270.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.35%)</title><rect x="1116" y="276" width="4" height="15" fill="rgb(230,127,29)"/><text x="1119.00" y="286.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.35%)</title><rect x="1116" y="292" width="4" height="15" fill="rgb(251,184,11)"/><text x="1119.00" y="302.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.35%)</title><rect x="1116" y="308" width="4" height="15" fill="rgb(254,162,36)"/><text x="1119.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.35%)</title><rect x="1120" y="244" width="4" height="15" fill="rgb(208,162,30)"/><text x="1123.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.38%)</title><rect x="1112" y="228" width="16" height="15" fill="rgb(225,98,38)"/><text x="1115.00" y="238.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.35%)</title><rect x="1124" y="244" width="4" height="15" fill="rgb(226,115,37)"/><text x="1127.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 2.08%)</title><rect x="1108" y="212" width="24" height="15" fill="rgb(247,67,19)"/><text x="1111.00" y="222.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.35%)</title><rect x="1128" y="228" width="4" height="15" fill="rgb(230,68,1)"/><text x="1131.00" y="238.50"></text></g><g><title>0x7f2ead0879a7 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="1128" y="244" width="4" height="15" fill="rgb(249,180,40)"/><text x="1131.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 3.46%)</title><rect x="1100" y="196" width="41" height="15" fill="rgb(240,77,47)"/><text x="1103.00" y="206.50">PyU..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.69%)</title><rect x="1132" y="212" width="9" height="15" fill="rgb(245,183,15)"/><text x="1135.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.35%)</title><rect x="1136" y="228" width="5" height="15" fill="rgb(238,45,13)"/><text x="1139.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (132 samples, 45.67%)</title><rect x="606" y="164" width="539" height="15" fill="rgb(237,117,25)"/><text x="609.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 4.50%)</title><rect x="1092" y="180" width="53" height="15" fill="rgb(245,74,12)"/><text x="1095.00" y="190.50">ufunc..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.35%)</title><rect x="1141" y="196" width="4" height="15" fill="rgb(216,166,46)"/><text x="1144.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 1.73%)</title><rect x="1153" y="180" width="20" height="15" fill="rgb(220,80,45)"/><text x="1156.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.35%)</title><rect x="1169" y="196" width="4" height="15" fill="rgb(245,157,54)"/><text x="1172.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (147 samples, 50.87%)</title><rect x="581" y="132" width="600" height="15" fill="rgb(234,159,22)"/><text x="584.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (146 samples, 50.52%)</title><rect x="585" y="148" width="596" height="15" fill="rgb(246,5,1)"/><text x="588.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (9 samples, 3.11%)</title><rect x="1145" y="164" width="36" height="15" fill="rgb(240,198,37)"/><text x="1148.00" y="174.50">che..</text></g><g><title>isclass (inspect.py) (2 samples, 0.69%)</title><rect x="1173" y="180" width="8" height="15" fill="rgb(226,144,3)"/><text x="1176.00" y="190.50"></text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py) (153 samples, 52.94%)</title><rect x="561" y="68" width="624" height="15" fill="rgb(219,207,11)"/><text x="564.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_n..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py) (153 samples, 52.94%)</title><rect x="561" y="84" width="624" height="15" fill="rgb(223,108,21)"/><text x="564.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py) (153 samples, 52.94%)</title><rect x="561" y="100" width="624" height="15" fill="rgb(236,46,50)"/><text x="564.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozip..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (151 samples, 52.25%)</title><rect x="569" y="116" width="616" height="15" fill="rgb(228,178,43)"/><text x="572.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.35%)</title><rect x="1181" y="132" width="4" height="15" fill="rgb(216,21,25)"/><text x="1184.00" y="142.50"></text></g><g><title>all (289 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(243,81,46)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py) (289 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(248,5,35)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py)</text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_4_12_float_nozipmap.py) (1 samples, 0.35%)</title><rect x="1185" y="68" width="5" height="15" fill="rgb(253,62,50)"/><text x="1188.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (1 samples, 0.35%)</title><rect x="1185" y="84" width="5" height="15" fill="rgb(235,189,1)"/><text x="1188.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.35%)</title><rect x="1185" y="100" width="5" height="15" fill="rgb(238,212,2)"/><text x="1188.00" y="110.50"></text></g><g><title>_pickle_dump (_pickle.c.h) (1 samples, 0.35%)</title><rect x="1185" y="116" width="5" height="15" fill="rgb(244,92,40)"/><text x="1188.00" y="126.50"></text></g><g><title>_pickle_dump_impl (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(239,146,32)"/><text x="1188.00" y="142.50"></text></g><g><title>dump (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="148" width="5" height="15" fill="rgb(225,162,6)"/><text x="1188.00" y="158.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="164" width="5" height="15" fill="rgb(232,8,29)"/><text x="1188.00" y="174.50"></text></g><g><title>save_dict (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(235,176,1)"/><text x="1188.00" y="190.50"></text></g><g><title>batch_dict_exact (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="196" width="5" height="15" fill="rgb(229,141,28)"/><text x="1188.00" y="206.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="212" width="5" height="15" fill="rgb(210,21,12)"/><text x="1188.00" y="222.50"></text></g><g><title>save_reduce (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="228" width="5" height="15" fill="rgb(248,168,45)"/><text x="1188.00" y="238.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="244" width="5" height="15" fill="rgb(222,76,37)"/><text x="1188.00" y="254.50"></text></g><g><title>save_tuple (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="260" width="5" height="15" fill="rgb(216,168,2)"/><text x="1188.00" y="270.50"></text></g><g><title>store_tuple_elements (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="276" width="5" height="15" fill="rgb(247,166,12)"/><text x="1188.00" y="286.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="292" width="5" height="15" fill="rgb(223,92,13)"/><text x="1188.00" y="302.50"></text></g><g><title>save_tuple (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="308" width="5" height="15" fill="rgb(242,145,52)"/><text x="1188.00" y="318.50"></text></g><g><title>memo_put (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="324" width="5" height="15" fill="rgb(236,143,41)"/><text x="1188.00" y="334.50"></text></g><g><title>PyMemoTable_Set (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="340" width="5" height="15" fill="rgb(229,17,35)"/><text x="1188.00" y="350.50"></text></g><g><title>_PyMemoTable_ResizeTable (_pickle.c) (1 samples, 0.35%)</title><rect x="1185" y="356" width="5" height="15" fill="rgb(216,48,40)"/><text x="1188.00" y="366.50"></text></g></g></svg>